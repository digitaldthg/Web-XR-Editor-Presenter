// Copyright 2010 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

// The Module object: Our interface to the outside world. We import
// and export values on it. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to check if Module already exists (e.g. case 3 above).
// Substitution will be replaced with actual code on later stage of the build,
// this way Closure Compiler will not mangle it (e.g. case 4. above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module = typeof Module !== 'undefined' ? Module : {};

// --pre-jses are emitted after the Module integration code, so that they can
// refer to Module (if they choose; they can also define Module)
// {{PRE_JSES}}

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
var key;
for (key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

var arguments_ = [];
var thisProgram = './this.program';
var quit_ = function(status, toThrow) {
  throw toThrow;
};

// Determine the runtime environment we are in. You can customize this by
// setting the ENVIRONMENT setting at compile time (see settings.js).

var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_HAS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;
ENVIRONMENT_IS_WEB = typeof window === 'object';
ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
// A web environment like Electron.js can have Node enabled, so we must
// distinguish between Node-enabled environments and Node environments per se.
// This will allow the former to do things like mount NODEFS.
// Extended check using process.versions fixes issue #8816.
// (Also makes redundant the original check that 'require' is a function.)
ENVIRONMENT_HAS_NODE = typeof process === 'object' && typeof process.versions === 'object' && typeof process.versions.node === 'string';
ENVIRONMENT_IS_NODE = ENVIRONMENT_HAS_NODE && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (Module['ENVIRONMENT']) {
  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)');
}



// `/` should be present at the end if `scriptDirectory` is not empty
var scriptDirectory = '';
function locateFile(path) {
  if (Module['locateFile']) {
    return Module['locateFile'](path, scriptDirectory);
  }
  return scriptDirectory + path;
}

// Hooks that are implemented differently in different runtime environments.
var read_,
    readAsync,
    readBinary,
    setWindowTitle;

var nodeFS;
var nodePath;

if (ENVIRONMENT_IS_NODE) {
  scriptDirectory = __dirname + '/';


  read_ = function shell_read(filename, binary) {
    var ret = tryParseAsDataURI(filename);
    if (ret) {
      return binary ? ret : ret.toString();
    }
    if (!nodeFS) nodeFS = require('fs');
    if (!nodePath) nodePath = require('path');
    filename = nodePath['normalize'](filename);
    return nodeFS['readFileSync'](filename, binary ? null : 'utf8');
  };

  readBinary = function readBinary(filename) {
    var ret = read_(filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };




  if (process['argv'].length > 1) {
    thisProgram = process['argv'][1].replace(/\\/g, '/');
  }

  arguments_ = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  process['on']('unhandledRejection', abort);

  quit_ = function(status) {
    process['exit'](status);
  };

  Module['inspect'] = function () { return '[Emscripten Module object]'; };


} else
if (ENVIRONMENT_IS_SHELL) {


  if (typeof read != 'undefined') {
    read_ = function shell_read(f) {
      var data = tryParseAsDataURI(f);
      if (data) {
        return intArrayToString(data);
      }
      return read(f);
    };
  }

  readBinary = function readBinary(f) {
    var data;
    data = tryParseAsDataURI(f);
    if (data) {
      return data;
    }
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    arguments_ = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    arguments_ = arguments;
  }

  if (typeof quit === 'function') {
    quit_ = function(status) {
      quit(status);
    };
  }

  if (typeof print !== 'undefined') {
    // Prefer to use print/printErr where they exist, as they usually work better.
    if (typeof console === 'undefined') console = {};
    console.log = print;
    console.warn = console.error = typeof printErr !== 'undefined' ? printErr : print;
  }
} else

// Note that this includes Node.js workers when relevant (pthreads is enabled).
// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and
// ENVIRONMENT_HAS_NODE.
if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled
    scriptDirectory = self.location.href;
  } else if (document.currentScript) { // web
    scriptDirectory = document.currentScript.src;
  }
  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.
  // otherwise, slice off the final part of the url to find the script directory.
  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,
  // and scriptDirectory will correctly be replaced with an empty string.
  if (scriptDirectory.indexOf('blob:') !== 0) {
    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/')+1);
  } else {
    scriptDirectory = '';
  }


  // Differentiate the Web Worker from the Node Worker case, as reading must
  // be done differently.
  {


  read_ = function shell_read(url) {
    try {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.send(null);
      return xhr.responseText;
    } catch (err) {
      var data = tryParseAsDataURI(url);
      if (data) {
        return intArrayToString(data);
      }
      throw err;
    }
  };

  if (ENVIRONMENT_IS_WORKER) {
    readBinary = function readBinary(url) {
      try {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, false);
        xhr.responseType = 'arraybuffer';
        xhr.send(null);
        return new Uint8Array(xhr.response);
      } catch (err) {
        var data = tryParseAsDataURI(url);
        if (data) {
          return data;
        }
        throw err;
      }
    };
  }

  readAsync = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
        return;
      }
      var data = tryParseAsDataURI(url);
      if (data) {
        onload(data.buffer);
        return;
      }
      onerror();
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };




  }

  setWindowTitle = function(title) { document.title = title };
} else
{
  throw new Error('environment detection error');
}


// Set up the out() and err() hooks, which are how we can print to stdout or
// stderr, respectively.
var out = Module['print'] || console.log.bind(console);
var err = Module['printErr'] || console.warn.bind(console);

// Merge back in the overrides
for (key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = null;

// Emit code to handle expected values on the Module object. This applies Module.x
// to the proper local x. This has two benefits: first, we only emit it if it is
// expected to arrive, and second, by using a local everywhere else that can be
// minified.
if (Module['arguments']) arguments_ = Module['arguments'];if (!Object.getOwnPropertyDescriptor(Module, 'arguments')) Object.defineProperty(Module, 'arguments', { configurable: true, get: function() { abort('Module.arguments has been replaced with plain arguments_') } });
if (Module['thisProgram']) thisProgram = Module['thisProgram'];if (!Object.getOwnPropertyDescriptor(Module, 'thisProgram')) Object.defineProperty(Module, 'thisProgram', { configurable: true, get: function() { abort('Module.thisProgram has been replaced with plain thisProgram') } });
if (Module['quit']) quit_ = Module['quit'];if (!Object.getOwnPropertyDescriptor(Module, 'quit')) Object.defineProperty(Module, 'quit', { configurable: true, get: function() { abort('Module.quit has been replaced with plain quit_') } });

// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message
// Assertions on removed incoming Module JS APIs.
assert(typeof Module['memoryInitializerPrefixURL'] === 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['pthreadMainPrefixURL'] === 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['cdInitializerPrefixURL'] === 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['filePackagePrefixURL'] === 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['read'] === 'undefined', 'Module.read option was removed (modify read_ in JS)');
assert(typeof Module['readAsync'] === 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');
assert(typeof Module['readBinary'] === 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');
assert(typeof Module['setWindowTitle'] === 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');
if (!Object.getOwnPropertyDescriptor(Module, 'read')) Object.defineProperty(Module, 'read', { configurable: true, get: function() { abort('Module.read has been replaced with plain read_') } });
if (!Object.getOwnPropertyDescriptor(Module, 'readAsync')) Object.defineProperty(Module, 'readAsync', { configurable: true, get: function() { abort('Module.readAsync has been replaced with plain readAsync') } });
if (!Object.getOwnPropertyDescriptor(Module, 'readBinary')) Object.defineProperty(Module, 'readBinary', { configurable: true, get: function() { abort('Module.readBinary has been replaced with plain readBinary') } });
// TODO: add when SDL2 is fixed if (!Object.getOwnPropertyDescriptor(Module, 'setWindowTitle')) Object.defineProperty(Module, 'setWindowTitle', { configurable: true, get: function() { abort('Module.setWindowTitle has been replaced with plain setWindowTitle') } });
var IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';
var PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';
var WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';
var NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';


// TODO remove when SDL2 is fixed (also see above)



// Copyright 2017 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

// {{PREAMBLE_ADDITIONS}}

var STACK_ALIGN = 16;

// stack management, and other functionality that is provided by the compiled code,
// should not be used before it is ready
stackSave = stackRestore = stackAlloc = function() {
  abort('cannot use the stack before compiled code is ready to run, and has provided stack access');
};

function staticAlloc(size) {
  abort('staticAlloc is no longer available at runtime; instead, perform static allocations at compile time (using makeStaticAlloc)');
}

function dynamicAlloc(size) {
  assert(DYNAMICTOP_PTR);
  var ret = HEAP32[DYNAMICTOP_PTR>>2];
  var end = (ret + size + 15) & -16;
  if (end > _emscripten_get_heap_size()) {
    abort('failure to dynamicAlloc - memory growth etc. is not supported there, call malloc/sbrk directly');
  }
  HEAP32[DYNAMICTOP_PTR>>2] = end;
  return ret;
}

function alignMemory(size, factor) {
  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default
  return Math.ceil(size / factor) * factor;
}

function getNativeTypeSize(type) {
  switch (type) {
    case 'i1': case 'i8': return 1;
    case 'i16': return 2;
    case 'i32': return 4;
    case 'i64': return 8;
    case 'float': return 4;
    case 'double': return 8;
    default: {
      if (type[type.length-1] === '*') {
        return 4; // A pointer
      } else if (type[0] === 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);
        return bits / 8;
      } else {
        return 0;
      }
    }
  }
}

function warnOnce(text) {
  if (!warnOnce.shown) warnOnce.shown = {};
  if (!warnOnce.shown[text]) {
    warnOnce.shown[text] = 1;
    err(text);
  }
}

var asm2wasmImports = { // special asm2wasm imports
    "f64-rem": function(x, y) {
        return x % y;
    },
    "debugger": function() {
        debugger;
    }
};



var jsCallStartIndex = 1;
var functionPointers = new Array(0);


// 'sig' parameter is required for the llvm backend but only when func is not
// already a WebAssembly function.
function addFunction(func, sig) {
  assert(typeof func !== 'undefined');


  var base = 0;
  for (var i = base; i < base + 0; i++) {
    if (!functionPointers[i]) {
      functionPointers[i] = func;
      return jsCallStartIndex + i;
    }
  }
  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';

}

function removeFunction(index) {

  functionPointers[index-jsCallStartIndex] = null;
}

var funcWrappers = {};

function getFuncWrapper(func, sig) {
  if (!func) return; // on null pointer, return undefined
  assert(sig);
  if (!funcWrappers[sig]) {
    funcWrappers[sig] = {};
  }
  var sigCache = funcWrappers[sig];
  if (!sigCache[func]) {
    // optimize away arguments usage in common cases
    if (sig.length === 1) {
      sigCache[func] = function dynCall_wrapper() {
        return dynCall(sig, func);
      };
    } else if (sig.length === 2) {
      sigCache[func] = function dynCall_wrapper(arg) {
        return dynCall(sig, func, [arg]);
      };
    } else {
      // general case
      sigCache[func] = function dynCall_wrapper() {
        return dynCall(sig, func, Array.prototype.slice.call(arguments));
      };
    }
  }
  return sigCache[func];
}


function makeBigInt(low, high, unsigned) {
  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));
}

function dynCall(sig, ptr, args) {
  if (args && args.length) {
    assert(args.length == sig.length-1);
    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
  } else {
    assert(sig.length == 1);
    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
    return Module['dynCall_' + sig].call(null, ptr);
  }
}

var tempRet0 = 0;

var setTempRet0 = function(value) {
  tempRet0 = value;
};

var getTempRet0 = function() {
  return tempRet0;
};

function getCompilerSetting(name) {
  throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for getCompilerSetting or emscripten_get_compiler_setting to work';
}

var Runtime = {
  // helpful errors
  getTempRet0: function() { abort('getTempRet0() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
  staticAlloc: function() { abort('staticAlloc() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
  stackAlloc: function() { abort('stackAlloc() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
};

// The address globals begin at. Very low in memory, for code size and optimization opportunities.
// Above 0 is static memory, starting with globals.
// Then the stack.
// Then 'dynamic' memory for sbrk.
var GLOBAL_BASE = 8;




// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html


var wasmBinary;if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];if (!Object.getOwnPropertyDescriptor(Module, 'wasmBinary')) Object.defineProperty(Module, 'wasmBinary', { configurable: true, get: function() { abort('Module.wasmBinary has been replaced with plain wasmBinary') } });
var noExitRuntime;if (Module['noExitRuntime']) noExitRuntime = Module['noExitRuntime'];if (!Object.getOwnPropertyDescriptor(Module, 'noExitRuntime')) Object.defineProperty(Module, 'noExitRuntime', { configurable: true, get: function() { abort('Module.noExitRuntime has been replaced with plain noExitRuntime') } });




// In MINIMAL_RUNTIME, setValue() and getValue() are only available when building with safe heap enabled, for heap safety checking.
// In traditional runtime, setValue() and getValue() are always available (although their use is highly discouraged due to perf penalties)

/** @type {function(number, number, string, boolean=)} */
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}

/** @type {function(number, string, boolean=)} */
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for getValue: ' + type);
    }
  return null;
}





// Wasm globals

var wasmMemory;

// In fastcomp asm.js, we don't need a wasm Table at all.
// In the wasm backend, we polyfill the WebAssembly object,
// so this creates a (non-native-wasm) table for us.


//========================================
// Runtime essentials
//========================================

// whether we are quitting the application. no code should run after this.
// set in exit() and abort()
var ABORT = false;

// set by exit() and abort().  Passed to 'onExit' handler.
// NOTE: This is also used as the process return code code in shell environments
// but only when noExitRuntime is false.
var EXITSTATUS = 0;

/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');
  return func;
}

// C calling interface.
function ccall(ident, returnType, argTypes, args, opts) {
  // For fast lookup of conversion functions
  var toC = {
    'string': function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    },
    'array': function(arr) {
      var ret = stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    }
  };

  function convertReturnValue(ret) {
    if (returnType === 'string') return UTF8ToString(ret);
    if (returnType === 'boolean') return Boolean(ret);
    return ret;
  }

  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  assert(returnType !== 'array', 'Return type should not be "array".');
  if (args) {
    for (var i = 0; i < args.length; i++) {
      var converter = toC[argTypes[i]];
      if (converter) {
        if (stack === 0) stack = stackSave();
        cArgs[i] = converter(args[i]);
      } else {
        cArgs[i] = args[i];
      }
    }
  }
  var ret = func.apply(null, cArgs);

  ret = convertReturnValue(ret);
  if (stack !== 0) stackRestore(stack);
  return ret;
}

function cwrap(ident, returnType, argTypes, opts) {
  return function() {
    return ccall(ident, returnType, argTypes, arguments, opts);
  }
}

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_DYNAMIC = 2; // Cannot be freed except through sbrk
var ALLOC_NONE = 3; // Do not allocate

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc,
    stackAlloc,
    dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var stop;
    ptr = ret;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!runtimeInitialized) return dynamicAlloc(size);
  return _malloc(size);
}




/** @type {function(number, number=)} */
function Pointer_stringify(ptr, length) {
  abort("this function has been removed - you should use UTF8ToString(ptr, maxBytesToRead) instead!");
}

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAPU8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}


// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;

/**
 * @param {number} idx
 * @param {number=} maxBytesToRead
 * @return {string}
 */
function UTF8ArrayToString(u8Array, idx, maxBytesToRead) {
  var endIdx = idx + maxBytesToRead;
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)
  while (u8Array[endPtr] && !(endPtr >= endIdx)) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var str = '';
    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that
    while (idx < endPtr) {
      // For UTF8 byte structure, see:
      // http://en.wikipedia.org/wiki/UTF-8#Description
      // https://www.ietf.org/rfc/rfc2279.txt
      // https://tools.ietf.org/html/rfc3629
      var u0 = u8Array[idx++];
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      var u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      var u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte 0x' + u0.toString(16) + ' encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!');
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (u8Array[idx++] & 63);
      }

      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
  return str;
}

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a
// copy of that string as a Javascript String object.
// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit
//                 this parameter to scan the string until the first \0 byte. If maxBytesToRead is
//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the
//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will
//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)
//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may
//                 throw JS JIT optimizations off, so it is worth to consider consistently using one
//                 style or the other.
/**
 * @param {number} ptr
 * @param {number=} maxBytesToRead
 * @return {string}
 */
function UTF8ToString(ptr, maxBytesToRead) {
  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';
}

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array.
//                    This count should include the null terminator,
//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) {
      var u1 = str.charCodeAt(++i);
      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);
    }
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 3 >= endIdx) break;
      if (u >= 0x200000) warnOnce('Invalid Unicode code point 0x' + u.toString(16) + ' encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF).');
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.
function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) ++len;
    else if (u <= 0x7FF) len += 2;
    else if (u <= 0xFFFF) len += 3;
    else len += 4;
  }
  return len;
}


// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}

function UTF32ToString(ptr) {
  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}

// Allocate heap space for a JS string, and write it there.
// It is the responsibility of the caller to free() that memory.
function allocateUTF8(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = _malloc(size);
  if (ret) stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

// Allocate stack space for a JS string, and write it there.
function allocateUTF8OnStack(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = stackAlloc(size);
  stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
/** @deprecated */
function writeStringToMemory(string, buffer, dontAddNull) {
  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var /** @type {number} */ lastChar, /** @type {number} */ end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}

function writeArrayToMemory(array, buffer) {
  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')
  HEAP8.set(array, buffer);
}

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}




// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP,
/** @type {ArrayBuffer} */
  buffer,
/** @type {Int8Array} */
  HEAP8,
/** @type {Uint8Array} */
  HEAPU8,
/** @type {Int16Array} */
  HEAP16,
/** @type {Uint16Array} */
  HEAPU16,
/** @type {Int32Array} */
  HEAP32,
/** @type {Uint32Array} */
  HEAPU32,
/** @type {Float32Array} */
  HEAPF32,
/** @type {Float64Array} */
  HEAPF64;

function updateGlobalBufferAndViews(buf) {
  buffer = buf;
  Module['HEAP8'] = HEAP8 = new Int8Array(buf);
  Module['HEAP16'] = HEAP16 = new Int16Array(buf);
  Module['HEAP32'] = HEAP32 = new Int32Array(buf);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);
}

var STATIC_BASE = 8,
    STACK_BASE = 67664,
    STACKTOP = STACK_BASE,
    STACK_MAX = 5310544,
    DYNAMIC_BASE = 5310544,
    DYNAMICTOP_PTR = 67472;

assert(STACK_BASE % 16 === 0, 'stack must start aligned');
assert(DYNAMIC_BASE % 16 === 0, 'heap must start aligned');



var TOTAL_STACK = 5242880;
if (Module['TOTAL_STACK']) assert(TOTAL_STACK === Module['TOTAL_STACK'], 'the stack size can no longer be determined at runtime')

var INITIAL_TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 268435456;if (!Object.getOwnPropertyDescriptor(Module, 'TOTAL_MEMORY')) Object.defineProperty(Module, 'TOTAL_MEMORY', { configurable: true, get: function() { abort('Module.TOTAL_MEMORY has been replaced with plain INITIAL_TOTAL_MEMORY') } });

assert(INITIAL_TOTAL_MEMORY >= TOTAL_STACK, 'TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + INITIAL_TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,
       'JS engine does not provide full typed array support');






// In standalone mode, the wasm creates the memory, and the user can't provide it.
// In non-standalone/normal mode, we create the memory here.

// Create the main memory. (Note: this isn't used in STANDALONE_WASM mode since the wasm
// memory is created in the wasm, not in JS.)

  if (Module['buffer']) {
    buffer = Module['buffer'];
  }
  else {
    buffer = new ArrayBuffer(INITIAL_TOTAL_MEMORY);
  }


// If the user provides an incorrect length, just use that length instead rather than providing the user to
// specifically provide the memory length with Module['TOTAL_MEMORY'].
INITIAL_TOTAL_MEMORY = buffer.byteLength;
updateGlobalBufferAndViews(buffer);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;




// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie() {
  assert((STACK_MAX & 3) == 0);
  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;
  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;
  // Also test the global address 0 for integrity.
  // We don't do this with ASan because ASan does its own checks for this.
  HEAP32[0] = 0x63736d65; /* 'emsc' */
}

function checkStackCookie() {
  var cookie1 = HEAPU32[(STACK_MAX >> 2)-1];
  var cookie2 = HEAPU32[(STACK_MAX >> 2)-2];
  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {
    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + cookie2.toString(16) + ' ' + cookie1.toString(16));
  }
  // Also test the global address 0 for integrity.
  // We don't do this with ASan because ASan does its own checks for this.
  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) abort('Runtime error: The application has corrupted its heap memory area (address zero)!');
}

function abortStackOverflow(allocSize) {
  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - stackSave() + allocSize) + ' bytes available!');
}




// Endianness check (note: assumes compiler arch was little-endian)
(function() {
  var h16 = new Int16Array(1);
  var h8 = new Int8Array(h16.buffer);
  h16[0] = 0x6373;
  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';
})();

function abortFnPtrError(ptr, sig) {
	abort("Invalid function pointer " + ptr + " called with signature '" + sig + "'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this). Build with ASSERTIONS=2 for more info.");
}



function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the main() is called

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {

  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }

  callRuntimeCallbacks(__ATPRERUN__);
}

function initRuntime() {
  checkStackCookie();
  assert(!runtimeInitialized);
  runtimeInitialized = true;
  if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
TTY.init();
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  checkStackCookie();
  FS.ignorePermissions = false;
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  checkStackCookie();
  runtimeExited = true;
}

function postRun() {
  checkStackCookie();

  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }

  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}

function addOnExit(cb) {
}

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


assert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_max = Math.max;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;



// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// Module.preRun (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;

  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }

  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            err('still waiting on run dependencies:');
          }
          err('dependency: ' + dep);
        }
        if (shown) {
          err('(end of list)');
        }
      }, 10000);
    }
  } else {
    err('warning: run dependency added without ID');
  }
}

function removeRunDependency(id) {
  runDependencies--;

  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }

  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    err('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


function abort(what) {
  if (Module['onAbort']) {
    Module['onAbort'](what);
  }

  what += '';
  out(what);
  err(what);

  ABORT = true;
  EXITSTATUS = 1;

  var output = 'abort(' + what + ') at ' + stackTrace();
  what = output;

  // Throw a wasm runtime error, because a JS error might be seen as a foreign
  // exception, which means we'd run destructors on it. We need the error to
  // simply make the program stop.
  throw what;
}


var memoryInitializer = null;







// Copyright 2017 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

// Prefix of data URIs emitted by SINGLE_FILE and related options.
var dataURIPrefix = 'data:application/octet-stream;base64,';

// Indicates whether filename is a base64 data URI.
function isDataURI(filename) {
  return String.prototype.startsWith ?
      filename.startsWith(dataURIPrefix) :
      filename.indexOf(dataURIPrefix) === 0;
}






// Globals used by JS i64 conversions
var tempDouble;
var tempI64;

// === Body ===

var ASM_CONSTS = [function($0, $1, $2, $3, $4, $5) { if (!artoolkit["frameMalloc"]) { artoolkit["frameMalloc"] = ({}); } var frameMalloc = artoolkit["frameMalloc"]; frameMalloc["framepointer"] = $1; frameMalloc["framesize"] = $2; frameMalloc["camera"] = $3; frameMalloc["transform"] = $4; frameMalloc["videoLumaPointer"] = $5; },
 function($0, $1, $2, $3) { if (!artoolkit["multiEachMarkerInfo"]) { artoolkit["multiEachMarkerInfo"] = ({}); } var multiEachMarker = artoolkit["multiEachMarkerInfo"]; multiEachMarker['visible'] = $0; multiEachMarker['pattId'] = $1; multiEachMarker['pattType'] = $2; multiEachMarker['width'] = $3; },
 function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32) { var $a = arguments; var i = 12; if (!artoolkit["markerInfo"]) { artoolkit["markerInfo"] = ({ pos: [0,0], line: [[0,0,0], [0,0,0], [0,0,0], [0,0,0]], vertex: [[0,0], [0,0], [0,0], [0,0]] }); } var markerInfo = artoolkit["markerInfo"]; markerInfo["area"] = $0; markerInfo["id"] = $1; markerInfo["idPatt"] = $2; markerInfo["idMatrix"] = $3; markerInfo["dir"] = $4; markerInfo["dirPatt"] = $5; markerInfo["dirMatrix"] = $6; markerInfo["cf"] = $7; markerInfo["cfPatt"] = $8; markerInfo["cfMatrix"] = $9; markerInfo["pos"][0] = $10; markerInfo["pos"][1] = $11; markerInfo["line"][0][0] = $a[i++]; markerInfo["line"][0][1] = $a[i++]; markerInfo["line"][0][2] = $a[i++]; markerInfo["line"][1][0] = $a[i++]; markerInfo["line"][1][1] = $a[i++]; markerInfo["line"][1][2] = $a[i++]; markerInfo["line"][2][0] = $a[i++]; markerInfo["line"][2][1] = $a[i++]; markerInfo["line"][2][2] = $a[i++]; markerInfo["line"][3][0] = $a[i++]; markerInfo["line"][3][1] = $a[i++]; markerInfo["line"][3][2] = $a[i++]; markerInfo["vertex"][0][0] = $a[i++]; markerInfo["vertex"][0][1] = $a[i++]; markerInfo["vertex"][1][0] = $a[i++]; markerInfo["vertex"][1][1] = $a[i++]; markerInfo["vertex"][2][0] = $a[i++]; markerInfo["vertex"][2][1] = $a[i++]; markerInfo["vertex"][3][0] = $a[i++]; markerInfo["vertex"][3][1] = $a[i++]; markerInfo["errorCorrected"] = $a[i++]; },
 function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13) { var $a = arguments; var i = 0; if (!artoolkit["NFTMarkerInfo"]) { artoolkit["NFTMarkerInfo"] = ({ id: 0, error: -1, found: 0, pose: [0,0,0,0, 0,0,0,0, 0,0,0,0] }); } var markerInfo = artoolkit["NFTMarkerInfo"]; markerInfo["id"] = $a[i++]; markerInfo["error"] = $a[i++]; markerInfo["found"] = 1; markerInfo["pose"][0] = $a[i++]; markerInfo["pose"][1] = $a[i++]; markerInfo["pose"][2] = $a[i++]; markerInfo["pose"][3] = $a[i++]; markerInfo["pose"][4] = $a[i++]; markerInfo["pose"][5] = $a[i++]; markerInfo["pose"][6] = $a[i++]; markerInfo["pose"][7] = $a[i++]; markerInfo["pose"][8] = $a[i++]; markerInfo["pose"][9] = $a[i++]; markerInfo["pose"][10] = $a[i++]; markerInfo["pose"][11] = $a[i++]; },
 function($0) { var $a = arguments; var i = 0; if (!artoolkit["NFTMarkerInfo"]) { artoolkit["NFTMarkerInfo"] = ({ id: 0, error: -1, found: 0, pose: [0,0,0,0, 0,0,0,0, 0,0,0,0] }); } var markerInfo = artoolkit["NFTMarkerInfo"]; markerInfo["id"] = $a[i++]; markerInfo["error"] = -1; markerInfo["found"] = 0; markerInfo["pose"][0] = 0; markerInfo["pose"][1] = 0; markerInfo["pose"][2] = 0; markerInfo["pose"][3] = 0; markerInfo["pose"][4] = 0; markerInfo["pose"][5] = 0; markerInfo["pose"][6] = 0; markerInfo["pose"][7] = 0; markerInfo["pose"][8] = 0; markerInfo["pose"][9] = 0; markerInfo["pose"][10] = 0; markerInfo["pose"][11] = 0; }];

function _emscripten_asm_const_iiiiiii(code, a0, a1, a2, a3, a4, a5) {
  return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5);
}

function _emscripten_asm_const_iiiid(code, a0, a1, a2, a3) {
  return ASM_CONSTS[code](a0, a1, a2, a3);
}

function _emscripten_asm_const_iiddddddddddddd(code, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {
  return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

function _emscripten_asm_const_ii(code, a0) {
  return ASM_CONSTS[code](a0);
}

function _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi(code, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32) {
  return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32);
}




// STATICTOP = STATIC_BASE + 67656;
/* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__I_000101() } }, { func: function() { __GLOBAL__sub_I_ARToolKitJS_cpp() } }, { func: function() { ___emscripten_environ_constructor() } }, { func: function() { __GLOBAL__sub_I_bind_cpp() } }, { func: function() { __GLOBAL__sub_I_iostream_cpp() } });


memoryInitializer = "data:application/octet-stream;base64,";





/* no memory initializer */
var tempDoublePtr = 67648
assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}

function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}

// {{PRE_LIBRARY}}


  function demangle(func) {
      var __cxa_demangle_func = Module['___cxa_demangle'] || Module['__cxa_demangle'];
      assert(__cxa_demangle_func);
      try {
        var s = func;
        if (s.startsWith('__Z'))
          s = s.substr(1);
        var len = lengthBytesUTF8(s)+1;
        var buf = _malloc(len);
        stringToUTF8(s, buf, len);
        var status = _malloc(4);
        var ret = __cxa_demangle_func(buf, 0, 0, status);
        if (HEAP32[((status)>>2)] === 0 && ret) {
          return UTF8ToString(ret);
        }
        // otherwise, libcxxabi failed
      } catch(e) {
        // ignore problems here
      } finally {
        if (buf) _free(buf);
        if (status) _free(status);
        if (ret) _free(ret);
      }
      // failure when using libcxxabi, don't demangle
      return func;
    }

  function demangleAll(text) {
      var regex =
        /\b__Z[\w\d_]+/g;
      return text.replace(regex,
        function(x) {
          var y = demangle(x);
          return x === y ? x : (y + ' [' + x + ']');
        });
    }

  function jsStackTrace() {
      var err = new Error();
      if (!err.stack) {
        // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
        // so try that as a special-case.
        try {
          throw new Error(0);
        } catch(e) {
          err = e;
        }
        if (!err.stack) {
          return '(no stack trace available)';
        }
      }
      return err.stack.toString();
    }

  function stackTrace() {
      var js = jsStackTrace();
      if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
      return demangleAll(js);
    }

  
  var ENV={};function ___buildEnvironment(environ) {
      // WARNING: Arbitrary limit!
      var MAX_ENV_VALUES = 64;
      var TOTAL_ENV_SIZE = 1024;
  
      // Statically allocate memory for the environment.
      var poolPtr;
      var envPtr;
      if (!___buildEnvironment.called) {
        ___buildEnvironment.called = true;
        // Set default values. Use string keys for Closure Compiler compatibility.
        ENV['USER'] = 'web_user';
        ENV['LOGNAME'] = 'web_user';
        ENV['PATH'] = '/';
        ENV['PWD'] = '/';
        ENV['HOME'] = '/home/web_user';
        // Browser language detection #8751
        ENV['LANG'] = ((typeof navigator === 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';
        ENV['_'] = thisProgram;
        // Allocate memory.
        poolPtr = getMemory(TOTAL_ENV_SIZE);
        envPtr = getMemory(MAX_ENV_VALUES * 4);
        HEAP32[((envPtr)>>2)]=poolPtr;
        HEAP32[((environ)>>2)]=envPtr;
      } else {
        envPtr = HEAP32[((environ)>>2)];
        poolPtr = HEAP32[((envPtr)>>2)];
      }
  
      // Collect key=value lines.
      var strings = [];
      var totalSize = 0;
      for (var key in ENV) {
        if (typeof ENV[key] === 'string') {
          var line = key + '=' + ENV[key];
          strings.push(line);
          totalSize += line.length;
        }
      }
      if (totalSize > TOTAL_ENV_SIZE) {
        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
      }
  
      // Make new.
      var ptrSize = 4;
      for (var i = 0; i < strings.length; i++) {
        var line = strings[i];
        writeAsciiToMemory(line, poolPtr);
        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;
        poolPtr += line.length + 1;
      }
      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;
    }

  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  
  var ___exception_infos={};
  
  var ___exception_caught= [];
  
  function ___exception_addRef(ptr) {
      if (!ptr) return;
      var info = ___exception_infos[ptr];
      info.refcount++;
    }
  
  function ___exception_deAdjust(adjusted) {
      if (!adjusted || ___exception_infos[adjusted]) return adjusted;
      for (var key in ___exception_infos) {
        var ptr = +key; // the iteration key is a string, and if we throw this, it must be an integer as that is what we look for
        var adj = ___exception_infos[ptr].adjusted;
        var len = adj.length;
        for (var i = 0; i < len; i++) {
          if (adj[i] === adjusted) {
            return ptr;
          }
        }
      }
      return adjusted;
    }function ___cxa_begin_catch(ptr) {
      var info = ___exception_infos[ptr];
      if (info && !info.caught) {
        info.caught = true;
        __ZSt18uncaught_exceptionv.uncaught_exceptions--;
      }
      if (info) info.rethrown = false;
      ___exception_caught.push(ptr);
      ___exception_addRef(___exception_deAdjust(ptr));
      return ptr;
    }

  
  var ___exception_last=0;function ___cxa_throw(ptr, type, destructor) {
      ___exception_infos[ptr] = {
        ptr: ptr,
        adjusted: [ptr],
        type: type,
        destructor: destructor,
        refcount: 0,
        caught: false,
        rethrown: false
      };
      ___exception_last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exceptions = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exceptions++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  function ___gxx_personality_v0() {
    }

  function ___lock() {}

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else err('failed to set errno from JS');
      return value;
    }function ___map_file(pathname, size) {
      ___setErrNo(63);
      return -1;
    }

  
    

  
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up; up--) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      }};
  
  
  var PATH_FS={resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH_FS.resolve(from).substr(1);
        to = PATH_FS.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/emscripten-core/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/emscripten-core/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(43);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(60);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(29);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(6);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(60);
          }
          try {
            for (var i = 0; i < length; i++) {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            }
          } catch (e) {
            throw new FS.ErrnoError(29);
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = Buffer.alloc ? Buffer.alloc(BUFSIZE) : new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              try {
                bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);
              } catch(e) {
                // Cross-platform differences: on Windows, reading EOF throws an exception, but on other OSes,
                // reading EOF returns 0. Uniformize behavior by treating the EOF exception to return 0.
                if (e.toString().indexOf('EOF') != -1) bytesRead = 0;
                else throw e;
              }
  
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
            } else
            if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            out(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            out(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            err(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            err(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(63);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        var prevCapacity = node.contents ? node.contents.length : 0;
        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
        // avoid overshooting the allocation cap by a very large margin.
        var CAPACITY_DOUBLING_MAX = 1024 * 1024;
        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
        var oldContents = node.contents;
        node.contents = new Uint8Array(newCapacity); // Allocate new storage.
        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
        return;
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[44];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(55);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(55);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..'];
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(28);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          // The data buffer should be a typed array view
          assert(!(buffer instanceof ArrayBuffer));
          // If the buffer is located in main memory (HEAP), and if
          // memory can grow, we can't hold on to references of the
          // memory buffer, as they may get invalidated. That means we
          // need to do copy its contents.
          if (buffer.buffer === HEAP8.buffer) {
            // FIXME: this is inefficient as the file packager may have
            //        copied the data into memory already - we may want to
            //        integrate more there and let the file packager loading
            //        code be able to query if memory growth is on or off.
            if (canOwn) {
              warnOnce('file packager has copied file data into memory, but in memory growth we are forced to copy it again (see --no-heap-copy)');
            }
            canOwn = false;
          }
  
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) {
              assert(position === 0, 'canOwn must imply no weird position inside the file');
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {
            position += stream.position;
          } else if (whence === 2) {
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(28);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          // The data buffer should be a typed array view
          assert(!(buffer instanceof ArrayBuffer));
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(43);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                contents.buffer === buffer.buffer ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            // malloc() can lead to growing the heap. If targeting the heap, we need to
            // re-acquire the heap buffer object in case growth had occurred.
            var fromHeap = (buffer.buffer == HEAP8.buffer);
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(48);
            }
            (fromHeap ? HEAP8 : buffer).set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(43);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var ERRNO_MESSAGES={0:"Success",1:"Arg list too long",2:"Permission denied",3:"Address already in use",4:"Address not available",5:"Address family not supported by protocol family",6:"No more processes",7:"Socket already connected",8:"Bad file number",9:"Trying to read unreadable message",10:"Mount device busy",11:"Operation canceled",12:"No children",13:"Connection aborted",14:"Connection refused",15:"Connection reset by peer",16:"File locking deadlock error",17:"Destination address required",18:"Math arg out of domain of func",19:"Quota exceeded",20:"File exists",21:"Bad address",22:"File too large",23:"Host is unreachable",24:"Identifier removed",25:"Illegal byte sequence",26:"Connection already in progress",27:"Interrupted system call",28:"Invalid argument",29:"I/O error",30:"Socket is already connected",31:"Is a directory",32:"Too many symbolic links",33:"Too many open files",34:"Too many links",35:"Message too long",36:"Multihop attempted",37:"File or path name too long",38:"Network interface is not configured",39:"Connection reset by network",40:"Network is unreachable",41:"Too many open files in system",42:"No buffer space available",43:"No such device",44:"No such file or directory",45:"Exec format error",46:"No record locks available",47:"The link has been severed",48:"Not enough core",49:"No message of desired type",50:"Protocol not available",51:"No space left on device",52:"Function not implemented",53:"Socket is not connected",54:"Not a directory",55:"Directory not empty",56:"State not recoverable",57:"Socket operation on non-socket",59:"Not a typewriter",60:"No such device or address",61:"Value too large for defined data type",62:"Previous owner died",63:"Not super-user",64:"Broken pipe",65:"Protocol error",66:"Unknown protocol",67:"Protocol wrong type for socket",68:"Math result not representable",69:"Read only file system",70:"Illegal seek",71:"No such process",72:"Stale file handle",73:"Connection timed out",74:"Text file busy",75:"Cross-device link",100:"Device not a stream",101:"Bad font file fmt",102:"Invalid slot",103:"Invalid request code",104:"No anode",105:"Block device required",106:"Channel number out of range",107:"Level 3 halted",108:"Level 3 reset",109:"Link number out of range",110:"Protocol driver not attached",111:"No CSI structure available",112:"Level 2 halted",113:"Invalid exchange",114:"Invalid request descriptor",115:"Exchange full",116:"No data (for no delay io)",117:"Timer expired",118:"Out of streams resources",119:"Machine is not on the network",120:"Package not installed",121:"The object is remote",122:"Advertise error",123:"Srmount error",124:"Communication error on send",125:"Cross mount point (not really error)",126:"Given log. name not unique",127:"f.d. invalid for this operation",128:"Remote address changed",129:"Can   access a needed shared lib",130:"Accessing a corrupted shared lib",131:".lib section in a.out corrupted",132:"Attempting to link in too many libs",133:"Attempting to exec a shared library",135:"Streams pipe error",136:"Too many users",137:"Socket type not supported",138:"Not supported",139:"Protocol family not supported",140:"Can't send after socket shutdown",141:"Too many references",142:"Host is down",148:"No medium (in tape drive)",156:"Level 2 not synchronized"};
  
  var ERRNO_CODES={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH_FS.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(32);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(32);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var perms = ['r', 'w', 'rw'][flag & 3];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return 2;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return 2;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return 2;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return 2;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return 20;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return 54;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return 10;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return 31;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return 44;
        }
        if (FS.isLink(node.mode)) {
          return 32;
        } else if (FS.isDir(node.mode)) {
          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write
              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)
            return 31;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(33);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(70);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        FS.syncFSRequests++;
  
        if (FS.syncFSRequests > 1) {
          console.log('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function doCallback(err) {
          assert(FS.syncFSRequests > 0);
          FS.syncFSRequests--;
          return callback(err);
        }
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return doCallback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            doCallback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        if (typeof type === 'string') {
          // The filesystem was not included, and instead we have an error
          // message stored in the variable.
          throw type;
        }
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(10);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(10);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(54);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(28);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(28);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(63);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdirTree:function (path, mode) {
        var dirs = path.split('/');
        var d = '';
        for (var i = 0; i < dirs.length; ++i) {
          if (!dirs[i]) continue;
          d += '/' + dirs[i];
          try {
            FS.mkdir(d, mode);
          } catch(e) {
            if (e.errno != 20) throw e;
          }
        }
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH_FS.resolve(oldpath)) {
          throw new FS.ErrnoError(44);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(44);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(63);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(10);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(75);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH_FS.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(28);
        }
        // new path should not be an ancestor of the old path
        relative = PATH_FS.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(55);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(63);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(10);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(63);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(10);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(54);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // According to POSIX, we should map EISDIR to EPERM, but
          // we instead do what Linux does (and we must, as we use
          // the musl linux libc).
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(63);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(10);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(44);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(28);
        }
        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(44);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(63);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(63);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(8);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(63);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(8);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(28);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(63);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(31);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(28);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(8);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(28);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(44);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(20);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(44);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(54);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            console.log("FS.trackingDelegate error on read file: " + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(8);
        }
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
        stream.fd = null;
      },isClosed:function (stream) {
        return stream.fd === null;
      },llseek:function (stream, offset, whence) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(8);
        }
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(70);
        }
        if (whence != 0 && whence != 1 && whence != 2) {
          throw new FS.ErrnoError(28);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(28);
        }
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(8);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(8);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(31);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(28);
        }
        var seeking = typeof position !== 'undefined';
        if (!seeking) {
          position = stream.position;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(70);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(28);
        }
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(8);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(8);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(31);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(28);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = typeof position !== 'undefined';
        if (!seeking) {
          position = stream.position;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(70);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+stream.path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(8);
        }
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(28);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(8);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(43);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(138);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // User requests writing to file (prot & PROT_WRITE != 0).
        // Checking if we have permissions to write to the file unless
        // MAP_PRIVATE flag is set. According to POSIX spec it is possible
        // to write to file opened in read-only mode with MAP_PRIVATE flag,
        // as all modifications will be visible only in the memory of
        // the current process.
        if ((prot & 2) !== 0
            && (flags & 2) === 0
            && (stream.flags & 2097155) !== 2) {
          throw new FS.ErrnoError(2);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(2);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(43);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(59);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (typeof data === 'string') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
        } else if (ArrayBuffer.isView(data)) {
          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
        } else {
          throw new Error('Unsupported data type');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (lookup.node === null) {
          throw new FS.ErrnoError(44);
        }
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(54);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto === 'object' && typeof crypto['getRandomValues'] === 'function') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else
        if (ENVIRONMENT_IS_NODE) {
          // for nodejs with or without crypto support included
          try {
            var crypto_module = require('crypto');
            // nodejs has crypto support
            random_device = function() { return crypto_module['randomBytes'](1)[0]; };
          } catch (e) {
            // nodejs doesn't have crypto support
          }
        } else
        {}
        if (!random_device) {
          // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096
          random_device = function() { abort("no cryptographic support found for random_device. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };"); };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 511 /* 0777 */, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(8);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        var stdout = FS.open('/dev/stdout', 'w');
        var stderr = FS.open('/dev/stderr', 'w');
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
  
          // Try to get a maximally helpful stack trace. On Node.js, getting Error.stack
          // now ensures it shows what we want.
          if (this.stack) {
            // Define the stack property for Node.js 4, which otherwise errors on the next line.
            Object.defineProperty(this, "stack", { value: (new Error).stack, writable: true });
            this.stack = demangleAll(this.stack);
          }
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [44].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
  
        FS.filesystems = {
          'MEMFS': MEMFS,
        };
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH_FS.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(29);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(6);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(29);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (read_) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(read_(obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(29);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        };
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        };
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
  
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          if (usesGzip || !datalength) {
            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file
            datalength = this.getter(0).length;
            chunkSize = datalength;
            console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
          }
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        };
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperties(lazyArray, {
            length: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._length;
              }
            },
            chunkSize: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._chunkSize;
              }
            }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperties(node, {
          usedBytes: {
            get: function() { return this.contents.length; }
          }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(29);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(29);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init(); // XXX perhaps this method should move onto Browser?
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(8);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -54;
          }
          throw e;
        }
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        (tempI64 = [stat.size>>>0,(tempDouble=stat.size,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[(((buf)+(40))>>2)]=tempI64[0],HEAP32[(((buf)+(44))>>2)]=tempI64[1]);
        HEAP32[(((buf)+(48))>>2)]=4096;
        HEAP32[(((buf)+(52))>>2)]=stat.blocks;
        HEAP32[(((buf)+(56))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(76))>>2)]=0;
        (tempI64 = [stat.ino>>>0,(tempDouble=stat.ino,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[(((buf)+(80))>>2)]=tempI64[0],HEAP32[(((buf)+(84))>>2)]=tempI64[1]);
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -28;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -28;
        var ret = FS.readlink(path);
  
        var len = Math.min(bufsize, lengthBytesUTF8(ret));
        var endChar = HEAP8[buf+len];
        stringToUTF8(ret, buf, bufsize+1);
        // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)
        // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.
        HEAP8[buf+len] = endChar;
  
        return len;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -28;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        if (!node) {
          return -44;
        }
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -2;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.read(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.write(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = UTF8ToString(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function (fd) {
        // TODO: when all syscalls use wasi, can remove the next line
        if (fd === undefined) fd = SYSCALLS.get();
        var stream = FS.getStream(fd);
        if (!stream) throw new FS.ErrnoError(8);
        return stream;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // fcntl64
      var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
      switch (cmd) {
        case 0: {
          var arg = SYSCALLS.get();
          if (arg < 0) {
            return -28;
          }
          var newStream;
          newStream = FS.open(stream.path, stream.flags, 0, arg);
          return newStream.fd;
        }
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          return stream.flags;
        case 4: {
          var arg = SYSCALLS.get();
          stream.flags |= arg;
          return 0;
        }
        case 12:
        /* case 12: Currently in musl F_GETLK64 has same value as F_GETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */ {
          
          var arg = SYSCALLS.get();
          var offset = 0;
          // We're always unlocked.
          HEAP16[(((arg)+(offset))>>1)]=2;
          return 0;
        }
        case 13:
        case 14:
        /* case 13: Currently in musl F_SETLK64 has same value as F_SETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */
        /* case 14: Currently in musl F_SETLKW64 has same value as F_SETLKW, so omitted to avoid duplicate case blocks. If that changes, uncomment this */
          
          
          return 0; // Pretend that the locking is successful.
        case 16:
        case 8:
          return -28; // These are for sockets. We don't have them fully implemented yet.
        case 9:
          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.
          ___setErrNo(28);
          return -1;
        default: {
          return -28;
        }
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // open
      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get(); // optional TODO
      var stream = FS.open(pathname, flags, mode);
      return stream.fd;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21509:
        case 21505: {
          if (!stream.tty) return -59;
          return 0;
        }
        case 21510:
        case 21511:
        case 21512:
        case 21506:
        case 21507:
        case 21508: {
          if (!stream.tty) return -59;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -59;
          var argp = SYSCALLS.get();
          HEAP32[((argp)>>2)]=0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -59;
          return -28; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        case 21523: {
          // TODO: in theory we should write to the winsize struct that gets
          // passed in, but for now musl doesn't read anything on it
          if (!stream.tty) return -59;
          return 0;
        }
        case 21524: {
          // TODO: technically, this ioctl call should change the window size.
          // but, since emscripten doesn't have any concept of a terminal window
          // yet, we'll just silently throw it away as we do TIOCGWINSZ
          if (!stream.tty) return -59;
          return 0;
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  function __emscripten_syscall_munmap(addr, len) {
      if (addr === -1 || len === 0) {
        return -28;
      }
      // TODO: support unmmap'ing parts of allocations
      var info = SYSCALLS.mappings[addr];
      if (!info) return 0;
      if (len === info.len) {
        var stream = FS.getStream(info.fd);
        SYSCALLS.doMsync(addr, stream, len, info.flags);
        FS.munmap(stream);
        SYSCALLS.mappings[addr] = null;
        if (info.allocated) {
          _free(info.malloc);
        }
      }
      return 0;
    }function ___syscall91(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // munmap
      var addr = SYSCALLS.get(), len = SYSCALLS.get();
      return __emscripten_syscall_munmap(addr, len);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  
   
  
   
  
     

  function ___unlock() {}

  
  function _fd_close(fd) {try {
  
      var stream = SYSCALLS.getStreamFromFD(fd);
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return e.errno;
  }
  }function ___wasi_fd_close() {
  return _fd_close.apply(null, arguments)
  }

  
  function _fd_read(fd, iov, iovcnt, pnum) {try {
  
      var stream = SYSCALLS.getStreamFromFD(fd);
      var num = SYSCALLS.doReadv(stream, iov, iovcnt);
      HEAP32[((pnum)>>2)]=num
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return e.errno;
  }
  }function ___wasi_fd_read() {
  return _fd_read.apply(null, arguments)
  }

  
  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {try {
  
      var stream = SYSCALLS.getStreamFromFD(fd);
      var HIGH_OFFSET = 0x100000000; // 2^32
      // use an unsigned operator on low and shift high by 32-bits
      var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);
  
      var DOUBLE_LIMIT = 0x20000000000000; // 2^53
      // we also check for equality since DOUBLE_LIMIT + 1 == DOUBLE_LIMIT
      if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {
        return -61;
      }
  
      FS.llseek(stream, offset, whence);
      (tempI64 = [stream.position>>>0,(tempDouble=stream.position,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((newOffset)>>2)]=tempI64[0],HEAP32[(((newOffset)+(4))>>2)]=tempI64[1]);
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return e.errno;
  }
  }function ___wasi_fd_seek() {
  return _fd_seek.apply(null, arguments)
  }

  
  function _fd_write(fd, iov, iovcnt, pnum) {try {
  
      var stream = SYSCALLS.getStreamFromFD(fd);
      var num = SYSCALLS.doWritev(stream, iov, iovcnt);
      HEAP32[((pnum)>>2)]=num
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return e.errno;
  }
  }function ___wasi_fd_write() {
  return _fd_write.apply(null, arguments)
  }

  
  function getShiftFromSize(size) {
      switch (size) {
          case 1: return 0;
          case 2: return 1;
          case 4: return 2;
          case 8: return 3;
          default:
              throw new TypeError('Unknown type size: ' + size);
      }
    }
  
  
  
  function embind_init_charCodes() {
      var codes = new Array(256);
      for (var i = 0; i < 256; ++i) {
          codes[i] = String.fromCharCode(i);
      }
      embind_charCodes = codes;
    }var embind_charCodes=undefined;function readLatin1String(ptr) {
      var ret = "";
      var c = ptr;
      while (HEAPU8[c]) {
          ret += embind_charCodes[HEAPU8[c++]];
      }
      return ret;
    }
  
  
  var awaitingDependencies={};
  
  var registeredTypes={};
  
  var typeDependencies={};
  
  
  
  
  
  
  var char_0=48;
  
  var char_9=57;function makeLegalFunctionName(name) {
      if (undefined === name) {
          return '_unknown';
      }
      name = name.replace(/[^a-zA-Z0-9_]/g, '$');
      var f = name.charCodeAt(0);
      if (f >= char_0 && f <= char_9) {
          return '_' + name;
      } else {
          return name;
      }
    }function createNamedFunction(name, body) {
      name = makeLegalFunctionName(name);
      /*jshint evil:true*/
      return new Function(
          "body",
          "return function " + name + "() {\n" +
          "    \"use strict\";" +
          "    return body.apply(this, arguments);\n" +
          "};\n"
      )(body);
    }function extendError(baseErrorType, errorName) {
      var errorClass = createNamedFunction(errorName, function(message) {
          this.name = errorName;
          this.message = message;
  
          var stack = (new Error(message)).stack;
          if (stack !== undefined) {
              this.stack = this.toString() + '\n' +
                  stack.replace(/^Error(:[^\n]*)?\n/, '');
          }
      });
      errorClass.prototype = Object.create(baseErrorType.prototype);
      errorClass.prototype.constructor = errorClass;
      errorClass.prototype.toString = function() {
          if (this.message === undefined) {
              return this.name;
          } else {
              return this.name + ': ' + this.message;
          }
      };
  
      return errorClass;
    }var BindingError=undefined;function throwBindingError(message) {
      throw new BindingError(message);
    }
  
  
  
  var InternalError=undefined;function throwInternalError(message) {
      throw new InternalError(message);
    }function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
      myTypes.forEach(function(type) {
          typeDependencies[type] = dependentTypes;
      });
  
      function onComplete(typeConverters) {
          var myTypeConverters = getTypeConverters(typeConverters);
          if (myTypeConverters.length !== myTypes.length) {
              throwInternalError('Mismatched type converter count');
          }
          for (var i = 0; i < myTypes.length; ++i) {
              registerType(myTypes[i], myTypeConverters[i]);
          }
      }
  
      var typeConverters = new Array(dependentTypes.length);
      var unregisteredTypes = [];
      var registered = 0;
      dependentTypes.forEach(function(dt, i) {
          if (registeredTypes.hasOwnProperty(dt)) {
              typeConverters[i] = registeredTypes[dt];
          } else {
              unregisteredTypes.push(dt);
              if (!awaitingDependencies.hasOwnProperty(dt)) {
                  awaitingDependencies[dt] = [];
              }
              awaitingDependencies[dt].push(function() {
                  typeConverters[i] = registeredTypes[dt];
                  ++registered;
                  if (registered === unregisteredTypes.length) {
                      onComplete(typeConverters);
                  }
              });
          }
      });
      if (0 === unregisteredTypes.length) {
          onComplete(typeConverters);
      }
    }function registerType(rawType, registeredInstance, options) {
      options = options || {};
  
      if (!('argPackAdvance' in registeredInstance)) {
          throw new TypeError('registerType registeredInstance requires argPackAdvance');
      }
  
      var name = registeredInstance.name;
      if (!rawType) {
          throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
      }
      if (registeredTypes.hasOwnProperty(rawType)) {
          if (options.ignoreDuplicateRegistrations) {
              return;
          } else {
              throwBindingError("Cannot register type '" + name + "' twice");
          }
      }
  
      registeredTypes[rawType] = registeredInstance;
      delete typeDependencies[rawType];
  
      if (awaitingDependencies.hasOwnProperty(rawType)) {
          var callbacks = awaitingDependencies[rawType];
          delete awaitingDependencies[rawType];
          callbacks.forEach(function(cb) {
              cb();
          });
      }
    }function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
      var shift = getShiftFromSize(size);
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(wt) {
              // ambiguous emscripten ABI: sometimes return values are
              // true or false, and sometimes integers (0 or 1)
              return !!wt;
          },
          'toWireType': function(destructors, o) {
              return o ? trueValue : falseValue;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': function(pointer) {
              // TODO: if heap is fixed (like in asm.js) this could be executed outside
              var heap;
              if (size === 1) {
                  heap = HEAP8;
              } else if (size === 2) {
                  heap = HEAP16;
              } else if (size === 4) {
                  heap = HEAP32;
              } else {
                  throw new TypeError("Unknown boolean type size: " + name);
              }
              return this['fromWireType'](heap[pointer >> shift]);
          },
          destructorFunction: null, // This type does not need a destructor
      });
    }

  function __embind_register_constant(name, type, value) {
      name = readLatin1String(name);
      whenDependentTypesAreResolved([], [type], function(type) {
          type = type[0];
          Module[name] = type['fromWireType'](value);
          return [];
      });
    }

  
  
  var emval_free_list=[];
  
  var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle) {
      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
          emval_handle_array[handle] = undefined;
          emval_free_list.push(handle);
      }
    }
  
  
  
  function count_emval_handles() {
      var count = 0;
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              ++count;
          }
      }
      return count;
    }
  
  function get_first_emval() {
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              return emval_handle_array[i];
          }
      }
      return null;
    }function init_emval() {
      Module['count_emval_handles'] = count_emval_handles;
      Module['get_first_emval'] = get_first_emval;
    }function __emval_register(value) {
  
      switch(value){
        case undefined :{ return 1; }
        case null :{ return 2; }
        case true :{ return 3; }
        case false :{ return 4; }
        default:{
          var handle = emval_free_list.length ?
              emval_free_list.pop() :
              emval_handle_array.length;
  
          emval_handle_array[handle] = {refcount: 1, value: value};
          return handle;
          }
        }
    }
  
  function simpleReadValueFromPointer(pointer) {
      return this['fromWireType'](HEAPU32[pointer >> 2]);
    }function __embind_register_emval(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(handle) {
              var rv = emval_handle_array[handle].value;
              __emval_decref(handle);
              return rv;
          },
          'toWireType': function(destructors, value) {
              return __emval_register(value);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: null, // This type does not need a destructor
  
          // TODO: do we need a deleteObject here?  write a test where
          // emval is passed into JS via an interface
      });
    }

  
  function _embind_repr(v) {
      if (v === null) {
          return 'null';
      }
      var t = typeof v;
      if (t === 'object' || t === 'array' || t === 'function') {
          return v.toString();
      } else {
          return '' + v;
      }
    }
  
  function floatReadValueFromPointer(name, shift) {
      switch (shift) {
          case 2: return function(pointer) {
              return this['fromWireType'](HEAPF32[pointer >> 2]);
          };
          case 3: return function(pointer) {
              return this['fromWireType'](HEAPF64[pointer >> 3]);
          };
          default:
              throw new TypeError("Unknown float type: " + name);
      }
    }function __embind_register_float(rawType, name, size) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              return value;
          },
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following if() and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              return value;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': floatReadValueFromPointer(name, shift),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  
  
  function new_(constructor, argumentList) {
      if (!(constructor instanceof Function)) {
          throw new TypeError('new_ called with constructor type ' + typeof(constructor) + " which is not a function");
      }
  
      /*
       * Previously, the following line was just:
  
       function dummy() {};
  
       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even though at creation, the 'dummy' has the
       * correct constructor name.  Thus, objects created with IMVU.new would show up in the debugger as 'dummy', which
       * isn't very helpful.  Using IMVU.createNamedFunction addresses the issue.  Doublely-unfortunately, there's no way
       * to write a test for this behavior.  -NRD 2013.02.22
       */
      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});
      dummy.prototype = constructor.prototype;
      var obj = new dummy;
  
      var r = constructor.apply(obj, argumentList);
      return (r instanceof Object) ? r : obj;
    }
  
  function runDestructors(destructors) {
      while (destructors.length) {
          var ptr = destructors.pop();
          var del = destructors.pop();
          del(ptr);
      }
    }function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
      // humanName: a human-readable string name for the function to be generated.
      // argTypes: An array that contains the embind type objects for all types in the function signature.
      //    argTypes[0] is the type object for the function return value.
      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.
      //    argTypes[2...] are the actual function parameters.
      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.
      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.
      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.
      var argCount = argTypes.length;
  
      if (argCount < 2) {
          throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
      }
  
      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);
  
      // Free functions with signature "void function()" do not need an invoker that marshalls between wire types.
  // TODO: This omits argument count check - enable only at -O3 or similar.
  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == "void" && !isClassMethodFunc) {
  //       return FUNCTION_TABLE[fn];
  //    }
  
  
      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.
      // TODO: Remove this completely once all function invokers are being dynamically generated.
      var needsDestructorStack = false;
  
      for(var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.
          if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack
              needsDestructorStack = true;
              break;
          }
      }
  
      var returns = (argTypes[0].name !== "void");
  
      var argsList = "";
      var argsListWired = "";
      for(var i = 0; i < argCount - 2; ++i) {
          argsList += (i!==0?", ":"")+"arg"+i;
          argsListWired += (i!==0?", ":"")+"arg"+i+"Wired";
      }
  
      var invokerFnBody =
          "return function "+makeLegalFunctionName(humanName)+"("+argsList+") {\n" +
          "if (arguments.length !== "+(argCount - 2)+") {\n" +
              "throwBindingError('function "+humanName+" called with ' + arguments.length + ' arguments, expected "+(argCount - 2)+" args!');\n" +
          "}\n";
  
  
      if (needsDestructorStack) {
          invokerFnBody +=
              "var destructors = [];\n";
      }
  
      var dtorStack = needsDestructorStack ? "destructors" : "null";
      var args1 = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"];
      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];
  
  
      if (isClassMethodFunc) {
          invokerFnBody += "var thisWired = classParam.toWireType("+dtorStack+", this);\n";
      }
  
      for(var i = 0; i < argCount - 2; ++i) {
          invokerFnBody += "var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n";
          args1.push("argType"+i);
          args2.push(argTypes[i+2]);
      }
  
      if (isClassMethodFunc) {
          argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
      }
  
      invokerFnBody +=
          (returns?"var rv = ":"") + "invoker(fn"+(argsListWired.length>0?", ":"")+argsListWired+");\n";
  
      if (needsDestructorStack) {
          invokerFnBody += "runDestructors(destructors);\n";
      } else {
          for(var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.
              var paramName = (i === 1 ? "thisWired" : ("arg"+(i - 2)+"Wired"));
              if (argTypes[i].destructorFunction !== null) {
                  invokerFnBody += paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n";
                  args1.push(paramName+"_dtor");
                  args2.push(argTypes[i].destructorFunction);
              }
          }
      }
  
      if (returns) {
          invokerFnBody += "var ret = retType.fromWireType(rv);\n" +
                           "return ret;\n";
      } else {
      }
      invokerFnBody += "}\n";
  
      args1.push(invokerFnBody);
  
      var invokerFunction = new_(Function, args1).apply(null, args2);
      return invokerFunction;
    }
  
  
  function ensureOverloadTable(proto, methodName, humanName) {
      if (undefined === proto[methodName].overloadTable) {
          var prevFunc = proto[methodName];
          // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.
          proto[methodName] = function() {
              // TODO This check can be removed in -O3 level "unsafe" optimizations.
              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
                  throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
              }
              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
          };
          // Move the previous function into the overload table.
          proto[methodName].overloadTable = [];
          proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
      }
    }function exposePublicSymbol(name, value, numArguments) {
      if (Module.hasOwnProperty(name)) {
          if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {
              throwBindingError("Cannot register public name '" + name + "' twice");
          }
  
          // We are exposing a function with the same name as an existing function. Create an overload table and a function selector
          // that routes between the two.
          ensureOverloadTable(Module, name, name);
          if (Module.hasOwnProperty(numArguments)) {
              throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
          }
          // Add the new function into the overload table.
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          if (undefined !== numArguments) {
              Module[name].numArguments = numArguments;
          }
      }
    }
  
  function heap32VectorToArray(count, firstElement) {
      var array = [];
      for (var i = 0; i < count; i++) {
          array.push(HEAP32[(firstElement >> 2) + i]);
      }
      return array;
    }
  
  function replacePublicSymbol(name, value, numArguments) {
      if (!Module.hasOwnProperty(name)) {
          throwInternalError('Replacing nonexistant public symbol');
      }
      // If there's an overload table for this symbol, replace the symbol in the overload table instead.
      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          Module[name].argCount = numArguments;
      }
    }
  
  function embind__requireFunction(signature, rawFunction) {
      signature = readLatin1String(signature);
  
      function makeDynCaller(dynCall) {
          var args = [];
          for (var i = 1; i < signature.length; ++i) {
              args.push('a' + i);
          }
  
          var name = 'dynCall_' + signature + '_' + rawFunction;
          var body = 'return function ' + name + '(' + args.join(', ') + ') {\n';
          body    += '    return dynCall(rawFunction' + (args.length ? ', ' : '') + args.join(', ') + ');\n';
          body    += '};\n';
  
          return (new Function('dynCall', 'rawFunction', body))(dynCall, rawFunction);
      }
  
      var fp;
      if (Module['FUNCTION_TABLE_' + signature] !== undefined) {
          fp = Module['FUNCTION_TABLE_' + signature][rawFunction];
      } else if (typeof FUNCTION_TABLE !== "undefined") {
          fp = FUNCTION_TABLE[rawFunction];
      } else {
          // asm.js does not give direct access to the function tables,
          // and thus we must go through the dynCall interface which allows
          // calling into a signature's function table by pointer value.
          //
          // https://github.com/dherman/asm.js/issues/83
          //
          // This has three main penalties:
          // - dynCall is another function call in the path from JavaScript to C++.
          // - JITs may not predict through the function table indirection at runtime.
          var dc = Module['dynCall_' + signature];
          if (dc === undefined) {
              // We will always enter this branch if the signature
              // contains 'f' and PRECISE_F32 is not enabled.
              //
              // Try again, replacing 'f' with 'd'.
              dc = Module['dynCall_' + signature.replace(/f/g, 'd')];
              if (dc === undefined) {
                  throwBindingError("No dynCall invoker for signature: " + signature);
              }
          }
          fp = makeDynCaller(dc);
      }
  
      if (typeof fp !== "function") {
          throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
      }
      return fp;
    }
  
  
  var UnboundTypeError=undefined;
  
  function getTypeName(type) {
      var ptr = ___getTypeName(type);
      var rv = readLatin1String(ptr);
      _free(ptr);
      return rv;
    }function throwUnboundTypeError(message, types) {
      var unboundTypes = [];
      var seen = {};
      function visit(type) {
          if (seen[type]) {
              return;
          }
          if (registeredTypes[type]) {
              return;
          }
          if (typeDependencies[type]) {
              typeDependencies[type].forEach(visit);
              return;
          }
          unboundTypes.push(type);
          seen[type] = true;
      }
      types.forEach(visit);
  
      throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));
    }function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {
      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      name = readLatin1String(name);
  
      rawInvoker = embind__requireFunction(signature, rawInvoker);
  
      exposePublicSymbol(name, function() {
          throwUnboundTypeError('Cannot call ' + name + ' due to unbound types', argTypes);
      }, argCount - 1);
  
      whenDependentTypesAreResolved([], argTypes, function(argTypes) {
          var invokerArgsArray = [argTypes[0] /* return value */, null /* no class 'this'*/].concat(argTypes.slice(1) /* actual params */);
          replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null /* no class 'this'*/, rawInvoker, fn), argCount - 1);
          return [];
      });
    }

  
  function integerReadValueFromPointer(name, shift, signed) {
      // integers are quite common, so generate very specialized functions
      switch (shift) {
          case 0: return signed ?
              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :
              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };
          case 1: return signed ?
              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :
              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };
          case 2: return signed ?
              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :
              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };
          default:
              throw new TypeError("Unknown integer type: " + name);
      }
    }function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
      name = readLatin1String(name);
      if (maxRange === -1) { // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come out as 'i32 -1'. Always treat those as max u32.
          maxRange = 4294967295;
      }
  
      var shift = getShiftFromSize(size);
  
      var fromWireType = function(value) {
          return value;
      };
  
      if (minRange === 0) {
          var bitshift = 32 - 8*size;
          fromWireType = function(value) {
              return (value << bitshift) >>> bitshift;
          };
      }
  
      var isUnsignedType = (name.indexOf('unsigned') != -1);
  
      registerType(primitiveType, {
          name: name,
          'fromWireType': fromWireType,
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following two if()s and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              if (value < minRange || value > maxRange) {
                  throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');
              }
              return isUnsignedType ? (value >>> 0) : (value | 0);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  function __embind_register_memory_view(rawType, dataTypeIndex, name) {
      var typeMapping = [
          Int8Array,
          Uint8Array,
          Int16Array,
          Uint16Array,
          Int32Array,
          Uint32Array,
          Float32Array,
          Float64Array,
      ];
  
      var TA = typeMapping[dataTypeIndex];
  
      function decodeMemoryView(handle) {
          handle = handle >> 2;
          var heap = HEAPU32;
          var size = heap[handle]; // in elements
          var data = heap[handle + 1]; // byte offset into emscripten heap
          return new TA(heap['buffer'], data, size);
      }
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': decodeMemoryView,
          'argPackAdvance': 8,
          'readValueFromPointer': decodeMemoryView,
      }, {
          ignoreDuplicateRegistrations: true,
      });
    }

  function __embind_register_std_string(rawType, name) {
      name = readLatin1String(name);
      var stdStringIsUTF8
      //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>
      = (name === "std::string");
  
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var length = HEAPU32[value >> 2];
  
              var str;
              if(stdStringIsUTF8) {
                  //ensure null termination at one-past-end byte if not present yet
                  var endChar = HEAPU8[value + 4 + length];
                  var endCharSwap = 0;
                  if(endChar != 0)
                  {
                    endCharSwap = endChar;
                    HEAPU8[value + 4 + length] = 0;
                  }
  
                  var decodeStartPtr = value + 4;
                  //looping here to support possible embedded '0' bytes
                  for (var i = 0; i <= length; ++i) {
                    var currentBytePtr = value + 4 + i;
                    if(HEAPU8[currentBytePtr] == 0)
                    {
                      var stringSegment = UTF8ToString(decodeStartPtr);
                      if(str === undefined)
                        str = stringSegment;
                      else
                      {
                        str += String.fromCharCode(0);
                        str += stringSegment;
                      }
                      decodeStartPtr = currentBytePtr + 1;
                    }
                  }
  
                  if(endCharSwap != 0)
                    HEAPU8[value + 4 + length] = endCharSwap;
              } else {
                  var a = new Array(length);
                  for (var i = 0; i < length; ++i) {
                      a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
                  }
                  str = a.join('');
              }
  
              _free(value);
  
              return str;
          },
          'toWireType': function(destructors, value) {
              if (value instanceof ArrayBuffer) {
                  value = new Uint8Array(value);
              }
  
              var getLength;
              var valueIsOfTypeString = (typeof value === 'string');
  
              if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {
                  throwBindingError('Cannot pass non-string to std::string');
              }
              if (stdStringIsUTF8 && valueIsOfTypeString) {
                  getLength = function() {return lengthBytesUTF8(value);};
              } else {
                  getLength = function() {return value.length;};
              }
  
              // assumes 4-byte alignment
              var length = getLength();
              var ptr = _malloc(4 + length + 1);
              HEAPU32[ptr >> 2] = length;
  
              if (stdStringIsUTF8 && valueIsOfTypeString) {
                  stringToUTF8(value, ptr + 4, length + 1);
              } else {
                  if(valueIsOfTypeString) {
                      for (var i = 0; i < length; ++i) {
                          var charCode = value.charCodeAt(i);
                          if (charCode > 255) {
                              _free(ptr);
                              throwBindingError('String has UTF-16 code units that do not fit in 8 bits');
                          }
                          HEAPU8[ptr + 4 + i] = charCode;
                      }
                  } else {
                      for (var i = 0; i < length; ++i) {
                          HEAPU8[ptr + 4 + i] = value[i];
                      }
                  }
              }
  
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function __embind_register_std_wstring(rawType, charSize, name) {
      // nb. do not cache HEAPU16 and HEAPU32, they may be destroyed by emscripten_resize_heap().
      name = readLatin1String(name);
      var getHeap, shift;
      if (charSize === 2) {
          getHeap = function() { return HEAPU16; };
          shift = 1;
      } else if (charSize === 4) {
          getHeap = function() { return HEAPU32; };
          shift = 2;
      }
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var HEAP = getHeap();
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              var start = (value + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAP[start + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              // assumes 4-byte alignment
              var length = value.length;
              var ptr = _malloc(4 + length * charSize);
              var HEAP = getHeap();
              HEAPU32[ptr >> 2] = length;
              var start = (ptr + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  HEAP[start + i] = value.charCodeAt(i);
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function __embind_register_void(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          isVoid: true, // void return values can be optimized out sometimes
          name: name,
          'argPackAdvance': 0,
          'fromWireType': function() {
              return undefined;
          },
          'toWireType': function(destructors, o) {
              // TODO: assert if anything else is given?
              return undefined;
          },
      });
    }

  function _abort() {
      abort();
    }

   

   

  var _emscripten_asm_const_int=true;

  function _emscripten_get_heap_size() {
      return HEAP8.length;
    }

   

  
  function abortOnCannotGrowMemory(requestedSize) {
      abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + HEAP8.length + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
    }
  
  function emscripten_realloc_buffer(size) {
      try {
        var newBuffer = new ArrayBuffer(size);
        if (newBuffer.byteLength != size) return /*undefined, allocation did not succeed*/;
        new Int8Array(newBuffer).set(HEAP8);
        _emscripten_replace_memory(newBuffer);
        updateGlobalBufferAndViews(newBuffer);
        return 1 /*success*/;
      } catch(e) {
        console.error('emscripten_realloc_buffer: Attempted to grow heap from ' + buffer.byteLength  + ' bytes to ' + size + ' bytes, but got error: ' + e);
      }
    }function _emscripten_resize_heap(requestedSize) {
      var oldSize = _emscripten_get_heap_size();
      // With pthreads, races can happen (another thread might increase the size in between), so return a failure, and let the caller retry.
      assert(requestedSize > oldSize);
  
  
      var PAGE_MULTIPLE = 16777216;
      var LIMIT = 2147483648 - PAGE_MULTIPLE; // We can do one page short of 2GB as theoretical maximum.
  
      if (requestedSize > LIMIT) {
        err('Cannot enlarge memory, asked to go up to ' + requestedSize + ' bytes, but the limit is ' + LIMIT + ' bytes!');
        return false;
      }
  
      var MIN_TOTAL_MEMORY = 16777216;
      var newSize = Math.max(oldSize, MIN_TOTAL_MEMORY); // So the loop below will not be infinite, and minimum asm.js memory size is 16MB.
  
      // TODO: see realloc_buffer - for PTHREADS we may want to decrease these jumps
      while (newSize < requestedSize) { // Keep incrementing the heap size as long as it's less than what is requested.
        if (newSize <= 536870912) {
          newSize = alignUp(2 * newSize, PAGE_MULTIPLE); // Simple heuristic: double until 1GB...
        } else {
          // ..., but after that, add smaller increments towards 2GB, which we cannot reach
          newSize = Math.min(alignUp((3 * newSize + 2147483648) / 4, PAGE_MULTIPLE), LIMIT);
        }
  
        if (newSize === oldSize) {
          warnOnce('Cannot ask for more memory since we reached the practical limit in browsers (which is just below 2GB), so the request would have failed. Requesting only ' + HEAP8.length);
        }
      }
  
  
  
      var replacement = emscripten_realloc_buffer(newSize);
      if (!replacement) {
        err('Failed to grow the heap from ' + oldSize + ' bytes to ' + newSize + ' bytes, not enough memory!');
        return false;
      }
  
      err('Warning: Enlarging memory arrays, this is not fast! ' + [oldSize, newSize]);
  
  
      return true;
    }

  function _exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      exit(status);
    }

  function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = UTF8ToString(name);
      if (!ENV.hasOwnProperty(name)) return 0;
  
      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocateUTF8(ENV[name]);
      return _getenv.ret;
    }

  function _gettimeofday(ptr) {
      var now = Date.now();
      HEAP32[((ptr)>>2)]=(now/1000)|0; // seconds
      HEAP32[(((ptr)+(4))>>2)]=((now % 1000)*1000)|0; // microseconds
      return 0;
    }



   

  function _llvm_exp2_f32(x) {
      return Math.pow(2, x);
    }

  function _llvm_stackrestore(p) {
      var self = _llvm_stacksave;
      var ret = self.LLVM_SAVEDSTACKS[p];
      self.LLVM_SAVEDSTACKS.splice(p, 1);
      stackRestore(ret);
    }

  function _llvm_stacksave() {
      var self = _llvm_stacksave;
      if (!self.LLVM_SAVEDSTACKS) {
        self.LLVM_SAVEDSTACKS = [];
      }
      self.LLVM_SAVEDSTACKS.push(stackSave());
      return self.LLVM_SAVEDSTACKS.length-1;
    }

  function _llvm_trap() {
      abort('trap!');
    }

  
  var ___tm_current=67504;
  
  
  var ___tm_timezone=(stringToUTF8("GMT", 67552, 4), 67552);
  
  function _tzset() {
      // TODO: Use (malleable) environment variables instead of system settings.
      if (_tzset.called) return;
      _tzset.called = true;
  
      // timezone is specified as seconds west of UTC ("The external variable
      // `timezone` shall be set to the difference, in seconds, between
      // Coordinated Universal Time (UTC) and local standard time."), the same
      // as returned by getTimezoneOffset().
      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html
      HEAP32[((__get_timezone())>>2)]=(new Date()).getTimezoneOffset() * 60;
  
      var currentYear = new Date().getFullYear();
      var winter = new Date(currentYear, 0, 1);
      var summer = new Date(currentYear, 6, 1);
      HEAP32[((__get_daylight())>>2)]=Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());
  
      function extractZone(date) {
        var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
        return match ? match[1] : "GMT";
      };
      var winterName = extractZone(winter);
      var summerName = extractZone(summer);
      var winterNamePtr = allocate(intArrayFromString(winterName), 'i8', ALLOC_NORMAL);
      var summerNamePtr = allocate(intArrayFromString(summerName), 'i8', ALLOC_NORMAL);
      if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
        // Northern hemisphere
        HEAP32[((__get_tzname())>>2)]=winterNamePtr;
        HEAP32[(((__get_tzname())+(4))>>2)]=summerNamePtr;
      } else {
        HEAP32[((__get_tzname())>>2)]=summerNamePtr;
        HEAP32[(((__get_tzname())+(4))>>2)]=winterNamePtr;
      }
    }function _localtime_r(time, tmPtr) {
      _tzset();
      var date = new Date(HEAP32[((time)>>2)]*1000);
      HEAP32[((tmPtr)>>2)]=date.getSeconds();
      HEAP32[(((tmPtr)+(4))>>2)]=date.getMinutes();
      HEAP32[(((tmPtr)+(8))>>2)]=date.getHours();
      HEAP32[(((tmPtr)+(12))>>2)]=date.getDate();
      HEAP32[(((tmPtr)+(16))>>2)]=date.getMonth();
      HEAP32[(((tmPtr)+(20))>>2)]=date.getFullYear()-1900;
      HEAP32[(((tmPtr)+(24))>>2)]=date.getDay();
  
      var start = new Date(date.getFullYear(), 0, 1);
      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;
      HEAP32[(((tmPtr)+(28))>>2)]=yday;
      HEAP32[(((tmPtr)+(36))>>2)]=-(date.getTimezoneOffset() * 60);
  
      // Attention: DST is in December in South, and some regions don't have DST at all.
      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();
      var winterOffset = start.getTimezoneOffset();
      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;
      HEAP32[(((tmPtr)+(32))>>2)]=dst;
  
      var zonePtr = HEAP32[(((__get_tzname())+(dst ? 4 : 0))>>2)];
      HEAP32[(((tmPtr)+(40))>>2)]=zonePtr;
  
      return tmPtr;
    }function _localtime(time) {
      return _localtime_r(time, ___tm_current);
    }

  
   
  
   
  
   function _longjmp(env, value) {
      _setThrew(env, value || 1);
      throw 'longjmp';
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
    }
  
   

   

   

  
   


  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''
      };
  
      var pattern = UTF8ToString(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation
        // Modified Conversion Specifiers
        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.
        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.
        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.
        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.
        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.
        '%EY': '%Y',                      // Replaced by the full alternative year representation.
        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.
        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.
        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.
        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.
        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.
        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.
        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.
        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).
        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.
        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.
        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.
        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.
        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      }
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      }
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        }
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      }
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      }
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else {
            return thisDate.getFullYear()-1;
          }
      }
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes
          // January 4th, which is also the week that includes the first Thursday of the year, and
          // is also the first week that contains at least four days in the year.
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of
          // the last week of the preceding year; thus, for Saturday 2nd January 1999,
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,
          // or 31st is a Monday, it and any following days are part of week 1 of the following year.
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
  
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          var twelveHour = date.tm_hour;
          if (twelveHour == 0) twelveHour = 12;
          else if (twelveHour > 12) twelveHour -= 12;
          return leadingNulls(twelveHour, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour >= 0 && date.tm_hour < 12) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          return date.tm_wday || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53].
          // The first Sunday of January is the first day of week 1;
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week)
          // as a decimal number [01,53]. If the week containing 1 January has four
          // or more days in the new year, then it is considered week 1.
          // Otherwise, it is the last week of the previous year, and the next week is week 1.
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          }
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          return date.tm_wday;
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53].
          // The first Monday of January is the first day of week 1;
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      }
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }

  function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }


  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }
FS.staticInit();;
embind_init_charCodes();
BindingError = Module['BindingError'] = extendError(Error, 'BindingError');;
InternalError = Module['InternalError'] = extendError(Error, 'InternalError');;
init_emval();;
UnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;
var ASSERTIONS = true;

// Copyright 2017 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

/** @type {function(string, boolean=, number=)} */
function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      if (ASSERTIONS) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      }
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}


// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149

// This code was written by Tyler Akins and has been placed in the
// public domain.  It would be nice if you left this header intact.
// Base64 code from Tyler Akins -- http://rumkin.com

/**
 * Decodes a base64 string.
 * @param {String} input The string to decode.
 */
var decodeBase64 = typeof atob === 'function' ? atob : function (input) {
  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

  var output = '';
  var chr1, chr2, chr3;
  var enc1, enc2, enc3, enc4;
  var i = 0;
  // remove all characters that are not A-Z, a-z, 0-9, +, /, or =
  input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');
  do {
    enc1 = keyStr.indexOf(input.charAt(i++));
    enc2 = keyStr.indexOf(input.charAt(i++));
    enc3 = keyStr.indexOf(input.charAt(i++));
    enc4 = keyStr.indexOf(input.charAt(i++));

    chr1 = (enc1 << 2) | (enc2 >> 4);
    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
    chr3 = ((enc3 & 3) << 6) | enc4;

    output = output + String.fromCharCode(chr1);

    if (enc3 !== 64) {
      output = output + String.fromCharCode(chr2);
    }
    if (enc4 !== 64) {
      output = output + String.fromCharCode(chr3);
    }
  } while (i < input.length);
  return output;
};

// Converts a string of base64 into a byte array.
// Throws error on invalid input.
function intArrayFromBase64(s) {
  if (typeof ENVIRONMENT_IS_NODE === 'boolean' && ENVIRONMENT_IS_NODE) {
    var buf;
    try {
      buf = Buffer.from(s, 'base64');
    } catch (_) {
      buf = new Buffer(s, 'base64');
    }
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }

  try {
    var decoded = decodeBase64(s);
    var bytes = new Uint8Array(decoded.length);
    for (var i = 0 ; i < decoded.length ; ++i) {
      bytes[i] = decoded.charCodeAt(i);
    }
    return bytes;
  } catch (_) {
    throw new Error('Converting base64 string to bytes failed.');
  }
}

// If filename is a base64 data URI, parses and returns data (Buffer on node,
// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.
function tryParseAsDataURI(filename) {
  if (!isDataURI(filename)) {
    return;
  }

  return intArrayFromBase64(filename.slice(dataURIPrefix.length));
}


// ASM_LIBRARY EXTERN PRIMITIVES: Math_imul,Math_clz32,Int8Array,Int32Array,Math_floor,Math_ceil

function nullFunc_di(x) { abortFnPtrError(x, 'di'); }
function nullFunc_dii(x) { abortFnPtrError(x, 'dii'); }
function nullFunc_i(x) { abortFnPtrError(x, 'i'); }
function nullFunc_ii(x) { abortFnPtrError(x, 'ii'); }
function nullFunc_iidiiii(x) { abortFnPtrError(x, 'iidiiii'); }
function nullFunc_iii(x) { abortFnPtrError(x, 'iii'); }
function nullFunc_iiii(x) { abortFnPtrError(x, 'iiii'); }
function nullFunc_iiiii(x) { abortFnPtrError(x, 'iiiii'); }
function nullFunc_iiiiid(x) { abortFnPtrError(x, 'iiiiid'); }
function nullFunc_iiiiii(x) { abortFnPtrError(x, 'iiiiii'); }
function nullFunc_iiiiiid(x) { abortFnPtrError(x, 'iiiiiid'); }
function nullFunc_iiiiiii(x) { abortFnPtrError(x, 'iiiiiii'); }
function nullFunc_iiiiiiii(x) { abortFnPtrError(x, 'iiiiiiii'); }
function nullFunc_iiiiiiiii(x) { abortFnPtrError(x, 'iiiiiiiii'); }
function nullFunc_v(x) { abortFnPtrError(x, 'v'); }
function nullFunc_vi(x) { abortFnPtrError(x, 'vi'); }
function nullFunc_vid(x) { abortFnPtrError(x, 'vid'); }
function nullFunc_vii(x) { abortFnPtrError(x, 'vii'); }
function nullFunc_viid(x) { abortFnPtrError(x, 'viid'); }
function nullFunc_viii(x) { abortFnPtrError(x, 'viii'); }
function nullFunc_viiii(x) { abortFnPtrError(x, 'viiii'); }
function nullFunc_viiiii(x) { abortFnPtrError(x, 'viiiii'); }
function nullFunc_viiiiii(x) { abortFnPtrError(x, 'viiiiii'); }
function nullFunc_viiiiiii(x) { abortFnPtrError(x, 'viiiiiii'); }

function invoke_ii(index,a1) {
  var sp = stackSave();
  try {
    return dynCall_ii(index,a1);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  var sp = stackSave();
  try {
    return dynCall_iii(index,a1,a2);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  var sp = stackSave();
  try {
    return dynCall_iiii(index,a1,a2,a3);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_vi(index,a1) {
  var sp = stackSave();
  try {
    dynCall_vi(index,a1);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  var sp = stackSave();
  try {
    dynCall_vii(index,a1,a2);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  var sp = stackSave();
  try {
    dynCall_viii(index,a1,a2,a3);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  var sp = stackSave();
  try {
    dynCall_viiii(index,a1,a2,a3,a4);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

var asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

var asmLibraryArg = { "___buildEnvironment": ___buildEnvironment, "___cxa_allocate_exception": ___cxa_allocate_exception, "___cxa_begin_catch": ___cxa_begin_catch, "___cxa_throw": ___cxa_throw, "___exception_addRef": ___exception_addRef, "___exception_deAdjust": ___exception_deAdjust, "___gxx_personality_v0": ___gxx_personality_v0, "___lock": ___lock, "___map_file": ___map_file, "___setErrNo": ___setErrNo, "___syscall221": ___syscall221, "___syscall5": ___syscall5, "___syscall54": ___syscall54, "___syscall91": ___syscall91, "___unlock": ___unlock, "___wasi_fd_close": ___wasi_fd_close, "___wasi_fd_read": ___wasi_fd_read, "___wasi_fd_seek": ___wasi_fd_seek, "___wasi_fd_write": ___wasi_fd_write, "__addDays": __addDays, "__arraySum": __arraySum, "__embind_register_bool": __embind_register_bool, "__embind_register_constant": __embind_register_constant, "__embind_register_emval": __embind_register_emval, "__embind_register_float": __embind_register_float, "__embind_register_function": __embind_register_function, "__embind_register_integer": __embind_register_integer, "__embind_register_memory_view": __embind_register_memory_view, "__embind_register_std_string": __embind_register_std_string, "__embind_register_std_wstring": __embind_register_std_wstring, "__embind_register_void": __embind_register_void, "__emscripten_syscall_munmap": __emscripten_syscall_munmap, "__emval_decref": __emval_decref, "__emval_register": __emval_register, "__isLeapYear": __isLeapYear, "_abort": _abort, "_embind_repr": _embind_repr, "_emscripten_asm_const_ii": _emscripten_asm_const_ii, "_emscripten_asm_const_iiddddddddddddd": _emscripten_asm_const_iiddddddddddddd, "_emscripten_asm_const_iiiid": _emscripten_asm_const_iiiid, "_emscripten_asm_const_iiiiiii": _emscripten_asm_const_iiiiiii, "_emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi": _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi, "_emscripten_get_heap_size": _emscripten_get_heap_size, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_emscripten_resize_heap": _emscripten_resize_heap, "_exit": _exit, "_fd_close": _fd_close, "_fd_read": _fd_read, "_fd_seek": _fd_seek, "_fd_write": _fd_write, "_getenv": _getenv, "_gettimeofday": _gettimeofday, "_llvm_exp2_f32": _llvm_exp2_f32, "_llvm_stackrestore": _llvm_stackrestore, "_llvm_stacksave": _llvm_stacksave, "_llvm_trap": _llvm_trap, "_localtime": _localtime, "_localtime_r": _localtime_r, "_longjmp": _longjmp, "_strftime": _strftime, "_strftime_l": _strftime_l, "_time": _time, "_tzset": _tzset, "abort": abort, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "abortStackOverflow": abortStackOverflow, "count_emval_handles": count_emval_handles, "craftInvokerFunction": craftInvokerFunction, "createNamedFunction": createNamedFunction, "demangle": demangle, "demangleAll": demangleAll, "embind__requireFunction": embind__requireFunction, "embind_init_charCodes": embind_init_charCodes, "emscripten_realloc_buffer": emscripten_realloc_buffer, "ensureOverloadTable": ensureOverloadTable, "exposePublicSymbol": exposePublicSymbol, "extendError": extendError, "floatReadValueFromPointer": floatReadValueFromPointer, "getShiftFromSize": getShiftFromSize, "getTempRet0": getTempRet0, "getTypeName": getTypeName, "get_first_emval": get_first_emval, "heap32VectorToArray": heap32VectorToArray, "init_emval": init_emval, "integerReadValueFromPointer": integerReadValueFromPointer, "invoke_ii": invoke_ii, "invoke_iii": invoke_iii, "invoke_iiii": invoke_iiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_viii": invoke_viii, "invoke_viiii": invoke_viiii, "jsStackTrace": jsStackTrace, "makeLegalFunctionName": makeLegalFunctionName, "new_": new_, "nullFunc_di": nullFunc_di, "nullFunc_dii": nullFunc_dii, "nullFunc_i": nullFunc_i, "nullFunc_ii": nullFunc_ii, "nullFunc_iidiiii": nullFunc_iidiiii, "nullFunc_iii": nullFunc_iii, "nullFunc_iiii": nullFunc_iiii, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_iiiiid": nullFunc_iiiiid, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_iiiiiid": nullFunc_iiiiiid, "nullFunc_iiiiiii": nullFunc_iiiiiii, "nullFunc_iiiiiiii": nullFunc_iiiiiiii, "nullFunc_iiiiiiiii": nullFunc_iiiiiiiii, "nullFunc_v": nullFunc_v, "nullFunc_vi": nullFunc_vi, "nullFunc_vid": nullFunc_vid, "nullFunc_vii": nullFunc_vii, "nullFunc_viid": nullFunc_viid, "nullFunc_viii": nullFunc_viii, "nullFunc_viiii": nullFunc_viiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_viiiiiii": nullFunc_viiiiiii, "readLatin1String": readLatin1String, "registerType": registerType, "replacePublicSymbol": replacePublicSymbol, "runDestructors": runDestructors, "setTempRet0": setTempRet0, "simpleReadValueFromPointer": simpleReadValueFromPointer, "stackTrace": stackTrace, "tempDoublePtr": tempDoublePtr, "throwBindingError": throwBindingError, "throwInternalError": throwInternalError, "throwUnboundTypeError": throwUnboundTypeError, "whenDependentTypesAreResolved": whenDependentTypesAreResolved };
// EMSCRIPTEN_START_ASM
var asm = (/** @suppress {uselessCode} */ function(global, env, buffer) {
'almost asm';

  var HEAP8 = new global.Int8Array(buffer),
  HEAP16 = new global.Int16Array(buffer),
  HEAP32 = new global.Int32Array(buffer),
  HEAPU8 = new global.Uint8Array(buffer),
  HEAPU16 = new global.Uint16Array(buffer),
  HEAPF32 = new global.Float32Array(buffer),
  HEAPF64 = new global.Float64Array(buffer),
  tempDoublePtr=env.tempDoublePtr|0,
  __THREW__ = 0,
  threwValue = 0,
  setjmpId = 0,
  tempInt = 0,
  tempBigInt = 0,
  tempBigIntS = 0,
  tempValue = 0,
  tempDouble = 0.0,
  nan = global.NaN,
  inf = global.Infinity,
  Math_floor=global.Math.floor,
  Math_abs=global.Math.abs,
  Math_sqrt=global.Math.sqrt,
  Math_pow=global.Math.pow,
  Math_cos=global.Math.cos,
  Math_sin=global.Math.sin,
  Math_atan2=global.Math.atan2,
  Math_log=global.Math.log,
  Math_ceil=global.Math.ceil,
  Math_imul=global.Math.imul,
  Math_clz32=global.Math.clz32,
  abort=env.abort,
  setTempRet0=env.setTempRet0,
  getTempRet0=env.getTempRet0,
  abortStackOverflow=env.abortStackOverflow,
  nullFunc_di=env.nullFunc_di,
  nullFunc_dii=env.nullFunc_dii,
  nullFunc_i=env.nullFunc_i,
  nullFunc_ii=env.nullFunc_ii,
  nullFunc_iidiiii=env.nullFunc_iidiiii,
  nullFunc_iii=env.nullFunc_iii,
  nullFunc_iiii=env.nullFunc_iiii,
  nullFunc_iiiii=env.nullFunc_iiiii,
  nullFunc_iiiiid=env.nullFunc_iiiiid,
  nullFunc_iiiiii=env.nullFunc_iiiiii,
  nullFunc_iiiiiid=env.nullFunc_iiiiiid,
  nullFunc_iiiiiii=env.nullFunc_iiiiiii,
  nullFunc_iiiiiiii=env.nullFunc_iiiiiiii,
  nullFunc_iiiiiiiii=env.nullFunc_iiiiiiiii,
  nullFunc_v=env.nullFunc_v,
  nullFunc_vi=env.nullFunc_vi,
  nullFunc_vid=env.nullFunc_vid,
  nullFunc_vii=env.nullFunc_vii,
  nullFunc_viid=env.nullFunc_viid,
  nullFunc_viii=env.nullFunc_viii,
  nullFunc_viiii=env.nullFunc_viiii,
  nullFunc_viiiii=env.nullFunc_viiiii,
  nullFunc_viiiiii=env.nullFunc_viiiiii,
  nullFunc_viiiiiii=env.nullFunc_viiiiiii,
  invoke_ii=env.invoke_ii,
  invoke_iii=env.invoke_iii,
  invoke_iiii=env.invoke_iiii,
  invoke_vi=env.invoke_vi,
  invoke_vii=env.invoke_vii,
  invoke_viii=env.invoke_viii,
  invoke_viiii=env.invoke_viiii,
  ___buildEnvironment=env.___buildEnvironment,
  ___cxa_allocate_exception=env.___cxa_allocate_exception,
  ___cxa_begin_catch=env.___cxa_begin_catch,
  ___cxa_throw=env.___cxa_throw,
  ___exception_addRef=env.___exception_addRef,
  ___exception_deAdjust=env.___exception_deAdjust,
  ___gxx_personality_v0=env.___gxx_personality_v0,
  ___lock=env.___lock,
  ___map_file=env.___map_file,
  ___setErrNo=env.___setErrNo,
  ___syscall221=env.___syscall221,
  ___syscall5=env.___syscall5,
  ___syscall54=env.___syscall54,
  ___syscall91=env.___syscall91,
  ___unlock=env.___unlock,
  ___wasi_fd_close=env.___wasi_fd_close,
  ___wasi_fd_read=env.___wasi_fd_read,
  ___wasi_fd_seek=env.___wasi_fd_seek,
  ___wasi_fd_write=env.___wasi_fd_write,
  __addDays=env.__addDays,
  __arraySum=env.__arraySum,
  __embind_register_bool=env.__embind_register_bool,
  __embind_register_constant=env.__embind_register_constant,
  __embind_register_emval=env.__embind_register_emval,
  __embind_register_float=env.__embind_register_float,
  __embind_register_function=env.__embind_register_function,
  __embind_register_integer=env.__embind_register_integer,
  __embind_register_memory_view=env.__embind_register_memory_view,
  __embind_register_std_string=env.__embind_register_std_string,
  __embind_register_std_wstring=env.__embind_register_std_wstring,
  __embind_register_void=env.__embind_register_void,
  __emscripten_syscall_munmap=env.__emscripten_syscall_munmap,
  __emval_decref=env.__emval_decref,
  __emval_register=env.__emval_register,
  __isLeapYear=env.__isLeapYear,
  _abort=env._abort,
  _embind_repr=env._embind_repr,
  _emscripten_asm_const_ii=env._emscripten_asm_const_ii,
  _emscripten_asm_const_iiddddddddddddd=env._emscripten_asm_const_iiddddddddddddd,
  _emscripten_asm_const_iiiid=env._emscripten_asm_const_iiiid,
  _emscripten_asm_const_iiiiiii=env._emscripten_asm_const_iiiiiii,
  _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi=env._emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi,
  _emscripten_get_heap_size=env._emscripten_get_heap_size,
  _emscripten_memcpy_big=env._emscripten_memcpy_big,
  _emscripten_resize_heap=env._emscripten_resize_heap,
  _exit=env._exit,
  _fd_close=env._fd_close,
  _fd_read=env._fd_read,
  _fd_seek=env._fd_seek,
  _fd_write=env._fd_write,
  _getenv=env._getenv,
  _gettimeofday=env._gettimeofday,
  _llvm_exp2_f32=env._llvm_exp2_f32,
  _llvm_stackrestore=env._llvm_stackrestore,
  _llvm_stacksave=env._llvm_stacksave,
  _llvm_trap=env._llvm_trap,
  _localtime=env._localtime,
  _localtime_r=env._localtime_r,
  _longjmp=env._longjmp,
  _strftime=env._strftime,
  _strftime_l=env._strftime_l,
  _time=env._time,
  _tzset=env._tzset,
  abortOnCannotGrowMemory=env.abortOnCannotGrowMemory,
  count_emval_handles=env.count_emval_handles,
  craftInvokerFunction=env.craftInvokerFunction,
  createNamedFunction=env.createNamedFunction,
  demangle=env.demangle,
  demangleAll=env.demangleAll,
  embind__requireFunction=env.embind__requireFunction,
  embind_init_charCodes=env.embind_init_charCodes,
  emscripten_realloc_buffer=env.emscripten_realloc_buffer,
  ensureOverloadTable=env.ensureOverloadTable,
  exposePublicSymbol=env.exposePublicSymbol,
  extendError=env.extendError,
  floatReadValueFromPointer=env.floatReadValueFromPointer,
  getShiftFromSize=env.getShiftFromSize,
  getTypeName=env.getTypeName,
  get_first_emval=env.get_first_emval,
  heap32VectorToArray=env.heap32VectorToArray,
  init_emval=env.init_emval,
  integerReadValueFromPointer=env.integerReadValueFromPointer,
  jsStackTrace=env.jsStackTrace,
  makeLegalFunctionName=env.makeLegalFunctionName,
  new_=env.new_,
  readLatin1String=env.readLatin1String,
  registerType=env.registerType,
  replacePublicSymbol=env.replacePublicSymbol,
  runDestructors=env.runDestructors,
  simpleReadValueFromPointer=env.simpleReadValueFromPointer,
  stackTrace=env.stackTrace,
  throwBindingError=env.throwBindingError,
  throwInternalError=env.throwInternalError,
  throwUnboundTypeError=env.throwUnboundTypeError,
  whenDependentTypesAreResolved=env.whenDependentTypesAreResolved,
  STACKTOP = 67664,
  STACK_MAX = 5310544,
  tempFloat = 0.0;

function _emscripten_replace_memory(newBuffer) {
  HEAP8 = new Int8Array(newBuffer);
  HEAPU8 = new Uint8Array(newBuffer);
  HEAP16 = new Int16Array(newBuffer);
  HEAPU16 = new Uint16Array(newBuffer);
  HEAP32 = new Int32Array(newBuffer);
  HEAPF32 = new Float32Array(newBuffer);
  HEAPF64 = new Float64Array(newBuffer);

  buffer = newBuffer;
  return true;
}

// EMSCRIPTEN_START_FUNCS

function _read_markers($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i46 = 0, $$0$i78 = 0, $$0$i82 = 0, $$0$i92 = 0, $$0134$lcssa$i = 0, $$0134177$i = 0, $$0135$i = 0, $$0136$i = 0, $$0146$i = 0, $$0148$i = 0, $$0158$i = 0, $$0159$i = 0, $$0168$lcssa$i = 0, $$0168199$i = 0, $$0170$ph$i = 0, $$0170220$i = 0, $$0171$i = 0, $$0171177218$i = 0, $$0171177219$i = 0, $$0176$i = 0, $$0177$i = 0, $$0186$lcssa$i = 0, $$0186203$i = 0, $$0189$lcssa$i = 0, $$0189197$i = 0, $$0189206$i = 0, $$0190201$i = 0, $$0193213$i = 0, $$0231$i = 0, $$041$i = 0, $$042$i = 0, $$057$i = 0, $$087$i = 0, $$093$i = 0, $$093$lcssa$i = 0, $$093100$i = 0, $$09397$i = 0, $$1$i = 0, $$1$i43 = 0, $$1$i47 = 0, $$1$i55 = 0, $$1$i66 = 0, $$1$i79 = 0, $$1$i83 = 0, $$1$i93 = 0, $$10$i = 0, $$10241$i = 0, $$11$i = 0, $$11242$i = 0, $$1137$i = 0, $$1145171$i = 0, $$1160$i = 0, $$1178$i = 0, $$1191202$i = 0, $$12$i = 0, $$12243$i = 0, $$1232$i = 0, $$13$i = 0, $$13244$i = 0, $$14$i = 0, $$142$i = 0, $$14245$i = 0, $$143$i = 0, $$15$i = 0, $$15246$i = 0, $$158$i = 0, $$16$i = 0, $$16247$i = 0, $$17$i = 0, $$17248$i = 0, $$18$i = 0, $$18249$i = 0, $$188$i = 0, $$19$i = 0, $$19250$i = 0, $$2$i = 0, $$2$i52 = 0, $$2$i80 = 0, $$2$i84 = 0, $$2$lcssa$i = 0, $$2$lcssa$i62 = 0, $$2$lcssa$i76 = 0, $$20$i = 0, $$20251$i = 0, $$21$i = 0, $$2101$i = 0, $$21252$i = 0, $$2138$lcssa$i = 0, $$2138175$i = 0, $$2161$lcssa$i = 0, $$2161200$i = 0, $$2175194$i = 0, $$2175194$us$i = 0, $$2176$i = 0, $$2179$i = 0, $$2188$i = 0, $$2192205$i = 0, $$22$i = 0, $$2201$i = 0, $$22253$i = 0, $$2233$i = 0, $$23$i = 0, $$23254$i = 0, $$24$i = 0, $$24255$i = 0, $$25$i = 0, $$25256$i = 0, $$259$i = 0, $$289$i = 0, $$289$lcssa$i = 0, $$289102$i = 0, $$28999$i = 0, $$298$i = 0, $$3$i = 0, $$3$i49 = 0, $$3$i56 = 0, $$3$i67 = 0, $$3$i81 = 0, $$3$i85 = 0, $$3$lcssa$i = 0, $$3139$i = 0, $$3162$i = 0, $$3176198$i = 0, $$3180$i = 0, $$3180$lcssa$i = 0, $$3180212$i = 0, $$3180212236$i = 0, $$3180218$i = 0, $$3211$i = 0, $$3211230$i = 0, $$3211233$i = 0, $$3211235$i = 0, $$3217$i = 0, $$3234$i = 0, $$360$i = 0, $$390$i = 0, $$4$1$i = 0, $$4$10$i = 0, $$4$11$i = 0, $$4$12$i = 0, $$4$13$i = 0, $$4$14$i = 0, $$4$15$i = 0, $$4$2$i = 0, $$4$3$i = 0, $$4$4$i = 0, $$4$5$i = 0, $$4$6$i = 0, $$4$7$i = 0, $$4$8$i = 0, $$4$9$i = 0, $$4$i = 0, $$4$i50 = 0, $$4$i58 = 0, $$4$i71 = 0, $$4$i86 = 0, $$4$lcssa$i = 0, $$4$us$i = 0, $$4140$1$i = 0, $$4140$10$i = 0, $$4140$11$i = 0, $$4140$12$i = 0, $$4140$13$i = 0, $$4140$14$i = 0, $$4140$15$i = 0, $$4140$2$i = 0, $$4140$3$i = 0, $$4140$4$i = 0, $$4140$5$i = 0, $$4140$6$i = 0, $$4140$7$i = 0, $$4140$8$i = 0, $$4140$9$i = 0, $$4140$i = 0, $$4140166$i = 0, $$4163$i = 0, $$4163$lcssa$i = 0, $$4163$us$i = 0, $$4163193$i = 0, $$4163193222$i = 0, $$4163196$i = 0, $$4163196$us$i = 0, $$4165$i = 0, $$4181$i = 0, $$4192$i = 0, $$4192221$i = 0, $$4195$i = 0, $$4195$us$i = 0, $$4235$i = 0, $$491$i = 0, $$5$1$i = 0, $$5$10$i = 0, $$5$11$i = 0, $$5$12$i = 0, $$5$13$i = 0, $$5$14$i = 0, $$5$15$i = 0, $$5$2$i = 0, $$5$3$i = 0, $$5$4$i = 0, $$5$5$i = 0, $$5$6$i = 0, $$5$7$i = 0, $$5$8$i = 0, $$5$9$i = 0, $$5$i = 0, $$5$i57 = 0, $$5$i87 = 0, $$5$us$i = 0, $$5141$1$i = 0, $$5141$10$i = 0, $$5141$11$i = 0, $$5141$12$i = 0, $$5141$13$i = 0, $$5141$14$i = 0, $$5141$15$i = 0, $$5141$2$i = 0, $$5141$3$i = 0, $$5141$4$i = 0, $$5141$5$i = 0, $$5141$6$i = 0, $$5141$7$i = 0, $$5141$8$i = 0, $$5141$9$i = 0, $$5141$i = 0, $$5164$us$i = 0, $$5182$i = 0, $$5236$i = 0, $$6$i = 0, $$6$i88 = 0, $$6$lcssa$i = 0, $$6$us$i = 0, $$6142$lcssa$i = 0, $$6142172$i = 0, $$6165$us$i = 0, $$6173$i = 0, $$6183$i = 0, $$6237$i = 0, $$7$i = 0, $$7$i60 = 0, $$7$i70 = 0, $$7$i90 = 0, $$7143$i = 0, $$7166$i = 0, $$7184$i = 0, $$7238$i = 0, $$8$i = 0, $$8$i91 = 0, $$8185$i = 0, $$8239$i = 0, $$9$i = 0, $$9240$i = 0, $$lcssa$i = 0, $$pre$phi$iZ2D = 0, $1 = 0, $10 = 0, $1007 = 0, $1008 = 0, $1011 = 0, $1024 = 0, $1025 = 0, $1028 = 0, $1036 = 0, $1037 = 0, $1049 = 0, $1050 = 0, $1060 = 0, $1061 = 0, $1064 = 0, $107 = 0, $1075 = 0, $1076 = 0, $108 = 0, $1080 = 0, $1089 = 0, $1090 = 0, $1094 = 0, $11 = 0, $1104 = 0, $1105 = 0, $111 = 0, $1115 = 0, $1116 = 0, $1119 = 0, $1127 = 0, $1128 = 0, $1140 = 0, $1141 = 0, $1144 = 0, $1152 = 0, $1153 = 0, $1165 = 0, $1166 = 0, $1176 = 0, $1177 = 0, $1180 = 0, $1188 = 0, $1189 = 0, $119 = 0, $12 = 0, $120 = 0, $1201 = 0, $1202 = 0, $1205 = 0, $1213 = 0, $1214 = 0, $1226 = 0, $1227 = 0, $123 = 0, $1237 = 0, $1238 = 0, $1241 = 0, $1249 = 0, $1250 = 0, $1262 = 0, $1263 = 0, $1266 = 0, $1274 = 0, $1275 = 0, $1280 = 0, $1294 = 0, $13 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1313 = 0, $132 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $133 = 0, $1340 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $14 = 0, $15 = 0, $151 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $164 = 0, $165 = 0, $167 = 0, $17 = 0, $176 = 0, $18 = 0, $180 = 0, $184 = 0, $185 = 0, $190 = 0, $192 = 0, $2 = 0, $20 = 0, $205 = 0, $207 = 0, $209 = 0, $210 = 0, $222 = 0, $229 = 0, $230 = 0, $233 = 0, $241 = 0, $242 = 0, $245 = 0, $25 = 0, $256 = 0, $258 = 0, $26 = 0, $260 = 0, $261 = 0, $27 = 0, $275 = 0, $278 = 0, $282 = 0, $283 = 0, $284 = 0, $291 = 0, $292 = 0, $295 = 0, $3 = 0, $305 = 0, $307 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $324 = 0, $325 = 0, $326 = 0, $335 = 0, $34 = 0, $343 = 0, $346 = 0, $35 = 0, $350 = 0, $357 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $369 = 0, $37 = 0, $370 = 0, $373 = 0, $381 = 0, $382 = 0, $385 = 0, $386 = 0, $388 = 0, $396 = 0, $397 = 0, $4 = 0, $409 = 0, $410 = 0, $412 = 0, $416 = 0, $423 = 0, $424 = 0, $429 = 0, $430 = 0, $431 = 0, $433 = 0, $434 = 0, $438 = 0, $443 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $460 = 0, $461 = 0, $466 = 0, $47 = 0, $474 = 0, $475 = 0, $48 = 0, $482 = 0, $483 = 0, $490 = 0, $491 = 0, $498 = 0, $499 = 0, $5 = 0, $506 = 0, $507 = 0, $51 = 0, $514 = 0, $515 = 0, $522 = 0, $523 = 0, $530 = 0, $531 = 0, $538 = 0, $539 = 0, $546 = 0, $547 = 0, $554 = 0, $555 = 0, $562 = 0, $563 = 0, $570 = 0, $571 = 0, $578 = 0, $579 = 0, $586 = 0, $587 = 0, $599 = 0, $6 = 0, $60 = 0, $61 = 0, $613 = 0, $614 = 0, $615 = 0, $622 = 0, $623 = 0, $626 = 0, $634 = 0, $635 = 0, $638 = 0, $639 = 0, $641 = 0, $642 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $66 = 0, $662 = 0, $667 = 0, $668 = 0, $670 = 0, $671 = 0, $673 = 0, $69 = 0, $7 = 0, $8 = 0, $809 = 0, $810 = 0, $813 = 0, $82 = 0, $842 = 0, $847 = 0, $87 = 0, $88 = 0, $889 = 0, $89 = 0, $894 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $906 = 0, $907 = 0, $910 = 0, $918 = 0, $919 = 0, $924 = 0, $934 = 0, $935 = 0, $938 = 0, $95 = 0, $950 = 0, $951 = 0, $957 = 0, $958 = 0, $959 = 0, $960 = 0, $965 = 0, $979 = 0, $980 = 0, $983 = 0, $991 = 0, $992 = 0, $997 = 0, $scevgep$i = 0, $scevgep2$i = 0, $scevgep3$i = 0, $spec$select$i = 0, $spec$select$i74 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $1 = sp;
 $2 = $0 + 440 | 0;
 $3 = $0 + 464 | 0;
 $4 = $0 + 24 | 0;
 $scevgep$i = $0 + 232 | 0;
 $scevgep2$i = $0 + 248 | 0;
 $scevgep3$i = $0 + 264 | 0;
 $5 = $0 + 280 | 0;
 $6 = $0 + 40 | 0;
 $7 = $0 + 304 | 0;
 $8 = $0 + 308 | 0;
 $9 = $0 + 284 | 0;
 $10 = $0 + 288 | 0;
 $11 = $0 + 289 | 0;
 $12 = $0 + 290 | 0;
 $13 = $0 + 292 | 0;
 $14 = $0 + 294 | 0;
 $15 = $0 + 296 | 0;
 $16 = $0 + 300 | 0;
 $17 = $0 + 36 | 0;
 $18 = $0 + 216 | 0;
 $20 = HEAP32[$2 >> 2] | 0;
 L1 : while (1) {
  do if (!$20) {
   if (HEAP32[(HEAP32[$3 >> 2] | 0) + 12 >> 2] | 0) {
    if (!(_next_marker($0) | 0)) {
     $$0 = 0;
     label = 350;
     break L1;
    }
    $60 = HEAP32[$2 >> 2] | 0;
    break;
   }
   $25 = HEAP32[$4 >> 2] | 0;
   $26 = $25 + 4 | 0;
   $27 = HEAP32[$26 >> 2] | 0;
   if (!$27) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$25 + 12 >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     label = 350;
     break L1;
    }
    $$0$i = HEAP32[$26 >> 2] | 0;
   } else $$0$i = $27;
   $$042$i = HEAP32[$25 >> 2] | 0;
   $34 = $$0$i + -1 | 0;
   $35 = $$042$i + 1 | 0;
   $36 = HEAP8[$$042$i >> 0] | 0;
   $37 = $36 & 255;
   if (!$34) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$25 + 12 >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     label = 350;
     break L1;
    }
    $$1$i = HEAP32[$26 >> 2] | 0;
    $$143$i = HEAP32[$25 >> 2] | 0;
   } else {
    $$1$i = $34;
    $$143$i = $35;
   }
   $47 = HEAP8[$$143$i >> 0] | 0;
   $48 = $47 & 255;
   if ($36 << 24 >> 24 != -1 | $47 << 24 >> 24 != -40) {
    $51 = HEAP32[$0 >> 2] | 0;
    HEAP32[$51 + 20 >> 2] = 55;
    HEAP32[$51 + 24 >> 2] = $37;
    HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $48;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   }
   HEAP32[$2 >> 2] = $48;
   HEAP32[$25 >> 2] = $$143$i + 1;
   HEAP32[$26 >> 2] = $$1$i + -1;
   $60 = $48;
  } else $60 = $20; while (0);
  do switch ($60 | 0) {
  case 218:
   {
    label = 25;
    break L1;
    break;
   }
  case 217:
   {
    label = 75;
    break L1;
    break;
   }
  case 216:
   {
    $61 = HEAP32[$0 >> 2] | 0;
    HEAP32[$61 + 20 >> 2] = 104;
    FUNCTION_TABLE_vii[HEAP32[$61 + 4 >> 2] & 255]($0, 1);
    $66 = (HEAP32[$3 >> 2] | 0) + 12 | 0;
    if (!(HEAP32[$66 >> 2] | 0)) $$pre$phi$iZ2D = $66; else {
     $69 = HEAP32[$0 >> 2] | 0;
     HEAP32[$69 + 20 >> 2] = 64;
     FUNCTION_TABLE_vi[HEAP32[$69 >> 2] & 255]($0);
     $$pre$phi$iZ2D = (HEAP32[$3 >> 2] | 0) + 12 | 0;
    }
    dest = $scevgep$i;
    stop = dest + 16 | 0;
    do {
     HEAP8[dest >> 0] = 0;
     dest = dest + 1 | 0;
    } while ((dest | 0) < (stop | 0));
    dest = $scevgep2$i;
    stop = dest + 16 | 0;
    do {
     HEAP8[dest >> 0] = 1;
     dest = dest + 1 | 0;
    } while ((dest | 0) < (stop | 0));
    dest = $scevgep3$i;
    stop = dest + 16 | 0;
    do {
     HEAP8[dest >> 0] = 5;
     dest = dest + 1 | 0;
    } while ((dest | 0) < (stop | 0));
    HEAP32[$5 >> 2] = 0;
    HEAP32[$6 >> 2] = 0;
    HEAP32[$7 >> 2] = 0;
    HEAP32[$8 >> 2] = 0;
    HEAP32[$9 >> 2] = 0;
    HEAP8[$10 >> 0] = 1;
    HEAP8[$11 >> 0] = 1;
    HEAP8[$12 >> 0] = 0;
    HEAP16[$13 >> 1] = 1;
    HEAP16[$14 >> 1] = 1;
    HEAP32[$15 >> 2] = 0;
    HEAP8[$16 >> 0] = 0;
    HEAP32[$$pre$phi$iZ2D >> 2] = 1;
    break;
   }
  case 192:
   {
    if (!(_get_sof($0, 1, 0, 0) | 0)) {
     $$0 = 0;
     label = 350;
     break L1;
    }
    break;
   }
  case 193:
   {
    if (!(_get_sof($0, 0, 0, 0) | 0)) {
     $$0 = 0;
     label = 350;
     break L1;
    }
    break;
   }
  case 194:
   {
    if (!(_get_sof($0, 0, 1, 0) | 0)) {
     $$0 = 0;
     label = 350;
     break L1;
    }
    break;
   }
  case 201:
   {
    if (!(_get_sof($0, 0, 0, 1) | 0)) {
     $$0 = 0;
     label = 350;
     break L1;
    }
    break;
   }
  case 202:
   {
    if (!(_get_sof($0, 0, 1, 1) | 0)) {
     $$0 = 0;
     label = 350;
     break L1;
    }
    break;
   }
  case 207:
  case 206:
  case 205:
  case 203:
  case 200:
  case 199:
  case 198:
  case 197:
  case 195:
   {
    $82 = HEAP32[$0 >> 2] | 0;
    HEAP32[$82 + 20 >> 2] = 63;
    HEAP32[$82 + 24 >> 2] = $60;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
    break;
   }
  case 204:
   {
    $282 = HEAP32[$4 >> 2] | 0;
    $283 = $282 + 4 | 0;
    $284 = HEAP32[$283 >> 2] | 0;
    if (!$284) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$282 + 12 >> 2] & 127]($0) | 0)) {
      $$0 = 0;
      label = 350;
      break L1;
     }
     $$0$i46 = HEAP32[$283 >> 2] | 0;
    } else $$0$i46 = $284;
    $$087$i = HEAP32[$282 >> 2] | 0;
    $291 = $$0$i46 + -1 | 0;
    $292 = $$087$i + 1 | 0;
    $295 = HEAPU8[$$087$i >> 0] << 8;
    if (!$291) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$282 + 12 >> 2] & 127]($0) | 0)) {
      $$0 = 0;
      label = 350;
      break L1;
     }
     $$1$i47 = HEAP32[$283 >> 2] | 0;
     $$188$i = HEAP32[$282 >> 2] | 0;
    } else {
     $$1$i47 = $291;
     $$188$i = $292;
    }
    $305 = $295 | HEAPU8[$$188$i >> 0];
    $$09397$i = $305 + -2 | 0;
    $$298$i = $$1$i47 + -1 | 0;
    $$28999$i = $$188$i + 1 | 0;
    if ($305 >>> 0 > 2) {
     $307 = $282 + 12 | 0;
     $$093100$i = $$09397$i;
     $$2101$i = $$298$i;
     $$289102$i = $$28999$i;
     while (1) {
      if (!$$2101$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$307 >> 2] & 127]($0) | 0)) {
        $$0 = 0;
        label = 350;
        break L1;
       }
       $$3$i49 = HEAP32[$283 >> 2] | 0;
       $$390$i = HEAP32[$282 >> 2] | 0;
      } else {
       $$3$i49 = $$2101$i;
       $$390$i = $$289102$i;
      }
      $314 = $$3$i49 + -1 | 0;
      $315 = $$390$i + 1 | 0;
      $316 = HEAP8[$$390$i >> 0] | 0;
      $317 = $316 & 255;
      if (!$314) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$307 >> 2] & 127]($0) | 0)) {
        $$0 = 0;
        label = 350;
        break L1;
       }
       $$4$i50 = HEAP32[$283 >> 2] | 0;
       $$491$i = HEAP32[$282 >> 2] | 0;
      } else {
       $$4$i50 = $314;
       $$491$i = $315;
      }
      $324 = HEAP8[$$491$i >> 0] | 0;
      $325 = $324 & 255;
      $326 = HEAP32[$0 >> 2] | 0;
      HEAP32[$326 + 20 >> 2] = 81;
      HEAP32[$326 + 24 >> 2] = $317;
      HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $325;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
      if (($316 & 255) <= 31) if (($316 & 255) <= 15) {
       $343 = $325 & 15;
       HEAP8[$0 + 232 + $317 >> 0] = $343;
       $346 = ($324 & 255) >>> 4;
       HEAP8[$0 + 248 + $317 >> 0] = $346;
       if ($343 >>> 0 > ($346 & 255) >>> 0) {
        $350 = HEAP32[$0 >> 2] | 0;
        HEAP32[$350 + 20 >> 2] = 30;
        HEAP32[$350 + 24 >> 2] = $325;
        FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
       }
      } else label = 93; else {
       $335 = HEAP32[$0 >> 2] | 0;
       HEAP32[$335 + 20 >> 2] = 29;
       HEAP32[$335 + 24 >> 2] = $317;
       FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
       label = 93;
      }
      if ((label | 0) == 93) {
       label = 0;
       HEAP8[$317 + -16 + ($0 + 264) >> 0] = $324;
      }
      $$093$i = $$093100$i + -2 | 0;
      $$2$i52 = $$4$i50 + -1 | 0;
      $$289$i = $$491$i + 1 | 0;
      if (($$093100$i | 0) > 2) {
       $$093100$i = $$093$i;
       $$2101$i = $$2$i52;
       $$289102$i = $$289$i;
      } else {
       $$093$lcssa$i = $$093$i;
       $$2$lcssa$i = $$2$i52;
       $$289$lcssa$i = $$289$i;
       break;
      }
     }
    } else {
     $$093$lcssa$i = $$09397$i;
     $$2$lcssa$i = $$298$i;
     $$289$lcssa$i = $$28999$i;
    }
    if ($$093$lcssa$i | 0) {
     $357 = HEAP32[$0 >> 2] | 0;
     HEAP32[$357 + 20 >> 2] = 12;
     FUNCTION_TABLE_vi[HEAP32[$357 >> 2] & 255]($0);
    }
    HEAP32[$282 >> 2] = $$289$lcssa$i;
    HEAP32[$283 >> 2] = $$2$lcssa$i;
    break;
   }
  case 196:
   {
    $360 = HEAP32[$4 >> 2] | 0;
    $361 = $360 + 4 | 0;
    $362 = HEAP32[$361 >> 2] | 0;
    if (!$362) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$360 + 12 >> 2] & 127]($0) | 0)) {
      label = 174;
      break L1;
     }
     $$0135$i = HEAP32[$361 >> 2] | 0;
    } else $$0135$i = $362;
    $$0136$i = HEAP32[$360 >> 2] | 0;
    $369 = $$0135$i + -1 | 0;
    $370 = $$0136$i + 1 | 0;
    $373 = HEAPU8[$$0136$i >> 0] << 8;
    if (!$369) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$360 + 12 >> 2] & 127]($0) | 0)) {
      label = 174;
      break L1;
     }
     $$1$i55 = HEAP32[$361 >> 2] | 0;
     $$1137$i = HEAP32[$360 >> 2] | 0;
    } else {
     $$1$i55 = $369;
     $$1137$i = $370;
    }
    $381 = $$1$i55 + -1 | 0;
    $382 = $$1137$i + 1 | 0;
    $385 = $373 | HEAPU8[$$1137$i >> 0];
    $386 = $385 + -2 | 0;
    if ($385 >>> 0 > 18) {
     $388 = $360 + 12 | 0;
     $$0134177$i = $386;
     $$2138175$i = $382;
     $$2176$i = $381;
     while (1) {
      if (!$$2176$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$3$i56 = HEAP32[$361 >> 2] | 0;
       $$3139$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$3$i56 = $$2176$i;
       $$3139$i = $$2138175$i;
      }
      $396 = HEAPU8[$$3139$i >> 0] | 0;
      $397 = HEAP32[$0 >> 2] | 0;
      HEAP32[$397 + 20 >> 2] = 82;
      HEAP32[$397 + 24 >> 2] = $396;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
      $$4165$i = $$3$i56 + -1 | 0;
      $$4140166$i = $$3139$i + 1 | 0;
      if (!$$4165$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$i57 = HEAP32[$361 >> 2] | 0;
       $$5141$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$i57 = $$4165$i;
       $$5141$i = $$4140166$i;
      }
      $409 = HEAP8[$$5141$i >> 0] | 0;
      $410 = $409 & 255;
      $$4$i58 = $$5$i57 + -1 | 0;
      $$4140$i = $$5141$i + 1 | 0;
      if (!$$4$i58) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$1$i = HEAP32[$361 >> 2] | 0;
       $$5141$1$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$1$i = $$4$i58;
       $$5141$1$i = $$4140$i;
      }
      $447 = HEAP8[$$5141$1$i >> 0] | 0;
      $474 = $447 & 255;
      $475 = $474 + $410 | 0;
      $$4$1$i = $$5$1$i + -1 | 0;
      $$4140$1$i = $$5141$1$i + 1 | 0;
      if (!$$4$1$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$2$i = HEAP32[$361 >> 2] | 0;
       $$5141$2$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$2$i = $$4$1$i;
       $$5141$2$i = $$4140$1$i;
      }
      $448 = HEAP8[$$5141$2$i >> 0] | 0;
      $482 = $448 & 255;
      $483 = $475 + $482 | 0;
      $$4$2$i = $$5$2$i + -1 | 0;
      $$4140$2$i = $$5141$2$i + 1 | 0;
      if (!$$4$2$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$3$i = HEAP32[$361 >> 2] | 0;
       $$5141$3$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$3$i = $$4$2$i;
       $$5141$3$i = $$4140$2$i;
      }
      $449 = HEAP8[$$5141$3$i >> 0] | 0;
      $490 = $449 & 255;
      $491 = $483 + $490 | 0;
      $$4$3$i = $$5$3$i + -1 | 0;
      $$4140$3$i = $$5141$3$i + 1 | 0;
      if (!$$4$3$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$4$i = HEAP32[$361 >> 2] | 0;
       $$5141$4$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$4$i = $$4$3$i;
       $$5141$4$i = $$4140$3$i;
      }
      $450 = HEAP8[$$5141$4$i >> 0] | 0;
      $498 = $450 & 255;
      $499 = $491 + $498 | 0;
      $$4$4$i = $$5$4$i + -1 | 0;
      $$4140$4$i = $$5141$4$i + 1 | 0;
      if (!$$4$4$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$5$i = HEAP32[$361 >> 2] | 0;
       $$5141$5$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$5$i = $$4$4$i;
       $$5141$5$i = $$4140$4$i;
      }
      $451 = HEAP8[$$5141$5$i >> 0] | 0;
      $506 = $451 & 255;
      $507 = $499 + $506 | 0;
      $$4$5$i = $$5$5$i + -1 | 0;
      $$4140$5$i = $$5141$5$i + 1 | 0;
      if (!$$4$5$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$6$i = HEAP32[$361 >> 2] | 0;
       $$5141$6$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$6$i = $$4$5$i;
       $$5141$6$i = $$4140$5$i;
      }
      $452 = HEAP8[$$5141$6$i >> 0] | 0;
      $514 = $452 & 255;
      $515 = $507 + $514 | 0;
      $$4$6$i = $$5$6$i + -1 | 0;
      $$4140$6$i = $$5141$6$i + 1 | 0;
      if (!$$4$6$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$7$i = HEAP32[$361 >> 2] | 0;
       $$5141$7$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$7$i = $$4$6$i;
       $$5141$7$i = $$4140$6$i;
      }
      $453 = HEAP8[$$5141$7$i >> 0] | 0;
      $522 = $453 & 255;
      $523 = $515 + $522 | 0;
      $$4$7$i = $$5$7$i + -1 | 0;
      $$4140$7$i = $$5141$7$i + 1 | 0;
      if (!$$4$7$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$8$i = HEAP32[$361 >> 2] | 0;
       $$5141$8$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$8$i = $$4$7$i;
       $$5141$8$i = $$4140$7$i;
      }
      $454 = HEAP8[$$5141$8$i >> 0] | 0;
      $530 = $454 & 255;
      $531 = $523 + $530 | 0;
      $$4$8$i = $$5$8$i + -1 | 0;
      $$4140$8$i = $$5141$8$i + 1 | 0;
      if (!$$4$8$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$9$i = HEAP32[$361 >> 2] | 0;
       $$5141$9$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$9$i = $$4$8$i;
       $$5141$9$i = $$4140$8$i;
      }
      $455 = HEAP8[$$5141$9$i >> 0] | 0;
      $538 = $455 & 255;
      $539 = $531 + $538 | 0;
      $$4$9$i = $$5$9$i + -1 | 0;
      $$4140$9$i = $$5141$9$i + 1 | 0;
      if (!$$4$9$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$10$i = HEAP32[$361 >> 2] | 0;
       $$5141$10$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$10$i = $$4$9$i;
       $$5141$10$i = $$4140$9$i;
      }
      $456 = HEAP8[$$5141$10$i >> 0] | 0;
      $546 = $456 & 255;
      $547 = $539 + $546 | 0;
      $$4$10$i = $$5$10$i + -1 | 0;
      $$4140$10$i = $$5141$10$i + 1 | 0;
      if (!$$4$10$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$11$i = HEAP32[$361 >> 2] | 0;
       $$5141$11$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$11$i = $$4$10$i;
       $$5141$11$i = $$4140$10$i;
      }
      $457 = HEAP8[$$5141$11$i >> 0] | 0;
      $554 = $457 & 255;
      $555 = $547 + $554 | 0;
      $$4$11$i = $$5$11$i + -1 | 0;
      $$4140$11$i = $$5141$11$i + 1 | 0;
      if (!$$4$11$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$12$i = HEAP32[$361 >> 2] | 0;
       $$5141$12$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$12$i = $$4$11$i;
       $$5141$12$i = $$4140$11$i;
      }
      $458 = HEAP8[$$5141$12$i >> 0] | 0;
      $562 = $458 & 255;
      $563 = $555 + $562 | 0;
      $$4$12$i = $$5$12$i + -1 | 0;
      $$4140$12$i = $$5141$12$i + 1 | 0;
      if (!$$4$12$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$13$i = HEAP32[$361 >> 2] | 0;
       $$5141$13$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$13$i = $$4$12$i;
       $$5141$13$i = $$4140$12$i;
      }
      $459 = HEAP8[$$5141$13$i >> 0] | 0;
      $570 = $459 & 255;
      $571 = $563 + $570 | 0;
      $$4$13$i = $$5$13$i + -1 | 0;
      $$4140$13$i = $$5141$13$i + 1 | 0;
      if (!$$4$13$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$14$i = HEAP32[$361 >> 2] | 0;
       $$5141$14$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$14$i = $$4$13$i;
       $$5141$14$i = $$4140$13$i;
      }
      $460 = HEAP8[$$5141$14$i >> 0] | 0;
      $578 = $460 & 255;
      $579 = $571 + $578 | 0;
      $$4$14$i = $$5$14$i + -1 | 0;
      $$4140$14$i = $$5141$14$i + 1 | 0;
      if (!$$4$14$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
        label = 174;
        break L1;
       }
       $$5$15$i = HEAP32[$361 >> 2] | 0;
       $$5141$15$i = HEAP32[$360 >> 2] | 0;
      } else {
       $$5$15$i = $$4$14$i;
       $$5141$15$i = $$4140$14$i;
      }
      $461 = HEAP8[$$5141$15$i >> 0] | 0;
      $586 = $461 & 255;
      $416 = $579 + $586 | 0;
      $$4$15$i = $$5$15$i + -1 | 0;
      $$4140$15$i = $$5141$15$i + 1 | 0;
      $431 = $$0134177$i + -17 | 0;
      $587 = HEAP32[$0 >> 2] | 0;
      HEAP32[$587 + 24 >> 2] = $410;
      HEAP32[$587 + 28 >> 2] = $474;
      HEAP32[$587 + 32 >> 2] = $482;
      HEAP32[$587 + 36 >> 2] = $490;
      HEAP32[$587 + 40 >> 2] = $498;
      HEAP32[$587 + 44 >> 2] = $506;
      HEAP32[$587 + 48 >> 2] = $514;
      HEAP32[$587 + 52 >> 2] = $522;
      HEAP32[$587 + 20 >> 2] = 88;
      FUNCTION_TABLE_vii[HEAP32[$587 + 4 >> 2] & 255]($0, 2);
      $599 = HEAP32[$0 >> 2] | 0;
      HEAP32[$599 + 24 >> 2] = $530;
      HEAP32[$599 + 28 >> 2] = $538;
      HEAP32[$599 + 32 >> 2] = $546;
      HEAP32[$599 + 36 >> 2] = $554;
      HEAP32[$599 + 40 >> 2] = $562;
      HEAP32[$599 + 44 >> 2] = $570;
      HEAP32[$599 + 48 >> 2] = $578;
      HEAP32[$599 + 52 >> 2] = $586;
      HEAP32[$599 + 20 >> 2] = 88;
      FUNCTION_TABLE_vii[HEAP32[$599 + 4 >> 2] & 255]($0, 2);
      if ($416 >>> 0 > 256 | ($431 | 0) < ($416 | 0)) {
       $412 = HEAP32[$0 >> 2] | 0;
       HEAP32[$412 + 20 >> 2] = 9;
       FUNCTION_TABLE_vi[HEAP32[$412 >> 2] & 255]($0);
      }
      _memset($1 | 0, 0, 256) | 0;
      if (!$416) {
       $$6$lcssa$i = $$4$15$i;
       $$6142$lcssa$i = $$4140$15$i;
       $430 = 0;
      } else {
       $$1145171$i = 0;
       $$6142172$i = $$4140$15$i;
       $$6173$i = $$4$15$i;
       while (1) {
        if (!$$6173$i) {
         if (!(FUNCTION_TABLE_ii[HEAP32[$388 >> 2] & 127]($0) | 0)) {
          label = 174;
          break L1;
         }
         $$7$i60 = HEAP32[$361 >> 2] | 0;
         $$7143$i = HEAP32[$360 >> 2] | 0;
        } else {
         $$7$i60 = $$6173$i;
         $$7143$i = $$6142172$i;
        }
        $423 = $$7$i60 + -1 | 0;
        $424 = $$7143$i + 1 | 0;
        HEAP8[$1 + $$1145171$i >> 0] = HEAP8[$$7143$i >> 0] | 0;
        $$1145171$i = $$1145171$i + 1 | 0;
        if ($$1145171$i >>> 0 >= $416 >>> 0) {
         $$6$lcssa$i = $423;
         $$6142$lcssa$i = $424;
         $430 = $416;
         break;
        } else {
         $$6142172$i = $424;
         $$6173$i = $423;
        }
       }
      }
      $429 = $431 - $430 | 0;
      $433 = ($396 & 16 | 0) == 0;
      $434 = $396 + -16 | 0;
      $$0148$i = $433 ? $396 : $434;
      $$0146$i = $433 ? $0 + 180 + ($396 << 2) | 0 : $0 + 196 + ($434 << 2) | 0;
      if ($$0148$i >>> 0 > 3) {
       $438 = HEAP32[$0 >> 2] | 0;
       HEAP32[$438 + 20 >> 2] = 31;
       HEAP32[$438 + 24 >> 2] = $$0148$i;
       FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
      }
      $443 = HEAP32[$$0146$i >> 2] | 0;
      if (!$443) {
       $445 = _jpeg_alloc_huff_table($0) | 0;
       HEAP32[$$0146$i >> 2] = $445;
       $446 = $445;
      } else $446 = $443;
      HEAP8[$446 >> 0] = 0;
      HEAP8[$446 + 1 >> 0] = $409;
      HEAP8[$446 + 2 >> 0] = $447;
      HEAP8[$446 + 3 >> 0] = $448;
      HEAP8[$446 + 4 >> 0] = $449;
      HEAP8[$446 + 5 >> 0] = $450;
      HEAP8[$446 + 6 >> 0] = $451;
      HEAP8[$446 + 7 >> 0] = $452;
      HEAP8[$446 + 8 >> 0] = $453;
      HEAP8[$446 + 9 >> 0] = $454;
      HEAP8[$446 + 10 >> 0] = $455;
      HEAP8[$446 + 11 >> 0] = $456;
      HEAP8[$446 + 12 >> 0] = $457;
      HEAP8[$446 + 13 >> 0] = $458;
      HEAP8[$446 + 14 >> 0] = $459;
      HEAP8[$446 + 15 >> 0] = $460;
      HEAP8[$446 + 16 >> 0] = $461;
      _memcpy((HEAP32[$$0146$i >> 2] | 0) + 17 | 0, $1 | 0, 256) | 0;
      if (($429 | 0) > 16) {
       $$0134177$i = $429;
       $$2138175$i = $$6142$lcssa$i;
       $$2176$i = $$6$lcssa$i;
      } else {
       $$0134$lcssa$i = $429;
       $$2$lcssa$i62 = $$6$lcssa$i;
       $$2138$lcssa$i = $$6142$lcssa$i;
       break;
      }
     }
    } else {
     $$0134$lcssa$i = $386;
     $$2$lcssa$i62 = $381;
     $$2138$lcssa$i = $382;
    }
    if ($$0134$lcssa$i | 0) {
     $466 = HEAP32[$0 >> 2] | 0;
     HEAP32[$466 + 20 >> 2] = 12;
     FUNCTION_TABLE_vi[HEAP32[$466 >> 2] & 255]($0);
    }
    HEAP32[$360 >> 2] = $$2138$lcssa$i;
    HEAP32[$361 >> 2] = $$2$lcssa$i62;
    break;
   }
  case 219:
   {
    $613 = HEAP32[$4 >> 2] | 0;
    $614 = $613 + 4 | 0;
    $615 = HEAP32[$614 >> 2] | 0;
    if (!$615) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$613 + 12 >> 2] & 127]($0) | 0)) {
      $$0 = 0;
      label = 350;
      break L1;
     }
     $$0158$i = HEAP32[$614 >> 2] | 0;
    } else $$0158$i = $615;
    $$0159$i = HEAP32[$613 >> 2] | 0;
    $622 = $$0158$i + -1 | 0;
    $623 = $$0159$i + 1 | 0;
    $626 = HEAPU8[$$0159$i >> 0] << 8;
    if (!$622) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$613 + 12 >> 2] & 127]($0) | 0)) {
      $$0 = 0;
      label = 350;
      break L1;
     }
     $$1$i66 = HEAP32[$614 >> 2] | 0;
     $$1160$i = HEAP32[$613 >> 2] | 0;
    } else {
     $$1$i66 = $622;
     $$1160$i = $623;
    }
    $634 = $$1$i66 + -1 | 0;
    $635 = $$1160$i + 1 | 0;
    $638 = $626 | HEAPU8[$$1160$i >> 0];
    $639 = $638 + -2 | 0;
    if ($638 >>> 0 > 2) {
     $641 = $613 + 12 | 0;
     $$0168199$i = $639;
     $$2161200$i = $635;
     $$2201$i = $634;
     while (1) {
      $642 = $$0168199$i + -1 | 0;
      if (!$$2201$i) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$641 >> 2] & 127]($0) | 0)) {
        $$0 = 0;
        label = 350;
        break L1;
       }
       $$3$i67 = HEAP32[$614 >> 2] | 0;
       $$3162$i = HEAP32[$613 >> 2] | 0;
      } else {
       $$3$i67 = $$2201$i;
       $$3162$i = $$2161200$i;
      }
      $650 = HEAPU8[$$3162$i >> 0] | 0;
      $651 = $650 >>> 4;
      $652 = $650 & 15;
      $653 = HEAP32[$0 >> 2] | 0;
      HEAP32[$653 + 20 >> 2] = 83;
      HEAP32[$653 + 24 >> 2] = $652;
      HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $651;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
      if ($652 >>> 0 > 3) {
       $662 = HEAP32[$0 >> 2] | 0;
       HEAP32[$662 + 20 >> 2] = 32;
       HEAP32[$662 + 24 >> 2] = $652;
       FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
      }
      $667 = $0 + 164 + ($652 << 2) | 0;
      $668 = HEAP32[$667 >> 2] | 0;
      if (!$668) {
       $670 = _jpeg_alloc_quant_table($0) | 0;
       HEAP32[$667 >> 2] = $670;
       $673 = $670;
      } else $673 = $668;
      $671 = ($651 | 0) != 0;
      if ($671) if (($$0168199$i | 0) < 129) {
       HEAP16[$673 >> 1] = 1;
       HEAP16[$673 + 2 >> 1] = 1;
       HEAP16[$673 + 4 >> 1] = 1;
       HEAP16[$673 + 6 >> 1] = 1;
       HEAP16[$673 + 8 >> 1] = 1;
       HEAP16[$673 + 10 >> 1] = 1;
       HEAP16[$673 + 12 >> 1] = 1;
       HEAP16[$673 + 14 >> 1] = 1;
       HEAP16[$673 + 16 >> 1] = 1;
       HEAP16[$673 + 18 >> 1] = 1;
       HEAP16[$673 + 20 >> 1] = 1;
       HEAP16[$673 + 22 >> 1] = 1;
       HEAP16[$673 + 24 >> 1] = 1;
       HEAP16[$673 + 26 >> 1] = 1;
       HEAP16[$673 + 28 >> 1] = 1;
       HEAP16[$673 + 30 >> 1] = 1;
       HEAP16[$673 + 32 >> 1] = 1;
       HEAP16[$673 + 34 >> 1] = 1;
       HEAP16[$673 + 36 >> 1] = 1;
       HEAP16[$673 + 38 >> 1] = 1;
       HEAP16[$673 + 40 >> 1] = 1;
       HEAP16[$673 + 42 >> 1] = 1;
       HEAP16[$673 + 44 >> 1] = 1;
       HEAP16[$673 + 46 >> 1] = 1;
       HEAP16[$673 + 48 >> 1] = 1;
       HEAP16[$673 + 50 >> 1] = 1;
       HEAP16[$673 + 52 >> 1] = 1;
       HEAP16[$673 + 54 >> 1] = 1;
       HEAP16[$673 + 56 >> 1] = 1;
       HEAP16[$673 + 58 >> 1] = 1;
       HEAP16[$673 + 60 >> 1] = 1;
       HEAP16[$673 + 62 >> 1] = 1;
       HEAP16[$673 + 64 >> 1] = 1;
       HEAP16[$673 + 66 >> 1] = 1;
       HEAP16[$673 + 68 >> 1] = 1;
       HEAP16[$673 + 70 >> 1] = 1;
       HEAP16[$673 + 72 >> 1] = 1;
       HEAP16[$673 + 74 >> 1] = 1;
       HEAP16[$673 + 76 >> 1] = 1;
       HEAP16[$673 + 78 >> 1] = 1;
       HEAP16[$673 + 80 >> 1] = 1;
       HEAP16[$673 + 82 >> 1] = 1;
       HEAP16[$673 + 84 >> 1] = 1;
       HEAP16[$673 + 86 >> 1] = 1;
       HEAP16[$673 + 88 >> 1] = 1;
       HEAP16[$673 + 90 >> 1] = 1;
       HEAP16[$673 + 92 >> 1] = 1;
       HEAP16[$673 + 94 >> 1] = 1;
       HEAP16[$673 + 96 >> 1] = 1;
       HEAP16[$673 + 98 >> 1] = 1;
       HEAP16[$673 + 100 >> 1] = 1;
       HEAP16[$673 + 102 >> 1] = 1;
       HEAP16[$673 + 104 >> 1] = 1;
       HEAP16[$673 + 106 >> 1] = 1;
       HEAP16[$673 + 108 >> 1] = 1;
       HEAP16[$673 + 110 >> 1] = 1;
       HEAP16[$673 + 112 >> 1] = 1;
       HEAP16[$673 + 114 >> 1] = 1;
       HEAP16[$673 + 116 >> 1] = 1;
       HEAP16[$673 + 118 >> 1] = 1;
       HEAP16[$673 + 120 >> 1] = 1;
       HEAP16[$673 + 122 >> 1] = 1;
       HEAP16[$673 + 124 >> 1] = 1;
       HEAP16[$673 + 126 >> 1] = 1;
       $$0171$i = $642 >> 1;
       label = 196;
      } else label = 203; else if (($$0168199$i | 0) < 65) {
       HEAP16[$673 >> 1] = 1;
       HEAP16[$673 + 2 >> 1] = 1;
       HEAP16[$673 + 4 >> 1] = 1;
       HEAP16[$673 + 6 >> 1] = 1;
       HEAP16[$673 + 8 >> 1] = 1;
       HEAP16[$673 + 10 >> 1] = 1;
       HEAP16[$673 + 12 >> 1] = 1;
       HEAP16[$673 + 14 >> 1] = 1;
       HEAP16[$673 + 16 >> 1] = 1;
       HEAP16[$673 + 18 >> 1] = 1;
       HEAP16[$673 + 20 >> 1] = 1;
       HEAP16[$673 + 22 >> 1] = 1;
       HEAP16[$673 + 24 >> 1] = 1;
       HEAP16[$673 + 26 >> 1] = 1;
       HEAP16[$673 + 28 >> 1] = 1;
       HEAP16[$673 + 30 >> 1] = 1;
       HEAP16[$673 + 32 >> 1] = 1;
       HEAP16[$673 + 34 >> 1] = 1;
       HEAP16[$673 + 36 >> 1] = 1;
       HEAP16[$673 + 38 >> 1] = 1;
       HEAP16[$673 + 40 >> 1] = 1;
       HEAP16[$673 + 42 >> 1] = 1;
       HEAP16[$673 + 44 >> 1] = 1;
       HEAP16[$673 + 46 >> 1] = 1;
       HEAP16[$673 + 48 >> 1] = 1;
       HEAP16[$673 + 50 >> 1] = 1;
       HEAP16[$673 + 52 >> 1] = 1;
       HEAP16[$673 + 54 >> 1] = 1;
       HEAP16[$673 + 56 >> 1] = 1;
       HEAP16[$673 + 58 >> 1] = 1;
       HEAP16[$673 + 60 >> 1] = 1;
       HEAP16[$673 + 62 >> 1] = 1;
       HEAP16[$673 + 64 >> 1] = 1;
       HEAP16[$673 + 66 >> 1] = 1;
       HEAP16[$673 + 68 >> 1] = 1;
       HEAP16[$673 + 70 >> 1] = 1;
       HEAP16[$673 + 72 >> 1] = 1;
       HEAP16[$673 + 74 >> 1] = 1;
       HEAP16[$673 + 76 >> 1] = 1;
       HEAP16[$673 + 78 >> 1] = 1;
       HEAP16[$673 + 80 >> 1] = 1;
       HEAP16[$673 + 82 >> 1] = 1;
       HEAP16[$673 + 84 >> 1] = 1;
       HEAP16[$673 + 86 >> 1] = 1;
       HEAP16[$673 + 88 >> 1] = 1;
       HEAP16[$673 + 90 >> 1] = 1;
       HEAP16[$673 + 92 >> 1] = 1;
       HEAP16[$673 + 94 >> 1] = 1;
       HEAP16[$673 + 96 >> 1] = 1;
       HEAP16[$673 + 98 >> 1] = 1;
       HEAP16[$673 + 100 >> 1] = 1;
       HEAP16[$673 + 102 >> 1] = 1;
       HEAP16[$673 + 104 >> 1] = 1;
       HEAP16[$673 + 106 >> 1] = 1;
       HEAP16[$673 + 108 >> 1] = 1;
       HEAP16[$673 + 110 >> 1] = 1;
       HEAP16[$673 + 112 >> 1] = 1;
       HEAP16[$673 + 114 >> 1] = 1;
       HEAP16[$673 + 116 >> 1] = 1;
       HEAP16[$673 + 118 >> 1] = 1;
       HEAP16[$673 + 120 >> 1] = 1;
       HEAP16[$673 + 122 >> 1] = 1;
       HEAP16[$673 + 124 >> 1] = 1;
       HEAP16[$673 + 126 >> 1] = 1;
       $$0171$i = $642;
       label = 196;
      } else label = 203;
      L197 : do if ((label | 0) == 196) {
       label = 0;
       switch ($$0171$i | 0) {
       case 4:
        {
         $$0170$ph$i = 3792;
         break;
        }
       case 9:
        {
         $$0170$ph$i = 3680;
         break;
        }
       case 16:
        {
         $$0170$ph$i = 3552;
         break;
        }
       case 25:
        {
         $$0170$ph$i = 3376;
         break;
        }
       case 36:
        {
         $$0170$ph$i = 3168;
         break;
        }
       case 49:
        {
         $$0170$ph$i = 2896;
         break;
        }
       default:
        {
         $$4192$i = $$3$i67 + -1 | 0;
         $$4163193$i = $$3162$i + 1 | 0;
         if (($$0171$i | 0) > 0) {
          $$0170220$i = 2576;
          $$0171177218$i = $$0171$i;
          $$4163193222$i = $$4163193$i;
          $$4192221$i = $$4192$i;
          label = 205;
          break L197;
         } else {
          $$0171177219$i = $$0171$i;
          $$4$lcssa$i = $$4192$i;
          $$4163$lcssa$i = $$4163193$i;
          break L197;
         }
        }
       }
       $$0170220$i = $$0170$ph$i;
       $$0171177218$i = $$0171$i;
       $$4163193222$i = $$3162$i + 1 | 0;
       $$4192221$i = $$3$i67 + -1 | 0;
       label = 205;
      } else if ((label | 0) == 203) {
       label = 0;
       $$0170220$i = 2576;
       $$0171177218$i = 64;
       $$4163193222$i = $$3162$i + 1 | 0;
       $$4192221$i = $$3$i67 + -1 | 0;
       label = 205;
      } while (0);
      L208 : do if ((label | 0) == 205) {
       label = 0;
       if (!$671) {
        $$2175194$i = 0;
        $$4163196$i = $$4163193222$i;
        $$4195$i = $$4192221$i;
        while (1) {
         if (!$$4195$i) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$641 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$7$i70 = HEAP32[$614 >> 2] | 0;
          $$7166$i = HEAP32[$613 >> 2] | 0;
         } else {
          $$7$i70 = $$4195$i;
          $$7166$i = $$4163196$i;
         }
         HEAP16[$673 + (HEAP32[$$0170220$i + ($$2175194$i << 2) >> 2] << 1) >> 1] = HEAPU8[$$7166$i >> 0] | 0;
         $$2175194$i = $$2175194$i + 1 | 0;
         $$4$i71 = $$7$i70 + -1 | 0;
         $$4163$i = $$7166$i + 1 | 0;
         if (($$2175194$i | 0) >= ($$0171177218$i | 0)) {
          $$0171177219$i = $$0171177218$i;
          $$4$lcssa$i = $$4$i71;
          $$4163$lcssa$i = $$4163$i;
          break L208;
         } else {
          $$4163196$i = $$4163$i;
          $$4195$i = $$4$i71;
         }
        }
       }
       $$2175194$us$i = 0;
       $$4163196$us$i = $$4163193222$i;
       $$4195$us$i = $$4192221$i;
       while (1) {
        if (!$$4195$us$i) {
         if (!(FUNCTION_TABLE_ii[HEAP32[$641 >> 2] & 127]($0) | 0)) {
          $$0 = 0;
          label = 350;
          break L1;
         }
         $$5$us$i = HEAP32[$614 >> 2] | 0;
         $$5164$us$i = HEAP32[$613 >> 2] | 0;
        } else {
         $$5$us$i = $$4195$us$i;
         $$5164$us$i = $$4163196$us$i;
        }
        $809 = $$5$us$i + -1 | 0;
        $810 = $$5164$us$i + 1 | 0;
        $813 = HEAPU8[$$5164$us$i >> 0] << 8;
        if (!$809) {
         if (!(FUNCTION_TABLE_ii[HEAP32[$641 >> 2] & 127]($0) | 0)) {
          $$0 = 0;
          label = 350;
          break L1;
         }
         $$6$us$i = HEAP32[$614 >> 2] | 0;
         $$6165$us$i = HEAP32[$613 >> 2] | 0;
        } else {
         $$6$us$i = $809;
         $$6165$us$i = $810;
        }
        HEAP16[$673 + (HEAP32[$$0170220$i + ($$2175194$us$i << 2) >> 2] << 1) >> 1] = $813 | HEAPU8[$$6165$us$i >> 0];
        $$2175194$us$i = $$2175194$us$i + 1 | 0;
        $$4$us$i = $$6$us$i + -1 | 0;
        $$4163$us$i = $$6165$us$i + 1 | 0;
        if (($$2175194$us$i | 0) >= ($$0171177218$i | 0)) {
         $$0171177219$i = $$0171177218$i;
         $$4$lcssa$i = $$4$us$i;
         $$4163$lcssa$i = $$4163$us$i;
         break;
        } else {
         $$4163196$us$i = $$4163$us$i;
         $$4195$us$i = $$4$us$i;
        }
       }
      } while (0);
      $842 = HEAP32[$0 >> 2] | 0;
      L230 : do if ((HEAP32[$842 + 104 >> 2] | 0) > 1) {
       $$3176198$i = 0;
       $847 = $842;
       while (1) {
        HEAP32[$847 + 24 >> 2] = HEAPU16[$673 + ($$3176198$i << 1) >> 1];
        HEAP32[$847 + 28 >> 2] = HEAPU16[$673 + (($$3176198$i | 1) << 1) >> 1];
        HEAP32[$847 + 32 >> 2] = HEAPU16[$673 + (($$3176198$i | 2) << 1) >> 1];
        HEAP32[$847 + 36 >> 2] = HEAPU16[$673 + (($$3176198$i | 3) << 1) >> 1];
        HEAP32[$847 + 40 >> 2] = HEAPU16[$673 + (($$3176198$i | 4) << 1) >> 1];
        HEAP32[$847 + 44 >> 2] = HEAPU16[$673 + (($$3176198$i | 5) << 1) >> 1];
        HEAP32[$847 + 48 >> 2] = HEAPU16[$673 + (($$3176198$i | 6) << 1) >> 1];
        HEAP32[$847 + 52 >> 2] = HEAPU16[$673 + (($$3176198$i | 7) << 1) >> 1];
        HEAP32[$847 + 20 >> 2] = 95;
        FUNCTION_TABLE_vii[HEAP32[$847 + 4 >> 2] & 255]($0, 2);
        $889 = $$3176198$i + 8 | 0;
        if ($889 >>> 0 >= 64) break L230;
        $$3176198$i = $889;
        $847 = HEAP32[$0 >> 2] | 0;
       }
      } while (0);
      $spec$select$i74 = $642 - $$0171177219$i + ($671 ? 0 - $$0171177219$i | 0 : 0) | 0;
      if (($spec$select$i74 | 0) > 0) {
       $$0168199$i = $spec$select$i74;
       $$2161200$i = $$4163$lcssa$i;
       $$2201$i = $$4$lcssa$i;
      } else {
       $$0168$lcssa$i = $spec$select$i74;
       $$2$lcssa$i76 = $$4$lcssa$i;
       $$2161$lcssa$i = $$4163$lcssa$i;
       break;
      }
     }
    } else {
     $$0168$lcssa$i = $639;
     $$2$lcssa$i76 = $634;
     $$2161$lcssa$i = $635;
    }
    if ($$0168$lcssa$i | 0) {
     $894 = HEAP32[$0 >> 2] | 0;
     HEAP32[$894 + 20 >> 2] = 12;
     FUNCTION_TABLE_vi[HEAP32[$894 >> 2] & 255]($0);
    }
    HEAP32[$613 >> 2] = $$2161$lcssa$i;
    HEAP32[$614 >> 2] = $$2$lcssa$i76;
    break;
   }
  case 221:
   {
    $897 = HEAP32[$4 >> 2] | 0;
    $898 = $897 + 4 | 0;
    $899 = HEAP32[$898 >> 2] | 0;
    if (!$899) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$897 + 12 >> 2] & 127]($0) | 0)) {
      $$0 = 0;
      label = 350;
      break L1;
     }
     $$0$i78 = HEAP32[$898 >> 2] | 0;
    } else $$0$i78 = $899;
    $$057$i = HEAP32[$897 >> 2] | 0;
    $906 = $$0$i78 + -1 | 0;
    $907 = $$057$i + 1 | 0;
    $910 = HEAPU8[$$057$i >> 0] << 8;
    if (!$906) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$897 + 12 >> 2] & 127]($0) | 0)) {
      $$0 = 0;
      label = 350;
      break L1;
     }
     $$1$i79 = HEAP32[$898 >> 2] | 0;
     $$158$i = HEAP32[$897 >> 2] | 0;
    } else {
     $$1$i79 = $906;
     $$158$i = $907;
    }
    $918 = $$1$i79 + -1 | 0;
    $919 = $$158$i + 1 | 0;
    if (($910 | HEAPU8[$$158$i >> 0] | 0) != 4) {
     $924 = HEAP32[$0 >> 2] | 0;
     HEAP32[$924 + 20 >> 2] = 12;
     FUNCTION_TABLE_vi[HEAP32[$924 >> 2] & 255]($0);
    }
    if (!$918) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$897 + 12 >> 2] & 127]($0) | 0)) {
      $$0 = 0;
      label = 350;
      break L1;
     }
     $$2$i80 = HEAP32[$898 >> 2] | 0;
     $$259$i = HEAP32[$897 >> 2] | 0;
    } else {
     $$2$i80 = $918;
     $$259$i = $919;
    }
    $934 = $$2$i80 + -1 | 0;
    $935 = $$259$i + 1 | 0;
    $938 = HEAPU8[$$259$i >> 0] << 8;
    if (!$934) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$897 + 12 >> 2] & 127]($0) | 0)) {
      $$0 = 0;
      label = 350;
      break L1;
     }
     $$3$i81 = HEAP32[$898 >> 2] | 0;
     $$360$i = HEAP32[$897 >> 2] | 0;
    } else {
     $$3$i81 = $934;
     $$360$i = $935;
    }
    $950 = $938 | HEAPU8[$$360$i >> 0];
    $951 = HEAP32[$0 >> 2] | 0;
    HEAP32[$951 + 20 >> 2] = 84;
    HEAP32[$951 + 24 >> 2] = $950;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
    HEAP32[$5 >> 2] = $950;
    HEAP32[$897 >> 2] = $$360$i + 1;
    HEAP32[$898 >> 2] = $$3$i81 + -1;
    break;
   }
  case 248:
   {
    $957 = HEAP32[$4 >> 2] | 0;
    $958 = HEAP32[$957 >> 2] | 0;
    $959 = $957 + 4 | 0;
    $960 = HEAP32[$959 >> 2] | 0;
    if (!(HEAP32[(HEAP32[$3 >> 2] | 0) + 16 >> 2] | 0)) {
     $965 = HEAP32[$0 >> 2] | 0;
     HEAP32[$965 + 20 >> 2] = 60;
     _strncpy($965 + 24 | 0, 50709, 80) | 0;
     FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
    }
    do if ((HEAP32[$17 >> 2] | 0) >= 3) {
     if (!$960) {
      if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
       $$0 = 0;
       label = 350;
       break L1;
      }
      $$0$i82 = HEAP32[$959 >> 2] | 0;
      $$0231$i = HEAP32[$957 >> 2] | 0;
     } else {
      $$0$i82 = $960;
      $$0231$i = $958;
     }
     $979 = $$0$i82 + -1 | 0;
     $980 = $$0231$i + 1 | 0;
     $983 = HEAPU8[$$0231$i >> 0] << 8;
     if (!$979) {
      if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
       $$0 = 0;
       label = 350;
       break L1;
      }
      $$1$i83 = HEAP32[$959 >> 2] | 0;
      $$1232$i = HEAP32[$957 >> 2] | 0;
     } else {
      $$1$i83 = $979;
      $$1232$i = $980;
     }
     $991 = $$1$i83 + -1 | 0;
     $992 = $$1232$i + 1 | 0;
     if (($983 | HEAPU8[$$1232$i >> 0] | 0) != 24) {
      $997 = HEAP32[$0 >> 2] | 0;
      HEAP32[$997 + 20 >> 2] = 12;
      FUNCTION_TABLE_vi[HEAP32[$997 >> 2] & 255]($0);
     }
     if (!$991) {
      if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
       $$0 = 0;
       label = 350;
       break L1;
      }
      $$2$i84 = HEAP32[$959 >> 2] | 0;
      $$2233$i = HEAP32[$957 >> 2] | 0;
     } else {
      $$2$i84 = $991;
      $$2233$i = $992;
     }
     $1007 = $$2$i84 + -1 | 0;
     $1008 = $$2233$i + 1 | 0;
     if ((HEAP8[$$2233$i >> 0] | 0) != 13) {
      $1011 = HEAP32[$0 >> 2] | 0;
      HEAP32[$1011 + 20 >> 2] = 70;
      HEAP32[$1011 + 24 >> 2] = HEAP32[$2 >> 2];
      FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
     }
     if (!$1007) {
      if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
       $$0 = 0;
       label = 350;
       break L1;
      }
      $$3$i85 = HEAP32[$959 >> 2] | 0;
      $$3234$i = HEAP32[$957 >> 2] | 0;
     } else {
      $$3$i85 = $1007;
      $$3234$i = $1008;
     }
     $1024 = $$3$i85 + -1 | 0;
     $1025 = $$3234$i + 1 | 0;
     $1028 = HEAPU8[$$3234$i >> 0] << 8;
     if (!$1024) {
      if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
       $$0 = 0;
       label = 350;
       break L1;
      }
      $$4$i86 = HEAP32[$959 >> 2] | 0;
      $$4235$i = HEAP32[$957 >> 2] | 0;
     } else {
      $$4$i86 = $1024;
      $$4235$i = $1025;
     }
     $1036 = $$4$i86 + -1 | 0;
     $1037 = $$4235$i + 1 | 0;
     if (($1028 | HEAPU8[$$4235$i >> 0] | 0) == 255) {
      if (!$1036) {
       if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
        $$0 = 0;
        label = 350;
        break L1;
       }
       $$5$i87 = HEAP32[$959 >> 2] | 0;
       $$5236$i = HEAP32[$957 >> 2] | 0;
      } else {
       $$5$i87 = $1036;
       $$5236$i = $1037;
      }
      $1049 = $$5$i87 + -1 | 0;
      $1050 = $$5236$i + 1 | 0;
      if ((HEAP8[$$5236$i >> 0] | 0) == 3) {
       if (!$1049) {
        if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
         $$0 = 0;
         label = 350;
         break L1;
        }
        $$6$i88 = HEAP32[$959 >> 2] | 0;
        $$6237$i = HEAP32[$957 >> 2] | 0;
       } else {
        $$6$i88 = $1049;
        $$6237$i = $1050;
       }
       $1060 = $$6$i88 + -1 | 0;
       $1061 = $$6237$i + 1 | 0;
       $1064 = HEAP32[$18 >> 2] | 0;
       if ((HEAP32[$1064 + 88 >> 2] | 0) == (HEAPU8[$$6237$i >> 0] | 0)) {
        if (!$1060) {
         if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
          $$0 = 0;
          label = 350;
          break L1;
         }
         $$7$i90 = HEAP32[$959 >> 2] | 0;
         $$7238$i = HEAP32[$957 >> 2] | 0;
         $1080 = HEAP32[$18 >> 2] | 0;
        } else {
         $$7$i90 = $1060;
         $$7238$i = $1061;
         $1080 = $1064;
        }
        $1075 = $$7$i90 + -1 | 0;
        $1076 = $$7238$i + 1 | 0;
        if ((HEAP32[$1080 >> 2] | 0) == (HEAPU8[$$7238$i >> 0] | 0)) {
         if (!$1075) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$8$i91 = HEAP32[$959 >> 2] | 0;
          $$8239$i = HEAP32[$957 >> 2] | 0;
          $1094 = HEAP32[$18 >> 2] | 0;
         } else {
          $$8$i91 = $1075;
          $$8239$i = $1076;
          $1094 = $1080;
         }
         $1089 = $$8$i91 + -1 | 0;
         $1090 = $$8239$i + 1 | 0;
         if ((HEAP32[$1094 + 176 >> 2] | 0) != (HEAPU8[$$8239$i >> 0] | 0)) {
          $$24$i = $1089;
          $$24255$i = $1090;
          label = 335;
          break;
         }
         if (!$1089) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$9$i = HEAP32[$959 >> 2] | 0;
          $$9240$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$9$i = $1089;
          $$9240$i = $1090;
         }
         $1104 = $$9$i + -1 | 0;
         $1105 = $$9240$i + 1 | 0;
         if ((HEAP8[$$9240$i >> 0] | 0) != -128) {
          $$24$i = $1104;
          $$24255$i = $1105;
          label = 335;
          break;
         }
         if (!$1104) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$10$i = HEAP32[$959 >> 2] | 0;
          $$10241$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$10$i = $1104;
          $$10241$i = $1105;
         }
         $1115 = $$10$i + -1 | 0;
         $1116 = $$10241$i + 1 | 0;
         $1119 = HEAPU8[$$10241$i >> 0] << 8;
         if (!$1115) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$11$i = HEAP32[$959 >> 2] | 0;
          $$11242$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$11$i = $1115;
          $$11242$i = $1116;
         }
         $1127 = $$11$i + -1 | 0;
         $1128 = $$11242$i + 1 | 0;
         if ($1119 | HEAPU8[$$11242$i >> 0] | 0) {
          $$24$i = $1127;
          $$24255$i = $1128;
          label = 335;
          break;
         }
         if (!$1127) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$12$i = HEAP32[$959 >> 2] | 0;
          $$12243$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$12$i = $1127;
          $$12243$i = $1128;
         }
         $1140 = $$12$i + -1 | 0;
         $1141 = $$12243$i + 1 | 0;
         $1144 = HEAPU8[$$12243$i >> 0] << 8;
         if (!$1140) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$13$i = HEAP32[$959 >> 2] | 0;
          $$13244$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$13$i = $1140;
          $$13244$i = $1141;
         }
         $1152 = $$13$i + -1 | 0;
         $1153 = $$13244$i + 1 | 0;
         if ($1144 | HEAPU8[$$13244$i >> 0] | 0) {
          $$24$i = $1152;
          $$24255$i = $1153;
          label = 335;
          break;
         }
         if (!$1152) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$14$i = HEAP32[$959 >> 2] | 0;
          $$14245$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$14$i = $1152;
          $$14245$i = $1153;
         }
         $1165 = $$14$i + -1 | 0;
         $1166 = $$14245$i + 1 | 0;
         if (HEAP8[$$14245$i >> 0] | 0) {
          $$24$i = $1165;
          $$24255$i = $1166;
          label = 335;
          break;
         }
         if (!$1165) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$15$i = HEAP32[$959 >> 2] | 0;
          $$15246$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$15$i = $1165;
          $$15246$i = $1166;
         }
         $1176 = $$15$i + -1 | 0;
         $1177 = $$15246$i + 1 | 0;
         $1180 = HEAPU8[$$15246$i >> 0] << 8;
         if (!$1176) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$16$i = HEAP32[$959 >> 2] | 0;
          $$16247$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$16$i = $1176;
          $$16247$i = $1177;
         }
         $1188 = $$16$i + -1 | 0;
         $1189 = $$16247$i + 1 | 0;
         if (($1180 | HEAPU8[$$16247$i >> 0] | 0) != 1) {
          $$24$i = $1188;
          $$24255$i = $1189;
          label = 335;
          break;
         }
         if (!$1188) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$17$i = HEAP32[$959 >> 2] | 0;
          $$17248$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$17$i = $1188;
          $$17248$i = $1189;
         }
         $1201 = $$17$i + -1 | 0;
         $1202 = $$17248$i + 1 | 0;
         $1205 = HEAPU8[$$17248$i >> 0] << 8;
         if (!$1201) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$18$i = HEAP32[$959 >> 2] | 0;
          $$18249$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$18$i = $1201;
          $$18249$i = $1202;
         }
         $1213 = $$18$i + -1 | 0;
         $1214 = $$18249$i + 1 | 0;
         if ($1205 | HEAPU8[$$18249$i >> 0] | 0) {
          $$24$i = $1213;
          $$24255$i = $1214;
          label = 335;
          break;
         }
         if (!$1213) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$19$i = HEAP32[$959 >> 2] | 0;
          $$19250$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$19$i = $1213;
          $$19250$i = $1214;
         }
         $1226 = $$19$i + -1 | 0;
         $1227 = $$19250$i + 1 | 0;
         if (HEAP8[$$19250$i >> 0] | 0) {
          $$24$i = $1226;
          $$24255$i = $1227;
          label = 335;
          break;
         }
         if (!$1226) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$20$i = HEAP32[$959 >> 2] | 0;
          $$20251$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$20$i = $1226;
          $$20251$i = $1227;
         }
         $1237 = $$20$i + -1 | 0;
         $1238 = $$20251$i + 1 | 0;
         $1241 = HEAPU8[$$20251$i >> 0] << 8;
         if (!$1237) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$21$i = HEAP32[$959 >> 2] | 0;
          $$21252$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$21$i = $1237;
          $$21252$i = $1238;
         }
         $1249 = $$21$i + -1 | 0;
         $1250 = $$21252$i + 1 | 0;
         if (($1241 | HEAPU8[$$21252$i >> 0] | 0) != 1) {
          $$24$i = $1249;
          $$24255$i = $1250;
          label = 335;
          break;
         }
         if (!$1249) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$22$i = HEAP32[$959 >> 2] | 0;
          $$22253$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$22$i = $1249;
          $$22253$i = $1250;
         }
         $1262 = $$22$i + -1 | 0;
         $1263 = $$22253$i + 1 | 0;
         $1266 = HEAPU8[$$22253$i >> 0] << 8;
         if (!$1262) {
          if (!(FUNCTION_TABLE_ii[HEAP32[$957 + 12 >> 2] & 127]($0) | 0)) {
           $$0 = 0;
           label = 350;
           break L1;
          }
          $$23$i = HEAP32[$959 >> 2] | 0;
          $$23254$i = HEAP32[$957 >> 2] | 0;
         } else {
          $$23$i = $1262;
          $$23254$i = $1263;
         }
         $1274 = $$23$i + -1 | 0;
         $1275 = $$23254$i + 1 | 0;
         if (!($1266 | HEAPU8[$$23254$i >> 0])) {
          $$25$i = $1274;
          $$25256$i = $1275;
         } else {
          $$24$i = $1274;
          $$24255$i = $1275;
          label = 335;
         }
        } else {
         $$24$i = $1075;
         $$24255$i = $1076;
         label = 335;
        }
       } else {
        $$24$i = $1060;
        $$24255$i = $1061;
        label = 335;
       }
      } else {
       $$24$i = $1049;
       $$24255$i = $1050;
       label = 335;
      }
     } else {
      $$24$i = $1036;
      $$24255$i = $1037;
      label = 335;
     }
    } else {
     $$24$i = $960;
     $$24255$i = $958;
     label = 335;
    } while (0);
    if ((label | 0) == 335) {
     label = 0;
     $1280 = HEAP32[$0 >> 2] | 0;
     HEAP32[$1280 + 20 >> 2] = 28;
     FUNCTION_TABLE_vi[HEAP32[$1280 >> 2] & 255]($0);
     $$25$i = $$24$i;
     $$25256$i = $$24255$i;
    }
    HEAP32[$7 >> 2] = 1;
    HEAP32[$957 >> 2] = $$25256$i;
    HEAP32[$959 >> 2] = $$25$i;
    break;
   }
  case 239:
  case 238:
  case 237:
  case 236:
  case 235:
  case 234:
  case 233:
  case 232:
  case 231:
  case 230:
  case 229:
  case 228:
  case 227:
  case 226:
  case 225:
  case 224:
   {
    if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 32 + ($60 + -224 << 2) >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     label = 350;
     break L1;
    }
    break;
   }
  case 254:
   {
    if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     label = 350;
     break L1;
    }
    break;
   }
  case 1:
  case 215:
  case 214:
  case 213:
  case 212:
  case 211:
  case 210:
  case 209:
  case 208:
   {
    $1294 = HEAP32[$0 >> 2] | 0;
    HEAP32[$1294 + 20 >> 2] = 94;
    HEAP32[$1294 + 24 >> 2] = $60;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
    break;
   }
  case 220:
   {
    $1300 = HEAP32[$4 >> 2] | 0;
    $1301 = $1300 + 4 | 0;
    $1302 = HEAP32[$1301 >> 2] | 0;
    if (!$1302) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$1300 + 12 >> 2] & 127]($0) | 0)) {
      $$0 = 0;
      label = 350;
      break L1;
     }
     $$0$i92 = HEAP32[$1301 >> 2] | 0;
    } else $$0$i92 = $1302;
    $$041$i = HEAP32[$1300 >> 2] | 0;
    $1309 = $$0$i92 + -1 | 0;
    $1310 = $$041$i + 1 | 0;
    $1313 = HEAPU8[$$041$i >> 0] << 8;
    if (!$1309) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$1300 + 12 >> 2] & 127]($0) | 0)) {
      $$0 = 0;
      label = 350;
      break L1;
     }
     $$1$i93 = HEAP32[$1301 >> 2] | 0;
     $$142$i = HEAP32[$1300 >> 2] | 0;
    } else {
     $$1$i93 = $1309;
     $$142$i = $1310;
    }
    $1325 = $1313 | HEAPU8[$$142$i >> 0];
    $1326 = $1325 + -2 | 0;
    $1327 = HEAP32[$0 >> 2] | 0;
    HEAP32[$1327 + 20 >> 2] = 93;
    HEAP32[$1327 + 24 >> 2] = HEAP32[$2 >> 2];
    HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $1326;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
    HEAP32[$1300 >> 2] = $$142$i + 1;
    HEAP32[$1301 >> 2] = $$1$i93 + -1;
    if ($1325 >>> 0 > 2) FUNCTION_TABLE_vii[HEAP32[(HEAP32[$4 >> 2] | 0) + 16 >> 2] & 255]($0, $1326);
    break;
   }
  default:
   {
    $1340 = HEAP32[$0 >> 2] | 0;
    HEAP32[$1340 + 20 >> 2] = 70;
    HEAP32[$1340 + 24 >> 2] = $60;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   }
  } while (0);
  HEAP32[$2 >> 2] = 0;
  $20 = 0;
 }
 if ((label | 0) == 25) {
  $87 = HEAP32[$4 >> 2] | 0;
  $88 = HEAP32[$87 >> 2] | 0;
  $89 = $87 + 4 | 0;
  $90 = HEAP32[$89 >> 2] | 0;
  if (!(HEAP32[(HEAP32[$3 >> 2] | 0) + 16 >> 2] | 0)) {
   $95 = HEAP32[$0 >> 2] | 0;
   HEAP32[$95 + 20 >> 2] = 60;
   _strncpy($95 + 24 | 0, 50705, 80) | 0;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  }
  do if (!$90) if (!(FUNCTION_TABLE_ii[HEAP32[$87 + 12 >> 2] & 127]($0) | 0)) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else {
   $$0176$i = HEAP32[$89 >> 2] | 0;
   $$0177$i = HEAP32[$87 >> 2] | 0;
   break;
  } else {
   $$0176$i = $90;
   $$0177$i = $88;
  } while (0);
  $107 = $$0176$i + -1 | 0;
  $108 = $$0177$i + 1 | 0;
  $111 = HEAPU8[$$0177$i >> 0] << 8;
  do if (!$107) if (!(FUNCTION_TABLE_ii[HEAP32[$87 + 12 >> 2] & 127]($0) | 0)) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else {
   $$1$i43 = HEAP32[$89 >> 2] | 0;
   $$1178$i = HEAP32[$87 >> 2] | 0;
   break;
  } else {
   $$1$i43 = $107;
   $$1178$i = $108;
  } while (0);
  $119 = $$1$i43 + -1 | 0;
  $120 = $$1178$i + 1 | 0;
  $123 = $111 | HEAPU8[$$1178$i >> 0];
  do if (!$119) if (!(FUNCTION_TABLE_ii[HEAP32[$87 + 12 >> 2] & 127]($0) | 0)) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else {
   $$2$i = HEAP32[$89 >> 2] | 0;
   $$2179$i = HEAP32[$87 >> 2] | 0;
   break;
  } else {
   $$2$i = $119;
   $$2179$i = $120;
  } while (0);
  $131 = HEAP8[$$2179$i >> 0] | 0;
  $132 = $131 & 255;
  $133 = HEAP32[$0 >> 2] | 0;
  HEAP32[$133 + 20 >> 2] = 105;
  HEAP32[$133 + 24 >> 2] = $132;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
  do if (!(($131 & 255) > 4 | ($123 | 0) != (($132 << 1) + 6 | 0))) {
   if ($131 << 24 >> 24) {
    HEAP32[$0 + 340 >> 2] = $132;
    $$3211233$i = $$2$i + -1 | 0;
    $$3180212236$i = $$2179$i + 1 | 0;
    $$3211235$i = $$3211233$i;
    $1345 = ($$3211233$i | 0) == 0;
    label = 42;
    break;
   }
   if (HEAP32[$0 + 224 >> 2] | 0) {
    HEAP32[$0 + 340 >> 2] = $132;
    $$3211230$i = $$2$i + -1 | 0;
    if (!$$3211230$i) {
     $1346 = 1;
     label = 64;
    } else {
     $$6$i = $$3211230$i;
     $$6183$i = $$2179$i + 1 | 0;
     $1347 = 1;
    }
   } else label = 41;
  } else label = 41; while (0);
  if ((label | 0) == 41) {
   $151 = HEAP32[$0 >> 2] | 0;
   HEAP32[$151 + 20 >> 2] = 12;
   FUNCTION_TABLE_vi[HEAP32[$151 >> 2] & 255]($0);
   HEAP32[$0 + 340 >> 2] = $132;
   $$3211$i = $$2$i + -1 | 0;
   $$3180212$i = $$2179$i + 1 | 0;
   $156 = ($$3211$i | 0) == 0;
   if (!($131 << 24 >> 24)) {
    $$3$lcssa$i = $$3211$i;
    $$3180$lcssa$i = $$3180212$i;
    $$lcssa$i = $156;
    $1348 = 1;
    label = 63;
   } else {
    $$3180212236$i = $$3180212$i;
    $$3211235$i = $$3211$i;
    $1345 = $156;
    label = 42;
   }
  }
  L436 : do if ((label | 0) == 42) {
   $157 = $87 + 12 | 0;
   $158 = $0 + 344 | 0;
   $$0193213$i = 0;
   $$3180218$i = $$3180212236$i;
   $$3217$i = $$3211235$i;
   $1349 = $1345;
   while (1) {
    if ($1349) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$157 >> 2] & 127]($0) | 0)) {
      $$0 = 0;
      label = 350;
      break;
     }
     $$4$i = HEAP32[$89 >> 2] | 0;
     $$4181$i = HEAP32[$87 >> 2] | 0;
    } else {
     $$4$i = $$3217$i;
     $$4181$i = $$3180218$i;
    }
    $164 = $$4$i + -1 | 0;
    $165 = $$4181$i + 1 | 0;
    $167 = HEAPU8[$$4181$i >> 0] | 0;
    L444 : do if (!$$0193213$i) $$2188$i = $167; else {
     $$0190201$i = 0;
     while (1) {
      if ((HEAP32[HEAP32[$0 + 344 + ($$0190201$i << 2) >> 2] >> 2] | 0) == ($167 | 0)) break;
      $$0190201$i = $$0190201$i + 1 | 0;
      if ($$0190201$i >>> 0 >= $$0193213$i >>> 0) {
       $$2188$i = $167;
       break L444;
      }
     }
     $176 = HEAP32[HEAP32[$158 >> 2] >> 2] | 0;
     if ($$0193213$i >>> 0 > 1) {
      $$0186203$i = $176;
      $$1191202$i = 1;
      while (1) {
       $180 = HEAP32[HEAP32[$0 + 344 + ($$1191202$i << 2) >> 2] >> 2] | 0;
       $spec$select$i = ($180 | 0) > ($$0186203$i | 0) ? $180 : $$0186203$i;
       $$1191202$i = $$1191202$i + 1 | 0;
       if (($$1191202$i | 0) == ($$0193213$i | 0)) {
        $$0186$lcssa$i = $spec$select$i;
        break;
       } else $$0186203$i = $spec$select$i;
      }
     } else $$0186$lcssa$i = $176;
     $$2188$i = $$0186$lcssa$i + 1 | 0;
    } while (0);
    $184 = HEAP32[$18 >> 2] | 0;
    $185 = HEAP32[$17 >> 2] | 0;
    L456 : do if (($185 | 0) > 0) {
     $$0189206$i = $184;
     $$2192205$i = 0;
     while (1) {
      if (($$2188$i | 0) == (HEAP32[$$0189206$i >> 2] | 0)) {
       $$0189197$i = $$0189206$i;
       break L456;
      }
      $$2192205$i = $$2192205$i + 1 | 0;
      $190 = $$0189206$i + 88 | 0;
      if (($$2192205$i | 0) >= ($185 | 0)) {
       $$0189$lcssa$i = $190;
       label = 58;
       break;
      } else $$0189206$i = $190;
     }
    } else {
     $$0189$lcssa$i = $184;
     label = 58;
    } while (0);
    if ((label | 0) == 58) {
     label = 0;
     $192 = HEAP32[$0 >> 2] | 0;
     HEAP32[$192 + 20 >> 2] = 4;
     HEAP32[$192 + 24 >> 2] = $$2188$i;
     FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
     $$0189197$i = $$0189$lcssa$i;
    }
    HEAP32[$0 + 344 + ($$0193213$i << 2) >> 2] = $$0189197$i;
    if (!$164) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$157 >> 2] & 127]($0) | 0)) {
      $$0 = 0;
      label = 350;
      break;
     }
     $$5$i = HEAP32[$89 >> 2] | 0;
     $$5182$i = HEAP32[$87 >> 2] | 0;
    } else {
     $$5$i = $164;
     $$5182$i = $165;
    }
    $205 = HEAPU8[$$5182$i >> 0] | 0;
    $207 = $$0189197$i + 20 | 0;
    HEAP32[$207 >> 2] = $205 >>> 4;
    $209 = $$0189197$i + 24 | 0;
    HEAP32[$209 >> 2] = $205 & 15;
    $210 = HEAP32[$0 >> 2] | 0;
    HEAP32[$210 + 24 >> 2] = HEAP32[$$0189197$i >> 2];
    HEAP32[$210 + 28 >> 2] = HEAP32[$207 >> 2];
    HEAP32[$210 + 32 >> 2] = HEAP32[$209 >> 2];
    HEAP32[$210 + 20 >> 2] = 106;
    FUNCTION_TABLE_vii[HEAP32[$210 + 4 >> 2] & 255]($0, 1);
    $$0193213$i = $$0193213$i + 1 | 0;
    $$3$i = $$5$i + -1 | 0;
    $$3180$i = $$5182$i + 1 | 0;
    $222 = ($$3$i | 0) == 0;
    if ($$0193213$i >>> 0 >= $132 >>> 0) {
     $$3$lcssa$i = $$3$i;
     $$3180$lcssa$i = $$3180$i;
     $$lcssa$i = $222;
     $1348 = 0;
     label = 63;
     break L436;
    } else {
     $$3180218$i = $$3180$i;
     $$3217$i = $$3$i;
     $1349 = $222;
    }
   }
   if ((label | 0) == 350) {
    STACKTOP = sp;
    return $$0 | 0;
   }
  } while (0);
  if ((label | 0) == 63) if ($$lcssa$i) {
   $1346 = $1348;
   label = 64;
  } else {
   $$6$i = $$3$lcssa$i;
   $$6183$i = $$3180$lcssa$i;
   $1347 = $1348;
  }
  do if ((label | 0) == 64) if (!(FUNCTION_TABLE_ii[HEAP32[$87 + 12 >> 2] & 127]($0) | 0)) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else {
   $$6$i = HEAP32[$89 >> 2] | 0;
   $$6183$i = HEAP32[$87 >> 2] | 0;
   $1347 = $1346;
   break;
  } while (0);
  $229 = $$6$i + -1 | 0;
  $230 = $$6183$i + 1 | 0;
  $233 = $0 + 412 | 0;
  HEAP32[$233 >> 2] = HEAPU8[$$6183$i >> 0];
  do if (!$229) if (!(FUNCTION_TABLE_ii[HEAP32[$87 + 12 >> 2] & 127]($0) | 0)) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else {
   $$7$i = HEAP32[$89 >> 2] | 0;
   $$7184$i = HEAP32[$87 >> 2] | 0;
   break;
  } else {
   $$7$i = $229;
   $$7184$i = $230;
  } while (0);
  $241 = $$7$i + -1 | 0;
  $242 = $$7184$i + 1 | 0;
  $245 = $0 + 416 | 0;
  HEAP32[$245 >> 2] = HEAPU8[$$7184$i >> 0];
  do if (!$241) if (!(FUNCTION_TABLE_ii[HEAP32[$87 + 12 >> 2] & 127]($0) | 0)) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else {
   $$8$i = HEAP32[$89 >> 2] | 0;
   $$8185$i = HEAP32[$87 >> 2] | 0;
   break;
  } else {
   $$8$i = $241;
   $$8185$i = $242;
  } while (0);
  $256 = HEAPU8[$$8185$i >> 0] | 0;
  $258 = $0 + 420 | 0;
  HEAP32[$258 >> 2] = $256 >>> 4;
  $260 = $0 + 424 | 0;
  HEAP32[$260 >> 2] = $256 & 15;
  $261 = HEAP32[$0 >> 2] | 0;
  HEAP32[$261 + 24 >> 2] = HEAP32[$233 >> 2];
  HEAP32[$261 + 28 >> 2] = HEAP32[$245 >> 2];
  HEAP32[$261 + 32 >> 2] = HEAP32[$258 >> 2];
  HEAP32[$261 + 36 >> 2] = HEAP32[$260 >> 2];
  HEAP32[$261 + 20 >> 2] = 107;
  FUNCTION_TABLE_vii[HEAP32[$261 + 4 >> 2] & 255]($0, 1);
  HEAP32[(HEAP32[$3 >> 2] | 0) + 20 >> 2] = 0;
  if (!$1347) {
   $275 = $0 + 144 | 0;
   HEAP32[$275 >> 2] = (HEAP32[$275 >> 2] | 0) + 1;
  }
  HEAP32[$87 >> 2] = $$8185$i + 1;
  HEAP32[$89 >> 2] = $$8$i + -1;
  HEAP32[$2 >> 2] = 0;
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 75) {
  $278 = HEAP32[$0 >> 2] | 0;
  HEAP32[$278 + 20 >> 2] = 87;
  FUNCTION_TABLE_vii[HEAP32[$278 + 4 >> 2] & 255]($0, 1);
  HEAP32[$2 >> 2] = 0;
  $$0 = 2;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 174) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 350) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$13 = 0, $$14 = 0, $$15 = 0, $$16 = 0, $$17 = 0, $$2 = 0, $$21 = 0, $$22 = 0, $$23 = 0, $$24 = 0, $$25 = 0, $$26 = 0, $$27 = 0, $$28 = 0, $$29 = 0, $$3 = 0, $$30 = 0, $$31 = 0, $$32 = 0, $$33 = 0, $$34 = 0, $$35 = 0, $$36 = 0, $$37 = 0, $$42 = 0, $$43 = 0, $$47 = 0, $$48 = 0, $$49 = 0, $$7 = 0, $$8 = 0, $$9 = 0, $$byval_copy39 = 0, $1 = 0, $10 = 0, $101 = 0, $102 = 0, $104 = 0, $105 = 0, $107 = 0, $11 = 0, $111 = 0, $114 = 0, $12 = 0, $123 = 0, $127 = 0, $128 = 0, $13 = 0, $130 = 0, $134 = 0, $138 = 0, $14 = 0, $144 = 0, $145 = 0, $147 = 0, $15 = 0, $151 = 0, $152 = 0, $154 = 0, $158 = 0, $16 = 0, $161 = 0, $167 = 0, $17 = 0, $170 = 0, $173 = 0, $179 = 0, $18 = 0, $182 = 0, $188 = 0, $189 = 0, $19 = 0, $191 = 0, $195 = 0, $196 = 0, $199 = 0, $2 = 0, $20 = 0, $206 = 0, $209 = 0, $21 = 0, $212 = 0, $215 = 0, $22 = 0, $221 = 0, $224 = 0, $227 = 0, $23 = 0, $230 = 0, $234 = 0, $237 = 0, $24 = 0, $246 = 0, $249 = 0, $25 = 0, $252 = 0, $256 = 0, $26 = 0, $265 = 0, $268 = 0, $27 = 0, $271 = 0, $277 = 0, $28 = 0, $280 = 0, $283 = 0, $287 = 0, $29 = 0, $290 = 0, $294 = 0, $297 = 0, $298 = 0, $3 = 0, $30 = 0, $300 = 0, $307 = 0, $308 = 0, $31 = 0, $310 = 0, $312 = 0, $319 = 0, $32 = 0, $320 = 0, $322 = 0, $326 = 0, $329 = 0, $33 = 0, $332 = 0, $335 = 0, $34 = 0, $341 = 0, $342 = 0, $344 = 0, $349 = 0, $35 = 0, $356 = 0, $36 = 0, $361 = 0, $367 = 0, $37 = 0, $371 = 0, $375 = 0, $376 = 0, $379 = 0, $38 = 0, $381 = 0, $388 = 0, $39 = 0, $393 = 0, $397 = 0, $398 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $403 = 0, $41 = 0, $410 = 0, $42 = 0, $43 = 0, $45 = 0, $48 = 0, $5 = 0, $6 = 0, $66 = 0, $69 = 0, $7 = 0, $72 = 0, $75 = 0, $78 = 0, $8 = 0, $82 = 0, $87 = 0, $9 = 0, $94 = 0, $95 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(352);
 $$byval_copy39 = sp + 336 | 0;
 $1 = sp + 344 | 0;
 $2 = sp + 328 | 0;
 $3 = sp + 320 | 0;
 $4 = sp + 312 | 0;
 $5 = sp + 304 | 0;
 $6 = sp + 296 | 0;
 $7 = sp + 288 | 0;
 $8 = sp + 8 | 0;
 $9 = sp + 280 | 0;
 $10 = sp + 272 | 0;
 $11 = sp + 264 | 0;
 $12 = sp + 256 | 0;
 $13 = sp + 248 | 0;
 $14 = sp + 240 | 0;
 $15 = sp + 232 | 0;
 $16 = sp + 224 | 0;
 $17 = sp + 216 | 0;
 $18 = sp + 208 | 0;
 $19 = sp + 200 | 0;
 $20 = sp + 192 | 0;
 $21 = sp + 184 | 0;
 $22 = sp + 176 | 0;
 $23 = sp + 168 | 0;
 $24 = sp + 160 | 0;
 $25 = sp + 152 | 0;
 $26 = sp + 144 | 0;
 $27 = sp + 136 | 0;
 $28 = sp + 128 | 0;
 $29 = sp + 120 | 0;
 $30 = sp + 112 | 0;
 $31 = sp + 104 | 0;
 $32 = sp + 96 | 0;
 $33 = sp + 88 | 0;
 $34 = sp + 80 | 0;
 $35 = sp + 72 | 0;
 $36 = sp + 64 | 0;
 $37 = sp + 56 | 0;
 $38 = sp + 48 | 0;
 $39 = sp;
 $40 = sp + 40 | 0;
 $41 = sp + 32 | 0;
 $42 = sp + 24 | 0;
 $43 = sp + 16 | 0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 52665);
 HEAP32[$$byval_copy39 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 $45 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy39) | 0) & 1;
 HEAP8[$1 >> 0] = $45;
 L1 : do if ((__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0) | 0) >>> 0 < 2) $$49 = 0; else {
  $48 = HEAP32[$0 >> 2] | 0;
  do switch (HEAP8[$48 >> 0] | 0) {
  case 76:
   {
    $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseExprPrimaryEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
    break L1;
    break;
   }
  case 84:
   {
    $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseTemplateParamEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
    break L1;
    break;
   }
  case 102:
   {
    switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24) {
    case 112:
     {
      label = 7;
      break;
     }
    case 76:
     {
      if ((((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 2) | 0) << 24 >> 24) + -48 | 0) >>> 0 < 10) label = 7; else label = 8;
      break;
     }
    default:
     label = 8;
    }
    if ((label | 0) == 7) {
     $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseFunctionParamEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     break L1;
    } else if ((label | 0) == 8) {
     $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseFoldExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     break L1;
    }
    break;
   }
  case 97:
   {
    switch (HEAP8[$48 + 1 >> 0] | 0) {
    case 97:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $66 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 51972);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$3 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($66, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 100:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $69 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 51970);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($69, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 110:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $72 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 51970);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($72, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 78:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $75 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($6, 52668);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$6 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($75, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 83:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $78 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($7, 52671);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$7 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($78, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 116:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $82 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      HEAP32[$$byval_copy39 >> 2] = $82;
      if (!$82) $$0 = 0; else $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA10_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0, 52673, $$byval_copy39) | 0;
      $$49 = $$0;
      break L1;
      break;
     }
    case 122:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $87 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      HEAP32[$$byval_copy39 >> 2] = $87;
      if (!$87) $$1 = 0; else $$1 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA10_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0, 52673, $$byval_copy39) | 0;
      $$49 = $$1;
      break L1;
      break;
     }
    default:
     {
      $$49 = 0;
      break L1;
     }
    }
    break;
   }
  case 99:
   {
    switch (HEAP8[$48 + 1 >> 0] | 0) {
    case 99:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $94 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      $95 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($94) | 0;
      HEAP32[$$byval_copy39 >> 2] = $95;
      if (!$95) $$3 = 0; else {
       $97 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($94) | 0;
       HEAP32[$8 >> 2] = $97;
       if (!$97) $$2 = 0; else $$2 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CastExprEJRA11_KcRPNS0_4NodeESD_EEESC_DpOT0_($0, $$byval_copy39, $8) | 0;
       $$3 = $$2;
      }
      $$49 = $$3;
      break L1;
      break;
     }
    case 108:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $101 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      $102 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($101) | 0;
      HEAP32[$$byval_copy39 >> 2] = $102;
      do if ($102) {
       $104 = $0 + 8 | 0;
       $105 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($104) | 0;
       while (1) {
        if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
         label = 33;
         break;
        }
        $107 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($101) | 0;
        HEAP32[$8 >> 2] = $107;
        if (!$107) {
         label = 31;
         break;
        }
        __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($104, $8);
       }
       if ((label | 0) == 31) {
        $$7 = 0;
        break;
       } else if ((label | 0) == 33) {
        __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($8, $0, $105);
        $$7 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CallExprEJRPNS0_4NodeENS0_9NodeArrayEEEES9_DpOT0_($0, $$byval_copy39, $8) | 0;
        break;
       }
      } else $$7 = 0; while (0);
      $$49 = $$7;
      break L1;
      break;
     }
    case 109:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $111 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($9, 52683);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$9 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($111, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 111:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $114 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($10, 52685);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$10 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($114, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 118:
     {
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseConversionExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      break L1;
      break;
     }
    default:
     {
      $$49 = 0;
      break L1;
     }
    }
    break;
   }
  case 100:
   {
    switch (HEAP8[$48 + 1 >> 0] | 0) {
    case 97:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $123 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      HEAP32[$$byval_copy39 >> 2] = $123;
      if (!$123) $$8 = 0; else {
       HEAP8[$8 >> 0] = 1;
       $$8 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10DeleteExprEJRPNS0_4NodeERbbEEES9_DpOT0_($0, $$byval_copy39, $1, $8) | 0;
      }
      $$49 = $$8;
      break L1;
      break;
     }
    case 99:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $127 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      $128 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($127) | 0;
      HEAP32[$$byval_copy39 >> 2] = $128;
      if (!$128) $$10 = 0; else {
       $130 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($127) | 0;
       HEAP32[$8 >> 2] = $130;
       if (!$130) $$9 = 0; else $$9 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CastExprEJRA13_KcRPNS0_4NodeESD_EEESC_DpOT0_($0, $$byval_copy39, $8) | 0;
       $$10 = $$9;
      }
      $$49 = $$10;
      break L1;
      break;
     }
    case 101:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $134 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($11, 52037);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$11 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($134, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 108:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $138 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      HEAP32[$$byval_copy39 >> 2] = $138;
      if (!$138) $$11 = 0; else {
       HEAP8[$8 >> 0] = 0;
       $$11 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10DeleteExprEJRPNS0_4NodeERbbEEES9_DpOT0_($0, $$byval_copy39, $1, $8) | 0;
      }
      $$49 = $$11;
      break L1;
      break;
     }
    case 110:
     {
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedNameEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      break L1;
      break;
     }
    case 115:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $144 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      $145 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($144) | 0;
      HEAP32[$$byval_copy39 >> 2] = $145;
      if (!$145) $$13 = 0; else {
       $147 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($144) | 0;
       HEAP32[$8 >> 2] = $147;
       if (!$147) $$12 = 0; else $$12 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10MemberExprEJRPNS0_4NodeERA3_KcSA_EEES9_DpOT0_($0, $$byval_copy39, 52687, $8) | 0;
       $$13 = $$12;
      }
      $$49 = $$13;
      break L1;
      break;
     }
    case 116:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $151 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      $152 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($151) | 0;
      HEAP32[$$byval_copy39 >> 2] = $152;
      if (!$152) $$15 = 0; else {
       $154 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($151) | 0;
       HEAP32[$8 >> 2] = $154;
       if (!$154) $$14 = 0; else $$14 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10MemberExprEJRPNS0_4NodeERA2_KcSA_EEES9_DpOT0_($0, $$byval_copy39, $8) | 0;
       $$15 = $$14;
      }
      $$49 = $$15;
      break L1;
      break;
     }
    case 118:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $158 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($12, 52690);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$12 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$12 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($158, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 86:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $161 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($13, 52692);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$13 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($161, $$byval_copy39) | 0;
      break L1;
      break;
     }
    default:
     {
      $$49 = 0;
      break L1;
     }
    }
    break;
   }
  case 101:
   {
    switch (HEAP8[$48 + 1 >> 0] | 0) {
    case 111:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $167 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($14, 52695);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$14 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($167, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 79:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $170 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($15, 52697);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$15 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($170, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 113:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $173 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($16, 52700);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$16 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($173, $$byval_copy39) | 0;
      break L1;
      break;
     }
    default:
     {
      $$49 = 0;
      break L1;
     }
    }
    break;
   }
  case 103:
   {
    switch (HEAP8[$48 + 1 >> 0] | 0) {
    case 101:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $179 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($17, 52703);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$17 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($179, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 116:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $182 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($18, 52043);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$18 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($182, $$byval_copy39) | 0;
      break L1;
      break;
     }
    default:
     {
      $$49 = 0;
      break L1;
     }
    }
    break;
   }
  case 105:
   {
    switch (HEAP8[$48 + 1 >> 0] | 0) {
    case 120:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $188 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      $189 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($188) | 0;
      HEAP32[$$byval_copy39 >> 2] = $189;
      if (!$189) $$17 = 0; else {
       $191 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($188) | 0;
       HEAP32[$8 >> 2] = $191;
       if (!$191) $$16 = 0; else $$16 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_18ArraySubscriptExprEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $$byval_copy39, $8) | 0;
       $$17 = $$16;
      }
      $$49 = $$17;
      break L1;
      break;
     }
    case 108:
     break;
    default:
     {
      $$49 = 0;
      break L1;
     }
    }
    HEAP32[$0 >> 2] = $48 + 2;
    $195 = $0 + 8 | 0;
    $196 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($195) | 0;
    while (1) {
     if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
      label = 82;
      break;
     }
     $199 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBracedExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$$byval_copy39 >> 2] = $199;
     if (!$199) {
      label = 81;
      break;
     }
     __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($195, $$byval_copy39);
    }
    if ((label | 0) == 81) {
     $$49 = 0;
     break L1;
    } else if ((label | 0) == 82) {
     __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($8, $0, $196);
     $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12InitListExprEJDnNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0, $$byval_copy39, $8) | 0;
     break L1;
    }
    break;
   }
  case 108:
   {
    switch (HEAP8[$48 + 1 >> 0] | 0) {
    case 101:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $206 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($19, 52706);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$19 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($206, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 115:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $209 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($20, 52709);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$20 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$20 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($209, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 83:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $212 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($21, 52712);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$21 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($212, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 116:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $215 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($22, 52150);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$22 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$22 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($215, $$byval_copy39) | 0;
      break L1;
      break;
     }
    default:
     {
      $$49 = 0;
      break L1;
     }
    }
    break;
   }
  case 109:
   {
    switch (HEAP8[$48 + 1 >> 0] | 0) {
    case 105:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $221 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($23, 52555);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$23 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$23 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($221, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 73:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $224 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($24, 52716);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$24 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$24 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($224, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 108:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $227 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($25, 52037);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$25 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$25 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($227, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 76:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $230 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($26, 52719);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$26 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$26 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($230, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 109:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) {
       $234 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
       __ZN12_GLOBAL__N_110StringViewC2EPKc($27, 52722);
       HEAP32[$$byval_copy39 >> 2] = HEAP32[$27 >> 2];
       HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
       $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($234, $$byval_copy39) | 0;
       break L1;
      }
      $237 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      HEAP32[$$byval_copy39 >> 2] = $237;
      if (!$237) $$21 = 0; else $$21 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11PostfixExprEJRPNS0_4NodeERA3_KcEEES9_DpOT0_($0, $$byval_copy39, 52722) | 0;
      $$49 = $$21;
      break L1;
      break;
     }
    default:
     {
      $$49 = 0;
      break L1;
     }
    }
    break;
   }
  case 110:
   {
    switch (HEAP8[$48 + 1 >> 0] | 0) {
    case 119:
    case 97:
     {
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E12parseNewExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      break L1;
      break;
     }
    case 101:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $246 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($28, 52725);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$28 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($246, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 103:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $249 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($29, 52555);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$29 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$29 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($249, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 116:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $252 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($30, 52728);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$30 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$30 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($252, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 120:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $256 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      HEAP32[$$byval_copy39 >> 2] = $256;
      if (!$256) $$22 = 0; else $$22 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA11_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0, $$byval_copy39) | 0;
      $$49 = $$22;
      break L1;
      break;
     }
    default:
     {
      $$49 = 0;
      break L1;
     }
    }
    break;
   }
  case 111:
   {
    switch (HEAP8[$48 + 1 >> 0] | 0) {
    case 110:
     {
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedNameEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      break L1;
      break;
     }
    case 111:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $265 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($31, 52730);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$31 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$31 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($265, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 114:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $268 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($32, 52733);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$32 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$32 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($268, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 82:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $271 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($33, 52735);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$33 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$33 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($271, $$byval_copy39) | 0;
      break L1;
      break;
     }
    default:
     {
      $$49 = 0;
      break L1;
     }
    }
    break;
   }
  case 112:
   {
    switch (HEAP8[$48 + 1 >> 0] | 0) {
    case 109:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $277 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($34, 52738);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$34 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$34 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($277, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 108:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $280 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($35, 52742);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$35 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$35 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($280, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 76:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $283 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($36, 52744);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$36 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$36 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($283, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 112:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) {
       $287 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
       __ZN12_GLOBAL__N_110StringViewC2EPKc($37, 52747);
       HEAP32[$$byval_copy39 >> 2] = HEAP32[$37 >> 2];
       HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$37 + 4 >> 2];
       $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($287, $$byval_copy39) | 0;
       break L1;
      }
      $290 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      HEAP32[$$byval_copy39 >> 2] = $290;
      if (!$290) $$23 = 0; else $$23 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11PostfixExprEJRPNS0_4NodeERA3_KcEEES9_DpOT0_($0, $$byval_copy39, 52747) | 0;
      $$49 = $$23;
      break L1;
      break;
     }
    case 115:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $294 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($38, 52742);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$38 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$38 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($294, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 116:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $297 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      $298 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($297) | 0;
      HEAP32[$$byval_copy39 >> 2] = $298;
      if (!$298) $$25 = 0; else {
       $300 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($297) | 0;
       HEAP32[$8 >> 2] = $300;
       if (!$300) $$24 = 0; else $$24 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10MemberExprEJRPNS0_4NodeERA3_KcSA_EEES9_DpOT0_($0, $$byval_copy39, 52750, $8) | 0;
       $$25 = $$24;
      }
      $$49 = $$25;
      break L1;
      break;
     }
    default:
     {
      $$49 = 0;
      break L1;
     }
    }
    break;
   }
  case 113:
   {
    if ((HEAP8[$48 + 1 >> 0] | 0) != 117) {
     $$49 = 0;
     break L1;
    }
    HEAP32[$0 >> 2] = $48 + 2;
    $307 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
    $308 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($307) | 0;
    HEAP32[$$byval_copy39 >> 2] = $308;
    if (!$308) $$28 = 0; else {
     $310 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($307) | 0;
     HEAP32[$8 >> 2] = $310;
     if (!$310) $$27 = 0; else {
      $312 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($307) | 0;
      HEAP32[$39 >> 2] = $312;
      if (!$312) $$26 = 0; else $$26 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15ConditionalExprEJRPNS0_4NodeESA_SA_EEES9_DpOT0_($0, $$byval_copy39, $8, $39) | 0;
      $$27 = $$26;
     }
     $$28 = $$27;
    }
    $$49 = $$28;
    break L1;
    break;
   }
  case 114:
   {
    switch (HEAP8[$48 + 1 >> 0] | 0) {
    case 99:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $319 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      $320 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($319) | 0;
      HEAP32[$$byval_copy39 >> 2] = $320;
      if (!$320) $$30 = 0; else {
       $322 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($319) | 0;
       HEAP32[$8 >> 2] = $322;
       if (!$322) $$29 = 0; else $$29 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CastExprEJRA17_KcRPNS0_4NodeESD_EEESC_DpOT0_($0, $$byval_copy39, $8) | 0;
       $$30 = $$29;
      }
      $$49 = $$30;
      break L1;
      break;
     }
    case 109:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $326 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($40, 52753);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$40 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$40 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($326, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 77:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $329 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($41, 52755);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$41 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$41 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($329, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 115:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $332 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($42, 52758);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$42 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$42 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($332, $$byval_copy39) | 0;
      break L1;
      break;
     }
    case 83:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $335 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      __ZN12_GLOBAL__N_110StringViewC2EPKc($43, 52761);
      HEAP32[$$byval_copy39 >> 2] = HEAP32[$43 >> 2];
      HEAP32[$$byval_copy39 + 4 >> 2] = HEAP32[$43 + 4 >> 2];
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($335, $$byval_copy39) | 0;
      break L1;
      break;
     }
    default:
     {
      $$49 = 0;
      break L1;
     }
    }
    break;
   }
  case 115:
   {
    switch (HEAP8[$48 + 1 >> 0] | 0) {
    case 99:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $341 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      $342 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($341) | 0;
      HEAP32[$$byval_copy39 >> 2] = $342;
      if (!$342) $$32 = 0; else {
       $344 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($341) | 0;
       HEAP32[$8 >> 2] = $344;
       if (!$344) $$31 = 0; else $$31 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CastExprEJRA12_KcRPNS0_4NodeESD_EEESC_DpOT0_($0, $$byval_copy39, $8) | 0;
       $$32 = $$31;
      }
      $$49 = $$32;
      break L1;
      break;
     }
    case 112:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $349 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      HEAP32[$$byval_copy39 >> 2] = $349;
      if (!$349) $$33 = 0; else $$33 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_22ParameterPackExpansionEJRPNS0_4NodeEEEES9_DpOT0_($0, $$byval_copy39) | 0;
      $$49 = $$33;
      break L1;
      break;
     }
    case 114:
     {
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedNameEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      break L1;
      break;
     }
    case 116:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $356 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      HEAP32[$$byval_copy39 >> 2] = $356;
      if (!$356) $$34 = 0; else $$34 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA9_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0, 52765, $$byval_copy39) | 0;
      $$49 = $$34;
      break L1;
      break;
     }
    case 122:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $361 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      HEAP32[$$byval_copy39 >> 2] = $361;
      if (!$361) $$35 = 0; else $$35 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA9_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0, 52765, $$byval_copy39) | 0;
      $$49 = $$35;
      break L1;
      break;
     }
    case 90:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24) {
      case 84:
       {
        $367 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseTemplateParamEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
        HEAP32[$$byval_copy39 >> 2] = $367;
        if (!$367) $$36 = 0; else $$36 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SizeofParamPackExprEJRPNS0_4NodeEEEES9_DpOT0_($0, $$byval_copy39) | 0;
        $$49 = $$36;
        break L1;
        break;
       }
      case 102:
       {
        $371 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseFunctionParamEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
        HEAP32[$$byval_copy39 >> 2] = $371;
        if (!$371) $$37 = 0; else $$37 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA12_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0, $$byval_copy39) | 0;
        $$49 = $$37;
        break L1;
        break;
       }
      default:
       {
        $$49 = 0;
        break L1;
       }
      }
      break;
     }
    case 80:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $375 = $0 + 8 | 0;
      $376 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($375) | 0;
      while (1) {
       if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
        label = 172;
        break;
       }
       $379 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseTemplateArgEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
       HEAP32[$$byval_copy39 >> 2] = $379;
       if (!$379) {
        label = 171;
        break;
       }
       __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($375, $$byval_copy39);
      }
      if ((label | 0) == 171) {
       $$49 = 0;
       break L1;
      } else if ((label | 0) == 172) {
       __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($8, $0, $376);
       $381 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13NodeArrayNodeEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0, $8) | 0;
       HEAP32[$$byval_copy39 >> 2] = $381;
       $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA12_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0, $$byval_copy39) | 0;
       break L1;
      }
      break;
     }
    default:
     {
      $$49 = 0;
      break L1;
     }
    }
    break;
   }
  case 116:
   {
    switch (HEAP8[$48 + 1 >> 0] | 0) {
    case 101:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $388 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      HEAP32[$$byval_copy39 >> 2] = $388;
      if (!$388) $$42 = 0; else $$42 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA9_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0, 52774, $$byval_copy39) | 0;
      $$49 = $$42;
      break L1;
      break;
     }
    case 105:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $393 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      HEAP32[$$byval_copy39 >> 2] = $393;
      if (!$393) $$43 = 0; else $$43 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA9_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0, 52774, $$byval_copy39) | 0;
      $$49 = $$43;
      break L1;
      break;
     }
    case 108:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $397 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
      $398 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($397) | 0;
      HEAP32[$$byval_copy39 >> 2] = $398;
      do if ($398) {
       $400 = $0 + 8 | 0;
       $401 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($400) | 0;
       while (1) {
        if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
         label = 186;
         break;
        }
        $403 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBracedExprEv($397) | 0;
        HEAP32[$8 >> 2] = $403;
        if (!$403) {
         label = 185;
         break;
        }
        __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($400, $8);
       }
       if ((label | 0) == 185) {
        $$47 = 0;
        break;
       } else if ((label | 0) == 186) {
        __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($8, $0, $401);
        $$47 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12InitListExprEJRPNS0_4NodeENS0_9NodeArrayEEEES9_DpOT0_($0, $$byval_copy39, $8) | 0;
        break;
       }
      } else $$47 = 0; while (0);
      $$49 = $$47;
      break L1;
      break;
     }
    case 114:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA6_KcEEEPNS0_4NodeEDpOT0_($0, 52783) | 0;
      break L1;
      break;
     }
    case 119:
     {
      HEAP32[$0 >> 2] = $48 + 2;
      $410 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
      HEAP32[$$byval_copy39 >> 2] = $410;
      if (!$410) $$48 = 0; else $$48 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9ThrowExprEJRPNS0_4NodeEEEES9_DpOT0_($0, $$byval_copy39) | 0;
      $$49 = $$48;
      break L1;
      break;
     }
    default:
     {
      $$49 = 0;
      break L1;
     }
    }
    break;
   }
  case 57:
  case 56:
  case 55:
  case 54:
  case 53:
  case 52:
  case 51:
  case 50:
  case 49:
   {
    $$49 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedNameEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
    break L1;
    break;
   }
  default:
   {
    $$49 = 0;
    break L1;
   }
  } while (0);
 } while (0);
 STACKTOP = sp;
 return $$49 | 0;
}

function _arPattGetImage2($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = +$10;
 $11 = $11 | 0;
 var $$0 = 0, $$01442 = 0, $$01443 = 0, $$01464 = 0, $$01468 = 0, $$01474 = 0, $$01495 = 0, $$1 = 0, $$10 = 0, $$101453 = 0, $$101484 = 0, $$101505 = 0, $$11 = 0, $$111454 = 0, $$111485 = 0, $$111506 = 0, $$11444 = 0, $$11465 = 0, $$11469 = 0, $$11475 = 0, $$11496 = 0, $$12 = 0, $$121455 = 0, $$121486 = 0, $$121507 = 0, $$13 = 0, $$131456 = 0, $$131487 = 0, $$131508 = 0, $$14 = 0, $$141457 = 0, $$141488 = 0, $$141509 = 0, $$15 = 0, $$151458 = 0, $$151489 = 0, $$151510 = 0, $$16 = 0, $$161459 = 0, $$161490 = 0, $$161511 = 0, $$17 = 0, $$171460 = 0, $$171491 = 0, $$171512 = 0, $$18 = 0, $$181461 = 0, $$181492 = 0, $$181513 = 0, $$19 = 0, $$191462 = 0, $$191493 = 0, $$191514 = 0, $$2 = 0, $$20 = 0, $$201463 = 0, $$201494 = 0, $$201515 = 0, $$21 = 0, $$21445 = 0, $$21466 = 0, $$21470 = 0, $$21476 = 0, $$21497 = 0, $$22 = 0, $$23 = 0, $$3 = 0, $$31446 = 0, $$31471 = 0, $$31477 = 0, $$31498 = 0, $$4 = 0, $$41447 = 0, $$41478 = 0, $$41499 = 0, $$5 = 0, $$51448 = 0, $$51479 = 0, $$51500 = 0, $$6 = 0, $$61449 = 0, $$61480 = 0, $$61501 = 0, $$7 = 0, $$71450 = 0, $$71481 = 0, $$71502 = 0, $$8 = 0, $$81451 = 0, $$81482 = 0, $$81503 = 0, $$9 = 0, $$91452 = 0, $$91483 = 0, $$91504 = 0, $101 = 0, $1016 = 0, $102 = 0, $1026 = 0, $1032 = 0.0, $1038 = 0.0, $1039 = 0.0, $1043 = 0, $1049 = 0, $105 = 0.0, $1053 = 0, $1055 = 0, $106 = 0.0, $1061 = 0, $1062 = 0, $1066 = 0, $1070 = 0, $1074 = 0, $1077 = 0, $108 = 0, $1082 = 0.0, $1083 = 0.0, $1084 = 0.0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1099 = 0.0, $110 = 0, $1105 = 0.0, $1112 = 0.0, $112 = 0.0, $1122 = 0.0, $113 = 0.0, $1131 = 0.0, $1132 = 0.0, $114 = 0.0, $115 = 0, $1153 = 0, $1156 = 0, $116 = 0, $1164 = 0, $1165 = 0, $1169 = 0, $117 = 0, $1178 = 0, $118 = 0, $1185 = 0, $119 = 0, $1190 = 0.0, $1191 = 0.0, $1192 = 0.0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1207 = 0.0, $121 = 0, $1213 = 0.0, $122 = 0, $1220 = 0.0, $123 = 0, $1230 = 0.0, $1239 = 0.0, $1240 = 0.0, $1261 = 0, $1264 = 0, $1272 = 0, $1273 = 0, $1277 = 0, $1286 = 0, $129 = 0.0, $1293 = 0, $1298 = 0.0, $1299 = 0.0, $13 = 0, $1300 = 0.0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $1315 = 0.0, $1321 = 0.0, $1328 = 0.0, $1338 = 0.0, $1347 = 0.0, $1348 = 0.0, $135 = 0.0, $1369 = 0, $1380 = 0, $1381 = 0, $1385 = 0, $1390 = 0, $1397 = 0, $14 = 0, $1402 = 0, $1409 = 0, $1412 = 0.0, $1413 = 0.0, $1414 = 0.0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0.0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1429 = 0.0, $1435 = 0.0, $1442 = 0.0, $1452 = 0.0, $1461 = 0.0, $1462 = 0.0, $1483 = 0, $15 = 0, $1502 = 0, $1509 = 0.0, $1510 = 0.0, $1511 = 0.0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0.0, $1520 = 0, $1526 = 0.0, $1532 = 0.0, $1539 = 0.0, $1549 = 0.0, $1558 = 0.0, $1559 = 0.0, $1580 = 0, $1599 = 0, $16 = 0, $1606 = 0.0, $1607 = 0.0, $1608 = 0.0, $1609 = 0, $161 = 0.0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0, $162 = 0.0, $1623 = 0.0, $1629 = 0.0, $1636 = 0.0, $1646 = 0.0, $1655 = 0.0, $1656 = 0.0, $1677 = 0, $1697 = 0, $1702 = 0.0, $1703 = 0.0, $1704 = 0.0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1719 = 0.0, $1725 = 0.0, $1732 = 0.0, $1742 = 0.0, $1751 = 0.0, $1752 = 0.0, $1773 = 0, $1780 = 0, $1785 = 0.0, $1786 = 0.0, $1787 = 0.0, $1788 = 0, $1789 = 0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1802 = 0.0, $1808 = 0.0, $1815 = 0.0, $1825 = 0.0, $183 = 0, $1834 = 0.0, $1835 = 0.0, $1858 = 0, $1865 = 0, $1870 = 0.0, $1871 = 0.0, $1872 = 0.0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $1880 = 0, $1881 = 0, $1887 = 0.0, $1893 = 0.0, $1900 = 0.0, $1910 = 0.0, $1919 = 0.0, $192 = 0, $1920 = 0.0, $193 = 0, $1942 = 0, $1949 = 0, $1954 = 0.0, $1955 = 0.0, $1956 = 0.0, $1957 = 0, $1958 = 0, $1959 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1971 = 0.0, $1977 = 0.0, $1984 = 0.0, $1994 = 0.0, $2003 = 0.0, $2004 = 0.0, $201 = 0, $2025 = 0, $2028 = 0, $2036 = 0, $2051 = 0, $2056 = 0.0, $2057 = 0.0, $2058 = 0.0, $2059 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0, $2073 = 0.0, $2079 = 0.0, $208 = 0, $2086 = 0.0, $2096 = 0.0, $2105 = 0.0, $2106 = 0.0, $2127 = 0, $213 = 0.0, $2130 = 0, $2138 = 0, $214 = 0.0, $215 = 0.0, $2153 = 0, $2158 = 0.0, $2159 = 0.0, $216 = 0, $2160 = 0.0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $2168 = 0, $2169 = 0, $217 = 0, $2175 = 0.0, $218 = 0, $2181 = 0.0, $2188 = 0.0, $219 = 0, $2198 = 0.0, $220 = 0, $2207 = 0.0, $2208 = 0.0, $221 = 0, $222 = 0, $2229 = 0, $223 = 0, $2232 = 0, $224 = 0, $2251 = 0, $2256 = 0, $2263 = 0, $230 = 0.0, $236 = 0.0, $243 = 0.0, $253 = 0.0, $262 = 0.0, $263 = 0.0, $284 = 0, $292 = 0, $293 = 0, $301 = 0, $309 = 0, $31 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0, $318 = 0, $319 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $33 = 0.0, $331 = 0.0, $337 = 0.0, $34 = 0.0, $344 = 0.0, $354 = 0.0, $363 = 0.0, $364 = 0.0, $37 = 0.0, $385 = 0, $39 = 0.0, $394 = 0, $395 = 0, $40 = 0.0, $403 = 0, $410 = 0, $415 = 0.0, $416 = 0.0, $417 = 0.0, $418 = 0, $419 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $43 = 0, $432 = 0.0, $438 = 0.0, $445 = 0.0, $45 = 0.0, $455 = 0.0, $464 = 0.0, $465 = 0.0, $47 = 0.0, $48 = 0.0, $486 = 0, $494 = 0, $495 = 0, $503 = 0, $51 = 0.0, $511 = 0, $516 = 0.0, $517 = 0.0, $518 = 0.0, $519 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $53 = 0.0, $533 = 0.0, $539 = 0.0, $54 = 0.0, $546 = 0.0, $556 = 0.0, $565 = 0.0, $566 = 0.0, $57 = 0, $58 = 0.0, $587 = 0, $596 = 0, $597 = 0, $60 = 0.0, $605 = 0, $613 = 0, $618 = 0.0, $619 = 0.0, $620 = 0.0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $635 = 0.0, $64 = 0.0, $641 = 0.0, $648 = 0.0, $658 = 0.0, $66 = 0.0, $667 = 0.0, $668 = 0.0, $689 = 0, $69 = 0, $691 = 0, $696 = 0, $697 = 0, $701 = 0, $705 = 0, $710 = 0.0, $711 = 0.0, $712 = 0.0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $720 = 0, $721 = 0, $727 = 0.0, $733 = 0.0, $740 = 0.0, $75 = 0, $750 = 0.0, $759 = 0.0, $760 = 0.0, $781 = 0, $79 = 0, $790 = 0, $791 = 0, $799 = 0, $807 = 0, $812 = 0.0, $813 = 0.0, $814 = 0.0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $829 = 0.0, $835 = 0.0, $842 = 0.0, $852 = 0.0, $861 = 0.0, $862 = 0.0, $881 = 0, $884 = 0, $889 = 0.0, $903 = 0.0, $904 = 0.0, $908 = 0, $914 = 0, $918 = 0, $920 = 0, $926 = 0, $927 = 0, $931 = 0, $935 = 0, $939 = 0, $942 = 0, $947 = 0.0, $948 = 0.0, $949 = 0.0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $964 = 0.0, $970 = 0.0, $977 = 0.0, $987 = 0.0, $996 = 0.0, $997 = 0.0, $spec$select1520 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $vararg_buffer5 = sp + 232 | 0;
 $vararg_buffer3 = sp + 224 | 0;
 $vararg_buffer1 = sp + 216 | 0;
 $vararg_buffer = sp + 208 | 0;
 $12 = sp + 144 | 0;
 $13 = sp + 80 | 0;
 $14 = sp;
 $15 = sp + 240 | 0;
 $16 = sp + 236 | 0;
 HEAPF64[$12 >> 3] = 100.0;
 HEAPF64[$12 + 8 >> 3] = 100.0;
 HEAPF64[$12 + 16 >> 3] = 110.0;
 HEAPF64[$12 + 24 >> 3] = 100.0;
 HEAPF64[$12 + 32 >> 3] = 110.0;
 HEAPF64[$12 + 40 >> 3] = 110.0;
 HEAPF64[$12 + 48 >> 3] = 100.0;
 HEAPF64[$12 + 56 >> 3] = 110.0;
 $$01474 = 0;
 while (1) {
  if (($$01474 | 0) == 4) break;
  HEAPF64[$13 + ($$01474 << 4) >> 3] = +HEAPF64[$9 + ($$01474 << 4) >> 3];
  HEAPF64[$13 + ($$01474 << 4) + 8 >> 3] = +HEAPF64[$9 + ($$01474 << 4) + 8 >> 3];
  $$01474 = $$01474 + 1 | 0;
 }
 _get_cpara($12, $13, $14);
 $31 = +HEAPF64[$13 >> 3];
 $33 = +HEAPF64[$13 + 16 >> 3];
 $34 = $31 - $33;
 $37 = +HEAPF64[$13 + 8 >> 3];
 $39 = +HEAPF64[$13 + 24 >> 3];
 $40 = $37 - $39;
 $43 = ~~($34 * $34 + $40 * $40);
 $45 = +HEAPF64[$13 + 32 >> 3];
 $47 = +HEAPF64[$13 + 48 >> 3];
 $48 = $45 - $47;
 $51 = +HEAPF64[$13 + 40 >> 3];
 $53 = +HEAPF64[$13 + 56 >> 3];
 $54 = $51 - $53;
 $57 = ~~($48 * $48 + $54 * $54);
 $58 = $33 - $45;
 $60 = $39 - $51;
 $63 = ~~($58 * $58 + $60 * $60);
 $64 = $47 - $31;
 $66 = $53 - $37;
 $69 = ~~($64 * $64 + $66 * $66);
 $75 = ~~(+((($57 | 0) > ($43 | 0) ? $57 : $43) | 0) * $10 * $10);
 $79 = ~~(+((($69 | 0) > ($63 | 0) ? $69 : $63) | 0) * $10 * $10);
 if (!$0) {
  $$01464 = $2;
  while (1) if (($$01464 | 0) < ($3 | 0) & (Math_imul($$01464, $$01464) | 0) < ($75 | 0)) $$01464 = $$01464 << 1; else break;
  $$01468 = $2;
  while (1) if (($$01468 | 0) < ($3 | 0) & (Math_imul($$01468, $$01468) | 0) < ($79 | 0)) $$01468 = $$01468 << 1; else {
   $$21466 = $$01464;
   $$21470 = $$01468;
   break;
  }
 } else {
  $$11465 = $2;
  while (1) if (($$11465 | 0) < ($3 | 0) & (Math_imul($$11465 << 2, $$11465) | 0) < ($75 | 0)) $$11465 = $$11465 << 1; else break;
  $$11469 = $2;
  while (1) if (($$11469 | 0) < ($3 | 0) & (Math_imul($$11469 << 2, $$11469) | 0) < ($79 | 0)) $$11469 = $$11469 << 1; else {
   $$21466 = $$11465;
   $$21470 = $$11469;
   break;
  }
 }
 $spec$select1520 = ($$21466 | 0) > ($3 | 0) ? $3 : $$21466;
 $$31471 = ($$21470 | 0) > ($3 | 0) ? $3 : $$21470;
 $101 = ($spec$select1520 | 0) / ($2 | 0) | 0;
 $102 = ($$31471 | 0) / ($2 | 0) | 0;
 $105 = (1.0 - $10) * .5 * 10.0;
 $106 = $10 * 10.0;
 $108 = Math_imul($2, $2) | 0;
 L19 : do if (!$1) {
  $109 = $108 * 3 | 0;
  $110 = _calloc($109, 4) | 0;
  if (!$110) {
   _arLog(0, 3, 45930, $vararg_buffer);
   _exit(1);
  }
  L24 : do switch ($7 | 0) {
  case 0:
   {
    $112 = $105 + 100.0;
    $113 = +($$31471 | 0);
    $114 = +($spec$select1520 | 0);
    $115 = $14 + 48 | 0;
    $116 = $14 + 56 | 0;
    $117 = $14 + 64 | 0;
    $118 = $14 + 8 | 0;
    $119 = $14 + 16 | 0;
    $120 = $14 + 24 | 0;
    $121 = $14 + 32 | 0;
    $122 = $14 + 40 | 0;
    $123 = ($0 | 0) == 1;
    $$01495 = 0;
    while (1) {
     if (($$01495 | 0) >= ($$31471 | 0)) break L24;
     $129 = $112 + $106 * (+($$01495 | 0) + .5) / $113;
     $$11475 = 0;
     while (1) {
      if (($$11475 | 0) >= ($spec$select1520 | 0)) break;
      $135 = $112 + $106 * (+($$11475 | 0) + .5) / $114;
      $142 = +HEAPF64[$117 >> 3] + ($135 * +HEAPF64[$115 >> 3] + $129 * +HEAPF64[$116 >> 3]);
      if ($142 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $152 = (+HEAPF64[$119 >> 3] + ($135 * +HEAPF64[$14 >> 3] + $129 * +HEAPF64[$118 >> 3])) / $142;
      HEAPF32[$15 >> 2] = $152;
      $161 = (+HEAPF64[$122 >> 3] + ($135 * +HEAPF64[$120 >> 3] + $129 * +HEAPF64[$121 >> 3])) / $142;
      HEAPF32[$16 >> 2] = $161;
      _arParamIdeal2ObservLTf($8, $152, $161, $15, $16) | 0;
      $162 = +HEAPF32[$15 >> 2];
      if ($123) {
       $$01442 = ((~~($162 + 1.0) | 0) / 2 | 0) << 1;
       $$01443 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$01442 = ~~($162 + .5);
       $$01443 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$01442 | 0) > -1 ? ($$01443 | 0) < ($6 | 0) & (($$01443 | 0) > -1 & ($$01442 | 0) < ($5 | 0)) : 0) {
       $183 = ((Math_imul($$01443, $5) | 0) + $$01442 | 0) * 3 | 0;
       $192 = ((Math_imul(($$01495 | 0) / ($102 | 0) | 0, $2) | 0) + (($$11475 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $193 = $110 + ($192 << 2) | 0;
       HEAP32[$193 >> 2] = (HEAP32[$193 >> 2] | 0) + (HEAPU8[$4 + ($183 + 2) >> 0] | 0);
       $201 = $110 + ($192 + 1 << 2) | 0;
       HEAP32[$201 >> 2] = (HEAP32[$201 >> 2] | 0) + (HEAPU8[$4 + ($183 + 1) >> 0] | 0);
       $208 = $110 + ($192 + 2 << 2) | 0;
       HEAP32[$208 >> 2] = (HEAP32[$208 >> 2] | 0) + (HEAPU8[$4 + $183 >> 0] | 0);
      }
      $$11475 = $$11475 + 1 | 0;
     }
     $$01495 = $$01495 + 1 | 0;
    }
    break;
   }
  case 1:
   {
    $213 = $105 + 100.0;
    $214 = +($$31471 | 0);
    $215 = +($spec$select1520 | 0);
    $216 = $14 + 48 | 0;
    $217 = $14 + 56 | 0;
    $218 = $14 + 64 | 0;
    $219 = $14 + 8 | 0;
    $220 = $14 + 16 | 0;
    $221 = $14 + 24 | 0;
    $222 = $14 + 32 | 0;
    $223 = $14 + 40 | 0;
    $224 = ($0 | 0) == 1;
    $$11496 = 0;
    while (1) {
     if (($$11496 | 0) >= ($$31471 | 0)) break L24;
     $230 = $213 + $106 * (+($$11496 | 0) + .5) / $214;
     $$21476 = 0;
     while (1) {
      if (($$21476 | 0) >= ($spec$select1520 | 0)) break;
      $236 = $213 + $106 * (+($$21476 | 0) + .5) / $215;
      $243 = +HEAPF64[$218 >> 3] + ($236 * +HEAPF64[$216 >> 3] + $230 * +HEAPF64[$217 >> 3]);
      if ($243 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $253 = (+HEAPF64[$220 >> 3] + ($236 * +HEAPF64[$14 >> 3] + $230 * +HEAPF64[$219 >> 3])) / $243;
      HEAPF32[$15 >> 2] = $253;
      $262 = (+HEAPF64[$223 >> 3] + ($236 * +HEAPF64[$221 >> 3] + $230 * +HEAPF64[$222 >> 3])) / $243;
      HEAPF32[$16 >> 2] = $262;
      _arParamIdeal2ObservLTf($8, $253, $262, $15, $16) | 0;
      $263 = +HEAPF32[$15 >> 2];
      if ($224) {
       $$1 = ((~~($263 + 1.0) | 0) / 2 | 0) << 1;
       $$11444 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$1 = ~~($263 + .5);
       $$11444 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$1 | 0) > -1 ? ($$11444 | 0) < ($6 | 0) & (($$11444 | 0) > -1 & ($$1 | 0) < ($5 | 0)) : 0) {
       $284 = ((Math_imul($$11444, $5) | 0) + $$1 | 0) * 3 | 0;
       $292 = ((Math_imul(($$11496 | 0) / ($102 | 0) | 0, $2) | 0) + (($$21476 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $293 = $110 + ($292 << 2) | 0;
       HEAP32[$293 >> 2] = (HEAP32[$293 >> 2] | 0) + (HEAPU8[$4 + $284 >> 0] | 0);
       $301 = $110 + ($292 + 1 << 2) | 0;
       HEAP32[$301 >> 2] = (HEAP32[$301 >> 2] | 0) + (HEAPU8[$4 + ($284 + 1) >> 0] | 0);
       $309 = $110 + ($292 + 2 << 2) | 0;
       HEAP32[$309 >> 2] = (HEAP32[$309 >> 2] | 0) + (HEAPU8[$4 + ($284 + 2) >> 0] | 0);
      }
      $$21476 = $$21476 + 1 | 0;
     }
     $$11496 = $$11496 + 1 | 0;
    }
    break;
   }
  case 2:
   {
    $314 = $105 + 100.0;
    $315 = +($$31471 | 0);
    $316 = +($spec$select1520 | 0);
    $317 = $14 + 48 | 0;
    $318 = $14 + 56 | 0;
    $319 = $14 + 64 | 0;
    $320 = $14 + 8 | 0;
    $321 = $14 + 16 | 0;
    $322 = $14 + 24 | 0;
    $323 = $14 + 32 | 0;
    $324 = $14 + 40 | 0;
    $325 = ($0 | 0) == 1;
    $$21497 = 0;
    while (1) {
     if (($$21497 | 0) >= ($$31471 | 0)) break L24;
     $331 = $314 + $106 * (+($$21497 | 0) + .5) / $315;
     $$31477 = 0;
     while (1) {
      if (($$31477 | 0) >= ($spec$select1520 | 0)) break;
      $337 = $314 + $106 * (+($$31477 | 0) + .5) / $316;
      $344 = +HEAPF64[$319 >> 3] + ($337 * +HEAPF64[$317 >> 3] + $331 * +HEAPF64[$318 >> 3]);
      if ($344 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $354 = (+HEAPF64[$321 >> 3] + ($337 * +HEAPF64[$14 >> 3] + $331 * +HEAPF64[$320 >> 3])) / $344;
      HEAPF32[$15 >> 2] = $354;
      $363 = (+HEAPF64[$324 >> 3] + ($337 * +HEAPF64[$322 >> 3] + $331 * +HEAPF64[$323 >> 3])) / $344;
      HEAPF32[$16 >> 2] = $363;
      _arParamIdeal2ObservLTf($8, $354, $363, $15, $16) | 0;
      $364 = +HEAPF32[$15 >> 2];
      if ($325) {
       $$2 = ((~~($364 + 1.0) | 0) / 2 | 0) << 1;
       $$21445 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$2 = ~~($364 + .5);
       $$21445 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$2 | 0) > -1 ? ($$21445 | 0) < ($6 | 0) & (($$21445 | 0) > -1 & ($$2 | 0) < ($5 | 0)) : 0) {
       $385 = (Math_imul($$21445, $5) | 0) + $$2 << 2;
       $394 = ((Math_imul(($$21497 | 0) / ($102 | 0) | 0, $2) | 0) + (($$31477 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $395 = $110 + ($394 << 2) | 0;
       HEAP32[$395 >> 2] = (HEAP32[$395 >> 2] | 0) + (HEAPU8[$4 + ($385 | 2) >> 0] | 0);
       $403 = $110 + ($394 + 1 << 2) | 0;
       HEAP32[$403 >> 2] = (HEAP32[$403 >> 2] | 0) + (HEAPU8[$4 + ($385 | 1) >> 0] | 0);
       $410 = $110 + ($394 + 2 << 2) | 0;
       HEAP32[$410 >> 2] = (HEAP32[$410 >> 2] | 0) + (HEAPU8[$4 + $385 >> 0] | 0);
      }
      $$31477 = $$31477 + 1 | 0;
     }
     $$21497 = $$21497 + 1 | 0;
    }
    break;
   }
  case 3:
   {
    $415 = $105 + 100.0;
    $416 = +($$31471 | 0);
    $417 = +($spec$select1520 | 0);
    $418 = $14 + 48 | 0;
    $419 = $14 + 56 | 0;
    $420 = $14 + 64 | 0;
    $421 = $14 + 8 | 0;
    $422 = $14 + 16 | 0;
    $423 = $14 + 24 | 0;
    $424 = $14 + 32 | 0;
    $425 = $14 + 40 | 0;
    $426 = ($0 | 0) == 1;
    $$31498 = 0;
    while (1) {
     if (($$31498 | 0) >= ($$31471 | 0)) break L24;
     $432 = $415 + $106 * (+($$31498 | 0) + .5) / $416;
     $$41478 = 0;
     while (1) {
      if (($$41478 | 0) >= ($spec$select1520 | 0)) break;
      $438 = $415 + $106 * (+($$41478 | 0) + .5) / $417;
      $445 = +HEAPF64[$420 >> 3] + ($438 * +HEAPF64[$418 >> 3] + $432 * +HEAPF64[$419 >> 3]);
      if ($445 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $455 = (+HEAPF64[$422 >> 3] + ($438 * +HEAPF64[$14 >> 3] + $432 * +HEAPF64[$421 >> 3])) / $445;
      HEAPF32[$15 >> 2] = $455;
      $464 = (+HEAPF64[$425 >> 3] + ($438 * +HEAPF64[$423 >> 3] + $432 * +HEAPF64[$424 >> 3])) / $445;
      HEAPF32[$16 >> 2] = $464;
      _arParamIdeal2ObservLTf($8, $455, $464, $15, $16) | 0;
      $465 = +HEAPF32[$15 >> 2];
      if ($426) {
       $$3 = ((~~($465 + 1.0) | 0) / 2 | 0) << 1;
       $$31446 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$3 = ~~($465 + .5);
       $$31446 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$3 | 0) > -1 ? ($$31446 | 0) < ($6 | 0) & (($$31446 | 0) > -1 & ($$3 | 0) < ($5 | 0)) : 0) {
       $486 = (Math_imul($$31446, $5) | 0) + $$3 << 2;
       $494 = ((Math_imul(($$31498 | 0) / ($102 | 0) | 0, $2) | 0) + (($$41478 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $495 = $110 + ($494 << 2) | 0;
       HEAP32[$495 >> 2] = (HEAP32[$495 >> 2] | 0) + (HEAPU8[$4 + $486 >> 0] | 0);
       $503 = $110 + ($494 + 1 << 2) | 0;
       HEAP32[$503 >> 2] = (HEAP32[$503 >> 2] | 0) + (HEAPU8[$4 + ($486 | 1) >> 0] | 0);
       $511 = $110 + ($494 + 2 << 2) | 0;
       HEAP32[$511 >> 2] = (HEAP32[$511 >> 2] | 0) + (HEAPU8[$4 + ($486 | 2) >> 0] | 0);
      }
      $$41478 = $$41478 + 1 | 0;
     }
     $$31498 = $$31498 + 1 | 0;
    }
    break;
   }
  case 4:
   {
    $516 = $105 + 100.0;
    $517 = +($$31471 | 0);
    $518 = +($spec$select1520 | 0);
    $519 = $14 + 48 | 0;
    $520 = $14 + 56 | 0;
    $521 = $14 + 64 | 0;
    $522 = $14 + 8 | 0;
    $523 = $14 + 16 | 0;
    $524 = $14 + 24 | 0;
    $525 = $14 + 32 | 0;
    $526 = $14 + 40 | 0;
    $527 = ($0 | 0) == 1;
    $$41499 = 0;
    while (1) {
     if (($$41499 | 0) >= ($$31471 | 0)) break L24;
     $533 = $516 + $106 * (+($$41499 | 0) + .5) / $517;
     $$51479 = 0;
     while (1) {
      if (($$51479 | 0) >= ($spec$select1520 | 0)) break;
      $539 = $516 + $106 * (+($$51479 | 0) + .5) / $518;
      $546 = +HEAPF64[$521 >> 3] + ($539 * +HEAPF64[$519 >> 3] + $533 * +HEAPF64[$520 >> 3]);
      if ($546 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $556 = (+HEAPF64[$523 >> 3] + ($539 * +HEAPF64[$14 >> 3] + $533 * +HEAPF64[$522 >> 3])) / $546;
      HEAPF32[$15 >> 2] = $556;
      $565 = (+HEAPF64[$526 >> 3] + ($539 * +HEAPF64[$524 >> 3] + $533 * +HEAPF64[$525 >> 3])) / $546;
      HEAPF32[$16 >> 2] = $565;
      _arParamIdeal2ObservLTf($8, $556, $565, $15, $16) | 0;
      $566 = +HEAPF32[$15 >> 2];
      if ($527) {
       $$4 = ((~~($566 + 1.0) | 0) / 2 | 0) << 1;
       $$41447 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$4 = ~~($566 + .5);
       $$41447 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$4 | 0) > -1 ? ($$41447 | 0) < ($6 | 0) & (($$41447 | 0) > -1 & ($$4 | 0) < ($5 | 0)) : 0) {
       $587 = (Math_imul($$41447, $5) | 0) + $$4 << 2;
       $596 = ((Math_imul(($$41499 | 0) / ($102 | 0) | 0, $2) | 0) + (($$51479 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $597 = $110 + ($596 << 2) | 0;
       HEAP32[$597 >> 2] = (HEAP32[$597 >> 2] | 0) + (HEAPU8[$4 + ($587 | 1) >> 0] | 0);
       $605 = $110 + ($596 + 1 << 2) | 0;
       HEAP32[$605 >> 2] = (HEAP32[$605 >> 2] | 0) + (HEAPU8[$4 + ($587 | 2) >> 0] | 0);
       $613 = $110 + ($596 + 2 << 2) | 0;
       HEAP32[$613 >> 2] = (HEAP32[$613 >> 2] | 0) + (HEAPU8[$4 + ($587 | 3) >> 0] | 0);
      }
      $$51479 = $$51479 + 1 | 0;
     }
     $$41499 = $$41499 + 1 | 0;
    }
    break;
   }
  case 5:
  case 12:
  case 13:
  case 14:
   {
    $618 = $105 + 100.0;
    $619 = +($$31471 | 0);
    $620 = +($spec$select1520 | 0);
    $621 = $14 + 48 | 0;
    $622 = $14 + 56 | 0;
    $623 = $14 + 64 | 0;
    $624 = $14 + 8 | 0;
    $625 = $14 + 16 | 0;
    $626 = $14 + 24 | 0;
    $627 = $14 + 32 | 0;
    $628 = $14 + 40 | 0;
    $629 = ($0 | 0) == 1;
    $$51500 = 0;
    while (1) {
     if (($$51500 | 0) >= ($$31471 | 0)) break L24;
     $635 = $618 + $106 * (+($$51500 | 0) + .5) / $619;
     $$61480 = 0;
     while (1) {
      if (($$61480 | 0) >= ($spec$select1520 | 0)) break;
      $641 = $618 + $106 * (+($$61480 | 0) + .5) / $620;
      $648 = +HEAPF64[$623 >> 3] + ($641 * +HEAPF64[$621 >> 3] + $635 * +HEAPF64[$622 >> 3]);
      if ($648 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $658 = (+HEAPF64[$625 >> 3] + ($641 * +HEAPF64[$14 >> 3] + $635 * +HEAPF64[$624 >> 3])) / $648;
      HEAPF32[$15 >> 2] = $658;
      $667 = (+HEAPF64[$628 >> 3] + ($641 * +HEAPF64[$626 >> 3] + $635 * +HEAPF64[$627 >> 3])) / $648;
      HEAPF32[$16 >> 2] = $667;
      _arParamIdeal2ObservLTf($8, $658, $667, $15, $16) | 0;
      $668 = +HEAPF32[$15 >> 2];
      if ($629) {
       $$5 = ((~~($668 + 1.0) | 0) / 2 | 0) << 1;
       $$51448 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$5 = ~~($668 + .5);
       $$51448 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$5 | 0) > -1 ? ($$51448 | 0) < ($6 | 0) & (($$51448 | 0) > -1 & ($$5 | 0) < ($5 | 0)) : 0) {
       $689 = $4 + ((Math_imul($$51448, $5) | 0) + $$5) | 0;
       $691 = HEAPU8[$689 >> 0] | 0;
       $696 = ((Math_imul(($$51500 | 0) / ($102 | 0) | 0, $2) | 0) + (($$61480 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $697 = $110 + ($696 << 2) | 0;
       HEAP32[$697 >> 2] = (HEAP32[$697 >> 2] | 0) + $691;
       $701 = $110 + ($696 + 1 << 2) | 0;
       HEAP32[$701 >> 2] = (HEAP32[$701 >> 2] | 0) + $691;
       $705 = $110 + ($696 + 2 << 2) | 0;
       HEAP32[$705 >> 2] = (HEAP32[$705 >> 2] | 0) + $691;
      }
      $$61480 = $$61480 + 1 | 0;
     }
     $$51500 = $$51500 + 1 | 0;
    }
    break;
   }
  case 6:
   {
    $710 = $105 + 100.0;
    $711 = +($$31471 | 0);
    $712 = +($spec$select1520 | 0);
    $713 = $14 + 48 | 0;
    $714 = $14 + 56 | 0;
    $715 = $14 + 64 | 0;
    $716 = $14 + 8 | 0;
    $717 = $14 + 16 | 0;
    $718 = $14 + 24 | 0;
    $719 = $14 + 32 | 0;
    $720 = $14 + 40 | 0;
    $721 = ($0 | 0) == 1;
    $$61501 = 0;
    while (1) {
     if (($$61501 | 0) >= ($$31471 | 0)) break L24;
     $727 = $710 + $106 * (+($$61501 | 0) + .5) / $711;
     $$71481 = 0;
     while (1) {
      if (($$71481 | 0) >= ($spec$select1520 | 0)) break;
      $733 = $710 + $106 * (+($$71481 | 0) + .5) / $712;
      $740 = +HEAPF64[$715 >> 3] + ($733 * +HEAPF64[$713 >> 3] + $727 * +HEAPF64[$714 >> 3]);
      if ($740 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $750 = (+HEAPF64[$717 >> 3] + ($733 * +HEAPF64[$14 >> 3] + $727 * +HEAPF64[$716 >> 3])) / $740;
      HEAPF32[$15 >> 2] = $750;
      $759 = (+HEAPF64[$720 >> 3] + ($733 * +HEAPF64[$718 >> 3] + $727 * +HEAPF64[$719 >> 3])) / $740;
      HEAPF32[$16 >> 2] = $759;
      _arParamIdeal2ObservLTf($8, $750, $759, $15, $16) | 0;
      $760 = +HEAPF32[$15 >> 2];
      if ($721) {
       $$6 = ((~~($760 + 1.0) | 0) / 2 | 0) << 1;
       $$61449 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$6 = ~~($760 + .5);
       $$61449 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$6 | 0) > -1 ? ($$61449 | 0) < ($6 | 0) & (($$61449 | 0) > -1 & ($$6 | 0) < ($5 | 0)) : 0) {
       $781 = (Math_imul($$61449, $5) | 0) + $$6 << 2;
       $790 = ((Math_imul(($$61501 | 0) / ($102 | 0) | 0, $2) | 0) + (($$71481 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $791 = $110 + ($790 << 2) | 0;
       HEAP32[$791 >> 2] = (HEAP32[$791 >> 2] | 0) + (HEAPU8[$4 + ($781 | 3) >> 0] | 0);
       $799 = $110 + ($790 + 1 << 2) | 0;
       HEAP32[$799 >> 2] = (HEAP32[$799 >> 2] | 0) + (HEAPU8[$4 + ($781 | 2) >> 0] | 0);
       $807 = $110 + ($790 + 2 << 2) | 0;
       HEAP32[$807 >> 2] = (HEAP32[$807 >> 2] | 0) + (HEAPU8[$4 + ($781 | 1) >> 0] | 0);
      }
      $$71481 = $$71481 + 1 | 0;
     }
     $$61501 = $$61501 + 1 | 0;
    }
    break;
   }
  case 7:
   {
    $812 = $105 + 100.0;
    $813 = +($$31471 | 0);
    $814 = +($spec$select1520 | 0);
    $815 = $14 + 48 | 0;
    $816 = $14 + 56 | 0;
    $817 = $14 + 64 | 0;
    $818 = $14 + 8 | 0;
    $819 = $14 + 16 | 0;
    $820 = $14 + 24 | 0;
    $821 = $14 + 32 | 0;
    $822 = $14 + 40 | 0;
    $823 = ($0 | 0) == 1;
    $$71502 = 0;
    while (1) {
     if (($$71502 | 0) >= ($$31471 | 0)) break L24;
     $829 = $812 + $106 * (+($$71502 | 0) + .5) / $813;
     $$81482 = 0;
     while (1) {
      if (($$81482 | 0) >= ($spec$select1520 | 0)) break;
      $835 = $812 + $106 * (+($$81482 | 0) + .5) / $814;
      $842 = +HEAPF64[$817 >> 3] + ($835 * +HEAPF64[$815 >> 3] + $829 * +HEAPF64[$816 >> 3]);
      if ($842 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $852 = (+HEAPF64[$819 >> 3] + ($835 * +HEAPF64[$14 >> 3] + $829 * +HEAPF64[$818 >> 3])) / $842;
      HEAPF32[$15 >> 2] = $852;
      $861 = (+HEAPF64[$822 >> 3] + ($835 * +HEAPF64[$820 >> 3] + $829 * +HEAPF64[$821 >> 3])) / $842;
      HEAPF32[$16 >> 2] = $861;
      _arParamIdeal2ObservLTf($8, $852, $861, $15, $16) | 0;
      $862 = +HEAPF32[$15 >> 2];
      if ($823) {
       $$7 = ((~~($862 + 1.0) | 0) / 2 | 0) << 1;
       $$71450 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$7 = ~~($862 + .5);
       $$71450 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$7 | 0) > -1 ? ($$71450 | 0) < ($6 | 0) & (($$71450 | 0) > -1 & ($$7 | 0) < ($5 | 0)) : 0) {
       $881 = Math_imul($$71450, $5) | 0;
       $884 = ($$7 & 65534) + $881 << 1;
       $889 = +((HEAPU8[$4 + $884 >> 0] | 0) + -128 | 0);
       $903 = +((HEAPU8[$4 + ($884 + 2) >> 0] | 0) + -128 | 0);
       $904 = +((HEAPU8[$4 + ($881 + $$7 << 1 | 1) >> 0] | 0) + -16 | 0) * 298.0820007324219;
       $908 = ~~($889 * 516.4110107421875 + $904) >> 8;
       $914 = ~~($904 - $889 * 100.29100036621094 - $903 * 208.1199951171875) >> 8;
       $918 = ~~($904 + $903 * 408.5830078125) >> 8;
       $920 = ($908 | 0) > 0 ? $908 : 0;
       $926 = ((Math_imul(($$71502 | 0) / ($102 | 0) | 0, $2) | 0) + (($$81482 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $927 = $110 + ($926 << 2) | 0;
       HEAP32[$927 >> 2] = (($920 | 0) < 255 ? $920 : 255) + (HEAP32[$927 >> 2] | 0);
       $931 = ($914 | 0) > 0 ? $914 : 0;
       $935 = $110 + ($926 + 1 << 2) | 0;
       HEAP32[$935 >> 2] = (($931 | 0) < 255 ? $931 : 255) + (HEAP32[$935 >> 2] | 0);
       $939 = ($918 | 0) > 0 ? $918 : 0;
       $942 = $110 + ($926 + 2 << 2) | 0;
       HEAP32[$942 >> 2] = (($939 | 0) < 255 ? $939 : 255) + (HEAP32[$942 >> 2] | 0);
      }
      $$81482 = $$81482 + 1 | 0;
     }
     $$71502 = $$71502 + 1 | 0;
    }
    break;
   }
  case 8:
   {
    $947 = $105 + 100.0;
    $948 = +($$31471 | 0);
    $949 = +($spec$select1520 | 0);
    $950 = $14 + 48 | 0;
    $951 = $14 + 56 | 0;
    $952 = $14 + 64 | 0;
    $953 = $14 + 8 | 0;
    $954 = $14 + 16 | 0;
    $955 = $14 + 24 | 0;
    $956 = $14 + 32 | 0;
    $957 = $14 + 40 | 0;
    $958 = ($0 | 0) == 1;
    $$81503 = 0;
    while (1) {
     if (($$81503 | 0) >= ($$31471 | 0)) break L24;
     $964 = $947 + $106 * (+($$81503 | 0) + .5) / $948;
     $$91483 = 0;
     while (1) {
      if (($$91483 | 0) >= ($spec$select1520 | 0)) break;
      $970 = $947 + $106 * (+($$91483 | 0) + .5) / $949;
      $977 = +HEAPF64[$952 >> 3] + ($970 * +HEAPF64[$950 >> 3] + $964 * +HEAPF64[$951 >> 3]);
      if ($977 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $987 = (+HEAPF64[$954 >> 3] + ($970 * +HEAPF64[$14 >> 3] + $964 * +HEAPF64[$953 >> 3])) / $977;
      HEAPF32[$15 >> 2] = $987;
      $996 = (+HEAPF64[$957 >> 3] + ($970 * +HEAPF64[$955 >> 3] + $964 * +HEAPF64[$956 >> 3])) / $977;
      HEAPF32[$16 >> 2] = $996;
      _arParamIdeal2ObservLTf($8, $987, $996, $15, $16) | 0;
      $997 = +HEAPF32[$15 >> 2];
      if ($958) {
       $$8 = ((~~($997 + 1.0) | 0) / 2 | 0) << 1;
       $$81451 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$8 = ~~($997 + .5);
       $$81451 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$8 | 0) > -1 ? ($$81451 | 0) < ($6 | 0) & (($$81451 | 0) > -1 & ($$8 | 0) < ($5 | 0)) : 0) {
       $1016 = Math_imul($$81451, $5) | 0;
       $1026 = ($$8 & 65534) + $1016 << 1;
       $1032 = +((HEAPU8[$4 + ($1026 | 1) >> 0] | 0) + -128 | 0);
       $1038 = +((HEAPU8[$4 + ($1026 + 3) >> 0] | 0) + -128 | 0);
       $1039 = +((HEAPU8[$4 + ($1016 + $$8 << 1) >> 0] | 0) + -16 | 0) * 298.0820007324219;
       $1043 = ~~($1039 + $1032 * 516.4110107421875) >> 8;
       $1049 = ~~($1039 - $1032 * 100.29100036621094 - $1038 * 208.1199951171875) >> 8;
       $1053 = ~~($1039 + $1038 * 408.5830078125) >> 8;
       $1055 = ($1043 | 0) > 0 ? $1043 : 0;
       $1061 = ((Math_imul(($$81503 | 0) / ($102 | 0) | 0, $2) | 0) + (($$91483 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $1062 = $110 + ($1061 << 2) | 0;
       HEAP32[$1062 >> 2] = (($1055 | 0) < 255 ? $1055 : 255) + (HEAP32[$1062 >> 2] | 0);
       $1066 = ($1049 | 0) > 0 ? $1049 : 0;
       $1070 = $110 + ($1061 + 1 << 2) | 0;
       HEAP32[$1070 >> 2] = (($1066 | 0) < 255 ? $1066 : 255) + (HEAP32[$1070 >> 2] | 0);
       $1074 = ($1053 | 0) > 0 ? $1053 : 0;
       $1077 = $110 + ($1061 + 2 << 2) | 0;
       HEAP32[$1077 >> 2] = (($1074 | 0) < 255 ? $1074 : 255) + (HEAP32[$1077 >> 2] | 0);
      }
      $$91483 = $$91483 + 1 | 0;
     }
     $$81503 = $$81503 + 1 | 0;
    }
    break;
   }
  case 9:
   {
    $1082 = $105 + 100.0;
    $1083 = +($$31471 | 0);
    $1084 = +($spec$select1520 | 0);
    $1085 = $14 + 48 | 0;
    $1086 = $14 + 56 | 0;
    $1087 = $14 + 64 | 0;
    $1088 = $14 + 8 | 0;
    $1089 = $14 + 16 | 0;
    $1090 = $14 + 24 | 0;
    $1091 = $14 + 32 | 0;
    $1092 = $14 + 40 | 0;
    $1093 = ($0 | 0) == 1;
    $$91504 = 0;
    while (1) {
     if (($$91504 | 0) >= ($$31471 | 0)) break L24;
     $1099 = $1082 + $106 * (+($$91504 | 0) + .5) / $1083;
     $$101484 = 0;
     while (1) {
      if (($$101484 | 0) >= ($spec$select1520 | 0)) break;
      $1105 = $1082 + $106 * (+($$101484 | 0) + .5) / $1084;
      $1112 = +HEAPF64[$1087 >> 3] + ($1105 * +HEAPF64[$1085 >> 3] + $1099 * +HEAPF64[$1086 >> 3]);
      if ($1112 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $1122 = (+HEAPF64[$1089 >> 3] + ($1105 * +HEAPF64[$14 >> 3] + $1099 * +HEAPF64[$1088 >> 3])) / $1112;
      HEAPF32[$15 >> 2] = $1122;
      $1131 = (+HEAPF64[$1092 >> 3] + ($1105 * +HEAPF64[$1090 >> 3] + $1099 * +HEAPF64[$1091 >> 3])) / $1112;
      HEAPF32[$16 >> 2] = $1131;
      _arParamIdeal2ObservLTf($8, $1122, $1131, $15, $16) | 0;
      $1132 = +HEAPF32[$15 >> 2];
      if ($1093) {
       $$9 = ((~~($1132 + 1.0) | 0) / 2 | 0) << 1;
       $$91452 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$9 = ~~($1132 + .5);
       $$91452 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$9 | 0) > -1 ? ($$91452 | 0) < ($6 | 0) & (($$91452 | 0) > -1 & ($$9 | 0) < ($5 | 0)) : 0) {
       $1153 = (Math_imul($$91452, $5) | 0) + $$9 << 1;
       $1156 = HEAP8[$4 + ($1153 | 1) >> 0] | 0;
       $1164 = ((Math_imul(($$91504 | 0) / ($102 | 0) | 0, $2) | 0) + (($$101484 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $1165 = $110 + ($1164 << 2) | 0;
       HEAP32[$1165 >> 2] = (HEAP32[$1165 >> 2] | 0) + (($1156 << 3 & 255 | 4) & 255);
       $1169 = HEAP8[$4 + $1153 >> 0] | 0;
       $1178 = $110 + ($1164 + 1 << 2) | 0;
       HEAP32[$1178 >> 2] = (($1156 & -32 & 255) >>> 3 | $1169 << 5 & 255 | 2) + (HEAP32[$1178 >> 2] | 0);
       $1185 = $110 + ($1164 + 2 << 2) | 0;
       HEAP32[$1185 >> 2] = (HEAP32[$1185 >> 2] | 0) + (($1169 & -8 | 4) & 255);
      }
      $$101484 = $$101484 + 1 | 0;
     }
     $$91504 = $$91504 + 1 | 0;
    }
    break;
   }
  case 10:
   {
    $1190 = $105 + 100.0;
    $1191 = +($$31471 | 0);
    $1192 = +($spec$select1520 | 0);
    $1193 = $14 + 48 | 0;
    $1194 = $14 + 56 | 0;
    $1195 = $14 + 64 | 0;
    $1196 = $14 + 8 | 0;
    $1197 = $14 + 16 | 0;
    $1198 = $14 + 24 | 0;
    $1199 = $14 + 32 | 0;
    $1200 = $14 + 40 | 0;
    $1201 = ($0 | 0) == 1;
    $$101505 = 0;
    while (1) {
     if (($$101505 | 0) >= ($$31471 | 0)) break L24;
     $1207 = $1190 + $106 * (+($$101505 | 0) + .5) / $1191;
     $$111485 = 0;
     while (1) {
      if (($$111485 | 0) >= ($spec$select1520 | 0)) break;
      $1213 = $1190 + $106 * (+($$111485 | 0) + .5) / $1192;
      $1220 = +HEAPF64[$1195 >> 3] + ($1213 * +HEAPF64[$1193 >> 3] + $1207 * +HEAPF64[$1194 >> 3]);
      if ($1220 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $1230 = (+HEAPF64[$1197 >> 3] + ($1213 * +HEAPF64[$14 >> 3] + $1207 * +HEAPF64[$1196 >> 3])) / $1220;
      HEAPF32[$15 >> 2] = $1230;
      $1239 = (+HEAPF64[$1200 >> 3] + ($1213 * +HEAPF64[$1198 >> 3] + $1207 * +HEAPF64[$1199 >> 3])) / $1220;
      HEAPF32[$16 >> 2] = $1239;
      _arParamIdeal2ObservLTf($8, $1230, $1239, $15, $16) | 0;
      $1240 = +HEAPF32[$15 >> 2];
      if ($1201) {
       $$10 = ((~~($1240 + 1.0) | 0) / 2 | 0) << 1;
       $$101453 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$10 = ~~($1240 + .5);
       $$101453 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$10 | 0) > -1 ? ($$101453 | 0) < ($6 | 0) & (($$101453 | 0) > -1 & ($$10 | 0) < ($5 | 0)) : 0) {
       $1261 = (Math_imul($$101453, $5) | 0) + $$10 << 1;
       $1264 = HEAP8[$4 + ($1261 | 1) >> 0] | 0;
       $1272 = ((Math_imul(($$101505 | 0) / ($102 | 0) | 0, $2) | 0) + (($$111485 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $1273 = $110 + ($1272 << 2) | 0;
       HEAP32[$1273 >> 2] = (HEAP32[$1273 >> 2] | 0) + (($1264 << 2 & 255 | 4) & 255);
       $1277 = HEAP8[$4 + $1261 >> 0] | 0;
       $1286 = $110 + ($1272 + 1 << 2) | 0;
       HEAP32[$1286 >> 2] = (($1264 & -64 & 255) >>> 3 | $1277 << 5 & 255 | 4) + (HEAP32[$1286 >> 2] | 0);
       $1293 = $110 + ($1272 + 2 << 2) | 0;
       HEAP32[$1293 >> 2] = (HEAP32[$1293 >> 2] | 0) + (($1277 & -8 | 4) & 255);
      }
      $$111485 = $$111485 + 1 | 0;
     }
     $$101505 = $$101505 + 1 | 0;
    }
    break;
   }
  case 11:
   {
    $1298 = $105 + 100.0;
    $1299 = +($$31471 | 0);
    $1300 = +($spec$select1520 | 0);
    $1301 = $14 + 48 | 0;
    $1302 = $14 + 56 | 0;
    $1303 = $14 + 64 | 0;
    $1304 = $14 + 8 | 0;
    $1305 = $14 + 16 | 0;
    $1306 = $14 + 24 | 0;
    $1307 = $14 + 32 | 0;
    $1308 = $14 + 40 | 0;
    $1309 = ($0 | 0) == 1;
    $$111506 = 0;
    while (1) {
     if (($$111506 | 0) >= ($$31471 | 0)) break L24;
     $1315 = $1298 + $106 * (+($$111506 | 0) + .5) / $1299;
     $$121486 = 0;
     while (1) {
      if (($$121486 | 0) >= ($spec$select1520 | 0)) break;
      $1321 = $1298 + $106 * (+($$121486 | 0) + .5) / $1300;
      $1328 = +HEAPF64[$1303 >> 3] + ($1321 * +HEAPF64[$1301 >> 3] + $1315 * +HEAPF64[$1302 >> 3]);
      if ($1328 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $1338 = (+HEAPF64[$1305 >> 3] + ($1321 * +HEAPF64[$14 >> 3] + $1315 * +HEAPF64[$1304 >> 3])) / $1328;
      HEAPF32[$15 >> 2] = $1338;
      $1347 = (+HEAPF64[$1308 >> 3] + ($1321 * +HEAPF64[$1306 >> 3] + $1315 * +HEAPF64[$1307 >> 3])) / $1328;
      HEAPF32[$16 >> 2] = $1347;
      _arParamIdeal2ObservLTf($8, $1338, $1347, $15, $16) | 0;
      $1348 = +HEAPF32[$15 >> 2];
      if ($1309) {
       $$11 = ((~~($1348 + 1.0) | 0) / 2 | 0) << 1;
       $$111454 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$11 = ~~($1348 + .5);
       $$111454 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$11 | 0) > -1 ? ($$111454 | 0) < ($6 | 0) & (($$111454 | 0) > -1 & ($$11 | 0) < ($5 | 0)) : 0) {
       $1369 = (Math_imul($$111454, $5) | 0) + $$11 << 1;
       $1380 = ((Math_imul(($$111506 | 0) / ($102 | 0) | 0, $2) | 0) + (($$121486 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $1381 = $110 + ($1380 << 2) | 0;
       HEAP32[$1381 >> 2] = (HEAP32[$1381 >> 2] | 0) + ((HEAP8[$4 + ($1369 | 1) >> 0] & -16 | 8) & 255);
       $1385 = HEAP8[$4 + $1369 >> 0] | 0;
       $1390 = $110 + ($1380 + 1 << 2) | 0;
       HEAP32[$1390 >> 2] = (HEAP32[$1390 >> 2] | 0) + (($1385 << 4 & 255 | 8) & 255);
       $1397 = $110 + ($1380 + 2 << 2) | 0;
       HEAP32[$1397 >> 2] = (HEAP32[$1397 >> 2] | 0) + (($1385 & -16 | 8) & 255);
      }
      $$121486 = $$121486 + 1 | 0;
     }
     $$111506 = $$111506 + 1 | 0;
    }
    break;
   }
  default:
   {
    _arLog(0, 3, 24238, $vararg_buffer1);
    $2263 = $110;
    label = 306;
    break L19;
   }
  } while (0);
  $1402 = Math_imul($102, $101) | 0;
  $$131487 = 0;
  while (1) {
   if (($$131487 | 0) == ($109 | 0)) break;
   HEAP8[$11 + $$131487 >> 0] = ((HEAP32[$110 + ($$131487 << 2) >> 2] | 0) >>> 0) / ($1402 >>> 0) | 0;
   $$131487 = $$131487 + 1 | 0;
  }
  _free($110);
  $$0 = 0;
 } else {
  $1409 = _calloc($108, 4) | 0;
  if (!$1409) {
   _arLog(0, 3, 45930, $vararg_buffer3);
   _exit(1);
  }
  L239 : do if ($7 >>> 0 < 2) {
   $1412 = $105 + 100.0;
   $1413 = +($$31471 | 0);
   $1414 = +($spec$select1520 | 0);
   $1415 = $14 + 48 | 0;
   $1416 = $14 + 56 | 0;
   $1417 = $14 + 64 | 0;
   $1418 = $14 + 8 | 0;
   $1419 = $14 + 16 | 0;
   $1420 = $14 + 24 | 0;
   $1421 = $14 + 32 | 0;
   $1422 = $14 + 40 | 0;
   $1423 = ($0 | 0) == 1;
   $$121507 = 0;
   while (1) {
    if (($$121507 | 0) >= ($$31471 | 0)) break L239;
    $1429 = $1412 + $106 * (+($$121507 | 0) + .5) / $1413;
    $$141488 = 0;
    while (1) {
     if (($$141488 | 0) >= ($spec$select1520 | 0)) break;
     $1435 = $1412 + $106 * (+($$141488 | 0) + .5) / $1414;
     $1442 = +HEAPF64[$1417 >> 3] + ($1435 * +HEAPF64[$1415 >> 3] + $1429 * +HEAPF64[$1416 >> 3]);
     if ($1442 == 0.0) {
      $2263 = $1409;
      label = 306;
      break L19;
     }
     $1452 = (+HEAPF64[$1419 >> 3] + ($1435 * +HEAPF64[$14 >> 3] + $1429 * +HEAPF64[$1418 >> 3])) / $1442;
     HEAPF32[$15 >> 2] = $1452;
     $1461 = (+HEAPF64[$1422 >> 3] + ($1435 * +HEAPF64[$1420 >> 3] + $1429 * +HEAPF64[$1421 >> 3])) / $1442;
     HEAPF32[$16 >> 2] = $1461;
     _arParamIdeal2ObservLTf($8, $1452, $1461, $15, $16) | 0;
     $1462 = +HEAPF32[$15 >> 2];
     if ($1423) {
      $$12 = ((~~($1462 + 1.0) | 0) / 2 | 0) << 1;
      $$121455 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
     } else {
      $$12 = ~~($1462 + .5);
      $$121455 = ~~(+HEAPF32[$16 >> 2] + .5);
     }
     if (($$12 | 0) > -1 ? ($$121455 | 0) < ($6 | 0) & (($$121455 | 0) > -1 & ($$12 | 0) < ($5 | 0)) : 0) {
      $1483 = ((Math_imul($$121455, $5) | 0) + $$12 | 0) * 3 | 0;
      $1502 = $1409 + ((Math_imul(($$121507 | 0) / ($102 | 0) | 0, $2) | 0) + (($$141488 | 0) / ($101 | 0) | 0) << 2) | 0;
      HEAP32[$1502 >> 2] = (HEAP32[$1502 >> 2] | 0) + ((((HEAPU8[$4 + ($1483 + 1) >> 0] | 0) + (HEAPU8[$4 + $1483 >> 0] | 0) + (HEAPU8[$4 + ($1483 + 2) >> 0] | 0) | 0) >>> 0) / 3 | 0);
     }
     $$141488 = $$141488 + 1 | 0;
    }
    $$121507 = $$121507 + 1 | 0;
   }
  } else {
   if (($7 | 1 | 0) == 3) {
    $1509 = $105 + 100.0;
    $1510 = +($$31471 | 0);
    $1511 = +($spec$select1520 | 0);
    $1512 = $14 + 48 | 0;
    $1513 = $14 + 56 | 0;
    $1514 = $14 + 64 | 0;
    $1515 = $14 + 8 | 0;
    $1516 = $14 + 16 | 0;
    $1517 = $14 + 24 | 0;
    $1518 = $14 + 32 | 0;
    $1519 = $14 + 40 | 0;
    $1520 = ($0 | 0) == 1;
    $$131508 = 0;
    while (1) {
     if (($$131508 | 0) >= ($$31471 | 0)) break L239;
     $1526 = $1509 + $106 * (+($$131508 | 0) + .5) / $1510;
     $$151489 = 0;
     while (1) {
      if (($$151489 | 0) >= ($spec$select1520 | 0)) break;
      $1532 = $1509 + $106 * (+($$151489 | 0) + .5) / $1511;
      $1539 = +HEAPF64[$1514 >> 3] + ($1532 * +HEAPF64[$1512 >> 3] + $1526 * +HEAPF64[$1513 >> 3]);
      if ($1539 == 0.0) {
       $2263 = $1409;
       label = 306;
       break L19;
      }
      $1549 = (+HEAPF64[$1516 >> 3] + ($1532 * +HEAPF64[$14 >> 3] + $1526 * +HEAPF64[$1515 >> 3])) / $1539;
      HEAPF32[$15 >> 2] = $1549;
      $1558 = (+HEAPF64[$1519 >> 3] + ($1532 * +HEAPF64[$1517 >> 3] + $1526 * +HEAPF64[$1518 >> 3])) / $1539;
      HEAPF32[$16 >> 2] = $1558;
      _arParamIdeal2ObservLTf($8, $1549, $1558, $15, $16) | 0;
      $1559 = +HEAPF32[$15 >> 2];
      if ($1520) {
       $$13 = ((~~($1559 + 1.0) | 0) / 2 | 0) << 1;
       $$131456 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$13 = ~~($1559 + .5);
       $$131456 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$13 | 0) > -1 ? ($$131456 | 0) < ($6 | 0) & (($$131456 | 0) > -1 & ($$13 | 0) < ($5 | 0)) : 0) {
       $1580 = (Math_imul($$131456, $5) | 0) + $$13 << 2;
       $1599 = $1409 + ((Math_imul(($$131508 | 0) / ($102 | 0) | 0, $2) | 0) + (($$151489 | 0) / ($101 | 0) | 0) << 2) | 0;
       HEAP32[$1599 >> 2] = (HEAP32[$1599 >> 2] | 0) + ((((HEAPU8[$4 + ($1580 | 1) >> 0] | 0) + (HEAPU8[$4 + $1580 >> 0] | 0) + (HEAPU8[$4 + ($1580 | 2) >> 0] | 0) | 0) >>> 0) / 3 | 0);
      }
      $$151489 = $$151489 + 1 | 0;
     }
     $$131508 = $$131508 + 1 | 0;
    }
   }
   if (($7 | 2 | 0) == 6) {
    $1606 = $105 + 100.0;
    $1607 = +($$31471 | 0);
    $1608 = +($spec$select1520 | 0);
    $1609 = $14 + 48 | 0;
    $1610 = $14 + 56 | 0;
    $1611 = $14 + 64 | 0;
    $1612 = $14 + 8 | 0;
    $1613 = $14 + 16 | 0;
    $1614 = $14 + 24 | 0;
    $1615 = $14 + 32 | 0;
    $1616 = $14 + 40 | 0;
    $1617 = ($0 | 0) == 1;
    $$141509 = 0;
    while (1) {
     if (($$141509 | 0) >= ($$31471 | 0)) break L239;
     $1623 = $1606 + $106 * (+($$141509 | 0) + .5) / $1607;
     $$161490 = 0;
     while (1) {
      if (($$161490 | 0) >= ($spec$select1520 | 0)) break;
      $1629 = $1606 + $106 * (+($$161490 | 0) + .5) / $1608;
      $1636 = +HEAPF64[$1611 >> 3] + ($1629 * +HEAPF64[$1609 >> 3] + $1623 * +HEAPF64[$1610 >> 3]);
      if ($1636 == 0.0) {
       $2263 = $1409;
       label = 306;
       break L19;
      }
      $1646 = (+HEAPF64[$1613 >> 3] + ($1629 * +HEAPF64[$14 >> 3] + $1623 * +HEAPF64[$1612 >> 3])) / $1636;
      HEAPF32[$15 >> 2] = $1646;
      $1655 = (+HEAPF64[$1616 >> 3] + ($1629 * +HEAPF64[$1614 >> 3] + $1623 * +HEAPF64[$1615 >> 3])) / $1636;
      HEAPF32[$16 >> 2] = $1655;
      _arParamIdeal2ObservLTf($8, $1646, $1655, $15, $16) | 0;
      $1656 = +HEAPF32[$15 >> 2];
      if ($1617) {
       $$14 = ((~~($1656 + 1.0) | 0) / 2 | 0) << 1;
       $$141457 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$14 = ~~($1656 + .5);
       $$141457 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$14 | 0) > -1 ? ($$141457 | 0) < ($6 | 0) & (($$141457 | 0) > -1 & ($$14 | 0) < ($5 | 0)) : 0) {
       $1677 = (Math_imul($$141457, $5) | 0) + $$14 << 2;
       $1697 = $1409 + ((Math_imul(($$141509 | 0) / ($102 | 0) | 0, $2) | 0) + (($$161490 | 0) / ($101 | 0) | 0) << 2) | 0;
       HEAP32[$1697 >> 2] = (HEAP32[$1697 >> 2] | 0) + ((((HEAPU8[$4 + ($1677 | 2) >> 0] | 0) + (HEAPU8[$4 + ($1677 | 1) >> 0] | 0) + (HEAPU8[$4 + ($1677 | 3) >> 0] | 0) | 0) >>> 0) / 3 | 0);
      }
      $$161490 = $$161490 + 1 | 0;
     }
     $$141509 = $$141509 + 1 | 0;
    }
   }
   switch ($7 | 0) {
   case 5:
   case 12:
   case 13:
   case 14:
    {
     $1702 = $105 + 100.0;
     $1703 = +($$31471 | 0);
     $1704 = +($spec$select1520 | 0);
     $1705 = $14 + 48 | 0;
     $1706 = $14 + 56 | 0;
     $1707 = $14 + 64 | 0;
     $1708 = $14 + 8 | 0;
     $1709 = $14 + 16 | 0;
     $1710 = $14 + 24 | 0;
     $1711 = $14 + 32 | 0;
     $1712 = $14 + 40 | 0;
     $1713 = ($0 | 0) == 1;
     $$151510 = 0;
     while (1) {
      if (($$151510 | 0) >= ($$31471 | 0)) break L239;
      $1719 = $1702 + $106 * (+($$151510 | 0) + .5) / $1703;
      $$171491 = 0;
      while (1) {
       if (($$171491 | 0) >= ($spec$select1520 | 0)) break;
       $1725 = $1702 + $106 * (+($$171491 | 0) + .5) / $1704;
       $1732 = +HEAPF64[$1707 >> 3] + ($1725 * +HEAPF64[$1705 >> 3] + $1719 * +HEAPF64[$1706 >> 3]);
       if ($1732 == 0.0) {
        $2263 = $1409;
        label = 306;
        break L19;
       }
       $1742 = (+HEAPF64[$1709 >> 3] + ($1725 * +HEAPF64[$14 >> 3] + $1719 * +HEAPF64[$1708 >> 3])) / $1732;
       HEAPF32[$15 >> 2] = $1742;
       $1751 = (+HEAPF64[$1712 >> 3] + ($1725 * +HEAPF64[$1710 >> 3] + $1719 * +HEAPF64[$1711 >> 3])) / $1732;
       HEAPF32[$16 >> 2] = $1751;
       _arParamIdeal2ObservLTf($8, $1742, $1751, $15, $16) | 0;
       $1752 = +HEAPF32[$15 >> 2];
       if ($1713) {
        $$15 = ((~~($1752 + 1.0) | 0) / 2 | 0) << 1;
        $$151458 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        $$15 = ~~($1752 + .5);
        $$151458 = ~~(+HEAPF32[$16 >> 2] + .5);
       }
       if (($$15 | 0) > -1 ? ($$151458 | 0) < ($6 | 0) & (($$151458 | 0) > -1 & ($$15 | 0) < ($5 | 0)) : 0) {
        $1773 = $4 + ((Math_imul($$151458, $5) | 0) + $$15) | 0;
        $1780 = $1409 + ((Math_imul(($$151510 | 0) / ($102 | 0) | 0, $2) | 0) + (($$171491 | 0) / ($101 | 0) | 0) << 2) | 0;
        HEAP32[$1780 >> 2] = (HEAP32[$1780 >> 2] | 0) + (HEAPU8[$1773 >> 0] | 0);
       }
       $$171491 = $$171491 + 1 | 0;
      }
      $$151510 = $$151510 + 1 | 0;
     }
     break;
    }
   case 7:
    {
     $1785 = $105 + 100.0;
     $1786 = +($$31471 | 0);
     $1787 = +($spec$select1520 | 0);
     $1788 = $14 + 48 | 0;
     $1789 = $14 + 56 | 0;
     $1790 = $14 + 64 | 0;
     $1791 = $14 + 8 | 0;
     $1792 = $14 + 16 | 0;
     $1793 = $14 + 24 | 0;
     $1794 = $14 + 32 | 0;
     $1795 = $14 + 40 | 0;
     $1796 = ($0 | 0) == 1;
     $$161511 = 0;
     while (1) {
      if (($$161511 | 0) >= ($$31471 | 0)) break L239;
      $1802 = $1785 + $106 * (+($$161511 | 0) + .5) / $1786;
      $$181492 = 0;
      while (1) {
       if (($$181492 | 0) >= ($spec$select1520 | 0)) break;
       $1808 = $1785 + $106 * (+($$181492 | 0) + .5) / $1787;
       $1815 = +HEAPF64[$1790 >> 3] + ($1808 * +HEAPF64[$1788 >> 3] + $1802 * +HEAPF64[$1789 >> 3]);
       if ($1815 == 0.0) {
        $2263 = $1409;
        label = 306;
        break L19;
       }
       $1825 = (+HEAPF64[$1792 >> 3] + ($1808 * +HEAPF64[$14 >> 3] + $1802 * +HEAPF64[$1791 >> 3])) / $1815;
       HEAPF32[$15 >> 2] = $1825;
       $1834 = (+HEAPF64[$1795 >> 3] + ($1808 * +HEAPF64[$1793 >> 3] + $1802 * +HEAPF64[$1794 >> 3])) / $1815;
       HEAPF32[$16 >> 2] = $1834;
       _arParamIdeal2ObservLTf($8, $1825, $1834, $15, $16) | 0;
       $1835 = +HEAPF32[$15 >> 2];
       if ($1796) {
        $$16 = ((~~($1835 + 1.0) | 0) / 2 | 0) << 1;
        $$161459 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        $$16 = ~~($1835 + .5);
        $$161459 = ~~(+HEAPF32[$16 >> 2] + .5);
       }
       if (($$16 | 0) > -1 ? ($$161459 | 0) < ($6 | 0) & (($$161459 | 0) > -1 & ($$16 | 0) < ($5 | 0)) : 0) {
        $1858 = $4 + ((Math_imul($$161459, $5) | 0) + $$16 << 1 | 1) | 0;
        $1865 = $1409 + ((Math_imul(($$161511 | 0) / ($102 | 0) | 0, $2) | 0) + (($$181492 | 0) / ($101 | 0) | 0) << 2) | 0;
        HEAP32[$1865 >> 2] = (HEAP32[$1865 >> 2] | 0) + (HEAPU8[$1858 >> 0] | 0);
       }
       $$181492 = $$181492 + 1 | 0;
      }
      $$161511 = $$161511 + 1 | 0;
     }
     break;
    }
   case 8:
    {
     $1870 = $105 + 100.0;
     $1871 = +($$31471 | 0);
     $1872 = +($spec$select1520 | 0);
     $1873 = $14 + 48 | 0;
     $1874 = $14 + 56 | 0;
     $1875 = $14 + 64 | 0;
     $1876 = $14 + 8 | 0;
     $1877 = $14 + 16 | 0;
     $1878 = $14 + 24 | 0;
     $1879 = $14 + 32 | 0;
     $1880 = $14 + 40 | 0;
     $1881 = ($0 | 0) == 1;
     $$171512 = 0;
     while (1) {
      if (($$171512 | 0) >= ($$31471 | 0)) break L239;
      $1887 = $1870 + $106 * (+($$171512 | 0) + .5) / $1871;
      $$191493 = 0;
      while (1) {
       if (($$191493 | 0) >= ($spec$select1520 | 0)) break;
       $1893 = $1870 + $106 * (+($$191493 | 0) + .5) / $1872;
       $1900 = +HEAPF64[$1875 >> 3] + ($1893 * +HEAPF64[$1873 >> 3] + $1887 * +HEAPF64[$1874 >> 3]);
       if ($1900 == 0.0) {
        $2263 = $1409;
        label = 306;
        break L19;
       }
       $1910 = (+HEAPF64[$1877 >> 3] + ($1893 * +HEAPF64[$14 >> 3] + $1887 * +HEAPF64[$1876 >> 3])) / $1900;
       HEAPF32[$15 >> 2] = $1910;
       $1919 = (+HEAPF64[$1880 >> 3] + ($1893 * +HEAPF64[$1878 >> 3] + $1887 * +HEAPF64[$1879 >> 3])) / $1900;
       HEAPF32[$16 >> 2] = $1919;
       _arParamIdeal2ObservLTf($8, $1910, $1919, $15, $16) | 0;
       $1920 = +HEAPF32[$15 >> 2];
       if ($1881) {
        $$17 = ((~~($1920 + 1.0) | 0) / 2 | 0) << 1;
        $$171460 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        $$17 = ~~($1920 + .5);
        $$171460 = ~~(+HEAPF32[$16 >> 2] + .5);
       }
       if (($$17 | 0) > -1 ? ($$171460 | 0) < ($6 | 0) & (($$171460 | 0) > -1 & ($$17 | 0) < ($5 | 0)) : 0) {
        $1942 = $4 + ((Math_imul($$171460, $5) | 0) + $$17 << 1) | 0;
        $1949 = $1409 + ((Math_imul(($$171512 | 0) / ($102 | 0) | 0, $2) | 0) + (($$191493 | 0) / ($101 | 0) | 0) << 2) | 0;
        HEAP32[$1949 >> 2] = (HEAP32[$1949 >> 2] | 0) + (HEAPU8[$1942 >> 0] | 0);
       }
       $$191493 = $$191493 + 1 | 0;
      }
      $$171512 = $$171512 + 1 | 0;
     }
     break;
    }
   case 9:
    {
     $1954 = $105 + 100.0;
     $1955 = +($$31471 | 0);
     $1956 = +($spec$select1520 | 0);
     $1957 = $14 + 48 | 0;
     $1958 = $14 + 56 | 0;
     $1959 = $14 + 64 | 0;
     $1960 = $14 + 8 | 0;
     $1961 = $14 + 16 | 0;
     $1962 = $14 + 24 | 0;
     $1963 = $14 + 32 | 0;
     $1964 = $14 + 40 | 0;
     $1965 = ($0 | 0) == 1;
     $$181513 = 0;
     while (1) {
      if (($$181513 | 0) >= ($$31471 | 0)) break L239;
      $1971 = $1954 + $106 * (+($$181513 | 0) + .5) / $1955;
      $$201494 = 0;
      while (1) {
       if (($$201494 | 0) >= ($spec$select1520 | 0)) break;
       $1977 = $1954 + $106 * (+($$201494 | 0) + .5) / $1956;
       $1984 = +HEAPF64[$1959 >> 3] + ($1977 * +HEAPF64[$1957 >> 3] + $1971 * +HEAPF64[$1958 >> 3]);
       if ($1984 == 0.0) {
        $2263 = $1409;
        label = 306;
        break L19;
       }
       $1994 = (+HEAPF64[$1961 >> 3] + ($1977 * +HEAPF64[$14 >> 3] + $1971 * +HEAPF64[$1960 >> 3])) / $1984;
       HEAPF32[$15 >> 2] = $1994;
       $2003 = (+HEAPF64[$1964 >> 3] + ($1977 * +HEAPF64[$1962 >> 3] + $1971 * +HEAPF64[$1963 >> 3])) / $1984;
       HEAPF32[$16 >> 2] = $2003;
       _arParamIdeal2ObservLTf($8, $1994, $2003, $15, $16) | 0;
       $2004 = +HEAPF32[$15 >> 2];
       if ($1965) {
        $$18 = ((~~($2004 + 1.0) | 0) / 2 | 0) << 1;
        $$181461 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        $$18 = ~~($2004 + .5);
        $$181461 = ~~(+HEAPF32[$16 >> 2] + .5);
       }
       if (($$18 | 0) > -1 ? ($$181461 | 0) < ($6 | 0) & (($$181461 | 0) > -1 & ($$18 | 0) < ($5 | 0)) : 0) {
        $2025 = (Math_imul($$181461, $5) | 0) + $$18 << 1;
        $2028 = HEAPU8[$4 + $2025 >> 0] | 0;
        $2036 = HEAPU8[$4 + ($2025 | 1) >> 0] | 0;
        $2051 = $1409 + ((Math_imul(($$181513 | 0) / ($102 | 0) | 0, $2) | 0) + (($$201494 | 0) / ($101 | 0) | 0) << 2) | 0;
        HEAP32[$2051 >> 2] = (((($2028 << 5 & 224 | $2036 >>> 3 & 28 | 2) + ($2028 & 248 | 4) + ($2036 << 3 & 248 | 4) | 0) >>> 0) / 3 | 0) + (HEAP32[$2051 >> 2] | 0);
       }
       $$201494 = $$201494 + 1 | 0;
      }
      $$181513 = $$181513 + 1 | 0;
     }
     break;
    }
   case 10:
    {
     $2056 = $105 + 100.0;
     $2057 = +($$31471 | 0);
     $2058 = +($spec$select1520 | 0);
     $2059 = $14 + 48 | 0;
     $2060 = $14 + 56 | 0;
     $2061 = $14 + 64 | 0;
     $2062 = $14 + 8 | 0;
     $2063 = $14 + 16 | 0;
     $2064 = $14 + 24 | 0;
     $2065 = $14 + 32 | 0;
     $2066 = $14 + 40 | 0;
     $2067 = ($0 | 0) == 1;
     $$191514 = 0;
     while (1) {
      if (($$191514 | 0) >= ($$31471 | 0)) break L239;
      $2073 = $2056 + $106 * (+($$191514 | 0) + .5) / $2057;
      $$21 = 0;
      while (1) {
       if (($$21 | 0) >= ($spec$select1520 | 0)) break;
       $2079 = $2056 + $106 * (+($$21 | 0) + .5) / $2058;
       $2086 = +HEAPF64[$2061 >> 3] + ($2079 * +HEAPF64[$2059 >> 3] + $2073 * +HEAPF64[$2060 >> 3]);
       if ($2086 == 0.0) {
        $2263 = $1409;
        label = 306;
        break L19;
       }
       $2096 = (+HEAPF64[$2063 >> 3] + ($2079 * +HEAPF64[$14 >> 3] + $2073 * +HEAPF64[$2062 >> 3])) / $2086;
       HEAPF32[$15 >> 2] = $2096;
       $2105 = (+HEAPF64[$2066 >> 3] + ($2079 * +HEAPF64[$2064 >> 3] + $2073 * +HEAPF64[$2065 >> 3])) / $2086;
       HEAPF32[$16 >> 2] = $2105;
       _arParamIdeal2ObservLTf($8, $2096, $2105, $15, $16) | 0;
       $2106 = +HEAPF32[$15 >> 2];
       if ($2067) {
        $$19 = ((~~($2106 + 1.0) | 0) / 2 | 0) << 1;
        $$191462 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        $$19 = ~~($2106 + .5);
        $$191462 = ~~(+HEAPF32[$16 >> 2] + .5);
       }
       if (($$19 | 0) > -1 ? ($$191462 | 0) < ($6 | 0) & (($$191462 | 0) > -1 & ($$19 | 0) < ($5 | 0)) : 0) {
        $2127 = (Math_imul($$191462, $5) | 0) + $$19 << 1;
        $2130 = HEAPU8[$4 + $2127 >> 0] | 0;
        $2138 = HEAPU8[$4 + ($2127 | 1) >> 0] | 0;
        $2153 = $1409 + ((Math_imul(($$191514 | 0) / ($102 | 0) | 0, $2) | 0) + (($$21 | 0) / ($101 | 0) | 0) << 2) | 0;
        HEAP32[$2153 >> 2] = (((($2130 << 5 & 224 | $2138 >>> 3 & 24 | 4) + ($2130 & 248 | 4) + ($2138 << 2 & 248 | 4) | 0) >>> 0) / 3 | 0) + (HEAP32[$2153 >> 2] | 0);
       }
       $$21 = $$21 + 1 | 0;
      }
      $$191514 = $$191514 + 1 | 0;
     }
     break;
    }
   case 11:
    {
     $2158 = $105 + 100.0;
     $2159 = +($$31471 | 0);
     $2160 = +($spec$select1520 | 0);
     $2161 = $14 + 48 | 0;
     $2162 = $14 + 56 | 0;
     $2163 = $14 + 64 | 0;
     $2164 = $14 + 8 | 0;
     $2165 = $14 + 16 | 0;
     $2166 = $14 + 24 | 0;
     $2167 = $14 + 32 | 0;
     $2168 = $14 + 40 | 0;
     $2169 = ($0 | 0) == 1;
     $$201515 = 0;
     while (1) {
      if (($$201515 | 0) >= ($$31471 | 0)) break L239;
      $2175 = $2158 + $106 * (+($$201515 | 0) + .5) / $2159;
      $$22 = 0;
      while (1) {
       if (($$22 | 0) >= ($spec$select1520 | 0)) break;
       $2181 = $2158 + $106 * (+($$22 | 0) + .5) / $2160;
       $2188 = +HEAPF64[$2163 >> 3] + ($2181 * +HEAPF64[$2161 >> 3] + $2175 * +HEAPF64[$2162 >> 3]);
       if ($2188 == 0.0) {
        $2263 = $1409;
        label = 306;
        break L19;
       }
       $2198 = (+HEAPF64[$2165 >> 3] + ($2181 * +HEAPF64[$14 >> 3] + $2175 * +HEAPF64[$2164 >> 3])) / $2188;
       HEAPF32[$15 >> 2] = $2198;
       $2207 = (+HEAPF64[$2168 >> 3] + ($2181 * +HEAPF64[$2166 >> 3] + $2175 * +HEAPF64[$2167 >> 3])) / $2188;
       HEAPF32[$16 >> 2] = $2207;
       _arParamIdeal2ObservLTf($8, $2198, $2207, $15, $16) | 0;
       $2208 = +HEAPF32[$15 >> 2];
       if ($2169) {
        $$20 = ((~~($2208 + 1.0) | 0) / 2 | 0) << 1;
        $$201463 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        $$20 = ~~($2208 + .5);
        $$201463 = ~~(+HEAPF32[$16 >> 2] + .5);
       }
       if (($$20 | 0) > -1 ? ($$201463 | 0) < ($6 | 0) & (($$201463 | 0) > -1 & ($$20 | 0) < ($5 | 0)) : 0) {
        $2229 = (Math_imul($$201463, $5) | 0) + $$20 << 1;
        $2232 = HEAPU8[$4 + $2229 >> 0] | 0;
        $2251 = $1409 + ((Math_imul(($$201515 | 0) / ($102 | 0) | 0, $2) | 0) + (($$22 | 0) / ($101 | 0) | 0) << 2) | 0;
        HEAP32[$2251 >> 2] = (((($2232 << 4 & 240 | 8) + ($2232 & 240 | 8) + ((HEAP8[$4 + ($2229 | 1) >> 0] & -16 | 8) & 255) | 0) >>> 0) / 3 | 0) + (HEAP32[$2251 >> 2] | 0);
       }
       $$22 = $$22 + 1 | 0;
      }
      $$201515 = $$201515 + 1 | 0;
     }
     break;
    }
   default:
    {
     _arLog(0, 3, 24238, $vararg_buffer5);
     $2263 = $1409;
     label = 306;
     break L19;
    }
   }
  } while (0);
  $2256 = Math_imul($102, $101) | 0;
  $$23 = 0;
  while (1) {
   if (($$23 | 0) == ($108 | 0)) break;
   HEAP8[$11 + $$23 >> 0] = ((HEAP32[$1409 + ($$23 << 2) >> 2] | 0) >>> 0) / ($2256 >>> 0) | 0;
   $$23 = $$23 + 1 | 0;
  }
  _free($1409);
  $$0 = 0;
 } while (0);
 if ((label | 0) == 306) {
  _free($2263);
  $$0 = -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}
function _malloc($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i16$i = 0, $$0187$i = 0, $$0189$i = 0, $$0190$i = 0, $$0191$i = 0, $$0197 = 0, $$0199 = 0, $$02065$i$i = 0, $$0207$lcssa$i$i = 0, $$02074$i$i = 0, $$0211$i$i = 0, $$0212$i$i = 0, $$024372$i = 0, $$0286$i$i = 0, $$028711$i$i = 0, $$0288$lcssa$i$i = 0, $$028810$i$i = 0, $$0294$i$i = 0, $$0295$i$i = 0, $$0340$i = 0, $$034217$i = 0, $$0343$lcssa$i = 0, $$034316$i = 0, $$0345$i = 0, $$0351$i = 0, $$0357$i = 0, $$0358$i = 0, $$0360$i = 0, $$0361$i = 0, $$0367$i = 0, $$1194$i = 0, $$1194$i$be = 0, $$1194$i$ph = 0, $$1196$i = 0, $$1196$i$be = 0, $$1196$i$ph = 0, $$124471$i = 0, $$1290$i$i = 0, $$1290$i$i$be = 0, $$1290$i$i$ph = 0, $$1292$i$i = 0, $$1292$i$i$be = 0, $$1292$i$i$ph = 0, $$1341$i = 0, $$1346$i = 0, $$1362$i = 0, $$1369$i = 0, $$1369$i$be = 0, $$1369$i$ph = 0, $$1373$i = 0, $$1373$i$be = 0, $$1373$i$ph = 0, $$2234243136$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2353$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i203 = 0, $$3$i203218 = 0, $$3348$i = 0, $$3371$i = 0, $$4$lcssa$i = 0, $$420$i = 0, $$420$i$ph = 0, $$4236$i = 0, $$4349$lcssa$i = 0, $$434919$i = 0, $$434919$i$ph = 0, $$4355$i = 0, $$535618$i = 0, $$535618$i$ph = 0, $$723947$i = 0, $$748$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i18$iZ2D = 0, $$pre$phi$i209Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi17$i$iZ2D = 0, $$pre$phiZ2D = 0, $1 = 0, $1000 = 0, $1003 = 0, $1008 = 0, $101 = 0, $1014 = 0, $1017 = 0, $1018 = 0, $102 = 0, $1025 = 0, $1037 = 0, $1042 = 0, $1049 = 0, $1050 = 0, $1051 = 0, $1060 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1070 = 0, $108 = 0, $112 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $121 = 0, $123 = 0, $125 = 0, $127 = 0, $129 = 0, $134 = 0, $14 = 0, $140 = 0, $143 = 0, $146 = 0, $149 = 0, $150 = 0, $151 = 0, $153 = 0, $156 = 0, $158 = 0, $16 = 0, $161 = 0, $163 = 0, $166 = 0, $169 = 0, $17 = 0, $170 = 0, $172 = 0, $173 = 0, $175 = 0, $176 = 0, $178 = 0, $179 = 0, $18 = 0, $184 = 0, $185 = 0, $19 = 0, $193 = 0, $198 = 0, $20 = 0, $202 = 0, $208 = 0, $215 = 0, $219 = 0, $228 = 0, $229 = 0, $231 = 0, $232 = 0, $236 = 0, $237 = 0, $245 = 0, $246 = 0, $247 = 0, $249 = 0, $250 = 0, $255 = 0, $256 = 0, $259 = 0, $261 = 0, $264 = 0, $269 = 0, $27 = 0, $276 = 0, $286 = 0, $290 = 0, $299 = 0, $30 = 0, $302 = 0, $306 = 0, $308 = 0, $309 = 0, $311 = 0, $313 = 0, $315 = 0, $317 = 0, $319 = 0, $321 = 0, $323 = 0, $333 = 0, $334 = 0, $336 = 0, $34 = 0, $341 = 0, $346 = 0, $348 = 0, $351 = 0, $353 = 0, $356 = 0, $358 = 0, $361 = 0, $364 = 0, $365 = 0, $367 = 0, $368 = 0, $37 = 0, $370 = 0, $371 = 0, $373 = 0, $374 = 0, $379 = 0, $380 = 0, $385 = 0, $388 = 0, $393 = 0, $397 = 0, $403 = 0, $41 = 0, $410 = 0, $414 = 0, $422 = 0, $425 = 0, $426 = 0, $427 = 0, $431 = 0, $432 = 0, $438 = 0, $44 = 0, $443 = 0, $444 = 0, $447 = 0, $449 = 0, $452 = 0, $457 = 0, $463 = 0, $465 = 0, $467 = 0, $469 = 0, $47 = 0, $475 = 0, $487 = 0, $49 = 0, $492 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $510 = 0, $512 = 0, $513 = 0, $515 = 0, $52 = 0, $524 = 0, $528 = 0, $530 = 0, $531 = 0, $532 = 0, $54 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $550 = 0, $552 = 0, $553 = 0, $559 = 0, $56 = 0, $561 = 0, $568 = 0, $570 = 0, $572 = 0, $573 = 0, $574 = 0, $58 = 0, $582 = 0, $583 = 0, $586 = 0, $590 = 0, $593 = 0, $596 = 0, $6 = 0, $60 = 0, $602 = 0, $606 = 0, $610 = 0, $619 = 0, $62 = 0, $620 = 0, $626 = 0, $628 = 0, $632 = 0, $635 = 0, $637 = 0, $64 = 0, $641 = 0, $643 = 0, $648 = 0, $649 = 0, $650 = 0, $656 = 0, $658 = 0, $662 = 0, $664 = 0, $67 = 0, $673 = 0, $675 = 0, $680 = 0, $681 = 0, $682 = 0, $688 = 0, $69 = 0, $690 = 0, $694 = 0, $7 = 0, $70 = 0, $700 = 0, $704 = 0, $71 = 0, $710 = 0, $712 = 0, $718 = 0, $72 = 0, $722 = 0, $723 = 0, $728 = 0, $73 = 0, $734 = 0, $739 = 0, $742 = 0, $743 = 0, $746 = 0, $748 = 0, $750 = 0, $753 = 0, $764 = 0, $769 = 0, $77 = 0, $771 = 0, $774 = 0, $776 = 0, $779 = 0, $782 = 0, $783 = 0, $784 = 0, $786 = 0, $788 = 0, $789 = 0, $791 = 0, $792 = 0, $797 = 0, $798 = 0, $8 = 0, $80 = 0, $807 = 0, $812 = 0, $815 = 0, $816 = 0, $822 = 0, $83 = 0, $830 = 0, $836 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $845 = 0, $846 = 0, $852 = 0, $857 = 0, $858 = 0, $861 = 0, $863 = 0, $866 = 0, $87 = 0, $871 = 0, $877 = 0, $879 = 0, $881 = 0, $882 = 0, $889 = 0, $9 = 0, $901 = 0, $906 = 0, $913 = 0, $914 = 0, $915 = 0, $92 = 0, $923 = 0, $927 = 0, $93 = 0, $931 = 0, $933 = 0, $939 = 0, $940 = 0, $942 = 0, $943 = 0, $945 = 0, $947 = 0, $95 = 0, $952 = 0, $953 = 0, $954 = 0, $96 = 0, $960 = 0, $962 = 0, $968 = 0, $973 = 0, $976 = 0, $977 = 0, $978 = 0, $98 = 0, $982 = 0, $983 = 0, $989 = 0, $994 = 0, $995 = 0, $998 = 0, $spec$select$i205 = 0, $spec$select3$i = 0, $spec$select49$i = 0, label = 0, sp = 0, $962$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 do if ($0 >>> 0 < 245) {
  $6 = $0 >>> 0 < 11 ? 16 : $0 + 11 & -8;
  $7 = $6 >>> 3;
  $8 = HEAP32[16735] | 0;
  $9 = $8 >>> $7;
  if ($9 & 3 | 0) {
   $14 = ($9 & 1 ^ 1) + $7 | 0;
   $16 = 66980 + ($14 << 1 << 2) | 0;
   $17 = $16 + 8 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   $19 = $18 + 8 | 0;
   $20 = HEAP32[$19 >> 2] | 0;
   do if (($20 | 0) != ($16 | 0)) {
    if ((HEAP32[16739] | 0) >>> 0 > $20 >>> 0) _abort();
    $27 = $20 + 12 | 0;
    if ((HEAP32[$27 >> 2] | 0) == ($18 | 0)) {
     HEAP32[$27 >> 2] = $16;
     HEAP32[$17 >> 2] = $20;
     break;
    } else _abort();
   } else HEAP32[16735] = $8 & ~(1 << $14); while (0);
   $30 = $14 << 3;
   HEAP32[$18 + 4 >> 2] = $30 | 3;
   $34 = $18 + $30 + 4 | 0;
   HEAP32[$34 >> 2] = HEAP32[$34 >> 2] | 1;
   $$0 = $19;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $37 = HEAP32[16737] | 0;
  if ($6 >>> 0 > $37 >>> 0) {
   if ($9 | 0) {
    $41 = 2 << $7;
    $44 = $9 << $7 & ($41 | 0 - $41);
    $47 = ($44 & 0 - $44) + -1 | 0;
    $49 = $47 >>> 12 & 16;
    $50 = $47 >>> $49;
    $52 = $50 >>> 5 & 8;
    $54 = $50 >>> $52;
    $56 = $54 >>> 2 & 4;
    $58 = $54 >>> $56;
    $60 = $58 >>> 1 & 2;
    $62 = $58 >>> $60;
    $64 = $62 >>> 1 & 1;
    $67 = ($52 | $49 | $56 | $60 | $64) + ($62 >>> $64) | 0;
    $69 = 66980 + ($67 << 1 << 2) | 0;
    $70 = $69 + 8 | 0;
    $71 = HEAP32[$70 >> 2] | 0;
    $72 = $71 + 8 | 0;
    $73 = HEAP32[$72 >> 2] | 0;
    do if (($73 | 0) != ($69 | 0)) {
     if ((HEAP32[16739] | 0) >>> 0 > $73 >>> 0) _abort();
     $80 = $73 + 12 | 0;
     if ((HEAP32[$80 >> 2] | 0) == ($71 | 0)) {
      HEAP32[$80 >> 2] = $69;
      HEAP32[$70 >> 2] = $73;
      $98 = $8;
      break;
     } else _abort();
    } else {
     $77 = $8 & ~(1 << $67);
     HEAP32[16735] = $77;
     $98 = $77;
    } while (0);
    $83 = $67 << 3;
    $84 = $83 - $6 | 0;
    HEAP32[$71 + 4 >> 2] = $6 | 3;
    $87 = $71 + $6 | 0;
    HEAP32[$87 + 4 >> 2] = $84 | 1;
    HEAP32[$71 + $83 >> 2] = $84;
    if ($37 | 0) {
     $92 = HEAP32[16740] | 0;
     $93 = $37 >>> 3;
     $95 = 66980 + ($93 << 1 << 2) | 0;
     $96 = 1 << $93;
     if ($98 & $96) {
      $101 = $95 + 8 | 0;
      $102 = HEAP32[$101 >> 2] | 0;
      if ((HEAP32[16739] | 0) >>> 0 > $102 >>> 0) _abort(); else {
       $$0199 = $102;
       $$pre$phiZ2D = $101;
      }
     } else {
      HEAP32[16735] = $98 | $96;
      $$0199 = $95;
      $$pre$phiZ2D = $95 + 8 | 0;
     }
     HEAP32[$$pre$phiZ2D >> 2] = $92;
     HEAP32[$$0199 + 12 >> 2] = $92;
     HEAP32[$92 + 8 >> 2] = $$0199;
     HEAP32[$92 + 12 >> 2] = $95;
    }
    HEAP32[16737] = $84;
    HEAP32[16740] = $87;
    $$0 = $72;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $108 = HEAP32[16736] | 0;
   if ($108) {
    $112 = ($108 & 0 - $108) + -1 | 0;
    $114 = $112 >>> 12 & 16;
    $115 = $112 >>> $114;
    $117 = $115 >>> 5 & 8;
    $119 = $115 >>> $117;
    $121 = $119 >>> 2 & 4;
    $123 = $119 >>> $121;
    $125 = $123 >>> 1 & 2;
    $127 = $123 >>> $125;
    $129 = $127 >>> 1 & 1;
    $134 = HEAP32[67244 + (($117 | $114 | $121 | $125 | $129) + ($127 >>> $129) << 2) >> 2] | 0;
    $$0189$i = $134;
    $$0190$i = $134;
    $$0191$i = (HEAP32[$134 + 4 >> 2] & -8) - $6 | 0;
    while (1) {
     $140 = HEAP32[$$0189$i + 16 >> 2] | 0;
     if (!$140) {
      $143 = HEAP32[$$0189$i + 20 >> 2] | 0;
      if (!$143) break; else $146 = $143;
     } else $146 = $140;
     $149 = (HEAP32[$146 + 4 >> 2] & -8) - $6 | 0;
     $150 = $149 >>> 0 < $$0191$i >>> 0;
     $$0189$i = $146;
     $$0190$i = $150 ? $146 : $$0190$i;
     $$0191$i = $150 ? $149 : $$0191$i;
    }
    $151 = HEAP32[16739] | 0;
    if ($151 >>> 0 > $$0190$i >>> 0) _abort();
    $153 = $$0190$i + $6 | 0;
    if ($153 >>> 0 <= $$0190$i >>> 0) _abort();
    $156 = HEAP32[$$0190$i + 24 >> 2] | 0;
    $158 = HEAP32[$$0190$i + 12 >> 2] | 0;
    do if (($158 | 0) == ($$0190$i | 0)) {
     $169 = $$0190$i + 20 | 0;
     $170 = HEAP32[$169 >> 2] | 0;
     if (!$170) {
      $172 = $$0190$i + 16 | 0;
      $173 = HEAP32[$172 >> 2] | 0;
      if (!$173) {
       $$3$i = 0;
       break;
      } else {
       $$1194$i$ph = $173;
       $$1196$i$ph = $172;
      }
     } else {
      $$1194$i$ph = $170;
      $$1196$i$ph = $169;
     }
     $$1194$i = $$1194$i$ph;
     $$1196$i = $$1196$i$ph;
     while (1) {
      $175 = $$1194$i + 20 | 0;
      $176 = HEAP32[$175 >> 2] | 0;
      if (!$176) {
       $178 = $$1194$i + 16 | 0;
       $179 = HEAP32[$178 >> 2] | 0;
       if (!$179) break; else {
        $$1194$i$be = $179;
        $$1196$i$be = $178;
       }
      } else {
       $$1194$i$be = $176;
       $$1196$i$be = $175;
      }
      $$1194$i = $$1194$i$be;
      $$1196$i = $$1196$i$be;
     }
     if ($151 >>> 0 > $$1196$i >>> 0) _abort(); else {
      HEAP32[$$1196$i >> 2] = 0;
      $$3$i = $$1194$i;
      break;
     }
    } else {
     $161 = HEAP32[$$0190$i + 8 >> 2] | 0;
     if ($151 >>> 0 > $161 >>> 0) _abort();
     $163 = $161 + 12 | 0;
     if ((HEAP32[$163 >> 2] | 0) != ($$0190$i | 0)) _abort();
     $166 = $158 + 8 | 0;
     if ((HEAP32[$166 >> 2] | 0) == ($$0190$i | 0)) {
      HEAP32[$163 >> 2] = $158;
      HEAP32[$166 >> 2] = $161;
      $$3$i = $158;
      break;
     } else _abort();
    } while (0);
    L78 : do if ($156 | 0) {
     $184 = HEAP32[$$0190$i + 28 >> 2] | 0;
     $185 = 67244 + ($184 << 2) | 0;
     do if (($$0190$i | 0) == (HEAP32[$185 >> 2] | 0)) {
      HEAP32[$185 >> 2] = $$3$i;
      if (!$$3$i) {
       HEAP32[16736] = $108 & ~(1 << $184);
       break L78;
      }
     } else if ((HEAP32[16739] | 0) >>> 0 <= $156 >>> 0) {
      $193 = $156 + 16 | 0;
      HEAP32[((HEAP32[$193 >> 2] | 0) == ($$0190$i | 0) ? $193 : $156 + 20 | 0) >> 2] = $$3$i;
      if (!$$3$i) break L78; else break;
     } else _abort(); while (0);
     $198 = HEAP32[16739] | 0;
     if ($198 >>> 0 > $$3$i >>> 0) _abort();
     HEAP32[$$3$i + 24 >> 2] = $156;
     $202 = HEAP32[$$0190$i + 16 >> 2] | 0;
     do if ($202 | 0) if ($198 >>> 0 > $202 >>> 0) _abort(); else {
      HEAP32[$$3$i + 16 >> 2] = $202;
      HEAP32[$202 + 24 >> 2] = $$3$i;
      break;
     } while (0);
     $208 = HEAP32[$$0190$i + 20 >> 2] | 0;
     if ($208 | 0) if ((HEAP32[16739] | 0) >>> 0 > $208 >>> 0) _abort(); else {
      HEAP32[$$3$i + 20 >> 2] = $208;
      HEAP32[$208 + 24 >> 2] = $$3$i;
      break;
     }
    } while (0);
    if ($$0191$i >>> 0 < 16) {
     $215 = $$0191$i + $6 | 0;
     HEAP32[$$0190$i + 4 >> 2] = $215 | 3;
     $219 = $$0190$i + $215 + 4 | 0;
     HEAP32[$219 >> 2] = HEAP32[$219 >> 2] | 1;
    } else {
     HEAP32[$$0190$i + 4 >> 2] = $6 | 3;
     HEAP32[$153 + 4 >> 2] = $$0191$i | 1;
     HEAP32[$153 + $$0191$i >> 2] = $$0191$i;
     if ($37 | 0) {
      $228 = HEAP32[16740] | 0;
      $229 = $37 >>> 3;
      $231 = 66980 + ($229 << 1 << 2) | 0;
      $232 = 1 << $229;
      if ($232 & $8) {
       $236 = $231 + 8 | 0;
       $237 = HEAP32[$236 >> 2] | 0;
       if ((HEAP32[16739] | 0) >>> 0 > $237 >>> 0) _abort(); else {
        $$0187$i = $237;
        $$pre$phi$iZ2D = $236;
       }
      } else {
       HEAP32[16735] = $232 | $8;
       $$0187$i = $231;
       $$pre$phi$iZ2D = $231 + 8 | 0;
      }
      HEAP32[$$pre$phi$iZ2D >> 2] = $228;
      HEAP32[$$0187$i + 12 >> 2] = $228;
      HEAP32[$228 + 8 >> 2] = $$0187$i;
      HEAP32[$228 + 12 >> 2] = $231;
     }
     HEAP32[16737] = $$0191$i;
     HEAP32[16740] = $153;
    }
    $$0 = $$0190$i + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   } else $$0197 = $6;
  } else $$0197 = $6;
 } else if ($0 >>> 0 <= 4294967231) {
  $245 = $0 + 11 | 0;
  $246 = $245 & -8;
  $247 = HEAP32[16736] | 0;
  if ($247) {
   $249 = 0 - $246 | 0;
   $250 = $245 >>> 8;
   if ($250) if ($246 >>> 0 > 16777215) $$0357$i = 31; else {
    $255 = ($250 + 1048320 | 0) >>> 16 & 8;
    $256 = $250 << $255;
    $259 = ($256 + 520192 | 0) >>> 16 & 4;
    $261 = $256 << $259;
    $264 = ($261 + 245760 | 0) >>> 16 & 2;
    $269 = 14 - ($259 | $255 | $264) + ($261 << $264 >>> 15) | 0;
    $$0357$i = $246 >>> ($269 + 7 | 0) & 1 | $269 << 1;
   } else $$0357$i = 0;
   $276 = HEAP32[67244 + ($$0357$i << 2) >> 2] | 0;
   L122 : do if (!$276) {
    $$2353$i = 0;
    $$3$i203 = 0;
    $$3348$i = $249;
    label = 85;
   } else {
    $$0340$i = 0;
    $$0345$i = $249;
    $$0351$i = $276;
    $$0358$i = $246 << (($$0357$i | 0) == 31 ? 0 : 25 - ($$0357$i >>> 1) | 0);
    $$0361$i = 0;
    while (1) {
     $286 = (HEAP32[$$0351$i + 4 >> 2] & -8) - $246 | 0;
     if ($286 >>> 0 < $$0345$i >>> 0) if (!$286) {
      $$420$i$ph = $$0351$i;
      $$434919$i$ph = 0;
      $$535618$i$ph = $$0351$i;
      label = 89;
      break L122;
     } else {
      $$1341$i = $$0351$i;
      $$1346$i = $286;
     } else {
      $$1341$i = $$0340$i;
      $$1346$i = $$0345$i;
     }
     $290 = HEAP32[$$0351$i + 20 >> 2] | 0;
     $$0351$i = HEAP32[$$0351$i + 16 + ($$0358$i >>> 31 << 2) >> 2] | 0;
     $$1362$i = ($290 | 0) == 0 | ($290 | 0) == ($$0351$i | 0) ? $$0361$i : $290;
     if (!$$0351$i) {
      $$2353$i = $$1362$i;
      $$3$i203 = $$1341$i;
      $$3348$i = $$1346$i;
      label = 85;
      break;
     } else {
      $$0340$i = $$1341$i;
      $$0345$i = $$1346$i;
      $$0358$i = $$0358$i << 1;
      $$0361$i = $$1362$i;
     }
    }
   } while (0);
   if ((label | 0) == 85) {
    if (($$2353$i | 0) == 0 & ($$3$i203 | 0) == 0) {
     $299 = 2 << $$0357$i;
     $302 = ($299 | 0 - $299) & $247;
     if (!$302) {
      $$0197 = $246;
      break;
     }
     $306 = ($302 & 0 - $302) + -1 | 0;
     $308 = $306 >>> 12 & 16;
     $309 = $306 >>> $308;
     $311 = $309 >>> 5 & 8;
     $313 = $309 >>> $311;
     $315 = $313 >>> 2 & 4;
     $317 = $313 >>> $315;
     $319 = $317 >>> 1 & 2;
     $321 = $317 >>> $319;
     $323 = $321 >>> 1 & 1;
     $$3$i203218 = 0;
     $$4355$i = HEAP32[67244 + (($311 | $308 | $315 | $319 | $323) + ($321 >>> $323) << 2) >> 2] | 0;
    } else {
     $$3$i203218 = $$3$i203;
     $$4355$i = $$2353$i;
    }
    if (!$$4355$i) {
     $$4$lcssa$i = $$3$i203218;
     $$4349$lcssa$i = $$3348$i;
    } else {
     $$420$i$ph = $$3$i203218;
     $$434919$i$ph = $$3348$i;
     $$535618$i$ph = $$4355$i;
     label = 89;
    }
   }
   if ((label | 0) == 89) {
    $$420$i = $$420$i$ph;
    $$434919$i = $$434919$i$ph;
    $$535618$i = $$535618$i$ph;
    while (1) {
     $333 = (HEAP32[$$535618$i + 4 >> 2] & -8) - $246 | 0;
     $334 = $333 >>> 0 < $$434919$i >>> 0;
     $spec$select$i205 = $334 ? $333 : $$434919$i;
     $spec$select3$i = $334 ? $$535618$i : $$420$i;
     $336 = HEAP32[$$535618$i + 16 >> 2] | 0;
     if (!$336) $341 = HEAP32[$$535618$i + 20 >> 2] | 0; else $341 = $336;
     if (!$341) {
      $$4$lcssa$i = $spec$select3$i;
      $$4349$lcssa$i = $spec$select$i205;
      break;
     } else {
      $$420$i = $spec$select3$i;
      $$434919$i = $spec$select$i205;
      $$535618$i = $341;
     }
    }
   }
   if (($$4$lcssa$i | 0) != 0 ? $$4349$lcssa$i >>> 0 < ((HEAP32[16737] | 0) - $246 | 0) >>> 0 : 0) {
    $346 = HEAP32[16739] | 0;
    if ($346 >>> 0 > $$4$lcssa$i >>> 0) _abort();
    $348 = $$4$lcssa$i + $246 | 0;
    if ($348 >>> 0 <= $$4$lcssa$i >>> 0) _abort();
    $351 = HEAP32[$$4$lcssa$i + 24 >> 2] | 0;
    $353 = HEAP32[$$4$lcssa$i + 12 >> 2] | 0;
    do if (($353 | 0) == ($$4$lcssa$i | 0)) {
     $364 = $$4$lcssa$i + 20 | 0;
     $365 = HEAP32[$364 >> 2] | 0;
     if (!$365) {
      $367 = $$4$lcssa$i + 16 | 0;
      $368 = HEAP32[$367 >> 2] | 0;
      if (!$368) {
       $$3371$i = 0;
       break;
      } else {
       $$1369$i$ph = $368;
       $$1373$i$ph = $367;
      }
     } else {
      $$1369$i$ph = $365;
      $$1373$i$ph = $364;
     }
     $$1369$i = $$1369$i$ph;
     $$1373$i = $$1373$i$ph;
     while (1) {
      $370 = $$1369$i + 20 | 0;
      $371 = HEAP32[$370 >> 2] | 0;
      if (!$371) {
       $373 = $$1369$i + 16 | 0;
       $374 = HEAP32[$373 >> 2] | 0;
       if (!$374) break; else {
        $$1369$i$be = $374;
        $$1373$i$be = $373;
       }
      } else {
       $$1369$i$be = $371;
       $$1373$i$be = $370;
      }
      $$1369$i = $$1369$i$be;
      $$1373$i = $$1373$i$be;
     }
     if ($346 >>> 0 > $$1373$i >>> 0) _abort(); else {
      HEAP32[$$1373$i >> 2] = 0;
      $$3371$i = $$1369$i;
      break;
     }
    } else {
     $356 = HEAP32[$$4$lcssa$i + 8 >> 2] | 0;
     if ($346 >>> 0 > $356 >>> 0) _abort();
     $358 = $356 + 12 | 0;
     if ((HEAP32[$358 >> 2] | 0) != ($$4$lcssa$i | 0)) _abort();
     $361 = $353 + 8 | 0;
     if ((HEAP32[$361 >> 2] | 0) == ($$4$lcssa$i | 0)) {
      HEAP32[$358 >> 2] = $353;
      HEAP32[$361 >> 2] = $356;
      $$3371$i = $353;
      break;
     } else _abort();
    } while (0);
    L176 : do if ($351) {
     $379 = HEAP32[$$4$lcssa$i + 28 >> 2] | 0;
     $380 = 67244 + ($379 << 2) | 0;
     do if (($$4$lcssa$i | 0) == (HEAP32[$380 >> 2] | 0)) {
      HEAP32[$380 >> 2] = $$3371$i;
      if (!$$3371$i) {
       $385 = $247 & ~(1 << $379);
       HEAP32[16736] = $385;
       $469 = $385;
       break L176;
      }
     } else if ((HEAP32[16739] | 0) >>> 0 <= $351 >>> 0) {
      $388 = $351 + 16 | 0;
      HEAP32[((HEAP32[$388 >> 2] | 0) == ($$4$lcssa$i | 0) ? $388 : $351 + 20 | 0) >> 2] = $$3371$i;
      if (!$$3371$i) {
       $469 = $247;
       break L176;
      } else break;
     } else _abort(); while (0);
     $393 = HEAP32[16739] | 0;
     if ($393 >>> 0 > $$3371$i >>> 0) _abort();
     HEAP32[$$3371$i + 24 >> 2] = $351;
     $397 = HEAP32[$$4$lcssa$i + 16 >> 2] | 0;
     do if ($397 | 0) if ($393 >>> 0 > $397 >>> 0) _abort(); else {
      HEAP32[$$3371$i + 16 >> 2] = $397;
      HEAP32[$397 + 24 >> 2] = $$3371$i;
      break;
     } while (0);
     $403 = HEAP32[$$4$lcssa$i + 20 >> 2] | 0;
     if ($403) if ((HEAP32[16739] | 0) >>> 0 > $403 >>> 0) _abort(); else {
      HEAP32[$$3371$i + 20 >> 2] = $403;
      HEAP32[$403 + 24 >> 2] = $$3371$i;
      $469 = $247;
      break;
     } else $469 = $247;
    } else $469 = $247; while (0);
    L200 : do if ($$4349$lcssa$i >>> 0 >= 16) {
     HEAP32[$$4$lcssa$i + 4 >> 2] = $246 | 3;
     HEAP32[$348 + 4 >> 2] = $$4349$lcssa$i | 1;
     HEAP32[$348 + $$4349$lcssa$i >> 2] = $$4349$lcssa$i;
     $422 = $$4349$lcssa$i >>> 3;
     if ($$4349$lcssa$i >>> 0 < 256) {
      $425 = 66980 + ($422 << 1 << 2) | 0;
      $426 = HEAP32[16735] | 0;
      $427 = 1 << $422;
      if ($426 & $427) {
       $431 = $425 + 8 | 0;
       $432 = HEAP32[$431 >> 2] | 0;
       if ((HEAP32[16739] | 0) >>> 0 > $432 >>> 0) _abort(); else {
        $$0367$i = $432;
        $$pre$phi$i209Z2D = $431;
       }
      } else {
       HEAP32[16735] = $426 | $427;
       $$0367$i = $425;
       $$pre$phi$i209Z2D = $425 + 8 | 0;
      }
      HEAP32[$$pre$phi$i209Z2D >> 2] = $348;
      HEAP32[$$0367$i + 12 >> 2] = $348;
      HEAP32[$348 + 8 >> 2] = $$0367$i;
      HEAP32[$348 + 12 >> 2] = $425;
      break;
     }
     $438 = $$4349$lcssa$i >>> 8;
     if ($438) if ($$4349$lcssa$i >>> 0 > 16777215) $$0360$i = 31; else {
      $443 = ($438 + 1048320 | 0) >>> 16 & 8;
      $444 = $438 << $443;
      $447 = ($444 + 520192 | 0) >>> 16 & 4;
      $449 = $444 << $447;
      $452 = ($449 + 245760 | 0) >>> 16 & 2;
      $457 = 14 - ($447 | $443 | $452) + ($449 << $452 >>> 15) | 0;
      $$0360$i = $$4349$lcssa$i >>> ($457 + 7 | 0) & 1 | $457 << 1;
     } else $$0360$i = 0;
     $463 = 67244 + ($$0360$i << 2) | 0;
     HEAP32[$348 + 28 >> 2] = $$0360$i;
     $465 = $348 + 16 | 0;
     HEAP32[$465 + 4 >> 2] = 0;
     HEAP32[$465 >> 2] = 0;
     $467 = 1 << $$0360$i;
     if (!($469 & $467)) {
      HEAP32[16736] = $469 | $467;
      HEAP32[$463 >> 2] = $348;
      HEAP32[$348 + 24 >> 2] = $463;
      HEAP32[$348 + 12 >> 2] = $348;
      HEAP32[$348 + 8 >> 2] = $348;
      break;
     }
     $475 = HEAP32[$463 >> 2] | 0;
     L218 : do if ((HEAP32[$475 + 4 >> 2] & -8 | 0) != ($$4349$lcssa$i | 0)) {
      $$034217$i = $$4349$lcssa$i << (($$0360$i | 0) == 31 ? 0 : 25 - ($$0360$i >>> 1) | 0);
      $$034316$i = $475;
      while (1) {
       $492 = $$034316$i + 16 + ($$034217$i >>> 31 << 2) | 0;
       $487 = HEAP32[$492 >> 2] | 0;
       if (!$487) break;
       if ((HEAP32[$487 + 4 >> 2] & -8 | 0) == ($$4349$lcssa$i | 0)) {
        $$0343$lcssa$i = $487;
        break L218;
       } else {
        $$034217$i = $$034217$i << 1;
        $$034316$i = $487;
       }
      }
      if ((HEAP32[16739] | 0) >>> 0 > $492 >>> 0) _abort(); else {
       HEAP32[$492 >> 2] = $348;
       HEAP32[$348 + 24 >> 2] = $$034316$i;
       HEAP32[$348 + 12 >> 2] = $348;
       HEAP32[$348 + 8 >> 2] = $348;
       break L200;
      }
     } else $$0343$lcssa$i = $475; while (0);
     $499 = $$0343$lcssa$i + 8 | 0;
     $500 = HEAP32[$499 >> 2] | 0;
     $501 = HEAP32[16739] | 0;
     if ($501 >>> 0 <= $500 >>> 0 & $501 >>> 0 <= $$0343$lcssa$i >>> 0) {
      HEAP32[$500 + 12 >> 2] = $348;
      HEAP32[$499 >> 2] = $348;
      HEAP32[$348 + 8 >> 2] = $500;
      HEAP32[$348 + 12 >> 2] = $$0343$lcssa$i;
      HEAP32[$348 + 24 >> 2] = 0;
      break;
     } else _abort();
    } else {
     $410 = $$4349$lcssa$i + $246 | 0;
     HEAP32[$$4$lcssa$i + 4 >> 2] = $410 | 3;
     $414 = $$4$lcssa$i + $410 + 4 | 0;
     HEAP32[$414 >> 2] = HEAP32[$414 >> 2] | 1;
    } while (0);
    $$0 = $$4$lcssa$i + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   } else $$0197 = $246;
  } else $$0197 = $246;
 } else $$0197 = -1; while (0);
 $510 = HEAP32[16737] | 0;
 if ($510 >>> 0 >= $$0197 >>> 0) {
  $512 = $510 - $$0197 | 0;
  $513 = HEAP32[16740] | 0;
  if ($512 >>> 0 > 15) {
   $515 = $513 + $$0197 | 0;
   HEAP32[16740] = $515;
   HEAP32[16737] = $512;
   HEAP32[$515 + 4 >> 2] = $512 | 1;
   HEAP32[$513 + $510 >> 2] = $512;
   HEAP32[$513 + 4 >> 2] = $$0197 | 3;
  } else {
   HEAP32[16737] = 0;
   HEAP32[16740] = 0;
   HEAP32[$513 + 4 >> 2] = $510 | 3;
   $524 = $513 + $510 + 4 | 0;
   HEAP32[$524 >> 2] = HEAP32[$524 >> 2] | 1;
  }
  $$0 = $513 + 8 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $528 = HEAP32[16738] | 0;
 if ($528 >>> 0 > $$0197 >>> 0) {
  $530 = $528 - $$0197 | 0;
  HEAP32[16738] = $530;
  $531 = HEAP32[16741] | 0;
  $532 = $531 + $$0197 | 0;
  HEAP32[16741] = $532;
  HEAP32[$532 + 4 >> 2] = $530 | 1;
  HEAP32[$531 + 4 >> 2] = $$0197 | 3;
  $$0 = $531 + 8 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(HEAP32[16853] | 0)) {
  HEAP32[16855] = 4096;
  HEAP32[16854] = 4096;
  HEAP32[16856] = -1;
  HEAP32[16857] = -1;
  HEAP32[16858] = 0;
  HEAP32[16846] = 0;
  HEAP32[16853] = $1 & -16 ^ 1431655768;
  $546 = 4096;
 } else $546 = HEAP32[16855] | 0;
 $543 = $$0197 + 48 | 0;
 $544 = $$0197 + 47 | 0;
 $545 = $546 + $544 | 0;
 $547 = 0 - $546 | 0;
 $548 = $545 & $547;
 if ($548 >>> 0 <= $$0197 >>> 0) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $550 = HEAP32[16845] | 0;
 if ($550 | 0 ? ($552 = HEAP32[16843] | 0, $553 = $552 + $548 | 0, $553 >>> 0 <= $552 >>> 0 | $553 >>> 0 > $550 >>> 0) : 0) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 L257 : do if (!(HEAP32[16846] & 4)) {
  $559 = HEAP32[16741] | 0;
  L259 : do if ($559) {
   $$0$i$i = 67388;
   while (1) {
    $561 = HEAP32[$$0$i$i >> 2] | 0;
    if ($561 >>> 0 <= $559 >>> 0 ? ($561 + (HEAP32[$$0$i$i + 4 >> 2] | 0) | 0) >>> 0 > $559 >>> 0 : 0) break;
    $568 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if (!$568) {
     label = 173;
     break L259;
    } else $$0$i$i = $568;
   }
   $593 = $545 - $528 & $547;
   if ($593 >>> 0 < 2147483647) {
    $596 = _sbrk($593) | 0;
    if (($596 | 0) == ((HEAP32[$$0$i$i >> 2] | 0) + (HEAP32[$$0$i$i + 4 >> 2] | 0) | 0)) if (($596 | 0) == (-1 | 0)) $$2234243136$i = $593; else {
     $$723947$i = $593;
     $$748$i = $596;
     label = 190;
     break L257;
    } else {
     $$2247$ph$i = $596;
     $$2253$ph$i = $593;
     label = 181;
    }
   } else $$2234243136$i = 0;
  } else label = 173; while (0);
  do if ((label | 0) == 173) {
   $570 = _sbrk(0) | 0;
   if (($570 | 0) != (-1 | 0) ? ($572 = $570, $573 = HEAP32[16854] | 0, $574 = $573 + -1 | 0, $spec$select49$i = (($574 & $572 | 0) == 0 ? 0 : ($574 + $572 & 0 - $573) - $572 | 0) + $548 | 0, $582 = HEAP32[16843] | 0, $583 = $spec$select49$i + $582 | 0, $spec$select49$i >>> 0 > $$0197 >>> 0 & $spec$select49$i >>> 0 < 2147483647) : 0) {
    $586 = HEAP32[16845] | 0;
    if ($586 | 0 ? $583 >>> 0 <= $582 >>> 0 | $583 >>> 0 > $586 >>> 0 : 0) {
     $$2234243136$i = 0;
     break;
    }
    $590 = _sbrk($spec$select49$i) | 0;
    if (($590 | 0) == ($570 | 0)) {
     $$723947$i = $spec$select49$i;
     $$748$i = $570;
     label = 190;
     break L257;
    } else {
     $$2247$ph$i = $590;
     $$2253$ph$i = $spec$select49$i;
     label = 181;
    }
   } else $$2234243136$i = 0;
  } while (0);
  do if ((label | 0) == 181) {
   $602 = 0 - $$2253$ph$i | 0;
   if (!($543 >>> 0 > $$2253$ph$i >>> 0 & ($$2253$ph$i >>> 0 < 2147483647 & ($$2247$ph$i | 0) != (-1 | 0)))) if (($$2247$ph$i | 0) == (-1 | 0)) {
    $$2234243136$i = 0;
    break;
   } else {
    $$723947$i = $$2253$ph$i;
    $$748$i = $$2247$ph$i;
    label = 190;
    break L257;
   }
   $606 = HEAP32[16855] | 0;
   $610 = $544 - $$2253$ph$i + $606 & 0 - $606;
   if ($610 >>> 0 >= 2147483647) {
    $$723947$i = $$2253$ph$i;
    $$748$i = $$2247$ph$i;
    label = 190;
    break L257;
   }
   if ((_sbrk($610) | 0) == (-1 | 0)) {
    _sbrk($602) | 0;
    $$2234243136$i = 0;
    break;
   } else {
    $$723947$i = $610 + $$2253$ph$i | 0;
    $$748$i = $$2247$ph$i;
    label = 190;
    break L257;
   }
  } while (0);
  HEAP32[16846] = HEAP32[16846] | 4;
  $$4236$i = $$2234243136$i;
  label = 188;
 } else {
  $$4236$i = 0;
  label = 188;
 } while (0);
 if (((label | 0) == 188 ? $548 >>> 0 < 2147483647 : 0) ? ($619 = _sbrk($548) | 0, $620 = _sbrk(0) | 0, $626 = $620 - $619 | 0, $628 = $626 >>> 0 > ($$0197 + 40 | 0) >>> 0, !(($619 | 0) == (-1 | 0) | $628 ^ 1 | $619 >>> 0 < $620 >>> 0 & (($619 | 0) != (-1 | 0) & ($620 | 0) != (-1 | 0)) ^ 1)) : 0) {
  $$723947$i = $628 ? $626 : $$4236$i;
  $$748$i = $619;
  label = 190;
 }
 if ((label | 0) == 190) {
  $632 = (HEAP32[16843] | 0) + $$723947$i | 0;
  HEAP32[16843] = $632;
  if ($632 >>> 0 > (HEAP32[16844] | 0) >>> 0) HEAP32[16844] = $632;
  $635 = HEAP32[16741] | 0;
  L294 : do if ($635) {
   $$024372$i = 67388;
   while (1) {
    $656 = HEAP32[$$024372$i >> 2] | 0;
    $658 = HEAP32[$$024372$i + 4 >> 2] | 0;
    if (($$748$i | 0) == ($656 + $658 | 0)) {
     label = 199;
     break;
    }
    $662 = HEAP32[$$024372$i + 8 >> 2] | 0;
    if (!$662) break; else $$024372$i = $662;
   }
   if (((label | 0) == 199 ? ($664 = $$024372$i + 4 | 0, (HEAP32[$$024372$i + 12 >> 2] & 8 | 0) == 0) : 0) ? $$748$i >>> 0 > $635 >>> 0 & $656 >>> 0 <= $635 >>> 0 : 0) {
    HEAP32[$664 >> 2] = $658 + $$723947$i;
    $673 = (HEAP32[16738] | 0) + $$723947$i | 0;
    $675 = $635 + 8 | 0;
    $680 = ($675 & 7 | 0) == 0 ? 0 : 0 - $675 & 7;
    $681 = $635 + $680 | 0;
    $682 = $673 - $680 | 0;
    HEAP32[16741] = $681;
    HEAP32[16738] = $682;
    HEAP32[$681 + 4 >> 2] = $682 | 1;
    HEAP32[$635 + $673 + 4 >> 2] = 40;
    HEAP32[16742] = HEAP32[16857];
    break;
   }
   $688 = HEAP32[16739] | 0;
   if ($$748$i >>> 0 < $688 >>> 0) {
    HEAP32[16739] = $$748$i;
    $753 = $$748$i;
   } else $753 = $688;
   $690 = $$748$i + $$723947$i | 0;
   $$124471$i = 67388;
   while (1) {
    if ((HEAP32[$$124471$i >> 2] | 0) == ($690 | 0)) {
     label = 207;
     break;
    }
    $694 = HEAP32[$$124471$i + 8 >> 2] | 0;
    if (!$694) break; else $$124471$i = $694;
   }
   if ((label | 0) == 207 ? (HEAP32[$$124471$i + 12 >> 2] & 8 | 0) == 0 : 0) {
    HEAP32[$$124471$i >> 2] = $$748$i;
    $700 = $$124471$i + 4 | 0;
    HEAP32[$700 >> 2] = (HEAP32[$700 >> 2] | 0) + $$723947$i;
    $704 = $$748$i + 8 | 0;
    $710 = $$748$i + (($704 & 7 | 0) == 0 ? 0 : 0 - $704 & 7) | 0;
    $712 = $690 + 8 | 0;
    $718 = $690 + (($712 & 7 | 0) == 0 ? 0 : 0 - $712 & 7) | 0;
    $722 = $710 + $$0197 | 0;
    $723 = $718 - $710 - $$0197 | 0;
    HEAP32[$710 + 4 >> 2] = $$0197 | 3;
    L317 : do if (($635 | 0) != ($718 | 0)) {
     if ((HEAP32[16740] | 0) == ($718 | 0)) {
      $734 = (HEAP32[16737] | 0) + $723 | 0;
      HEAP32[16737] = $734;
      HEAP32[16740] = $722;
      HEAP32[$722 + 4 >> 2] = $734 | 1;
      HEAP32[$722 + $734 >> 2] = $734;
      break;
     }
     $739 = HEAP32[$718 + 4 >> 2] | 0;
     if (($739 & 3 | 0) == 1) {
      $742 = $739 & -8;
      $743 = $739 >>> 3;
      L325 : do if ($739 >>> 0 >= 256) {
       $769 = HEAP32[$718 + 24 >> 2] | 0;
       $771 = HEAP32[$718 + 12 >> 2] | 0;
       do if (($771 | 0) == ($718 | 0)) {
        $782 = $718 + 16 | 0;
        $783 = $782 + 4 | 0;
        $784 = HEAP32[$783 >> 2] | 0;
        if (!$784) {
         $786 = HEAP32[$782 >> 2] | 0;
         if (!$786) {
          $$3$i$i = 0;
          break;
         } else {
          $$1290$i$i$ph = $786;
          $$1292$i$i$ph = $782;
         }
        } else {
         $$1290$i$i$ph = $784;
         $$1292$i$i$ph = $783;
        }
        $$1290$i$i = $$1290$i$i$ph;
        $$1292$i$i = $$1292$i$i$ph;
        while (1) {
         $788 = $$1290$i$i + 20 | 0;
         $789 = HEAP32[$788 >> 2] | 0;
         if (!$789) {
          $791 = $$1290$i$i + 16 | 0;
          $792 = HEAP32[$791 >> 2] | 0;
          if (!$792) break; else {
           $$1290$i$i$be = $792;
           $$1292$i$i$be = $791;
          }
         } else {
          $$1290$i$i$be = $789;
          $$1292$i$i$be = $788;
         }
         $$1290$i$i = $$1290$i$i$be;
         $$1292$i$i = $$1292$i$i$be;
        }
        if ($753 >>> 0 > $$1292$i$i >>> 0) _abort(); else {
         HEAP32[$$1292$i$i >> 2] = 0;
         $$3$i$i = $$1290$i$i;
         break;
        }
       } else {
        $774 = HEAP32[$718 + 8 >> 2] | 0;
        if ($753 >>> 0 > $774 >>> 0) _abort();
        $776 = $774 + 12 | 0;
        if ((HEAP32[$776 >> 2] | 0) != ($718 | 0)) _abort();
        $779 = $771 + 8 | 0;
        if ((HEAP32[$779 >> 2] | 0) == ($718 | 0)) {
         HEAP32[$776 >> 2] = $771;
         HEAP32[$779 >> 2] = $774;
         $$3$i$i = $771;
         break;
        } else _abort();
       } while (0);
       if (!$769) break;
       $797 = HEAP32[$718 + 28 >> 2] | 0;
       $798 = 67244 + ($797 << 2) | 0;
       do if ((HEAP32[$798 >> 2] | 0) != ($718 | 0)) if ((HEAP32[16739] | 0) >>> 0 <= $769 >>> 0) {
        $807 = $769 + 16 | 0;
        HEAP32[((HEAP32[$807 >> 2] | 0) == ($718 | 0) ? $807 : $769 + 20 | 0) >> 2] = $$3$i$i;
        if (!$$3$i$i) break L325; else break;
       } else _abort(); else {
        HEAP32[$798 >> 2] = $$3$i$i;
        if ($$3$i$i | 0) break;
        HEAP32[16736] = HEAP32[16736] & ~(1 << $797);
        break L325;
       } while (0);
       $812 = HEAP32[16739] | 0;
       if ($812 >>> 0 > $$3$i$i >>> 0) _abort();
       HEAP32[$$3$i$i + 24 >> 2] = $769;
       $815 = $718 + 16 | 0;
       $816 = HEAP32[$815 >> 2] | 0;
       do if ($816 | 0) if ($812 >>> 0 > $816 >>> 0) _abort(); else {
        HEAP32[$$3$i$i + 16 >> 2] = $816;
        HEAP32[$816 + 24 >> 2] = $$3$i$i;
        break;
       } while (0);
       $822 = HEAP32[$815 + 4 >> 2] | 0;
       if (!$822) break;
       if ((HEAP32[16739] | 0) >>> 0 > $822 >>> 0) _abort(); else {
        HEAP32[$$3$i$i + 20 >> 2] = $822;
        HEAP32[$822 + 24 >> 2] = $$3$i$i;
        break;
       }
      } else {
       $746 = HEAP32[$718 + 8 >> 2] | 0;
       $748 = HEAP32[$718 + 12 >> 2] | 0;
       $750 = 66980 + ($743 << 1 << 2) | 0;
       do if (($746 | 0) != ($750 | 0)) {
        if ($753 >>> 0 > $746 >>> 0) _abort();
        if ((HEAP32[$746 + 12 >> 2] | 0) == ($718 | 0)) break;
        _abort();
       } while (0);
       if (($748 | 0) == ($746 | 0)) {
        HEAP32[16735] = HEAP32[16735] & ~(1 << $743);
        break;
       }
       do if (($748 | 0) == ($750 | 0)) $$pre$phi17$i$iZ2D = $748 + 8 | 0; else {
        if ($753 >>> 0 > $748 >>> 0) _abort();
        $764 = $748 + 8 | 0;
        if ((HEAP32[$764 >> 2] | 0) == ($718 | 0)) {
         $$pre$phi17$i$iZ2D = $764;
         break;
        }
        _abort();
       } while (0);
       HEAP32[$746 + 12 >> 2] = $748;
       HEAP32[$$pre$phi17$i$iZ2D >> 2] = $746;
      } while (0);
      $$0$i16$i = $718 + $742 | 0;
      $$0286$i$i = $742 + $723 | 0;
     } else {
      $$0$i16$i = $718;
      $$0286$i$i = $723;
     }
     $830 = $$0$i16$i + 4 | 0;
     HEAP32[$830 >> 2] = HEAP32[$830 >> 2] & -2;
     HEAP32[$722 + 4 >> 2] = $$0286$i$i | 1;
     HEAP32[$722 + $$0286$i$i >> 2] = $$0286$i$i;
     $836 = $$0286$i$i >>> 3;
     if ($$0286$i$i >>> 0 < 256) {
      $839 = 66980 + ($836 << 1 << 2) | 0;
      $840 = HEAP32[16735] | 0;
      $841 = 1 << $836;
      do if (!($840 & $841)) {
       HEAP32[16735] = $840 | $841;
       $$0294$i$i = $839;
       $$pre$phi$i18$iZ2D = $839 + 8 | 0;
      } else {
       $845 = $839 + 8 | 0;
       $846 = HEAP32[$845 >> 2] | 0;
       if ((HEAP32[16739] | 0) >>> 0 <= $846 >>> 0) {
        $$0294$i$i = $846;
        $$pre$phi$i18$iZ2D = $845;
        break;
       }
       _abort();
      } while (0);
      HEAP32[$$pre$phi$i18$iZ2D >> 2] = $722;
      HEAP32[$$0294$i$i + 12 >> 2] = $722;
      HEAP32[$722 + 8 >> 2] = $$0294$i$i;
      HEAP32[$722 + 12 >> 2] = $839;
      break;
     }
     $852 = $$0286$i$i >>> 8;
     do if (!$852) $$0295$i$i = 0; else {
      if ($$0286$i$i >>> 0 > 16777215) {
       $$0295$i$i = 31;
       break;
      }
      $857 = ($852 + 1048320 | 0) >>> 16 & 8;
      $858 = $852 << $857;
      $861 = ($858 + 520192 | 0) >>> 16 & 4;
      $863 = $858 << $861;
      $866 = ($863 + 245760 | 0) >>> 16 & 2;
      $871 = 14 - ($861 | $857 | $866) + ($863 << $866 >>> 15) | 0;
      $$0295$i$i = $$0286$i$i >>> ($871 + 7 | 0) & 1 | $871 << 1;
     } while (0);
     $877 = 67244 + ($$0295$i$i << 2) | 0;
     HEAP32[$722 + 28 >> 2] = $$0295$i$i;
     $879 = $722 + 16 | 0;
     HEAP32[$879 + 4 >> 2] = 0;
     HEAP32[$879 >> 2] = 0;
     $881 = HEAP32[16736] | 0;
     $882 = 1 << $$0295$i$i;
     if (!($881 & $882)) {
      HEAP32[16736] = $881 | $882;
      HEAP32[$877 >> 2] = $722;
      HEAP32[$722 + 24 >> 2] = $877;
      HEAP32[$722 + 12 >> 2] = $722;
      HEAP32[$722 + 8 >> 2] = $722;
      break;
     }
     $889 = HEAP32[$877 >> 2] | 0;
     L410 : do if ((HEAP32[$889 + 4 >> 2] & -8 | 0) != ($$0286$i$i | 0)) {
      $$028711$i$i = $$0286$i$i << (($$0295$i$i | 0) == 31 ? 0 : 25 - ($$0295$i$i >>> 1) | 0);
      $$028810$i$i = $889;
      while (1) {
       $906 = $$028810$i$i + 16 + ($$028711$i$i >>> 31 << 2) | 0;
       $901 = HEAP32[$906 >> 2] | 0;
       if (!$901) break;
       if ((HEAP32[$901 + 4 >> 2] & -8 | 0) == ($$0286$i$i | 0)) {
        $$0288$lcssa$i$i = $901;
        break L410;
       } else {
        $$028711$i$i = $$028711$i$i << 1;
        $$028810$i$i = $901;
       }
      }
      if ((HEAP32[16739] | 0) >>> 0 > $906 >>> 0) _abort(); else {
       HEAP32[$906 >> 2] = $722;
       HEAP32[$722 + 24 >> 2] = $$028810$i$i;
       HEAP32[$722 + 12 >> 2] = $722;
       HEAP32[$722 + 8 >> 2] = $722;
       break L317;
      }
     } else $$0288$lcssa$i$i = $889; while (0);
     $913 = $$0288$lcssa$i$i + 8 | 0;
     $914 = HEAP32[$913 >> 2] | 0;
     $915 = HEAP32[16739] | 0;
     if ($915 >>> 0 <= $914 >>> 0 & $915 >>> 0 <= $$0288$lcssa$i$i >>> 0) {
      HEAP32[$914 + 12 >> 2] = $722;
      HEAP32[$913 >> 2] = $722;
      HEAP32[$722 + 8 >> 2] = $914;
      HEAP32[$722 + 12 >> 2] = $$0288$lcssa$i$i;
      HEAP32[$722 + 24 >> 2] = 0;
      break;
     } else _abort();
    } else {
     $728 = (HEAP32[16738] | 0) + $723 | 0;
     HEAP32[16738] = $728;
     HEAP32[16741] = $722;
     HEAP32[$722 + 4 >> 2] = $728 | 1;
    } while (0);
    $$0 = $710 + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $$0$i$i$i = 67388;
   while (1) {
    $923 = HEAP32[$$0$i$i$i >> 2] | 0;
    if ($923 >>> 0 <= $635 >>> 0 ? ($927 = $923 + (HEAP32[$$0$i$i$i + 4 >> 2] | 0) | 0, $927 >>> 0 > $635 >>> 0) : 0) break;
    $$0$i$i$i = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
   }
   $931 = $927 + -47 | 0;
   $933 = $931 + 8 | 0;
   $939 = $931 + (($933 & 7 | 0) == 0 ? 0 : 0 - $933 & 7) | 0;
   $940 = $635 + 16 | 0;
   $942 = $939 >>> 0 < $940 >>> 0 ? $635 : $939;
   $943 = $942 + 8 | 0;
   $945 = $$723947$i + -40 | 0;
   $947 = $$748$i + 8 | 0;
   $952 = ($947 & 7 | 0) == 0 ? 0 : 0 - $947 & 7;
   $953 = $$748$i + $952 | 0;
   $954 = $945 - $952 | 0;
   HEAP32[16741] = $953;
   HEAP32[16738] = $954;
   HEAP32[$953 + 4 >> 2] = $954 | 1;
   HEAP32[$$748$i + $945 + 4 >> 2] = 40;
   HEAP32[16742] = HEAP32[16857];
   $960 = $942 + 4 | 0;
   HEAP32[$960 >> 2] = 27;
   HEAP32[$943 >> 2] = HEAP32[16847];
   HEAP32[$943 + 4 >> 2] = HEAP32[16848];
   HEAP32[$943 + 8 >> 2] = HEAP32[16849];
   HEAP32[$943 + 12 >> 2] = HEAP32[16850];
   HEAP32[16847] = $$748$i;
   HEAP32[16848] = $$723947$i;
   HEAP32[16850] = 0;
   HEAP32[16849] = $943;
   $962 = $942 + 24 | 0;
   do {
    $962$looptemp = $962;
    $962 = $962 + 4 | 0;
    HEAP32[$962 >> 2] = 7;
   } while (($962$looptemp + 8 | 0) >>> 0 < $927 >>> 0);
   if (($942 | 0) != ($635 | 0)) {
    $968 = $942 - $635 | 0;
    HEAP32[$960 >> 2] = HEAP32[$960 >> 2] & -2;
    HEAP32[$635 + 4 >> 2] = $968 | 1;
    HEAP32[$942 >> 2] = $968;
    $973 = $968 >>> 3;
    if ($968 >>> 0 < 256) {
     $976 = 66980 + ($973 << 1 << 2) | 0;
     $977 = HEAP32[16735] | 0;
     $978 = 1 << $973;
     if ($977 & $978) {
      $982 = $976 + 8 | 0;
      $983 = HEAP32[$982 >> 2] | 0;
      if ((HEAP32[16739] | 0) >>> 0 > $983 >>> 0) _abort(); else {
       $$0211$i$i = $983;
       $$pre$phi$i$iZ2D = $982;
      }
     } else {
      HEAP32[16735] = $977 | $978;
      $$0211$i$i = $976;
      $$pre$phi$i$iZ2D = $976 + 8 | 0;
     }
     HEAP32[$$pre$phi$i$iZ2D >> 2] = $635;
     HEAP32[$$0211$i$i + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $$0211$i$i;
     HEAP32[$635 + 12 >> 2] = $976;
     break;
    }
    $989 = $968 >>> 8;
    if ($989) if ($968 >>> 0 > 16777215) $$0212$i$i = 31; else {
     $994 = ($989 + 1048320 | 0) >>> 16 & 8;
     $995 = $989 << $994;
     $998 = ($995 + 520192 | 0) >>> 16 & 4;
     $1000 = $995 << $998;
     $1003 = ($1000 + 245760 | 0) >>> 16 & 2;
     $1008 = 14 - ($998 | $994 | $1003) + ($1000 << $1003 >>> 15) | 0;
     $$0212$i$i = $968 >>> ($1008 + 7 | 0) & 1 | $1008 << 1;
    } else $$0212$i$i = 0;
    $1014 = 67244 + ($$0212$i$i << 2) | 0;
    HEAP32[$635 + 28 >> 2] = $$0212$i$i;
    HEAP32[$635 + 20 >> 2] = 0;
    HEAP32[$940 >> 2] = 0;
    $1017 = HEAP32[16736] | 0;
    $1018 = 1 << $$0212$i$i;
    if (!($1017 & $1018)) {
     HEAP32[16736] = $1017 | $1018;
     HEAP32[$1014 >> 2] = $635;
     HEAP32[$635 + 24 >> 2] = $1014;
     HEAP32[$635 + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $635;
     break;
    }
    $1025 = HEAP32[$1014 >> 2] | 0;
    L451 : do if ((HEAP32[$1025 + 4 >> 2] & -8 | 0) != ($968 | 0)) {
     $$02065$i$i = $968 << (($$0212$i$i | 0) == 31 ? 0 : 25 - ($$0212$i$i >>> 1) | 0);
     $$02074$i$i = $1025;
     while (1) {
      $1042 = $$02074$i$i + 16 + ($$02065$i$i >>> 31 << 2) | 0;
      $1037 = HEAP32[$1042 >> 2] | 0;
      if (!$1037) break;
      if ((HEAP32[$1037 + 4 >> 2] & -8 | 0) == ($968 | 0)) {
       $$0207$lcssa$i$i = $1037;
       break L451;
      } else {
       $$02065$i$i = $$02065$i$i << 1;
       $$02074$i$i = $1037;
      }
     }
     if ((HEAP32[16739] | 0) >>> 0 > $1042 >>> 0) _abort(); else {
      HEAP32[$1042 >> 2] = $635;
      HEAP32[$635 + 24 >> 2] = $$02074$i$i;
      HEAP32[$635 + 12 >> 2] = $635;
      HEAP32[$635 + 8 >> 2] = $635;
      break L294;
     }
    } else $$0207$lcssa$i$i = $1025; while (0);
    $1049 = $$0207$lcssa$i$i + 8 | 0;
    $1050 = HEAP32[$1049 >> 2] | 0;
    $1051 = HEAP32[16739] | 0;
    if ($1051 >>> 0 <= $1050 >>> 0 & $1051 >>> 0 <= $$0207$lcssa$i$i >>> 0) {
     HEAP32[$1050 + 12 >> 2] = $635;
     HEAP32[$1049 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $1050;
     HEAP32[$635 + 12 >> 2] = $$0207$lcssa$i$i;
     HEAP32[$635 + 24 >> 2] = 0;
     break;
    } else _abort();
   }
  } else {
   $637 = HEAP32[16739] | 0;
   if (($637 | 0) == 0 | $$748$i >>> 0 < $637 >>> 0) HEAP32[16739] = $$748$i;
   HEAP32[16847] = $$748$i;
   HEAP32[16848] = $$723947$i;
   HEAP32[16850] = 0;
   HEAP32[16744] = HEAP32[16853];
   HEAP32[16743] = -1;
   HEAP32[16748] = 66980;
   HEAP32[16747] = 66980;
   HEAP32[16750] = 66988;
   HEAP32[16749] = 66988;
   HEAP32[16752] = 66996;
   HEAP32[16751] = 66996;
   HEAP32[16754] = 67004;
   HEAP32[16753] = 67004;
   HEAP32[16756] = 67012;
   HEAP32[16755] = 67012;
   HEAP32[16758] = 67020;
   HEAP32[16757] = 67020;
   HEAP32[16760] = 67028;
   HEAP32[16759] = 67028;
   HEAP32[16762] = 67036;
   HEAP32[16761] = 67036;
   HEAP32[16764] = 67044;
   HEAP32[16763] = 67044;
   HEAP32[16766] = 67052;
   HEAP32[16765] = 67052;
   HEAP32[16768] = 67060;
   HEAP32[16767] = 67060;
   HEAP32[16770] = 67068;
   HEAP32[16769] = 67068;
   HEAP32[16772] = 67076;
   HEAP32[16771] = 67076;
   HEAP32[16774] = 67084;
   HEAP32[16773] = 67084;
   HEAP32[16776] = 67092;
   HEAP32[16775] = 67092;
   HEAP32[16778] = 67100;
   HEAP32[16777] = 67100;
   HEAP32[16780] = 67108;
   HEAP32[16779] = 67108;
   HEAP32[16782] = 67116;
   HEAP32[16781] = 67116;
   HEAP32[16784] = 67124;
   HEAP32[16783] = 67124;
   HEAP32[16786] = 67132;
   HEAP32[16785] = 67132;
   HEAP32[16788] = 67140;
   HEAP32[16787] = 67140;
   HEAP32[16790] = 67148;
   HEAP32[16789] = 67148;
   HEAP32[16792] = 67156;
   HEAP32[16791] = 67156;
   HEAP32[16794] = 67164;
   HEAP32[16793] = 67164;
   HEAP32[16796] = 67172;
   HEAP32[16795] = 67172;
   HEAP32[16798] = 67180;
   HEAP32[16797] = 67180;
   HEAP32[16800] = 67188;
   HEAP32[16799] = 67188;
   HEAP32[16802] = 67196;
   HEAP32[16801] = 67196;
   HEAP32[16804] = 67204;
   HEAP32[16803] = 67204;
   HEAP32[16806] = 67212;
   HEAP32[16805] = 67212;
   HEAP32[16808] = 67220;
   HEAP32[16807] = 67220;
   HEAP32[16810] = 67228;
   HEAP32[16809] = 67228;
   $641 = $$723947$i + -40 | 0;
   $643 = $$748$i + 8 | 0;
   $648 = ($643 & 7 | 0) == 0 ? 0 : 0 - $643 & 7;
   $649 = $$748$i + $648 | 0;
   $650 = $641 - $648 | 0;
   HEAP32[16741] = $649;
   HEAP32[16738] = $650;
   HEAP32[$649 + 4 >> 2] = $650 | 1;
   HEAP32[$$748$i + $641 + 4 >> 2] = 40;
   HEAP32[16742] = HEAP32[16857];
  } while (0);
  $1060 = HEAP32[16738] | 0;
  if ($1060 >>> 0 > $$0197 >>> 0) {
   $1062 = $1060 - $$0197 | 0;
   HEAP32[16738] = $1062;
   $1063 = HEAP32[16741] | 0;
   $1064 = $1063 + $$0197 | 0;
   HEAP32[16741] = $1064;
   HEAP32[$1064 + 4 >> 2] = $1062 | 1;
   HEAP32[$1063 + 4 >> 2] = $$0197 | 3;
   $$0 = $1063 + 8 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 $1070 = ___errno_location() | 0;
 HEAP32[$1070 >> 2] = 48;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i161 = 0, $$0$i$i$i$i205 = 0, $$0$i$i$i$i221 = 0, $$0$i$i$i$i237 = 0, $$0$i$i$i$i254 = 0, $$0$i$i$i$i269 = 0, $$0$i$i147 = 0, $$0$i$i150 = 0, $$0$i$i153 = 0, $$0$i$i156 = 0, $$0$i$i159 = 0, $$0$i$i160 = 0, $$0$i$i173 = 0, $$0$i$i176 = 0, $$0$i$i182 = 0, $$0$i$i189 = 0, $$0$i$i194 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i167 = 0, $$0$i$i2$i$i211 = 0, $$0$i$i2$i$i227 = 0, $$0$i$i2$i$i243 = 0, $$0$i$i2$i$i260 = 0, $$0$i$i2$i$i275 = 0, $$0$i$i202 = 0, $$0$i$i233 = 0, $$0$i$i249 = 0, $$0$i$i266 = 0, $$0$i$i281 = 0, $$0$i$i284 = 0, $$0124 = 0, $$0129 = 0, $$0131 = 0, $$10 = 0, $$1130 = 0, $$2126$ph = 0, $$pre$phiZ2D = 0, $$sroa$0293$0$ptr = 0, $$sroa$0313$0 = 0, $$sroa$0313$1 = 0, $$sroa$08$0$ptr$i = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $125 = 0, $128 = 0, $13 = 0, $14 = 0, $141 = 0, $143 = 0, $15 = 0, $155 = 0, $157 = 0, $16 = 0, $17 = 0, $175 = 0, $176 = 0, $177 = 0, $18 = 0, $189 = 0, $19 = 0, $193 = 0, $194 = 0, $198 = 0, $20 = 0, $201 = 0, $203 = 0, $205 = 0, $208 = 0, $21 = 0, $215 = 0, $22 = 0, $222 = 0, $223 = 0, $224 = 0, $23 = 0, $233 = 0, $24 = 0, $245 = 0, $246 = 0, $247 = 0, $25 = 0, $256 = 0, $275 = 0, $276 = 0, $277 = 0, $280 = 0, $286 = 0, $305 = 0, $306 = 0, $307 = 0, $316 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $346 = 0, $348 = 0, $349 = 0, $350 = 0, $351 = 0, $353 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $372 = 0, $375 = 0, $380 = 0, $386 = 0, $387 = 0, $391 = 0, $395 = 0, $398 = 0, $40 = 0, $41 = 0, $411 = 0, $413 = 0, $42 = 0, $425 = 0, $427 = 0, $43 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $45 = 0, $452 = 0, $453 = 0, $46 = 0, $463 = 0, $466 = 0, $479 = 0, $48 = 0, $481 = 0, $49 = 0, $493 = 0, $495 = 0, $50 = 0, $505 = 0, $51 = 0, $513 = 0, $517 = 0, $519 = 0, $52 = 0, $528 = 0, $53 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $545 = 0, $55 = 0, $551 = 0, $554 = 0, $557 = 0, $570 = 0, $572 = 0, $58 = 0, $584 = 0, $586 = 0, $601 = 0, $602 = 0, $603 = 0, $614 = 0, $617 = 0, $630 = 0, $632 = 0, $644 = 0, $646 = 0, $669 = 0, $671 = 0, $682 = 0, $686 = 0, $687 = 0, $688 = 0, $70 = 0, $704 = 0, $705 = 0, $706 = 0, $711 = 0, $712 = 0, $715 = 0, $727 = 0, $73 = 0, $730 = 0, $742 = 0, $744 = 0, $759 = 0, $765 = 0, $766 = 0, $767 = 0, $776 = 0, $777 = 0, $783 = 0, $787 = 0, $788 = 0, $789 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $88 = 0, $90 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 $11 = sp + 488 | 0;
 $12 = sp;
 $13 = sp + 480 | 0;
 $14 = sp + 472 | 0;
 $15 = sp + 468 | 0;
 $16 = sp + 496 | 0;
 $17 = sp + 493 | 0;
 $18 = sp + 492 | 0;
 $19 = sp + 456 | 0;
 $20 = sp + 444 | 0;
 $21 = sp + 432 | 0;
 $22 = sp + 420 | 0;
 $23 = sp + 408 | 0;
 $24 = sp + 404 | 0;
 $25 = sp + 400 | 0;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$13 + 4 >> 2] = 214;
 HEAP32[$14 >> 2] = $12;
 HEAP32[$15 >> 2] = $12 + 400;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$19 + 4 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$19 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 $$0$i$i147 = 0;
 while (1) {
  if (($$0$i$i147 | 0) == 3) break;
  HEAP32[$20 + ($$0$i$i147 << 2) >> 2] = 0;
  $$0$i$i147 = $$0$i$i147 + 1 | 0;
 }
 HEAP32[$21 >> 2] = 0;
 HEAP32[$21 + 4 >> 2] = 0;
 HEAP32[$21 + 8 >> 2] = 0;
 $$0$i$i150 = 0;
 while (1) {
  if (($$0$i$i150 | 0) == 3) break;
  HEAP32[$21 + ($$0$i$i150 << 2) >> 2] = 0;
  $$0$i$i150 = $$0$i$i150 + 1 | 0;
 }
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 $$0$i$i153 = 0;
 while (1) {
  if (($$0$i$i153 | 0) == 3) break;
  HEAP32[$22 + ($$0$i$i153 << 2) >> 2] = 0;
  $$0$i$i153 = $$0$i$i153 + 1 | 0;
 }
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 HEAP32[$23 + 8 >> 2] = 0;
 $$0$i$i156 = 0;
 while (1) {
  if (($$0$i$i156 | 0) == 3) break;
  HEAP32[$23 + ($$0$i$i156 << 2) >> 2] = 0;
  $$0$i$i156 = $$0$i$i156 + 1 | 0;
 }
 __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($2, $3, $16, $17, $18, $19, $20, $21, $22, $24);
 HEAP32[$9 >> 2] = HEAP32[$8 >> 2];
 $40 = $7 + 8 | 0;
 $41 = $21 + 11 | 0;
 $42 = $21 + 4 | 0;
 $43 = $22 + 11 | 0;
 $44 = $22 + 4 | 0;
 $45 = $19 + 11 | 0;
 $46 = $19 + 4 | 0;
 $48 = ($4 & 512 | 0) != 0;
 $49 = $20 + 11 | 0;
 $50 = $16 + 3 | 0;
 $51 = $20 + 4 | 0;
 $52 = $23 + 11 | 0;
 $53 = $23 + 4 | 0;
 $$0129 = 0;
 $$0131 = 0;
 L21 : while (1) {
  if ($$0131 >>> 0 >= 4) {
   label = 243;
   break;
  }
  $55 = HEAP32[$0 >> 2] | 0;
  do if ($55) {
   $58 = HEAP32[$55 + 12 >> 2] | 0;
   if (($58 | 0) == (HEAP32[$55 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 36 >> 2] & 127]($55) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$58 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $787 = 1;
    break;
   } else {
    $787 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } else $787 = 1; while (0);
  $70 = HEAP32[$1 >> 2] | 0;
  do if ($70) {
   $73 = HEAP32[$70 + 12 >> 2] | 0;
   if (($73 | 0) == (HEAP32[$70 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$70 >> 2] | 0) + 36 >> 2] & 127]($70) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$73 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($787) {
    $788 = $70;
    break;
   } else {
    label = 243;
    break L21;
   } else {
    HEAP32[$1 >> 2] = 0;
    label = 31;
    break;
   }
  } else label = 31; while (0);
  if ((label | 0) == 31) {
   label = 0;
   if ($787) {
    label = 243;
    break;
   } else $788 = 0;
  }
  L46 : do switch (HEAP8[$16 + $$0131 >> 0] | 0) {
  case 1:
   {
    if (($$0131 | 0) == 3) $$1130 = $$0129; else {
     $88 = HEAP32[$0 >> 2] | 0;
     $90 = HEAP32[$88 + 12 >> 2] | 0;
     if (($90 | 0) == (HEAP32[$88 + 16 >> 2] | 0)) $$0$i$i159 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] & 127]($88) | 0; else $$0$i$i159 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$90 >> 0] | 0) | 0;
     if (($$0$i$i159 & 255) << 24 >> 24 <= -1) {
      label = 45;
      break L21;
     }
     if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i159 << 24 >> 24 << 1) >> 1] & 8192)) {
      label = 45;
      break L21;
     }
     $108 = HEAP32[$0 >> 2] | 0;
     $109 = $108 + 12 | 0;
     $110 = HEAP32[$109 >> 2] | 0;
     if (($110 | 0) == (HEAP32[$108 + 16 >> 2] | 0)) $$0$i$i160 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$108 >> 2] | 0) + 40 >> 2] & 127]($108) | 0; else {
      HEAP32[$109 >> 2] = $110 + 1;
      $$0$i$i160 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$110 >> 0] | 0) | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($23, $$0$i$i160 & 255);
     label = 47;
    }
    break;
   }
  case 0:
   {
    if (($$0131 | 0) == 3) $$1130 = $$0129; else label = 47;
    break;
   }
  case 3:
   {
    $189 = HEAP8[$41 >> 0] | 0;
    $193 = $189 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $189 & 255;
    $194 = HEAP8[$43 >> 0] | 0;
    $198 = $194 << 24 >> 24 < 0 ? HEAP32[$44 >> 2] | 0 : $194 & 255;
    if (($193 | 0) == (0 - $198 | 0)) $$1130 = $$0129; else {
     $201 = ($193 | 0) == 0;
     $203 = HEAP32[$0 >> 2] | 0;
     $205 = HEAP32[$203 + 12 >> 2] | 0;
     $208 = ($205 | 0) == (HEAP32[$203 + 16 >> 2] | 0);
     if ($201 | ($198 | 0) == 0) {
      if ($208) $$0$i$i182 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$203 >> 2] | 0) + 36 >> 2] & 127]($203) | 0; else $$0$i$i182 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$205 >> 0] | 0) | 0;
      $215 = $$0$i$i182 & 255;
      if ($201) {
       if ((HEAP8[((HEAP8[$43 >> 0] | 0) < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 0] | 0) != $215 << 24 >> 24) {
        $$1130 = $$0129;
        break L46;
       }
       $245 = HEAP32[$0 >> 2] | 0;
       $246 = $245 + 12 | 0;
       $247 = HEAP32[$246 >> 2] | 0;
       if (($247 | 0) == (HEAP32[$245 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$245 >> 2] | 0) + 40 >> 2] & 127]($245) | 0; else {
        HEAP32[$246 >> 2] = $247 + 1;
        __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$247 >> 0] | 0) | 0;
       }
       HEAP8[$6 >> 0] = 1;
       $256 = HEAP8[$43 >> 0] | 0;
       $$1130 = ($256 << 24 >> 24 < 0 ? HEAP32[$44 >> 2] | 0 : $256 & 255) >>> 0 > 1 ? $22 : $$0129;
       break L46;
      }
      if ((HEAP8[((HEAP8[$41 >> 0] | 0) < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 0] | 0) != $215 << 24 >> 24) {
       HEAP8[$6 >> 0] = 1;
       $$1130 = $$0129;
       break L46;
      }
      $222 = HEAP32[$0 >> 2] | 0;
      $223 = $222 + 12 | 0;
      $224 = HEAP32[$223 >> 2] | 0;
      if (($224 | 0) == (HEAP32[$222 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$222 >> 2] | 0) + 40 >> 2] & 127]($222) | 0; else {
       HEAP32[$223 >> 2] = $224 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$224 >> 0] | 0) | 0;
      }
      $233 = HEAP8[$41 >> 0] | 0;
      $$1130 = ($233 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $233 & 255) >>> 0 > 1 ? $21 : $$0129;
      break L46;
     }
     if ($208) $$0$i$i189 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$203 >> 2] | 0) + 36 >> 2] & 127]($203) | 0; else $$0$i$i189 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$205 >> 0] | 0) | 0;
     $275 = HEAP32[$0 >> 2] | 0;
     $276 = $275 + 12 | 0;
     $277 = HEAP32[$276 >> 2] | 0;
     $280 = ($277 | 0) == (HEAP32[$275 + 16 >> 2] | 0);
     if ((HEAP8[((HEAP8[$41 >> 0] | 0) < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 0] | 0) == ($$0$i$i189 & 255) << 24 >> 24) {
      if ($280) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$275 >> 2] | 0) + 40 >> 2] & 127]($275) | 0; else {
       HEAP32[$276 >> 2] = $277 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$277 >> 0] | 0) | 0;
      }
      $286 = HEAP8[$41 >> 0] | 0;
      $$1130 = ($286 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $286 & 255) >>> 0 > 1 ? $21 : $$0129;
      break L46;
     }
     if ($280) $$0$i$i194 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$275 >> 2] | 0) + 36 >> 2] & 127]($275) | 0; else $$0$i$i194 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$277 >> 0] | 0) | 0;
     if ((HEAP8[((HEAP8[$43 >> 0] | 0) < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 0] | 0) != ($$0$i$i194 & 255) << 24 >> 24) {
      label = 105;
      break L21;
     }
     $305 = HEAP32[$0 >> 2] | 0;
     $306 = $305 + 12 | 0;
     $307 = HEAP32[$306 >> 2] | 0;
     if (($307 | 0) == (HEAP32[$305 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$305 >> 2] | 0) + 40 >> 2] & 127]($305) | 0; else {
      HEAP32[$306 >> 2] = $307 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$307 >> 0] | 0) | 0;
     }
     HEAP8[$6 >> 0] = 1;
     $316 = HEAP8[$43 >> 0] | 0;
     $$1130 = ($316 << 24 >> 24 < 0 ? HEAP32[$44 >> 2] | 0 : $316 & 255) >>> 0 > 1 ? $22 : $$0129;
    }
    break;
   }
  case 2:
   {
    if ($$0131 >>> 0 < 2 | ($$0129 | 0) != 0) {
     $335 = HEAP8[$49 >> 0] | 0;
     $336 = $335 << 24 >> 24 < 0;
     $337 = HEAP32[$20 >> 2] | 0;
     $338 = $336 ? $337 : $20;
     $339 = $338;
     if (!$$0131) {
      $$sroa$0313$1 = $339;
      $793 = $337;
      $794 = $335;
     } else {
      $346 = $335;
      $348 = $336;
      $350 = $338;
      $364 = $339;
      $792 = $337;
      label = 110;
     }
    } else {
     if (!($48 | ($$0131 | 0) == 2 & (HEAP8[$50 >> 0] | 0) != 0)) {
      $$1130 = 0;
      break L46;
     }
     $330 = HEAP8[$49 >> 0] | 0;
     $331 = $330 << 24 >> 24 < 0;
     $332 = HEAP32[$20 >> 2] | 0;
     $333 = $331 ? $332 : $20;
     $346 = $330;
     $348 = $331;
     $350 = $333;
     $364 = $333;
     $792 = $332;
     label = 110;
    }
    L109 : do if ((label | 0) == 110) {
     label = 0;
     if ((HEAPU8[$16 + ($$0131 + -1) >> 0] | 0) < 2) {
      $349 = $350 + ($348 ? HEAP32[$51 >> 2] | 0 : $346 & 255) | 0;
      $$sroa$0313$0 = $364;
      while (1) {
       $351 = $$sroa$0313$0;
       if (($349 | 0) == ($351 | 0)) break;
       $353 = HEAP8[$351 >> 0] | 0;
       if ($353 << 24 >> 24 <= -1) break;
       if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($353 << 24 >> 24 << 1) >> 1] & 8192)) break;
       $$sroa$0313$0 = $351 + 1 | 0;
      }
      $363 = $$sroa$0313$0 - $364 | 0;
      $365 = HEAP8[$52 >> 0] | 0;
      $366 = $365 << 24 >> 24 < 0;
      $367 = HEAP32[$53 >> 2] | 0;
      $368 = $365 & 255;
      if ($363 >>> 0 <= ($366 ? $367 : $368) >>> 0) {
       $372 = (HEAP32[$23 >> 2] | 0) + $367 | 0;
       $375 = $23 + $368 | 0;
       $$pre$phiZ2D = $366 ? $372 : $375;
       $$sroa$08$0$ptr$i = $350;
       $380 = $366 ? $372 + (0 - $363) | 0 : $375 + (0 - $363) | 0;
       while (1) {
        if (($380 | 0) == ($$pre$phiZ2D | 0)) {
         $$sroa$0313$1 = $$sroa$0313$0;
         $793 = $792;
         $794 = $346;
         break L109;
        }
        if ((HEAP8[$380 >> 0] | 0) != (HEAP8[$$sroa$08$0$ptr$i >> 0] | 0)) {
         $$sroa$0313$1 = $364;
         $793 = $792;
         $794 = $346;
         break L109;
        }
        $$sroa$08$0$ptr$i = $$sroa$08$0$ptr$i + 1 | 0;
        $380 = $380 + 1 | 0;
       }
      } else {
       $$sroa$0313$1 = $364;
       $793 = $792;
       $794 = $346;
      }
     } else {
      $$sroa$0313$1 = $364;
      $793 = $792;
      $794 = $346;
     }
    } while (0);
    $$sroa$0293$0$ptr = $$sroa$0313$1;
    $387 = $794;
    $391 = $793;
    $411 = $788;
    L124 : while (1) {
     $386 = $387 << 24 >> 24 < 0;
     if (($$sroa$0293$0$ptr | 0) == (($386 ? $391 : $20) + ($386 ? HEAP32[$51 >> 2] | 0 : $387 & 255) | 0)) break;
     $395 = HEAP32[$0 >> 2] | 0;
     do if ($395) {
      $398 = HEAP32[$395 + 12 >> 2] | 0;
      if (($398 | 0) == (HEAP32[$395 + 16 >> 2] | 0)) $$0$i$i$i$i221 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$395 >> 2] | 0) + 36 >> 2] & 127]($395) | 0; else $$0$i$i$i$i221 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$398 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i221, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $795 = 1;
       break;
      } else {
       $795 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } else $795 = 1; while (0);
     do if ($411) {
      $413 = HEAP32[$411 + 12 >> 2] | 0;
      if (($413 | 0) == (HEAP32[$411 + 16 >> 2] | 0)) $$0$i$i2$i$i227 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$411 >> 2] | 0) + 36 >> 2] & 127]($411) | 0; else $$0$i$i2$i$i227 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$413 >> 0] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i227, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($795) {
       $796 = $411;
       break;
      } else break L124; else {
       HEAP32[$1 >> 2] = 0;
       label = 136;
       break;
      }
     } else label = 136; while (0);
     if ((label | 0) == 136) {
      label = 0;
      if ($795) break; else $796 = 0;
     }
     $425 = HEAP32[$0 >> 2] | 0;
     $427 = HEAP32[$425 + 12 >> 2] | 0;
     if (($427 | 0) == (HEAP32[$425 + 16 >> 2] | 0)) $$0$i$i233 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$425 >> 2] | 0) + 36 >> 2] & 127]($425) | 0; else $$0$i$i233 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$427 >> 0] | 0) | 0;
     if ((HEAP8[$$sroa$0293$0$ptr >> 0] | 0) != ($$0$i$i233 & 255) << 24 >> 24) break;
     $440 = HEAP32[$0 >> 2] | 0;
     $441 = $440 + 12 | 0;
     $442 = HEAP32[$441 >> 2] | 0;
     if (($442 | 0) == (HEAP32[$440 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$440 >> 2] | 0) + 40 >> 2] & 127]($440) | 0; else {
      HEAP32[$441 >> 2] = $442 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$442 >> 0] | 0) | 0;
     }
     $$sroa$0293$0$ptr = $$sroa$0293$0$ptr + 1 | 0;
     $387 = HEAP8[$49 >> 0] | 0;
     $391 = HEAP32[$20 >> 2] | 0;
     $411 = $796;
    }
    if ($48 ? ($452 = HEAP8[$49 >> 0] | 0, $453 = $452 << 24 >> 24 < 0, ($$sroa$0293$0$ptr | 0) != (($453 ? HEAP32[$20 >> 2] | 0 : $20) + ($453 ? HEAP32[$51 >> 2] | 0 : $452 & 255) | 0)) : 0) {
     label = 148;
     break L21;
    } else $$1130 = $$0129;
    break;
   }
  case 4:
   {
    $$0124 = 0;
    $479 = $788;
    $789 = $788;
    L161 : while (1) {
     $463 = HEAP32[$0 >> 2] | 0;
     do if ($463) {
      $466 = HEAP32[$463 + 12 >> 2] | 0;
      if (($466 | 0) == (HEAP32[$463 + 16 >> 2] | 0)) $$0$i$i$i$i237 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$463 >> 2] | 0) + 36 >> 2] & 127]($463) | 0; else $$0$i$i$i$i237 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$466 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i237, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $797 = 1;
       break;
      } else {
       $797 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } else $797 = 1; while (0);
     do if ($479) {
      $481 = HEAP32[$479 + 12 >> 2] | 0;
      if (($481 | 0) == (HEAP32[$479 + 16 >> 2] | 0)) $$0$i$i2$i$i243 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$479 >> 2] | 0) + 36 >> 2] & 127]($479) | 0; else $$0$i$i2$i$i243 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$481 >> 0] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i243, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($797) {
       $799 = $789;
       $800 = $479;
       break;
      } else {
       $570 = $789;
       break L161;
      } else {
       HEAP32[$1 >> 2] = 0;
       $798 = 0;
       label = 162;
       break;
      }
     } else {
      $798 = $789;
      label = 162;
     } while (0);
     if ((label | 0) == 162) {
      label = 0;
      if ($797) {
       $570 = $798;
       break;
      } else {
       $799 = $798;
       $800 = 0;
      }
     }
     $493 = HEAP32[$0 >> 2] | 0;
     $495 = HEAP32[$493 + 12 >> 2] | 0;
     if (($495 | 0) == (HEAP32[$493 + 16 >> 2] | 0)) $$0$i$i249 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$493 >> 2] | 0) + 36 >> 2] & 127]($493) | 0; else $$0$i$i249 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$495 >> 0] | 0) | 0;
     $505 = $$0$i$i249 & 255;
     if ($505 << 24 >> 24 > -1 ? (HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i249 << 24 >> 24 << 1) >> 1] & 2048) != 0 : 0) {
      $513 = HEAP32[$9 >> 2] | 0;
      if (($513 | 0) == (HEAP32[$11 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
       $517 = HEAP32[$9 >> 2] | 0;
      } else $517 = $513;
      HEAP32[$9 >> 2] = $517 + 1;
      HEAP8[$517 >> 0] = $505;
      $$2126$ph = $$0124 + 1 | 0;
     } else {
      $519 = HEAP8[$45 >> 0] | 0;
      if (!((HEAP8[$18 >> 0] | 0) == $505 << 24 >> 24 & ($$0124 | 0 ? (($519 << 24 >> 24 < 0 ? HEAP32[$46 >> 2] | 0 : $519 & 255) | 0) != 0 : 0))) {
       $570 = $799;
       break;
      }
      $528 = HEAP32[$14 >> 2] | 0;
      if (($528 | 0) == (HEAP32[$15 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
       $532 = HEAP32[$14 >> 2] | 0;
      } else $532 = $528;
      HEAP32[$14 >> 2] = $532 + 4;
      HEAP32[$532 >> 2] = $$0124;
      $$2126$ph = 0;
     }
     $533 = HEAP32[$0 >> 2] | 0;
     $534 = $533 + 12 | 0;
     $535 = HEAP32[$534 >> 2] | 0;
     if (($535 | 0) == (HEAP32[$533 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$533 >> 2] | 0) + 40 >> 2] & 127]($533) | 0; else {
      HEAP32[$534 >> 2] = $535 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$535 >> 0] | 0) | 0;
     }
     $$0124 = $$2126$ph;
     $479 = $800;
     $789 = $799;
    }
    $545 = HEAP32[$14 >> 2] | 0;
    if ($$0124 | 0 ? (HEAP32[$13 >> 2] | 0) != ($545 | 0) : 0) {
     if (($545 | 0) == (HEAP32[$15 >> 2] | 0)) {
      __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
      $551 = HEAP32[$14 >> 2] | 0;
     } else $551 = $545;
     HEAP32[$14 >> 2] = $551 + 4;
     HEAP32[$551 >> 2] = $$0124;
    }
    L213 : do if ((HEAP32[$24 >> 2] | 0) > 0) {
     $554 = HEAP32[$0 >> 2] | 0;
     do if ($554) {
      $557 = HEAP32[$554 + 12 >> 2] | 0;
      if (($557 | 0) == (HEAP32[$554 + 16 >> 2] | 0)) $$0$i$i$i$i254 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$554 >> 2] | 0) + 36 >> 2] & 127]($554) | 0; else $$0$i$i$i$i254 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$557 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i254, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $801 = 1;
       break;
      } else {
       $801 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } else $801 = 1; while (0);
     do if ($570) {
      $572 = HEAP32[$570 + 12 >> 2] | 0;
      if (($572 | 0) == (HEAP32[$570 + 16 >> 2] | 0)) $$0$i$i2$i$i260 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$570 >> 2] | 0) + 36 >> 2] & 127]($570) | 0; else $$0$i$i2$i$i260 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$572 >> 0] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i260, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($801) {
       $802 = $570;
       break;
      } else {
       label = 204;
       break L21;
      } else {
       HEAP32[$1 >> 2] = 0;
       label = 198;
       break;
      }
     } else label = 198; while (0);
     if ((label | 0) == 198) {
      label = 0;
      if ($801) {
       label = 204;
       break L21;
      } else $802 = 0;
     }
     $584 = HEAP32[$0 >> 2] | 0;
     $586 = HEAP32[$584 + 12 >> 2] | 0;
     if (($586 | 0) == (HEAP32[$584 + 16 >> 2] | 0)) $$0$i$i266 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$584 >> 2] | 0) + 36 >> 2] & 127]($584) | 0; else $$0$i$i266 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$586 >> 0] | 0) | 0;
     if ((HEAP8[$17 >> 0] | 0) != ($$0$i$i266 & 255) << 24 >> 24) {
      label = 204;
      break L21;
     }
     $601 = HEAP32[$0 >> 2] | 0;
     $602 = $601 + 12 | 0;
     $603 = HEAP32[$602 >> 2] | 0;
     if (($603 | 0) == (HEAP32[$601 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$601 >> 2] | 0) + 40 >> 2] & 127]($601) | 0; else {
      HEAP32[$602 >> 2] = $603 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$603 >> 0] | 0) | 0;
     }
     $630 = $802;
     while (1) {
      if ((HEAP32[$24 >> 2] | 0) <= 0) break L213;
      $614 = HEAP32[$0 >> 2] | 0;
      do if ($614) {
       $617 = HEAP32[$614 + 12 >> 2] | 0;
       if (($617 | 0) == (HEAP32[$614 + 16 >> 2] | 0)) $$0$i$i$i$i269 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$614 >> 2] | 0) + 36 >> 2] & 127]($614) | 0; else $$0$i$i$i$i269 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$617 >> 0] | 0) | 0;
       if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i269, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
        HEAP32[$0 >> 2] = 0;
        $803 = 1;
        break;
       } else {
        $803 = (HEAP32[$0 >> 2] | 0) == 0;
        break;
       }
      } else $803 = 1; while (0);
      do if ($630) {
       $632 = HEAP32[$630 + 12 >> 2] | 0;
       if (($632 | 0) == (HEAP32[$630 + 16 >> 2] | 0)) $$0$i$i2$i$i275 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$630 >> 2] | 0) + 36 >> 2] & 127]($630) | 0; else $$0$i$i2$i$i275 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$632 >> 0] | 0) | 0;
       if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i275, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($803) {
        $804 = $630;
        break;
       } else {
        label = 230;
        break L21;
       } else {
        HEAP32[$1 >> 2] = 0;
        label = 223;
        break;
       }
      } else label = 223; while (0);
      if ((label | 0) == 223) {
       label = 0;
       if ($803) {
        label = 230;
        break L21;
       } else $804 = 0;
      }
      $644 = HEAP32[$0 >> 2] | 0;
      $646 = HEAP32[$644 + 12 >> 2] | 0;
      if (($646 | 0) == (HEAP32[$644 + 16 >> 2] | 0)) $$0$i$i281 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$644 >> 2] | 0) + 36 >> 2] & 127]($644) | 0; else $$0$i$i281 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$646 >> 0] | 0) | 0;
      if (($$0$i$i281 & 255) << 24 >> 24 <= -1) {
       label = 230;
       break L21;
      }
      if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i281 << 24 >> 24 << 1) >> 1] & 2048)) {
       label = 230;
       break L21;
      }
      if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$11 >> 2] | 0)) __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
      $669 = HEAP32[$0 >> 2] | 0;
      $671 = HEAP32[$669 + 12 >> 2] | 0;
      if (($671 | 0) == (HEAP32[$669 + 16 >> 2] | 0)) $$0$i$i284 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$669 >> 2] | 0) + 36 >> 2] & 127]($669) | 0; else $$0$i$i284 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$671 >> 0] | 0) | 0;
      $682 = HEAP32[$9 >> 2] | 0;
      HEAP32[$9 >> 2] = $682 + 1;
      HEAP8[$682 >> 0] = $$0$i$i284;
      HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + -1;
      $686 = HEAP32[$0 >> 2] | 0;
      $687 = $686 + 12 | 0;
      $688 = HEAP32[$687 >> 2] | 0;
      if (($688 | 0) == (HEAP32[$686 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$686 >> 2] | 0) + 40 >> 2] & 127]($686) | 0; else {
       HEAP32[$687 >> 2] = $688 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$688 >> 0] | 0) | 0;
      }
      $630 = $804;
     }
    } while (0);
    if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$8 >> 2] | 0)) {
     label = 241;
     break L21;
    } else $$1130 = $$0129;
    break;
   }
  default:
   $$1130 = $$0129;
  } while (0);
  L289 : do if ((label | 0) == 47) {
   label = 0;
   $141 = $788;
   while (1) {
    $125 = HEAP32[$0 >> 2] | 0;
    do if ($125) {
     $128 = HEAP32[$125 + 12 >> 2] | 0;
     if (($128 | 0) == (HEAP32[$125 + 16 >> 2] | 0)) $$0$i$i$i$i161 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$125 >> 2] | 0) + 36 >> 2] & 127]($125) | 0; else $$0$i$i$i$i161 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$128 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i161, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$0 >> 2] = 0;
      $790 = 1;
      break;
     } else {
      $790 = (HEAP32[$0 >> 2] | 0) == 0;
      break;
     }
    } else $790 = 1; while (0);
    do if ($141) {
     $143 = HEAP32[$141 + 12 >> 2] | 0;
     if (($143 | 0) == (HEAP32[$141 + 16 >> 2] | 0)) $$0$i$i2$i$i167 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$141 >> 2] | 0) + 36 >> 2] & 127]($141) | 0; else $$0$i$i2$i$i167 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$143 >> 0] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i167, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($790) {
      $791 = $141;
      break;
     } else {
      $$1130 = $$0129;
      break L289;
     } else {
      HEAP32[$1 >> 2] = 0;
      label = 61;
      break;
     }
    } else label = 61; while (0);
    if ((label | 0) == 61) {
     label = 0;
     if ($790) {
      $$1130 = $$0129;
      break L289;
     } else $791 = 0;
    }
    $155 = HEAP32[$0 >> 2] | 0;
    $157 = HEAP32[$155 + 12 >> 2] | 0;
    if (($157 | 0) == (HEAP32[$155 + 16 >> 2] | 0)) $$0$i$i173 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$155 >> 2] | 0) + 36 >> 2] & 127]($155) | 0; else $$0$i$i173 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$157 >> 0] | 0) | 0;
    if (($$0$i$i173 & 255) << 24 >> 24 <= -1) {
     $$1130 = $$0129;
     break L289;
    }
    if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i173 << 24 >> 24 << 1) >> 1] & 8192)) {
     $$1130 = $$0129;
     break L289;
    }
    $175 = HEAP32[$0 >> 2] | 0;
    $176 = $175 + 12 | 0;
    $177 = HEAP32[$176 >> 2] | 0;
    if (($177 | 0) == (HEAP32[$175 + 16 >> 2] | 0)) $$0$i$i176 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$175 >> 2] | 0) + 40 >> 2] & 127]($175) | 0; else {
     HEAP32[$176 >> 2] = $177 + 1;
     $$0$i$i176 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$177 >> 0] | 0) | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($23, $$0$i$i176 & 255);
    $141 = $791;
   }
  } while (0);
  $$0129 = $$1130;
  $$0131 = $$0131 + 1 | 0;
 }
 L326 : do if ((label | 0) == 45) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 105) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 148) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 204) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 230) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 241) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 243) {
  L328 : do if ($$0129 | 0) {
   $704 = $$0129 + 11 | 0;
   $705 = $$0129 + 4 | 0;
   $$0 = 1;
   L330 : while (1) {
    $706 = HEAP8[$704 >> 0] | 0;
    if ($706 << 24 >> 24 < 0) $711 = HEAP32[$705 >> 2] | 0; else $711 = $706 & 255;
    if ($$0 >>> 0 >= $711 >>> 0) break L328;
    $712 = HEAP32[$0 >> 2] | 0;
    do if ($712) {
     $715 = HEAP32[$712 + 12 >> 2] | 0;
     if (($715 | 0) == (HEAP32[$712 + 16 >> 2] | 0)) $$0$i$i$i$i205 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$712 >> 2] | 0) + 36 >> 2] & 127]($712) | 0; else $$0$i$i$i$i205 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$715 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i205, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$0 >> 2] = 0;
      $805 = 1;
      break;
     } else {
      $805 = (HEAP32[$0 >> 2] | 0) == 0;
      break;
     }
    } else $805 = 1; while (0);
    $727 = HEAP32[$1 >> 2] | 0;
    do if ($727) {
     $730 = HEAP32[$727 + 12 >> 2] | 0;
     if (($730 | 0) == (HEAP32[$727 + 16 >> 2] | 0)) $$0$i$i2$i$i211 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$727 >> 2] | 0) + 36 >> 2] & 127]($727) | 0; else $$0$i$i2$i$i211 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$730 >> 0] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i211, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($805) break; else break L330; else {
      HEAP32[$1 >> 2] = 0;
      label = 262;
      break;
     }
    } else label = 262; while (0);
    if ((label | 0) == 262 ? (label = 0, $805) : 0) break;
    $742 = HEAP32[$0 >> 2] | 0;
    $744 = HEAP32[$742 + 12 >> 2] | 0;
    if (($744 | 0) == (HEAP32[$742 + 16 >> 2] | 0)) $$0$i$i202 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$742 >> 2] | 0) + 36 >> 2] & 127]($742) | 0; else $$0$i$i202 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$744 >> 0] | 0) | 0;
    if ((HEAP8[$704 >> 0] | 0) < 0) $759 = HEAP32[$$0129 >> 2] | 0; else $759 = $$0129;
    if ((HEAP8[$759 + $$0 >> 0] | 0) != ($$0$i$i202 & 255) << 24 >> 24) break;
    $765 = HEAP32[$0 >> 2] | 0;
    $766 = $765 + 12 | 0;
    $767 = HEAP32[$766 >> 2] | 0;
    if (($767 | 0) == (HEAP32[$765 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$765 >> 2] | 0) + 40 >> 2] & 127]($765) | 0; else {
     HEAP32[$766 >> 2] = $767 + 1;
     __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$767 >> 0] | 0) | 0;
    }
    $$0 = $$0 + 1 | 0;
   }
   HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
   $$10 = 0;
   break L326;
  } while (0);
  $776 = HEAP32[$13 >> 2] | 0;
  $777 = HEAP32[$14 >> 2] | 0;
  if (($776 | 0) != ($777 | 0)) {
   HEAP32[$25 >> 2] = 0;
   __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($19, $776, $777, $25);
   if (!(HEAP32[$25 >> 2] | 0)) {
    $$10 = 1;
    break;
   } else {
    HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
    $$10 = 0;
    break;
   }
  } else $$10 = 1;
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
 $783 = HEAP32[$13 >> 2] | 0;
 HEAP32[$13 >> 2] = 0;
 if ($783 | 0) FUNCTION_TABLE_vi[HEAP32[$13 + 4 >> 2] & 255]($783);
 STACKTOP = sp;
 return $$10 | 0;
}

function __ZN6vision25DoGScaleInvariantDetector15extractFeaturesEPKNS_25GaussianScaleSpacePyramidEPKNS_10DoGPyramidE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0750 = 0, $$0752 = 0, $$0753 = 0, $$0754 = 0, $$0756 = 0, $$0757 = 0, $$0759 = 0, $10 = 0, $102 = 0.0, $103 = 0, $105 = 0.0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $187 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $260 = 0.0, $262 = 0, $268 = 0, $272 = 0, $275 = 0, $283 = 0, $288 = 0, $292 = 0, $294 = 0, $3 = 0, $302 = 0, $307 = 0, $31 = 0, $311 = 0, $319 = 0, $32 = 0, $327 = 0, $328 = 0.0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0.0, $34 = 0, $340 = 0.0, $341 = 0.0, $342 = 0.0, $344 = 0, $348 = 0.0, $35 = 0, $350 = 0.0, $351 = 0.0, $352 = 0, $353 = 0, $359 = 0, $36 = 0, $37 = 0, $4 = 0, $40 = 0, $405 = 0.0, $408 = 0.0, $411 = 0.0, $412 = 0.0, $415 = 0.0, $418 = 0.0, $421 = 0.0, $424 = 0.0, $427 = 0.0, $43 = 0, $430 = 0.0, $433 = 0.0, $439 = 0, $485 = 0.0, $488 = 0.0, $491 = 0.0, $492 = 0.0, $495 = 0.0, $498 = 0.0, $501 = 0.0, $504 = 0.0, $507 = 0.0, $51 = 0, $510 = 0.0, $514 = 0.0, $515 = 0, $522 = 0, $526 = 0, $530 = 0, $538 = 0, $543 = 0, $547 = 0, $549 = 0, $557 = 0, $56 = 0, $562 = 0, $566 = 0, $568 = 0, $570 = 0, $571 = 0.0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $580 = 0, $583 = 0.0, $584 = 0.0, $585 = 0.0, $586 = 0.0, $588 = 0, $594 = 0.0, $595 = 0.0, $596 = 0, $597 = 0, $6 = 0, $60 = 0, $603 = 0, $61 = 0, $649 = 0.0, $652 = 0.0, $655 = 0.0, $656 = 0.0, $659 = 0.0, $662 = 0.0, $665 = 0.0, $668 = 0.0, $671 = 0.0, $674 = 0.0, $677 = 0.0, $683 = 0, $69 = 0, $729 = 0.0, $732 = 0.0, $735 = 0.0, $736 = 0.0, $739 = 0.0, $74 = 0, $742 = 0.0, $745 = 0.0, $748 = 0.0, $751 = 0.0, $754 = 0.0, $758 = 0.0, $760 = 0, $78 = 0, $80 = 0, $82 = 0, $83 = 0.0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0.0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0.0, $98 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $3 = sp;
 $4 = $0 + 60 | 0;
 $6 = $0 + 64 | 0;
 HEAP32[$6 >> 2] = HEAP32[$4 >> 2];
 $9 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$0 + 52 >> 2]);
 $10 = $0 + 32 | 0;
 $11 = $3 + 12 | 0;
 $12 = $3 + 16 | 0;
 $13 = $3 + 24 | 0;
 $14 = $3 + 28 | 0;
 $15 = $3 + 4 | 0;
 $16 = $0 + 68 | 0;
 $17 = $3 + 12 | 0;
 $18 = $3 + 16 | 0;
 $19 = $3 + 24 | 0;
 $20 = $3 + 28 | 0;
 $21 = $3 + 4 | 0;
 $22 = $3 + 12 | 0;
 $23 = $3 + 16 | 0;
 $24 = $3 + 24 | 0;
 $25 = $3 + 28 | 0;
 $26 = $3 + 4 | 0;
 $$0750 = 1;
 L1 : while (1) {
  if ($$0750 >>> 0 >= ((__ZNK6vision10DoGPyramid4sizeEv($10) | 0) + -1 | 0) >>> 0) {
   label = 3;
   break;
  }
  $31 = __ZNK6vision10DoGPyramid3getEm($2, $$0750 + -1 | 0) | 0;
  $32 = __ZNK6vision10DoGPyramid3getEm($2, $$0750) | 0;
  $33 = $$0750 + 1 | 0;
  $34 = __ZNK6vision10DoGPyramid3getEm($2, $33) | 0;
  $35 = __ZNK6vision10DoGPyramid15octaveFromIndexEi($2, $$0750) | 0;
  $36 = __ZNK6vision10DoGPyramid14scaleFromIndexEi($2, $$0750) | 0;
  $37 = __ZNK6vision5Image5widthEv($31) | 0;
  L4 : do if (($37 | 0) == (__ZNK6vision5Image5widthEv($32) | 0) ? ($40 = __ZNK6vision5Image5widthEv($31) | 0, ($40 | 0) == (__ZNK6vision5Image5widthEv($34) | 0)) : 0) {
   $43 = __ZNK6vision5Image6heightEv($31) | 0;
   if (($43 | 0) != (__ZNK6vision5Image6heightEv($32) | 0)) {
    label = 7;
    break L1;
   }
   $61 = __ZNK6vision5Image6heightEv($31) | 0;
   if (($61 | 0) != (__ZNK6vision5Image6heightEv($34) | 0)) {
    label = 9;
    break L1;
   }
   $80 = (__ZNK6vision5Image5widthEv($32) | 0) + -1 | 0;
   $82 = (__ZNK6vision5Image6heightEv($32) | 0) + -1 | 0;
   $83 = +($36 | 0);
   $$0752 = 1;
   while (1) {
    if ($$0752 >>> 0 >= $82 >>> 0) break L4;
    $85 = $$0752 + -1 | 0;
    $86 = __ZNK6vision5Image3getIfEEPKT_m($31, $85) | 0;
    $87 = __ZNK6vision5Image3getIfEEPKT_m($31, $$0752) | 0;
    $88 = $$0752 + 1 | 0;
    $89 = __ZNK6vision5Image3getIfEEPKT_m($31, $88) | 0;
    $90 = __ZNK6vision5Image3getIfEEPKT_m($32, $85) | 0;
    $91 = __ZNK6vision5Image3getIfEEPKT_m($32, $$0752) | 0;
    $92 = __ZNK6vision5Image3getIfEEPKT_m($32, $88) | 0;
    $93 = __ZNK6vision5Image3getIfEEPKT_m($34, $85) | 0;
    $94 = __ZNK6vision5Image3getIfEEPKT_m($34, $$0752) | 0;
    $95 = __ZNK6vision5Image3getIfEEPKT_m($34, $88) | 0;
    $96 = +($$0752 >>> 0);
    $$0754 = 1;
    while (1) {
     if ($$0754 >>> 0 >= $80 >>> 0) break;
     $98 = $91 + ($$0754 << 2) | 0;
     do if (!(+__ZN6vision3sqrIfEET_S1_(+HEAPF32[$98 >> 2]) < $9)) {
      $102 = +HEAPF32[$98 >> 2];
      $103 = $$0754 + -1 | 0;
      $105 = +HEAPF32[$86 + ($103 << 2) >> 2];
      do if ((((($102 > $105 ? $102 > +HEAPF32[$86 + ($$0754 << 2) >> 2] : 0) ? ($110 = $$0754 + 1 | 0, $102 > +HEAPF32[$86 + ($110 << 2) >> 2]) : 0) ? $102 > +HEAPF32[$87 + ($103 << 2) >> 2] : 0) ? $102 > +HEAPF32[$87 + ($$0754 << 2) >> 2] : 0) ? $102 > +HEAPF32[$87 + ($110 << 2) >> 2] : 0) {
       if (!($102 > +HEAPF32[$89 + ($103 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$89 + ($$0754 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$89 + ($110 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$90 + ($103 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$90 + ($$0754 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$90 + ($110 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$91 + ($103 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$91 + ($110 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$92 + ($103 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$92 + ($$0754 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$92 + ($110 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$93 + ($103 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$93 + ($$0754 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$93 + ($110 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$94 + ($103 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$94 + ($$0754 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$94 + ($110 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$95 + ($103 << 2) >> 2])) {
        label = 42;
        break;
       }
       if (!($102 > +HEAPF32[$95 + ($$0754 << 2) >> 2])) {
        label = 42;
        break;
       }
       if ($102 > +HEAPF32[$95 + ($110 << 2) >> 2]) {} else label = 42;
      } else label = 42; while (0);
      if ((label | 0) == 42) {
       label = 0;
       if (!($102 < $105)) break;
       if (!($102 < +HEAPF32[$86 + ($$0754 << 2) >> 2])) break;
       $187 = $$0754 + 1 | 0;
       if (!($102 < +HEAPF32[$86 + ($187 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$87 + ($103 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$87 + ($$0754 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$87 + ($187 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$89 + ($103 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$89 + ($$0754 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$89 + ($187 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$90 + ($103 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$90 + ($$0754 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$90 + ($187 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$91 + ($103 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$91 + ($187 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$92 + ($103 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$92 + ($$0754 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$92 + ($187 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$93 + ($103 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$93 + ($$0754 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$93 + ($187 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$94 + ($103 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$94 + ($$0754 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$94 + ($187 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$95 + ($103 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$95 + ($$0754 << 2) >> 2])) break;
       if (!($102 < +HEAPF32[$95 + ($187 << 2) >> 2])) break;
      }
      HEAP32[$11 >> 2] = $35;
      HEAP32[$12 >> 2] = $36;
      HEAPF32[$13 >> 2] = $102;
      $260 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf($1, $35, $83);
      HEAPF32[$14 >> 2] = $260;
      __ZN6vision23bilinear_upsample_pointERfS0_ffi($3, $15, +($$0754 >>> 0), $96, $35);
      $262 = HEAP32[$6 >> 2] | 0;
      if (($262 | 0) == (HEAP32[$16 >> 2] | 0)) {
       __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($4, $3);
       break;
      } else {
       dest = $262;
       src = $3;
       stop = dest + 36 | 0;
       do {
        HEAP32[dest >> 2] = HEAP32[src >> 2];
        dest = dest + 4 | 0;
        src = src + 4 | 0;
       } while ((dest | 0) < (stop | 0));
       HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 36;
       break;
      }
     } while (0);
     $$0754 = $$0754 + 1 | 0;
    }
    $$0752 = $88;
   }
  } else label = 72; while (0);
  L76 : do if ((label | 0) == 72) {
   label = 0;
   $268 = __ZNK6vision5Image5widthEv($31) | 0;
   if (($268 | 0) == (__ZNK6vision5Image5widthEv($32) | 0) ? ($272 = (__ZNK6vision5Image5widthEv($32) | 0) >>> 1, ($272 | 0) == (__ZNK6vision5Image5widthEv($34) | 0)) : 0) {
    $275 = __ZNK6vision5Image6heightEv($31) | 0;
    if (($275 | 0) != (__ZNK6vision5Image6heightEv($32) | 0)) {
     label = 75;
     break L1;
    }
    $294 = (__ZNK6vision5Image6heightEv($32) | 0) >>> 1;
    if (($294 | 0) != (__ZNK6vision5Image6heightEv($34) | 0)) {
     label = 77;
     break L1;
    }
    $319 = ~~+Math_floor(+((+(((__ZNK6vision5Image5widthEv($34) | 0) + -1 | 0) >>> 0) + -.5) * 2.0 + .5)) >>> 0;
    $327 = ~~+Math_floor(+((+(((__ZNK6vision5Image6heightEv($34) | 0) + -1 | 0) >>> 0) + -.5) * 2.0 + .5)) >>> 0;
    $328 = +($36 | 0);
    $$0756 = 2;
    while (1) {
     if ($$0756 >>> 0 >= $327 >>> 0) break L76;
     $330 = $$0756 + -1 | 0;
     $331 = __ZNK6vision5Image3getIfEEPKT_m($31, $330) | 0;
     $332 = __ZNK6vision5Image3getIfEEPKT_m($31, $$0756) | 0;
     $333 = $$0756 + 1 | 0;
     $334 = __ZNK6vision5Image3getIfEEPKT_m($31, $333) | 0;
     $335 = __ZNK6vision5Image3getIfEEPKT_m($32, $330) | 0;
     $336 = __ZNK6vision5Image3getIfEEPKT_m($32, $$0756) | 0;
     $337 = __ZNK6vision5Image3getIfEEPKT_m($32, $333) | 0;
     $338 = +($$0756 >>> 0);
     $340 = $338 * .5 + -.25;
     $341 = $340 + -.5;
     $342 = $340 + .5;
     $$0757 = 2;
     while (1) {
      if ($$0757 >>> 0 >= $319 >>> 0) break;
      $344 = $336 + ($$0757 << 2) | 0;
      do if (!(+__ZN6vision3sqrIfEET_S1_(+HEAPF32[$344 >> 2]) < $9)) {
       $348 = +($$0757 >>> 0);
       $350 = $348 * .5 + -.25;
       $351 = +HEAPF32[$344 >> 2];
       $352 = $$0757 + -1 | 0;
       $353 = $331 + ($352 << 2) | 0;
       do if ((($351 > +HEAPF32[$353 >> 2] ? $351 > +HEAPF32[$331 + ($$0757 << 2) >> 2] : 0) ? ($359 = $$0757 + 1 | 0, $351 > +HEAPF32[$331 + ($359 << 2) >> 2]) : 0) ? $351 > +HEAPF32[$332 + ($352 << 2) >> 2] : 0) {
        if (!($351 > +HEAPF32[$332 + ($$0757 << 2) >> 2])) {
         label = 110;
         break;
        }
        if (!($351 > +HEAPF32[$332 + ($359 << 2) >> 2])) {
         label = 110;
         break;
        }
        if (!($351 > +HEAPF32[$334 + ($352 << 2) >> 2])) {
         label = 110;
         break;
        }
        if (!($351 > +HEAPF32[$334 + ($$0757 << 2) >> 2])) {
         label = 110;
         break;
        }
        if (!($351 > +HEAPF32[$334 + ($359 << 2) >> 2])) {
         label = 110;
         break;
        }
        if (!($351 > +HEAPF32[$335 + ($352 << 2) >> 2])) {
         label = 110;
         break;
        }
        if (!($351 > +HEAPF32[$335 + ($$0757 << 2) >> 2])) {
         label = 110;
         break;
        }
        if (!($351 > +HEAPF32[$335 + ($359 << 2) >> 2])) {
         label = 110;
         break;
        }
        if (!($351 > +HEAPF32[$336 + ($352 << 2) >> 2])) {
         label = 110;
         break;
        }
        if (!($351 > +HEAPF32[$336 + ($359 << 2) >> 2])) {
         label = 110;
         break;
        }
        if (!($351 > +HEAPF32[$337 + ($352 << 2) >> 2])) {
         label = 110;
         break;
        }
        if (!($351 > +HEAPF32[$337 + ($$0757 << 2) >> 2])) {
         label = 110;
         break;
        }
        if (!($351 > +HEAPF32[$337 + ($359 << 2) >> 2])) {
         label = 110;
         break;
        }
        $405 = $350 + -.5;
        if (!($351 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $405, $341))) {
         label = 110;
         break;
        }
        $408 = +HEAPF32[$344 >> 2];
        if (!($408 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $350, $341))) {
         label = 110;
         break;
        }
        $411 = +HEAPF32[$344 >> 2];
        $412 = $350 + .5;
        if (!($411 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $412, $341))) {
         label = 110;
         break;
        }
        $415 = +HEAPF32[$344 >> 2];
        if (!($415 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $405, $340))) {
         label = 110;
         break;
        }
        $418 = +HEAPF32[$344 >> 2];
        if (!($418 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $350, $340))) {
         label = 110;
         break;
        }
        $421 = +HEAPF32[$344 >> 2];
        if (!($421 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $412, $340))) {
         label = 110;
         break;
        }
        $424 = +HEAPF32[$344 >> 2];
        if (!($424 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $405, $342))) {
         label = 110;
         break;
        }
        $427 = +HEAPF32[$344 >> 2];
        if (!($427 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $350, $342))) {
         label = 110;
         break;
        }
        $430 = +HEAPF32[$344 >> 2];
        if ($430 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $412, $342)) {} else label = 110;
       } else label = 110; while (0);
       if ((label | 0) == 110) {
        label = 0;
        $433 = +HEAPF32[$344 >> 2];
        if (!($433 < +HEAPF32[$353 >> 2])) break;
        if (!($433 < +HEAPF32[$331 + ($$0757 << 2) >> 2])) break;
        $439 = $$0757 + 1 | 0;
        if (!($433 < +HEAPF32[$331 + ($439 << 2) >> 2])) break;
        if (!($433 < +HEAPF32[$332 + ($352 << 2) >> 2])) break;
        if (!($433 < +HEAPF32[$332 + ($$0757 << 2) >> 2])) break;
        if (!($433 < +HEAPF32[$332 + ($439 << 2) >> 2])) break;
        if (!($433 < +HEAPF32[$334 + ($352 << 2) >> 2])) break;
        if (!($433 < +HEAPF32[$334 + ($$0757 << 2) >> 2])) break;
        if (!($433 < +HEAPF32[$334 + ($439 << 2) >> 2])) break;
        if (!($433 < +HEAPF32[$335 + ($352 << 2) >> 2])) break;
        if (!($433 < +HEAPF32[$335 + ($$0757 << 2) >> 2])) break;
        if (!($433 < +HEAPF32[$335 + ($439 << 2) >> 2])) break;
        if (!($433 < +HEAPF32[$336 + ($352 << 2) >> 2])) break;
        if (!($433 < +HEAPF32[$336 + ($439 << 2) >> 2])) break;
        if (!($433 < +HEAPF32[$337 + ($352 << 2) >> 2])) break;
        if (!($433 < +HEAPF32[$337 + ($$0757 << 2) >> 2])) break;
        if (!($433 < +HEAPF32[$337 + ($439 << 2) >> 2])) break;
        $485 = $350 + -.5;
        if (!($433 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $485, $341))) break;
        $488 = +HEAPF32[$344 >> 2];
        if (!($488 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $350, $341))) break;
        $491 = +HEAPF32[$344 >> 2];
        $492 = $350 + .5;
        if (!($491 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $492, $341))) break;
        $495 = +HEAPF32[$344 >> 2];
        if (!($495 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $485, $340))) break;
        $498 = +HEAPF32[$344 >> 2];
        if (!($498 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $350, $340))) break;
        $501 = +HEAPF32[$344 >> 2];
        if (!($501 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $492, $340))) break;
        $504 = +HEAPF32[$344 >> 2];
        if (!($504 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $485, $342))) break;
        $507 = +HEAPF32[$344 >> 2];
        if (!($507 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $350, $342))) break;
        $510 = +HEAPF32[$344 >> 2];
        if (!($510 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $492, $342))) break;
       }
       HEAP32[$17 >> 2] = $35;
       HEAP32[$18 >> 2] = $36;
       HEAP32[$19 >> 2] = HEAP32[$344 >> 2];
       $514 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf($1, $35, $328);
       HEAPF32[$20 >> 2] = $514;
       __ZN6vision23bilinear_upsample_pointERfS0_ffi($3, $21, $348, $338, $35);
       $515 = HEAP32[$6 >> 2] | 0;
       if (($515 | 0) == (HEAP32[$16 >> 2] | 0)) {
        __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($4, $3);
        break;
       } else {
        dest = $515;
        src = $3;
        stop = dest + 36 | 0;
        do {
         HEAP32[dest >> 2] = HEAP32[src >> 2];
         dest = dest + 4 | 0;
         src = src + 4 | 0;
        } while ((dest | 0) < (stop | 0));
        HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 36;
        break;
       }
      } while (0);
      $$0757 = $$0757 + 1 | 0;
     }
     $$0756 = $333;
    }
   }
   $522 = (__ZNK6vision5Image5widthEv($31) | 0) >>> 1;
   if (($522 | 0) == (__ZNK6vision5Image5widthEv($32) | 0) ? ($526 = (__ZNK6vision5Image5widthEv($31) | 0) >>> 1, ($526 | 0) == (__ZNK6vision5Image5widthEv($34) | 0)) : 0) {
    $530 = (__ZNK6vision5Image6heightEv($31) | 0) >>> 1;
    if (($530 | 0) != (__ZNK6vision5Image6heightEv($32) | 0)) {
     label = 144;
     break L1;
    }
    $549 = (__ZNK6vision5Image6heightEv($31) | 0) >>> 1;
    if (($549 | 0) != (__ZNK6vision5Image6heightEv($34) | 0)) {
     label = 146;
     break L1;
    }
    $568 = (__ZNK6vision5Image5widthEv($32) | 0) + -1 | 0;
    $570 = (__ZNK6vision5Image6heightEv($32) | 0) + -1 | 0;
    $571 = +($36 | 0);
    $$0759 = 1;
    while (1) {
     if ($$0759 >>> 0 >= $570 >>> 0) break L76;
     $573 = $$0759 + -1 | 0;
     $574 = __ZNK6vision5Image3getIfEEPKT_m($32, $573) | 0;
     $575 = __ZNK6vision5Image3getIfEEPKT_m($32, $$0759) | 0;
     $576 = $$0759 + 1 | 0;
     $577 = __ZNK6vision5Image3getIfEEPKT_m($32, $576) | 0;
     $578 = __ZNK6vision5Image3getIfEEPKT_m($34, $573) | 0;
     $579 = __ZNK6vision5Image3getIfEEPKT_m($34, $$0759) | 0;
     $580 = __ZNK6vision5Image3getIfEEPKT_m($34, $576) | 0;
     $583 = +($$0759 << 1 >>> 0) + .5;
     $584 = +($$0759 >>> 0);
     $585 = $583 + -2.0;
     $586 = $583 + 2.0;
     $$0753 = 1;
     while (1) {
      if ($$0753 >>> 0 >= $568 >>> 0) break;
      $588 = $575 + ($$0753 << 2) | 0;
      do if (!(+__ZN6vision3sqrIfEET_S1_(+HEAPF32[$588 >> 2]) < $9)) {
       $594 = +($$0753 << 1 >>> 0) + .5;
       $595 = +HEAPF32[$588 >> 2];
       $596 = $$0753 + -1 | 0;
       $597 = $574 + ($596 << 2) | 0;
       do if ((($595 > +HEAPF32[$597 >> 2] ? $595 > +HEAPF32[$574 + ($$0753 << 2) >> 2] : 0) ? ($603 = $$0753 + 1 | 0, $595 > +HEAPF32[$574 + ($603 << 2) >> 2]) : 0) ? $595 > +HEAPF32[$575 + ($596 << 2) >> 2] : 0) {
        if (!($595 > +HEAPF32[$575 + ($603 << 2) >> 2])) {
         label = 179;
         break;
        }
        if (!($595 > +HEAPF32[$577 + ($596 << 2) >> 2])) {
         label = 179;
         break;
        }
        if (!($595 > +HEAPF32[$577 + ($$0753 << 2) >> 2])) {
         label = 179;
         break;
        }
        if (!($595 > +HEAPF32[$577 + ($603 << 2) >> 2])) {
         label = 179;
         break;
        }
        if (!($595 > +HEAPF32[$578 + ($596 << 2) >> 2])) {
         label = 179;
         break;
        }
        if (!($595 > +HEAPF32[$578 + ($$0753 << 2) >> 2])) {
         label = 179;
         break;
        }
        if (!($595 > +HEAPF32[$578 + ($603 << 2) >> 2])) {
         label = 179;
         break;
        }
        if (!($595 > +HEAPF32[$579 + ($596 << 2) >> 2])) {
         label = 179;
         break;
        }
        if (!($595 > +HEAPF32[$579 + ($$0753 << 2) >> 2])) {
         label = 179;
         break;
        }
        if (!($595 > +HEAPF32[$579 + ($603 << 2) >> 2])) {
         label = 179;
         break;
        }
        if (!($595 > +HEAPF32[$580 + ($596 << 2) >> 2])) {
         label = 179;
         break;
        }
        if (!($595 > +HEAPF32[$580 + ($$0753 << 2) >> 2])) {
         label = 179;
         break;
        }
        if (!($595 > +HEAPF32[$580 + ($603 << 2) >> 2])) {
         label = 179;
         break;
        }
        $649 = $594 + -2.0;
        if (!($595 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $649, $585))) {
         label = 179;
         break;
        }
        $652 = +HEAPF32[$588 >> 2];
        if (!($652 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $594, $585))) {
         label = 179;
         break;
        }
        $655 = +HEAPF32[$588 >> 2];
        $656 = $594 + 2.0;
        if (!($655 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $656, $585))) {
         label = 179;
         break;
        }
        $659 = +HEAPF32[$588 >> 2];
        if (!($659 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $649, $583))) {
         label = 179;
         break;
        }
        $662 = +HEAPF32[$588 >> 2];
        if (!($662 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $594, $583))) {
         label = 179;
         break;
        }
        $665 = +HEAPF32[$588 >> 2];
        if (!($665 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $656, $583))) {
         label = 179;
         break;
        }
        $668 = +HEAPF32[$588 >> 2];
        if (!($668 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $649, $586))) {
         label = 179;
         break;
        }
        $671 = +HEAPF32[$588 >> 2];
        if (!($671 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $594, $586))) {
         label = 179;
         break;
        }
        $674 = +HEAPF32[$588 >> 2];
        if ($674 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $656, $586)) {} else label = 179;
       } else label = 179; while (0);
       if ((label | 0) == 179) {
        label = 0;
        $677 = +HEAPF32[$588 >> 2];
        if (!($677 < +HEAPF32[$597 >> 2])) break;
        if (!($677 < +HEAPF32[$574 + ($$0753 << 2) >> 2])) break;
        $683 = $$0753 + 1 | 0;
        if (!($677 < +HEAPF32[$574 + ($683 << 2) >> 2])) break;
        if (!($677 < +HEAPF32[$575 + ($596 << 2) >> 2])) break;
        if (!($677 < +HEAPF32[$575 + ($683 << 2) >> 2])) break;
        if (!($677 < +HEAPF32[$577 + ($596 << 2) >> 2])) break;
        if (!($677 < +HEAPF32[$577 + ($$0753 << 2) >> 2])) break;
        if (!($677 < +HEAPF32[$577 + ($683 << 2) >> 2])) break;
        if (!($677 < +HEAPF32[$578 + ($596 << 2) >> 2])) break;
        if (!($677 < +HEAPF32[$578 + ($$0753 << 2) >> 2])) break;
        if (!($677 < +HEAPF32[$578 + ($683 << 2) >> 2])) break;
        if (!($677 < +HEAPF32[$579 + ($596 << 2) >> 2])) break;
        if (!($677 < +HEAPF32[$579 + ($$0753 << 2) >> 2])) break;
        if (!($677 < +HEAPF32[$579 + ($683 << 2) >> 2])) break;
        if (!($677 < +HEAPF32[$580 + ($596 << 2) >> 2])) break;
        if (!($677 < +HEAPF32[$580 + ($$0753 << 2) >> 2])) break;
        if (!($677 < +HEAPF32[$580 + ($683 << 2) >> 2])) break;
        $729 = $594 + -2.0;
        if (!($677 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $729, $585))) break;
        $732 = +HEAPF32[$588 >> 2];
        if (!($732 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $594, $585))) break;
        $735 = +HEAPF32[$588 >> 2];
        $736 = $594 + 2.0;
        if (!($735 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $736, $585))) break;
        $739 = +HEAPF32[$588 >> 2];
        if (!($739 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $729, $583))) break;
        $742 = +HEAPF32[$588 >> 2];
        if (!($742 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $594, $583))) break;
        $745 = +HEAPF32[$588 >> 2];
        if (!($745 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $736, $583))) break;
        $748 = +HEAPF32[$588 >> 2];
        if (!($748 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $729, $586))) break;
        $751 = +HEAPF32[$588 >> 2];
        if (!($751 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $594, $586))) break;
        $754 = +HEAPF32[$588 >> 2];
        if (!($754 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $736, $586))) break;
       }
       HEAP32[$22 >> 2] = $35;
       HEAP32[$23 >> 2] = $36;
       HEAP32[$24 >> 2] = HEAP32[$588 >> 2];
       $758 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf($1, $35, $571);
       HEAPF32[$25 >> 2] = $758;
       __ZN6vision23bilinear_upsample_pointERfS0_ffi($3, $26, +($$0753 >>> 0), $584, $35);
       $760 = HEAP32[$6 >> 2] | 0;
       if (($760 | 0) == (HEAP32[$16 >> 2] | 0)) {
        __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($4, $3);
        break;
       } else {
        dest = $760;
        src = $3;
        stop = dest + 36 | 0;
        do {
         HEAP32[dest >> 2] = HEAP32[src >> 2];
         dest = dest + 4 | 0;
         src = src + 4 | 0;
        } while ((dest | 0) < (stop | 0));
        HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 36;
        break;
       }
      } while (0);
      $$0753 = $$0753 + 1 | 0;
     }
     $$0759 = $576;
    }
   }
  } while (0);
  $$0750 = $33;
 }
 if ((label | 0) == 3) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 7) {
  $51 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30723) | 0, 26748) | 0, 39072) | 0, 192) | 0, 39079) | 0, 30775) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $51 + (HEAP32[(HEAP32[$51 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $56 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
  $60 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$56 >> 2] | 0) + 28 >> 2] & 127]($56, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($51, $60) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($51) | 0;
  _abort();
 } else if ((label | 0) == 9) {
  $69 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30798) | 0, 26748) | 0, 39072) | 0, 193) | 0, 39079) | 0, 30775) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $69 + (HEAP32[(HEAP32[$69 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $74 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
  $78 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$74 >> 2] | 0) + 28 >> 2] & 127]($74, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($69, $78) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($69) | 0;
  _abort();
 } else if ((label | 0) == 75) {
  $283 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30723) | 0, 26748) | 0, 39072) | 0, 277) | 0, 39079) | 0, 30775) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $283 + (HEAP32[(HEAP32[$283 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $288 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
  $292 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$288 >> 2] | 0) + 28 >> 2] & 127]($288, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($283, $292) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($283) | 0;
  _abort();
 } else if ((label | 0) == 77) {
  $302 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30850) | 0, 26748) | 0, 39072) | 0, 278) | 0, 39079) | 0, 30775) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $302 + (HEAP32[(HEAP32[$302 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $307 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
  $311 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$307 >> 2] | 0) + 28 >> 2] & 127]($307, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($302, $311) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($302) | 0;
  _abort();
 } else if ((label | 0) == 144) {
  $538 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30907) | 0, 26748) | 0, 39072) | 0, 362) | 0, 39079) | 0, 30775) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $538 + (HEAP32[(HEAP32[$538 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $543 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
  $547 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$543 >> 2] | 0) + 28 >> 2] & 127]($543, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($538, $547) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($538) | 0;
  _abort();
 } else if ((label | 0) == 146) {
  $557 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30964) | 0, 26748) | 0, 39072) | 0, 363) | 0, 39079) | 0, 30775) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $557 + (HEAP32[(HEAP32[$557 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $562 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
  $566 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$562 >> 2] | 0) + 28 >> 2] & 127]($562, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($557, $566) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($557) | 0;
  _abort();
 }
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i162 = 0, $$0$i$i$i$i207 = 0, $$0$i$i$i$i220 = 0, $$0$i$i$i$i236 = 0, $$0$i$i$i$i251 = 0, $$0$i$i$i$i266 = 0, $$0$i$i149 = 0, $$0$i$i151 = 0, $$0$i$i154 = 0, $$0$i$i157 = 0, $$0$i$i160 = 0, $$0$i$i161 = 0, $$0$i$i174 = 0, $$0$i$i176 = 0, $$0$i$i182 = 0, $$0$i$i189 = 0, $$0$i$i194 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i168 = 0, $$0$i$i2$i$i213 = 0, $$0$i$i2$i$i226 = 0, $$0$i$i2$i$i242 = 0, $$0$i$i2$i$i257 = 0, $$0$i$i2$i$i272 = 0, $$0$i$i203 = 0, $$0$i$i232 = 0, $$0$i$i248 = 0, $$0$i$i263 = 0, $$0$i$i278 = 0, $$0$i$i280 = 0, $$0126 = 0, $$0131 = 0, $$0133 = 0, $$10 = 0, $$1132 = 0, $$2128$ph = 0, $$pre$phiZ2D = 0, $$sroa$0289$0$ptr = 0, $$sroa$0309$0 = 0, $$sroa$0309$1 = 0, $$sroa$08$0$ptr$i = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $12 = 0, $123 = 0, $126 = 0, $13 = 0, $139 = 0, $14 = 0, $141 = 0, $15 = 0, $153 = 0, $155 = 0, $16 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $18 = 0, $182 = 0, $186 = 0, $187 = 0, $19 = 0, $191 = 0, $194 = 0, $196 = 0, $198 = 0, $20 = 0, $201 = 0, $21 = 0, $214 = 0, $215 = 0, $216 = 0, $22 = 0, $225 = 0, $23 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $248 = 0, $25 = 0, $266 = 0, $267 = 0, $268 = 0, $271 = 0, $277 = 0, $295 = 0, $296 = 0, $297 = 0, $306 = 0, $320 = 0, $322 = 0, $325 = 0, $327 = 0, $329 = 0, $334 = 0, $335 = 0, $339 = 0, $342 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $357 = 0, $358 = 0, $359 = 0, $360 = 0, $361 = 0, $365 = 0, $366 = 0, $370 = 0, $376 = 0, $377 = 0, $381 = 0, $385 = 0, $388 = 0, $401 = 0, $403 = 0, $41 = 0, $415 = 0, $417 = 0, $42 = 0, $429 = 0, $430 = 0, $431 = 0, $44 = 0, $441 = 0, $442 = 0, $45 = 0, $452 = 0, $455 = 0, $46 = 0, $468 = 0, $47 = 0, $470 = 0, $482 = 0, $484 = 0, $49 = 0, $498 = 0, $502 = 0, $504 = 0, $51 = 0, $513 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $53 = 0, $530 = 0, $536 = 0, $539 = 0, $542 = 0, $55 = 0, $555 = 0, $557 = 0, $56 = 0, $569 = 0, $571 = 0, $58 = 0, $585 = 0, $586 = 0, $587 = 0, $598 = 0, $601 = 0, $61 = 0, $614 = 0, $616 = 0, $628 = 0, $630 = 0, $649 = 0, $651 = 0, $661 = 0, $665 = 0, $666 = 0, $667 = 0, $684 = 0, $685 = 0, $686 = 0, $691 = 0, $692 = 0, $695 = 0, $707 = 0, $710 = 0, $722 = 0, $724 = 0, $73 = 0, $738 = 0, $744 = 0, $745 = 0, $746 = 0, $755 = 0, $756 = 0, $76 = 0, $762 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $91 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 $11 = sp + 496 | 0;
 $12 = sp;
 $13 = sp + 488 | 0;
 $14 = sp + 480 | 0;
 $15 = sp + 476 | 0;
 $16 = sp + 500 | 0;
 $17 = sp + 472 | 0;
 $18 = sp + 468 | 0;
 $19 = sp + 456 | 0;
 $20 = sp + 444 | 0;
 $21 = sp + 432 | 0;
 $22 = sp + 420 | 0;
 $23 = sp + 408 | 0;
 $24 = sp + 404 | 0;
 $25 = sp + 400 | 0;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$13 + 4 >> 2] = 214;
 HEAP32[$14 >> 2] = $12;
 HEAP32[$15 >> 2] = $12 + 400;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$19 + 4 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$19 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 $$0$i$i149 = 0;
 while (1) {
  if (($$0$i$i149 | 0) == 3) break;
  HEAP32[$20 + ($$0$i$i149 << 2) >> 2] = 0;
  $$0$i$i149 = $$0$i$i149 + 1 | 0;
 }
 HEAP32[$21 >> 2] = 0;
 HEAP32[$21 + 4 >> 2] = 0;
 HEAP32[$21 + 8 >> 2] = 0;
 $$0$i$i151 = 0;
 while (1) {
  if (($$0$i$i151 | 0) == 3) break;
  HEAP32[$21 + ($$0$i$i151 << 2) >> 2] = 0;
  $$0$i$i151 = $$0$i$i151 + 1 | 0;
 }
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 $$0$i$i154 = 0;
 while (1) {
  if (($$0$i$i154 | 0) == 3) break;
  HEAP32[$22 + ($$0$i$i154 << 2) >> 2] = 0;
  $$0$i$i154 = $$0$i$i154 + 1 | 0;
 }
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 HEAP32[$23 + 8 >> 2] = 0;
 $$0$i$i157 = 0;
 while (1) {
  if (($$0$i$i157 | 0) == 3) break;
  HEAP32[$23 + ($$0$i$i157 << 2) >> 2] = 0;
  $$0$i$i157 = $$0$i$i157 + 1 | 0;
 }
 __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($2, $3, $16, $17, $18, $19, $20, $21, $22, $24);
 HEAP32[$9 >> 2] = HEAP32[$8 >> 2];
 $41 = $21 + 8 + 3 | 0;
 $42 = $21 + 4 | 0;
 $44 = $22 + 8 + 3 | 0;
 $45 = $22 + 4 | 0;
 $46 = $19 + 11 | 0;
 $47 = $19 + 4 | 0;
 $49 = ($4 & 512 | 0) != 0;
 $51 = $20 + 8 + 3 | 0;
 $52 = $16 + 3 | 0;
 $53 = $20 + 4 | 0;
 $55 = $23 + 8 + 3 | 0;
 $56 = $23 + 4 | 0;
 $$0131 = 0;
 $$0133 = 0;
 L21 : while (1) {
  if ($$0133 >>> 0 >= 4) {
   label = 239;
   break;
  }
  $58 = HEAP32[$0 >> 2] | 0;
  do if ($58) {
   $61 = HEAP32[$58 + 12 >> 2] | 0;
   if (($61 | 0) == (HEAP32[$58 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$58 >> 2] | 0) + 36 >> 2] & 127]($58) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$61 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $766 = 1;
    break;
   } else {
    $766 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } else $766 = 1; while (0);
  $73 = HEAP32[$1 >> 2] | 0;
  do if ($73) {
   $76 = HEAP32[$73 + 12 >> 2] | 0;
   if (($76 | 0) == (HEAP32[$73 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 36 >> 2] & 127]($73) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$76 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($766) {
    $767 = $73;
    break;
   } else {
    label = 239;
    break L21;
   } else {
    HEAP32[$1 >> 2] = 0;
    label = 31;
    break;
   }
  } else label = 31; while (0);
  if ((label | 0) == 31) {
   label = 0;
   if ($766) {
    label = 239;
    break;
   } else $767 = 0;
  }
  L46 : do switch (HEAP8[$16 + $$0133 >> 0] | 0) {
  case 1:
   {
    if (($$0133 | 0) == 3) $$1132 = $$0131; else {
     $91 = HEAP32[$0 >> 2] | 0;
     $93 = HEAP32[$91 + 12 >> 2] | 0;
     if (($93 | 0) == (HEAP32[$91 + 16 >> 2] | 0)) $$0$i$i160 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 36 >> 2] & 127]($91) | 0; else $$0$i$i160 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$93 >> 2] | 0) | 0;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 8192, $$0$i$i160) | 0)) {
      label = 44;
      break L21;
     }
     $107 = HEAP32[$0 >> 2] | 0;
     $108 = $107 + 12 | 0;
     $109 = HEAP32[$108 >> 2] | 0;
     if (($109 | 0) == (HEAP32[$107 + 16 >> 2] | 0)) $$0$i$i161 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$107 >> 2] | 0) + 40 >> 2] & 127]($107) | 0; else {
      HEAP32[$108 >> 2] = $109 + 4;
      $$0$i$i161 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$109 >> 2] | 0) | 0;
     }
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($23, $$0$i$i161);
     label = 46;
    }
    break;
   }
  case 0:
   {
    if (($$0133 | 0) == 3) $$1132 = $$0131; else label = 46;
    break;
   }
  case 3:
   {
    $182 = HEAP8[$41 >> 0] | 0;
    $186 = $182 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $182 & 255;
    $187 = HEAP8[$44 >> 0] | 0;
    $191 = $187 << 24 >> 24 < 0 ? HEAP32[$45 >> 2] | 0 : $187 & 255;
    if (($186 | 0) == (0 - $191 | 0)) $$1132 = $$0131; else {
     $194 = ($186 | 0) == 0;
     $196 = HEAP32[$0 >> 2] | 0;
     $198 = HEAP32[$196 + 12 >> 2] | 0;
     $201 = ($198 | 0) == (HEAP32[$196 + 16 >> 2] | 0);
     if ($194 | ($191 | 0) == 0) {
      if ($201) $$0$i$i182 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$196 >> 2] | 0) + 36 >> 2] & 127]($196) | 0; else $$0$i$i182 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$198 >> 2] | 0) | 0;
      if ($194) {
       if (($$0$i$i182 | 0) != (HEAP32[((HEAP8[$44 >> 0] | 0) < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 2] | 0)) {
        $$1132 = $$0131;
        break L46;
       }
       $237 = HEAP32[$0 >> 2] | 0;
       $238 = $237 + 12 | 0;
       $239 = HEAP32[$238 >> 2] | 0;
       if (($239 | 0) == (HEAP32[$237 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$237 >> 2] | 0) + 40 >> 2] & 127]($237) | 0; else {
        HEAP32[$238 >> 2] = $239 + 4;
        __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$239 >> 2] | 0) | 0;
       }
       HEAP8[$6 >> 0] = 1;
       $248 = HEAP8[$44 >> 0] | 0;
       $$1132 = ($248 << 24 >> 24 < 0 ? HEAP32[$45 >> 2] | 0 : $248 & 255) >>> 0 > 1 ? $22 : $$0131;
       break L46;
      }
      if (($$0$i$i182 | 0) != (HEAP32[((HEAP8[$41 >> 0] | 0) < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 2] | 0)) {
       HEAP8[$6 >> 0] = 1;
       $$1132 = $$0131;
       break L46;
      }
      $214 = HEAP32[$0 >> 2] | 0;
      $215 = $214 + 12 | 0;
      $216 = HEAP32[$215 >> 2] | 0;
      if (($216 | 0) == (HEAP32[$214 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$214 >> 2] | 0) + 40 >> 2] & 127]($214) | 0; else {
       HEAP32[$215 >> 2] = $216 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$216 >> 2] | 0) | 0;
      }
      $225 = HEAP8[$41 >> 0] | 0;
      $$1132 = ($225 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $225 & 255) >>> 0 > 1 ? $21 : $$0131;
      break L46;
     }
     if ($201) $$0$i$i189 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$196 >> 2] | 0) + 36 >> 2] & 127]($196) | 0; else $$0$i$i189 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$198 >> 2] | 0) | 0;
     $266 = HEAP32[$0 >> 2] | 0;
     $267 = $266 + 12 | 0;
     $268 = HEAP32[$267 >> 2] | 0;
     $271 = ($268 | 0) == (HEAP32[$266 + 16 >> 2] | 0);
     if (($$0$i$i189 | 0) == (HEAP32[((HEAP8[$41 >> 0] | 0) < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 2] | 0)) {
      if ($271) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$266 >> 2] | 0) + 40 >> 2] & 127]($266) | 0; else {
       HEAP32[$267 >> 2] = $268 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$268 >> 2] | 0) | 0;
      }
      $277 = HEAP8[$41 >> 0] | 0;
      $$1132 = ($277 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $277 & 255) >>> 0 > 1 ? $21 : $$0131;
      break L46;
     }
     if ($271) $$0$i$i194 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$266 >> 2] | 0) + 36 >> 2] & 127]($266) | 0; else $$0$i$i194 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$268 >> 2] | 0) | 0;
     if (($$0$i$i194 | 0) != (HEAP32[((HEAP8[$44 >> 0] | 0) < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 2] | 0)) {
      label = 103;
      break L21;
     }
     $295 = HEAP32[$0 >> 2] | 0;
     $296 = $295 + 12 | 0;
     $297 = HEAP32[$296 >> 2] | 0;
     if (($297 | 0) == (HEAP32[$295 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$295 >> 2] | 0) + 40 >> 2] & 127]($295) | 0; else {
      HEAP32[$296 >> 2] = $297 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$297 >> 2] | 0) | 0;
     }
     HEAP8[$6 >> 0] = 1;
     $306 = HEAP8[$44 >> 0] | 0;
     $$1132 = ($306 << 24 >> 24 < 0 ? HEAP32[$45 >> 2] | 0 : $306 & 255) >>> 0 > 1 ? $22 : $$0131;
    }
    break;
   }
  case 2:
   {
    if ($$0133 >>> 0 < 2 | ($$0131 | 0) != 0) {
     $325 = HEAP8[$51 >> 0] | 0;
     $327 = HEAP32[$20 >> 2] | 0;
     $329 = $325 << 24 >> 24 < 0 ? $327 : $20;
     if (!$$0133) {
      $$sroa$0309$1 = $329;
      $774 = $327;
      $775 = $325;
     } else {
      $771 = $329;
      $772 = $327;
      $773 = $325;
      label = 108;
     }
    } else {
     if (!($49 | ($$0133 | 0) == 2 & (HEAP8[$52 >> 0] | 0) != 0)) {
      $$1132 = 0;
      break L46;
     }
     $320 = HEAP8[$51 >> 0] | 0;
     $322 = HEAP32[$20 >> 2] | 0;
     $771 = $320 << 24 >> 24 < 0 ? $322 : $20;
     $772 = $322;
     $773 = $320;
     label = 108;
    }
    L108 : do if ((label | 0) == 108) {
     label = 0;
     if ((HEAPU8[$16 + ($$0133 + -1) >> 0] | 0) < 2) {
      $$sroa$0309$0 = $771;
      $335 = $773;
      $339 = $772;
      while (1) {
       $334 = $335 << 24 >> 24 < 0;
       $342 = $$sroa$0309$0;
       if ((($334 ? $339 : $20) + (($334 ? HEAP32[$53 >> 2] | 0 : $335 & 255) << 2) | 0) == ($342 | 0)) {
        $352 = $335;
        $354 = $339;
        break;
       }
       if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 8192, HEAP32[$342 >> 2] | 0) | 0)) {
        label = 112;
        break;
       }
       $$sroa$0309$0 = $342 + 4 | 0;
       $335 = HEAP8[$51 >> 0] | 0;
       $339 = HEAP32[$20 >> 2] | 0;
      }
      if ((label | 0) == 112) {
       label = 0;
       $352 = HEAP8[$51 >> 0] | 0;
       $354 = HEAP32[$20 >> 2] | 0;
      }
      $353 = $352 << 24 >> 24 < 0 ? $354 : $20;
      $355 = $353;
      $357 = $$sroa$0309$0 - $355 >> 2;
      $358 = HEAP8[$55 >> 0] | 0;
      $359 = $358 << 24 >> 24 < 0;
      $360 = HEAP32[$56 >> 2] | 0;
      $361 = $358 & 255;
      if ($357 >>> 0 > ($359 ? $360 : $361) >>> 0) {
       $$sroa$0309$1 = $355;
       $774 = $354;
       $775 = $352;
      } else {
       $365 = (HEAP32[$23 >> 2] | 0) + ($360 << 2) | 0;
       $366 = $23 + ($361 << 2) | 0;
       $$pre$phiZ2D = $359 ? $365 : $366;
       $$sroa$08$0$ptr$i = $353;
       $370 = ($359 ? $365 : $366) + (0 - $357 << 2) | 0;
       while (1) {
        if (($370 | 0) == ($$pre$phiZ2D | 0)) {
         $$sroa$0309$1 = $$sroa$0309$0;
         $774 = $354;
         $775 = $352;
         break L108;
        }
        if ((HEAP32[$370 >> 2] | 0) != (HEAP32[$$sroa$08$0$ptr$i >> 2] | 0)) {
         $$sroa$0309$1 = $355;
         $774 = $354;
         $775 = $352;
         break L108;
        }
        $$sroa$08$0$ptr$i = $$sroa$08$0$ptr$i + 4 | 0;
        $370 = $370 + 4 | 0;
       }
      }
     } else {
      $$sroa$0309$1 = $771;
      $774 = $772;
      $775 = $773;
     }
    } while (0);
    $$sroa$0289$0$ptr = $$sroa$0309$1;
    $377 = $775;
    $381 = $774;
    $401 = $767;
    L124 : while (1) {
     $376 = $377 << 24 >> 24 < 0;
     if (($$sroa$0289$0$ptr | 0) == (($376 ? $381 : $20) + (($376 ? HEAP32[$53 >> 2] | 0 : $377 & 255) << 2) | 0)) break;
     $385 = HEAP32[$0 >> 2] | 0;
     do if ($385) {
      $388 = HEAP32[$385 + 12 >> 2] | 0;
      if (($388 | 0) == (HEAP32[$385 + 16 >> 2] | 0)) $$0$i$i$i$i220 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$385 >> 2] | 0) + 36 >> 2] & 127]($385) | 0; else $$0$i$i$i$i220 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$388 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i220, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $776 = 1;
       break;
      } else {
       $776 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } else $776 = 1; while (0);
     do if ($401) {
      $403 = HEAP32[$401 + 12 >> 2] | 0;
      if (($403 | 0) == (HEAP32[$401 + 16 >> 2] | 0)) $$0$i$i2$i$i226 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$401 >> 2] | 0) + 36 >> 2] & 127]($401) | 0; else $$0$i$i2$i$i226 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$403 >> 2] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i226, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($776) {
       $777 = $401;
       break;
      } else break L124; else {
       HEAP32[$1 >> 2] = 0;
       label = 134;
       break;
      }
     } else label = 134; while (0);
     if ((label | 0) == 134) {
      label = 0;
      if ($776) break; else $777 = 0;
     }
     $415 = HEAP32[$0 >> 2] | 0;
     $417 = HEAP32[$415 + 12 >> 2] | 0;
     if (($417 | 0) == (HEAP32[$415 + 16 >> 2] | 0)) $$0$i$i232 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$415 >> 2] | 0) + 36 >> 2] & 127]($415) | 0; else $$0$i$i232 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$417 >> 2] | 0) | 0;
     if (($$0$i$i232 | 0) != (HEAP32[$$sroa$0289$0$ptr >> 2] | 0)) break;
     $429 = HEAP32[$0 >> 2] | 0;
     $430 = $429 + 12 | 0;
     $431 = HEAP32[$430 >> 2] | 0;
     if (($431 | 0) == (HEAP32[$429 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$429 >> 2] | 0) + 40 >> 2] & 127]($429) | 0; else {
      HEAP32[$430 >> 2] = $431 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$431 >> 2] | 0) | 0;
     }
     $$sroa$0289$0$ptr = $$sroa$0289$0$ptr + 4 | 0;
     $377 = HEAP8[$51 >> 0] | 0;
     $381 = HEAP32[$20 >> 2] | 0;
     $401 = $777;
    }
    if ($49 ? ($441 = HEAP8[$51 >> 0] | 0, $442 = $441 << 24 >> 24 < 0, ($$sroa$0289$0$ptr | 0) != (($442 ? HEAP32[$20 >> 2] | 0 : $20) + (($442 ? HEAP32[$53 >> 2] | 0 : $441 & 255) << 2) | 0)) : 0) {
     label = 146;
     break L21;
    } else $$1132 = $$0131;
    break;
   }
  case 4:
   {
    $$0126 = 0;
    $468 = $767;
    $768 = $767;
    L161 : while (1) {
     $452 = HEAP32[$0 >> 2] | 0;
     do if ($452) {
      $455 = HEAP32[$452 + 12 >> 2] | 0;
      if (($455 | 0) == (HEAP32[$452 + 16 >> 2] | 0)) $$0$i$i$i$i236 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$452 >> 2] | 0) + 36 >> 2] & 127]($452) | 0; else $$0$i$i$i$i236 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$455 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i236, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $778 = 1;
       break;
      } else {
       $778 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } else $778 = 1; while (0);
     do if ($468) {
      $470 = HEAP32[$468 + 12 >> 2] | 0;
      if (($470 | 0) == (HEAP32[$468 + 16 >> 2] | 0)) $$0$i$i2$i$i242 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$468 >> 2] | 0) + 36 >> 2] & 127]($468) | 0; else $$0$i$i2$i$i242 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$470 >> 2] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i242, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($778) {
       $780 = $768;
       $781 = $468;
       break;
      } else {
       $555 = $768;
       break L161;
      } else {
       HEAP32[$1 >> 2] = 0;
       $779 = 0;
       label = 160;
       break;
      }
     } else {
      $779 = $768;
      label = 160;
     } while (0);
     if ((label | 0) == 160) {
      label = 0;
      if ($778) {
       $555 = $779;
       break;
      } else {
       $780 = $779;
       $781 = 0;
      }
     }
     $482 = HEAP32[$0 >> 2] | 0;
     $484 = HEAP32[$482 + 12 >> 2] | 0;
     if (($484 | 0) == (HEAP32[$482 + 16 >> 2] | 0)) $$0$i$i248 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$482 >> 2] | 0) + 36 >> 2] & 127]($482) | 0; else $$0$i$i248 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$484 >> 2] | 0) | 0;
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 2048, $$0$i$i248) | 0) {
      $498 = HEAP32[$9 >> 2] | 0;
      if (($498 | 0) == (HEAP32[$11 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
       $502 = HEAP32[$9 >> 2] | 0;
      } else $502 = $498;
      HEAP32[$9 >> 2] = $502 + 4;
      HEAP32[$502 >> 2] = $$0$i$i248;
      $$2128$ph = $$0126 + 1 | 0;
     } else {
      $504 = HEAP8[$46 >> 0] | 0;
      if (!(($$0$i$i248 | 0) == (HEAP32[$18 >> 2] | 0) & ($$0126 | 0 ? (($504 << 24 >> 24 < 0 ? HEAP32[$47 >> 2] | 0 : $504 & 255) | 0) != 0 : 0))) {
       $555 = $780;
       break;
      }
      $513 = HEAP32[$14 >> 2] | 0;
      if (($513 | 0) == (HEAP32[$15 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
       $517 = HEAP32[$14 >> 2] | 0;
      } else $517 = $513;
      HEAP32[$14 >> 2] = $517 + 4;
      HEAP32[$517 >> 2] = $$0126;
      $$2128$ph = 0;
     }
     $518 = HEAP32[$0 >> 2] | 0;
     $519 = $518 + 12 | 0;
     $520 = HEAP32[$519 >> 2] | 0;
     if (($520 | 0) == (HEAP32[$518 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$518 >> 2] | 0) + 40 >> 2] & 127]($518) | 0; else {
      HEAP32[$519 >> 2] = $520 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$520 >> 2] | 0) | 0;
     }
     $$0126 = $$2128$ph;
     $468 = $781;
     $768 = $780;
    }
    $530 = HEAP32[$14 >> 2] | 0;
    if ($$0126 | 0 ? (HEAP32[$13 >> 2] | 0) != ($530 | 0) : 0) {
     if (($530 | 0) == (HEAP32[$15 >> 2] | 0)) {
      __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
      $536 = HEAP32[$14 >> 2] | 0;
     } else $536 = $530;
     HEAP32[$14 >> 2] = $536 + 4;
     HEAP32[$536 >> 2] = $$0126;
    }
    L211 : do if ((HEAP32[$24 >> 2] | 0) > 0) {
     $539 = HEAP32[$0 >> 2] | 0;
     do if ($539) {
      $542 = HEAP32[$539 + 12 >> 2] | 0;
      if (($542 | 0) == (HEAP32[$539 + 16 >> 2] | 0)) $$0$i$i$i$i251 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$539 >> 2] | 0) + 36 >> 2] & 127]($539) | 0; else $$0$i$i$i$i251 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$542 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i251, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $782 = 1;
       break;
      } else {
       $782 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } else $782 = 1; while (0);
     do if ($555) {
      $557 = HEAP32[$555 + 12 >> 2] | 0;
      if (($557 | 0) == (HEAP32[$555 + 16 >> 2] | 0)) $$0$i$i2$i$i257 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$555 >> 2] | 0) + 36 >> 2] & 127]($555) | 0; else $$0$i$i2$i$i257 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$557 >> 2] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i257, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($782) {
       $783 = $555;
       break;
      } else {
       label = 201;
       break L21;
      } else {
       HEAP32[$1 >> 2] = 0;
       label = 195;
       break;
      }
     } else label = 195; while (0);
     if ((label | 0) == 195) {
      label = 0;
      if ($782) {
       label = 201;
       break L21;
      } else $783 = 0;
     }
     $569 = HEAP32[$0 >> 2] | 0;
     $571 = HEAP32[$569 + 12 >> 2] | 0;
     if (($571 | 0) == (HEAP32[$569 + 16 >> 2] | 0)) $$0$i$i263 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$569 >> 2] | 0) + 36 >> 2] & 127]($569) | 0; else $$0$i$i263 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$571 >> 2] | 0) | 0;
     if (($$0$i$i263 | 0) != (HEAP32[$17 >> 2] | 0)) {
      label = 201;
      break L21;
     }
     $585 = HEAP32[$0 >> 2] | 0;
     $586 = $585 + 12 | 0;
     $587 = HEAP32[$586 >> 2] | 0;
     if (($587 | 0) == (HEAP32[$585 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$585 >> 2] | 0) + 40 >> 2] & 127]($585) | 0; else {
      HEAP32[$586 >> 2] = $587 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$587 >> 2] | 0) | 0;
     }
     $614 = $783;
     while (1) {
      if ((HEAP32[$24 >> 2] | 0) <= 0) break L211;
      $598 = HEAP32[$0 >> 2] | 0;
      do if ($598) {
       $601 = HEAP32[$598 + 12 >> 2] | 0;
       if (($601 | 0) == (HEAP32[$598 + 16 >> 2] | 0)) $$0$i$i$i$i266 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$598 >> 2] | 0) + 36 >> 2] & 127]($598) | 0; else $$0$i$i$i$i266 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$601 >> 2] | 0) | 0;
       if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i266, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
        HEAP32[$0 >> 2] = 0;
        $784 = 1;
        break;
       } else {
        $784 = (HEAP32[$0 >> 2] | 0) == 0;
        break;
       }
      } else $784 = 1; while (0);
      do if ($614) {
       $616 = HEAP32[$614 + 12 >> 2] | 0;
       if (($616 | 0) == (HEAP32[$614 + 16 >> 2] | 0)) $$0$i$i2$i$i272 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$614 >> 2] | 0) + 36 >> 2] & 127]($614) | 0; else $$0$i$i2$i$i272 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$616 >> 2] | 0) | 0;
       if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i272, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($784) {
        $785 = $614;
        break;
       } else {
        label = 226;
        break L21;
       } else {
        HEAP32[$1 >> 2] = 0;
        label = 220;
        break;
       }
      } else label = 220; while (0);
      if ((label | 0) == 220) {
       label = 0;
       if ($784) {
        label = 226;
        break L21;
       } else $785 = 0;
      }
      $628 = HEAP32[$0 >> 2] | 0;
      $630 = HEAP32[$628 + 12 >> 2] | 0;
      if (($630 | 0) == (HEAP32[$628 + 16 >> 2] | 0)) $$0$i$i278 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$628 >> 2] | 0) + 36 >> 2] & 127]($628) | 0; else $$0$i$i278 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$630 >> 2] | 0) | 0;
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 2048, $$0$i$i278) | 0)) {
       label = 226;
       break L21;
      }
      if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$11 >> 2] | 0)) __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
      $649 = HEAP32[$0 >> 2] | 0;
      $651 = HEAP32[$649 + 12 >> 2] | 0;
      if (($651 | 0) == (HEAP32[$649 + 16 >> 2] | 0)) $$0$i$i280 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$649 >> 2] | 0) + 36 >> 2] & 127]($649) | 0; else $$0$i$i280 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$651 >> 2] | 0) | 0;
      $661 = HEAP32[$9 >> 2] | 0;
      HEAP32[$9 >> 2] = $661 + 4;
      HEAP32[$661 >> 2] = $$0$i$i280;
      HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + -1;
      $665 = HEAP32[$0 >> 2] | 0;
      $666 = $665 + 12 | 0;
      $667 = HEAP32[$666 >> 2] | 0;
      if (($667 | 0) == (HEAP32[$665 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$665 >> 2] | 0) + 40 >> 2] & 127]($665) | 0; else {
       HEAP32[$666 >> 2] = $667 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$667 >> 2] | 0) | 0;
      }
      $614 = $785;
     }
    } while (0);
    if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$8 >> 2] | 0)) {
     label = 237;
     break L21;
    } else $$1132 = $$0131;
    break;
   }
  default:
   $$1132 = $$0131;
  } while (0);
  L286 : do if ((label | 0) == 46) {
   label = 0;
   $139 = $767;
   while (1) {
    $123 = HEAP32[$0 >> 2] | 0;
    do if ($123) {
     $126 = HEAP32[$123 + 12 >> 2] | 0;
     if (($126 | 0) == (HEAP32[$123 + 16 >> 2] | 0)) $$0$i$i$i$i162 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$123 >> 2] | 0) + 36 >> 2] & 127]($123) | 0; else $$0$i$i$i$i162 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$126 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i162, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[$0 >> 2] = 0;
      $769 = 1;
      break;
     } else {
      $769 = (HEAP32[$0 >> 2] | 0) == 0;
      break;
     }
    } else $769 = 1; while (0);
    do if ($139) {
     $141 = HEAP32[$139 + 12 >> 2] | 0;
     if (($141 | 0) == (HEAP32[$139 + 16 >> 2] | 0)) $$0$i$i2$i$i168 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$139 >> 2] | 0) + 36 >> 2] & 127]($139) | 0; else $$0$i$i2$i$i168 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$141 >> 2] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i168, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($769) {
      $770 = $139;
      break;
     } else {
      $$1132 = $$0131;
      break L286;
     } else {
      HEAP32[$1 >> 2] = 0;
      label = 60;
      break;
     }
    } else label = 60; while (0);
    if ((label | 0) == 60) {
     label = 0;
     if ($769) {
      $$1132 = $$0131;
      break L286;
     } else $770 = 0;
    }
    $153 = HEAP32[$0 >> 2] | 0;
    $155 = HEAP32[$153 + 12 >> 2] | 0;
    if (($155 | 0) == (HEAP32[$153 + 16 >> 2] | 0)) $$0$i$i174 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$153 >> 2] | 0) + 36 >> 2] & 127]($153) | 0; else $$0$i$i174 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$155 >> 2] | 0) | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 8192, $$0$i$i174) | 0)) {
     $$1132 = $$0131;
     break L286;
    }
    $169 = HEAP32[$0 >> 2] | 0;
    $170 = $169 + 12 | 0;
    $171 = HEAP32[$170 >> 2] | 0;
    if (($171 | 0) == (HEAP32[$169 + 16 >> 2] | 0)) $$0$i$i176 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$169 >> 2] | 0) + 40 >> 2] & 127]($169) | 0; else {
     HEAP32[$170 >> 2] = $171 + 4;
     $$0$i$i176 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$171 >> 2] | 0) | 0;
    }
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($23, $$0$i$i176);
    $139 = $770;
   }
  } while (0);
  $$0131 = $$1132;
  $$0133 = $$0133 + 1 | 0;
 }
 L322 : do if ((label | 0) == 44) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 103) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 146) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 201) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 226) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 237) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 239) {
  L324 : do if ($$0131 | 0) {
   $684 = $$0131 + 8 + 3 | 0;
   $685 = $$0131 + 4 | 0;
   $$0 = 1;
   L326 : while (1) {
    $686 = HEAP8[$684 >> 0] | 0;
    if ($686 << 24 >> 24 < 0) $691 = HEAP32[$685 >> 2] | 0; else $691 = $686 & 255;
    if ($$0 >>> 0 >= $691 >>> 0) break L324;
    $692 = HEAP32[$0 >> 2] | 0;
    do if ($692) {
     $695 = HEAP32[$692 + 12 >> 2] | 0;
     if (($695 | 0) == (HEAP32[$692 + 16 >> 2] | 0)) $$0$i$i$i$i207 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$692 >> 2] | 0) + 36 >> 2] & 127]($692) | 0; else $$0$i$i$i$i207 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$695 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i207, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[$0 >> 2] = 0;
      $786 = 1;
      break;
     } else {
      $786 = (HEAP32[$0 >> 2] | 0) == 0;
      break;
     }
    } else $786 = 1; while (0);
    $707 = HEAP32[$1 >> 2] | 0;
    do if ($707) {
     $710 = HEAP32[$707 + 12 >> 2] | 0;
     if (($710 | 0) == (HEAP32[$707 + 16 >> 2] | 0)) $$0$i$i2$i$i213 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$707 >> 2] | 0) + 36 >> 2] & 127]($707) | 0; else $$0$i$i2$i$i213 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$710 >> 2] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i213, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($786) break; else break L326; else {
      HEAP32[$1 >> 2] = 0;
      label = 258;
      break;
     }
    } else label = 258; while (0);
    if ((label | 0) == 258 ? (label = 0, $786) : 0) break;
    $722 = HEAP32[$0 >> 2] | 0;
    $724 = HEAP32[$722 + 12 >> 2] | 0;
    if (($724 | 0) == (HEAP32[$722 + 16 >> 2] | 0)) $$0$i$i203 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$722 >> 2] | 0) + 36 >> 2] & 127]($722) | 0; else $$0$i$i203 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$724 >> 2] | 0) | 0;
    if ((HEAP8[$684 >> 0] | 0) < 0) $738 = HEAP32[$$0131 >> 2] | 0; else $738 = $$0131;
    if (($$0$i$i203 | 0) != (HEAP32[$738 + ($$0 << 2) >> 2] | 0)) break;
    $744 = HEAP32[$0 >> 2] | 0;
    $745 = $744 + 12 | 0;
    $746 = HEAP32[$745 >> 2] | 0;
    if (($746 | 0) == (HEAP32[$744 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$744 >> 2] | 0) + 40 >> 2] & 127]($744) | 0; else {
     HEAP32[$745 >> 2] = $746 + 4;
     __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$746 >> 2] | 0) | 0;
    }
    $$0 = $$0 + 1 | 0;
   }
   HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
   $$10 = 0;
   break L322;
  } while (0);
  $755 = HEAP32[$13 >> 2] | 0;
  $756 = HEAP32[$14 >> 2] | 0;
  if (($755 | 0) != ($756 | 0)) {
   HEAP32[$25 >> 2] = 0;
   __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($19, $755, $756, $25);
   if (!(HEAP32[$25 >> 2] | 0)) {
    $$10 = 1;
    break;
   } else {
    HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
    $$10 = 0;
    break;
   }
  } else $$10 = 1;
 } while (0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($23);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($22);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($21);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($20);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
 $762 = HEAP32[$13 >> 2] | 0;
 HEAP32[$13 >> 2] = 0;
 if ($762 | 0) FUNCTION_TABLE_vi[HEAP32[$13 + 4 >> 2] & 255]($762);
 STACKTOP = sp;
 return $$10 | 0;
}
function _jpeg_make_d_derived_tbl($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0122157 = 0, $$0124135$us = 0, $$0124135$us$1 = 0, $$0125134$us = 0, $$0125134$us$1 = 0, $$0129155 = 0, $$1$lcssa = 0, $$1$lcssa$1 = 0, $$1$lcssa$10 = 0, $$1$lcssa$11 = 0, $$1$lcssa$12 = 0, $$1$lcssa$13 = 0, $$1$lcssa$14 = 0, $$1$lcssa$15 = 0, $$1$lcssa$2 = 0, $$1$lcssa$3 = 0, $$1$lcssa$4 = 0, $$1$lcssa$5 = 0, $$1$lcssa$6 = 0, $$1$lcssa$7 = 0, $$1$lcssa$8 = 0, $$1$lcssa$9 = 0, $$1123$lcssa = 0, $$1123148 = 0, $$1127137$us = 0, $$1127137$us$1 = 0, $$1127137$us$2 = 0, $$1127137$us$3 = 0, $$1127137$us$4 = 0, $$1127137$us$5 = 0, $$1127137$us$6 = 0, $$1127137$us$7 = 0, $$2128133 = 0, $$2158 = 0, $$3$lcssa = 0, $$3149 = 0, $$5 = 0, $$5$1 = 0, $$5$10 = 0, $$5$11 = 0, $$5$12 = 0, $$5$13 = 0, $$5$14 = 0, $$5$2 = 0, $$5$3 = 0, $$5$4 = 0, $$5$5 = 0, $$5$6 = 0, $$5$7 = 0, $$5$8 = 0, $$5$9 = 0, $$7$lcssa = 0, $$7$lcssa$1 = 0, $$7$lcssa$2 = 0, $$7$lcssa$3 = 0, $$7$lcssa$4 = 0, $$7$lcssa$5 = 0, $$7$lcssa$6 = 0, $$7138$us = 0, $$7138$us$1 = 0, $$7138$us$2 = 0, $$7138$us$3 = 0, $$7138$us$4 = 0, $$7138$us$5 = 0, $$7138$us$6 = 0, $$7138$us$7 = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink$1 = 0, $$sink$10 = 0, $$sink$11 = 0, $$sink$12 = 0, $$sink$13 = 0, $$sink$14 = 0, $$sink$15 = 0, $$sink$2 = 0, $$sink$3 = 0, $$sink$4 = 0, $$sink$5 = 0, $$sink$6 = 0, $$sink$7 = 0, $$sink$8 = 0, $$sink$9 = 0, $104 = 0, $112 = 0, $116 = 0, $12 = 0, $121 = 0, $122 = 0, $126 = 0, $130 = 0, $134 = 0, $138 = 0, $142 = 0, $146 = 0, $15 = 0, $150 = 0, $154 = 0, $158 = 0, $162 = 0, $166 = 0, $17 = 0, $170 = 0, $174 = 0, $178 = 0, $182 = 0, $186 = 0, $190 = 0, $194 = 0, $198 = 0, $202 = 0, $206 = 0, $210 = 0, $214 = 0, $218 = 0, $22 = 0, $222 = 0, $226 = 0, $230 = 0, $234 = 0, $238 = 0, $242 = 0, $246 = 0, $251 = 0, $255 = 0, $260 = 0, $261 = 0, $265 = 0, $269 = 0, $27 = 0, $273 = 0, $277 = 0, $281 = 0, $285 = 0, $289 = 0, $29 = 0, $293 = 0, $297 = 0, $301 = 0, $305 = 0, $309 = 0, $31 = 0, $313 = 0, $317 = 0, $32 = 0, $321 = 0, $326 = 0, $330 = 0, $335 = 0, $336 = 0, $340 = 0, $344 = 0, $348 = 0, $35 = 0, $352 = 0, $356 = 0, $36 = 0, $360 = 0, $364 = 0, $369 = 0, $37 = 0, $373 = 0, $378 = 0, $379 = 0, $383 = 0, $387 = 0, $391 = 0, $396 = 0, $4 = 0, $40 = 0, $400 = 0, $405 = 0, $406 = 0, $410 = 0, $415 = 0, $419 = 0, $42 = 0, $423 = 0, $44 = 0, $440 = 0, $445 = 0, $454 = 0, $459 = 0, $46 = 0, $468 = 0, $473 = 0, $48 = 0, $482 = 0, $487 = 0, $496 = 0, $5 = 0, $501 = 0, $510 = 0, $515 = 0, $524 = 0, $529 = 0, $53 = 0, $538 = 0, $543 = 0, $552 = 0, $557 = 0, $566 = 0, $571 = 0, $580 = 0, $585 = 0, $59 = 0, $594 = 0, $599 = 0, $60 = 0, $608 = 0, $613 = 0, $622 = 0, $627 = 0, $645 = 0, $650 = 0, $651 = 0, $652 = 0, $654 = 0, $659 = 0, $660 = 0, $661 = 0, $663 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $672 = 0, $677 = 0, $678 = 0, $679 = 0, $681 = 0, $686 = 0, $687 = 0, $688 = 0, $690 = 0, $695 = 0, $696 = 0, $697 = 0, $699 = 0, $7 = 0, $704 = 0, $705 = 0, $706 = 0, $708 = 0, $713 = 0, $714 = 0, $715 = 0, $717 = 0, $72 = 0, $722 = 0, $723 = 0, $724 = 0, $726 = 0, $731 = 0, $732 = 0, $733 = 0, $735 = 0, $740 = 0, $741 = 0, $742 = 0, $744 = 0, $749 = 0, $750 = 0, $751 = 0, $753 = 0, $758 = 0, $759 = 0, $760 = 0, $762 = 0, $767 = 0, $768 = 0, $769 = 0, $771 = 0, $78 = 0, $86 = 0, $88 = 0, $91 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1312 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1312);
 $4 = sp + 1040 | 0;
 $5 = sp;
 if ($2 >>> 0 > 3) {
  $7 = HEAP32[$0 >> 2] | 0;
  HEAP32[$7 + 20 >> 2] = 52;
  HEAP32[$7 + 24 >> 2] = $2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $12 = ($1 | 0) != 0;
 $15 = HEAP32[($12 ? $0 + 180 + ($2 << 2) | 0 : $0 + 196 + ($2 << 2) | 0) >> 2] | 0;
 if (!$15) {
  $17 = HEAP32[$0 >> 2] | 0;
  HEAP32[$17 + 20 >> 2] = 52;
  HEAP32[$17 + 24 >> 2] = $2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $22 = HEAP32[$3 >> 2] | 0;
 if (!$22) {
  $27 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, 1424) | 0;
  HEAP32[$3 >> 2] = $27;
  $$pre$phiZ2D = $0;
  $29 = $27;
 } else {
  $$pre$phiZ2D = $0;
  $29 = $22;
 }
 HEAP32[$29 + 140 >> 2] = $15;
 $31 = HEAP8[$15 + 1 >> 0] | 0;
 $32 = $31 & 255;
 if (!($31 << 24 >> 24)) $$1$lcssa = 0; else {
  _memset($4 | 0, 1, $32 | 0) | 0;
  $$1$lcssa = $32;
 }
 $35 = HEAP8[$15 + 2 >> 0] | 0;
 $36 = $35 & 255;
 $37 = $$1$lcssa + $36 | 0;
 if ($37 >>> 0 > 256) {
  $645 = HEAP32[$0 >> 2] | 0;
  HEAP32[$645 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$645 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($35 << 24 >> 24)) $$1$lcssa$1 = $$1$lcssa; else {
  _memset($4 + $$1$lcssa | 0, 2, $36 | 0) | 0;
  $$1$lcssa$1 = $37;
 }
 $650 = HEAP8[$15 + 3 >> 0] | 0;
 $651 = $650 & 255;
 $652 = $$1$lcssa$1 + $651 | 0;
 if (($652 | 0) > 256) {
  $654 = HEAP32[$0 >> 2] | 0;
  HEAP32[$654 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$654 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($650 << 24 >> 24)) $$1$lcssa$2 = $$1$lcssa$1; else {
  _memset($4 + $$1$lcssa$1 | 0, 3, $651 | 0) | 0;
  $$1$lcssa$2 = $652;
 }
 $659 = HEAP8[$15 + 4 >> 0] | 0;
 $660 = $659 & 255;
 $661 = $$1$lcssa$2 + $660 | 0;
 if (($661 | 0) > 256) {
  $663 = HEAP32[$0 >> 2] | 0;
  HEAP32[$663 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$663 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($659 << 24 >> 24)) $$1$lcssa$3 = $$1$lcssa$2; else {
  _memset($4 + $$1$lcssa$2 | 0, 4, $660 | 0) | 0;
  $$1$lcssa$3 = $661;
 }
 $668 = HEAP8[$15 + 5 >> 0] | 0;
 $669 = $668 & 255;
 $670 = $$1$lcssa$3 + $669 | 0;
 if (($670 | 0) > 256) {
  $672 = HEAP32[$0 >> 2] | 0;
  HEAP32[$672 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$672 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($668 << 24 >> 24)) $$1$lcssa$4 = $$1$lcssa$3; else {
  _memset($4 + $$1$lcssa$3 | 0, 5, $669 | 0) | 0;
  $$1$lcssa$4 = $670;
 }
 $677 = HEAP8[$15 + 6 >> 0] | 0;
 $678 = $677 & 255;
 $679 = $$1$lcssa$4 + $678 | 0;
 if (($679 | 0) > 256) {
  $681 = HEAP32[$0 >> 2] | 0;
  HEAP32[$681 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$681 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($677 << 24 >> 24)) $$1$lcssa$5 = $$1$lcssa$4; else {
  _memset($4 + $$1$lcssa$4 | 0, 6, $678 | 0) | 0;
  $$1$lcssa$5 = $679;
 }
 $686 = HEAP8[$15 + 7 >> 0] | 0;
 $687 = $686 & 255;
 $688 = $$1$lcssa$5 + $687 | 0;
 if (($688 | 0) > 256) {
  $690 = HEAP32[$0 >> 2] | 0;
  HEAP32[$690 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$690 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($686 << 24 >> 24)) $$1$lcssa$6 = $$1$lcssa$5; else {
  _memset($4 + $$1$lcssa$5 | 0, 7, $687 | 0) | 0;
  $$1$lcssa$6 = $688;
 }
 $695 = HEAP8[$15 + 8 >> 0] | 0;
 $696 = $695 & 255;
 $697 = $$1$lcssa$6 + $696 | 0;
 if (($697 | 0) > 256) {
  $699 = HEAP32[$0 >> 2] | 0;
  HEAP32[$699 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$699 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($695 << 24 >> 24)) $$1$lcssa$7 = $$1$lcssa$6; else {
  _memset($4 + $$1$lcssa$6 | 0, 8, $696 | 0) | 0;
  $$1$lcssa$7 = $697;
 }
 $704 = HEAP8[$15 + 9 >> 0] | 0;
 $705 = $704 & 255;
 $706 = $$1$lcssa$7 + $705 | 0;
 if (($706 | 0) > 256) {
  $708 = HEAP32[$0 >> 2] | 0;
  HEAP32[$708 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$708 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($704 << 24 >> 24)) $$1$lcssa$8 = $$1$lcssa$7; else {
  _memset($4 + $$1$lcssa$7 | 0, 9, $705 | 0) | 0;
  $$1$lcssa$8 = $706;
 }
 $713 = HEAP8[$15 + 10 >> 0] | 0;
 $714 = $713 & 255;
 $715 = $$1$lcssa$8 + $714 | 0;
 if (($715 | 0) > 256) {
  $717 = HEAP32[$0 >> 2] | 0;
  HEAP32[$717 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$717 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($713 << 24 >> 24)) $$1$lcssa$9 = $$1$lcssa$8; else {
  _memset($4 + $$1$lcssa$8 | 0, 10, $714 | 0) | 0;
  $$1$lcssa$9 = $715;
 }
 $722 = HEAP8[$15 + 11 >> 0] | 0;
 $723 = $722 & 255;
 $724 = $$1$lcssa$9 + $723 | 0;
 if (($724 | 0) > 256) {
  $726 = HEAP32[$0 >> 2] | 0;
  HEAP32[$726 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$726 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($722 << 24 >> 24)) $$1$lcssa$10 = $$1$lcssa$9; else {
  _memset($4 + $$1$lcssa$9 | 0, 11, $723 | 0) | 0;
  $$1$lcssa$10 = $724;
 }
 $731 = HEAP8[$15 + 12 >> 0] | 0;
 $732 = $731 & 255;
 $733 = $$1$lcssa$10 + $732 | 0;
 if (($733 | 0) > 256) {
  $735 = HEAP32[$0 >> 2] | 0;
  HEAP32[$735 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$735 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($731 << 24 >> 24)) $$1$lcssa$11 = $$1$lcssa$10; else {
  _memset($4 + $$1$lcssa$10 | 0, 12, $732 | 0) | 0;
  $$1$lcssa$11 = $733;
 }
 $740 = HEAP8[$15 + 13 >> 0] | 0;
 $741 = $740 & 255;
 $742 = $$1$lcssa$11 + $741 | 0;
 if (($742 | 0) > 256) {
  $744 = HEAP32[$0 >> 2] | 0;
  HEAP32[$744 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$744 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($740 << 24 >> 24)) $$1$lcssa$12 = $$1$lcssa$11; else {
  _memset($4 + $$1$lcssa$11 | 0, 13, $741 | 0) | 0;
  $$1$lcssa$12 = $742;
 }
 $749 = HEAP8[$15 + 14 >> 0] | 0;
 $750 = $749 & 255;
 $751 = $$1$lcssa$12 + $750 | 0;
 if (($751 | 0) > 256) {
  $753 = HEAP32[$0 >> 2] | 0;
  HEAP32[$753 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$753 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($749 << 24 >> 24)) $$1$lcssa$13 = $$1$lcssa$12; else {
  _memset($4 + $$1$lcssa$12 | 0, 14, $750 | 0) | 0;
  $$1$lcssa$13 = $751;
 }
 $758 = HEAP8[$15 + 15 >> 0] | 0;
 $759 = $758 & 255;
 $760 = $$1$lcssa$13 + $759 | 0;
 if (($760 | 0) > 256) {
  $762 = HEAP32[$0 >> 2] | 0;
  HEAP32[$762 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$762 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($758 << 24 >> 24)) $$1$lcssa$14 = $$1$lcssa$13; else {
  _memset($4 + $$1$lcssa$13 | 0, 15, $759 | 0) | 0;
  $$1$lcssa$14 = $760;
 }
 $767 = HEAP8[$15 + 16 >> 0] | 0;
 $768 = $767 & 255;
 $769 = $$1$lcssa$14 + $768 | 0;
 if (($769 | 0) > 256) {
  $771 = HEAP32[$0 >> 2] | 0;
  HEAP32[$771 + 20 >> 2] = 9;
  FUNCTION_TABLE_vi[HEAP32[$771 >> 2] & 255]($$pre$phiZ2D);
 }
 if (!($767 << 24 >> 24)) $$1$lcssa$15 = $$1$lcssa$14; else {
  _memset($4 + $$1$lcssa$14 | 0, 16, $768 | 0) | 0;
  $$1$lcssa$15 = $769;
 }
 HEAP8[$4 + $$1$lcssa$15 >> 0] = 0;
 $40 = HEAP8[$4 >> 0] | 0;
 if ($40 << 24 >> 24) {
  $$0122157 = 0;
  $$0129155 = $40 << 24 >> 24;
  $$2158 = 0;
  $42 = $40;
  while (1) {
   if (($$0129155 | 0) == ($42 << 24 >> 24 | 0)) {
    $$1123148 = $$0122157;
    $$3149 = $$2158;
    while (1) {
     $44 = $$3149 + 1 | 0;
     HEAP32[$5 + ($$3149 << 2) >> 2] = $$1123148;
     $46 = $$1123148 + 1 | 0;
     $48 = HEAP8[$4 + $44 >> 0] | 0;
     if (($$0129155 | 0) == ($48 << 24 >> 24 | 0)) {
      $$1123148 = $46;
      $$3149 = $44;
     } else {
      $$1123$lcssa = $46;
      $$3$lcssa = $44;
      $59 = $48;
      break;
     }
    }
   } else {
    $$1123$lcssa = $$0122157;
    $$3$lcssa = $$2158;
    $59 = $42;
   }
   if (($$1123$lcssa | 0) >= (1 << $$0129155 | 0)) {
    $53 = HEAP32[$0 >> 2] | 0;
    HEAP32[$53 + 20 >> 2] = 9;
    FUNCTION_TABLE_vi[HEAP32[$53 >> 2] & 255]($$pre$phiZ2D);
   }
   if (!($59 << 24 >> 24)) break; else {
    $$0122157 = $$1123$lcssa << 1;
    $$0129155 = $$0129155 + 1 | 0;
    $$2158 = $$3$lcssa;
    $42 = $59;
   }
  }
 }
 $60 = $15 + 1 | 0;
 if (!(HEAP8[$60 >> 0] | 0)) {
  $$5 = 0;
  $$sink = -1;
 } else {
  HEAP32[$29 + 76 >> 2] = 0 - (HEAP32[$5 >> 2] | 0);
  $67 = HEAPU8[$60 >> 0] | 0;
  $$5 = $67;
  $$sink = HEAP32[$5 + ($67 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 4 >> 2] = $$sink;
 $72 = $15 + 2 | 0;
 if (!(HEAP8[$72 >> 0] | 0)) {
  $$5$1 = $$5;
  $$sink$1 = -1;
 } else {
  HEAP32[$29 + 80 >> 2] = $$5 - (HEAP32[$5 + ($$5 << 2) >> 2] | 0);
  $440 = $$5 + (HEAPU8[$72 >> 0] | 0) | 0;
  $$5$1 = $440;
  $$sink$1 = HEAP32[$5 + ($440 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 8 >> 2] = $$sink$1;
 $445 = $15 + 3 | 0;
 if (!(HEAP8[$445 >> 0] | 0)) {
  $$5$2 = $$5$1;
  $$sink$2 = -1;
 } else {
  HEAP32[$29 + 84 >> 2] = $$5$1 - (HEAP32[$5 + ($$5$1 << 2) >> 2] | 0);
  $454 = $$5$1 + (HEAPU8[$445 >> 0] | 0) | 0;
  $$5$2 = $454;
  $$sink$2 = HEAP32[$5 + ($454 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 12 >> 2] = $$sink$2;
 $459 = $15 + 4 | 0;
 if (!(HEAP8[$459 >> 0] | 0)) {
  $$5$3 = $$5$2;
  $$sink$3 = -1;
 } else {
  HEAP32[$29 + 88 >> 2] = $$5$2 - (HEAP32[$5 + ($$5$2 << 2) >> 2] | 0);
  $468 = $$5$2 + (HEAPU8[$459 >> 0] | 0) | 0;
  $$5$3 = $468;
  $$sink$3 = HEAP32[$5 + ($468 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 16 >> 2] = $$sink$3;
 $473 = $15 + 5 | 0;
 if (!(HEAP8[$473 >> 0] | 0)) {
  $$5$4 = $$5$3;
  $$sink$4 = -1;
 } else {
  HEAP32[$29 + 92 >> 2] = $$5$3 - (HEAP32[$5 + ($$5$3 << 2) >> 2] | 0);
  $482 = $$5$3 + (HEAPU8[$473 >> 0] | 0) | 0;
  $$5$4 = $482;
  $$sink$4 = HEAP32[$5 + ($482 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 20 >> 2] = $$sink$4;
 $487 = $15 + 6 | 0;
 if (!(HEAP8[$487 >> 0] | 0)) {
  $$5$5 = $$5$4;
  $$sink$5 = -1;
 } else {
  HEAP32[$29 + 96 >> 2] = $$5$4 - (HEAP32[$5 + ($$5$4 << 2) >> 2] | 0);
  $496 = $$5$4 + (HEAPU8[$487 >> 0] | 0) | 0;
  $$5$5 = $496;
  $$sink$5 = HEAP32[$5 + ($496 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 24 >> 2] = $$sink$5;
 $501 = $15 + 7 | 0;
 if (!(HEAP8[$501 >> 0] | 0)) {
  $$5$6 = $$5$5;
  $$sink$6 = -1;
 } else {
  HEAP32[$29 + 100 >> 2] = $$5$5 - (HEAP32[$5 + ($$5$5 << 2) >> 2] | 0);
  $510 = $$5$5 + (HEAPU8[$501 >> 0] | 0) | 0;
  $$5$6 = $510;
  $$sink$6 = HEAP32[$5 + ($510 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 28 >> 2] = $$sink$6;
 $515 = $15 + 8 | 0;
 if (!(HEAP8[$515 >> 0] | 0)) {
  $$5$7 = $$5$6;
  $$sink$7 = -1;
 } else {
  HEAP32[$29 + 104 >> 2] = $$5$6 - (HEAP32[$5 + ($$5$6 << 2) >> 2] | 0);
  $524 = $$5$6 + (HEAPU8[$515 >> 0] | 0) | 0;
  $$5$7 = $524;
  $$sink$7 = HEAP32[$5 + ($524 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 32 >> 2] = $$sink$7;
 $529 = $15 + 9 | 0;
 if (!(HEAP8[$529 >> 0] | 0)) {
  $$5$8 = $$5$7;
  $$sink$8 = -1;
 } else {
  HEAP32[$29 + 108 >> 2] = $$5$7 - (HEAP32[$5 + ($$5$7 << 2) >> 2] | 0);
  $538 = $$5$7 + (HEAPU8[$529 >> 0] | 0) | 0;
  $$5$8 = $538;
  $$sink$8 = HEAP32[$5 + ($538 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 36 >> 2] = $$sink$8;
 $543 = $15 + 10 | 0;
 if (!(HEAP8[$543 >> 0] | 0)) {
  $$5$9 = $$5$8;
  $$sink$9 = -1;
 } else {
  HEAP32[$29 + 112 >> 2] = $$5$8 - (HEAP32[$5 + ($$5$8 << 2) >> 2] | 0);
  $552 = $$5$8 + (HEAPU8[$543 >> 0] | 0) | 0;
  $$5$9 = $552;
  $$sink$9 = HEAP32[$5 + ($552 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 40 >> 2] = $$sink$9;
 $557 = $15 + 11 | 0;
 if (!(HEAP8[$557 >> 0] | 0)) {
  $$5$10 = $$5$9;
  $$sink$10 = -1;
 } else {
  HEAP32[$29 + 116 >> 2] = $$5$9 - (HEAP32[$5 + ($$5$9 << 2) >> 2] | 0);
  $566 = $$5$9 + (HEAPU8[$557 >> 0] | 0) | 0;
  $$5$10 = $566;
  $$sink$10 = HEAP32[$5 + ($566 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 44 >> 2] = $$sink$10;
 $571 = $15 + 12 | 0;
 if (!(HEAP8[$571 >> 0] | 0)) {
  $$5$11 = $$5$10;
  $$sink$11 = -1;
 } else {
  HEAP32[$29 + 120 >> 2] = $$5$10 - (HEAP32[$5 + ($$5$10 << 2) >> 2] | 0);
  $580 = $$5$10 + (HEAPU8[$571 >> 0] | 0) | 0;
  $$5$11 = $580;
  $$sink$11 = HEAP32[$5 + ($580 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 48 >> 2] = $$sink$11;
 $585 = $15 + 13 | 0;
 if (!(HEAP8[$585 >> 0] | 0)) {
  $$5$12 = $$5$11;
  $$sink$12 = -1;
 } else {
  HEAP32[$29 + 124 >> 2] = $$5$11 - (HEAP32[$5 + ($$5$11 << 2) >> 2] | 0);
  $594 = $$5$11 + (HEAPU8[$585 >> 0] | 0) | 0;
  $$5$12 = $594;
  $$sink$12 = HEAP32[$5 + ($594 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 52 >> 2] = $$sink$12;
 $599 = $15 + 14 | 0;
 if (!(HEAP8[$599 >> 0] | 0)) {
  $$5$13 = $$5$12;
  $$sink$13 = -1;
 } else {
  HEAP32[$29 + 128 >> 2] = $$5$12 - (HEAP32[$5 + ($$5$12 << 2) >> 2] | 0);
  $608 = $$5$12 + (HEAPU8[$599 >> 0] | 0) | 0;
  $$5$13 = $608;
  $$sink$13 = HEAP32[$5 + ($608 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 56 >> 2] = $$sink$13;
 $613 = $15 + 15 | 0;
 if (!(HEAP8[$613 >> 0] | 0)) {
  $$5$14 = $$5$13;
  $$sink$14 = -1;
 } else {
  HEAP32[$29 + 132 >> 2] = $$5$13 - (HEAP32[$5 + ($$5$13 << 2) >> 2] | 0);
  $622 = $$5$13 + (HEAPU8[$613 >> 0] | 0) | 0;
  $$5$14 = $622;
  $$sink$14 = HEAP32[$5 + ($622 + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 60 >> 2] = $$sink$14;
 $627 = $15 + 16 | 0;
 if (!(HEAP8[$627 >> 0] | 0)) $$sink$15 = -1; else {
  HEAP32[$29 + 136 >> 2] = $$5$14 - (HEAP32[$5 + ($$5$14 << 2) >> 2] | 0);
  $$sink$15 = HEAP32[$5 + ($$5$14 + (HEAPU8[$627 >> 0] | 0) + -1 << 2) >> 2] | 0;
 }
 HEAP32[$29 + 64 >> 2] = $$sink$15;
 HEAP32[$29 + 68 >> 2] = 1048575;
 _memset($29 + 144 | 0, 0, 1024) | 0;
 $88 = $15 + 1 | 0;
 if (!(HEAP8[$88 >> 0] | 0)) $$7$lcssa = 0; else {
  $$1127137$us = 1;
  $$7138$us = 0;
  while (1) {
   $78 = $15 + 17 + $$7138$us | 0;
   $$0124135$us = 128;
   $$0125134$us = HEAP32[$5 + ($$7138$us << 2) >> 2] << 7;
   while (1) {
    HEAP32[$29 + 144 + ($$0125134$us << 2) >> 2] = 1;
    HEAP8[$29 + 1168 + $$0125134$us >> 0] = HEAP8[$78 >> 0] | 0;
    if (($$0124135$us | 0) > 1) {
     $$0124135$us = $$0124135$us + -1 | 0;
     $$0125134$us = $$0125134$us + 1 | 0;
    } else break;
   }
   $86 = $$7138$us + 1 | 0;
   if ($$1127137$us >>> 0 < (HEAPU8[$88 >> 0] | 0) >>> 0) {
    $$1127137$us = $$1127137$us + 1 | 0;
    $$7138$us = $86;
   } else {
    $$7$lcssa = $86;
    break;
   }
  }
 }
 $91 = $15 + 2 | 0;
 if (!(HEAP8[$91 >> 0] | 0)) $$7$lcssa$1 = $$7$lcssa; else {
  $$1127137$us$1 = 1;
  $$7138$us$1 = $$7$lcssa;
  while (1) {
   $104 = $15 + 17 + $$7138$us$1 | 0;
   $$0124135$us$1 = 64;
   $$0125134$us$1 = HEAP32[$5 + ($$7138$us$1 << 2) >> 2] << 6;
   while (1) {
    HEAP32[$29 + 144 + ($$0125134$us$1 << 2) >> 2] = 2;
    HEAP8[$29 + 1168 + $$0125134$us$1 >> 0] = HEAP8[$104 >> 0] | 0;
    if (($$0124135$us$1 | 0) > 1) {
     $$0124135$us$1 = $$0124135$us$1 + -1 | 0;
     $$0125134$us$1 = $$0125134$us$1 + 1 | 0;
    } else break;
   }
   $112 = $$7138$us$1 + 1 | 0;
   if ($$1127137$us$1 >>> 0 < (HEAPU8[$91 >> 0] | 0) >>> 0) {
    $$1127137$us$1 = $$1127137$us$1 + 1 | 0;
    $$7138$us$1 = $112;
   } else {
    $$7$lcssa$1 = $112;
    break;
   }
  }
 }
 $116 = $15 + 3 | 0;
 if (!(HEAP8[$116 >> 0] | 0)) $$7$lcssa$2 = $$7$lcssa$1; else {
  $$1127137$us$2 = 1;
  $$7138$us$2 = $$7$lcssa$1;
  while (1) {
   $121 = HEAP32[$5 + ($$7138$us$2 << 2) >> 2] << 5;
   $122 = $15 + 17 + $$7138$us$2 | 0;
   HEAP32[$29 + 144 + ($121 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $121 >> 0] = HEAP8[$122 >> 0] | 0;
   $126 = $121 | 1;
   HEAP32[$29 + 144 + ($126 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $126 >> 0] = HEAP8[$122 >> 0] | 0;
   $130 = $126 + 1 | 0;
   HEAP32[$29 + 144 + ($130 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $130 >> 0] = HEAP8[$122 >> 0] | 0;
   $134 = $121 | 3;
   HEAP32[$29 + 144 + ($134 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $134 >> 0] = HEAP8[$122 >> 0] | 0;
   $138 = $134 + 1 | 0;
   HEAP32[$29 + 144 + ($138 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $138 >> 0] = HEAP8[$122 >> 0] | 0;
   $142 = $134 + 2 | 0;
   HEAP32[$29 + 144 + ($142 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $142 >> 0] = HEAP8[$122 >> 0] | 0;
   $146 = $134 + 3 | 0;
   HEAP32[$29 + 144 + ($146 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $146 >> 0] = HEAP8[$122 >> 0] | 0;
   $150 = $121 | 7;
   HEAP32[$29 + 144 + ($150 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $150 >> 0] = HEAP8[$122 >> 0] | 0;
   $154 = $150 + 1 | 0;
   HEAP32[$29 + 144 + ($154 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $154 >> 0] = HEAP8[$122 >> 0] | 0;
   $158 = $150 + 2 | 0;
   HEAP32[$29 + 144 + ($158 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $158 >> 0] = HEAP8[$122 >> 0] | 0;
   $162 = $150 + 3 | 0;
   HEAP32[$29 + 144 + ($162 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $162 >> 0] = HEAP8[$122 >> 0] | 0;
   $166 = $150 + 4 | 0;
   HEAP32[$29 + 144 + ($166 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $166 >> 0] = HEAP8[$122 >> 0] | 0;
   $170 = $150 + 5 | 0;
   HEAP32[$29 + 144 + ($170 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $170 >> 0] = HEAP8[$122 >> 0] | 0;
   $174 = $150 + 6 | 0;
   HEAP32[$29 + 144 + ($174 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $174 >> 0] = HEAP8[$122 >> 0] | 0;
   $178 = $150 + 7 | 0;
   HEAP32[$29 + 144 + ($178 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $178 >> 0] = HEAP8[$122 >> 0] | 0;
   $182 = $121 | 15;
   HEAP32[$29 + 144 + ($182 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $182 >> 0] = HEAP8[$122 >> 0] | 0;
   $186 = $182 + 1 | 0;
   HEAP32[$29 + 144 + ($186 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $186 >> 0] = HEAP8[$122 >> 0] | 0;
   $190 = $182 + 2 | 0;
   HEAP32[$29 + 144 + ($190 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $190 >> 0] = HEAP8[$122 >> 0] | 0;
   $194 = $182 + 3 | 0;
   HEAP32[$29 + 144 + ($194 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $194 >> 0] = HEAP8[$122 >> 0] | 0;
   $198 = $182 + 4 | 0;
   HEAP32[$29 + 144 + ($198 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $198 >> 0] = HEAP8[$122 >> 0] | 0;
   $202 = $182 + 5 | 0;
   HEAP32[$29 + 144 + ($202 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $202 >> 0] = HEAP8[$122 >> 0] | 0;
   $206 = $182 + 6 | 0;
   HEAP32[$29 + 144 + ($206 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $206 >> 0] = HEAP8[$122 >> 0] | 0;
   $210 = $182 + 7 | 0;
   HEAP32[$29 + 144 + ($210 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $210 >> 0] = HEAP8[$122 >> 0] | 0;
   $214 = $182 + 8 | 0;
   HEAP32[$29 + 144 + ($214 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $214 >> 0] = HEAP8[$122 >> 0] | 0;
   $218 = $182 + 9 | 0;
   HEAP32[$29 + 144 + ($218 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $218 >> 0] = HEAP8[$122 >> 0] | 0;
   $222 = $182 + 10 | 0;
   HEAP32[$29 + 144 + ($222 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $222 >> 0] = HEAP8[$122 >> 0] | 0;
   $226 = $182 + 11 | 0;
   HEAP32[$29 + 144 + ($226 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $226 >> 0] = HEAP8[$122 >> 0] | 0;
   $230 = $182 + 12 | 0;
   HEAP32[$29 + 144 + ($230 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $230 >> 0] = HEAP8[$122 >> 0] | 0;
   $234 = $182 + 13 | 0;
   HEAP32[$29 + 144 + ($234 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $234 >> 0] = HEAP8[$122 >> 0] | 0;
   $238 = $182 + 14 | 0;
   HEAP32[$29 + 144 + ($238 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $238 >> 0] = HEAP8[$122 >> 0] | 0;
   $242 = $182 + 15 | 0;
   HEAP32[$29 + 144 + ($242 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $242 >> 0] = HEAP8[$122 >> 0] | 0;
   $246 = $121 | 31;
   HEAP32[$29 + 144 + ($246 << 2) >> 2] = 3;
   HEAP8[$29 + 1168 + $246 >> 0] = HEAP8[$122 >> 0] | 0;
   $251 = $$7138$us$2 + 1 | 0;
   if ($$1127137$us$2 >>> 0 < (HEAPU8[$116 >> 0] | 0) >>> 0) {
    $$1127137$us$2 = $$1127137$us$2 + 1 | 0;
    $$7138$us$2 = $251;
   } else {
    $$7$lcssa$2 = $251;
    break;
   }
  }
 }
 $255 = $15 + 4 | 0;
 if (!(HEAP8[$255 >> 0] | 0)) $$7$lcssa$3 = $$7$lcssa$2; else {
  $$1127137$us$3 = 1;
  $$7138$us$3 = $$7$lcssa$2;
  while (1) {
   $260 = HEAP32[$5 + ($$7138$us$3 << 2) >> 2] << 4;
   $261 = $15 + 17 + $$7138$us$3 | 0;
   HEAP32[$29 + 144 + ($260 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $260 >> 0] = HEAP8[$261 >> 0] | 0;
   $265 = $260 | 1;
   HEAP32[$29 + 144 + ($265 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $265 >> 0] = HEAP8[$261 >> 0] | 0;
   $269 = $265 + 1 | 0;
   HEAP32[$29 + 144 + ($269 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $269 >> 0] = HEAP8[$261 >> 0] | 0;
   $273 = $260 | 3;
   HEAP32[$29 + 144 + ($273 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $273 >> 0] = HEAP8[$261 >> 0] | 0;
   $277 = $273 + 1 | 0;
   HEAP32[$29 + 144 + ($277 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $277 >> 0] = HEAP8[$261 >> 0] | 0;
   $281 = $273 + 2 | 0;
   HEAP32[$29 + 144 + ($281 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $281 >> 0] = HEAP8[$261 >> 0] | 0;
   $285 = $273 + 3 | 0;
   HEAP32[$29 + 144 + ($285 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $285 >> 0] = HEAP8[$261 >> 0] | 0;
   $289 = $260 | 7;
   HEAP32[$29 + 144 + ($289 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $289 >> 0] = HEAP8[$261 >> 0] | 0;
   $293 = $289 + 1 | 0;
   HEAP32[$29 + 144 + ($293 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $293 >> 0] = HEAP8[$261 >> 0] | 0;
   $297 = $289 + 2 | 0;
   HEAP32[$29 + 144 + ($297 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $297 >> 0] = HEAP8[$261 >> 0] | 0;
   $301 = $289 + 3 | 0;
   HEAP32[$29 + 144 + ($301 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $301 >> 0] = HEAP8[$261 >> 0] | 0;
   $305 = $289 + 4 | 0;
   HEAP32[$29 + 144 + ($305 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $305 >> 0] = HEAP8[$261 >> 0] | 0;
   $309 = $289 + 5 | 0;
   HEAP32[$29 + 144 + ($309 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $309 >> 0] = HEAP8[$261 >> 0] | 0;
   $313 = $289 + 6 | 0;
   HEAP32[$29 + 144 + ($313 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $313 >> 0] = HEAP8[$261 >> 0] | 0;
   $317 = $289 + 7 | 0;
   HEAP32[$29 + 144 + ($317 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $317 >> 0] = HEAP8[$261 >> 0] | 0;
   $321 = $260 | 15;
   HEAP32[$29 + 144 + ($321 << 2) >> 2] = 4;
   HEAP8[$29 + 1168 + $321 >> 0] = HEAP8[$261 >> 0] | 0;
   $326 = $$7138$us$3 + 1 | 0;
   if ($$1127137$us$3 >>> 0 < (HEAPU8[$255 >> 0] | 0) >>> 0) {
    $$1127137$us$3 = $$1127137$us$3 + 1 | 0;
    $$7138$us$3 = $326;
   } else {
    $$7$lcssa$3 = $326;
    break;
   }
  }
 }
 $330 = $15 + 5 | 0;
 if (!(HEAP8[$330 >> 0] | 0)) $$7$lcssa$4 = $$7$lcssa$3; else {
  $$1127137$us$4 = 1;
  $$7138$us$4 = $$7$lcssa$3;
  while (1) {
   $335 = HEAP32[$5 + ($$7138$us$4 << 2) >> 2] << 3;
   $336 = $15 + 17 + $$7138$us$4 | 0;
   HEAP32[$29 + 144 + ($335 << 2) >> 2] = 5;
   HEAP8[$29 + 1168 + $335 >> 0] = HEAP8[$336 >> 0] | 0;
   $340 = $335 | 1;
   HEAP32[$29 + 144 + ($340 << 2) >> 2] = 5;
   HEAP8[$29 + 1168 + $340 >> 0] = HEAP8[$336 >> 0] | 0;
   $344 = $340 + 1 | 0;
   HEAP32[$29 + 144 + ($344 << 2) >> 2] = 5;
   HEAP8[$29 + 1168 + $344 >> 0] = HEAP8[$336 >> 0] | 0;
   $348 = $335 | 3;
   HEAP32[$29 + 144 + ($348 << 2) >> 2] = 5;
   HEAP8[$29 + 1168 + $348 >> 0] = HEAP8[$336 >> 0] | 0;
   $352 = $348 + 1 | 0;
   HEAP32[$29 + 144 + ($352 << 2) >> 2] = 5;
   HEAP8[$29 + 1168 + $352 >> 0] = HEAP8[$336 >> 0] | 0;
   $356 = $348 + 2 | 0;
   HEAP32[$29 + 144 + ($356 << 2) >> 2] = 5;
   HEAP8[$29 + 1168 + $356 >> 0] = HEAP8[$336 >> 0] | 0;
   $360 = $348 + 3 | 0;
   HEAP32[$29 + 144 + ($360 << 2) >> 2] = 5;
   HEAP8[$29 + 1168 + $360 >> 0] = HEAP8[$336 >> 0] | 0;
   $364 = $335 | 7;
   HEAP32[$29 + 144 + ($364 << 2) >> 2] = 5;
   HEAP8[$29 + 1168 + $364 >> 0] = HEAP8[$336 >> 0] | 0;
   $369 = $$7138$us$4 + 1 | 0;
   if ($$1127137$us$4 >>> 0 < (HEAPU8[$330 >> 0] | 0) >>> 0) {
    $$1127137$us$4 = $$1127137$us$4 + 1 | 0;
    $$7138$us$4 = $369;
   } else {
    $$7$lcssa$4 = $369;
    break;
   }
  }
 }
 $373 = $15 + 6 | 0;
 if (!(HEAP8[$373 >> 0] | 0)) $$7$lcssa$5 = $$7$lcssa$4; else {
  $$1127137$us$5 = 1;
  $$7138$us$5 = $$7$lcssa$4;
  while (1) {
   $378 = HEAP32[$5 + ($$7138$us$5 << 2) >> 2] << 2;
   $379 = $15 + 17 + $$7138$us$5 | 0;
   HEAP32[$29 + 144 + ($378 << 2) >> 2] = 6;
   HEAP8[$29 + 1168 + $378 >> 0] = HEAP8[$379 >> 0] | 0;
   $383 = $378 | 1;
   HEAP32[$29 + 144 + ($383 << 2) >> 2] = 6;
   HEAP8[$29 + 1168 + $383 >> 0] = HEAP8[$379 >> 0] | 0;
   $387 = $383 + 1 | 0;
   HEAP32[$29 + 144 + ($387 << 2) >> 2] = 6;
   HEAP8[$29 + 1168 + $387 >> 0] = HEAP8[$379 >> 0] | 0;
   $391 = $378 | 3;
   HEAP32[$29 + 144 + ($391 << 2) >> 2] = 6;
   HEAP8[$29 + 1168 + $391 >> 0] = HEAP8[$379 >> 0] | 0;
   $396 = $$7138$us$5 + 1 | 0;
   if ($$1127137$us$5 >>> 0 < (HEAPU8[$373 >> 0] | 0) >>> 0) {
    $$1127137$us$5 = $$1127137$us$5 + 1 | 0;
    $$7138$us$5 = $396;
   } else {
    $$7$lcssa$5 = $396;
    break;
   }
  }
 }
 $400 = $15 + 7 | 0;
 if (!(HEAP8[$400 >> 0] | 0)) $$7$lcssa$6 = $$7$lcssa$5; else {
  $$1127137$us$6 = 1;
  $$7138$us$6 = $$7$lcssa$5;
  while (1) {
   $405 = HEAP32[$5 + ($$7138$us$6 << 2) >> 2] << 1;
   $406 = $15 + 17 + $$7138$us$6 | 0;
   HEAP32[$29 + 144 + ($405 << 2) >> 2] = 7;
   HEAP8[$29 + 1168 + $405 >> 0] = HEAP8[$406 >> 0] | 0;
   $410 = $405 | 1;
   HEAP32[$29 + 144 + ($410 << 2) >> 2] = 7;
   HEAP8[$29 + 1168 + $410 >> 0] = HEAP8[$406 >> 0] | 0;
   $415 = $$7138$us$6 + 1 | 0;
   if ($$1127137$us$6 >>> 0 < (HEAPU8[$400 >> 0] | 0) >>> 0) {
    $$1127137$us$6 = $$1127137$us$6 + 1 | 0;
    $$7138$us$6 = $415;
   } else {
    $$7$lcssa$6 = $415;
    break;
   }
  }
 }
 $419 = $15 + 8 | 0;
 if (HEAP8[$419 >> 0] | 0) {
  $$1127137$us$7 = 1;
  $$7138$us$7 = $$7$lcssa$6;
  while (1) {
   $423 = HEAP32[$5 + ($$7138$us$7 << 2) >> 2] | 0;
   HEAP32[$29 + 144 + ($423 << 2) >> 2] = 8;
   HEAP8[$29 + 1168 + $423 >> 0] = HEAP8[$15 + 17 + $$7138$us$7 >> 0] | 0;
   if ($$1127137$us$7 >>> 0 < (HEAPU8[$419 >> 0] | 0) >>> 0) {
    $$1127137$us$7 = $$1127137$us$7 + 1 | 0;
    $$7138$us$7 = $$7138$us$7 + 1 | 0;
   } else break;
  }
 }
 if (!($12 & ($$1$lcssa$15 | 0) > 0)) {
  STACKTOP = sp;
  return;
 }
 $$2128133 = 0;
 do {
  if ((HEAPU8[$15 + 17 + $$2128133 >> 0] | 0) > 15) {
   $97 = HEAP32[$0 >> 2] | 0;
   HEAP32[$97 + 20 >> 2] = 9;
   FUNCTION_TABLE_vi[HEAP32[$97 >> 2] & 255]($$pre$phiZ2D);
  }
  $$2128133 = $$2128133 + 1 | 0;
 } while (($$2128133 | 0) != ($$1$lcssa$15 | 0));
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseFoldExprEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$byval_copy30 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $106 = 0, $11 = 0, $111 = 0, $112 = 0, $117 = 0, $12 = 0, $122 = 0, $123 = 0, $128 = 0, $13 = 0, $133 = 0, $134 = 0, $139 = 0, $14 = 0, $144 = 0, $145 = 0, $15 = 0, $150 = 0, $155 = 0, $156 = 0, $16 = 0, $161 = 0, $166 = 0, $167 = 0, $17 = 0, $172 = 0, $177 = 0, $178 = 0, $18 = 0, $183 = 0, $188 = 0, $189 = 0, $19 = 0, $194 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $205 = 0, $21 = 0, $210 = 0, $211 = 0, $216 = 0, $22 = 0, $221 = 0, $222 = 0, $227 = 0, $23 = 0, $232 = 0, $233 = 0, $238 = 0, $24 = 0, $243 = 0, $244 = 0, $249 = 0, $25 = 0, $254 = 0, $255 = 0, $26 = 0, $260 = 0, $265 = 0, $266 = 0, $27 = 0, $271 = 0, $276 = 0, $277 = 0, $28 = 0, $282 = 0, $287 = 0, $288 = 0, $29 = 0, $293 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $304 = 0, $309 = 0, $31 = 0, $310 = 0, $315 = 0, $32 = 0, $320 = 0, $321 = 0, $326 = 0, $33 = 0, $331 = 0, $332 = 0, $337 = 0, $34 = 0, $342 = 0, $343 = 0, $348 = 0, $353 = 0, $354 = 0, $359 = 0, $36 = 0, $364 = 0, $365 = 0, $370 = 0, $375 = 0, $376 = 0, $380 = 0, $381 = 0, $383 = 0, $384 = 0, $4 = 0, $40 = 0, $45 = 0, $46 = 0, $5 = 0, $51 = 0, $56 = 0, $57 = 0, $6 = 0, $62 = 0, $67 = 0, $68 = 0, $7 = 0, $73 = 0, $78 = 0, $79 = 0, $8 = 0, $84 = 0, $89 = 0, $9 = 0, $90 = 0, $95 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 $$byval_copy30 = sp + 8 | 0;
 $1 = sp + 272 | 0;
 $2 = sp;
 $3 = sp + 264 | 0;
 $4 = sp + 256 | 0;
 $5 = sp + 248 | 0;
 $6 = sp + 240 | 0;
 $7 = sp + 232 | 0;
 $8 = sp + 224 | 0;
 $9 = sp + 216 | 0;
 $10 = sp + 208 | 0;
 $11 = sp + 200 | 0;
 $12 = sp + 192 | 0;
 $13 = sp + 184 | 0;
 $14 = sp + 176 | 0;
 $15 = sp + 168 | 0;
 $16 = sp + 160 | 0;
 $17 = sp + 152 | 0;
 $18 = sp + 144 | 0;
 $19 = sp + 136 | 0;
 $20 = sp + 128 | 0;
 $21 = sp + 120 | 0;
 $22 = sp + 112 | 0;
 $23 = sp + 104 | 0;
 $24 = sp + 96 | 0;
 $25 = sp + 88 | 0;
 $26 = sp + 80 | 0;
 $27 = sp + 72 | 0;
 $28 = sp + 64 | 0;
 $29 = sp + 56 | 0;
 $30 = sp + 48 | 0;
 $31 = sp + 40 | 0;
 $32 = sp + 32 | 0;
 $33 = sp + 24 | 0;
 $34 = sp + 16 | 0;
 if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 102) | 0) {
  $36 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0;
  switch ($36 << 24 >> 24) {
  case 76:
  case 108:
   {
    $storemerge = 1;
    label = 4;
    break;
   }
  case 82:
  case 114:
   {
    $storemerge = 0;
    label = 4;
    break;
   }
  default:
   $$2 = 0;
  }
  if ((label | 0) == 4) {
   HEAP8[$1 >> 0] = $storemerge;
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   __ZN12_GLOBAL__N_110StringViewC2Ev($2);
   __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 54764);
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   do if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
    __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 51972);
    $40 = $$byval_copy30;
    $45 = HEAP32[$40 + 4 >> 2] | 0;
    $46 = $2;
    HEAP32[$46 >> 2] = HEAP32[$40 >> 2];
    HEAP32[$46 + 4 >> 2] = $45;
    label = 66;
   } else {
    __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 54767);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 51970);
     $51 = $$byval_copy30;
     $56 = HEAP32[$51 + 4 >> 2] | 0;
     $57 = $2;
     HEAP32[$57 >> 2] = HEAP32[$51 >> 2];
     HEAP32[$57 + 4 >> 2] = $56;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 54770);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52668);
     $62 = $$byval_copy30;
     $67 = HEAP32[$62 + 4 >> 2] | 0;
     $68 = $2;
     HEAP32[$68 >> 2] = HEAP32[$62 >> 2];
     HEAP32[$68 + 4 >> 2] = $67;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($6, 54773);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52671);
     $73 = $$byval_copy30;
     $78 = HEAP32[$73 + 4 >> 2] | 0;
     $79 = $2;
     HEAP32[$79 >> 2] = HEAP32[$73 >> 2];
     HEAP32[$79 + 4 >> 2] = $78;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($7, 54776);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52683);
     $84 = $$byval_copy30;
     $89 = HEAP32[$84 + 4 >> 2] | 0;
     $90 = $2;
     HEAP32[$90 >> 2] = HEAP32[$84 >> 2];
     HEAP32[$90 + 4 >> 2] = $89;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($8, 54779);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$8 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52687);
     $95 = $$byval_copy30;
     $100 = HEAP32[$95 + 4 >> 2] | 0;
     $101 = $2;
     HEAP32[$101 >> 2] = HEAP32[$95 >> 2];
     HEAP32[$101 + 4 >> 2] = $100;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($9, 54782);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$9 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52690);
     $106 = $$byval_copy30;
     $111 = HEAP32[$106 + 4 >> 2] | 0;
     $112 = $2;
     HEAP32[$112 >> 2] = HEAP32[$106 >> 2];
     HEAP32[$112 + 4 >> 2] = $111;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($10, 54785);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$10 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52692);
     $117 = $$byval_copy30;
     $122 = HEAP32[$117 + 4 >> 2] | 0;
     $123 = $2;
     HEAP32[$123 >> 2] = HEAP32[$117 >> 2];
     HEAP32[$123 + 4 >> 2] = $122;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($11, 54788);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$11 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52695);
     $128 = $$byval_copy30;
     $133 = HEAP32[$128 + 4 >> 2] | 0;
     $134 = $2;
     HEAP32[$134 >> 2] = HEAP32[$128 >> 2];
     HEAP32[$134 + 4 >> 2] = $133;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($12, 54791);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$12 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$12 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52697);
     $139 = $$byval_copy30;
     $144 = HEAP32[$139 + 4 >> 2] | 0;
     $145 = $2;
     HEAP32[$145 >> 2] = HEAP32[$139 >> 2];
     HEAP32[$145 + 4 >> 2] = $144;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($13, 54794);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$13 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52700);
     $150 = $$byval_copy30;
     $155 = HEAP32[$150 + 4 >> 2] | 0;
     $156 = $2;
     HEAP32[$156 >> 2] = HEAP32[$150 >> 2];
     HEAP32[$156 + 4 >> 2] = $155;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($14, 54797);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$14 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52703);
     $161 = $$byval_copy30;
     $166 = HEAP32[$161 + 4 >> 2] | 0;
     $167 = $2;
     HEAP32[$167 >> 2] = HEAP32[$161 >> 2];
     HEAP32[$167 + 4 >> 2] = $166;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($15, 54800);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$15 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52043);
     $172 = $$byval_copy30;
     $177 = HEAP32[$172 + 4 >> 2] | 0;
     $178 = $2;
     HEAP32[$178 >> 2] = HEAP32[$172 >> 2];
     HEAP32[$178 + 4 >> 2] = $177;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($16, 54803);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$16 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52706);
     $183 = $$byval_copy30;
     $188 = HEAP32[$183 + 4 >> 2] | 0;
     $189 = $2;
     HEAP32[$189 >> 2] = HEAP32[$183 >> 2];
     HEAP32[$189 + 4 >> 2] = $188;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($17, 54806);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$17 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52709);
     $194 = $$byval_copy30;
     $199 = HEAP32[$194 + 4 >> 2] | 0;
     $200 = $2;
     HEAP32[$200 >> 2] = HEAP32[$194 >> 2];
     HEAP32[$200 + 4 >> 2] = $199;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($18, 54809);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$18 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52712);
     $205 = $$byval_copy30;
     $210 = HEAP32[$205 + 4 >> 2] | 0;
     $211 = $2;
     HEAP32[$211 >> 2] = HEAP32[$205 >> 2];
     HEAP32[$211 + 4 >> 2] = $210;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($19, 54812);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$19 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52150);
     $216 = $$byval_copy30;
     $221 = HEAP32[$216 + 4 >> 2] | 0;
     $222 = $2;
     HEAP32[$222 >> 2] = HEAP32[$216 >> 2];
     HEAP32[$222 + 4 >> 2] = $221;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($20, 54815);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$20 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$20 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52555);
     $227 = $$byval_copy30;
     $232 = HEAP32[$227 + 4 >> 2] | 0;
     $233 = $2;
     HEAP32[$233 >> 2] = HEAP32[$227 >> 2];
     HEAP32[$233 + 4 >> 2] = $232;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($21, 54818);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$21 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52716);
     $238 = $$byval_copy30;
     $243 = HEAP32[$238 + 4 >> 2] | 0;
     $244 = $2;
     HEAP32[$244 >> 2] = HEAP32[$238 >> 2];
     HEAP32[$244 + 4 >> 2] = $243;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($22, 54821);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$22 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$22 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52037);
     $249 = $$byval_copy30;
     $254 = HEAP32[$249 + 4 >> 2] | 0;
     $255 = $2;
     HEAP32[$255 >> 2] = HEAP32[$249 >> 2];
     HEAP32[$255 + 4 >> 2] = $254;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($23, 54824);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$23 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$23 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52719);
     $260 = $$byval_copy30;
     $265 = HEAP32[$260 + 4 >> 2] | 0;
     $266 = $2;
     HEAP32[$266 >> 2] = HEAP32[$260 >> 2];
     HEAP32[$266 + 4 >> 2] = $265;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($24, 54827);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$24 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$24 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52725);
     $271 = $$byval_copy30;
     $276 = HEAP32[$271 + 4 >> 2] | 0;
     $277 = $2;
     HEAP32[$277 >> 2] = HEAP32[$271 >> 2];
     HEAP32[$277 + 4 >> 2] = $276;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($25, 54830);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$25 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$25 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52730);
     $282 = $$byval_copy30;
     $287 = HEAP32[$282 + 4 >> 2] | 0;
     $288 = $2;
     HEAP32[$288 >> 2] = HEAP32[$282 >> 2];
     HEAP32[$288 + 4 >> 2] = $287;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($26, 54833);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$26 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$26 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52733);
     $293 = $$byval_copy30;
     $298 = HEAP32[$293 + 4 >> 2] | 0;
     $299 = $2;
     HEAP32[$299 >> 2] = HEAP32[$293 >> 2];
     HEAP32[$299 + 4 >> 2] = $298;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($27, 54836);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$27 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52735);
     $304 = $$byval_copy30;
     $309 = HEAP32[$304 + 4 >> 2] | 0;
     $310 = $2;
     HEAP32[$310 >> 2] = HEAP32[$304 >> 2];
     HEAP32[$310 + 4 >> 2] = $309;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($28, 54839);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$28 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52742);
     $315 = $$byval_copy30;
     $320 = HEAP32[$315 + 4 >> 2] | 0;
     $321 = $2;
     HEAP32[$321 >> 2] = HEAP32[$315 >> 2];
     HEAP32[$321 + 4 >> 2] = $320;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($29, 54842);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$29 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$29 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52744);
     $326 = $$byval_copy30;
     $331 = HEAP32[$326 + 4 >> 2] | 0;
     $332 = $2;
     HEAP32[$332 >> 2] = HEAP32[$326 >> 2];
     HEAP32[$332 + 4 >> 2] = $331;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($30, 54845);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$30 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$30 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52753);
     $337 = $$byval_copy30;
     $342 = HEAP32[$337 + 4 >> 2] | 0;
     $343 = $2;
     HEAP32[$343 >> 2] = HEAP32[$337 >> 2];
     HEAP32[$343 + 4 >> 2] = $342;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($31, 54848);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$31 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$31 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52755);
     $348 = $$byval_copy30;
     $353 = HEAP32[$348 + 4 >> 2] | 0;
     $354 = $2;
     HEAP32[$354 >> 2] = HEAP32[$348 >> 2];
     HEAP32[$354 + 4 >> 2] = $353;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($32, 54851);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$32 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$32 + 4 >> 2];
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52758);
     $359 = $$byval_copy30;
     $364 = HEAP32[$359 + 4 >> 2] | 0;
     $365 = $2;
     HEAP32[$365 >> 2] = HEAP32[$359 >> 2];
     HEAP32[$365 + 4 >> 2] = $364;
     label = 66;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($33, 54854);
    HEAP32[$$byval_copy30 >> 2] = HEAP32[$33 >> 2];
    HEAP32[$$byval_copy30 + 4 >> 2] = HEAP32[$33 + 4 >> 2];
    if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy30) | 0)) {
     $$1 = 0;
     break;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy30, 52761);
    $370 = $$byval_copy30;
    $375 = HEAP32[$370 + 4 >> 2] | 0;
    $376 = $2;
    HEAP32[$376 >> 2] = HEAP32[$370 >> 2];
    HEAP32[$376 + 4 >> 2] = $375;
    label = 66;
   } while (0);
   if ((label | 0) == 66) {
    $380 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
    $381 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($380) | 0;
    HEAP32[$$byval_copy30 >> 2] = $381;
    HEAP32[$34 >> 2] = 0;
    $383 = $381;
    L100 : do if (!$381) $$0 = 0; else {
     switch ($36 << 24 >> 24) {
     case 76:
     case 82:
      {
       $384 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($380) | 0;
       HEAP32[$34 >> 2] = $384;
       if (!$384) {
        $$0 = 0;
        break L100;
       }
       if ($storemerge << 24 >> 24) {
        HEAP32[$$byval_copy30 >> 2] = $384;
        HEAP32[$34 >> 2] = $383;
       }
       break;
      }
     default:
      {}
     }
     $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8FoldExprEJRbRNS_10StringViewERPNS0_4NodeESD_EEESC_DpOT0_($0, $1, $2, $$byval_copy30, $34) | 0;
    } while (0);
    $$1 = $$0;
   }
   $$2 = $$1;
  }
  $$3 = $$2;
 } else $$3 = 0;
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($0) {
 $0 = $0 | 0;
 var $$033 = 0, $$10 = 0, $$131 = 0, $$942$ph = 0, $1 = 0, $117 = 0, $119 = 0, $123 = 0, $125 = 0, $127 = 0, $129 = 0, $131 = 0, $133 = 0, $136 = 0, $137 = 0, $138 = 0, $145 = 0, $147 = 0, $151 = 0, $153 = 0, $157 = 0, $159 = 0, $163 = 0, $165 = 0, $169 = 0, $17 = 0, $171 = 0, $175 = 0, $177 = 0, $179 = 0, $180 = 0, $187 = 0, $189 = 0, $19 = 0, $191 = 0, $193 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, $spec$select = 0, $spec$select43 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $1 = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 HEAP32[$1 >> 2] = 0;
 $4 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0;
 L1 : do switch ($4 << 24 >> 24 | 0) {
 case 75:
 case 86:
 case 114:
  {
   $6 = $4 << 24 >> 24 == 114;
   $spec$select = $6 & 1;
   $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, $spec$select) | 0) << 24 >> 24 == 86;
   $$131 = $8 ? ($6 ? 2 : 1) : $spec$select;
   $spec$select43 = $$131 + ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, $$131) | 0) << 24 >> 24 == 75 & 1) | 0;
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, $spec$select43) | 0) << 24 >> 24) {
   case 70:
    break;
   case 68:
    {
     switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, $spec$select43 + 1 | 0) | 0) << 24 >> 24) {
     case 120:
     case 119:
     case 79:
     case 111:
      break;
     default:
      {
       label = 5;
       break L1;
      }
     }
     break;
    }
   default:
    {
     label = 5;
     break L1;
    }
   }
   $17 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseFunctionTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$1 >> 2] = $17;
   $193 = $17;
   label = 81;
   break;
  }
 case 85:
  {
   label = 5;
   break;
  }
 case 118:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA5_KcEEEPNS0_4NodeEDpOT0_($0, 57068) | 0;
   break;
  }
 case 119:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA8_KcEEEPNS0_4NodeEDpOT0_($0) | 0;
   break;
  }
 case 98:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA5_KcEEEPNS0_4NodeEDpOT0_($0, 57073) | 0;
   break;
  }
 case 99:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA5_KcEEEPNS0_4NodeEDpOT0_($0, 57078) | 0;
   break;
  }
 case 97:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA12_KcEEEPNS0_4NodeEDpOT0_($0, 57083) | 0;
   break;
  }
 case 104:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA14_KcEEEPNS0_4NodeEDpOT0_($0, 57095) | 0;
   break;
  }
 case 115:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA6_KcEEEPNS0_4NodeEDpOT0_($0, 57109) | 0;
   break;
  }
 case 116:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA15_KcEEEPNS0_4NodeEDpOT0_($0, 57115) | 0;
   break;
  }
 case 105:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA4_KcEEEPNS0_4NodeEDpOT0_($0, 57130) | 0;
   break;
  }
 case 106:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA13_KcEEEPNS0_4NodeEDpOT0_($0, 57134) | 0;
   break;
  }
 case 108:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA5_KcEEEPNS0_4NodeEDpOT0_($0, 57147) | 0;
   break;
  }
 case 109:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA14_KcEEEPNS0_4NodeEDpOT0_($0, 57152) | 0;
   break;
  }
 case 120:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 51450) | 0;
   break;
  }
 case 121:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA19_KcEEEPNS0_4NodeEDpOT0_($0) | 0;
   break;
  }
 case 110:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA9_KcEEEPNS0_4NodeEDpOT0_($0, 51460) | 0;
   break;
  }
 case 111:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA18_KcEEEPNS0_4NodeEDpOT0_($0, 51469) | 0;
   break;
  }
 case 102:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA6_KcEEEPNS0_4NodeEDpOT0_($0, 57166) | 0;
   break;
  }
 case 100:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA7_KcEEEPNS0_4NodeEDpOT0_($0) | 0;
   break;
  }
 case 101:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA12_KcEEEPNS0_4NodeEDpOT0_($0, 51487) | 0;
   break;
  }
 case 103:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 51499) | 0;
   break;
  }
 case 122:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA4_KcEEEPNS0_4NodeEDpOT0_($0, 51510) | 0;
   break;
  }
 case 117:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseBareSourceNameEv($2, $0);
   if (__ZNK12_GLOBAL__N_110StringView5emptyEv($2) | 0) $$033 = 0; else $$033 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0, $2) | 0;
   $$10 = $$033;
   break;
  }
 case 68:
  {
   do switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
   case 100:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 51514) | 0;
     break L1;
     break;
    }
   case 101:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 51524) | 0;
     break L1;
     break;
    }
   case 102:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 51535) | 0;
     break L1;
     break;
    }
   case 104:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 51545) | 0;
     break L1;
     break;
    }
   case 105:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA9_KcEEEPNS0_4NodeEDpOT0_($0, 51555) | 0;
     break L1;
     break;
    }
   case 115:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA9_KcEEEPNS0_4NodeEDpOT0_($0, 51564) | 0;
     break L1;
     break;
    }
   case 97:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA5_KcEEEPNS0_4NodeEDpOT0_($0, 51573) | 0;
     break L1;
     break;
    }
   case 99:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA15_KcEEEPNS0_4NodeEDpOT0_($0, 51578) | 0;
     break L1;
     break;
    }
   case 110:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA15_KcEEEPNS0_4NodeEDpOT0_($0, 51593) | 0;
     break L1;
     break;
    }
   case 84:
   case 116:
    {
     $117 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseDecltypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$1 >> 2] = $117;
     $193 = $117;
     label = 81;
     break L1;
     break;
    }
   case 118:
    {
     $119 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseVectorTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$1 >> 2] = $119;
     $193 = $119;
     label = 81;
     break L1;
     break;
    }
   case 112:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $123 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$2 >> 2] = $123;
     if (!$123) {
      $$10 = 0;
      break L1;
     } else {
      $125 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_22ParameterPackExpansionEJRPNS0_4NodeEEEES9_DpOT0_($0, $2) | 0;
      HEAP32[$1 >> 2] = $125;
      label = 82;
      break L1;
     }
     break;
    }
   case 120:
   case 119:
   case 79:
   case 111:
    {
     $127 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseFunctionTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$1 >> 2] = $127;
     $193 = $127;
     label = 81;
     break L1;
     break;
    }
   default:
    {
     $$10 = 0;
     break L1;
    }
   } while (0);
   break;
  }
 case 70:
  {
   $129 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseFunctionTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$1 >> 2] = $129;
   $193 = $129;
   label = 81;
   break;
  }
 case 65:
  {
   $131 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E14parseArrayTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$1 >> 2] = $131;
   $193 = $131;
   label = 81;
   break;
  }
 case 77:
  {
   $133 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E24parsePointerToMemberTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$1 >> 2] = $133;
   $193 = $133;
   label = 81;
   break;
  }
 case 84:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24) {
   case 101:
   case 117:
   case 115:
    {
     $136 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseClassEnumTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$1 >> 2] = $136;
     $193 = $136;
     label = 81;
     break L1;
     break;
    }
   default:
    {}
   }
   $137 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   $138 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseTemplateParamEv($137) | 0;
   HEAP32[$1 >> 2] = $138;
   if ($138) if ((HEAP8[$0 + 360 >> 0] | 0) != 0 ? (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 == 73 : 0) {
    $145 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($137, 0) | 0;
    HEAP32[$2 >> 2] = $145;
    if (!$145) {
     $$10 = 0;
     break L1;
    } else {
     $147 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $1, $2) | 0;
     HEAP32[$1 >> 2] = $147;
     label = 82;
     break L1;
    }
   } else label = 82; else $$10 = 0;
   break;
  }
 case 80:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $151 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$2 >> 2] = $151;
   if (!$151) {
    $$10 = 0;
    break L1;
   } else {
    $153 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11PointerTypeEJRPNS0_4NodeEEEES9_DpOT0_($0, $2) | 0;
    HEAP32[$1 >> 2] = $153;
    label = 82;
    break L1;
   }
   break;
  }
 case 82:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $157 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$2 >> 2] = $157;
   if (!$157) {
    $$10 = 0;
    break L1;
   } else {
    HEAP32[$3 >> 2] = 0;
    $159 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13ReferenceTypeEJRPNS0_4NodeENS0_13ReferenceKindEEEES9_DpOT0_($0, $2, $3) | 0;
    HEAP32[$1 >> 2] = $159;
    label = 82;
    break L1;
   }
   break;
  }
 case 79:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $163 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$2 >> 2] = $163;
   if (!$163) {
    $$10 = 0;
    break L1;
   } else {
    HEAP32[$3 >> 2] = 1;
    $165 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13ReferenceTypeEJRPNS0_4NodeENS0_13ReferenceKindEEEES9_DpOT0_($0, $2, $3) | 0;
    HEAP32[$1 >> 2] = $165;
    label = 82;
    break L1;
   }
   break;
  }
 case 67:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $169 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$2 >> 2] = $169;
   if (!$169) {
    $$10 = 0;
    break L1;
   } else {
    $171 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20PostfixQualifiedTypeEJRPNS0_4NodeERA9_KcEEES9_DpOT0_($0, $2) | 0;
    HEAP32[$1 >> 2] = $171;
    label = 82;
    break L1;
   }
   break;
  }
 case 71:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $175 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$2 >> 2] = $175;
   if (!$175) {
    $$10 = 0;
    break L1;
   } else {
    $177 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20PostfixQualifiedTypeEJRPNS0_4NodeERA11_KcEEES9_DpOT0_($0, $2) | 0;
    HEAP32[$1 >> 2] = $177;
    label = 82;
    break L1;
   }
   break;
  }
 case 83:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24) {
   case 116:
   case 0:
    {
     label = 80;
     break L1;
     break;
    }
   default:
    {}
   }
   $179 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   $180 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseSubstitutionEv($179) | 0;
   HEAP32[$2 >> 2] = $180;
   if ($180) if ((HEAP8[$0 + 360 >> 0] | 0) != 0 ? (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 == 73 : 0) {
    $187 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($179, 0) | 0;
    HEAP32[$3 >> 2] = $187;
    if (!$187) {
     $$10 = 0;
     break L1;
    } else {
     $189 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $2, $3) | 0;
     HEAP32[$1 >> 2] = $189;
     label = 82;
     break L1;
    }
   } else $$942$ph = $180; else $$942$ph = 0;
   $$10 = $$942$ph;
   break;
  }
 default:
  label = 80;
 } while (0);
 if ((label | 0) == 5) {
  $19 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseQualifiedTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
  HEAP32[$1 >> 2] = $19;
  $193 = $19;
  label = 81;
 } else if ((label | 0) == 80) {
  $191 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseClassEnumTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
  HEAP32[$1 >> 2] = $191;
  $193 = $191;
  label = 81;
 }
 if ((label | 0) == 81) if (!$193) $$10 = 0; else label = 82;
 if ((label | 0) == 82) {
  __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($0 + 148 | 0, $1);
  $$10 = HEAP32[$1 >> 2] | 0;
 }
 STACKTOP = sp;
 return $$10 | 0;
}

function _vfscanf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0266$lcssa = 0, $$0266407 = 0, $$0268 = 0, $$0270 = 0, $$0272 = 0, $$0273418 = 0, $$0276$ph$ph = 0, $$0280$ph = 0, $$0280$ph$ph = 0, $$0288409 = 0, $$0290414 = 0, $$0294 = 0, $$0295 = 0, $$0308412 = 0, $$10 = 0, $$10318 = 0, $$11 = 0, $$12 = 0, $$1267 = 0, $$1271 = 0, $$1274 = 0, $$1281 = 0, $$1291 = 0, $$1309 = 0, $$2 = 0, $$2275 = 0, $$2278$ph = 0, $$2282 = 0, $$2282$ph = 0, $$2292 = 0, $$2310$ph = 0, $$3$lcssa = 0, $$3283 = 0, $$3293 = 0, $$3406 = 0, $$4 = 0, $$4284 = 0, $$5 = 0, $$5313 = 0, $$6 = 0, $$6302 = 0, $$6314 = 0, $$7 = 0, $$7315 = 0, $$8 = 0, $$8316 = 0, $$9 = 0, $$9317 = 0, $$ph$ph = 0, $$pre$phi491Z2D = 0, $$pre$phiZ2D = 0, $$sroa$2$0$$sroa_idx13 = 0, $104 = 0, $105 = 0, $11 = 0, $114 = 0, $115 = 0, $120 = 0, $122 = 0, $125 = 0, $127 = 0, $13 = 0, $130 = 0, $133 = 0, $135 = 0, $138 = 0, $14 = 0, $145 = 0, $15 = 0, $151 = 0, $153 = 0, $16 = 0, $160 = 0, $161 = 0, $164 = 0, $166 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $177 = 0, $18 = 0, $180 = 0, $184 = 0, $186 = 0, $19 = 0, $191 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $199 = 0, $20 = 0, $204 = 0, $208 = 0, $213 = 0, $214 = 0, $215 = 0, $217 = 0, $219 = 0, $22 = 0, $220 = 0, $228 = 0, $240 = 0, $244 = 0, $246 = 0, $25 = 0, $254 = 0, $263 = 0, $266 = 0, $274 = 0, $281 = 0, $289 = 0, $296 = 0, $298 = 0, $3 = 0, $30 = 0, $305 = 0, $306 = 0, $309 = 0, $310 = 0, $321 = 0, $322 = 0, $323 = 0, $325 = 0, $328 = 0, $331 = 0, $334 = 0, $342 = 0.0, $343 = 0, $345 = 0, $348 = 0, $351 = 0, $354 = 0, $361 = 0, $369 = 0, $37 = 0, $372 = 0, $373 = 0, $374 = 0, $376 = 0, $384 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $4 = 0, $43 = 0, $45 = 0, $5 = 0, $52 = 0, $53 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $60 = 0, $63 = 0, $64 = 0, $65 = 0, $67 = 0, $68 = 0, $78 = 0, $85 = 0, $spec$select = 0, $spec$select319 = 0, $trunc = 0, label = 0, sp = 0, $$2282$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 $3 = sp + 264 | 0;
 $4 = sp;
 $5 = sp + 260 | 0;
 $6 = sp + 272 | 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) $386 = ___lockfile($0) | 0; else $386 = 0;
 $11 = HEAP8[$1 >> 0] | 0;
 L4 : do if ($11 << 24 >> 24) {
  $13 = $0 + 4 | 0;
  $14 = $0 + 104 | 0;
  $15 = $0 + 120 | 0;
  $16 = $0 + 8 | 0;
  $17 = $4 + 10 | 0;
  $18 = $4 + 33 | 0;
  $19 = $4 + 46 | 0;
  $20 = $4 + 94 | 0;
  $$sroa$2$0$$sroa_idx13 = $3 + 4 | 0;
  $$0273418 = $1;
  $$0290414 = 0;
  $$0308412 = 0;
  $22 = $11;
  $387 = 0;
  $56 = 0;
  $57 = 0;
  L6 : while (1) {
   L8 : do if (!(_isspace($22 & 255) | 0)) {
    $63 = (HEAP8[$$0273418 >> 0] | 0) == 37;
    L10 : do if ($63) {
     $64 = $$0273418 + 1 | 0;
     $65 = HEAP8[$64 >> 0] | 0;
     L12 : do switch ($65 << 24 >> 24) {
     case 37:
      {
       break L10;
       break;
      }
     case 42:
      {
       $$0295 = 0;
       $$2275 = $$0273418 + 2 | 0;
       break;
      }
     default:
      {
       if (_isdigit($65 & 255) | 0 ? (HEAP8[$$0273418 + 2 >> 0] | 0) == 36 : 0) {
        $$0295 = _arg_n($2, (HEAPU8[$64 >> 0] | 0) + -48 | 0) | 0;
        $$2275 = $$0273418 + 3 | 0;
        break L12;
       }
       $104 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
       $105 = HEAP32[$104 >> 2] | 0;
       HEAP32[$2 >> 2] = $104 + 4;
       $$0295 = $105;
       $$2275 = $64;
      }
     } while (0);
     if (!(_isdigit(HEAPU8[$$2275 >> 0] | 0) | 0)) {
      $$0266$lcssa = 0;
      $$3$lcssa = $$2275;
     } else {
      $$0266407 = 0;
      $$3406 = $$2275;
      while (1) {
       $114 = ($$0266407 * 10 | 0) + -48 + (HEAPU8[$$3406 >> 0] | 0) | 0;
       $115 = $$3406 + 1 | 0;
       if (!(_isdigit(HEAPU8[$115 >> 0] | 0) | 0)) {
        $$0266$lcssa = $114;
        $$3$lcssa = $115;
        break;
       } else {
        $$0266407 = $114;
        $$3406 = $115;
       }
      }
     }
     $120 = HEAP8[$$3$lcssa >> 0] | 0;
     $122 = $$3$lcssa + 1 | 0;
     if ($120 << 24 >> 24 == 109) {
      $$0270 = ($$0295 | 0) != 0 & 1;
      $$1309 = 0;
      $$4 = $122;
      $$pre$phiZ2D = $$3$lcssa + 2 | 0;
      $125 = HEAP8[$122 >> 0] | 0;
      $392 = 0;
     } else {
      $$0270 = 0;
      $$1309 = $$0308412;
      $$4 = $$3$lcssa;
      $$pre$phiZ2D = $122;
      $125 = $120;
      $392 = $387;
     }
     switch ($125 << 24 >> 24) {
     case 104:
      {
       $127 = (HEAP8[$$pre$phiZ2D >> 0] | 0) == 104;
       $$0268 = $127 ? -2 : -1;
       $$5 = $127 ? $$4 + 2 | 0 : $$pre$phiZ2D;
       break;
      }
     case 108:
      {
       $130 = (HEAP8[$$pre$phiZ2D >> 0] | 0) == 108;
       $$0268 = $130 ? 3 : 1;
       $$5 = $130 ? $$4 + 2 | 0 : $$pre$phiZ2D;
       break;
      }
     case 106:
      {
       $$0268 = 3;
       $$5 = $$pre$phiZ2D;
       break;
      }
     case 116:
     case 122:
      {
       $$0268 = 1;
       $$5 = $$pre$phiZ2D;
       break;
      }
     case 76:
      {
       $$0268 = 2;
       $$5 = $$pre$phiZ2D;
       break;
      }
     case 110:
     case 112:
     case 67:
     case 83:
     case 91:
     case 99:
     case 115:
     case 88:
     case 71:
     case 70:
     case 69:
     case 65:
     case 103:
     case 102:
     case 101:
     case 97:
     case 120:
     case 117:
     case 111:
     case 105:
     case 100:
      {
       $$0268 = 0;
       $$5 = $$4;
       break;
      }
     default:
      {
       $$8316 = $$1309;
       $393 = $392;
       label = 143;
       break L6;
      }
     }
     $133 = HEAPU8[$$5 >> 0] | 0;
     $135 = ($133 & 47 | 0) == 3;
     $spec$select = $135 ? $133 | 32 : $133;
     $spec$select319 = $135 ? 1 : $$0268;
     $trunc = $spec$select & 255;
     switch ($trunc << 24 >> 24) {
     case 99:
      {
       $$1267 = ($$0266$lcssa | 0) > 1 ? $$0266$lcssa : 1;
       $372 = $56;
       $373 = $57;
       break;
      }
     case 91:
      {
       $$1267 = $$0266$lcssa;
       $372 = $56;
       $373 = $57;
       break;
      }
     case 110:
      {
       _store_int($$0295, $spec$select319, $56, $57);
       $$12 = $$5;
       $$1291 = $$0290414;
       $$7315 = $$1309;
       $388 = $392;
       $389 = $56;
       $390 = $57;
       break L8;
       break;
      }
     default:
      {
       ___shlim($0, 0, 0);
       do {
        $138 = HEAP32[$13 >> 2] | 0;
        if ($138 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
         HEAP32[$13 >> 2] = $138 + 1;
         $145 = HEAPU8[$138 >> 0] | 0;
        } else $145 = ___shgetc($0) | 0;
       } while ((_isspace($145) | 0) != 0);
       if (!(HEAP32[$14 >> 2] | 0)) $161 = HEAP32[$13 >> 2] | 0; else {
        $151 = (HEAP32[$13 >> 2] | 0) + -1 | 0;
        HEAP32[$13 >> 2] = $151;
        $161 = $151;
       }
       $153 = $15;
       $160 = $161 - (HEAP32[$16 >> 2] | 0) | 0;
       $164 = _i64Add(HEAP32[$153 >> 2] | 0, HEAP32[$153 + 4 >> 2] | 0, $56 | 0, $57 | 0) | 0;
       $166 = _i64Add($164 | 0, getTempRet0() | 0, $160 | 0, (($160 | 0) < 0) << 31 >> 31 | 0) | 0;
       $$1267 = $$0266$lcssa;
       $372 = $166;
       $373 = getTempRet0() | 0;
      }
     }
     $169 = (($$1267 | 0) < 0) << 31 >> 31;
     ___shlim($0, $$1267, $169);
     $170 = HEAP32[$13 >> 2] | 0;
     $171 = HEAP32[$14 >> 2] | 0;
     if ($170 >>> 0 < $171 >>> 0) {
      HEAP32[$13 >> 2] = $170 + 1;
      $177 = $171;
     } else {
      if ((___shgetc($0) | 0) < 0) {
       $$8316 = $$1309;
       $393 = $392;
       label = 143;
       break L6;
      }
      $177 = HEAP32[$14 >> 2] | 0;
     }
     if ($177 | 0) HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + -1;
     L59 : do switch ($trunc << 24 >> 24) {
     case 91:
     case 99:
     case 115:
      {
       $180 = ($spec$select | 0) == 99;
       L61 : do if (($spec$select | 16 | 0) == 115) {
        _memset($4 | 0, -1, 257) | 0;
        HEAP8[$4 >> 0] = 0;
        if (($spec$select | 0) == 115) {
         HEAP8[$18 >> 0] = 0;
         HEAP16[$17 >> 1] = 0;
         HEAP16[$17 + 2 >> 1] = 0;
         HEAP8[$17 + 4 >> 0] = 0;
         $$10 = $$5;
        } else $$10 = $$5;
       } else {
        $184 = $$5 + 1 | 0;
        $186 = (HEAP8[$184 >> 0] | 0) == 94;
        $$0294 = $186 & 1;
        $$6 = $186 ? $$5 + 2 | 0 : $184;
        _memset($4 | 0, $$0294 | 0, 257) | 0;
        HEAP8[$4 >> 0] = 0;
        switch (HEAP8[$$6 >> 0] | 0) {
        case 45:
         {
          $191 = ($$0294 ^ 1) & 255;
          HEAP8[$19 >> 0] = $191;
          $$7 = $$6 + 1 | 0;
          $$pre$phi491Z2D = $191;
          break;
         }
        case 93:
         {
          $194 = ($$0294 ^ 1) & 255;
          HEAP8[$20 >> 0] = $194;
          $$7 = $$6 + 1 | 0;
          $$pre$phi491Z2D = $194;
          break;
         }
        default:
         {
          $$7 = $$6;
          $$pre$phi491Z2D = ($$0294 ^ 1) & 255;
         }
        }
        $$8 = $$7;
        while (1) {
         $195 = HEAP8[$$8 >> 0] | 0;
         L72 : do switch ($195 << 24 >> 24) {
         case 0:
          {
           $$8316 = $$1309;
           $393 = $392;
           label = 143;
           break L6;
           break;
          }
         case 93:
          {
           $$10 = $$8;
           break L61;
           break;
          }
         case 45:
          {
           $196 = $$8 + 1 | 0;
           $197 = HEAP8[$196 >> 0] | 0;
           switch ($197 << 24 >> 24) {
           case 93:
           case 0:
            {
             $$9 = $$8;
             $208 = 45;
             break L72;
             break;
            }
           default:
            {}
           }
           $199 = HEAP8[$$8 + -1 >> 0] | 0;
           if (($199 & 255) < ($197 & 255)) {
            $$0288409 = $199 & 255;
            do {
             $$0288409 = $$0288409 + 1 | 0;
             HEAP8[$4 + $$0288409 >> 0] = $$pre$phi491Z2D;
             $204 = HEAP8[$196 >> 0] | 0;
            } while ($$0288409 >>> 0 < ($204 & 255) >>> 0);
            $$9 = $196;
            $208 = $204;
           } else {
            $$9 = $196;
            $208 = $197;
           }
           break;
          }
         default:
          {
           $$9 = $$8;
           $208 = $195;
          }
         } while (0);
         HEAP8[$4 + (($208 & 255) + 1) >> 0] = $$pre$phi491Z2D;
         $$8 = $$9 + 1 | 0;
        }
       } while (0);
       $213 = $180 ? $$1267 + 1 | 0 : 31;
       $214 = ($spec$select319 | 0) == 1;
       $215 = ($$0270 | 0) != 0;
       L80 : do if ($214) {
        if ($215) {
         $217 = _malloc($213 << 2) | 0;
         if (!$217) {
          $$8316 = 0;
          $393 = 0;
          label = 143;
          break L6;
         } else $395 = $217;
        } else $395 = $$0295;
        HEAP32[$3 >> 2] = 0;
        HEAP32[$$sroa$2$0$$sroa_idx13 >> 2] = 0;
        $$0276$ph$ph = $213;
        $$0280$ph$ph = 0;
        $$ph$ph = $395;
        L85 : while (1) {
         $219 = ($$ph$ph | 0) == 0;
         $$0280$ph = $$0280$ph$ph;
         while (1) {
          L89 : while (1) {
           $220 = HEAP32[$13 >> 2] | 0;
           if ($220 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
            HEAP32[$13 >> 2] = $220 + 1;
            $228 = HEAPU8[$220 >> 0] | 0;
           } else $228 = ___shgetc($0) | 0;
           if (!(HEAP8[$4 + ($228 + 1) >> 0] | 0)) break L85;
           HEAP8[$6 >> 0] = $228;
           switch (_mbrtowc($5, $6, 1, $3) | 0) {
           case -1:
            {
             $$8316 = 0;
             $393 = $$ph$ph;
             label = 143;
             break L6;
             break;
            }
           case -2:
            break;
           default:
            break L89;
           }
          }
          if ($219) $$1281 = $$0280$ph; else {
           HEAP32[$$ph$ph + ($$0280$ph << 2) >> 2] = HEAP32[$5 >> 2];
           $$1281 = $$0280$ph + 1 | 0;
          }
          if ($215 & ($$1281 | 0) == ($$0276$ph$ph | 0)) break; else $$0280$ph = $$1281;
         }
         $$0276$ph$ph = $$0276$ph$ph << 1 | 1;
         $240 = _realloc($$ph$ph, $$0276$ph$ph << 2) | 0;
         if (!$240) {
          $$8316 = 0;
          $393 = $$ph$ph;
          label = 143;
          break L6;
         } else {
          $$0280$ph$ph = $$1281;
          $$ph$ph = $240;
         }
        }
        if (!(_mbsinit($3) | 0)) {
         $$8316 = 0;
         $393 = $$ph$ph;
         label = 143;
         break L6;
        } else {
         $$4284 = $$0280$ph;
         $$5313 = 0;
         $$6302 = $$ph$ph;
         $396 = $$ph$ph;
        }
       } else {
        if ($215) {
         $244 = _malloc($213) | 0;
         if (!$244) {
          $$8316 = 0;
          $393 = 0;
          label = 143;
          break L6;
         }
         $$2278$ph = $213;
         $$2282$ph = 0;
         $$2310$ph = $244;
         while (1) {
          $$2282 = $$2282$ph;
          do {
           $246 = HEAP32[$13 >> 2] | 0;
           if ($246 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
            HEAP32[$13 >> 2] = $246 + 1;
            $254 = HEAPU8[$246 >> 0] | 0;
           } else $254 = ___shgetc($0) | 0;
           if (!(HEAP8[$4 + ($254 + 1) >> 0] | 0)) {
            $$4284 = $$2282;
            $$5313 = $$2310$ph;
            $$6302 = 0;
            $396 = 0;
            break L80;
           }
           $$2282$looptemp = $$2282;
           $$2282 = $$2282 + 1 | 0;
           HEAP8[$$2310$ph + $$2282$looptemp >> 0] = $254;
          } while (($$2282 | 0) != ($$2278$ph | 0));
          $$2278$ph = $$2278$ph << 1 | 1;
          $263 = _realloc($$2310$ph, $$2278$ph) | 0;
          if (!$263) {
           $$8316 = $$2310$ph;
           $393 = 0;
           label = 143;
           break L6;
          } else {
           $$2282$ph = $$2282;
           $$2310$ph = $263;
          }
         }
        }
        if (!$$0295) while (1) {
         $281 = HEAP32[$13 >> 2] | 0;
         if ($281 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
          HEAP32[$13 >> 2] = $281 + 1;
          $289 = HEAPU8[$281 >> 0] | 0;
         } else $289 = ___shgetc($0) | 0;
         if (!(HEAP8[$4 + ($289 + 1) >> 0] | 0)) {
          $$4284 = 0;
          $$5313 = 0;
          $$6302 = 0;
          $396 = 0;
          break L80;
         }
        }
        $$3283 = 0;
        while (1) {
         $266 = HEAP32[$13 >> 2] | 0;
         if ($266 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
          HEAP32[$13 >> 2] = $266 + 1;
          $274 = HEAPU8[$266 >> 0] | 0;
         } else $274 = ___shgetc($0) | 0;
         if (!(HEAP8[$4 + ($274 + 1) >> 0] | 0)) {
          $$4284 = $$3283;
          $$5313 = $$0295;
          $$6302 = 0;
          $396 = 0;
          break L80;
         }
         HEAP8[$$0295 + $$3283 >> 0] = $274;
         $$3283 = $$3283 + 1 | 0;
        }
       } while (0);
       if (!(HEAP32[$14 >> 2] | 0)) $306 = HEAP32[$13 >> 2] | 0; else {
        $296 = (HEAP32[$13 >> 2] | 0) + -1 | 0;
        HEAP32[$13 >> 2] = $296;
        $306 = $296;
       }
       $298 = $15;
       $305 = $306 - (HEAP32[$16 >> 2] | 0) | 0;
       $309 = _i64Add(HEAP32[$298 >> 2] | 0, HEAP32[$298 + 4 >> 2] | 0, $305 | 0, (($305 | 0) < 0) << 31 >> 31 | 0) | 0;
       $310 = getTempRet0() | 0;
       if (($309 | 0) == 0 & ($310 | 0) == 0) {
        $$10318 = $$5313;
        $$2 = $$0270;
        $$2292 = $$0290414;
        $384 = $396;
        break L6;
       }
       if (!(($309 | 0) == ($$1267 | 0) & ($310 | 0) == ($169 | 0) | $180 ^ 1)) {
        $$10318 = $$5313;
        $$2 = $$0270;
        $$2292 = $$0290414;
        $384 = $396;
        break L6;
       }
       do if ($215) if ($214) {
        HEAP32[$$0295 >> 2] = $$6302;
        break;
       } else {
        HEAP32[$$0295 >> 2] = $$5313;
        break;
       } while (0);
       if ($180) {
        $$11 = $$10;
        $$6314 = $$5313;
        $394 = $396;
       } else {
        if ($$6302 | 0) HEAP32[$$6302 + ($$4284 << 2) >> 2] = 0;
        if (!$$5313) {
         $$11 = $$10;
         $$6314 = 0;
         $394 = $396;
         break L59;
        }
        HEAP8[$$5313 + $$4284 >> 0] = 0;
        $$11 = $$10;
        $$6314 = $$5313;
        $394 = $396;
       }
       break;
      }
     case 120:
     case 88:
     case 112:
      {
       $$0272 = 16;
       label = 131;
       break;
      }
     case 111:
      {
       $$0272 = 8;
       label = 131;
       break;
      }
     case 117:
     case 100:
      {
       $$0272 = 10;
       label = 131;
       break;
      }
     case 105:
      {
       $$0272 = 0;
       label = 131;
       break;
      }
     case 71:
     case 103:
     case 70:
     case 102:
     case 69:
     case 101:
     case 65:
     case 97:
      {
       $342 = +___floatscan($0, $spec$select319, 0);
       $343 = $15;
       $345 = HEAP32[$343 >> 2] | 0;
       $348 = HEAP32[$343 + 4 >> 2] | 0;
       $351 = (HEAP32[$13 >> 2] | 0) - (HEAP32[$16 >> 2] | 0) | 0;
       $354 = _i64Subtract(0, 0, $351 | 0, (($351 | 0) < 0) << 31 >> 31 | 0) | 0;
       if (($345 | 0) == ($354 | 0) & ($348 | 0) == (getTempRet0() | 0)) {
        $$10318 = $$1309;
        $$2 = $$0270;
        $$2292 = $$0290414;
        $384 = $392;
        break L6;
       }
       if (!$$0295) {
        $$11 = $$5;
        $$6314 = $$1309;
        $394 = $392;
       } else switch ($spec$select319 | 0) {
       case 0:
        {
         HEAPF32[$$0295 >> 2] = $342;
         $$11 = $$5;
         $$6314 = $$1309;
         $394 = $392;
         break L59;
         break;
        }
       case 1:
        {
         HEAPF64[$$0295 >> 3] = $342;
         $$11 = $$5;
         $$6314 = $$1309;
         $394 = $392;
         break L59;
         break;
        }
       case 2:
        {
         HEAPF64[$$0295 >> 3] = $342;
         $$11 = $$5;
         $$6314 = $$1309;
         $394 = $392;
         break L59;
         break;
        }
       default:
        {
         $$11 = $$5;
         $$6314 = $$1309;
         $394 = $392;
         break L59;
        }
       }
       break;
      }
     default:
      {
       $$11 = $$5;
       $$6314 = $$1309;
       $394 = $392;
      }
     } while (0);
     do if ((label | 0) == 131) {
      label = 0;
      $321 = ___intscan($0, $$0272, 0, -1, -1) | 0;
      $322 = getTempRet0() | 0;
      $323 = $15;
      $325 = HEAP32[$323 >> 2] | 0;
      $328 = HEAP32[$323 + 4 >> 2] | 0;
      $331 = (HEAP32[$13 >> 2] | 0) - (HEAP32[$16 >> 2] | 0) | 0;
      $334 = _i64Subtract(0, 0, $331 | 0, (($331 | 0) < 0) << 31 >> 31 | 0) | 0;
      if (($325 | 0) == ($334 | 0) & ($328 | 0) == (getTempRet0() | 0)) {
       $$10318 = $$1309;
       $$2 = $$0270;
       $$2292 = $$0290414;
       $384 = $392;
       break L6;
      }
      if (($$0295 | 0) != 0 & ($spec$select | 0) == 112) {
       HEAP32[$$0295 >> 2] = $321;
       $$11 = $$5;
       $$6314 = $$1309;
       $394 = $392;
       break;
      } else {
       _store_int($$0295, $spec$select319, $321, $322);
       $$11 = $$5;
       $$6314 = $$1309;
       $394 = $392;
       break;
      }
     } while (0);
     $361 = $15;
     $369 = (HEAP32[$13 >> 2] | 0) - (HEAP32[$16 >> 2] | 0) | 0;
     $374 = _i64Add(HEAP32[$361 >> 2] | 0, HEAP32[$361 + 4 >> 2] | 0, $372 | 0, $373 | 0) | 0;
     $376 = _i64Add($374 | 0, getTempRet0() | 0, $369 | 0, (($369 | 0) < 0) << 31 >> 31 | 0) | 0;
     $$12 = $$11;
     $$1291 = $$0290414 + (($$0295 | 0) != 0 & 1) | 0;
     $$7315 = $$6314;
     $388 = $394;
     $389 = $376;
     $390 = getTempRet0() | 0;
     break L8;
    } while (0);
    $67 = $$0273418 + ($63 & 1) | 0;
    ___shlim($0, 0, 0);
    $68 = HEAP32[$13 >> 2] | 0;
    if ($68 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
     HEAP32[$13 >> 2] = $68 + 1;
     $78 = HEAPU8[$68 >> 0] | 0;
    } else $78 = ___shgetc($0) | 0;
    if (($78 | 0) != (HEAPU8[$67 >> 0] | 0)) {
     label = 23;
     break L6;
    }
    $85 = _i64Add($56 | 0, $57 | 0, 1, 0) | 0;
    $$12 = $67;
    $$1291 = $$0290414;
    $$7315 = $$0308412;
    $388 = $387;
    $389 = $85;
    $390 = getTempRet0() | 0;
   } else {
    $$1274 = $$0273418;
    while (1) {
     $25 = $$1274 + 1 | 0;
     if (!(_isspace(HEAPU8[$25 >> 0] | 0) | 0)) break; else $$1274 = $25;
    }
    ___shlim($0, 0, 0);
    do {
     $30 = HEAP32[$13 >> 2] | 0;
     if ($30 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
      HEAP32[$13 >> 2] = $30 + 1;
      $37 = HEAPU8[$30 >> 0] | 0;
     } else $37 = ___shgetc($0) | 0;
    } while ((_isspace($37) | 0) != 0);
    if (!(HEAP32[$14 >> 2] | 0)) $53 = HEAP32[$13 >> 2] | 0; else {
     $43 = (HEAP32[$13 >> 2] | 0) + -1 | 0;
     HEAP32[$13 >> 2] = $43;
     $53 = $43;
    }
    $45 = $15;
    $52 = $53 - (HEAP32[$16 >> 2] | 0) | 0;
    $58 = _i64Add(HEAP32[$45 >> 2] | 0, HEAP32[$45 + 4 >> 2] | 0, $56 | 0, $57 | 0) | 0;
    $60 = _i64Add($58 | 0, getTempRet0() | 0, $52 | 0, (($52 | 0) < 0) << 31 >> 31 | 0) | 0;
    $$12 = $$1274;
    $$1291 = $$0290414;
    $$7315 = $$0308412;
    $388 = $387;
    $389 = $60;
    $390 = getTempRet0() | 0;
   } while (0);
   $$0273418 = $$12 + 1 | 0;
   $22 = HEAP8[$$0273418 >> 0] | 0;
   if (!($22 << 24 >> 24)) {
    $$3293 = $$1291;
    break L4;
   } else {
    $$0290414 = $$1291;
    $$0308412 = $$7315;
    $387 = $388;
    $56 = $389;
    $57 = $390;
   }
  }
  if ((label | 0) == 23) {
   if (HEAP32[$14 >> 2] | 0) HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + -1;
   if (($$0290414 | 0) != 0 | ($78 | 0) > -1) {
    $$3293 = $$0290414;
    break;
   } else {
    $$1271 = 0;
    $$9317 = $$0308412;
    $391 = $387;
    label = 144;
   }
  } else if ((label | 0) == 143) if (!$$0290414) {
   $$1271 = $$0270;
   $$9317 = $$8316;
   $391 = $393;
   label = 144;
  } else {
   $$10318 = $$8316;
   $$2 = $$0270;
   $$2292 = $$0290414;
   $384 = $393;
  }
  if ((label | 0) == 144) {
   $$10318 = $$9317;
   $$2 = $$1271;
   $$2292 = -1;
   $384 = $391;
  }
  if (!$$2) $$3293 = $$2292; else {
   _free($$10318);
   _free($384);
   $$3293 = $$2292;
  }
 } else $$3293 = 0; while (0);
 if ($386 | 0) ___unlockfile($0);
 STACKTOP = sp;
 return $$3293 | 0;
}

function __ZNSt3__212__next_primeEm($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0328 = 0, $$0334 = 0, $$0337 = 0, $$1 = 0, $$2332 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$8 = 0, $$sink369 = 0, $1 = 0, $100 = 0, $104 = 0, $105 = 0, $109 = 0, $110 = 0, $114 = 0, $115 = 0, $119 = 0, $120 = 0, $124 = 0, $125 = 0, $129 = 0, $130 = 0, $134 = 0, $135 = 0, $139 = 0, $140 = 0, $144 = 0, $145 = 0, $149 = 0, $150 = 0, $154 = 0, $155 = 0, $159 = 0, $16 = 0, $160 = 0, $164 = 0, $165 = 0, $169 = 0, $170 = 0, $174 = 0, $175 = 0, $179 = 0, $180 = 0, $184 = 0, $185 = 0, $189 = 0, $19 = 0, $190 = 0, $194 = 0, $195 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $204 = 0, $205 = 0, $209 = 0, $210 = 0, $214 = 0, $215 = 0, $219 = 0, $220 = 0, $224 = 0, $225 = 0, $229 = 0, $230 = 0, $234 = 0, $235 = 0, $239 = 0, $240 = 0, $244 = 0, $245 = 0, $249 = 0, $25 = 0, $250 = 0, $254 = 0, $255 = 0, $259 = 0, $260 = 0, $261 = 0, $263 = 0, $266 = 0, $267 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $35 = 0, $39 = 0, $40 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $54 = 0, $55 = 0, $59 = 0, $60 = 0, $64 = 0, $65 = 0, $69 = 0, $7 = 0, $70 = 0, $74 = 0, $75 = 0, $79 = 0, $8 = 0, $80 = 0, $84 = 0, $85 = 0, $89 = 0, $90 = 0, $94 = 0, $95 = 0, $99 = 0, $spec$select = 0, $spec$select339$sink = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 $2 = sp + 8 | 0;
 $3 = sp + 4 | 0;
 HEAP32[$2 >> 2] = $0;
 do if ($0 >>> 0 >= 212) {
  $7 = ($0 >>> 0) / 210 | 0;
  $8 = $7 * 210 | 0;
  HEAP32[$3 >> 2] = $0 - $8;
  $$0328 = 0;
  $$0337 = $7;
  $$sink369 = $8;
  $spec$select339$sink = (__ZNSt3__213__lower_boundIRNS_6__lessIjmEEPKjmEET0_S6_S6_RKT1_T_(12736, 12928, $3, $1) | 0) - 12736 >> 2;
  L4 : while (1) {
   $16 = (HEAP32[12736 + ($spec$select339$sink << 2) >> 2] | 0) + $$sink369 | 0;
   $$0334 = 5;
   while (1) {
    if ($$0334 >>> 0 >= 47) {
     label = 6;
     break;
    }
    $19 = HEAP32[12544 + ($$0334 << 2) >> 2] | 0;
    $20 = ($16 >>> 0) / ($19 >>> 0) | 0;
    if ($20 >>> 0 < $19 >>> 0) {
     label = 107;
     break L4;
    }
    if (($16 | 0) == (Math_imul($20, $19) | 0)) {
     $$6 = $$0328;
     break;
    } else $$0334 = $$0334 + 1 | 0;
   }
   L10 : do if ((label | 0) == 6) {
    label = 0;
    $$0 = 211;
    $$4 = $$0328;
    L12 : while (1) {
     $25 = ($16 >>> 0) / ($$0 >>> 0) | 0;
     do if ($25 >>> 0 >= $$0 >>> 0) if (($16 | 0) != (Math_imul($25, $$0) | 0)) {
      $29 = $$0 + 10 | 0;
      $30 = ($16 >>> 0) / ($29 >>> 0) | 0;
      if ($30 >>> 0 >= $29 >>> 0) if (($16 | 0) != (Math_imul($30, $29) | 0)) {
       $34 = $$0 + 12 | 0;
       $35 = ($16 >>> 0) / ($34 >>> 0) | 0;
       if ($35 >>> 0 >= $34 >>> 0) if (($16 | 0) != (Math_imul($35, $34) | 0)) {
        $39 = $$0 + 16 | 0;
        $40 = ($16 >>> 0) / ($39 >>> 0) | 0;
        if ($40 >>> 0 >= $39 >>> 0) if (($16 | 0) != (Math_imul($40, $39) | 0)) {
         $44 = $$0 + 18 | 0;
         $45 = ($16 >>> 0) / ($44 >>> 0) | 0;
         if ($45 >>> 0 >= $44 >>> 0) if (($16 | 0) != (Math_imul($45, $44) | 0)) {
          $49 = $$0 + 22 | 0;
          $50 = ($16 >>> 0) / ($49 >>> 0) | 0;
          if ($50 >>> 0 >= $49 >>> 0) if (($16 | 0) != (Math_imul($50, $49) | 0)) {
           $54 = $$0 + 28 | 0;
           $55 = ($16 >>> 0) / ($54 >>> 0) | 0;
           if ($55 >>> 0 >= $54 >>> 0) if (($16 | 0) == (Math_imul($55, $54) | 0)) {
            $$1 = $54;
            $$2332 = 9;
            $$5 = $$4;
           } else {
            $59 = $$0 + 30 | 0;
            $60 = ($16 >>> 0) / ($59 >>> 0) | 0;
            if ($60 >>> 0 < $59 >>> 0) {
             $$1 = $59;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($60, $59) | 0)) {
             $$1 = $59;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $64 = $$0 + 36 | 0;
            $65 = ($16 >>> 0) / ($64 >>> 0) | 0;
            if ($65 >>> 0 < $64 >>> 0) {
             $$1 = $64;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($65, $64) | 0)) {
             $$1 = $64;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $69 = $$0 + 40 | 0;
            $70 = ($16 >>> 0) / ($69 >>> 0) | 0;
            if ($70 >>> 0 < $69 >>> 0) {
             $$1 = $69;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($70, $69) | 0)) {
             $$1 = $69;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $74 = $$0 + 42 | 0;
            $75 = ($16 >>> 0) / ($74 >>> 0) | 0;
            if ($75 >>> 0 < $74 >>> 0) {
             $$1 = $74;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($75, $74) | 0)) {
             $$1 = $74;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $79 = $$0 + 46 | 0;
            $80 = ($16 >>> 0) / ($79 >>> 0) | 0;
            if ($80 >>> 0 < $79 >>> 0) {
             $$1 = $79;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($80, $79) | 0)) {
             $$1 = $79;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $84 = $$0 + 52 | 0;
            $85 = ($16 >>> 0) / ($84 >>> 0) | 0;
            if ($85 >>> 0 < $84 >>> 0) {
             $$1 = $84;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($85, $84) | 0)) {
             $$1 = $84;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $89 = $$0 + 58 | 0;
            $90 = ($16 >>> 0) / ($89 >>> 0) | 0;
            if ($90 >>> 0 < $89 >>> 0) {
             $$1 = $89;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($90, $89) | 0)) {
             $$1 = $89;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $94 = $$0 + 60 | 0;
            $95 = ($16 >>> 0) / ($94 >>> 0) | 0;
            if ($95 >>> 0 < $94 >>> 0) {
             $$1 = $94;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($95, $94) | 0)) {
             $$1 = $94;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $99 = $$0 + 66 | 0;
            $100 = ($16 >>> 0) / ($99 >>> 0) | 0;
            if ($100 >>> 0 < $99 >>> 0) {
             $$1 = $99;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($100, $99) | 0)) {
             $$1 = $99;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $104 = $$0 + 70 | 0;
            $105 = ($16 >>> 0) / ($104 >>> 0) | 0;
            if ($105 >>> 0 < $104 >>> 0) {
             $$1 = $104;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($105, $104) | 0)) {
             $$1 = $104;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $109 = $$0 + 72 | 0;
            $110 = ($16 >>> 0) / ($109 >>> 0) | 0;
            if ($110 >>> 0 < $109 >>> 0) {
             $$1 = $109;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($110, $109) | 0)) {
             $$1 = $109;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $114 = $$0 + 78 | 0;
            $115 = ($16 >>> 0) / ($114 >>> 0) | 0;
            if ($115 >>> 0 < $114 >>> 0) {
             $$1 = $114;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($115, $114) | 0)) {
             $$1 = $114;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $119 = $$0 + 82 | 0;
            $120 = ($16 >>> 0) / ($119 >>> 0) | 0;
            if ($120 >>> 0 < $119 >>> 0) {
             $$1 = $119;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($120, $119) | 0)) {
             $$1 = $119;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $124 = $$0 + 88 | 0;
            $125 = ($16 >>> 0) / ($124 >>> 0) | 0;
            if ($125 >>> 0 < $124 >>> 0) {
             $$1 = $124;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($125, $124) | 0)) {
             $$1 = $124;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $129 = $$0 + 96 | 0;
            $130 = ($16 >>> 0) / ($129 >>> 0) | 0;
            if ($130 >>> 0 < $129 >>> 0) {
             $$1 = $129;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($130, $129) | 0)) {
             $$1 = $129;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $134 = $$0 + 100 | 0;
            $135 = ($16 >>> 0) / ($134 >>> 0) | 0;
            if ($135 >>> 0 < $134 >>> 0) {
             $$1 = $134;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($135, $134) | 0)) {
             $$1 = $134;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $139 = $$0 + 102 | 0;
            $140 = ($16 >>> 0) / ($139 >>> 0) | 0;
            if ($140 >>> 0 < $139 >>> 0) {
             $$1 = $139;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($140, $139) | 0)) {
             $$1 = $139;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $144 = $$0 + 106 | 0;
            $145 = ($16 >>> 0) / ($144 >>> 0) | 0;
            if ($145 >>> 0 < $144 >>> 0) {
             $$1 = $144;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($145, $144) | 0)) {
             $$1 = $144;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $149 = $$0 + 108 | 0;
            $150 = ($16 >>> 0) / ($149 >>> 0) | 0;
            if ($150 >>> 0 < $149 >>> 0) {
             $$1 = $149;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($150, $149) | 0)) {
             $$1 = $149;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $154 = $$0 + 112 | 0;
            $155 = ($16 >>> 0) / ($154 >>> 0) | 0;
            if ($155 >>> 0 < $154 >>> 0) {
             $$1 = $154;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($155, $154) | 0)) {
             $$1 = $154;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $159 = $$0 + 120 | 0;
            $160 = ($16 >>> 0) / ($159 >>> 0) | 0;
            if ($160 >>> 0 < $159 >>> 0) {
             $$1 = $159;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($160, $159) | 0)) {
             $$1 = $159;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $164 = $$0 + 126 | 0;
            $165 = ($16 >>> 0) / ($164 >>> 0) | 0;
            if ($165 >>> 0 < $164 >>> 0) {
             $$1 = $164;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($165, $164) | 0)) {
             $$1 = $164;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $169 = $$0 + 130 | 0;
            $170 = ($16 >>> 0) / ($169 >>> 0) | 0;
            if ($170 >>> 0 < $169 >>> 0) {
             $$1 = $169;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($170, $169) | 0)) {
             $$1 = $169;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $174 = $$0 + 136 | 0;
            $175 = ($16 >>> 0) / ($174 >>> 0) | 0;
            if ($175 >>> 0 < $174 >>> 0) {
             $$1 = $174;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($175, $174) | 0)) {
             $$1 = $174;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $179 = $$0 + 138 | 0;
            $180 = ($16 >>> 0) / ($179 >>> 0) | 0;
            if ($180 >>> 0 < $179 >>> 0) {
             $$1 = $179;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($180, $179) | 0)) {
             $$1 = $179;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $184 = $$0 + 142 | 0;
            $185 = ($16 >>> 0) / ($184 >>> 0) | 0;
            if ($185 >>> 0 < $184 >>> 0) {
             $$1 = $184;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($185, $184) | 0)) {
             $$1 = $184;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $189 = $$0 + 148 | 0;
            $190 = ($16 >>> 0) / ($189 >>> 0) | 0;
            if ($190 >>> 0 < $189 >>> 0) {
             $$1 = $189;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($190, $189) | 0)) {
             $$1 = $189;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $194 = $$0 + 150 | 0;
            $195 = ($16 >>> 0) / ($194 >>> 0) | 0;
            if ($195 >>> 0 < $194 >>> 0) {
             $$1 = $194;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($195, $194) | 0)) {
             $$1 = $194;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $199 = $$0 + 156 | 0;
            $200 = ($16 >>> 0) / ($199 >>> 0) | 0;
            if ($200 >>> 0 < $199 >>> 0) {
             $$1 = $199;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($200, $199) | 0)) {
             $$1 = $199;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $204 = $$0 + 162 | 0;
            $205 = ($16 >>> 0) / ($204 >>> 0) | 0;
            if ($205 >>> 0 < $204 >>> 0) {
             $$1 = $204;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($205, $204) | 0)) {
             $$1 = $204;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $209 = $$0 + 166 | 0;
            $210 = ($16 >>> 0) / ($209 >>> 0) | 0;
            if ($210 >>> 0 < $209 >>> 0) {
             $$1 = $209;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($210, $209) | 0)) {
             $$1 = $209;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $214 = $$0 + 168 | 0;
            $215 = ($16 >>> 0) / ($214 >>> 0) | 0;
            if ($215 >>> 0 < $214 >>> 0) {
             $$1 = $214;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($215, $214) | 0)) {
             $$1 = $214;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $219 = $$0 + 172 | 0;
            $220 = ($16 >>> 0) / ($219 >>> 0) | 0;
            if ($220 >>> 0 < $219 >>> 0) {
             $$1 = $219;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($220, $219) | 0)) {
             $$1 = $219;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $224 = $$0 + 178 | 0;
            $225 = ($16 >>> 0) / ($224 >>> 0) | 0;
            if ($225 >>> 0 < $224 >>> 0) {
             $$1 = $224;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($225, $224) | 0)) {
             $$1 = $224;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $229 = $$0 + 180 | 0;
            $230 = ($16 >>> 0) / ($229 >>> 0) | 0;
            if ($230 >>> 0 < $229 >>> 0) {
             $$1 = $229;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($230, $229) | 0)) {
             $$1 = $229;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $234 = $$0 + 186 | 0;
            $235 = ($16 >>> 0) / ($234 >>> 0) | 0;
            if ($235 >>> 0 < $234 >>> 0) {
             $$1 = $234;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($235, $234) | 0)) {
             $$1 = $234;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $239 = $$0 + 190 | 0;
            $240 = ($16 >>> 0) / ($239 >>> 0) | 0;
            if ($240 >>> 0 < $239 >>> 0) {
             $$1 = $239;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($240, $239) | 0)) {
             $$1 = $239;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $244 = $$0 + 192 | 0;
            $245 = ($16 >>> 0) / ($244 >>> 0) | 0;
            if ($245 >>> 0 < $244 >>> 0) {
             $$1 = $244;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($245, $244) | 0)) {
             $$1 = $244;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $249 = $$0 + 196 | 0;
            $250 = ($16 >>> 0) / ($249 >>> 0) | 0;
            if ($250 >>> 0 < $249 >>> 0) {
             $$1 = $249;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($250, $249) | 0)) {
             $$1 = $249;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $254 = $$0 + 198 | 0;
            $255 = ($16 >>> 0) / ($254 >>> 0) | 0;
            if ($255 >>> 0 < $254 >>> 0) {
             $$1 = $254;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($255, $254) | 0)) {
             $$1 = $254;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $259 = $$0 + 208 | 0;
            $260 = ($16 >>> 0) / ($259 >>> 0) | 0;
            $261 = $260 >>> 0 < $259 >>> 0;
            $263 = ($16 | 0) == (Math_imul($260, $259) | 0);
            $$1 = $261 | $263 ? $259 : $$0 + 210 | 0;
            $$2332 = $261 ? 1 : $263 ? 9 : 0;
            $$5 = $261 ? $16 : $$4;
           } else {
            $$1 = $54;
            $$2332 = 1;
            $$5 = $16;
           }
          } else {
           $$1 = $49;
           $$2332 = 9;
           $$5 = $$4;
          } else {
           $$1 = $49;
           $$2332 = 1;
           $$5 = $16;
          }
         } else {
          $$1 = $44;
          $$2332 = 9;
          $$5 = $$4;
         } else {
          $$1 = $44;
          $$2332 = 1;
          $$5 = $16;
         }
        } else {
         $$1 = $39;
         $$2332 = 9;
         $$5 = $$4;
        } else {
         $$1 = $39;
         $$2332 = 1;
         $$5 = $16;
        }
       } else {
        $$1 = $34;
        $$2332 = 9;
        $$5 = $$4;
       } else {
        $$1 = $34;
        $$2332 = 1;
        $$5 = $16;
       }
      } else {
       $$1 = $29;
       $$2332 = 9;
       $$5 = $$4;
      } else {
       $$1 = $29;
       $$2332 = 1;
       $$5 = $16;
      }
     } else {
      $$1 = $$0;
      $$2332 = 9;
      $$5 = $$4;
     } else {
      $$1 = $$0;
      $$2332 = 1;
      $$5 = $16;
     } while (0);
     switch ($$2332 & 15) {
     case 9:
      {
       $$6 = $$5;
       break L10;
       break;
      }
     case 0:
      {
       $$0 = $$1;
       $$4 = $$5;
       break;
      }
     default:
      break L12;
     }
    }
    if (!$$2332) $$6 = $$5; else {
     label = 108;
     break L4;
    }
   } while (0);
   $266 = $spec$select339$sink + 1 | 0;
   $267 = ($266 | 0) == 48;
   $spec$select = $$0337 + ($267 & 1) | 0;
   $$0328 = $$6;
   $$0337 = $spec$select;
   $$sink369 = $spec$select * 210 | 0;
   $spec$select339$sink = $267 ? 0 : $266;
  }
  if ((label | 0) == 107) {
   HEAP32[$2 >> 2] = $16;
   $$8 = $16;
   break;
  } else if ((label | 0) == 108) {
   HEAP32[$2 >> 2] = $16;
   $$8 = $$5;
   break;
  }
 } else {
  $5 = __ZNSt3__213__lower_boundIRNS_6__lessIjmEEPKjmEET0_S6_S6_RKT1_T_(12544, 12736, $2, $1) | 0;
  $$8 = HEAP32[$5 >> 2] | 0;
 } while (0);
 STACKTOP = sp;
 return $$8 | 0;
}

function _fill_inverse_cmap($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0, $$0115$i = 0, $$0153$i = 0, $$0156166$i = 0, $$0158$lcssa$i = 0, $$0158164$i = 0, $$0160165$i = 0, $$05466 = 0, $$05765 = 0, $$089114$i = 0, $$092113$i = 0, $$093112$i = 0, $$1$i = 0, $$1154$i = 0, $$1159$i = 0, $$1161163$i = 0, $$195111$i = 0, $$199116$i = 0, $$2$i = 0, $$2155$i = 0, $$pn$i = 0, $$pn162$i = 0, $10 = 0, $102 = 0, $105 = 0, $107 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $21 = 0, $22 = 0, $24 = 0, $247 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $256 = 0, $257 = 0, $258 = 0, $264 = 0, $265 = 0, $267 = 0, $27 = 0, $273 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $292 = 0, $293 = 0, $298 = 0, $299 = 0, $30 = 0, $303 = 0, $304 = 0, $308 = 0, $311 = 0, $312 = 0, $316 = 0, $317 = 0, $321 = 0, $322 = 0, $326 = 0, $329 = 0, $33 = 0, $330 = 0, $334 = 0, $335 = 0, $339 = 0, $34 = 0, $340 = 0, $344 = 0, $347 = 0, $348 = 0, $352 = 0, $353 = 0, $357 = 0, $358 = 0, $36 = 0, $362 = 0, $365 = 0, $366 = 0, $370 = 0, $371 = 0, $375 = 0, $376 = 0, $38 = 0, $380 = 0, $383 = 0, $384 = 0, $388 = 0, $389 = 0, $393 = 0, $394 = 0, $398 = 0, $4 = 0, $401 = 0, $402 = 0, $406 = 0, $407 = 0, $41 = 0, $411 = 0, $412 = 0, $416 = 0, $419 = 0, $420 = 0, $424 = 0, $425 = 0, $429 = 0, $430 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $449 = 0, $450 = 0, $451 = 0, $47 = 0, $474 = 0, $497 = 0, $5 = 0, $51 = 0, $520 = 0, $54 = 0, $543 = 0, $544 = 0, $567 = 0, $58 = 0, $590 = 0, $6 = 0, $61 = 0, $613 = 0, $65 = 0, $68 = 0, $72 = 0, $76 = 0, $80 = 0, $84 = 0, $87 = 0, $91 = 0, $93 = 0, $96 = 0, $99 = 0, $scevgep$1$i = 0, $scevgep$2$i = 0, $scevgep$3$i = 0, $scevgep$4$i = 0, $scevgep$5$i = 0, $scevgep$6$i = 0, $scevgep$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1408 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1408);
 $4 = sp + 384 | 0;
 $5 = sp + 128 | 0;
 $6 = sp;
 $10 = HEAP32[(HEAP32[$0 + 484 >> 2] | 0) + 24 >> 2] | 0;
 $14 = $1 >>> 2 << 5;
 $15 = $14 | 4;
 $16 = $2 >>> 3 << 5;
 $17 = $16 | 2;
 $18 = $3 >>> 2 << 5;
 $19 = $18 | 4;
 $21 = HEAP32[$0 + 132 >> 2] | 0;
 $22 = $14 | 28;
 $24 = $22 + $15 >> 1;
 $25 = $16 | 30;
 $27 = $25 + $17 >> 1;
 $28 = $18 | 28;
 $30 = $28 + $19 >> 1;
 if (($21 | 0) > 0) {
  $33 = HEAP32[$0 + 136 >> 2] | 0;
  $34 = HEAP32[$33 >> 2] | 0;
  $36 = HEAP32[$33 + 4 >> 2] | 0;
  $38 = HEAP32[$33 + 8 >> 2] | 0;
  $$0156166$i = 2147483647;
  $$0160165$i = 0;
  do {
   $41 = HEAPU8[$34 + $$0160165$i >> 0] | 0;
   do if (($15 | 0) <= ($41 | 0)) {
    if (($22 | 0) < ($41 | 0)) {
     $51 = $41 - $22 << 1;
     $54 = $41 - $15 << 1;
     $$0$i = Math_imul($54, $54) | 0;
     $$0153$i = Math_imul($51, $51) | 0;
     break;
    }
    if (($24 | 0) < ($41 | 0)) {
     $61 = $41 - $15 << 1;
     $$0$i = Math_imul($61, $61) | 0;
     $$0153$i = 0;
     break;
    } else {
     $58 = $41 - $22 << 1;
     $$0$i = Math_imul($58, $58) | 0;
     $$0153$i = 0;
     break;
    }
   } else {
    $44 = $41 - $15 << 1;
    $47 = $41 - $22 << 1;
    $$0$i = Math_imul($47, $47) | 0;
    $$0153$i = Math_imul($44, $44) | 0;
   } while (0);
   $65 = HEAPU8[$36 + $$0160165$i >> 0] | 0;
   do if (($17 | 0) <= ($65 | 0)) {
    if (($25 | 0) < ($65 | 0)) {
     $76 = ($65 - $25 | 0) * 3 | 0;
     $80 = ($65 - $17 | 0) * 3 | 0;
     $$1154$i = (Math_imul($76, $76) | 0) + $$0153$i | 0;
     $$pn$i = Math_imul($80, $80) | 0;
     break;
    }
    if (($27 | 0) < ($65 | 0)) {
     $87 = ($65 - $17 | 0) * 3 | 0;
     $$1154$i = $$0153$i;
     $$pn$i = Math_imul($87, $87) | 0;
     break;
    } else {
     $84 = ($65 - $25 | 0) * 3 | 0;
     $$1154$i = $$0153$i;
     $$pn$i = Math_imul($84, $84) | 0;
     break;
    }
   } else {
    $68 = ($65 - $17 | 0) * 3 | 0;
    $72 = ($65 - $25 | 0) * 3 | 0;
    $$1154$i = (Math_imul($68, $68) | 0) + $$0153$i | 0;
    $$pn$i = Math_imul($72, $72) | 0;
   } while (0);
   $$1$i = $$pn$i + $$0$i | 0;
   $91 = HEAPU8[$38 + $$0160165$i >> 0] | 0;
   do if (($19 | 0) <= ($91 | 0)) {
    if (($28 | 0) < ($91 | 0)) {
     $99 = $91 - $28 | 0;
     $102 = $91 - $19 | 0;
     $$2155$i = (Math_imul($99, $99) | 0) + $$1154$i | 0;
     $$pn162$i = Math_imul($102, $102) | 0;
     break;
    }
    if (($30 | 0) < ($91 | 0)) {
     $107 = $91 - $19 | 0;
     $$2155$i = $$1154$i;
     $$pn162$i = Math_imul($107, $107) | 0;
     break;
    } else {
     $105 = $91 - $28 | 0;
     $$2155$i = $$1154$i;
     $$pn162$i = Math_imul($105, $105) | 0;
     break;
    }
   } else {
    $93 = $91 - $19 | 0;
    $96 = $91 - $28 | 0;
    $$2155$i = (Math_imul($93, $93) | 0) + $$1154$i | 0;
    $$pn162$i = Math_imul($96, $96) | 0;
   } while (0);
   $$2$i = $$1$i + $$pn162$i | 0;
   HEAP32[$4 + ($$0160165$i << 2) >> 2] = $$2155$i;
   $$0156166$i = ($$2$i | 0) < ($$0156166$i | 0) ? $$2$i : $$0156166$i;
   $$0160165$i = $$0160165$i + 1 | 0;
  } while (($$0160165$i | 0) != ($21 | 0));
  $$0158164$i = 0;
  $$1161163$i = 0;
  while (1) {
   if ((HEAP32[$4 + ($$1161163$i << 2) >> 2] | 0) > ($$0156166$i | 0)) $$1159$i = $$0158164$i; else {
    HEAP8[$5 + $$0158164$i >> 0] = $$1161163$i;
    $$1159$i = $$0158164$i + 1 | 0;
   }
   $$1161163$i = $$1161163$i + 1 | 0;
   if (($$1161163$i | 0) == ($21 | 0)) {
    $$0158$lcssa$i = $$1159$i;
    break;
   } else $$0158164$i = $$1159$i;
  }
 } else $$0158$lcssa$i = 0;
 HEAP32[$4 >> 2] = 2147483647;
 HEAP32[$4 + 4 >> 2] = 2147483647;
 HEAP32[$4 + 8 >> 2] = 2147483647;
 HEAP32[$4 + 12 >> 2] = 2147483647;
 HEAP32[$4 + 16 >> 2] = 2147483647;
 HEAP32[$4 + 20 >> 2] = 2147483647;
 HEAP32[$4 + 24 >> 2] = 2147483647;
 HEAP32[$4 + 28 >> 2] = 2147483647;
 HEAP32[$4 + 32 >> 2] = 2147483647;
 HEAP32[$4 + 36 >> 2] = 2147483647;
 HEAP32[$4 + 40 >> 2] = 2147483647;
 HEAP32[$4 + 44 >> 2] = 2147483647;
 HEAP32[$4 + 48 >> 2] = 2147483647;
 HEAP32[$4 + 52 >> 2] = 2147483647;
 HEAP32[$4 + 56 >> 2] = 2147483647;
 HEAP32[$4 + 60 >> 2] = 2147483647;
 HEAP32[$4 + 64 >> 2] = 2147483647;
 HEAP32[$4 + 68 >> 2] = 2147483647;
 HEAP32[$4 + 72 >> 2] = 2147483647;
 HEAP32[$4 + 76 >> 2] = 2147483647;
 HEAP32[$4 + 80 >> 2] = 2147483647;
 HEAP32[$4 + 84 >> 2] = 2147483647;
 HEAP32[$4 + 88 >> 2] = 2147483647;
 HEAP32[$4 + 92 >> 2] = 2147483647;
 HEAP32[$4 + 96 >> 2] = 2147483647;
 HEAP32[$4 + 100 >> 2] = 2147483647;
 HEAP32[$4 + 104 >> 2] = 2147483647;
 HEAP32[$4 + 108 >> 2] = 2147483647;
 HEAP32[$4 + 112 >> 2] = 2147483647;
 HEAP32[$4 + 116 >> 2] = 2147483647;
 HEAP32[$4 + 120 >> 2] = 2147483647;
 HEAP32[$4 + 124 >> 2] = 2147483647;
 HEAP32[$4 + 128 >> 2] = 2147483647;
 HEAP32[$4 + 132 >> 2] = 2147483647;
 HEAP32[$4 + 136 >> 2] = 2147483647;
 HEAP32[$4 + 140 >> 2] = 2147483647;
 HEAP32[$4 + 144 >> 2] = 2147483647;
 HEAP32[$4 + 148 >> 2] = 2147483647;
 HEAP32[$4 + 152 >> 2] = 2147483647;
 HEAP32[$4 + 156 >> 2] = 2147483647;
 HEAP32[$4 + 160 >> 2] = 2147483647;
 HEAP32[$4 + 164 >> 2] = 2147483647;
 HEAP32[$4 + 168 >> 2] = 2147483647;
 HEAP32[$4 + 172 >> 2] = 2147483647;
 HEAP32[$4 + 176 >> 2] = 2147483647;
 HEAP32[$4 + 180 >> 2] = 2147483647;
 HEAP32[$4 + 184 >> 2] = 2147483647;
 HEAP32[$4 + 188 >> 2] = 2147483647;
 HEAP32[$4 + 192 >> 2] = 2147483647;
 HEAP32[$4 + 196 >> 2] = 2147483647;
 HEAP32[$4 + 200 >> 2] = 2147483647;
 HEAP32[$4 + 204 >> 2] = 2147483647;
 HEAP32[$4 + 208 >> 2] = 2147483647;
 HEAP32[$4 + 212 >> 2] = 2147483647;
 HEAP32[$4 + 216 >> 2] = 2147483647;
 HEAP32[$4 + 220 >> 2] = 2147483647;
 HEAP32[$4 + 224 >> 2] = 2147483647;
 HEAP32[$4 + 228 >> 2] = 2147483647;
 HEAP32[$4 + 232 >> 2] = 2147483647;
 HEAP32[$4 + 236 >> 2] = 2147483647;
 HEAP32[$4 + 240 >> 2] = 2147483647;
 HEAP32[$4 + 244 >> 2] = 2147483647;
 HEAP32[$4 + 248 >> 2] = 2147483647;
 HEAP32[$4 + 252 >> 2] = 2147483647;
 HEAP32[$4 + 256 >> 2] = 2147483647;
 HEAP32[$4 + 260 >> 2] = 2147483647;
 HEAP32[$4 + 264 >> 2] = 2147483647;
 HEAP32[$4 + 268 >> 2] = 2147483647;
 HEAP32[$4 + 272 >> 2] = 2147483647;
 HEAP32[$4 + 276 >> 2] = 2147483647;
 HEAP32[$4 + 280 >> 2] = 2147483647;
 HEAP32[$4 + 284 >> 2] = 2147483647;
 HEAP32[$4 + 288 >> 2] = 2147483647;
 HEAP32[$4 + 292 >> 2] = 2147483647;
 HEAP32[$4 + 296 >> 2] = 2147483647;
 HEAP32[$4 + 300 >> 2] = 2147483647;
 HEAP32[$4 + 304 >> 2] = 2147483647;
 HEAP32[$4 + 308 >> 2] = 2147483647;
 HEAP32[$4 + 312 >> 2] = 2147483647;
 HEAP32[$4 + 316 >> 2] = 2147483647;
 HEAP32[$4 + 320 >> 2] = 2147483647;
 HEAP32[$4 + 324 >> 2] = 2147483647;
 HEAP32[$4 + 328 >> 2] = 2147483647;
 HEAP32[$4 + 332 >> 2] = 2147483647;
 HEAP32[$4 + 336 >> 2] = 2147483647;
 HEAP32[$4 + 340 >> 2] = 2147483647;
 HEAP32[$4 + 344 >> 2] = 2147483647;
 HEAP32[$4 + 348 >> 2] = 2147483647;
 HEAP32[$4 + 352 >> 2] = 2147483647;
 HEAP32[$4 + 356 >> 2] = 2147483647;
 HEAP32[$4 + 360 >> 2] = 2147483647;
 HEAP32[$4 + 364 >> 2] = 2147483647;
 HEAP32[$4 + 368 >> 2] = 2147483647;
 HEAP32[$4 + 372 >> 2] = 2147483647;
 HEAP32[$4 + 376 >> 2] = 2147483647;
 HEAP32[$4 + 380 >> 2] = 2147483647;
 HEAP32[$4 + 384 >> 2] = 2147483647;
 HEAP32[$4 + 388 >> 2] = 2147483647;
 HEAP32[$4 + 392 >> 2] = 2147483647;
 HEAP32[$4 + 396 >> 2] = 2147483647;
 HEAP32[$4 + 400 >> 2] = 2147483647;
 HEAP32[$4 + 404 >> 2] = 2147483647;
 HEAP32[$4 + 408 >> 2] = 2147483647;
 HEAP32[$4 + 412 >> 2] = 2147483647;
 HEAP32[$4 + 416 >> 2] = 2147483647;
 HEAP32[$4 + 420 >> 2] = 2147483647;
 HEAP32[$4 + 424 >> 2] = 2147483647;
 HEAP32[$4 + 428 >> 2] = 2147483647;
 HEAP32[$4 + 432 >> 2] = 2147483647;
 HEAP32[$4 + 436 >> 2] = 2147483647;
 HEAP32[$4 + 440 >> 2] = 2147483647;
 HEAP32[$4 + 444 >> 2] = 2147483647;
 HEAP32[$4 + 448 >> 2] = 2147483647;
 HEAP32[$4 + 452 >> 2] = 2147483647;
 HEAP32[$4 + 456 >> 2] = 2147483647;
 HEAP32[$4 + 460 >> 2] = 2147483647;
 HEAP32[$4 + 464 >> 2] = 2147483647;
 HEAP32[$4 + 468 >> 2] = 2147483647;
 HEAP32[$4 + 472 >> 2] = 2147483647;
 HEAP32[$4 + 476 >> 2] = 2147483647;
 HEAP32[$4 + 480 >> 2] = 2147483647;
 HEAP32[$4 + 484 >> 2] = 2147483647;
 HEAP32[$4 + 488 >> 2] = 2147483647;
 HEAP32[$4 + 492 >> 2] = 2147483647;
 HEAP32[$4 + 496 >> 2] = 2147483647;
 HEAP32[$4 + 500 >> 2] = 2147483647;
 HEAP32[$4 + 504 >> 2] = 2147483647;
 HEAP32[$4 + 508 >> 2] = 2147483647;
 if (($$0158$lcssa$i | 0) > 0) {
  $247 = $0 + 136 | 0;
  $$199116$i = 0;
  do {
   $249 = HEAP8[$5 + $$199116$i >> 0] | 0;
   $250 = $249 & 255;
   $251 = HEAP32[$247 >> 2] | 0;
   $256 = $15 - (HEAPU8[(HEAP32[$251 >> 2] | 0) + $250 >> 0] | 0) | 0;
   $257 = $256 << 1;
   $258 = Math_imul($257, $257) | 0;
   $264 = $17 - (HEAPU8[(HEAP32[$251 + 4 >> 2] | 0) + $250 >> 0] | 0) | 0;
   $265 = $264 * 3 | 0;
   $267 = (Math_imul($265, $265) | 0) + $258 | 0;
   $273 = $19 - (HEAPU8[(HEAP32[$251 + 8 >> 2] | 0) + $250 >> 0] | 0) | 0;
   $278 = $264 * 72 | 0;
   $279 = $278 + 144 | 0;
   $280 = $273 << 4;
   $281 = $280 + 64 | 0;
   $282 = $280 + 192 | 0;
   $283 = $280 + 320 | 0;
   $284 = $278 + 432 | 0;
   $285 = $278 + 720 | 0;
   $286 = $278 + 1008 | 0;
   $287 = $278 + 1296 | 0;
   $288 = $278 + 1584 | 0;
   $289 = $278 + 1872 | 0;
   $$0115$i = 3;
   $$089114$i = ($256 << 6) + 256 | 0;
   $$092113$i = $267 + (Math_imul($273, $273) | 0) | 0;
   $$093112$i = $6;
   $$195111$i = $4;
   while (1) {
    $scevgep$i = $$195111$i + 16 | 0;
    if (($$092113$i | 0) < (HEAP32[$$195111$i >> 2] | 0)) {
     HEAP32[$$195111$i >> 2] = $$092113$i;
     HEAP8[$$093112$i >> 0] = $249;
    }
    $292 = $$092113$i + $281 | 0;
    $293 = $$195111$i + 4 | 0;
    if (($292 | 0) < (HEAP32[$293 >> 2] | 0)) {
     HEAP32[$293 >> 2] = $292;
     HEAP8[$$093112$i + 1 >> 0] = $249;
    }
    $298 = $292 + $282 | 0;
    $299 = $$195111$i + 8 | 0;
    if (($298 | 0) < (HEAP32[$299 >> 2] | 0)) {
     HEAP32[$299 >> 2] = $298;
     HEAP8[$$093112$i + 2 >> 0] = $249;
    }
    $303 = $298 + $283 | 0;
    $304 = $$195111$i + 12 | 0;
    if (($303 | 0) < (HEAP32[$304 >> 2] | 0)) {
     HEAP32[$304 >> 2] = $303;
     HEAP8[$$093112$i + 3 >> 0] = $249;
    }
    $308 = $279 + $$092113$i | 0;
    $scevgep$1$i = $$195111$i + 32 | 0;
    if (($308 | 0) < (HEAP32[$scevgep$i >> 2] | 0)) {
     HEAP32[$scevgep$i >> 2] = $308;
     HEAP8[$$093112$i + 4 >> 0] = $249;
    }
    $311 = $308 + $281 | 0;
    $312 = $$195111$i + 20 | 0;
    if (($311 | 0) < (HEAP32[$312 >> 2] | 0)) {
     HEAP32[$312 >> 2] = $311;
     HEAP8[$$093112$i + 5 >> 0] = $249;
    }
    $316 = $311 + $282 | 0;
    $317 = $$195111$i + 24 | 0;
    if (($316 | 0) < (HEAP32[$317 >> 2] | 0)) {
     HEAP32[$317 >> 2] = $316;
     HEAP8[$$093112$i + 6 >> 0] = $249;
    }
    $321 = $316 + $283 | 0;
    $322 = $$195111$i + 28 | 0;
    if (($321 | 0) < (HEAP32[$322 >> 2] | 0)) {
     HEAP32[$322 >> 2] = $321;
     HEAP8[$$093112$i + 7 >> 0] = $249;
    }
    $326 = $284 + $308 | 0;
    $scevgep$2$i = $$195111$i + 48 | 0;
    if (($326 | 0) < (HEAP32[$scevgep$1$i >> 2] | 0)) {
     HEAP32[$scevgep$1$i >> 2] = $326;
     HEAP8[$$093112$i + 8 >> 0] = $249;
    }
    $329 = $326 + $281 | 0;
    $330 = $$195111$i + 36 | 0;
    if (($329 | 0) < (HEAP32[$330 >> 2] | 0)) {
     HEAP32[$330 >> 2] = $329;
     HEAP8[$$093112$i + 9 >> 0] = $249;
    }
    $334 = $329 + $282 | 0;
    $335 = $$195111$i + 40 | 0;
    if (($334 | 0) < (HEAP32[$335 >> 2] | 0)) {
     HEAP32[$335 >> 2] = $334;
     HEAP8[$$093112$i + 10 >> 0] = $249;
    }
    $339 = $334 + $283 | 0;
    $340 = $$195111$i + 44 | 0;
    if (($339 | 0) < (HEAP32[$340 >> 2] | 0)) {
     HEAP32[$340 >> 2] = $339;
     HEAP8[$$093112$i + 11 >> 0] = $249;
    }
    $344 = $285 + $326 | 0;
    $scevgep$3$i = $$195111$i + 64 | 0;
    if (($344 | 0) < (HEAP32[$scevgep$2$i >> 2] | 0)) {
     HEAP32[$scevgep$2$i >> 2] = $344;
     HEAP8[$$093112$i + 12 >> 0] = $249;
    }
    $347 = $344 + $281 | 0;
    $348 = $$195111$i + 52 | 0;
    if (($347 | 0) < (HEAP32[$348 >> 2] | 0)) {
     HEAP32[$348 >> 2] = $347;
     HEAP8[$$093112$i + 13 >> 0] = $249;
    }
    $352 = $347 + $282 | 0;
    $353 = $$195111$i + 56 | 0;
    if (($352 | 0) < (HEAP32[$353 >> 2] | 0)) {
     HEAP32[$353 >> 2] = $352;
     HEAP8[$$093112$i + 14 >> 0] = $249;
    }
    $357 = $352 + $283 | 0;
    $358 = $$195111$i + 60 | 0;
    if (($357 | 0) < (HEAP32[$358 >> 2] | 0)) {
     HEAP32[$358 >> 2] = $357;
     HEAP8[$$093112$i + 15 >> 0] = $249;
    }
    $362 = $286 + $344 | 0;
    $scevgep$4$i = $$195111$i + 80 | 0;
    if (($362 | 0) < (HEAP32[$scevgep$3$i >> 2] | 0)) {
     HEAP32[$scevgep$3$i >> 2] = $362;
     HEAP8[$$093112$i + 16 >> 0] = $249;
    }
    $365 = $362 + $281 | 0;
    $366 = $$195111$i + 68 | 0;
    if (($365 | 0) < (HEAP32[$366 >> 2] | 0)) {
     HEAP32[$366 >> 2] = $365;
     HEAP8[$$093112$i + 17 >> 0] = $249;
    }
    $370 = $365 + $282 | 0;
    $371 = $$195111$i + 72 | 0;
    if (($370 | 0) < (HEAP32[$371 >> 2] | 0)) {
     HEAP32[$371 >> 2] = $370;
     HEAP8[$$093112$i + 18 >> 0] = $249;
    }
    $375 = $370 + $283 | 0;
    $376 = $$195111$i + 76 | 0;
    if (($375 | 0) < (HEAP32[$376 >> 2] | 0)) {
     HEAP32[$376 >> 2] = $375;
     HEAP8[$$093112$i + 19 >> 0] = $249;
    }
    $380 = $287 + $362 | 0;
    $scevgep$5$i = $$195111$i + 96 | 0;
    if (($380 | 0) < (HEAP32[$scevgep$4$i >> 2] | 0)) {
     HEAP32[$scevgep$4$i >> 2] = $380;
     HEAP8[$$093112$i + 20 >> 0] = $249;
    }
    $383 = $380 + $281 | 0;
    $384 = $$195111$i + 84 | 0;
    if (($383 | 0) < (HEAP32[$384 >> 2] | 0)) {
     HEAP32[$384 >> 2] = $383;
     HEAP8[$$093112$i + 21 >> 0] = $249;
    }
    $388 = $383 + $282 | 0;
    $389 = $$195111$i + 88 | 0;
    if (($388 | 0) < (HEAP32[$389 >> 2] | 0)) {
     HEAP32[$389 >> 2] = $388;
     HEAP8[$$093112$i + 22 >> 0] = $249;
    }
    $393 = $388 + $283 | 0;
    $394 = $$195111$i + 92 | 0;
    if (($393 | 0) < (HEAP32[$394 >> 2] | 0)) {
     HEAP32[$394 >> 2] = $393;
     HEAP8[$$093112$i + 23 >> 0] = $249;
    }
    $398 = $288 + $380 | 0;
    $scevgep$6$i = $$195111$i + 112 | 0;
    if (($398 | 0) < (HEAP32[$scevgep$5$i >> 2] | 0)) {
     HEAP32[$scevgep$5$i >> 2] = $398;
     HEAP8[$$093112$i + 24 >> 0] = $249;
    }
    $401 = $398 + $281 | 0;
    $402 = $$195111$i + 100 | 0;
    if (($401 | 0) < (HEAP32[$402 >> 2] | 0)) {
     HEAP32[$402 >> 2] = $401;
     HEAP8[$$093112$i + 25 >> 0] = $249;
    }
    $406 = $401 + $282 | 0;
    $407 = $$195111$i + 104 | 0;
    if (($406 | 0) < (HEAP32[$407 >> 2] | 0)) {
     HEAP32[$407 >> 2] = $406;
     HEAP8[$$093112$i + 26 >> 0] = $249;
    }
    $411 = $406 + $283 | 0;
    $412 = $$195111$i + 108 | 0;
    if (($411 | 0) < (HEAP32[$412 >> 2] | 0)) {
     HEAP32[$412 >> 2] = $411;
     HEAP8[$$093112$i + 27 >> 0] = $249;
    }
    $416 = $289 + $398 | 0;
    if (($416 | 0) < (HEAP32[$scevgep$6$i >> 2] | 0)) {
     HEAP32[$scevgep$6$i >> 2] = $416;
     HEAP8[$$093112$i + 28 >> 0] = $249;
    }
    $419 = $416 + $281 | 0;
    $420 = $$195111$i + 116 | 0;
    if (($419 | 0) < (HEAP32[$420 >> 2] | 0)) {
     HEAP32[$420 >> 2] = $419;
     HEAP8[$$093112$i + 29 >> 0] = $249;
    }
    $424 = $419 + $282 | 0;
    $425 = $$195111$i + 120 | 0;
    if (($424 | 0) < (HEAP32[$425 >> 2] | 0)) {
     HEAP32[$425 >> 2] = $424;
     HEAP8[$$093112$i + 30 >> 0] = $249;
    }
    $429 = $424 + $283 | 0;
    $430 = $$195111$i + 124 | 0;
    if (($429 | 0) < (HEAP32[$430 >> 2] | 0)) {
     HEAP32[$430 >> 2] = $429;
     HEAP8[$$093112$i + 31 >> 0] = $249;
    }
    $$092113$i = $$092113$i + $$089114$i | 0;
    if (!$$0115$i) break; else {
     $$0115$i = $$0115$i + -1 | 0;
     $$089114$i = $$089114$i + 512 | 0;
     $$093112$i = $$093112$i + 32 | 0;
     $$195111$i = $$195111$i + 128 | 0;
    }
   }
   $$199116$i = $$199116$i + 1 | 0;
  } while (($$199116$i | 0) != ($$0158$lcssa$i | 0));
 }
 $438 = $1 & -4;
 $439 = $2 & -8;
 $440 = $3 & -4;
 $441 = $439 | 1;
 $442 = $439 | 2;
 $443 = $439 | 3;
 $444 = $439 | 4;
 $445 = $439 | 5;
 $446 = $439 | 6;
 $447 = $2 | 7;
 $$05466 = $6;
 $$05765 = 0;
 while (1) {
  $449 = $10 + ($$05765 + $438 << 2) | 0;
  $450 = HEAP32[$449 >> 2] | 0;
  $451 = $450 + ($439 << 6) + ($440 << 1) | 0;
  HEAP16[$451 >> 1] = (HEAPU8[$$05466 >> 0] | 0) + 1;
  HEAP16[$451 + 2 >> 1] = (HEAPU8[$$05466 + 1 >> 0] | 0) + 1;
  HEAP16[$451 + 4 >> 1] = (HEAPU8[$$05466 + 2 >> 0] | 0) + 1;
  HEAP16[$451 + 6 >> 1] = (HEAPU8[$$05466 + 3 >> 0] | 0) + 1;
  $474 = $450 + ($441 << 6) + ($440 << 1) | 0;
  HEAP16[$474 >> 1] = (HEAPU8[$$05466 + 4 >> 0] | 0) + 1;
  HEAP16[$474 + 2 >> 1] = (HEAPU8[$$05466 + 5 >> 0] | 0) + 1;
  HEAP16[$474 + 4 >> 1] = (HEAPU8[$$05466 + 6 >> 0] | 0) + 1;
  HEAP16[$474 + 6 >> 1] = (HEAPU8[$$05466 + 7 >> 0] | 0) + 1;
  $497 = $450 + ($442 << 6) + ($440 << 1) | 0;
  HEAP16[$497 >> 1] = (HEAPU8[$$05466 + 8 >> 0] | 0) + 1;
  HEAP16[$497 + 2 >> 1] = (HEAPU8[$$05466 + 9 >> 0] | 0) + 1;
  HEAP16[$497 + 4 >> 1] = (HEAPU8[$$05466 + 10 >> 0] | 0) + 1;
  HEAP16[$497 + 6 >> 1] = (HEAPU8[$$05466 + 11 >> 0] | 0) + 1;
  $520 = $450 + ($443 << 6) + ($440 << 1) | 0;
  HEAP16[$520 >> 1] = (HEAPU8[$$05466 + 12 >> 0] | 0) + 1;
  HEAP16[$520 + 2 >> 1] = (HEAPU8[$$05466 + 13 >> 0] | 0) + 1;
  HEAP16[$520 + 4 >> 1] = (HEAPU8[$$05466 + 14 >> 0] | 0) + 1;
  HEAP16[$520 + 6 >> 1] = (HEAPU8[$$05466 + 15 >> 0] | 0) + 1;
  $543 = HEAP32[$449 >> 2] | 0;
  $544 = $543 + ($444 << 6) + ($440 << 1) | 0;
  HEAP16[$544 >> 1] = (HEAPU8[$$05466 + 16 >> 0] | 0) + 1;
  HEAP16[$544 + 2 >> 1] = (HEAPU8[$$05466 + 17 >> 0] | 0) + 1;
  HEAP16[$544 + 4 >> 1] = (HEAPU8[$$05466 + 18 >> 0] | 0) + 1;
  HEAP16[$544 + 6 >> 1] = (HEAPU8[$$05466 + 19 >> 0] | 0) + 1;
  $567 = $543 + ($445 << 6) + ($440 << 1) | 0;
  HEAP16[$567 >> 1] = (HEAPU8[$$05466 + 20 >> 0] | 0) + 1;
  HEAP16[$567 + 2 >> 1] = (HEAPU8[$$05466 + 21 >> 0] | 0) + 1;
  HEAP16[$567 + 4 >> 1] = (HEAPU8[$$05466 + 22 >> 0] | 0) + 1;
  HEAP16[$567 + 6 >> 1] = (HEAPU8[$$05466 + 23 >> 0] | 0) + 1;
  $590 = $543 + ($446 << 6) + ($440 << 1) | 0;
  HEAP16[$590 >> 1] = (HEAPU8[$$05466 + 24 >> 0] | 0) + 1;
  HEAP16[$590 + 2 >> 1] = (HEAPU8[$$05466 + 25 >> 0] | 0) + 1;
  HEAP16[$590 + 4 >> 1] = (HEAPU8[$$05466 + 26 >> 0] | 0) + 1;
  HEAP16[$590 + 6 >> 1] = (HEAPU8[$$05466 + 27 >> 0] | 0) + 1;
  $613 = $543 + ($447 << 6) + ($440 << 1) | 0;
  HEAP16[$613 >> 1] = (HEAPU8[$$05466 + 28 >> 0] | 0) + 1;
  HEAP16[$613 + 2 >> 1] = (HEAPU8[$$05466 + 29 >> 0] | 0) + 1;
  HEAP16[$613 + 4 >> 1] = (HEAPU8[$$05466 + 30 >> 0] | 0) + 1;
  HEAP16[$613 + 6 >> 1] = (HEAPU8[$$05466 + 31 >> 0] | 0) + 1;
  $$05765 = $$05765 + 1 | 0;
  if (($$05765 | 0) == 4) break; else $$05466 = $$05466 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseOperatorNameEPNS5_9NameStateE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $199 = 0, $2 = 0, $3 = 0, $35 = 0, $38 = 0, $4 = 0, $41 = 0, $93 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 L1 : do switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 | 0) {
 case 97:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
   case 97:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 53763) | 0;
     break L1;
     break;
    }
   case 110:
   case 100:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 53774) | 0;
     break L1;
     break;
    }
   case 78:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 53784) | 0;
     break L1;
     break;
    }
   case 83:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 53795) | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = 0;
     break L1;
    }
   }
   break;
  }
 case 99:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
   case 108:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 53805) | 0;
     break L1;
     break;
    }
   case 109:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 53816) | 0;
     break L1;
     break;
    }
   case 111:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 53826) | 0;
     break L1;
     break;
    }
   case 118:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($2, $0 + 360 | 0, 0);
     $35 = $0 + 361 | 0;
     $38 = ($1 | 0) != 0;
     __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($3, $35, $38 | (HEAP8[$35 >> 0] | 0) != 0);
     $41 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$4 >> 2] = $41;
     if (!$41) $$0 = 0; else {
      if ($38) HEAP8[$1 >> 0] = 1;
      $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_22ConversionOperatorTypeEJRPNS0_4NodeEEEES9_DpOT0_($0, $4) | 0;
     }
     __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($3);
     __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($2);
     $$3 = $$0;
     break L1;
     break;
    }
   default:
    {
     $$3 = 0;
     break L1;
    }
   }
   break;
  }
 case 100:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
   case 97:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA18_KcEEEPNS0_4NodeEDpOT0_($0, 53836) | 0;
     break L1;
     break;
    }
   case 101:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 53854) | 0;
     break L1;
     break;
    }
   case 108:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA16_KcEEEPNS0_4NodeEDpOT0_($0) | 0;
     break L1;
     break;
    }
   case 118:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 53864) | 0;
     break L1;
     break;
    }
   case 86:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 53874) | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = 0;
     break L1;
    }
   }
   break;
  }
 case 101:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
   case 111:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 53885) | 0;
     break L1;
     break;
    }
   case 79:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 53895) | 0;
     break L1;
     break;
    }
   case 113:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 53906) | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = 0;
     break L1;
    }
   }
   break;
  }
 case 103:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
   case 101:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 53917) | 0;
     break L1;
     break;
    }
   case 116:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 53928) | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = 0;
     break L1;
    }
   }
   break;
  }
 case 105:
  {
   if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 == 120) {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
    $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 53938) | 0;
   } else $$3 = 0;
   break;
  }
 case 108:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
   case 101:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 53949) | 0;
     break L1;
     break;
    }
   case 105:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $93 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseSourceNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$2 >> 2] = $93;
     if (!$93) $$1 = 0; else $$1 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15LiteralOperatorEJRPNS0_4NodeEEEES9_DpOT0_($0, $2) | 0;
     $$3 = $$1;
     break L1;
     break;
    }
   case 115:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 53960) | 0;
     break L1;
     break;
    }
   case 83:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA12_KcEEEPNS0_4NodeEDpOT0_($0, 53971) | 0;
     break L1;
     break;
    }
   case 116:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 53983) | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = 0;
     break L1;
    }
   }
   break;
  }
 case 109:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
   case 105:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 53993) | 0;
     break L1;
     break;
    }
   case 73:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 54003) | 0;
     break L1;
     break;
    }
   case 108:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 53854) | 0;
     break L1;
     break;
    }
   case 76:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 54014) | 0;
     break L1;
     break;
    }
   case 109:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 54025) | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = 0;
     break L1;
    }
   }
   break;
  }
 case 110:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
   case 97:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA15_KcEEEPNS0_4NodeEDpOT0_($0, 54036) | 0;
     break L1;
     break;
    }
   case 101:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 54051) | 0;
     break L1;
     break;
    }
   case 103:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 53993) | 0;
     break L1;
     break;
    }
   case 116:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 54062) | 0;
     break L1;
     break;
    }
   case 119:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA13_KcEEEPNS0_4NodeEDpOT0_($0, 54072) | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = 0;
     break L1;
    }
   }
   break;
  }
 case 111:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
   case 111:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 54085) | 0;
     break L1;
     break;
    }
   case 114:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 54096) | 0;
     break L1;
     break;
    }
   case 82:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 54106) | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = 0;
     break L1;
    }
   }
   break;
  }
 case 112:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
   case 109:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA12_KcEEEPNS0_4NodeEDpOT0_($0, 54117) | 0;
     break L1;
     break;
    }
   case 108:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 54129) | 0;
     break L1;
     break;
    }
   case 76:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 54139) | 0;
     break L1;
     break;
    }
   case 112:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 54150) | 0;
     break L1;
     break;
    }
   case 115:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 54129) | 0;
     break L1;
     break;
    }
   case 116:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 54161) | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = 0;
     break L1;
    }
   }
   break;
  }
 case 113:
  {
   if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 == 117) {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
    $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 54172) | 0;
   } else $$3 = 0;
   break;
  }
 case 114:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
   case 109:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0, 54182) | 0;
     break L1;
     break;
    }
   case 77:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 54192) | 0;
     break L1;
     break;
    }
   case 115:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0, 54203) | 0;
     break L1;
     break;
    }
   case 83:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA12_KcEEEPNS0_4NodeEDpOT0_($0, 54214) | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = 0;
     break L1;
    }
   }
   break;
  }
 case 115:
  {
   if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 == 115) {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
    $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA12_KcEEEPNS0_4NodeEDpOT0_($0, 54226) | 0;
   } else $$3 = 0;
   break;
  }
 case 118:
  {
   if ((((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24) + -48 | 0) >>> 0 < 10) {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
    $199 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseSourceNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
    HEAP32[$2 >> 2] = $199;
    if (!$199) $$2 = 0; else $$2 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_22ConversionOperatorTypeEJRPNS0_4NodeEEEES9_DpOT0_($0, $2) | 0;
    $$3 = $$2;
   } else $$3 = 0;
   break;
  }
 default:
  $$3 = 0;
 } while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function _fmt_fp($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0463$lcssa = 0, $$0463588 = 0, $$0464599 = 0, $$0471 = 0.0, $$0479 = 0, $$0487657 = 0, $$0488669 = 0, $$0488671 = 0, $$0497670 = 0, $$0498 = 0, $$0511586 = 0.0, $$0513 = 0, $$0516652 = 0, $$0522 = 0, $$0523 = 0, $$0525 = 0, $$0527 = 0, $$0529$in646 = 0, $$0532651 = 0, $$1465 = 0, $$1467 = 0.0, $$1469 = 0.0, $$1472 = 0.0, $$1480 = 0, $$1482$lcssa = 0, $$1482683 = 0, $$1489656 = 0, $$1499 = 0, $$1510587 = 0, $$1514$lcssa = 0, $$1514614 = 0, $$1517 = 0, $$1526 = 0, $$1530621 = 0, $$1533$lcssa = 0, $$1533645 = 0, $$1604 = 0, $$2 = 0, $$2473 = 0.0, $$2476 = 0, $$2483 = 0, $$2490$lcssa = 0, $$2490638 = 0, $$2500$lcssa = 0, $$2500682 = 0, $$2515 = 0, $$2518634 = 0, $$2531 = 0, $$2534633 = 0, $$3 = 0.0, $$3477 = 0, $$3484$lcssa = 0, $$3484663 = 0, $$3501$lcssa = 0, $$3501676 = 0, $$3535620 = 0, $$4 = 0.0, $$4478$lcssa = 0, $$4478594 = 0, $$4492 = 0, $$4502$lcssa = 0, $$4502662 = 0, $$4520 = 0, $$5$lcssa = 0, $$5486$lcssa = 0, $$5486639 = 0, $$5493603 = 0, $$5503 = 0, $$5521 = 0, $$5609 = 0, $$6 = 0, $$6494593 = 0, $$7495608 = 0, $$8 = 0, $$8506 = 0, $$9 = 0, $$9507$lcssa = 0, $$9507625 = 0, $$lcssa583 = 0, $$pn = 0, $$pr = 0, $$pr564 = 0, $$pre$phi717Z2D = 0, $$pre$phi718Z2D = 0, $$pre720 = 0, $$sink757 = 0, $10 = 0, $103 = 0, $104 = 0, $108 = 0, $109 = 0, $11 = 0, $113 = 0, $115 = 0, $116 = 0, $12 = 0, $123 = 0, $126 = 0, $13 = 0, $132 = 0, $135 = 0, $136 = 0, $139 = 0, $141 = 0, $142 = 0, $145 = 0, $147 = 0, $15 = 0.0, $151 = 0, $154 = 0, $158 = 0, $16 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $168 = 0, $174 = 0, $175 = 0, $176 = 0, $188 = 0, $202 = 0, $203 = 0, $206 = 0, $211 = 0, $212 = 0, $214 = 0, $222 = 0, $223 = 0, $225 = 0, $227 = 0, $229 = 0, $231 = 0, $232 = 0, $234 = 0, $237 = 0, $240 = 0, $245 = 0, $248 = 0, $25 = 0, $251 = 0, $253 = 0, $255 = 0, $257 = 0, $262 = 0, $263 = 0, $266 = 0, $268 = 0, $270 = 0, $273 = 0, $286 = 0, $291 = 0, $30 = 0, $300 = 0, $301 = 0, $305 = 0, $308 = 0, $310 = 0, $312 = 0, $316 = 0, $319 = 0, $320 = 0, $324 = 0, $334 = 0, $339 = 0, $34 = 0, $342 = 0, $343 = 0, $344 = 0, $346 = 0, $351 = 0, $364 = 0, $368 = 0, $373 = 0, $38 = 0.0, $382 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $389 = 0, $39 = 0, $393 = 0, $395 = 0, $398 = 0, $401 = 0, $412 = 0, $42 = 0, $44 = 0, $47 = 0, $49 = 0, $6 = 0, $63 = 0, $66 = 0, $69 = 0, $7 = 0, $71 = 0, $79 = 0, $8 = 0, $80 = 0, $82 = 0, $83 = 0, $89 = 0, $9 = 0, $spec$select = 0, $spec$select539 = 0, $spec$select540 = 0, $spec$select540723 = 0, $spec$select541 = 0, $spec$select544 = 0.0, $spec$select548 = 0, $spec$select549 = 0, $spec$select551 = 0, $spec$select554 = 0, $spec$select557 = 0, $spec$select567 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(560);
 $6 = sp + 32 | 0;
 $7 = sp + 536 | 0;
 $8 = sp;
 $9 = $8;
 $10 = sp + 540 | 0;
 HEAP32[$7 >> 2] = 0;
 $11 = $10 + 12 | 0;
 $12 = ___DOUBLE_BITS_670($1) | 0;
 $13 = getTempRet0() | 0;
 if (($13 | 0) < 0) {
  $15 = -$1;
  $16 = ___DOUBLE_BITS_670($15) | 0;
  $$0471 = $15;
  $$0522 = 1;
  $$0523 = 50757;
  $25 = getTempRet0() | 0;
  $412 = $16;
 } else {
  $$0471 = $1;
  $$0522 = ($4 & 2049 | 0) != 0 & 1;
  $$0523 = ($4 & 2048 | 0) == 0 ? (($4 & 1 | 0) == 0 ? 50758 : 50763) : 50760;
  $25 = $13;
  $412 = $12;
 }
 do if (0 == 0 & ($25 & 2146435072 | 0) == 2146435072) {
  $30 = ($5 & 32 | 0) != 0;
  $34 = $$0522 + 3 | 0;
  _pad_667($0, 32, $2, $34, $4 & -65537);
  _out($0, $$0523, $$0522);
  _out($0, $$0471 != $$0471 | 0.0 != 0.0 ? ($30 ? 50797 : 50784) : $30 ? 50776 : 50780, 3);
  _pad_667($0, 32, $2, $34, $4 ^ 8192);
  $$sink757 = $34;
 } else {
  $38 = +_frexp($$0471, $7) * 2.0;
  $39 = $38 != 0.0;
  if ($39) HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
  $42 = $5 | 32;
  if (($42 | 0) == 97) {
   $44 = $5 & 32;
   $spec$select = ($44 | 0) == 0 ? $$0523 : $$0523 + 9 | 0;
   $47 = $$0522 | 2;
   $49 = 12 - $3 | 0;
   do if (!($3 >>> 0 > 11 | ($49 | 0) == 0)) {
    $$0511586 = 8.0;
    $$1510587 = $49;
    do {
     $$1510587 = $$1510587 + -1 | 0;
     $$0511586 = $$0511586 * 16.0;
    } while (($$1510587 | 0) != 0);
    if ((HEAP8[$spec$select >> 0] | 0) == 45) {
     $$1472 = -($$0511586 + (-$38 - $$0511586));
     break;
    } else {
     $$1472 = $38 + $$0511586 - $$0511586;
     break;
    }
   } else $$1472 = $38; while (0);
   $63 = HEAP32[$7 >> 2] | 0;
   $66 = ($63 | 0) < 0 ? 0 - $63 | 0 : $63;
   $69 = _fmt_u($66, (($66 | 0) < 0) << 31 >> 31, $11) | 0;
   if (($69 | 0) == ($11 | 0)) {
    $71 = $10 + 11 | 0;
    HEAP8[$71 >> 0] = 48;
    $$0513 = $71;
   } else $$0513 = $69;
   HEAP8[$$0513 + -1 >> 0] = ($63 >> 31 & 2) + 43;
   $79 = $$0513 + -2 | 0;
   HEAP8[$79 >> 0] = $5 + 15;
   $80 = ($3 | 0) < 1;
   $82 = ($4 & 8 | 0) == 0;
   $$0525 = $8;
   $$2473 = $$1472;
   while (1) {
    $83 = ~~$$2473;
    $89 = $$0525 + 1 | 0;
    HEAP8[$$0525 >> 0] = $44 | HEAPU8[6672 + $83 >> 0];
    $$2473 = ($$2473 - +($83 | 0)) * 16.0;
    if (($89 - $9 | 0) == 1 ? !($82 & ($80 & $$2473 == 0.0)) : 0) {
     HEAP8[$89 >> 0] = 46;
     $$1526 = $$0525 + 2 | 0;
    } else $$1526 = $89;
    if (!($$2473 != 0.0)) break; else $$0525 = $$1526;
   }
   $$pre720 = $$1526;
   if (($3 | 0) != 0 ? (-2 - $9 + $$pre720 | 0) < ($3 | 0) : 0) {
    $103 = $11;
    $104 = $79;
    $$0527 = $3 + 2 + $103 - $104 | 0;
    $$pre$phi717Z2D = $103;
    $$pre$phi718Z2D = $104;
   } else {
    $108 = $11;
    $109 = $79;
    $$0527 = $108 - $9 - $109 + $$pre720 | 0;
    $$pre$phi717Z2D = $108;
    $$pre$phi718Z2D = $109;
   }
   $113 = $$0527 + $47 | 0;
   _pad_667($0, 32, $2, $113, $4);
   _out($0, $spec$select, $47);
   _pad_667($0, 48, $2, $113, $4 ^ 65536);
   $115 = $$pre720 - $9 | 0;
   _out($0, $8, $115);
   $116 = $$pre$phi717Z2D - $$pre$phi718Z2D | 0;
   _pad_667($0, 48, $$0527 - ($115 + $116) | 0, 0, 0);
   _out($0, $79, $116);
   _pad_667($0, 32, $2, $113, $4 ^ 8192);
   $$sink757 = $113;
   break;
  }
  $spec$select539 = ($3 | 0) < 0 ? 6 : $3;
  if ($39) {
   $123 = (HEAP32[$7 >> 2] | 0) + -28 | 0;
   HEAP32[$7 >> 2] = $123;
   $$3 = $38 * 268435456.0;
   $$pr = $123;
  } else {
   $$3 = $38;
   $$pr = HEAP32[$7 >> 2] | 0;
  }
  $$0498 = ($$pr | 0) < 0 ? $6 : $6 + 288 | 0;
  $$1499 = $$0498;
  $$4 = $$3;
  do {
   $126 = ~~$$4 >>> 0;
   HEAP32[$$1499 >> 2] = $126;
   $$1499 = $$1499 + 4 | 0;
   $$4 = ($$4 - +($126 >>> 0)) * 1.0e9;
  } while ($$4 != 0.0);
  $132 = $$0498;
  if (($$pr | 0) > 0) {
   $$1482683 = $$0498;
   $$2500682 = $$1499;
   $135 = $$pr;
   while (1) {
    $136 = ($135 | 0) < 29 ? $135 : 29;
    $$0488669 = $$2500682 + -4 | 0;
    if ($$0488669 >>> 0 >= $$1482683 >>> 0) {
     $$0488671 = $$0488669;
     $$0497670 = 0;
     do {
      $139 = _bitshift64Shl(HEAP32[$$0488671 >> 2] | 0, 0, $136 | 0) | 0;
      $141 = _i64Add($139 | 0, getTempRet0() | 0, $$0497670 | 0, 0) | 0;
      $142 = getTempRet0() | 0;
      $$0497670 = ___udivdi3($141 | 0, $142 | 0, 1e9, 0) | 0;
      $145 = ___muldi3($$0497670 | 0, getTempRet0() | 0, 1e9, 0) | 0;
      $147 = _i64Subtract($141 | 0, $142 | 0, $145 | 0, getTempRet0() | 0) | 0;
      getTempRet0() | 0;
      HEAP32[$$0488671 >> 2] = $147;
      $$0488671 = $$0488671 + -4 | 0;
     } while ($$0488671 >>> 0 >= $$1482683 >>> 0);
     if ($$0497670) {
      $151 = $$1482683 + -4 | 0;
      HEAP32[$151 >> 2] = $$0497670;
      $$2483 = $151;
     } else $$2483 = $$1482683;
    } else $$2483 = $$1482683;
    L57 : do if ($$2500682 >>> 0 > $$2483 >>> 0) {
     $$3501676 = $$2500682;
     while (1) {
      $154 = $$3501676 + -4 | 0;
      if (HEAP32[$154 >> 2] | 0) {
       $$3501$lcssa = $$3501676;
       break L57;
      }
      if ($154 >>> 0 > $$2483 >>> 0) $$3501676 = $154; else {
       $$3501$lcssa = $154;
       break;
      }
     }
    } else $$3501$lcssa = $$2500682; while (0);
    $158 = (HEAP32[$7 >> 2] | 0) - $136 | 0;
    HEAP32[$7 >> 2] = $158;
    if (($158 | 0) > 0) {
     $$1482683 = $$2483;
     $$2500682 = $$3501$lcssa;
     $135 = $158;
    } else {
     $$1482$lcssa = $$2483;
     $$2500$lcssa = $$3501$lcssa;
     $$pr564 = $158;
     break;
    }
   }
  } else {
   $$1482$lcssa = $$0498;
   $$2500$lcssa = $$1499;
   $$pr564 = $$pr;
  }
  if (($$pr564 | 0) < 0) {
   $163 = (($spec$select539 + 25 | 0) / 9 | 0) + 1 | 0;
   $164 = ($42 | 0) == 102;
   $$3484663 = $$1482$lcssa;
   $$4502662 = $$2500$lcssa;
   $166 = $$pr564;
   while (1) {
    $165 = 0 - $166 | 0;
    $168 = ($165 | 0) < 9 ? $165 : 9;
    if ($$3484663 >>> 0 < $$4502662 >>> 0) {
     $174 = (1 << $168) + -1 | 0;
     $175 = 1e9 >>> $168;
     $$0487657 = 0;
     $$1489656 = $$3484663;
     do {
      $176 = HEAP32[$$1489656 >> 2] | 0;
      HEAP32[$$1489656 >> 2] = ($176 >>> $168) + $$0487657;
      $$0487657 = Math_imul($176 & $174, $175) | 0;
      $$1489656 = $$1489656 + 4 | 0;
     } while ($$1489656 >>> 0 < $$4502662 >>> 0);
     $spec$select540 = (HEAP32[$$3484663 >> 2] | 0) == 0 ? $$3484663 + 4 | 0 : $$3484663;
     if (!$$0487657) {
      $$5503 = $$4502662;
      $spec$select540723 = $spec$select540;
     } else {
      HEAP32[$$4502662 >> 2] = $$0487657;
      $$5503 = $$4502662 + 4 | 0;
      $spec$select540723 = $spec$select540;
     }
    } else {
     $$5503 = $$4502662;
     $spec$select540723 = (HEAP32[$$3484663 >> 2] | 0) == 0 ? $$3484663 + 4 | 0 : $$3484663;
    }
    $188 = $164 ? $$0498 : $spec$select540723;
    $spec$select541 = ($$5503 - $188 >> 2 | 0) > ($163 | 0) ? $188 + ($163 << 2) | 0 : $$5503;
    $166 = (HEAP32[$7 >> 2] | 0) + $168 | 0;
    HEAP32[$7 >> 2] = $166;
    if (($166 | 0) >= 0) {
     $$3484$lcssa = $spec$select540723;
     $$4502$lcssa = $spec$select541;
     break;
    } else {
     $$3484663 = $spec$select540723;
     $$4502662 = $spec$select541;
    }
   }
  } else {
   $$3484$lcssa = $$1482$lcssa;
   $$4502$lcssa = $$2500$lcssa;
  }
  if ($$3484$lcssa >>> 0 < $$4502$lcssa >>> 0) {
   $202 = ($132 - $$3484$lcssa >> 2) * 9 | 0;
   $203 = HEAP32[$$3484$lcssa >> 2] | 0;
   if ($203 >>> 0 < 10) $$1517 = $202; else {
    $$0516652 = $202;
    $$0532651 = 10;
    while (1) {
     $$0532651 = $$0532651 * 10 | 0;
     $206 = $$0516652 + 1 | 0;
     if ($203 >>> 0 < $$0532651 >>> 0) {
      $$1517 = $206;
      break;
     } else $$0516652 = $206;
    }
   }
  } else $$1517 = 0;
  $211 = ($42 | 0) == 103;
  $212 = ($spec$select539 | 0) != 0;
  $214 = $spec$select539 - (($42 | 0) == 102 ? 0 : $$1517) + (($212 & $211) << 31 >> 31) | 0;
  if (($214 | 0) < ((($$4502$lcssa - $132 >> 2) * 9 | 0) + -9 | 0)) {
   $222 = $214 + 9216 | 0;
   $223 = ($222 | 0) / 9 | 0;
   $225 = $$0498 + 4 + ($223 + -1024 << 2) | 0;
   $227 = $222 - ($223 * 9 | 0) | 0;
   if (($227 | 0) < 8) {
    $$0529$in646 = $227;
    $$1533645 = 10;
    while (1) {
     $229 = $$1533645 * 10 | 0;
     if (($$0529$in646 | 0) < 7) {
      $$0529$in646 = $$0529$in646 + 1 | 0;
      $$1533645 = $229;
     } else {
      $$1533$lcssa = $229;
      break;
     }
    }
   } else $$1533$lcssa = 10;
   $231 = HEAP32[$225 >> 2] | 0;
   $232 = ($231 >>> 0) / ($$1533$lcssa >>> 0) | 0;
   $234 = $231 - (Math_imul($232, $$1533$lcssa) | 0) | 0;
   $237 = ($225 + 4 | 0) == ($$4502$lcssa | 0);
   if (!($237 & ($234 | 0) == 0)) {
    $spec$select544 = ($232 & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
    $240 = $$1533$lcssa >>> 1;
    $spec$select567 = $234 >>> 0 < $240 >>> 0 ? .5 : $237 & ($234 | 0) == ($240 | 0) ? 1.0 : 1.5;
    if (!$$0522) {
     $$1467 = $spec$select567;
     $$1469 = $spec$select544;
    } else {
     $245 = (HEAP8[$$0523 >> 0] | 0) == 45;
     $$1467 = $245 ? -$spec$select567 : $spec$select567;
     $$1469 = $245 ? -$spec$select544 : $spec$select544;
    }
    $248 = $231 - $234 | 0;
    HEAP32[$225 >> 2] = $248;
    if ($$1469 + $$1467 != $$1469) {
     $251 = $248 + $$1533$lcssa | 0;
     HEAP32[$225 >> 2] = $251;
     if ($251 >>> 0 > 999999999) {
      $$2490638 = $225;
      $$5486639 = $$3484$lcssa;
      while (1) {
       $253 = $$2490638 + -4 | 0;
       HEAP32[$$2490638 >> 2] = 0;
       if ($253 >>> 0 < $$5486639 >>> 0) {
        $255 = $$5486639 + -4 | 0;
        HEAP32[$255 >> 2] = 0;
        $$6 = $255;
       } else $$6 = $$5486639;
       $257 = (HEAP32[$253 >> 2] | 0) + 1 | 0;
       HEAP32[$253 >> 2] = $257;
       if ($257 >>> 0 > 999999999) {
        $$2490638 = $253;
        $$5486639 = $$6;
       } else {
        $$2490$lcssa = $253;
        $$5486$lcssa = $$6;
        break;
       }
      }
     } else {
      $$2490$lcssa = $225;
      $$5486$lcssa = $$3484$lcssa;
     }
     $262 = ($132 - $$5486$lcssa >> 2) * 9 | 0;
     $263 = HEAP32[$$5486$lcssa >> 2] | 0;
     if ($263 >>> 0 < 10) {
      $$4492 = $$2490$lcssa;
      $$4520 = $262;
      $$8 = $$5486$lcssa;
     } else {
      $$2518634 = $262;
      $$2534633 = 10;
      while (1) {
       $$2534633 = $$2534633 * 10 | 0;
       $266 = $$2518634 + 1 | 0;
       if ($263 >>> 0 < $$2534633 >>> 0) {
        $$4492 = $$2490$lcssa;
        $$4520 = $266;
        $$8 = $$5486$lcssa;
        break;
       } else $$2518634 = $266;
      }
     }
    } else {
     $$4492 = $225;
     $$4520 = $$1517;
     $$8 = $$3484$lcssa;
    }
   } else {
    $$4492 = $225;
    $$4520 = $$1517;
    $$8 = $$3484$lcssa;
   }
   $268 = $$4492 + 4 | 0;
   $$5521 = $$4520;
   $$8506 = $$4502$lcssa >>> 0 > $268 >>> 0 ? $268 : $$4502$lcssa;
   $$9 = $$8;
  } else {
   $$5521 = $$1517;
   $$8506 = $$4502$lcssa;
   $$9 = $$3484$lcssa;
  }
  $270 = 0 - $$5521 | 0;
  L109 : do if ($$8506 >>> 0 > $$9 >>> 0) {
   $$9507625 = $$8506;
   while (1) {
    $273 = $$9507625 + -4 | 0;
    if (HEAP32[$273 >> 2] | 0) {
     $$9507$lcssa = $$9507625;
     $$lcssa583 = 1;
     break L109;
    }
    if ($273 >>> 0 > $$9 >>> 0) $$9507625 = $273; else {
     $$9507$lcssa = $273;
     $$lcssa583 = 0;
     break;
    }
   }
  } else {
   $$9507$lcssa = $$8506;
   $$lcssa583 = 0;
  } while (0);
  do if ($211) {
   $spec$select548 = $spec$select539 + (($212 ^ 1) & 1) | 0;
   if (($spec$select548 | 0) > ($$5521 | 0) & ($$5521 | 0) > -5) {
    $$0479 = $5 + -1 | 0;
    $$2476 = $spec$select548 + -1 - $$5521 | 0;
   } else {
    $$0479 = $5 + -2 | 0;
    $$2476 = $spec$select548 + -1 | 0;
   }
   if (!($4 & 8)) {
    if ($$lcssa583 ? ($286 = HEAP32[$$9507$lcssa + -4 >> 2] | 0, ($286 | 0) != 0) : 0) if (!(($286 >>> 0) % 10 | 0)) {
     $$1530621 = 0;
     $$3535620 = 10;
     while (1) {
      $$3535620 = $$3535620 * 10 | 0;
      $291 = $$1530621 + 1 | 0;
      if (($286 >>> 0) % ($$3535620 >>> 0) | 0 | 0) {
       $$2531 = $291;
       break;
      } else $$1530621 = $291;
     }
    } else $$2531 = 0; else $$2531 = 9;
    $300 = (($$9507$lcssa - $132 >> 2) * 9 | 0) + -9 | 0;
    if (($$0479 | 32 | 0) == 102) {
     $301 = $300 - $$2531 | 0;
     $spec$select549 = ($301 | 0) > 0 ? $301 : 0;
     $$1480 = $$0479;
     $$3477 = ($$2476 | 0) < ($spec$select549 | 0) ? $$2476 : $spec$select549;
     break;
    } else {
     $305 = $300 + $$5521 - $$2531 | 0;
     $spec$select551 = ($305 | 0) > 0 ? $305 : 0;
     $$1480 = $$0479;
     $$3477 = ($$2476 | 0) < ($spec$select551 | 0) ? $$2476 : $spec$select551;
     break;
    }
   } else {
    $$1480 = $$0479;
    $$3477 = $$2476;
   }
  } else {
   $$1480 = $5;
   $$3477 = $spec$select539;
  } while (0);
  $308 = ($$3477 | 0) != 0;
  $310 = $308 ? 1 : $4 >>> 3 & 1;
  $312 = ($$1480 | 32 | 0) == 102;
  if ($312) {
   $$2515 = 0;
   $$pn = ($$5521 | 0) > 0 ? $$5521 : 0;
  } else {
   $316 = ($$5521 | 0) < 0 ? $270 : $$5521;
   $319 = _fmt_u($316, (($316 | 0) < 0) << 31 >> 31, $11) | 0;
   $320 = $11;
   if (($320 - $319 | 0) < 2) {
    $$1514614 = $319;
    while (1) {
     $324 = $$1514614 + -1 | 0;
     HEAP8[$324 >> 0] = 48;
     if (($320 - $324 | 0) < 2) $$1514614 = $324; else {
      $$1514$lcssa = $324;
      break;
     }
    }
   } else $$1514$lcssa = $319;
   HEAP8[$$1514$lcssa + -1 >> 0] = ($$5521 >> 31 & 2) + 43;
   $334 = $$1514$lcssa + -2 | 0;
   HEAP8[$334 >> 0] = $$1480;
   $$2515 = $334;
   $$pn = $320 - $334 | 0;
  }
  $339 = $$0522 + 1 + $$3477 + $310 + $$pn | 0;
  _pad_667($0, 32, $2, $339, $4);
  _out($0, $$0523, $$0522);
  _pad_667($0, 48, $2, $339, $4 ^ 65536);
  if ($312) {
   $spec$select554 = $$9 >>> 0 > $$0498 >>> 0 ? $$0498 : $$9;
   $342 = $8 + 9 | 0;
   $343 = $342;
   $344 = $8 + 8 | 0;
   $$5493603 = $spec$select554;
   do {
    $346 = _fmt_u(HEAP32[$$5493603 >> 2] | 0, 0, $342) | 0;
    if (($$5493603 | 0) == ($spec$select554 | 0)) if (($346 | 0) == ($342 | 0)) {
     HEAP8[$344 >> 0] = 48;
     $$1465 = $344;
    } else $$1465 = $346; else if ($346 >>> 0 > $8 >>> 0) {
     _memset($8 | 0, 48, $346 - $9 | 0) | 0;
     $$0464599 = $346;
     while (1) {
      $351 = $$0464599 + -1 | 0;
      if ($351 >>> 0 > $8 >>> 0) $$0464599 = $351; else {
       $$1465 = $351;
       break;
      }
     }
    } else $$1465 = $346;
    _out($0, $$1465, $343 - $$1465 | 0);
    $$5493603 = $$5493603 + 4 | 0;
   } while ($$5493603 >>> 0 <= $$0498 >>> 0);
   if (!(($4 & 8 | 0) == 0 & ($308 ^ 1))) _out($0, 53642, 1);
   if ($$5493603 >>> 0 < $$9507$lcssa >>> 0 & ($$3477 | 0) > 0) {
    $$4478594 = $$3477;
    $$6494593 = $$5493603;
    while (1) {
     $364 = _fmt_u(HEAP32[$$6494593 >> 2] | 0, 0, $342) | 0;
     if ($364 >>> 0 > $8 >>> 0) {
      _memset($8 | 0, 48, $364 - $9 | 0) | 0;
      $$0463588 = $364;
      while (1) {
       $368 = $$0463588 + -1 | 0;
       if ($368 >>> 0 > $8 >>> 0) $$0463588 = $368; else {
        $$0463$lcssa = $368;
        break;
       }
      }
     } else $$0463$lcssa = $364;
     _out($0, $$0463$lcssa, ($$4478594 | 0) < 9 ? $$4478594 : 9);
     $$6494593 = $$6494593 + 4 | 0;
     $373 = $$4478594 + -9 | 0;
     if (!($$6494593 >>> 0 < $$9507$lcssa >>> 0 & ($$4478594 | 0) > 9)) {
      $$4478$lcssa = $373;
      break;
     } else $$4478594 = $373;
    }
   } else $$4478$lcssa = $$3477;
   _pad_667($0, 48, $$4478$lcssa + 9 | 0, 9, 0);
  } else {
   $spec$select557 = $$lcssa583 ? $$9507$lcssa : $$9 + 4 | 0;
   if ($$9 >>> 0 < $spec$select557 >>> 0 & ($$3477 | 0) > -1) {
    $382 = $8 + 9 | 0;
    $384 = ($4 & 8 | 0) == 0;
    $385 = $382;
    $386 = 0 - $9 | 0;
    $387 = $8 + 8 | 0;
    $$5609 = $$3477;
    $$7495608 = $$9;
    while (1) {
     $389 = _fmt_u(HEAP32[$$7495608 >> 2] | 0, 0, $382) | 0;
     if (($389 | 0) == ($382 | 0)) {
      HEAP8[$387 >> 0] = 48;
      $$0 = $387;
     } else $$0 = $389;
     do if (($$7495608 | 0) == ($$9 | 0)) {
      $395 = $$0 + 1 | 0;
      _out($0, $$0, 1);
      if ($384 & ($$5609 | 0) < 1) {
       $$2 = $395;
       break;
      }
      _out($0, 53642, 1);
      $$2 = $395;
     } else {
      if ($$0 >>> 0 <= $8 >>> 0) {
       $$2 = $$0;
       break;
      }
      _memset($8 | 0, 48, $$0 + $386 | 0) | 0;
      $$1604 = $$0;
      while (1) {
       $393 = $$1604 + -1 | 0;
       if ($393 >>> 0 > $8 >>> 0) $$1604 = $393; else {
        $$2 = $393;
        break;
       }
      }
     } while (0);
     $398 = $385 - $$2 | 0;
     _out($0, $$2, ($$5609 | 0) > ($398 | 0) ? $398 : $$5609);
     $401 = $$5609 - $398 | 0;
     $$7495608 = $$7495608 + 4 | 0;
     if (!($$7495608 >>> 0 < $spec$select557 >>> 0 & ($401 | 0) > -1)) {
      $$5$lcssa = $401;
      break;
     } else $$5609 = $401;
    }
   } else $$5$lcssa = $$3477;
   _pad_667($0, 48, $$5$lcssa + 18 | 0, 18, 0);
   _out($0, $$2515, $11 - $$2515 | 0);
  }
  _pad_667($0, 32, $2, $339, $4 ^ 8192);
  $$sink757 = $339;
 } while (0);
 STACKTOP = sp;
 return (($$sink757 | 0) < ($2 | 0) ? $2 : $$sink757) | 0;
}

function _decfloat($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0324 = 0, $$0324$be = 0, $$0327480 = 0, $$0328 = 0, $$0329 = 0, $$0331476 = 0, $$0335486 = 0, $$0336$lcssa = 0, $$0336453 = 0, $$0336454 = 0, $$0336455 = 0, $$0336503 = 0, $$0340$lcssa = 0, $$0340457 = 0, $$0340458 = 0, $$0340459 = 0, $$0340502 = 0, $$0345$lcssa540 = 0, $$0345484 = 0, $$0355 = 0.0, $$0356 = 0.0, $$0360474 = 0.0, $$0367 = 0, $$0376 = 0, $$0376$ph = 0, $$0381$lcssa539 = 0, $$0381483 = 0, $$0390 = 0, $$0393 = 0, $$0398$lcssa = 0, $$0398463 = 0, $$0398464 = 0, $$0398465 = 0, $$0398499 = 0, $$1 = 0.0, $$10473 = 0, $$11 = 0, $$1330 = 0, $$1357 = 0.0, $$1361 = 0.0, $$1377 = 0, $$1377$ph = 0, $$1377$ph$ph = 0, $$1391$lcssa = 0, $$1391501 = 0, $$2 = 0, $$2338 = 0, $$2342 = 0, $$2362 = 0.0, $$2369 = 0, $$2369$ph = 0, $$2369$ph579 = 0, $$2392 = 0, $$2395 = 0, $$2400 = 0, $$3$lcssa = 0, $$3339493 = 0, $$3343 = 0, $$3348$ph = 0, $$3348$ph580 = 0, $$3359 = 0.0, $$3363 = 0.0, $$3370 = 0, $$3379 = 0, $$3384$ph = 0, $$3384$ph578 = 0, $$3396$lcssa = 0, $$3396500 = 0, $$3504 = 0, $$4344485 = 0, $$4380 = 0, $$4397 = 0, $$4475 = 0, $$5 = 0, $$5$in = 0, $$5350 = 0, $$5350$ph = 0, $$5350$ph$ph = 0, $$5372 = 0, $$5386$ph = 0, $$5386$ph576 = 0, $$5386$ph576$ph = 0, $$6351478 = 0, $$6387477 = 0, $$6479 = 0, $$7374$ph$ph = 0, $$pre = 0, $$sink$off0 = 0, $10 = 0, $104 = 0, $105 = 0, $11 = 0, $110 = 0, $111 = 0, $113 = 0, $114 = 0, $127 = 0, $129 = 0, $135 = 0, $139 = 0, $141 = 0, $147 = 0, $153 = 0, $155 = 0, $177 = 0, $18 = 0, $189 = 0, $193 = 0, $196 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $203 = 0, $204 = 0, $218 = 0, $219 = 0, $220 = 0, $224 = 0, $226 = 0, $228 = 0, $229 = 0, $235 = 0, $237 = 0, $239 = 0, $244 = 0, $247 = 0, $251 = 0, $254 = 0, $257 = 0, $26 = 0, $264 = 0, $267 = 0, $269 = 0, $27 = 0, $274 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $283 = 0, $29 = 0, $294 = 0, $297 = 0, $30 = 0, $302 = 0, $306 = 0, $309 = 0, $31 = 0, $318 = 0.0, $319 = 0.0, $320 = 0, $321 = 0, $322 = 0, $327 = 0.0, $330 = 0.0, $334 = 0, $337 = 0, $361 = 0.0, $366 = 0, $373 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $40 = 0, $42 = 0, $44 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $53 = 0, $58 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $85 = 0, $86 = 0, $9 = 0, $95 = 0, $96 = 0, $97 = 0, $or$cond417 = 0, $or$cond421 = 0, $spec$select420 = 0, $spec$select441 = 0, $storemerge446 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 $6 = sp;
 $7 = $3 + $2 | 0;
 $8 = 0 - $7 | 0;
 $9 = $0 + 4 | 0;
 $10 = $0 + 104 | 0;
 $$0324 = $1;
 $$0393 = 0;
 L1 : while (1) {
  switch ($$0324 | 0) {
  case 46:
   {
    label = 7;
    break L1;
    break;
   }
  case 48:
   break;
  default:
   {
    $$0390 = 0;
    $$2 = $$0324;
    $$2395 = $$0393;
    $375 = 0;
    $376 = 0;
    break L1;
   }
  }
  $11 = HEAP32[$9 >> 2] | 0;
  if ($11 >>> 0 < (HEAP32[$10 >> 2] | 0) >>> 0) {
   HEAP32[$9 >> 2] = $11 + 1;
   $$0324$be = HEAPU8[$11 >> 0] | 0;
  } else $$0324$be = ___shgetc($0) | 0;
  $$0324 = $$0324$be;
  $$0393 = 1;
 }
 if ((label | 0) == 7) {
  $18 = HEAP32[$9 >> 2] | 0;
  if ($18 >>> 0 < (HEAP32[$10 >> 2] | 0) >>> 0) {
   HEAP32[$9 >> 2] = $18 + 1;
   $26 = HEAPU8[$18 >> 0] | 0;
  } else $26 = ___shgetc($0) | 0;
  if (($26 | 0) == 48) {
   $27 = 0;
   $28 = 0;
   while (1) {
    $29 = _i64Add($27 | 0, $28 | 0, -1, -1) | 0;
    $30 = getTempRet0() | 0;
    $31 = HEAP32[$9 >> 2] | 0;
    if ($31 >>> 0 < (HEAP32[$10 >> 2] | 0) >>> 0) {
     HEAP32[$9 >> 2] = $31 + 1;
     $39 = HEAPU8[$31 >> 0] | 0;
    } else $39 = ___shgetc($0) | 0;
    if (($39 | 0) == 48) {
     $27 = $29;
     $28 = $30;
    } else {
     $$0390 = 1;
     $$2 = $39;
     $$2395 = 1;
     $375 = $29;
     $376 = $30;
     break;
    }
   }
  } else {
   $$0390 = 1;
   $$2 = $26;
   $$2395 = $$0393;
   $375 = 0;
   $376 = 0;
  }
 }
 HEAP32[$6 >> 2] = 0;
 $40 = $$2 + -48 | 0;
 $42 = ($$2 | 0) == 46;
 L22 : do if ($42 | $40 >>> 0 < 10) {
  $44 = $6 + 496 | 0;
  $$0336503 = 0;
  $$0340502 = 0;
  $$0398499 = 0;
  $$1391501 = $$0390;
  $$3396500 = $$2395;
  $$3504 = $$2;
  $377 = $42;
  $378 = $40;
  $379 = $375;
  $380 = $376;
  $47 = 0;
  $48 = 0;
  L24 : while (1) {
   do if ($377) if (!$$1391501) {
    $$2338 = $$0336503;
    $$2342 = $$0340502;
    $$2392 = 1;
    $$2400 = $$0398499;
    $$4397 = $$3396500;
    $381 = $47;
    $382 = $48;
    $383 = $47;
    $384 = $48;
   } else break L24; else {
    $49 = _i64Add($47 | 0, $48 | 0, 1, 0) | 0;
    $50 = getTempRet0() | 0;
    $51 = ($$3504 | 0) != 48;
    if (($$0340502 | 0) >= 125) {
     if (!$51) {
      $$2338 = $$0336503;
      $$2342 = $$0340502;
      $$2392 = $$1391501;
      $$2400 = $$0398499;
      $$4397 = $$3396500;
      $381 = $379;
      $382 = $380;
      $383 = $49;
      $384 = $50;
      break;
     }
     HEAP32[$44 >> 2] = HEAP32[$44 >> 2] | 1;
     $$2338 = $$0336503;
     $$2342 = $$0340502;
     $$2392 = $$1391501;
     $$2400 = $$0398499;
     $$4397 = $$3396500;
     $381 = $379;
     $382 = $380;
     $383 = $49;
     $384 = $50;
     break;
    }
    $53 = $6 + ($$0340502 << 2) | 0;
    if (!$$0336503) $storemerge446 = $378; else $storemerge446 = $$3504 + -48 + ((HEAP32[$53 >> 2] | 0) * 10 | 0) | 0;
    HEAP32[$53 >> 2] = $storemerge446;
    $58 = $$0336503 + 1 | 0;
    $59 = ($58 | 0) == 9;
    $$2338 = $59 ? 0 : $58;
    $$2342 = $$0340502 + ($59 & 1) | 0;
    $$2392 = $$1391501;
    $$2400 = $51 ? $49 : $$0398499;
    $$4397 = 1;
    $381 = $379;
    $382 = $380;
    $383 = $49;
    $384 = $50;
   } while (0);
   $63 = HEAP32[$9 >> 2] | 0;
   if ($63 >>> 0 < (HEAP32[$10 >> 2] | 0) >>> 0) {
    HEAP32[$9 >> 2] = $63 + 1;
    $71 = HEAPU8[$63 >> 0] | 0;
   } else $71 = ___shgetc($0) | 0;
   $378 = $71 + -48 | 0;
   $377 = ($71 | 0) == 46;
   if (!($377 | $378 >>> 0 < 10)) {
    $$0336$lcssa = $$2338;
    $$0340$lcssa = $$2342;
    $$0398$lcssa = $$2400;
    $$1391$lcssa = $$2392;
    $$3$lcssa = $71;
    $$3396$lcssa = $$4397;
    $77 = $383;
    $78 = $381;
    $80 = $384;
    $81 = $382;
    label = 31;
    break L22;
   } else {
    $$0336503 = $$2338;
    $$0340502 = $$2342;
    $$0398499 = $$2400;
    $$1391501 = $$2392;
    $$3396500 = $$4397;
    $$3504 = $71;
    $379 = $381;
    $380 = $382;
    $47 = $383;
    $48 = $384;
   }
  }
  $$0336455 = $$0336503;
  $$0340459 = $$0340502;
  $$0398465 = $$0398499;
  $385 = $47;
  $386 = $48;
  $387 = $379;
  $388 = $380;
  $389 = ($$3396500 | 0) != 0;
  label = 39;
 } else {
  $$0336$lcssa = 0;
  $$0340$lcssa = 0;
  $$0398$lcssa = 0;
  $$1391$lcssa = $$0390;
  $$3$lcssa = $$2;
  $$3396$lcssa = $$2395;
  $77 = 0;
  $78 = $375;
  $80 = 0;
  $81 = $376;
  label = 31;
 } while (0);
 do if ((label | 0) == 31) {
  $75 = ($$1391$lcssa | 0) == 0;
  $76 = $75 ? $77 : $78;
  $79 = $75 ? $80 : $81;
  $82 = ($$3396$lcssa | 0) != 0;
  if (!($82 & ($$3$lcssa | 32 | 0) == 101)) if (($$3$lcssa | 0) > -1) {
   $$0336455 = $$0336$lcssa;
   $$0340459 = $$0340$lcssa;
   $$0398465 = $$0398$lcssa;
   $385 = $77;
   $386 = $80;
   $387 = $76;
   $388 = $79;
   $389 = $82;
   label = 39;
   break;
  } else {
   $$0336454 = $$0336$lcssa;
   $$0340458 = $$0340$lcssa;
   $$0398464 = $$0398$lcssa;
   $390 = $77;
   $391 = $80;
   $392 = $82;
   $393 = $76;
   $394 = $79;
   label = 41;
   break;
  }
  $85 = _scanexp($0, $5) | 0;
  $86 = getTempRet0() | 0;
  if (($85 | 0) == 0 & ($86 | 0) == -2147483648) {
   if (!$5) {
    ___shlim($0, 0, 0);
    $$1 = 0.0;
    break;
   }
   if (!(HEAP32[$10 >> 2] | 0)) {
    $95 = 0;
    $96 = 0;
   } else {
    HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + -1;
    $95 = 0;
    $96 = 0;
   }
  } else {
   $95 = $85;
   $96 = $86;
  }
  $97 = _i64Add($95 | 0, $96 | 0, $76 | 0, $79 | 0) | 0;
  $$0336453 = $$0336$lcssa;
  $$0340457 = $$0340$lcssa;
  $$0398463 = $$0398$lcssa;
  $110 = $97;
  $111 = $77;
  $113 = getTempRet0() | 0;
  $114 = $80;
  label = 43;
 } while (0);
 if ((label | 0) == 39) if (HEAP32[$10 >> 2] | 0) {
  HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + -1;
  if ($389) {
   $$0336453 = $$0336455;
   $$0340457 = $$0340459;
   $$0398463 = $$0398465;
   $110 = $387;
   $111 = $385;
   $113 = $388;
   $114 = $386;
   label = 43;
  } else label = 42;
 } else {
  $$0336454 = $$0336455;
  $$0340458 = $$0340459;
  $$0398464 = $$0398465;
  $390 = $385;
  $391 = $386;
  $392 = $389;
  $393 = $387;
  $394 = $388;
  label = 41;
 }
 if ((label | 0) == 41) if ($392) {
  $$0336453 = $$0336454;
  $$0340457 = $$0340458;
  $$0398463 = $$0398464;
  $110 = $393;
  $111 = $390;
  $113 = $394;
  $114 = $391;
  label = 43;
 } else label = 42;
 do if ((label | 0) == 42) {
  $104 = ___errno_location() | 0;
  HEAP32[$104 >> 2] = 28;
  ___shlim($0, 0, 0);
  $$1 = 0.0;
 } else if ((label | 0) == 43) {
  $105 = HEAP32[$6 >> 2] | 0;
  if (!$105) {
   $$1 = +($4 | 0) * 0.0;
   break;
  }
  if ((($114 | 0) < 0 | ($114 | 0) == 0 & $111 >>> 0 < 10) & (($110 | 0) == ($111 | 0) & ($113 | 0) == ($114 | 0)) ? ($2 | 0) > 30 | ($105 >>> $2 | 0) == 0 : 0) {
   $$1 = +($4 | 0) * +($105 >>> 0);
   break;
  }
  $127 = ($3 | 0) / -2 | 0;
  $129 = (($127 | 0) < 0) << 31 >> 31;
  if (($113 | 0) > ($129 | 0) | ($113 | 0) == ($129 | 0) & $110 >>> 0 > $127 >>> 0) {
   $135 = ___errno_location() | 0;
   HEAP32[$135 >> 2] = 68;
   $$1 = +($4 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
   break;
  }
  $139 = $3 + -106 | 0;
  $141 = (($139 | 0) < 0) << 31 >> 31;
  if (($113 | 0) < ($141 | 0) | ($113 | 0) == ($141 | 0) & $110 >>> 0 < $139 >>> 0) {
   $147 = ___errno_location() | 0;
   HEAP32[$147 >> 2] = 68;
   $$1 = +($4 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
   break;
  }
  if (!$$0336453) $$3343 = $$0340457; else {
   if (($$0336453 | 0) < 9) {
    $153 = $6 + ($$0340457 << 2) | 0;
    $$3339493 = $$0336453;
    $155 = HEAP32[$153 >> 2] | 0;
    while (1) {
     $155 = $155 * 10 | 0;
     if (($$3339493 | 0) >= 8) break; else $$3339493 = $$3339493 + 1 | 0;
    }
    HEAP32[$153 >> 2] = $155;
   }
   $$3343 = $$0340457 + 1 | 0;
  }
  if (($$0398463 | 0) < 9 ? ($$0398463 | 0) <= ($110 | 0) & ($110 | 0) < 18 : 0) {
   if (($110 | 0) == 9) {
    $$1 = +($4 | 0) * +((HEAP32[$6 >> 2] | 0) >>> 0);
    break;
   }
   if (($110 | 0) < 9) {
    $$1 = +($4 | 0) * +((HEAP32[$6 >> 2] | 0) >>> 0) / +(HEAP32[12432 + (8 - $110 << 2) >> 2] | 0);
    break;
   }
   $177 = $2 + 27 + (Math_imul($110, -3) | 0) | 0;
   $$pre = HEAP32[$6 >> 2] | 0;
   if (($177 | 0) > 30 | ($$pre >>> $177 | 0) == 0) {
    $$1 = +($4 | 0) * +($$pre >>> 0) * +(HEAP32[12432 + ($110 + -10 << 2) >> 2] | 0);
    break;
   }
  }
  $189 = ($110 | 0) % 9 | 0;
  if (!$189) {
   $$2369$ph = $$3343;
   $$3348$ph = 0;
   $$3384$ph = $110;
  } else {
   $193 = ($110 | 0) > -1 ? $189 : $189 + 9 | 0;
   $196 = HEAP32[12432 + (8 - $193 << 2) >> 2] | 0;
   if ($$3343) {
    $198 = 1e9 / ($196 | 0) | 0;
    $$0335486 = 0;
    $$0345484 = 0;
    $$0381483 = $110;
    $$4344485 = 0;
    do {
     $199 = $6 + ($$4344485 << 2) | 0;
     $200 = HEAP32[$199 >> 2] | 0;
     $201 = ($200 >>> 0) / ($196 >>> 0) | 0;
     $203 = $200 - (Math_imul($201, $196) | 0) | 0;
     $204 = $201 + $$0335486 | 0;
     HEAP32[$199 >> 2] = $204;
     $$0335486 = Math_imul($198, $203) | 0;
     $or$cond417 = ($$4344485 | 0) == ($$0345484 | 0) & ($204 | 0) == 0;
     $$0381483 = $or$cond417 ? $$0381483 + -9 | 0 : $$0381483;
     $$0345484 = $or$cond417 ? $$0345484 + 1 & 127 : $$0345484;
     $$4344485 = $$4344485 + 1 | 0;
    } while (($$4344485 | 0) != ($$3343 | 0));
    if (!$$0335486) {
     $$0345$lcssa540 = $$0345484;
     $$0367 = $$3343;
     $$0381$lcssa539 = $$0381483;
    } else {
     HEAP32[$6 + ($$3343 << 2) >> 2] = $$0335486;
     $$0345$lcssa540 = $$0345484;
     $$0367 = $$3343 + 1 | 0;
     $$0381$lcssa539 = $$0381483;
    }
   } else {
    $$0345$lcssa540 = 0;
    $$0367 = 0;
    $$0381$lcssa539 = $110;
   }
   $$2369$ph = $$0367;
   $$3348$ph = $$0345$lcssa540;
   $$3384$ph = 9 - $193 + $$0381$lcssa539 | 0;
  }
  $$0376$ph = 0;
  $$2369$ph579 = $$2369$ph;
  $$3348$ph580 = $$3348$ph;
  $$3384$ph578 = $$3384$ph;
  L104 : while (1) {
   $218 = ($$3384$ph578 | 0) < 18;
   $219 = ($$3384$ph578 | 0) == 18;
   $220 = $6 + ($$3348$ph580 << 2) | 0;
   $$0376 = $$0376$ph;
   $$2369 = $$2369$ph579;
   while (1) {
    if (!$218) {
     if (!$219) {
      $$5386$ph = $$3384$ph578;
      break L104;
     }
     if ((HEAP32[$220 >> 2] | 0) >>> 0 >= 9007199) {
      $$5386$ph = 18;
      break L104;
     }
    }
    $$0329 = 0;
    $$3370 = $$2369;
    $$5$in = $$2369 + 127 | 0;
    while (1) {
     $$5 = $$5$in & 127;
     $224 = $6 + ($$5 << 2) | 0;
     $226 = _bitshift64Shl(HEAP32[$224 >> 2] | 0, 0, 29) | 0;
     $228 = _i64Add($226 | 0, getTempRet0() | 0, $$0329 | 0, 0) | 0;
     $229 = getTempRet0() | 0;
     if ($229 >>> 0 > 0 | ($229 | 0) == 0 & $228 >>> 0 > 1e9) {
      $235 = ___udivdi3($228 | 0, $229 | 0, 1e9, 0) | 0;
      $237 = ___muldi3($235 | 0, getTempRet0() | 0, 1e9, 0) | 0;
      $239 = _i64Subtract($228 | 0, $229 | 0, $237 | 0, getTempRet0() | 0) | 0;
      getTempRet0() | 0;
      $$1330 = $235;
      $$sink$off0 = $239;
     } else {
      $$1330 = 0;
      $$sink$off0 = $228;
     }
     HEAP32[$224 >> 2] = $$sink$off0;
     $244 = ($$5 | 0) == ($$3348$ph580 | 0);
     $spec$select441 = ($$5 | 0) != ($$3370 + 127 & 127 | 0) | $244 ? $$3370 : ($$sink$off0 | 0) == 0 ? $$5 : $$3370;
     if ($244) break; else {
      $$0329 = $$1330;
      $$3370 = $spec$select441;
      $$5$in = $$5 + -1 | 0;
     }
    }
    $247 = $$0376 + -29 | 0;
    if (!$$1330) {
     $$0376 = $247;
     $$2369 = $$3370;
    } else break;
   }
   $251 = $$3348$ph580 + 127 & 127;
   $254 = $spec$select441 + 127 & 127;
   $257 = $6 + (($spec$select441 + 126 & 127) << 2) | 0;
   if (($251 | 0) == ($spec$select441 | 0)) {
    HEAP32[$257 >> 2] = HEAP32[$257 >> 2] | HEAP32[$6 + ($254 << 2) >> 2];
    $$5372 = $254;
   } else $$5372 = $$3370;
   HEAP32[$6 + ($251 << 2) >> 2] = $$1330;
   $$0376$ph = $247;
   $$2369$ph579 = $$5372;
   $$3348$ph580 = $251;
   $$3384$ph578 = $$3384$ph578 + 9 | 0;
  }
  $$1377$ph$ph = $$0376;
  $$5350$ph$ph = $$3348$ph580;
  $$5386$ph576$ph = $$5386$ph;
  $$7374$ph$ph = $$2369;
  L123 : while (1) {
   $297 = $$7374$ph$ph + 1 & 127;
   $302 = $6 + (($$7374$ph$ph + 127 & 127) << 2) | 0;
   $$1377$ph = $$1377$ph$ph;
   $$5350$ph = $$5350$ph$ph;
   $$5386$ph576 = $$5386$ph576$ph;
   while (1) {
    $294 = ($$5386$ph576 | 0) == 18;
    $spec$select420 = ($$5386$ph576 | 0) > 27 ? 9 : 1;
    $$1377 = $$1377$ph;
    $$5350 = $$5350$ph;
    while (1) {
     $$0331476 = 0;
     while (1) {
      $264 = $$0331476 + $$5350 & 127;
      if (($264 | 0) == ($$7374$ph$ph | 0)) {
       label = 92;
       break;
      }
      $267 = HEAP32[$6 + ($264 << 2) >> 2] | 0;
      $269 = HEAP32[17356 + ($$0331476 << 2) >> 2] | 0;
      if ($267 >>> 0 < $269 >>> 0) {
       label = 92;
       break;
      }
      if ($267 >>> 0 > $269 >>> 0) break;
      if (($$0331476 + 1 | 0) >>> 0 < 2) $$0331476 = 1; else {
       label = 92;
       break;
      }
     }
     if ((label | 0) == 92 ? (label = 0, $294) : 0) break L123;
     $274 = $spec$select420 + $$1377 | 0;
     if (($$5350 | 0) == ($$7374$ph$ph | 0)) {
      $$1377 = $274;
      $$5350 = $$7374$ph$ph;
     } else break;
    }
    $277 = (1 << $spec$select420) + -1 | 0;
    $278 = 1e9 >>> $spec$select420;
    $$0327480 = 0;
    $$6351478 = $$5350;
    $$6387477 = $$5386$ph576;
    $$6479 = $$5350;
    do {
     $279 = $6 + ($$6479 << 2) | 0;
     $280 = HEAP32[$279 >> 2] | 0;
     $283 = ($280 >>> $spec$select420) + $$0327480 | 0;
     HEAP32[$279 >> 2] = $283;
     $$0327480 = Math_imul($280 & $277, $278) | 0;
     $or$cond421 = ($$6479 | 0) == ($$6351478 | 0) & ($283 | 0) == 0;
     $$6387477 = $or$cond421 ? $$6387477 + -9 | 0 : $$6387477;
     $$6351478 = $or$cond421 ? $$6351478 + 1 & 127 : $$6351478;
     $$6479 = $$6479 + 1 & 127;
    } while (($$6479 | 0) != ($$7374$ph$ph | 0));
    if ($$0327480 | 0) {
     if (($297 | 0) != ($$6351478 | 0)) break;
     HEAP32[$302 >> 2] = HEAP32[$302 >> 2] | 1;
    }
    $$1377$ph = $274;
    $$5350$ph = $$6351478;
    $$5386$ph576 = $$6387477;
   }
   HEAP32[$6 + ($$7374$ph$ph << 2) >> 2] = $$0327480;
   $$1377$ph$ph = $274;
   $$5350$ph$ph = $$6351478;
   $$5386$ph576$ph = $$6387477;
   $$7374$ph$ph = $297;
  }
  $$0360474 = 0.0;
  $$10473 = $$7374$ph$ph;
  $$4475 = 0;
  while (1) {
   $306 = $$4475 + $$5350 & 127;
   $309 = $$10473 + 1 & 127;
   if (($306 | 0) == ($$10473 | 0)) {
    HEAP32[$6 + ($309 + -1 << 2) >> 2] = 0;
    $$11 = $309;
   } else $$11 = $$10473;
   $$0360474 = $$0360474 * 1.0e9 + +((HEAP32[$6 + ($306 << 2) >> 2] | 0) >>> 0);
   $$4475 = $$4475 + 1 | 0;
   if (($$4475 | 0) == 2) break; else $$10473 = $$11;
  }
  $318 = +($4 | 0);
  $319 = $$0360474 * $318;
  $320 = $$1377 + 53 | 0;
  $321 = $320 - $3 | 0;
  $322 = ($321 | 0) < ($2 | 0);
  $$0328 = $322 ? (($321 | 0) > 0 ? $321 : 0) : $2;
  if (($$0328 | 0) < 53) {
   $327 = +_copysignl(+_scalbn(1.0, 105 - $$0328 | 0), $319);
   $330 = +_fmodl($319, +_scalbn(1.0, 53 - $$0328 | 0));
   $$0355 = $327;
   $$0356 = $330;
   $$1361 = $327 + ($319 - $330);
  } else {
   $$0355 = 0.0;
   $$0356 = 0.0;
   $$1361 = $319;
  }
  $334 = $$5350 + 2 & 127;
  if (($334 | 0) != ($$11 | 0)) {
   $337 = HEAP32[$6 + ($334 << 2) >> 2] | 0;
   do if ($337 >>> 0 >= 5e8) {
    if (($337 | 0) != 5e8) {
     $$1357 = $318 * .75 + $$0356;
     break;
    }
    if (($$5350 + 3 & 127 | 0) == ($$11 | 0)) {
     $$1357 = $318 * .5 + $$0356;
     break;
    } else {
     $$1357 = $318 * .75 + $$0356;
     break;
    }
   } else {
    if (($337 | 0) == 0 ? ($$5350 + 3 & 127 | 0) == ($$11 | 0) : 0) {
     $$1357 = $$0356;
     break;
    }
    $$1357 = $318 * .25 + $$0356;
   } while (0);
   if ((53 - $$0328 | 0) > 1 ? !(+_fmodl($$1357, 1.0) != 0.0) : 0) $$3359 = $$1357 + 1.0; else $$3359 = $$1357;
  } else $$3359 = $$0356;
  $361 = $$1361 + $$3359 - $$0355;
  do if (($320 & 2147483647 | 0) > (-2 - $7 | 0)) {
   $366 = !(+Math_abs(+$361) >= 9007199254740992.0);
   $$3379 = $$1377 + (($366 ^ 1) & 1) | 0;
   $$2362 = $366 ? $361 : $361 * .5;
   if (($$3379 + 50 | 0) <= ($8 | 0) ? !($$3359 != 0.0 & ($322 & (($$0328 | 0) != ($321 | 0) | $366))) : 0) {
    $$3363 = $$2362;
    $$4380 = $$3379;
    break;
   }
   $373 = ___errno_location() | 0;
   HEAP32[$373 >> 2] = 68;
   $$3363 = $$2362;
   $$4380 = $$3379;
  } else {
   $$3363 = $361;
   $$4380 = $$1377;
  } while (0);
  $$1 = +_scalbnl($$3363, $$4380);
 } while (0);
 STACKTOP = sp;
 return +$$1;
}

function _arDetectMarker($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0440 = 0, $$0442 = 0, $$0447 = 0, $$0452 = 0, $$0456 = 0, $$0458 = 0.0, $$0462 = 0.0, $$0464 = 0.0, $$1441 = 0, $$1443 = 0, $$1448 = 0, $$1453 = 0, $$1457 = 0, $$1459 = 0.0, $$1463 = 0.0, $$1465 = 0.0, $$2444 = 0, $$2449 = 0, $$2454 = 0, $$2460 = 0.0, $$3445 = 0, $$3450 = 0, $$3455 = 0, $$4 = 0, $$4446 = 0, $$4451 = 0, $$5 = 0, $$6 = 0, $$pre$phi495Z2D = 0, $$pre$phi501Z2D = 0, $$pre$phi503Z2D = 0, $$pre$phi505Z2D = 0, $$pre$phiZ2D = 0, $$pre486 = 0, $$pre487 = 0, $$pre488 = 0, $10 = 0, $100 = 0, $11 = 0, $111 = 0, $112 = 0, $114 = 0, $116 = 0, $119 = 0, $127 = 0, $129 = 0, $131 = 0, $132 = 0, $137 = 0, $139 = 0, $14 = 0, $145 = 0, $148 = 0, $15 = 0, $159 = 0, $16 = 0, $161 = 0, $168 = 0, $170 = 0, $176 = 0, $177 = 0, $18 = 0, $2 = 0, $20 = 0, $201 = 0, $204 = 0, $205 = 0, $206 = 0, $208 = 0, $209 = 0, $210 = 0, $211 = 0, $217 = 0.0, $218 = 0.0, $22 = 0, $224 = 0.0, $229 = 0.0, $232 = 0.0, $236 = 0, $237 = 0, $240 = 0.0, $243 = 0, $245 = 0, $249 = 0, $252 = 0.0, $258 = 0.0, $26 = 0, $27 = 0, $276 = 0, $279 = 0.0, $28 = 0, $281 = 0, $284 = 0.0, $289 = 0.0, $29 = 0, $296 = 0, $299 = 0.0, $3 = 0, $30 = 0, $305 = 0.0, $31 = 0, $310 = 0, $314 = 0, $32 = 0, $326 = 0, $327 = 0, $33 = 0, $336 = 0, $338 = 0, $34 = 0, $341 = 0, $348 = 0, $35 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $36 = 0, $360 = 0, $365 = 0.0, $366 = 0.0, $37 = 0, $372 = 0.0, $377 = 0.0, $38 = 0, $386 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $40 = 0, $6 = 0, $7 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $82 = 0, $83 = 0, $85 = 0, $86 = 0, $88 = 0, $91 = 0, $94 = 0, $97 = 0, $99 = 0, $spec$select = 0, $storemerge = 0, $storemerge466 = 0, $vararg_buffer = 0, $vararg_buffer6 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $vararg_buffer9 = sp + 32 | 0;
 $vararg_buffer6 = sp + 24 | 0;
 $vararg_buffer = sp;
 $2 = sp + 52 | 0;
 $3 = sp + 40 | 0;
 L1 : do if (($0 | 0) != 0 & ($1 | 0) != 0) {
  $6 = $0 + 44 | 0;
  HEAP32[$6 >> 2] = 0;
  $7 = $0 + 7062388 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  L3 : do if (($8 | 0) == 4) {
   $10 = $0 + 7062396 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   do if (($11 | 0) > 0) HEAP32[$10 >> 2] = $11 + -1; else {
    $14 = $0 + 16 | 0;
    $15 = HEAP32[$14 >> 2] | 0;
    $16 = $0 + 7062400 | 0;
    $18 = (HEAP32[$16 >> 2] | 0) + $15 | 0;
    $spec$select = ($18 | 0) < 255 ? $18 : 255;
    HEAP32[$2 >> 2] = $spec$select;
    $20 = $0 + 7062404 | 0;
    $22 = $15 - (HEAP32[$20 >> 2] | 0) | 0;
    $storemerge466 = ($22 | 0) > 0 ? $22 : 0;
    HEAP32[$2 + 4 >> 2] = $storemerge466;
    HEAP32[$2 + 8 >> 2] = $15;
    $26 = $1 + 12 | 0;
    $27 = $0 + 36 | 0;
    $28 = $0 + 40 | 0;
    $29 = $0 + 12 | 0;
    $30 = $0 + 20 | 0;
    $31 = $0 + 4834144 | 0;
    $32 = $0 + 15416 | 0;
    $33 = $0 + 15408 | 0;
    $34 = $0 + 4 | 0;
    $35 = $0 + 7062384 | 0;
    $36 = $0 + 24 | 0;
    $37 = $0 + 32 | 0;
    $38 = $0 + 7062416 | 0;
    $39 = $0 + 48 | 0;
    $40 = $0 + 7062424 | 0;
    $$0447 = 0;
    while (1) {
     if ($$0447 >>> 0 >= 3) break;
     if ((_arLabeling(HEAP32[$26 >> 2] | 0, HEAP32[$27 >> 2] | 0, HEAP32[$28 >> 2] | 0, HEAP32[$0 >> 2] | 0, HEAP32[$29 >> 2] | 0, HEAP32[$2 + ($$0447 << 2) >> 2] | 0, HEAP32[$30 >> 2] | 0, $31, 0) | 0) < 0) {
      label = 29;
      break;
     }
     if ((_arDetectMarker2(HEAP32[$27 >> 2] | 0, HEAP32[$28 >> 2] | 0, $31, HEAP32[$30 >> 2] | 0, 1e6, 70, 1.0, $32, $33) | 0) < 0) {
      label = 29;
      break;
     }
     if ((_arGetMarkerInfo(HEAP32[$1 >> 2] | 0, HEAP32[$27 >> 2] | 0, HEAP32[$28 >> 2] | 0, HEAP32[$34 >> 2] | 0, $32, HEAP32[$33 >> 2] | 0, HEAP32[$35 >> 2] | 0, HEAP32[$30 >> 2] | 0, HEAP32[$36 >> 2] | 0, (HEAP32[$37 >> 2] | 0) + 184 | 0, +HEAPF64[$38 >> 3], $39, $6, HEAP32[$40 >> 2] | 0) | 0) < 0) {
      label = 29;
      break;
     }
     HEAP32[$3 + ($$0447 << 2) >> 2] = HEAP32[$6 >> 2];
     $$0447 = $$0447 + 1 | 0;
    }
    if ((label | 0) == 29) {
     $$4 = -1;
     break L1;
    }
    if ((HEAP32[$0 >> 2] | 0) == 1) {
     $77 = HEAP32[$3 + 4 >> 2] | 0;
     $79 = HEAP32[$3 + 8 >> 2] | 0;
     $80 = HEAP32[$3 >> 2] | 0;
     HEAP32[$vararg_buffer >> 2] = $storemerge466;
     HEAP32[$vararg_buffer + 4 >> 2] = $77;
     HEAP32[$vararg_buffer + 8 >> 2] = $15;
     HEAP32[$vararg_buffer + 12 >> 2] = $79;
     HEAP32[$vararg_buffer + 16 >> 2] = $spec$select;
     HEAP32[$vararg_buffer + 20 >> 2] = $80;
     _arLog(0, 3, 24030, $vararg_buffer);
     $82 = $80;
     $83 = $79;
    } else {
     $82 = HEAP32[$3 >> 2] | 0;
     $83 = HEAP32[$3 + 8 >> 2] | 0;
    }
    $$pre486 = HEAP32[$3 + 4 >> 2] | 0;
    if (($82 | 0) > ($83 | 0) | ($$pre486 | 0) > ($83 | 0)) {
     $99 = ($82 | 0) < ($$pre486 | 0) ? $storemerge466 : $spec$select;
     HEAP32[$14 >> 2] = $99;
     $100 = $99 - $15 | 0;
     if (($100 | 0) > 0) {
      HEAP32[$16 >> 2] = $100;
      $storemerge = 1;
     } else {
      HEAP32[$16 >> 2] = 1;
      $storemerge = 0 - $100 | 0;
     }
     HEAP32[$20 >> 2] = $storemerge;
     if ((HEAP32[$0 >> 2] | 0) == 1) {
      HEAP32[$vararg_buffer6 >> 2] = $99;
      _arLog(0, 3, 24106, $vararg_buffer6);
      HEAP32[$10 >> 2] = HEAP32[$0 + 7062392 >> 2];
      break;
     } else {
      HEAP32[$10 >> 2] = HEAP32[$0 + 7062392 >> 2];
      break;
     }
    }
    $85 = HEAP32[$16 >> 2] | 0;
    $86 = HEAP32[$20 >> 2] | 0;
    do if (($85 | 0) >= ($86 | 0)) if (($85 | 0) > ($86 | 0)) {
     HEAP32[$20 >> 2] = $86 + 1;
     $94 = $85;
     break;
    } else {
     $91 = $85 + 1 | 0;
     HEAP32[$16 >> 2] = $91;
     HEAP32[$20 >> 2] = $86 + 1;
     $94 = $91;
     break;
    } else {
     $88 = $85 + 1 | 0;
     HEAP32[$16 >> 2] = $88;
     $94 = $88;
    } while (0);
    if (($94 + $15 | 0) > 254) {
     HEAP32[$16 >> 2] = 1;
     $97 = 1;
    } else $97 = $94;
    if (($15 | 0) <= ($97 | 0)) HEAP32[$20 >> 2] = 1;
    HEAP32[$10 >> 2] = HEAP32[$0 + 7062392 >> 2];
    break L3;
   } while (0);
   $111 = HEAP32[$7 >> 2] | 0;
   label = 33;
  } else {
   $111 = $8;
   label = 33;
  } while (0);
  if ((label | 0) == 33) {
   L47 : do switch ($111 | 0) {
   case 3:
    {
     $112 = $0 + 7062408 | 0;
     $114 = $1 + 12 | 0;
     $116 = _arImageProcLumaHistAndBoxFilterWithBias(HEAP32[$112 >> 2] | 0, HEAP32[$114 >> 2] | 0, 9, -7) | 0;
     if (($116 | 0) < 0) {
      $$4 = $116;
      break L1;
     }
     $119 = HEAP32[$112 >> 2] | 0;
     $127 = $0 + 4834144 | 0;
     $129 = _arLabeling(HEAP32[$114 >> 2] | 0, HEAP32[$119 + 4 >> 2] | 0, HEAP32[$119 + 8 >> 2] | 0, HEAP32[$0 >> 2] | 0, HEAP32[$0 + 12 >> 2] | 0, 0, 0, $127, HEAP32[$119 >> 2] | 0) | 0;
     if (($129 | 0) < 0) {
      $$4 = $129;
      break L1;
     }
     $$pre$phi501Z2D = $0 + 36 | 0;
     $$pre$phi503Z2D = $0 + 40 | 0;
     $$pre$phi505Z2D = $0 + 20 | 0;
     $$pre$phiZ2D = $127;
     break;
    }
   case 2:
   case 1:
    {
     $131 = $0 + 7062396 | 0;
     $132 = HEAP32[$131 >> 2] | 0;
     if (($132 | 0) > 0) {
      HEAP32[$131 >> 2] = $132 + -1;
      label = 48;
      break L47;
     }
     $137 = HEAP32[$0 + 7062408 >> 2] | 0;
     $139 = HEAP32[$1 + 12 >> 2] | 0;
     if (($111 | 0) == 1) $$0 = _arImageProcLumaHistAndCDFAndMedian($137, $139, $2) | 0; else $$0 = _arImageProcLumaHistAndOtsu($137, $139, $2) | 0;
     if (($$0 | 0) < 0) {
      $$4 = $$0;
      break L1;
     }
     $145 = $0 + 16 | 0;
     if ((HEAP32[$0 >> 2] | 0) == 1 ? ($148 = HEAPU8[$2 >> 0] | 0, (HEAP32[$145 >> 2] | 0) != ($148 | 0)) : 0) {
      HEAP32[$vararg_buffer9 >> 2] = (HEAP32[$7 >> 2] | 0) == 1 ? 24158 : 24165;
      HEAP32[$vararg_buffer9 + 4 >> 2] = $148;
      _arLog(0, 3, 24170, $vararg_buffer9);
     }
     HEAP32[$145 >> 2] = HEAPU8[$2 >> 0];
     HEAP32[$131 >> 2] = HEAP32[$0 + 7062392 >> 2];
     label = 48;
     break;
    }
   default:
    label = 48;
   } while (0);
   if ((label | 0) == 48) {
    $159 = $0 + 36 | 0;
    $161 = $0 + 40 | 0;
    $168 = $0 + 20 | 0;
    $170 = $0 + 4834144 | 0;
    if ((_arLabeling(HEAP32[$1 + 12 >> 2] | 0, HEAP32[$159 >> 2] | 0, HEAP32[$161 >> 2] | 0, HEAP32[$0 >> 2] | 0, HEAP32[$0 + 12 >> 2] | 0, HEAP32[$0 + 16 >> 2] | 0, HEAP32[$168 >> 2] | 0, $170, 0) | 0) < 0) {
     $$4 = -1;
     break;
    } else {
     $$pre$phi501Z2D = $159;
     $$pre$phi503Z2D = $161;
     $$pre$phi505Z2D = $168;
     $$pre$phiZ2D = $170;
    }
   }
   $176 = $0 + 15416 | 0;
   $177 = $0 + 15408 | 0;
   if ((_arDetectMarker2(HEAP32[$$pre$phi501Z2D >> 2] | 0, HEAP32[$$pre$phi503Z2D >> 2] | 0, $$pre$phiZ2D, HEAP32[$$pre$phi505Z2D >> 2] | 0, 1e6, 70, 1.0, $176, $177) | 0) < 0) {
    $$4 = -1;
    break;
   }
   if ((_arGetMarkerInfo(HEAP32[$1 >> 2] | 0, HEAP32[$$pre$phi501Z2D >> 2] | 0, HEAP32[$$pre$phi503Z2D >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0, $176, HEAP32[$177 >> 2] | 0, HEAP32[$0 + 7062384 >> 2] | 0, HEAP32[$$pre$phi505Z2D >> 2] | 0, HEAP32[$0 + 24 >> 2] | 0, (HEAP32[$0 + 32 >> 2] | 0) + 184 | 0, +HEAPF64[$0 + 7062416 >> 3], $0 + 48 | 0, $6, HEAP32[$0 + 7062424 >> 2] | 0) | 0) < 0) {
    $$4 = -1;
    break;
   }
  }
  $201 = $0 + 28 | 0;
  if ((HEAP32[$201 >> 2] | 0) == 1) {
   _confidenceCutoff($0);
   $$4 = 0;
   break;
  }
  $204 = $0 + 4818296 | 0;
  $205 = HEAP32[$204 >> 2] | 0;
  $206 = $0 + 24 | 0;
  $$1448 = 0;
  while (1) {
   if (($$1448 | 0) >= ($205 | 0)) break;
   $208 = HEAP32[$6 >> 2] | 0;
   $209 = $0 + 4818304 + ($$1448 * 264 | 0) | 0;
   $210 = $0 + 4818304 + ($$1448 * 264 | 0) + 56 | 0;
   $211 = $0 + 4818304 + ($$1448 * 264 | 0) + 64 | 0;
   $$0442 = 0;
   $$0456 = -1;
   $$0464 = .5;
   while (1) {
    if (($$0442 | 0) >= ($208 | 0)) break;
    $217 = +(HEAP32[$0 + 48 + ($$0442 << 8) >> 2] | 0);
    $218 = +(HEAP32[$209 >> 2] | 0) / $217;
    if (!($218 < .7 | $218 > 1.43) ? ($224 = +HEAPF64[$0 + 48 + ($$0442 << 8) + 56 >> 3] - +HEAPF64[$210 >> 3], $229 = +HEAPF64[$0 + 48 + ($$0442 << 8) + 64 >> 3] - +HEAPF64[$211 >> 3], $232 = ($224 * $224 + $229 * $229) / $217, $232 < $$0464) : 0) {
     $$1457 = $$0442;
     $$1465 = $232;
    } else {
     $$1457 = $$0456;
     $$1465 = $$0464;
    }
    $$0442 = $$0442 + 1 | 0;
    $$0456 = $$1457;
    $$0464 = $$1465;
   }
   L85 : do if (($$0456 | 0) > -1) {
    $236 = HEAP32[$206 >> 2] | 0;
    switch ($236 | 0) {
    case 2:
    case 1:
    case 0:
     break;
    case 4:
    case 3:
     {
      $276 = $0 + 48 + ($$0456 << 8) + 40 | 0;
      $279 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 40 >> 3];
      if (!(+HEAPF64[$276 >> 3] < $279)) {
       $281 = $0 + 48 + ($$0456 << 8) + 48 | 0;
       $284 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 48 >> 3];
       if (+HEAPF64[$281 >> 3] < $284) {
        $$pre$phi495Z2D = $281;
        $289 = $284;
       } else break L85;
      } else {
       $$pre$phi495Z2D = $0 + 48 + ($$0456 << 8) + 48 | 0;
       $289 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 48 >> 3];
      }
      HEAPF64[$276 >> 3] = $279;
      HEAP32[$0 + 48 + ($$0456 << 8) + 8 >> 2] = HEAP32[$0 + 4818304 + ($$1448 * 264 | 0) + 8 >> 2];
      HEAPF64[$$pre$phi495Z2D >> 3] = $289;
      HEAP32[$0 + 48 + ($$0456 << 8) + 12 >> 2] = HEAP32[$0 + 4818304 + ($$1448 * 264 | 0) + 12 >> 2];
      $$2444 = 0;
      $$2454 = -1;
      $$2460 = 1.0e8;
      while (1) {
       if (($$2444 | 0) == 4) break;
       $$1441 = 0;
       $$1463 = 0.0;
       while (1) {
        if (($$1441 | 0) == 4) break;
        $296 = $$1441 + $$2444 & 3;
        $299 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 168 + ($$1441 << 4) >> 3] - +HEAPF64[$0 + 48 + ($$0456 << 8) + 168 + ($296 << 4) >> 3];
        $305 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 168 + ($$1441 << 4) + 8 >> 3] - +HEAPF64[$0 + 48 + ($$0456 << 8) + 168 + ($296 << 4) + 8 >> 3];
        $$1441 = $$1441 + 1 | 0;
        $$1463 = $$1463 + ($299 * $299 + $305 * $305);
       }
       $310 = $$1463 < $$2460;
       $$3455 = $310 ? $$2444 : $$2454;
       $$2444 = $$2444 + 1 | 0;
       $$2454 = $$3455;
       $$2460 = $310 ? $$1463 : $$2460;
      }
      $314 = 4 - $$2454 | 0;
      HEAP32[$0 + 48 + ($$0456 << 8) + 20 >> 2] = ($314 + (HEAP32[$0 + 4818304 + ($$1448 * 264 | 0) + 20 >> 2] | 0) | 0) % 4 | 0;
      HEAP32[$0 + 48 + ($$0456 << 8) + 24 >> 2] = ($314 + (HEAP32[$0 + 4818304 + ($$1448 * 264 | 0) + 24 >> 2] | 0) | 0) % 4 | 0;
      break L85;
      break;
     }
    default:
     {
      $$4 = -1;
      break L1;
     }
    }
    $237 = $0 + 48 + ($$0456 << 8) + 32 | 0;
    $240 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 32 >> 3];
    if (+HEAPF64[$237 >> 3] < $240) {
     HEAPF64[$237 >> 3] = $240;
     $243 = HEAP32[$0 + 4818304 + ($$1448 * 264 | 0) + 4 >> 2] | 0;
     HEAP32[$0 + 48 + ($$0456 << 8) + 4 >> 2] = $243;
     $245 = $0 + 4818304 + ($$1448 * 264 | 0) + 16 | 0;
     $$0452 = -1;
     $$0458 = 1.0e8;
     $$1443 = 0;
     while (1) {
      if (($$1443 | 0) == 4) break;
      $$0440 = 0;
      $$0462 = 0.0;
      while (1) {
       if (($$0440 | 0) == 4) break;
       $249 = $$0440 + $$1443 & 3;
       $252 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 168 + ($$0440 << 4) >> 3] - +HEAPF64[$0 + 48 + ($$0456 << 8) + 168 + ($249 << 4) >> 3];
       $258 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 168 + ($$0440 << 4) + 8 >> 3] - +HEAPF64[$0 + 48 + ($$0456 << 8) + 168 + ($249 << 4) + 8 >> 3];
       $$0440 = $$0440 + 1 | 0;
       $$0462 = $$0462 + ($252 * $252 + $258 * $258);
      }
      if ($$0462 < $$0458) {
       $$1453 = (4 - $$1443 + (HEAP32[$245 >> 2] | 0) | 0) % 4 | 0;
       $$1459 = $$0462;
      } else {
       $$1453 = $$0452;
       $$1459 = $$0458;
      }
      $$0452 = $$1453;
      $$0458 = $$1459;
      $$1443 = $$1443 + 1 | 0;
     }
     HEAP32[$0 + 48 + ($$0456 << 8) + 16 >> 2] = $$0452;
     if ($236 >>> 0 < 2) {
      HEAP32[$0 + 48 + ($$0456 << 8) + 8 >> 2] = $243;
      HEAPF64[$0 + 48 + ($$0456 << 8) + 40 >> 3] = $240;
      HEAP32[$0 + 48 + ($$0456 << 8) + 20 >> 2] = $$0452;
      break;
     } else {
      HEAP32[$0 + 48 + ($$0456 << 8) + 12 >> 2] = $243;
      HEAPF64[$0 + 48 + ($$0456 << 8) + 48 >> 3] = $240;
      HEAP32[$0 + 48 + ($$0456 << 8) + 24 >> 2] = $$0452;
      break;
     }
    }
   } while (0);
   $$1448 = $$1448 + 1 | 0;
  }
  _confidenceCutoff($0);
  $$2449 = 0;
  $$3445 = 0;
  while (1) {
   if (($$2449 | 0) >= (HEAP32[$204 >> 2] | 0)) break;
   $326 = $0 + 4818304 + ($$2449 * 264 | 0) + 256 | 0;
   $327 = HEAP32[$326 >> 2] | 0;
   HEAP32[$326 >> 2] = $327 + 1;
   if (($327 | 0) < 3) {
    if (($$2449 | 0) != ($$3445 | 0)) _memcpy($0 + 4818304 + ($$3445 * 264 | 0) | 0, $0 + 4818304 + ($$2449 * 264 | 0) | 0, 264) | 0;
    $$4446 = $$3445 + 1 | 0;
   } else $$4446 = $$3445;
   $$2449 = $$2449 + 1 | 0;
   $$3445 = $$4446;
  }
  HEAP32[$204 >> 2] = $$3445;
  $$pre487 = HEAP32[$6 >> 2] | 0;
  $$3450 = 0;
  $341 = $$3445;
  while (1) {
   if (($$3450 | 0) >= ($$pre487 | 0)) break;
   $336 = $0 + 48 + ($$3450 << 8) | 0;
   $338 = HEAP32[$0 + 48 + ($$3450 << 8) + 4 >> 2] | 0;
   if (($338 | 0) < 0) $388 = $341; else {
    $$5 = 0;
    while (1) {
     if (($$5 | 0) >= ($341 | 0)) break;
     if ((HEAP32[$0 + 4818304 + ($$5 * 264 | 0) + 4 >> 2] | 0) == ($338 | 0)) break;
     $$5 = $$5 + 1 | 0;
    }
    if (($$5 | 0) == ($341 | 0)) {
     if (($341 | 0) == 60) break;
     $348 = $341 + 1 | 0;
     HEAP32[$204 >> 2] = $348;
     $389 = $348;
    } else $389 = $341;
    _memcpy($0 + 4818304 + ($$5 * 264 | 0) | 0, $336 | 0, 256) | 0;
    HEAP32[$0 + 4818304 + ($$5 * 264 | 0) + 256 >> 2] = 1;
    $388 = $389;
   }
   $$3450 = $$3450 + 1 | 0;
   $341 = $388;
  }
  if ((HEAP32[$201 >> 2] | 0) == 2) $$4 = 0; else {
   $$4451 = 0;
   $355 = $341;
   $360 = $$pre487;
   while (1) {
    if (($$4451 | 0) >= ($355 | 0)) {
     $$4 = 0;
     break L1;
    }
    $356 = $0 + 4818304 + ($$4451 * 264 | 0) | 0;
    $357 = $0 + 4818304 + ($$4451 * 264 | 0) + 56 | 0;
    $358 = $0 + 4818304 + ($$4451 * 264 | 0) + 64 | 0;
    $$6 = 0;
    while (1) {
     if (($$6 | 0) >= ($360 | 0)) break;
     $365 = +(HEAP32[$0 + 48 + ($$6 << 8) >> 2] | 0);
     $366 = +(HEAP32[$356 >> 2] | 0) / $365;
     if (!($366 < .7 | $366 > 1.43) ? ($372 = +HEAPF64[$0 + 48 + ($$6 << 8) + 56 >> 3] - +HEAPF64[$357 >> 3], $377 = +HEAPF64[$0 + 48 + ($$6 << 8) + 64 >> 3] - +HEAPF64[$358 >> 3], ($372 * $372 + $377 * $377) / $365 < .5) : 0) break;
     $$6 = $$6 + 1 | 0;
    }
    if (($$6 | 0) == ($360 | 0)) {
     _memcpy($0 + 48 + ($360 << 8) | 0, $0 + 4818304 + ($$4451 * 264 | 0) | 0, 256) | 0;
     $386 = $360 + 1 | 0;
     HEAP32[$6 >> 2] = $386;
     $$pre488 = HEAP32[$204 >> 2] | 0;
     $390 = $386;
    } else {
     $$pre488 = $355;
     $390 = $360;
    }
    $$4451 = $$4451 + 1 | 0;
    $355 = $$pre488;
    $360 = $390;
   }
  }
 } else $$4 = -1; while (0);
 STACKTOP = sp;
 return $$4 | 0;
}

function _printf_core($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0231 = 0, $$0232336 = 0, $$0234 = 0, $$0237 = 0, $$0239 = 0, $$0242315 = 0, $$0242315373 = 0, $$0242335 = 0, $$0245 = 0, $$0245$ph = 0, $$0245$ph$be = 0, $$0249 = 0, $$0249$ph = 0, $$0251$lcssa = 0, $$0251323 = 0, $$0254 = 0, $$0255 = 0, $$0256 = 0, $$0261 = 0, $$0264$lcssa = 0, $$0264330 = 0, $$0271$ph = 0, $$1 = 0, $$1233342 = 0, $$1235 = 0, $$1238 = 0, $$1240 = 0, $$1243341 = 0, $$1250 = 0, $$1257 = 0, $$1262 = 0, $$1265 = 0, $$1272 = 0, $$2236 = 0, $$2241 = 0, $$2244322 = 0, $$2258 = 0, $$2263 = 0, $$2273 = 0, $$3267 = 0, $$3274 = 0, $$3319 = 0, $$4260372 = 0, $$4268 = 0, $$5 = 0, $$6270 = 0, $$lcssa310 = 0, $$pre$phiZ2D = 0, $$pre362 = 0, $$pre365 = 0, $$sink = 0, $10 = 0, $104 = 0, $105 = 0, $108 = 0, $11 = 0, $111 = 0, $114 = 0, $116 = 0, $12 = 0, $124 = 0, $128 = 0, $13 = 0, $139 = 0, $14 = 0, $143 = 0, $15 = 0, $150 = 0, $151 = 0, $153 = 0, $154 = 0, $156 = 0, $16 = 0, $165 = 0, $166 = 0, $171 = 0, $174 = 0, $179 = 0, $180 = 0, $185 = 0, $187 = 0, $194 = 0, $195 = 0, $20 = 0, $206 = 0, $218 = 0, $22 = 0, $225 = 0, $23 = 0, $232 = 0, $233 = 0, $246 = 0, $25 = 0, $252 = 0, $256 = 0, $26 = 0, $260 = 0, $262 = 0, $265 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $279 = 0, $280 = 0, $284 = 0, $29 = 0, $292 = 0, $298 = 0, $307 = 0, $309 = 0, $310 = 0, $311 = 0, $32 = 0, $324 = 0, $326 = 0, $327 = 0, $331 = 0, $335 = 0, $337 = 0, $348 = 0, $350 = 0, $357 = 0, $360 = 0, $367 = 0, $368 = 0, $45 = 0, $53 = 0, $54 = 0, $56 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $78 = 0, $8 = 0, $82 = 0, $9 = 0, $or$cond = 0, $or$cond280 = 0, $spec$select = 0, $spec$select286 = 0, $storemerge275$lcssa = 0, $storemerge275329 = 0, $storemerge276 = 0, label = 0, sp = 0, $156$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $7 = sp + 56 | 0;
 $8 = sp + 40 | 0;
 $9 = sp;
 $10 = sp + 48 | 0;
 $11 = sp + 60 | 0;
 HEAP32[$7 >> 2] = $1;
 $12 = ($0 | 0) != 0;
 $13 = $9 + 40 | 0;
 $14 = $13;
 $15 = $9 + 39 | 0;
 $16 = $10 + 4 | 0;
 $$0245$ph = 0;
 $$0249$ph = 0;
 $$0271$ph = 0;
 L1 : while (1) {
  $$0245 = $$0245$ph;
  $$0249 = $$0249$ph;
  while (1) {
   do if (($$0249 | 0) > -1) if (($$0245 | 0) > (2147483647 - $$0249 | 0)) {
    $20 = ___errno_location() | 0;
    HEAP32[$20 >> 2] = 61;
    $$1250 = -1;
    break;
   } else {
    $$1250 = $$0245 + $$0249 | 0;
    break;
   } else $$1250 = $$0249; while (0);
   $22 = HEAP32[$7 >> 2] | 0;
   $23 = HEAP8[$22 >> 0] | 0;
   if (!($23 << 24 >> 24)) {
    label = 92;
    break L1;
   }
   $25 = $23;
   $27 = $22;
   L12 : while (1) {
    switch ($25 << 24 >> 24) {
    case 37:
     {
      label = 10;
      break L12;
      break;
     }
    case 0:
     {
      $$0251$lcssa = $27;
      break L12;
      break;
     }
    default:
     {}
    }
    $26 = $27 + 1 | 0;
    HEAP32[$7 >> 2] = $26;
    $25 = HEAP8[$26 >> 0] | 0;
    $27 = $26;
   }
   L15 : do if ((label | 0) == 10) {
    label = 0;
    $$0251323 = $27;
    $29 = $27;
    while (1) {
     if ((HEAP8[$29 + 1 >> 0] | 0) != 37) {
      $$0251$lcssa = $$0251323;
      break L15;
     }
     $32 = $$0251323 + 1 | 0;
     $29 = $29 + 2 | 0;
     HEAP32[$7 >> 2] = $29;
     if ((HEAP8[$29 >> 0] | 0) != 37) {
      $$0251$lcssa = $32;
      break;
     } else $$0251323 = $32;
    }
   } while (0);
   $$0245 = $$0251$lcssa - $22 | 0;
   if ($12) _out($0, $22, $$0245);
   if (!$$0245) break; else $$0249 = $$1250;
  }
  $45 = (_isdigit(HEAP8[(HEAP32[$7 >> 2] | 0) + 1 >> 0] | 0) | 0) == 0;
  $$pre362 = HEAP32[$7 >> 2] | 0;
  if (!$45 ? (HEAP8[$$pre362 + 2 >> 0] | 0) == 36 : 0) {
   $$0255 = (HEAP8[$$pre362 + 1 >> 0] | 0) + -48 | 0;
   $$1272 = 1;
   $$sink = 3;
  } else {
   $$0255 = -1;
   $$1272 = $$0271$ph;
   $$sink = 1;
  }
  $53 = $$pre362 + $$sink | 0;
  HEAP32[$7 >> 2] = $53;
  $54 = HEAP8[$53 >> 0] | 0;
  $56 = ($54 << 24 >> 24) + -32 | 0;
  if ($56 >>> 0 > 31 | (1 << $56 & 75913 | 0) == 0) {
   $$0264$lcssa = 0;
   $$lcssa310 = $54;
   $storemerge275$lcssa = $53;
  } else {
   $$0264330 = 0;
   $62 = $56;
   $storemerge275329 = $53;
   while (1) {
    $63 = 1 << $62 | $$0264330;
    $64 = $storemerge275329 + 1 | 0;
    HEAP32[$7 >> 2] = $64;
    $65 = HEAP8[$64 >> 0] | 0;
    $62 = ($65 << 24 >> 24) + -32 | 0;
    if ($62 >>> 0 > 31 | (1 << $62 & 75913 | 0) == 0) {
     $$0264$lcssa = $63;
     $$lcssa310 = $65;
     $storemerge275$lcssa = $64;
     break;
    } else {
     $$0264330 = $63;
     $storemerge275329 = $64;
    }
   }
  }
  if ($$lcssa310 << 24 >> 24 == 42) {
   if ((_isdigit(HEAP8[$storemerge275$lcssa + 1 >> 0] | 0) | 0) != 0 ? ($78 = HEAP32[$7 >> 2] | 0, (HEAP8[$78 + 2 >> 0] | 0) == 36) : 0) {
    $82 = $78 + 1 | 0;
    HEAP32[$4 + ((HEAP8[$82 >> 0] | 0) + -48 << 2) >> 2] = 10;
    $$0261 = HEAP32[$3 + ((HEAP8[$82 >> 0] | 0) + -48 << 3) >> 2] | 0;
    $$2273 = 1;
    $storemerge276 = $78 + 3 | 0;
   } else {
    if ($$1272 | 0) {
     $$0 = -1;
     break;
    }
    if ($12) {
     $104 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $105 = HEAP32[$104 >> 2] | 0;
     HEAP32[$2 >> 2] = $104 + 4;
     $367 = $105;
    } else $367 = 0;
    $$0261 = $367;
    $$2273 = 0;
    $storemerge276 = (HEAP32[$7 >> 2] | 0) + 1 | 0;
   }
   HEAP32[$7 >> 2] = $storemerge276;
   $108 = ($$0261 | 0) < 0;
   $$1262 = $108 ? 0 - $$0261 | 0 : $$0261;
   $$1265 = $108 ? $$0264$lcssa | 8192 : $$0264$lcssa;
   $$3274 = $$2273;
   $114 = $storemerge276;
  } else {
   $111 = _getint($7) | 0;
   if (($111 | 0) < 0) {
    $$0 = -1;
    break;
   }
   $$1262 = $111;
   $$1265 = $$0264$lcssa;
   $$3274 = $$1272;
   $114 = HEAP32[$7 >> 2] | 0;
  }
  do if ((HEAP8[$114 >> 0] | 0) == 46) {
   $116 = $114 + 1 | 0;
   if ((HEAP8[$116 >> 0] | 0) != 42) {
    HEAP32[$7 >> 2] = $116;
    $154 = _getint($7) | 0;
    $$0256 = $154;
    $$pre365 = HEAP32[$7 >> 2] | 0;
    break;
   }
   if (_isdigit(HEAP8[$114 + 2 >> 0] | 0) | 0 ? ($124 = HEAP32[$7 >> 2] | 0, (HEAP8[$124 + 3 >> 0] | 0) == 36) : 0) {
    $128 = $124 + 2 | 0;
    HEAP32[$4 + ((HEAP8[$128 >> 0] | 0) + -48 << 2) >> 2] = 10;
    $139 = HEAP32[$3 + ((HEAP8[$128 >> 0] | 0) + -48 << 3) >> 2] | 0;
    $143 = $124 + 4 | 0;
    HEAP32[$7 >> 2] = $143;
    $$0256 = $139;
    $$pre365 = $143;
    break;
   }
   if ($$3274 | 0) {
    $$0 = -1;
    break L1;
   }
   if ($12) {
    $150 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    $151 = HEAP32[$150 >> 2] | 0;
    HEAP32[$2 >> 2] = $150 + 4;
    $368 = $151;
   } else $368 = 0;
   $153 = (HEAP32[$7 >> 2] | 0) + 2 | 0;
   HEAP32[$7 >> 2] = $153;
   $$0256 = $368;
   $$pre365 = $153;
  } else {
   $$0256 = -1;
   $$pre365 = $114;
  } while (0);
  $$0254 = 0;
  $156 = $$pre365;
  while (1) {
   if (((HEAP8[$156 >> 0] | 0) + -65 | 0) >>> 0 > 57) {
    $$0 = -1;
    break L1;
   }
   $156$looptemp = $156;
   $156 = $156 + 1 | 0;
   HEAP32[$7 >> 2] = $156;
   $165 = HEAP8[(HEAP8[$156$looptemp >> 0] | 0) + -65 + (6208 + ($$0254 * 58 | 0)) >> 0] | 0;
   $166 = $165 & 255;
   if (($166 + -1 | 0) >>> 0 >= 8) break; else $$0254 = $166;
  }
  if (!($165 << 24 >> 24)) {
   $$0 = -1;
   break;
  }
  $171 = ($$0255 | 0) > -1;
  do if ($165 << 24 >> 24 == 19) if ($171) {
   $$0 = -1;
   break L1;
  } else label = 54; else {
   if ($171) {
    HEAP32[$4 + ($$0255 << 2) >> 2] = $166;
    $174 = $3 + ($$0255 << 3) | 0;
    $179 = HEAP32[$174 + 4 >> 2] | 0;
    $180 = $8;
    HEAP32[$180 >> 2] = HEAP32[$174 >> 2];
    HEAP32[$180 + 4 >> 2] = $179;
    label = 54;
    break;
   }
   if (!$12) {
    $$0 = 0;
    break L1;
   }
   _pop_arg($8, $166, $2, $6);
   $185 = HEAP32[$7 >> 2] | 0;
   label = 55;
  } while (0);
  if ((label | 0) == 54) {
   label = 0;
   if ($12) {
    $185 = $156;
    label = 55;
   } else $$0245$ph$be = 0;
  }
  L77 : do if ((label | 0) == 55) {
   label = 0;
   $187 = HEAP8[$185 + -1 >> 0] | 0;
   $$0237 = ($$0254 | 0) != 0 & ($187 & 15 | 0) == 3 ? $187 & -33 : $187;
   $194 = $$1265 & -65537;
   $spec$select = ($$1265 & 8192 | 0) == 0 ? $$1265 : $194;
   L79 : do switch ($$0237 | 0) {
   case 110:
    {
     switch (($$0254 & 255) << 24 >> 24) {
     case 0:
      {
       HEAP32[HEAP32[$8 >> 2] >> 2] = $$1250;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
     case 1:
      {
       HEAP32[HEAP32[$8 >> 2] >> 2] = $$1250;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
     case 2:
      {
       $206 = HEAP32[$8 >> 2] | 0;
       HEAP32[$206 >> 2] = $$1250;
       HEAP32[$206 + 4 >> 2] = (($$1250 | 0) < 0) << 31 >> 31;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
     case 3:
      {
       HEAP16[HEAP32[$8 >> 2] >> 1] = $$1250;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
     case 4:
      {
       HEAP8[HEAP32[$8 >> 2] >> 0] = $$1250;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
     case 6:
      {
       HEAP32[HEAP32[$8 >> 2] >> 2] = $$1250;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
     case 7:
      {
       $218 = HEAP32[$8 >> 2] | 0;
       HEAP32[$218 >> 2] = $$1250;
       HEAP32[$218 + 4 >> 2] = (($$1250 | 0) < 0) << 31 >> 31;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
     default:
      {
       $$0245$ph$be = 0;
       break L77;
      }
     }
     break;
    }
   case 112:
    {
     $$1238 = 120;
     $$1257 = $$0256 >>> 0 > 8 ? $$0256 : 8;
     $$3267 = $spec$select | 8;
     label = 67;
     break;
    }
   case 88:
   case 120:
    {
     $$1238 = $$0237;
     $$1257 = $$0256;
     $$3267 = $spec$select;
     label = 67;
     break;
    }
   case 111:
    {
     $246 = $8;
     $252 = _fmt_o(HEAP32[$246 >> 2] | 0, HEAP32[$246 + 4 >> 2] | 0, $13) | 0;
     $256 = $14 - $252 | 0;
     $$0231 = $252;
     $$1235 = 0;
     $$1240 = 50740;
     $$2258 = ($spec$select & 8 | 0) == 0 | ($$0256 | 0) > ($256 | 0) ? $$0256 : $256 + 1 | 0;
     $$4268 = $spec$select;
     label = 73;
     break;
    }
   case 105:
   case 100:
    {
     $260 = $8;
     $262 = HEAP32[$260 >> 2] | 0;
     $265 = HEAP32[$260 + 4 >> 2] | 0;
     if (($265 | 0) < 0) {
      $267 = _i64Subtract(0, 0, $262 | 0, $265 | 0) | 0;
      $268 = getTempRet0() | 0;
      $269 = $8;
      HEAP32[$269 >> 2] = $267;
      HEAP32[$269 + 4 >> 2] = $268;
      $$0234 = 1;
      $$0239 = 50740;
      $279 = $267;
      $280 = $268;
      label = 72;
      break L79;
     } else {
      $$0234 = ($spec$select & 2049 | 0) != 0 & 1;
      $$0239 = ($spec$select & 2048 | 0) == 0 ? (($spec$select & 1 | 0) == 0 ? 50740 : 50742) : 50741;
      $279 = $262;
      $280 = $265;
      label = 72;
      break L79;
     }
     break;
    }
   case 117:
    {
     $195 = $8;
     $$0234 = 0;
     $$0239 = 50740;
     $279 = HEAP32[$195 >> 2] | 0;
     $280 = HEAP32[$195 + 4 >> 2] | 0;
     label = 72;
     break;
    }
   case 99:
    {
     HEAP8[$15 >> 0] = HEAP32[$8 >> 2];
     $$1 = $15;
     $$2236 = 0;
     $$2241 = 50740;
     $$5 = 1;
     $$6270 = $194;
     $$pre$phiZ2D = $14;
     break;
    }
   case 115:
    {
     $307 = HEAP32[$8 >> 2] | 0;
     $309 = ($307 | 0) == 0 ? 50750 : $307;
     $310 = _memchr($309, 0, $$0256) | 0;
     $311 = ($310 | 0) == 0;
     $$1 = $309;
     $$2236 = 0;
     $$2241 = 50740;
     $$5 = $311 ? $$0256 : $310 - $309 | 0;
     $$6270 = $194;
     $$pre$phiZ2D = $311 ? $309 + $$0256 | 0 : $310;
     break;
    }
   case 67:
    {
     HEAP32[$10 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$16 >> 2] = 0;
     HEAP32[$8 >> 2] = $10;
     $$4260372 = -1;
     label = 79;
     break;
    }
   case 83:
    {
     if (!$$0256) {
      _pad_667($0, 32, $$1262, 0, $spec$select);
      $$0242315373 = 0;
      label = 89;
     } else {
      $$4260372 = $$0256;
      label = 79;
     }
     break;
    }
   case 65:
   case 71:
   case 70:
   case 69:
   case 97:
   case 103:
   case 102:
   case 101:
    {
     $$0245$ph$be = FUNCTION_TABLE_iidiiii[$5 & 1]($0, +HEAPF64[$8 >> 3], $$1262, $$0256, $spec$select, $$0237) | 0;
     break L77;
     break;
    }
   default:
    {
     $$1 = $22;
     $$2236 = 0;
     $$2241 = 50740;
     $$5 = $$0256;
     $$6270 = $spec$select;
     $$pre$phiZ2D = $14;
    }
   } while (0);
   L102 : do if ((label | 0) == 67) {
    label = 0;
    $225 = $8;
    $232 = _fmt_x(HEAP32[$225 >> 2] | 0, HEAP32[$225 + 4 >> 2] | 0, $13, $$1238 & 32) | 0;
    $233 = $8;
    $or$cond280 = ($$3267 & 8 | 0) == 0 | (HEAP32[$233 >> 2] | 0) == 0 & (HEAP32[$233 + 4 >> 2] | 0) == 0;
    $$0231 = $232;
    $$1235 = $or$cond280 ? 0 : 2;
    $$1240 = $or$cond280 ? 50740 : 50740 + ($$1238 >>> 4) | 0;
    $$2258 = $$1257;
    $$4268 = $$3267;
    label = 73;
   } else if ((label | 0) == 72) {
    label = 0;
    $$0231 = _fmt_u($279, $280, $13) | 0;
    $$1235 = $$0234;
    $$1240 = $$0239;
    $$2258 = $$0256;
    $$4268 = $spec$select;
    label = 73;
   } else if ((label | 0) == 79) {
    label = 0;
    $$0232336 = HEAP32[$8 >> 2] | 0;
    $$0242335 = 0;
    while (1) {
     $324 = HEAP32[$$0232336 >> 2] | 0;
     if (!$324) {
      $$0242315 = $$0242335;
      break;
     }
     $326 = _wctomb($11, $324) | 0;
     $327 = ($326 | 0) < 0;
     if ($327 | $326 >>> 0 > ($$4260372 - $$0242335 | 0) >>> 0) {
      label = 83;
      break;
     }
     $331 = $326 + $$0242335 | 0;
     if ($$4260372 >>> 0 > $331 >>> 0) {
      $$0232336 = $$0232336 + 4 | 0;
      $$0242335 = $331;
     } else {
      $$0242315 = $331;
      break;
     }
    }
    if ((label | 0) == 83) {
     label = 0;
     if ($327) {
      $$0 = -1;
      break L1;
     } else $$0242315 = $$0242335;
    }
    _pad_667($0, 32, $$1262, $$0242315, $spec$select);
    if (!$$0242315) {
     $$0242315373 = 0;
     label = 89;
    } else {
     $$1233342 = HEAP32[$8 >> 2] | 0;
     $$1243341 = 0;
     while (1) {
      $335 = HEAP32[$$1233342 >> 2] | 0;
      if (!$335) {
       $$0242315373 = $$0242315;
       label = 89;
       break L102;
      }
      $337 = _wctomb($11, $335) | 0;
      $$1243341 = $337 + $$1243341 | 0;
      if (($$1243341 | 0) > ($$0242315 | 0)) {
       $$0242315373 = $$0242315;
       label = 89;
       break L102;
      }
      _out($0, $11, $337);
      if ($$1243341 >>> 0 >= $$0242315 >>> 0) {
       $$0242315373 = $$0242315;
       label = 89;
       break;
      } else $$1233342 = $$1233342 + 4 | 0;
     }
    }
   } while (0);
   if ((label | 0) == 73) {
    label = 0;
    $284 = $8;
    $292 = (HEAP32[$284 >> 2] | 0) != 0 | (HEAP32[$284 + 4 >> 2] | 0) != 0;
    $or$cond = ($$2258 | 0) != 0 | $292;
    $298 = $14 - $$0231 + (($292 ^ 1) & 1) | 0;
    $$1 = $or$cond ? $$0231 : $13;
    $$2236 = $$1235;
    $$2241 = $$1240;
    $$5 = $or$cond ? (($$2258 | 0) > ($298 | 0) ? $$2258 : $298) : 0;
    $$6270 = ($$2258 | 0) > -1 ? $$4268 & -65537 : $$4268;
    $$pre$phiZ2D = $14;
   } else if ((label | 0) == 89) {
    label = 0;
    _pad_667($0, 32, $$1262, $$0242315373, $spec$select ^ 8192);
    $$0245$ph$be = ($$1262 | 0) > ($$0242315373 | 0) ? $$1262 : $$0242315373;
    break;
   }
   $348 = $$pre$phiZ2D - $$1 | 0;
   $spec$select286 = ($$5 | 0) < ($348 | 0) ? $348 : $$5;
   $350 = $spec$select286 + $$2236 | 0;
   $$2263 = ($$1262 | 0) < ($350 | 0) ? $350 : $$1262;
   _pad_667($0, 32, $$2263, $350, $$6270);
   _out($0, $$2241, $$2236);
   _pad_667($0, 48, $$2263, $350, $$6270 ^ 65536);
   _pad_667($0, 48, $spec$select286, $348, 0);
   _out($0, $$1, $348);
   _pad_667($0, 32, $$2263, $350, $$6270 ^ 8192);
   $$0245$ph$be = $$2263;
  } while (0);
  $$0245$ph = $$0245$ph$be;
  $$0249$ph = $$1250;
  $$0271$ph = $$3274;
 }
 L123 : do if ((label | 0) == 92) if (!$0) if (!$$0271$ph) $$0 = 0; else {
  $$2244322 = 1;
  while (1) {
   $357 = HEAP32[$4 + ($$2244322 << 2) >> 2] | 0;
   if (!$357) break;
   _pop_arg($3 + ($$2244322 << 3) | 0, $357, $2, $6);
   $360 = $$2244322 + 1 | 0;
   if ($360 >>> 0 < 10) $$2244322 = $360; else {
    $$0 = 1;
    break L123;
   }
  }
  $$3319 = $$2244322;
  while (1) {
   if (HEAP32[$4 + ($$3319 << 2) >> 2] | 0) {
    $$0 = -1;
    break L123;
   }
   $$3319 = $$3319 + 1 | 0;
   if ($$3319 >>> 0 >= 10) {
    $$0 = 1;
    break;
   }
  }
 } else $$0 = $$1250; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseExprPrimaryEv($0) {
 $0 = $0 | 0;
 var $$1 = 0, $$2 = 0, $$3 = 0, $$byval_copy16 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $24 = 0, $3 = 0, $32 = 0, $36 = 0, $4 = 0, $40 = 0, $44 = 0, $48 = 0, $5 = 0, $52 = 0, $56 = 0, $6 = 0, $60 = 0, $64 = 0, $68 = 0, $7 = 0, $72 = 0, $76 = 0, $8 = 0, $80 = 0, $9 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(160);
 $$byval_copy16 = sp + 144 | 0;
 $1 = sp + 136 | 0;
 $2 = sp + 128 | 0;
 $3 = sp + 120 | 0;
 $4 = sp + 112 | 0;
 $5 = sp + 104 | 0;
 $6 = sp + 96 | 0;
 $7 = sp + 88 | 0;
 $8 = sp + 80 | 0;
 $9 = sp + 72 | 0;
 $10 = sp + 64 | 0;
 $11 = sp + 56 | 0;
 $12 = sp + 48 | 0;
 $13 = sp + 40 | 0;
 $14 = sp + 32 | 0;
 $15 = sp + 24 | 0;
 $16 = sp + 16 | 0;
 $17 = sp + 8 | 0;
 $18 = sp;
 L1 : do if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 76) | 0) do switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 | 0) {
 case 84:
  {
   $$3 = 0;
   break L1;
   break;
  }
 case 119:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $24 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($1, 52254);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($24, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 98:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 52262);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy16) | 0) {
    HEAP32[$$byval_copy16 >> 2] = 0;
    $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8BoolExprEJiEEEPNS0_4NodeEDpOT0_($0, $$byval_copy16) | 0;
    break L1;
   }
   __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 52266);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy16) | 0)) {
    $$3 = 0;
    break L1;
   }
   HEAP32[$$byval_copy16 >> 2] = 1;
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8BoolExprEJiEEEPNS0_4NodeEDpOT0_($0, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 99:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $32 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 57078);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($32, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 97:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $36 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 57083);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($36, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 104:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $40 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($6, 57095);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($40, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 115:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $44 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($7, 57109);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($44, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 116:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $48 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($8, 57115);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($48, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 105:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $52 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($9, 67447);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($52, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 106:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $56 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($10, 52270);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($56, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 108:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $60 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($11, 59195);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($60, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 109:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $64 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($12, 52272);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$12 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$12 + 4 >> 2];
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($64, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 120:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $68 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($13, 59186);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($68, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 121:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $72 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($14, 52275);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$14 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($72, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 110:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $76 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($15, 51460);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$15 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($76, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 111:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $80 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($16, 51469);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$16 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($80, $$byval_copy16) | 0;
   break L1;
   break;
  }
 case 102:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseFloatingLiteralIfEEPNS0_4NodeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   break L1;
   break;
  }
 case 100:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseFloatingLiteralIdEEPNS0_4NodeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   break L1;
   break;
  }
 case 101:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseFloatingLiteralIeEEPNS0_4NodeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   break L1;
   break;
  }
 case 95:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($17, 51394);
   HEAP32[$$byval_copy16 >> 2] = HEAP32[$17 >> 2];
   HEAP32[$$byval_copy16 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
   if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy16) | 0)) {
    $$3 = 0;
    break L1;
   }
   $96 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   if ($96 | 0 ? __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0 : 0) {
    $$3 = $96;
    break L1;
   }
   $$3 = 0;
   break L1;
   break;
  }
 default:
  {
   $100 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$$byval_copy16 >> 2] = $100;
   if (!$100) $$2 = 0; else {
    __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($18, $0, 0);
    $102 = __ZNK12_GLOBAL__N_110StringView5emptyEv($18) | 0;
    $103 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0;
    if (!$102) if ($103) $$1 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15IntegerCastExprEJRPNS0_4NodeERNS_10StringViewEEEES9_DpOT0_($0, $$byval_copy16, $18) | 0; else $$1 = 0; else $$1 = $103 ? $100 : 0;
    $$2 = $$1;
   }
   $$3 = $$2;
   break L1;
  }
 } while (0); else $$3 = 0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN6vision20SamplePyramidFREAK84EPfPKNS_25GaussianScaleSpacePyramidERKNS_12FeaturePointEPKfS8_S8_S8_S8_S8_ffffffff($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = +$9;
 $10 = +$10;
 $11 = +$11;
 $12 = +$12;
 $13 = +$13;
 $14 = +$14;
 $15 = +$15;
 $16 = +$16;
 var $$0 = 0.0, $111 = 0.0, $117 = 0.0, $124 = 0.0, $131 = 0.0, $138 = 0.0, $145 = 0.0, $152 = 0.0, $159 = 0.0, $166 = 0.0, $17 = 0, $173 = 0.0, $18 = 0, $180 = 0.0, $187 = 0.0, $19 = 0, $194 = 0.0, $20 = 0, $201 = 0.0, $208 = 0.0, $21 = 0, $215 = 0.0, $22 = 0, $222 = 0.0, $229 = 0.0, $23 = 0, $236 = 0.0, $24 = 0, $243 = 0.0, $25 = 0, $250 = 0.0, $257 = 0.0, $264 = 0.0, $271 = 0.0, $278 = 0.0, $28 = 0.0, $285 = 0.0, $292 = 0.0, $299 = 0.0, $306 = 0.0, $313 = 0.0, $320 = 0.0, $327 = 0.0, $334 = 0.0, $341 = 0.0, $348 = 0.0, $355 = 0.0, $359 = 0.0, $36 = 0.0, $38 = 0.0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $61 = 0, $63 = 0, $65 = 0, $67 = 0, $69 = 0, $71 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $81 = 0, $83 = 0, $85 = 0, $87 = 0, $89 = 0, $91 = 0, $93 = 0, $95 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 $17 = sp + 288 | 0;
 $18 = sp + 240 | 0;
 $19 = sp + 192 | 0;
 $20 = sp + 144 | 0;
 $21 = sp + 96 | 0;
 $22 = sp + 48 | 0;
 $23 = sp;
 $24 = sp + 328 | 0;
 $25 = sp + 324 | 0;
 $28 = +HEAPF32[$2 + 12 >> 2] * $16;
 $$0 = $28 < 1.0 ? 1.0 : $28;
 __ZN6vision10SimilarityIfEEvPT_S1_S1_S1_S1_($17, +HEAPF32[$2 >> 2], +HEAPF32[$2 + 4 >> 2], +HEAPF32[$2 + 8 >> 2], $$0);
 $36 = +HEAPF32[$17 + 8 >> 2];
 $38 = +HEAPF32[$17 + 20 >> 2];
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($18, $17, $3);
 $39 = $18 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($39, $17, $3 + 8 | 0);
 $41 = $18 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($41, $17, $3 + 16 | 0);
 $43 = $18 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($43, $17, $3 + 24 | 0);
 $45 = $18 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($45, $17, $3 + 32 | 0);
 $47 = $18 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($47, $17, $3 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($19, $17, $4);
 $49 = $19 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($49, $17, $4 + 8 | 0);
 $51 = $19 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($51, $17, $4 + 16 | 0);
 $53 = $19 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($53, $17, $4 + 24 | 0);
 $55 = $19 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($55, $17, $4 + 32 | 0);
 $57 = $19 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($57, $17, $4 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($20, $17, $5);
 $59 = $20 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($59, $17, $5 + 8 | 0);
 $61 = $20 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($61, $17, $5 + 16 | 0);
 $63 = $20 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($63, $17, $5 + 24 | 0);
 $65 = $20 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($65, $17, $5 + 32 | 0);
 $67 = $20 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($67, $17, $5 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($21, $17, $6);
 $69 = $21 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($69, $17, $6 + 8 | 0);
 $71 = $21 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($71, $17, $6 + 16 | 0);
 $73 = $21 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($73, $17, $6 + 24 | 0);
 $75 = $21 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($75, $17, $6 + 32 | 0);
 $77 = $21 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($77, $17, $6 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($22, $17, $7);
 $79 = $22 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($79, $17, $7 + 8 | 0);
 $81 = $22 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($81, $17, $7 + 16 | 0);
 $83 = $22 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($83, $17, $7 + 24 | 0);
 $85 = $22 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($85, $17, $7 + 32 | 0);
 $87 = $22 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($87, $17, $7 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($23, $17, $8);
 $89 = $23 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($89, $17, $8 + 8 | 0);
 $91 = $23 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($91, $17, $8 + 16 | 0);
 $93 = $23 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($93, $17, $8 + 24 | 0);
 $95 = $23 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($95, $17, $8 + 32 | 0);
 $97 = $23 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($97, $17, $8 + 40 | 0);
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($1, $24, $25, $$0 * $15);
 $111 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$23 >> 2], +HEAPF32[$23 + 4 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 >> 2] = $111;
 $117 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$89 >> 2], +HEAPF32[$23 + 12 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 4 >> 2] = $117;
 $124 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$91 >> 2], +HEAPF32[$23 + 20 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 8 >> 2] = $124;
 $131 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$93 >> 2], +HEAPF32[$23 + 28 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 12 >> 2] = $131;
 $138 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$95 >> 2], +HEAPF32[$23 + 36 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 16 >> 2] = $138;
 $145 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$97 >> 2], +HEAPF32[$23 + 44 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 20 >> 2] = $145;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($1, $24, $25, $$0 * $14);
 $152 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$22 >> 2], +HEAPF32[$22 + 4 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 24 >> 2] = $152;
 $159 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$79 >> 2], +HEAPF32[$22 + 12 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 28 >> 2] = $159;
 $166 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$81 >> 2], +HEAPF32[$22 + 20 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 32 >> 2] = $166;
 $173 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$83 >> 2], +HEAPF32[$22 + 28 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 36 >> 2] = $173;
 $180 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$85 >> 2], +HEAPF32[$22 + 36 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 40 >> 2] = $180;
 $187 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$87 >> 2], +HEAPF32[$22 + 44 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 44 >> 2] = $187;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($1, $24, $25, $$0 * $13);
 $194 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$21 >> 2], +HEAPF32[$21 + 4 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 48 >> 2] = $194;
 $201 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$69 >> 2], +HEAPF32[$21 + 12 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 52 >> 2] = $201;
 $208 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$71 >> 2], +HEAPF32[$21 + 20 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 56 >> 2] = $208;
 $215 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$73 >> 2], +HEAPF32[$21 + 28 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 60 >> 2] = $215;
 $222 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$75 >> 2], +HEAPF32[$21 + 36 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 64 >> 2] = $222;
 $229 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$77 >> 2], +HEAPF32[$21 + 44 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 68 >> 2] = $229;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($1, $24, $25, $$0 * $12);
 $236 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$20 >> 2], +HEAPF32[$20 + 4 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 72 >> 2] = $236;
 $243 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$59 >> 2], +HEAPF32[$20 + 12 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 76 >> 2] = $243;
 $250 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$61 >> 2], +HEAPF32[$20 + 20 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 80 >> 2] = $250;
 $257 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$63 >> 2], +HEAPF32[$20 + 28 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 84 >> 2] = $257;
 $264 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$65 >> 2], +HEAPF32[$20 + 36 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 88 >> 2] = $264;
 $271 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$67 >> 2], +HEAPF32[$20 + 44 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 92 >> 2] = $271;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($1, $24, $25, $$0 * $11);
 $278 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$19 >> 2], +HEAPF32[$19 + 4 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 96 >> 2] = $278;
 $285 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$49 >> 2], +HEAPF32[$19 + 12 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 100 >> 2] = $285;
 $292 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$51 >> 2], +HEAPF32[$19 + 20 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 104 >> 2] = $292;
 $299 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$53 >> 2], +HEAPF32[$19 + 28 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 108 >> 2] = $299;
 $306 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$55 >> 2], +HEAPF32[$19 + 36 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 112 >> 2] = $306;
 $313 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$57 >> 2], +HEAPF32[$19 + 44 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 116 >> 2] = $313;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($1, $24, $25, $$0 * $10);
 $320 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$18 >> 2], +HEAPF32[$18 + 4 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 120 >> 2] = $320;
 $327 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$39 >> 2], +HEAPF32[$18 + 12 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 124 >> 2] = $327;
 $334 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$41 >> 2], +HEAPF32[$18 + 20 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 128 >> 2] = $334;
 $341 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$43 >> 2], +HEAPF32[$18 + 28 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 132 >> 2] = $341;
 $348 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$45 >> 2], +HEAPF32[$18 + 36 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 136 >> 2] = $348;
 $355 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$47 >> 2], +HEAPF32[$18 + 44 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 140 >> 2] = $355;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($1, $24, $25, $$0 * $9);
 $359 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, $36, $38, HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 144 >> 2] = $359;
 STACKTOP = sp;
 return 1;
}

function _ar2TrackingMod($ar2Handle, $surfaceSet, $dataPtr, $trans, $err) {
 $ar2Handle = $ar2Handle | 0;
 $surfaceSet = $surfaceSet | 0;
 $dataPtr = $dataPtr | 0;
 $trans = $trans | 0;
 $err = $err | 0;
 var $27 = 0, $38 = 0, $arraydecay = 0, $arraydecay13 = 0, $arraydecay222 = 0, $arraydecay224 = 0, $arraydecay23 = 0, $arraydecay279 = 0, $arraydecay281 = 0, $arraydecay34 = 0, $arraydecay35 = 0, $arraydecay40 = 0, $arraydecay42 = 0, $arraydecay45$pre$phiZ2D = 0, $arraydecay50 = 0, $arraydecay51 = 0, $arraydecay60$pre$phiZ2D = 0, $arrayidx206 = 0, $arrayidx208 = 0, $arrayidx69 = 0, $call104 = 0, $call225 = 0.0, $call235 = 0.0, $call246 = 0.0, $call257 = 0.0, $call268 = 0.0, $call282 = 0.0, $call290 = 0.0, $call298 = 0.0, $call306 = 0.0, $call314 = 0.0, $call54 = 0, $call67 = 0, $candidatePtr$0 = 0, $candidatePtr$1 = 0, $candidatePtr$2 = 0, $candidatePtr$3 = 0, $cmp216 = 0, $contNum = 0, $cp = 0, $cparamLT = 0, $cparamLT115$pre$phiZ2D = 0, $i$0 = 0, $i$1 = 0, $i$2 = 0, $i$3 = 0, $i$4 = 0, $i$5 = 0, $i$6 = 0, $icpHandle = 0, $inc91 = 0, $j$0 = 0, $j$1 = 0, $j$2 = 0, $j$3 = 0, $j$4 = 0, $k$0 = 0, $num$0 = 0, $num$1 = 0, $num$2 = 0, $num2$0 = 0, $num5 = 0, $pos2d0 = 0, $pos2d1 = 0, $result = 0, $retval$0 = 0, $searchFeatureNum = 0, $simThresh = 0, $threadNum = 0, $trackingThresh = 0, $trackingThresh283 = 0, $xsize = 0, $xsize52$pre$phiZ2D = 0, $ysize = 0, $ysize53$pre$phiZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $cp = sp;
 $pos2d0 = sp + 40 | 0;
 $pos2d1 = sp + 32 | 0;
 L1 : do if (($ar2Handle | 0) != 0 & ($surfaceSet | 0) != 0 & ($dataPtr | 0) != 0 & ($trans | 0) != 0 & ($err | 0) != 0) {
  $contNum = $surfaceSet + 152 | 0;
  if ((HEAP32[$contNum >> 2] | 0) < 1) $retval$0 = -2; else {
   HEAPF32[$err >> 2] = 0.0;
   $num5 = $surfaceSet + 4 | 0;
   $arraydecay = $surfaceSet + 8 | 0;
   $arraydecay13 = $surfaceSet + 56 | 0;
   $arraydecay23 = $surfaceSet + 104 | 0;
   $i$0 = 0;
   while (1) {
    if (($i$0 | 0) >= (HEAP32[$num5 >> 2] | 0)) break;
    _arUtilMatMulf($arraydecay, (HEAP32[$surfaceSet >> 2] | 0) + ($i$0 * 112 | 0) + 12 | 0, $ar2Handle + 48 + ($i$0 * 48 | 0) | 0) | 0;
    if ((HEAP32[$contNum >> 2] | 0) > 1 ? (_arUtilMatMulf($arraydecay13, (HEAP32[$surfaceSet >> 2] | 0) + ($i$0 * 112 | 0) + 12 | 0, $ar2Handle + 528 + ($i$0 * 48 | 0) | 0) | 0, (HEAP32[$contNum >> 2] | 0) > 2) : 0) _arUtilMatMulf($arraydecay23, (HEAP32[$surfaceSet >> 2] | 0) + ($i$0 * 112 | 0) + 12 | 0, $ar2Handle + 1008 + ($i$0 * 48 | 0) | 0) | 0;
    $i$0 = $i$0 + 1 | 0;
   }
   if ((HEAP32[$ar2Handle >> 2] | 0) == 1) {
    $cparamLT = $ar2Handle + 12 | 0;
    $arraydecay34 = $ar2Handle + 2672 | 0;
    $arraydecay35 = $ar2Handle + 7496 | 0;
    _extractVisibleFeatures_171(HEAP32[$cparamLT >> 2] | 0, $ar2Handle + 48 | 0, $surfaceSet, $arraydecay34, $arraydecay35);
    $arraydecay45$pre$phiZ2D = $arraydecay34;
    $arraydecay60$pre$phiZ2D = $arraydecay35;
    $cparamLT115$pre$phiZ2D = $cparamLT;
    $xsize52$pre$phiZ2D = $ar2Handle + 4 | 0;
    $ysize53$pre$phiZ2D = $ar2Handle + 8 | 0;
   } else {
    $xsize = $ar2Handle + 4 | 0;
    $ysize = $ar2Handle + 8 | 0;
    $arraydecay40 = $ar2Handle + 2672 | 0;
    $arraydecay42 = $ar2Handle + 7496 | 0;
    _extractVisibleFeaturesHomography_172(HEAP32[$xsize >> 2] | 0, HEAP32[$ysize >> 2] | 0, $ar2Handle + 48 | 0, $surfaceSet, $arraydecay40, $arraydecay42);
    $arraydecay45$pre$phiZ2D = $arraydecay40;
    $arraydecay60$pre$phiZ2D = $arraydecay42;
    $cparamLT115$pre$phiZ2D = $ar2Handle + 12 | 0;
    $xsize52$pre$phiZ2D = $xsize;
    $ysize53$pre$phiZ2D = $ysize;
   }
   $searchFeatureNum = $ar2Handle + 36 | 0;
   $threadNum = $ar2Handle + 13280 | 0;
   $arraydecay50 = $surfaceSet + 156 | 0;
   $arraydecay51 = $ar2Handle + 1488 | 0;
   $simThresh = $ar2Handle + 40 | 0;
   $candidatePtr$0 = $arraydecay45$pre$phiZ2D;
   $i$1 = 0;
   $num$0 = 0;
   while (1) {
    if (($i$1 | 0) >= (HEAP32[$searchFeatureNum >> 2] | 0)) break;
    $candidatePtr$1 = $candidatePtr$0;
    $i$2 = $i$1;
    $j$0 = 0;
    $num2$0 = $num$0;
    while (1) {
     if (($j$0 | 0) >= (HEAP32[$threadNum >> 2] | 0)) {
      $candidatePtr$3 = $candidatePtr$1;
      break;
     }
     if (($i$2 | 0) == (HEAP32[$searchFeatureNum >> 2] | 0)) {
      $candidatePtr$3 = $candidatePtr$1;
      break;
     }
     $call54 = _ar2SelectTemplate($candidatePtr$1, $arraydecay50, $num2$0, $arraydecay51, HEAP32[$xsize52$pre$phiZ2D >> 2] | 0, HEAP32[$ysize53$pre$phiZ2D >> 2] | 0) | 0;
     if (($call54 | 0) < 0) {
      if (($candidatePtr$1 | 0) != ($arraydecay45$pre$phiZ2D | 0)) {
       $candidatePtr$3 = $candidatePtr$1;
       break;
      }
      $call67 = _ar2SelectTemplate($arraydecay60$pre$phiZ2D, $arraydecay50, $num2$0, $arraydecay51, HEAP32[$xsize52$pre$phiZ2D >> 2] | 0, HEAP32[$ysize53$pre$phiZ2D >> 2] | 0) | 0;
      if (($call67 | 0) < 0) {
       $candidatePtr$3 = $arraydecay60$pre$phiZ2D;
       break;
      } else {
       $candidatePtr$2 = $arraydecay60$pre$phiZ2D;
       $k$0 = $call67;
      }
     } else {
      $candidatePtr$2 = $candidatePtr$1;
      $k$0 = $call54;
     }
     $arrayidx69 = $candidatePtr$2 + ($k$0 * 24 | 0) | 0;
     HEAP32[$cp + ($j$0 << 2) >> 2] = $arrayidx69;
     HEAP32[$ar2Handle + 1488 + ($num2$0 << 3) >> 2] = HEAP32[$candidatePtr$2 + ($k$0 * 24 | 0) + 16 >> 2];
     HEAP32[$ar2Handle + 1488 + ($num2$0 << 3) + 4 >> 2] = HEAP32[$candidatePtr$2 + ($k$0 * 24 | 0) + 20 >> 2];
     HEAP32[$ar2Handle + 13284 + ($j$0 * 52 | 0) >> 2] = $ar2Handle;
     HEAP32[$ar2Handle + 13284 + ($j$0 * 52 | 0) + 4 >> 2] = $surfaceSet;
     HEAP32[$ar2Handle + 13284 + ($j$0 * 52 | 0) + 8 >> 2] = $arrayidx69;
     HEAP32[$ar2Handle + 13284 + ($j$0 * 52 | 0) + 12 >> 2] = $dataPtr;
     $inc91 = $num2$0 + 1 | 0;
     $candidatePtr$1 = $candidatePtr$2;
     $i$2 = $i$2 + 1 | 0;
     $j$0 = $j$0 + 1 | 0;
     $num2$0 = ($inc91 | 0) == 5 ? $num$0 : $inc91;
    }
    if (!$j$0) break;
    $j$1 = 0;
    $num$1 = $num$0;
    while (1) {
     if (($j$1 | 0) == ($j$0 | 0)) break;
     $result = $ar2Handle + 13284 + ($j$1 * 52 | 0) + 24 | 0;
     $call104 = _ar2Tracking2dSub(HEAP32[$ar2Handle + 13284 + ($j$1 * 52 | 0) >> 2] | 0, HEAP32[$ar2Handle + 13284 + ($j$1 * 52 | 0) + 4 >> 2] | 0, HEAP32[$ar2Handle + 13284 + ($j$1 * 52 | 0) + 8 >> 2] | 0, HEAP32[$ar2Handle + 13284 + ($j$1 * 52 | 0) + 12 >> 2] | 0, HEAP32[$ar2Handle + 13284 + ($j$1 * 52 | 0) + 16 >> 2] | 0, $ar2Handle + 13284 + ($j$1 * 52 | 0) + 20 | 0, $result) | 0;
     HEAP32[$ar2Handle + 13284 + ($j$1 * 52 | 0) + 48 >> 2] = $call104;
     if (($call104 | 0) == 0 ? +HEAPF32[$result >> 2] > +HEAPF32[$simThresh >> 2] : 0) {
      if ((HEAP32[$ar2Handle >> 2] | 0) == 1) {
       $27 = HEAP32[$cparamLT115$pre$phiZ2D >> 2] | 0;
       _arParamObserv2Ideal($27 + 104 | 0, +HEAPF32[$ar2Handle + 13284 + ($j$1 * 52 | 0) + 28 >> 2], +HEAPF32[$ar2Handle + 13284 + ($j$1 * 52 | 0) + 32 >> 2], $pos2d0, $pos2d1, HEAP32[$27 + 176 >> 2] | 0) | 0;
       HEAPF32[$ar2Handle + 1872 + ($num$1 << 3) >> 2] = +HEAPF64[$pos2d0 >> 3];
       HEAPF32[$ar2Handle + 1872 + ($num$1 << 3) + 4 >> 2] = +HEAPF64[$pos2d1 >> 3];
      } else {
       HEAP32[$ar2Handle + 1872 + ($num$1 << 3) >> 2] = HEAP32[$ar2Handle + 13284 + ($j$1 * 52 | 0) + 28 >> 2];
       HEAP32[$ar2Handle + 1872 + ($num$1 << 3) + 4 >> 2] = HEAP32[$ar2Handle + 13284 + ($j$1 * 52 | 0) + 32 >> 2];
      }
      HEAP32[$ar2Handle + 2192 + ($num$1 * 12 | 0) >> 2] = HEAP32[$ar2Handle + 13284 + ($j$1 * 52 | 0) + 36 >> 2];
      HEAP32[$ar2Handle + 2192 + ($num$1 * 12 | 0) + 4 >> 2] = HEAP32[$ar2Handle + 13284 + ($j$1 * 52 | 0) + 40 >> 2];
      HEAP32[$ar2Handle + 2192 + ($num$1 * 12 | 0) + 8 >> 2] = HEAP32[$ar2Handle + 13284 + ($j$1 * 52 | 0) + 44 >> 2];
      $38 = HEAP32[$cp + ($j$1 << 2) >> 2] | 0;
      HEAP32[$ar2Handle + 1488 + ($num$1 << 3) >> 2] = HEAP32[$38 + 16 >> 2];
      HEAP32[$ar2Handle + 1488 + ($num$1 << 3) + 4 >> 2] = HEAP32[$38 + 20 >> 2];
      HEAP32[$ar2Handle + 12320 + ($num$1 * 24 | 0) >> 2] = HEAP32[$38 >> 2];
      HEAP32[$ar2Handle + 12320 + ($num$1 * 24 | 0) + 4 >> 2] = HEAP32[$38 + 4 >> 2];
      HEAP32[$ar2Handle + 12320 + ($num$1 * 24 | 0) + 8 >> 2] = HEAP32[$38 + 8 >> 2];
      HEAP32[$ar2Handle + 12320 + ($num$1 * 24 | 0) + 12 >> 2] = 0;
      $num$2 = $num$1 + 1 | 0;
     } else $num$2 = $num$1;
     $j$1 = $j$1 + 1 | 0;
     $num$1 = $num$2;
    }
    $candidatePtr$0 = $candidatePtr$3;
    $i$1 = $i$2;
    $num$0 = $num$1;
   }
   $i$3 = 0;
   while (1) {
    if (($i$3 | 0) >= ($num$0 | 0)) break;
    $arrayidx206 = $surfaceSet + 156 + ($i$3 * 24 | 0) | 0;
    $arrayidx208 = $ar2Handle + 12320 + ($i$3 * 24 | 0) | 0;
    HEAP32[$arrayidx206 >> 2] = HEAP32[$arrayidx208 >> 2];
    HEAP32[$arrayidx206 + 4 >> 2] = HEAP32[$arrayidx208 + 4 >> 2];
    HEAP32[$arrayidx206 + 8 >> 2] = HEAP32[$arrayidx208 + 8 >> 2];
    HEAP32[$arrayidx206 + 12 >> 2] = HEAP32[$arrayidx208 + 12 >> 2];
    HEAP32[$arrayidx206 + 16 >> 2] = HEAP32[$arrayidx208 + 16 >> 2];
    HEAP32[$arrayidx206 + 20 >> 2] = HEAP32[$arrayidx208 + 20 >> 2];
    $i$3 = $i$3 + 1 | 0;
   }
   HEAP32[$surfaceSet + 156 + ($num$0 * 24 | 0) + 12 >> 2] = -1;
   $cmp216 = ($num$0 | 0) < 3;
   if ((HEAP32[$ar2Handle >> 2] | 0) == 1) {
    if ($cmp216) {
     HEAP32[$contNum >> 2] = 0;
     $retval$0 = -3;
     break;
    }
    $icpHandle = $ar2Handle + 16 | 0;
    $arraydecay222 = $ar2Handle + 1872 | 0;
    $arraydecay224 = $ar2Handle + 2192 | 0;
    $call225 = +_ar2GetTransMat_175(HEAP32[$icpHandle >> 2] | 0, $arraydecay, $arraydecay222, $arraydecay224, $num$0, $trans, 0);
    HEAPF32[$err >> 2] = $call225;
    $trackingThresh = $ar2Handle + 44 | 0;
    if (((($call225 > +HEAPF32[$trackingThresh >> 2] ? (_icpSetInlierProbability(HEAP32[$icpHandle >> 2] | 0, .800000011920929) | 0, $call235 = +_ar2GetTransMat_175(HEAP32[$icpHandle >> 2] | 0, $trans, $arraydecay222, $arraydecay224, $num$0, $trans, 1), HEAPF32[$err >> 2] = $call235, $call235 > +HEAPF32[$trackingThresh >> 2]) : 0) ? (_icpSetInlierProbability(HEAP32[$icpHandle >> 2] | 0, .6000000238418579) | 0, $call246 = +_ar2GetTransMat_175(HEAP32[$icpHandle >> 2] | 0, $trans, $arraydecay222, $arraydecay224, $num$0, $trans, 1), HEAPF32[$err >> 2] = $call246, $call246 > +HEAPF32[$trackingThresh >> 2]) : 0) ? (_icpSetInlierProbability(HEAP32[$icpHandle >> 2] | 0, .4000000059604645) | 0, $call257 = +_ar2GetTransMat_175(HEAP32[$icpHandle >> 2] | 0, $trans, $arraydecay222, $arraydecay224, $num$0, $trans, 1), HEAPF32[$err >> 2] = $call257, $call257 > +HEAPF32[$trackingThresh >> 2]) : 0) ? (_icpSetInlierProbability(HEAP32[$icpHandle >> 2] | 0, 0.0) | 0, $call268 = +_ar2GetTransMat_175(HEAP32[$icpHandle >> 2] | 0, $trans, $arraydecay222, $arraydecay224, $num$0, $trans, 1), HEAPF32[$err >> 2] = $call268, $call268 > +HEAPF32[$trackingThresh >> 2]) : 0) {
     HEAP32[$contNum >> 2] = 0;
     $retval$0 = -4;
     break;
    }
   } else {
    if ($cmp216) {
     HEAP32[$contNum >> 2] = 0;
     $retval$0 = -3;
     break;
    }
    $arraydecay279 = $ar2Handle + 1872 | 0;
    $arraydecay281 = $ar2Handle + 2192 | 0;
    $call282 = +_ar2GetTransMatHomography_176($arraydecay, $arraydecay279, $arraydecay281, $num$0, $trans, 0, 1.0);
    HEAPF32[$err >> 2] = $call282;
    $trackingThresh283 = $ar2Handle + 44 | 0;
    if (((($call282 > +HEAPF32[$trackingThresh283 >> 2] ? ($call290 = +_ar2GetTransMatHomography_176($trans, $arraydecay279, $arraydecay281, $num$0, $trans, 1, .800000011920929), HEAPF32[$err >> 2] = $call290, $call290 > +HEAPF32[$trackingThresh283 >> 2]) : 0) ? ($call298 = +_ar2GetTransMatHomography_176($trans, $arraydecay279, $arraydecay281, $num$0, $trans, 1, .6000000238418579), HEAPF32[$err >> 2] = $call298, $call298 > +HEAPF32[$trackingThresh283 >> 2]) : 0) ? ($call306 = +_ar2GetTransMatHomography_176($trans, $arraydecay279, $arraydecay281, $num$0, $trans, 1, .4000000059604645), HEAPF32[$err >> 2] = $call306, $call306 > +HEAPF32[$trackingThresh283 >> 2]) : 0) ? ($call314 = +_ar2GetTransMatHomography_176($trans, $arraydecay279, $arraydecay281, $num$0, $trans, 1, 0.0), HEAPF32[$err >> 2] = $call314, $call314 > +HEAPF32[$trackingThresh283 >> 2]) : 0) {
     HEAP32[$contNum >> 2] = 0;
     $retval$0 = -4;
     break;
    }
   }
   HEAP32[$contNum >> 2] = (HEAP32[$contNum >> 2] | 0) + 1;
   $j$2 = 0;
   while (1) {
    if (($j$2 | 0) == 3) break;
    $i$4 = 0;
    while (1) {
     if (($i$4 | 0) == 4) break;
     HEAP32[$surfaceSet + 104 + ($j$2 << 4) + ($i$4 << 2) >> 2] = HEAP32[$surfaceSet + 56 + ($j$2 << 4) + ($i$4 << 2) >> 2];
     $i$4 = $i$4 + 1 | 0;
    }
    $j$2 = $j$2 + 1 | 0;
   }
   $j$3 = 0;
   while (1) {
    if (($j$3 | 0) == 3) break;
    $i$5 = 0;
    while (1) {
     if (($i$5 | 0) == 4) break;
     HEAP32[$surfaceSet + 56 + ($j$3 << 4) + ($i$5 << 2) >> 2] = HEAP32[$surfaceSet + 8 + ($j$3 << 4) + ($i$5 << 2) >> 2];
     $i$5 = $i$5 + 1 | 0;
    }
    $j$3 = $j$3 + 1 | 0;
   }
   $j$4 = 0;
   while (1) {
    if (($j$4 | 0) == 3) {
     $retval$0 = 0;
     break L1;
    }
    $i$6 = 0;
    while (1) {
     if (($i$6 | 0) == 4) break;
     HEAP32[$surfaceSet + 8 + ($j$4 << 4) + ($i$6 << 2) >> 2] = HEAP32[$trans + ($j$4 << 4) + ($i$6 << 2) >> 2];
     $i$6 = $i$6 + 1 | 0;
    }
    $j$4 = $j$4 + 1 | 0;
   }
  }
 } else $retval$0 = -1; while (0);
 STACKTOP = sp;
 return $retval$0 | 0;
}

function _arGetTransMatMultiSquare2($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0389 = 0, $$0394 = 0, $$0404 = 0.0, $$0405 = 0, $$0407 = 0, $$0410 = 0, $$0413 = 0.0, $$1 = 0, $$10 = 0, $$1390 = 0, $$1395 = 0, $$1406 = 0, $$1408 = 0, $$1411 = 0, $$1414 = 0.0, $$2 = 0, $$2391 = 0, $$2396 = 0, $$2409 = 0, $$2412 = 0, $$2415 = 0.0, $$3 = 0, $$3392 = 0, $$3397 = 0, $$3416 = 0.0, $$4 = 0, $$4393 = 0, $$4398 = 0, $$4417 = 0.0, $$5 = 0, $$5399 = 0, $$5418 = 0.0, $$6 = 0, $$6400 = 0, $$6419 = 0.0, $$7 = 0, $$7401 = 0, $$8 = 0, $$8402 = 0, $$9 = 0, $$9403 = 0, $$pre441 = 0, $10 = 0, $109 = 0, $111 = 0, $114 = 0, $116 = 0, $118 = 0, $12 = 0, $120 = 0, $123 = 0, $125 = 0, $128 = 0, $135 = 0, $145 = 0, $155 = 0, $16 = 0, $166 = 0, $214 = 0, $217 = 0, $218 = 0, $219 = 0.0, $222 = 0.0, $225 = 0.0, $228 = 0.0, $23 = 0.0, $232 = 0.0, $233 = 0, $234 = 0.0, $235 = 0, $243 = 0.0, $244 = 0.0, $253 = 0.0, $254 = 0.0, $263 = 0.0, $264 = 0.0, $273 = 0.0, $274 = 0.0, $287 = 0, $291 = 0, $293 = 0, $36 = 0, $39 = 0, $42 = 0, $44 = 0, $47 = 0, $5 = 0, $51 = 0, $6 = 0, $63 = 0.0, $7 = 0, $78 = 0, $79 = 0, $8 = 0, $81 = 0, $83 = 0, $9 = 0, $90 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 $vararg_buffer1 = sp + 200 | 0;
 $vararg_buffer = sp + 192 | 0;
 $5 = sp + 96 | 0;
 $6 = sp;
 $7 = $3 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $3 + 112 | 0;
 $10 = $3 + 120 | 0;
 $$0394 = 0;
 while (1) {
  if (($$0394 | 0) >= ($8 | 0)) break;
  $12 = HEAP32[$3 >> 2] | 0;
  $16 = $12 + ($$0394 * 320 | 0) | 0;
  if (!(HEAP32[$12 + ($$0394 * 320 | 0) + 4 >> 2] | 0)) {
   $$0 = -1;
   $$0389 = 0;
   while (1) {
    if (($$0389 | 0) >= ($2 | 0)) break;
    if ((HEAP32[$1 + ($$0389 << 8) + 8 >> 2] | 0) == (HEAP32[$16 >> 2] | 0) ? ($23 = +HEAPF64[$1 + ($$0389 << 8) + 40 >> 3], !($23 < +HEAPF64[$9 >> 3])) : 0) if (($$0 | 0) != -1 ? !(+HEAPF64[$1 + ($$0 << 8) + 40 >> 3] < $23) : 0) $$1 = $$0; else $$1 = $$0389; else $$1 = $$0;
    $$0 = $$1;
    $$0389 = $$0389 + 1 | 0;
   }
   HEAP32[$12 + ($$0394 * 320 | 0) + 304 >> 2] = $$0;
   if (($$0 | 0) > -1) HEAP32[$1 + ($$0 << 8) + 16 >> 2] = HEAP32[$1 + ($$0 << 8) + 20 >> 2];
  } else {
   $36 = $12 + ($$0394 * 320 | 0) + 312 | 0;
   $$1390 = 0;
   $$2 = -1;
   while (1) {
    if (($$1390 | 0) >= ($2 | 0)) break;
    $39 = HEAP32[$1 + ($$1390 << 8) + 12 >> 2] | 0;
    if (($39 | 0) == 0 ? ($42 = $1 + ($$1390 << 8) + 248 | 0, $44 = HEAP32[$42 >> 2] | 0, $47 = HEAP32[$42 + 4 >> 2] | 0, !(($44 | 0) == 0 & ($47 | 0) == 0)) : 0) {
     $51 = $36;
     if (($44 | 0) == (HEAP32[$51 >> 2] | 0) ? ($47 | 0) == (HEAP32[$51 + 4 >> 2] | 0) : 0) label = 20; else $$3 = $$2;
    } else if (($39 | 0) == (HEAP32[$16 >> 2] | 0)) label = 20; else $$3 = $$2;
    if ((label | 0) == 20) {
     label = 0;
     $63 = +HEAPF64[$1 + ($$1390 << 8) + 48 >> 3];
     if (!($63 < +HEAPF64[$10 >> 3])) if (($$2 | 0) != -1 ? !(+HEAPF64[$1 + ($$2 << 8) + 48 >> 3] < $63) : 0) $$3 = $$2; else $$3 = $$1390; else $$3 = $$2;
    }
    $$1390 = $$1390 + 1 | 0;
    $$2 = $$3;
   }
   HEAP32[$12 + ($$0394 * 320 | 0) + 304 >> 2] = $$2;
   if (($$2 | 0) > -1) HEAP32[$1 + ($$2 << 8) + 16 >> 2] = HEAP32[$1 + ($$2 << 8) + 24 >> 2];
  }
  $$0394 = $$0394 + 1 | 0;
 }
 $$0405 = 0;
 $$0407 = 0;
 $$0410 = 0;
 $$1395 = 0;
 $78 = $8;
 while (1) {
  if (($$1395 | 0) >= ($78 | 0)) break;
  $79 = HEAP32[$3 >> 2] | 0;
  $81 = HEAP32[$79 + ($$1395 * 320 | 0) + 304 >> 2] | 0;
  do if (($81 | 0) < 0) {
   $$1406 = $$0405;
   $$2409 = $$0407;
   $$2412 = $$0410;
  } else {
   $83 = $1 + ($81 << 8) | 0;
   if (+_arGetTransMatSquare($0, $83, +HEAPF64[$79 + ($$1395 * 320 | 0) + 8 >> 3], $6) > 4.0) {
    HEAP32[(HEAP32[$3 >> 2] | 0) + ($$1395 * 320 | 0) + 304 >> 2] = -1;
    $90 = $1 + ($81 << 8) + 236 | 0;
    if (HEAP32[$90 >> 2] | 0) {
     $$1406 = $$0405;
     $$2409 = $$0407;
     $$2412 = $$0410;
     break;
    }
    HEAP32[$90 >> 2] = 7;
    $$1406 = $$0405;
    $$2409 = $$0407;
    $$2412 = $$0410;
    break;
   }
   $$pre441 = HEAP32[$83 >> 2] | 0;
   L45 : do if (($$0405 | 0) == 0 | ($$0407 | 0) < ($$pre441 | 0)) {
    $$2391 = 0;
    while (1) {
     if (($$2391 | 0) == 3) {
      $$1408 = $$pre441;
      $$1411 = $$1395;
      break L45;
     }
     $$4 = 0;
     while (1) {
      if (($$4 | 0) == 4) break;
      HEAPF64[$5 + ($$2391 << 5) + ($$4 << 3) >> 3] = +HEAPF64[$6 + ($$2391 << 5) + ($$4 << 3) >> 3];
      $$4 = $$4 + 1 | 0;
     }
     $$2391 = $$2391 + 1 | 0;
    }
   } else {
    $$1408 = $$0407;
    $$1411 = $$0410;
   } while (0);
   $$1406 = $$0405 + 1 | 0;
   $$2409 = $$1408;
   $$2412 = $$1411;
  } while (0);
  $$0405 = $$1406;
  $$0407 = $$2409;
  $$0410 = $$2412;
  $$1395 = $$1395 + 1 | 0;
  $78 = HEAP32[$7 >> 2] | 0;
 }
 L57 : do if (($$0405 | 0) != 0 ? ($$0405 | 0) >= (HEAP32[$3 + 128 >> 2] | 0) : 0) {
  _arUtilMatMul($5, (HEAP32[$3 >> 2] | 0) + ($$0410 * 320 | 0) + 112 | 0, $6) | 0;
  $109 = $$0405 << 2;
  $111 = _malloc($$0405 << 6) | 0;
  if (!$111) {
   _arLog(0, 3, 45930, $vararg_buffer);
   _exit(1);
  }
  $114 = _malloc($$0405 * 96 | 0) | 0;
  if (!$114) {
   _arLog(0, 3, 45930, $vararg_buffer1);
   _exit(1);
  }
  $116 = HEAP32[$7 >> 2] | 0;
  $$2396 = 0;
  $$3392 = 0;
  while (1) {
   if (($$2396 | 0) >= ($116 | 0)) break;
   $118 = HEAP32[$3 >> 2] | 0;
   $120 = HEAP32[$118 + ($$2396 * 320 | 0) + 304 >> 2] | 0;
   if (($120 | 0) < 0) $$4393 = $$3392; else {
    $123 = HEAP32[$1 + ($120 << 8) + 16 >> 2] | 0;
    $125 = (4 - $123 | 0) % 4 | 0;
    $128 = $$3392 << 3;
    HEAPF64[$111 + ($128 << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($125 << 4) >> 3];
    HEAPF64[$111 + (($128 | 1) << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($125 << 4) + 8 >> 3];
    $135 = (5 - $123 | 0) % 4 | 0;
    HEAPF64[$111 + (($128 | 2) << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($135 << 4) >> 3];
    HEAPF64[$111 + (($128 | 3) << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($135 << 4) + 8 >> 3];
    $145 = (6 - $123 | 0) % 4 | 0;
    HEAPF64[$111 + (($128 | 4) << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($145 << 4) >> 3];
    HEAPF64[$111 + (($128 | 5) << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($145 << 4) + 8 >> 3];
    $155 = (7 - $123 | 0) % 4 | 0;
    HEAPF64[$111 + (($128 | 6) << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($155 << 4) >> 3];
    HEAPF64[$111 + (($128 | 7) << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($155 << 4) + 8 >> 3];
    $166 = $$3392 * 12 | 0;
    HEAPF64[$114 + ($166 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 208 >> 3];
    HEAPF64[$114 + (($166 | 1) << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 216 >> 3];
    HEAPF64[$114 + (($166 | 2) << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 224 >> 3];
    HEAPF64[$114 + (($166 | 3) << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 232 >> 3];
    HEAPF64[$114 + ($166 + 4 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 240 >> 3];
    HEAPF64[$114 + ($166 + 5 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 248 >> 3];
    HEAPF64[$114 + ($166 + 6 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 256 >> 3];
    HEAPF64[$114 + ($166 + 7 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 264 >> 3];
    HEAPF64[$114 + ($166 + 8 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 272 >> 3];
    HEAPF64[$114 + ($166 + 9 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 280 >> 3];
    HEAPF64[$114 + ($166 + 10 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 288 >> 3];
    HEAPF64[$114 + ($166 + 11 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 296 >> 3];
    $$4393 = $$3392 + 1 | 0;
   }
   $$2396 = $$2396 + 1 | 0;
   $$3392 = $$4393;
  }
  $214 = $3 + 104 | 0;
  $217 = ($4 | 0) != 0;
  if (!(HEAP32[$214 >> 2] | 0)) {
   $218 = $3 + 8 | 0;
   $219 = +_arGetTransMat($0, $6, $111, $114, $109, $218);
   if ($217 & $219 >= 20.0) {
    _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, .8) | 0;
    $222 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $218);
    if ($222 >= 20.0) {
     _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, .6) | 0;
     $225 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $218);
     if ($225 >= 20.0) {
      _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, .4) | 0;
      $228 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $218);
      if (!($228 >= 20.0)) $$0413 = $228; else {
       _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, 0.0) | 0;
       $$0413 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $218);
      }
     } else $$0413 = $225;
    } else $$0413 = $222;
   } else $$0413 = $219;
   _free($114);
   _free($111);
   $$6419 = $$0413;
  } else {
   $232 = +_arGetTransMat($0, $6, $111, $114, $109, $5);
   $233 = $3 + 8 | 0;
   $234 = +_arGetTransMat($0, $233, $111, $114, $109, $233);
   $235 = $232 < $234;
   L82 : do if ($217) {
    L84 : do if ($235) {
     $$5 = 0;
     while (1) {
      if (($$5 | 0) == 3) {
       $$1414 = $232;
       break L84;
      }
      $$3397 = 0;
      while (1) {
       if (($$3397 | 0) == 4) break;
       HEAPF64[$3 + 8 + ($$5 << 5) + ($$3397 << 3) >> 3] = +HEAPF64[$5 + ($$5 << 5) + ($$3397 << 3) >> 3];
       $$3397 = $$3397 + 1 | 0;
      }
      $$5 = $$5 + 1 | 0;
     }
    } else $$1414 = $234; while (0);
    if ($$1414 >= 20.0) {
     _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, .8) | 0;
     $243 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $5);
     $244 = +_arGetTransMatRobust($0, $233, $111, $114, $109, $233);
     L95 : do if ($243 < $244) {
      $$6 = 0;
      while (1) {
       if (($$6 | 0) == 3) {
        $$2415 = $243;
        break L95;
       }
       $$4398 = 0;
       while (1) {
        if (($$4398 | 0) == 4) break;
        HEAPF64[$3 + 8 + ($$6 << 5) + ($$4398 << 3) >> 3] = +HEAPF64[$5 + ($$6 << 5) + ($$4398 << 3) >> 3];
        $$4398 = $$4398 + 1 | 0;
       }
       $$6 = $$6 + 1 | 0;
      }
     } else $$2415 = $244; while (0);
     if ($$2415 >= 20.0) {
      _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, .6) | 0;
      $253 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $5);
      $254 = +_arGetTransMatRobust($0, $233, $111, $114, $109, $233);
      L106 : do if ($253 < $254) {
       $$7 = 0;
       while (1) {
        if (($$7 | 0) == 3) {
         $$3416 = $253;
         break L106;
        }
        $$5399 = 0;
        while (1) {
         if (($$5399 | 0) == 4) break;
         HEAPF64[$3 + 8 + ($$7 << 5) + ($$5399 << 3) >> 3] = +HEAPF64[$5 + ($$7 << 5) + ($$5399 << 3) >> 3];
         $$5399 = $$5399 + 1 | 0;
        }
        $$7 = $$7 + 1 | 0;
       }
      } else $$3416 = $254; while (0);
      if ($$3416 >= 20.0) {
       _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, .4) | 0;
       $263 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $5);
       $264 = +_arGetTransMatRobust($0, $233, $111, $114, $109, $233);
       L117 : do if ($263 < $264) {
        $$8 = 0;
        while (1) {
         if (($$8 | 0) == 3) {
          $$4417 = $263;
          break L117;
         }
         $$6400 = 0;
         while (1) {
          if (($$6400 | 0) == 4) break;
          HEAPF64[$3 + 8 + ($$8 << 5) + ($$6400 << 3) >> 3] = +HEAPF64[$5 + ($$8 << 5) + ($$6400 << 3) >> 3];
          $$6400 = $$6400 + 1 | 0;
         }
         $$8 = $$8 + 1 | 0;
        }
       } else $$4417 = $264; while (0);
       if ($$4417 >= 20.0) {
        _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, 0.0) | 0;
        $273 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $5);
        $274 = +_arGetTransMatRobust($0, $233, $111, $114, $109, $233);
        if ($273 < $274) {
         $$9 = 0;
         while (1) {
          if (($$9 | 0) == 3) {
           $$5418 = $273;
           break L82;
          }
          $$7401 = 0;
          while (1) {
           if (($$7401 | 0) == 4) break;
           HEAPF64[$3 + 8 + ($$9 << 5) + ($$7401 << 3) >> 3] = +HEAPF64[$5 + ($$9 << 5) + ($$7401 << 3) >> 3];
           $$7401 = $$7401 + 1 | 0;
          }
          $$9 = $$9 + 1 | 0;
         }
        } else $$5418 = $274;
       } else $$5418 = $$4417;
      } else $$5418 = $$3416;
     } else $$5418 = $$2415;
    } else $$5418 = $$1414;
   } else if ($235) {
    $$10 = 0;
    while (1) {
     if (($$10 | 0) == 3) {
      $$5418 = $232;
      break L82;
     }
     $$8402 = 0;
     while (1) {
      if (($$8402 | 0) == 4) break;
      HEAPF64[$3 + 8 + ($$10 << 5) + ($$8402 << 3) >> 3] = +HEAPF64[$5 + ($$10 << 5) + ($$8402 << 3) >> 3];
      $$8402 = $$8402 + 1 | 0;
     }
     $$10 = $$10 + 1 | 0;
    }
   } else $$5418 = $234; while (0);
   _free($114);
   _free($111);
   $$6419 = $$5418;
  }
  if ($$6419 < 20.0) {
   HEAP32[$214 >> 2] = 1;
   $$0404 = $$6419;
   break;
  }
  HEAP32[$214 >> 2] = 0;
  $287 = HEAP32[$7 >> 2] | 0;
  $$9403 = 0;
  while (1) {
   if (($$9403 | 0) >= ($287 | 0)) {
    $$0404 = $$6419;
    break L57;
   }
   $291 = HEAP32[(HEAP32[$3 >> 2] | 0) + ($$9403 * 320 | 0) + 304 >> 2] | 0;
   if (($291 | 0) >= 0 ? ($293 = $1 + ($291 << 8) + 236 | 0, (HEAP32[$293 >> 2] | 0) == 0) : 0) HEAP32[$293 >> 2] = 8;
   $$9403 = $$9403 + 1 | 0;
  }
 } else label = 45; while (0);
 if ((label | 0) == 45) {
  HEAP32[$3 + 104 >> 2] = 0;
  $$0404 = -1.0;
 }
 STACKTOP = sp;
 return +$$0404;
}

function __ZN6vision36ComputeSubpixelHessianFineOctavePairEPfS0_RKNS_5ImageES3_S3_ii($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $10 = 0, $104 = 0, $108 = 0, $11 = 0, $110 = 0, $118 = 0, $12 = 0, $123 = 0, $127 = 0, $129 = 0, $13 = 0, $131 = 0, $133 = 0, $135 = 0, $138 = 0.0, $14 = 0, $146 = 0, $151 = 0, $155 = 0, $164 = 0, $169 = 0, $173 = 0, $183 = 0, $188 = 0, $192 = 0, $194 = 0.0, $203 = 0, $208 = 0, $212 = 0, $215 = 0.0, $216 = 0.0, $222 = 0.0, $224 = 0.0, $229 = 0.0, $231 = 0.0, $238 = 0.0, $239 = 0.0, $24 = 0, $244 = 0.0, $245 = 0.0, $252 = 0.0, $254 = 0, $29 = 0, $33 = 0, $34 = 0, $36 = 0, $44 = 0, $49 = 0, $53 = 0, $54 = 0, $62 = 0, $67 = 0, $7 = 0, $71 = 0, $73 = 0, $8 = 0, $81 = 0, $86 = 0, $9 = 0, $90 = 0, $91 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $7 = sp + 28 | 0;
 $8 = sp + 24 | 0;
 $9 = sp + 20 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 12 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 if (($5 | 0) > 0 ? ($5 + 1 | 0) >>> 0 < (__ZNK6vision5Image5widthEv($3) | 0) >>> 0 : 0) {
  $34 = $6 + -1 | 0;
  if (($6 | 0) > 0 ? ($36 = $6 + 1 | 0, $36 >>> 0 < (__ZNK6vision5Image6heightEv($3) | 0) >>> 0) : 0) {
   $54 = __ZNK6vision5Image5widthEv($2) | 0;
   if (($54 | 0) != (__ZNK6vision5Image5widthEv($3) | 0)) {
    $62 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30218) | 0, 28600) | 0, 39072) | 0, 415) | 0, 39079) | 0, 29150) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $62 + (HEAP32[(HEAP32[$62 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $67 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $71 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$67 >> 2] | 0) + 28 >> 2] & 127]($67, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($62, $71) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($62) | 0;
    _abort();
   }
   $73 = (__ZNK6vision5Image5widthEv($2) | 0) >>> 1;
   if (($73 | 0) != (__ZNK6vision5Image5widthEv($4) | 0)) {
    $81 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29180) | 0, 28600) | 0, 39072) | 0, 416) | 0, 39079) | 0, 29150) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $81 + (HEAP32[(HEAP32[$81 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $86 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $90 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$86 >> 2] | 0) + 28 >> 2] & 127]($86, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($81, $90) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($81) | 0;
    _abort();
   }
   $91 = __ZNK6vision5Image6heightEv($2) | 0;
   if (($91 | 0) != (__ZNK6vision5Image6heightEv($3) | 0)) {
    $99 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30270) | 0, 28600) | 0, 39072) | 0, 417) | 0, 39079) | 0, 29150) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $99 + (HEAP32[(HEAP32[$99 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $104 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $108 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$104 >> 2] | 0) + 28 >> 2] & 127]($104, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($99, $108) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($99) | 0;
    _abort();
   }
   $110 = (__ZNK6vision5Image6heightEv($2) | 0) >>> 1;
   if (($110 | 0) != (__ZNK6vision5Image6heightEv($4) | 0)) {
    $118 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29296) | 0, 28600) | 0, 39072) | 0, 418) | 0, 39079) | 0, 29150) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $118 + (HEAP32[(HEAP32[$118 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $123 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $127 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$123 >> 2] | 0) + 28 >> 2] & 127]($123, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($118, $127) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($118) | 0;
    _abort();
   }
   $129 = (__ZNK6vision5Image3getIfEEPKT_m($2, $34) | 0) + ($5 << 2) | 0;
   $131 = (__ZNK6vision5Image3getIfEEPKT_m($2, $6) | 0) + ($5 << 2) | 0;
   $133 = (__ZNK6vision5Image3getIfEEPKT_m($2, $36) | 0) + ($5 << 2) | 0;
   $135 = (__ZNK6vision5Image3getIfEEPKT_m($3, $6) | 0) + ($5 << 2) | 0;
   __ZN6vision25bilinear_downsample_pointERfS0_ffi($8, $9, +($5 | 0), +($6 | 0), 1);
   $138 = +HEAPF32[$8 >> 2];
   if (!($138 + -.5 >= 0.0)) {
    $146 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30324) | 0, 28600) | 0, 39072) | 0, 428) | 0, 39079) | 0, 30365) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $146 + (HEAP32[(HEAP32[$146 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $151 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $155 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$151 >> 2] | 0) + 28 >> 2] & 127]($151, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($146, $155) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($146) | 0;
    _abort();
   }
   if (!(+HEAPF32[$9 >> 2] + -.5 >= 0.0)) {
    $164 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30419) | 0, 28600) | 0, 39072) | 0, 429) | 0, 39079) | 0, 30460) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $164 + (HEAP32[(HEAP32[$164 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $169 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $173 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$169 >> 2] | 0) + 28 >> 2] & 127]($169, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($164, $173) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($164) | 0;
    _abort();
   }
   if (!($138 + .5 < +((__ZNK6vision5Image5widthEv($4) | 0) >>> 0))) {
    $183 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30514) | 0, 28600) | 0, 39072) | 0, 430) | 0, 39079) | 0, 30365) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $183 + (HEAP32[(HEAP32[$183 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $188 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $192 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$188 >> 2] | 0) + 28 >> 2] & 127]($188, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($183, $192) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($183) | 0;
    _abort();
   }
   $194 = +HEAPF32[$9 >> 2] + .5;
   if ($194 < +((__ZNK6vision5Image6heightEv($4) | 0) >>> 0)) {
    __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii($10, $11, $12, $13, $14, $3, $5, $6);
    $215 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($4, +HEAPF32[$8 >> 2], +HEAPF32[$9 >> 2]);
    $216 = +HEAPF32[$131 >> 2];
    $222 = $215 + ($216 - +HEAPF32[$135 >> 2] * 2.0);
    $224 = +HEAPF32[$131 + -4 >> 2];
    $229 = $224 + +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($4, +HEAPF32[$8 >> 2] + .5, +HEAPF32[$9 >> 2]);
    $231 = +HEAPF32[$131 + 4 >> 2];
    $238 = ($229 - ($231 + +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($4, +HEAPF32[$8 >> 2] + -.5, +HEAPF32[$9 >> 2]))) * .25;
    $239 = +HEAPF32[$129 >> 2];
    $244 = $239 + +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($4, +HEAPF32[$8 >> 2], +HEAPF32[$9 >> 2] + .5);
    $245 = +HEAPF32[$133 >> 2];
    $252 = ($244 - ($245 + +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($4, +HEAPF32[$8 >> 2], +HEAPF32[$9 >> 2] + -.5))) * .25;
    HEAP32[$0 >> 2] = HEAP32[$12 >> 2];
    $254 = HEAP32[$14 >> 2] | 0;
    HEAP32[$0 + 4 >> 2] = $254;
    HEAPF32[$0 + 8 >> 2] = $238;
    HEAP32[$0 + 12 >> 2] = $254;
    HEAP32[$0 + 16 >> 2] = HEAP32[$13 >> 2];
    HEAPF32[$0 + 20 >> 2] = $252;
    HEAPF32[$0 + 24 >> 2] = $238;
    HEAPF32[$0 + 28 >> 2] = $252;
    HEAPF32[$0 + 32 >> 2] = $222;
    HEAPF32[$1 >> 2] = -+HEAPF32[$10 >> 2];
    HEAPF32[$1 + 4 >> 2] = -+HEAPF32[$11 >> 2];
    HEAPF32[$1 + 8 >> 2] = -(($215 - $216) * .5);
    STACKTOP = sp;
    return;
   } else {
    $203 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30565) | 0, 28600) | 0, 39072) | 0, 431) | 0, 39079) | 0, 30460) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $203 + (HEAP32[(HEAP32[$203 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $208 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $212 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$208 >> 2] | 0) + 28 >> 2] & 127]($208, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($203, $212) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($203) | 0;
    _abort();
   }
  }
  $44 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29018) | 0, 28600) | 0, 39072) | 0, 414) | 0, 39079) | 0, 29077) | 0;
  __ZNKSt3__28ios_base6getlocEv($7, $44 + (HEAP32[(HEAP32[$44 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $49 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
  $53 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$49 >> 2] | 0) + 28 >> 2] & 127]($49, 10) | 0;
  __ZNSt3__26localeD2Ev($7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($44, $53) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($44) | 0;
  _abort();
 }
 $24 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 28944) | 0, 28600) | 0, 39072) | 0, 413) | 0, 39079) | 0, 29002) | 0;
 __ZNKSt3__28ios_base6getlocEv($7, $24 + (HEAP32[(HEAP32[$24 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $29 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
 $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$29 >> 2] | 0) + 28 >> 2] & 127]($29, 10) | 0;
 __ZNSt3__26localeD2Ev($7);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($24, $33) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($24) | 0;
 _abort();
}

function __ZNSt3__213__nth_elementIRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEvT0_S9_S9_T_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$cast222 = 0, $$phi$trans$insert = 0, $$phi$trans$insert262 = 0, $$phi$trans$insert264 = 0, $$phi$trans$insert266 = 0, $$phi$trans$insert268 = 0, $$pre = 0, $$pre$phi270Z2D = 0, $$pre$phi271Z2D = 0, $$pre$phi272Z2D = 0, $$pre$phi273Z2D = 0, $$pre$phi275Z2D = 0, $$pre$phi279Z2D = 0, $$pre$phiZ2D = 0, $$pre276 = 0, $$sroa$0$0$ptr = 0, $$sroa$0$1 = 0, $$sroa$0$1$ptr = 0, $$sroa$0$2$ptr = 0, $$sroa$0$3$in = 0, $$sroa$0$4 = 0, $$sroa$0$4$ptr = 0, $$sroa$0$5$ptr = 0, $$sroa$0107$0 = 0, $$sroa$0107$2$ptr = 0, $$sroa$0107$3$ptr = 0, $$sroa$0107$4$ptr = 0, $$sroa$068$0$ptr = 0, $$sroa$068$1 = 0, $$sroa$068$2 = 0, $$sroa$068$3 = 0, $$sroa$068$4 = 0, $$sroa$068$5 = 0, $$sroa$068$6 = 0, $$sroa$068$6$ptr = 0, $10 = 0, $103 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $111 = 0, $113 = 0.0, $118 = 0, $12 = 0, $121 = 0, $123 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $135 = 0, $136 = 0, $137 = 0.0, $138 = 0, $139 = 0.0, $148 = 0, $149 = 0, $15 = 0, $150 = 0.0, $157 = 0, $16 = 0, $160 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $173 = 0.0, $174 = 0.0, $177 = 0, $178 = 0, $179 = 0, $180 = 0, $183 = 0, $185 = 0, $186 = 0, $19 = 0, $191 = 0, $193 = 0.0, $194 = 0.0, $20 = 0, $202 = 0, $204 = 0.0, $205 = 0.0, $21 = 0, $22 = 0.0, $23 = 0, $24 = 0.0, $27 = 0, $28 = 0, $29 = 0, $31 = 0, $32 = 0, $38 = 0, $39 = 0, $4 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0.0, $6 = 0, $60 = 0, $64 = 0.0, $68 = 0, $7 = 0, $73 = 0, $79 = 0, $8 = 0, $80 = 0.0, $81 = 0, $82 = 0.0, $9 = 0, $91 = 0, $92 = 0, $93 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy7 = sp + 40 | 0;
 $$byval_copy6 = sp + 36 | 0;
 $$byval_copy5 = sp + 32 | 0;
 $4 = sp + 28 | 0;
 $5 = sp + 24 | 0;
 $6 = sp + 20 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 12 | 0;
 $9 = sp + 8 | 0;
 $10 = sp + 4 | 0;
 $11 = sp;
 $12 = HEAP32[$1 >> 2] | 0;
 L1 : while (1) {
  $13 = HEAP32[$2 >> 2] | 0;
  $$cast222 = $13;
  $15 = $13 + -8 | 0;
  $16 = $15;
  $17 = $13 + -4 | 0;
  if (($12 | 0) == ($13 | 0)) break;
  $$pre = HEAP32[$0 >> 2] | 0;
  $20 = $$pre;
  $23 = $$pre;
  L4 : while (1) {
   $19 = $$cast222 - $20 | 0;
   $21 = $19 >> 3;
   switch ($21 | 0) {
   case 1:
   case 0:
    {
     break L1;
     break;
    }
   case 2:
    {
     label = 5;
     break L1;
     break;
    }
   case 3:
    {
     label = 10;
     break L1;
     break;
    }
   default:
    {}
   }
   if (($19 | 0) < 64) {
    label = 12;
    break L1;
   }
   $38 = $21 >>> 1;
   $39 = $23 + ($38 << 3) | 0;
   HEAP32[$9 >> 2] = $20;
   HEAP32[$10 >> 2] = $39;
   HEAP32[$11 >> 2] = $16;
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$$byval_copy6 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$byval_copy7 >> 2] = HEAP32[$11 >> 2];
   $41 = __ZNSt3__27__sort3IRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEjT0_S9_S9_T_($$byval_copy5, $$byval_copy6, $$byval_copy7, $3) | 0;
   $42 = $20;
   $43 = +HEAPF32[$39 >> 2];
   $44 = +HEAPF32[$42 >> 2];
   if ($43 < $44) {
    label = 53;
    break;
   }
   $$pre276 = $23 + ($38 << 3) + 4 | 0;
   if (!($44 < $43) ? (HEAP32[$$pre276 >> 2] | 0) >>> 0 < (HEAP32[$42 + 4 >> 2] | 0) >>> 0 : 0) {
    label = 53;
    break;
   }
   $$sroa$0$0$ptr = $15;
   while (1) {
    $51 = $$sroa$0$0$ptr + -8 | 0;
    if (($51 | 0) == ($42 | 0)) break;
    $113 = +HEAPF32[$51 >> 2];
    if ($43 < $113) {
     label = 47;
     break L4;
    }
    if (!($113 < $43) ? ($118 = HEAP32[$$sroa$0$0$ptr + -4 >> 2] | 0, (HEAP32[$$pre276 >> 2] | 0) >>> 0 < $118 >>> 0) : 0) {
     label = 51;
     break L4;
    }
    $$sroa$0$0$ptr = $51;
   }
   $53 = $42 + 8 | 0;
   $54 = $53;
   $55 = +HEAPF32[$15 >> 2];
   $56 = +HEAPF32[$23 >> 2];
   do if ($55 < $56) $$sroa$068$1 = $54; else {
    if (!($56 < $55)) {
     $60 = $23 + 4 | 0;
     if ((HEAP32[$17 >> 2] | 0) >>> 0 < (HEAP32[$60 >> 2] | 0) >>> 0) {
      $$sroa$068$1 = $54;
      break;
     } else $$pre$phi279Z2D = $60;
    } else $$pre$phi279Z2D = $23 + 4 | 0;
    $$sroa$068$0$ptr = $53;
    while (1) {
     if (($$sroa$068$0$ptr | 0) == ($15 | 0)) break L1;
     $64 = +HEAPF32[$$sroa$068$0$ptr >> 2];
     if ($64 < $56) {
      label = 25;
      break;
     }
     if (!($56 < $64) ? ($68 = HEAP32[$$sroa$068$0$ptr + 4 >> 2] | 0, $68 >>> 0 < (HEAP32[$$pre$phi279Z2D >> 2] | 0) >>> 0) : 0) {
      label = 28;
      break;
     }
     $$sroa$068$0$ptr = $$sroa$068$0$ptr + 8 | 0;
    }
    if ((label | 0) == 25) {
     label = 0;
     $$phi$trans$insert264 = $$sroa$068$0$ptr + 4 | 0;
     $$pre$phi271Z2D = $$phi$trans$insert264;
     $73 = HEAP32[$$phi$trans$insert264 >> 2] | 0;
    } else if ((label | 0) == 28) {
     label = 0;
     $$pre$phi271Z2D = $$sroa$068$0$ptr + 4 | 0;
     $73 = $68;
    }
    HEAPF32[$$sroa$068$0$ptr >> 2] = $55;
    HEAPF32[$15 >> 2] = $64;
    HEAP32[$$pre$phi271Z2D >> 2] = HEAP32[$17 >> 2];
    HEAP32[$17 >> 2] = $73;
    $$sroa$068$1 = $$sroa$068$0$ptr + 8 | 0;
   } while (0);
   if (($15 | 0) == ($$sroa$068$1 | 0)) break L1;
   $79 = $23 + 4 | 0;
   $$sroa$0$1 = $16;
   $$sroa$068$2 = $$sroa$068$1;
   while (1) {
    $$sroa$0$1$ptr = $$sroa$0$1;
    $80 = +HEAPF32[$23 >> 2];
    $$sroa$068$3 = $$sroa$068$2;
    while (1) {
     $81 = $$sroa$068$3;
     $82 = +HEAPF32[$81 >> 2];
     if ($82 < $80) break;
     if (!($80 < $82) ? (HEAP32[$81 + 4 >> 2] | 0) >>> 0 < (HEAP32[$79 >> 2] | 0) >>> 0 : 0) break;
     $$sroa$068$3 = $81 + 8 | 0;
    }
    $91 = $$sroa$068$3;
    $$sroa$0$2$ptr = $$sroa$0$1$ptr;
    while (1) {
     $92 = $$sroa$0$2$ptr + -8 | 0;
     $93 = +HEAPF32[$92 >> 2];
     if (!($93 < $80)) {
      if ($80 < $93) break;
      if ((HEAP32[$$sroa$0$2$ptr + -4 >> 2] | 0) >>> 0 >= (HEAP32[$79 >> 2] | 0) >>> 0) break;
     }
     $$sroa$0$2$ptr = $92;
    }
    if ($92 >>> 0 <= $91 >>> 0) break;
    $103 = HEAP32[$$sroa$068$3 >> 2] | 0;
    HEAPF32[$$sroa$068$3 >> 2] = $93;
    HEAP32[$92 >> 2] = $103;
    $105 = $91 + 4 | 0;
    $106 = $$sroa$0$2$ptr + -4 | 0;
    $107 = HEAP32[$105 >> 2] | 0;
    HEAP32[$105 >> 2] = HEAP32[$106 >> 2];
    HEAP32[$106 >> 2] = $107;
    $$sroa$0$1 = $92;
    $$sroa$068$2 = $91 + 8 | 0;
   }
   $111 = $$sroa$068$3;
   if ($12 >>> 0 < $111 >>> 0) break L1;
   HEAP32[$0 >> 2] = $$sroa$068$3;
   $20 = $$sroa$068$3;
   $23 = $111;
  }
  if ((label | 0) == 47) {
   label = 0;
   $$phi$trans$insert262 = $$sroa$0$0$ptr + -4 | 0;
   $$pre$phi272Z2D = $$phi$trans$insert262;
   $127 = HEAP32[$$phi$trans$insert262 >> 2] | 0;
   label = 52;
  } else if ((label | 0) == 51) {
   label = 0;
   $$pre$phi272Z2D = $$sroa$0$0$ptr + -4 | 0;
   $127 = $118;
   label = 52;
  } else if ((label | 0) == 53) {
   label = 0;
   $$2 = $41;
   $$sroa$0$3$in = $15;
   $131 = $20;
  }
  if ((label | 0) == 52) {
   label = 0;
   $121 = $20;
   $123 = HEAP32[$20 >> 2] | 0;
   HEAPF32[$20 >> 2] = $113;
   HEAP32[$51 >> 2] = $123;
   $125 = $121 + 4 | 0;
   $126 = HEAP32[$125 >> 2] | 0;
   HEAP32[$125 >> 2] = $127;
   HEAP32[$$pre$phi272Z2D >> 2] = $126;
   $$2 = $41 + 1 | 0;
   $$sroa$0$3$in = $51;
   $131 = $121;
  }
  $130 = $131 + 8 | 0;
  $132 = $130;
  if ($130 >>> 0 < $$sroa$0$3$in >>> 0) {
   $$3 = $$2;
   $$sroa$0$4 = $$sroa$0$3$in;
   $$sroa$0107$0 = $39;
   $$sroa$068$4 = $132;
   while (1) {
    $$sroa$0$4$ptr = $$sroa$0$4;
    $135 = $$sroa$0107$0;
    $136 = $135 + 4 | 0;
    $137 = +HEAPF32[$135 >> 2];
    $$sroa$068$5 = $$sroa$068$4;
    while (1) {
     $138 = $$sroa$068$5;
     $139 = +HEAPF32[$138 >> 2];
     if (!($137 < $139)) {
      if ($139 < $137) break;
      if ((HEAP32[$136 >> 2] | 0) >>> 0 >= (HEAP32[$138 + 4 >> 2] | 0) >>> 0) break;
     }
     $$sroa$068$5 = $138 + 8 | 0;
    }
    $148 = $$sroa$068$5;
    $$sroa$0$5$ptr = $$sroa$0$4$ptr;
    while (1) {
     $149 = $$sroa$0$5$ptr + -8 | 0;
     $150 = +HEAPF32[$149 >> 2];
     if ($137 < $150) break;
     if (!($150 < $137) ? (HEAP32[$136 >> 2] | 0) >>> 0 < (HEAP32[$$sroa$0$5$ptr + -4 >> 2] | 0) >>> 0 : 0) break;
     $$sroa$0$5$ptr = $149;
    }
    $157 = $149;
    if ($149 >>> 0 <= $148 >>> 0) break;
    $160 = HEAP32[$$sroa$068$5 >> 2] | 0;
    HEAPF32[$$sroa$068$5 >> 2] = $150;
    HEAP32[$149 >> 2] = $160;
    $162 = $148 + 4 | 0;
    $163 = $$sroa$0$5$ptr + -4 | 0;
    $164 = HEAP32[$162 >> 2] | 0;
    HEAP32[$162 >> 2] = HEAP32[$163 >> 2];
    HEAP32[$163 >> 2] = $164;
    $$3 = $$3 + 1 | 0;
    $$sroa$0$4 = $157;
    $$sroa$0107$0 = ($135 | 0) == ($148 | 0) ? $157 : $$sroa$0107$0;
    $$sroa$068$4 = $148 + 8 | 0;
   }
   $$4 = $$3;
   $$pre$phi275Z2D = $$sroa$068$5;
   $$sroa$0107$2$ptr = $$sroa$0107$0;
   $$sroa$068$6 = $$sroa$068$5;
  } else {
   $$4 = $$2;
   $$pre$phi275Z2D = $130;
   $$sroa$0107$2$ptr = $39;
   $$sroa$068$6 = $132;
  }
  $$sroa$068$6$ptr = $$sroa$068$6;
  do if (($$sroa$0107$2$ptr | 0) == ($$pre$phi275Z2D | 0)) $$5 = $$4; else {
   $173 = +HEAPF32[$$pre$phi275Z2D >> 2];
   $174 = +HEAPF32[$$sroa$0107$2$ptr >> 2];
   if (!($173 < $174)) {
    if ($174 < $173) {
     $$5 = $$4;
     break;
    }
    $177 = $$pre$phi275Z2D + 4 | 0;
    $178 = HEAP32[$177 >> 2] | 0;
    $179 = $$sroa$0107$2$ptr + 4 | 0;
    $180 = HEAP32[$179 >> 2] | 0;
    if ($178 >>> 0 < $180 >>> 0) {
     $$pre$phi270Z2D = $179;
     $$pre$phiZ2D = $177;
     $185 = $180;
     $186 = $178;
    } else {
     $$5 = $$4;
     break;
    }
   } else {
    $$phi$trans$insert266 = $$pre$phi275Z2D + 4 | 0;
    $$phi$trans$insert268 = $$sroa$0107$2$ptr + 4 | 0;
    $$pre$phi270Z2D = $$phi$trans$insert268;
    $$pre$phiZ2D = $$phi$trans$insert266;
    $185 = HEAP32[$$phi$trans$insert268 >> 2] | 0;
    $186 = HEAP32[$$phi$trans$insert266 >> 2] | 0;
   }
   $183 = HEAP32[$$sroa$068$6 >> 2] | 0;
   HEAPF32[$$sroa$068$6 >> 2] = $174;
   HEAP32[$$sroa$0107$2$ptr >> 2] = $183;
   HEAP32[$$pre$phiZ2D >> 2] = $185;
   HEAP32[$$pre$phi270Z2D >> 2] = $186;
   $$5 = $$4 + 1 | 0;
  } while (0);
  if (($12 | 0) == ($$pre$phi275Z2D | 0)) break;
  L95 : do if (!$$5) if ($12 >>> 0 < $$pre$phi275Z2D >>> 0) {
   $$sroa$0107$3$ptr = $131;
   while (1) {
    $191 = $$sroa$0107$3$ptr + 8 | 0;
    if (($191 | 0) == ($$pre$phi275Z2D | 0)) break L1;
    $193 = +HEAPF32[$$sroa$0107$3$ptr >> 2];
    $194 = +HEAPF32[$191 >> 2];
    if ($193 < $194) break L95;
    if (!($194 < $193) ? (HEAP32[$$sroa$0107$3$ptr + 4 >> 2] | 0) >>> 0 < (HEAP32[$$sroa$0107$3$ptr + 12 >> 2] | 0) >>> 0 : 0) break L95;
    $$sroa$0107$3$ptr = $191;
   }
  } else {
   $$sroa$0107$4$ptr = $$sroa$068$6$ptr;
   while (1) {
    $202 = $$sroa$0107$4$ptr + 8 | 0;
    if (($202 | 0) == ($13 | 0)) break L1;
    $204 = +HEAPF32[$$sroa$0107$4$ptr >> 2];
    $205 = +HEAPF32[$202 >> 2];
    if ($204 < $205) break L95;
    if (!($205 < $204) ? (HEAP32[$$sroa$0107$4$ptr + 4 >> 2] | 0) >>> 0 < (HEAP32[$$sroa$0107$4$ptr + 12 >> 2] | 0) >>> 0 : 0) break L95;
    $$sroa$0107$4$ptr = $202;
   }
  } while (0);
  if ($12 >>> 0 < $$pre$phi275Z2D >>> 0) HEAP32[$2 >> 2] = $$sroa$068$6; else HEAP32[$0 >> 2] = $$pre$phi275Z2D + 8;
 }
 do if ((label | 0) == 5) {
  HEAP32[$2 >> 2] = $15;
  $22 = +HEAPF32[$23 >> 2];
  $24 = +HEAPF32[$15 >> 2];
  if (!($22 < $24)) {
   if ($24 < $22) break;
   $27 = $23 + 4 | 0;
   $28 = HEAP32[$27 >> 2] | 0;
   $29 = HEAP32[$17 >> 2] | 0;
   if ($28 >>> 0 < $29 >>> 0) {
    $$pre$phi273Z2D = $27;
    $31 = $29;
    $32 = $28;
   } else break;
  } else {
   $$phi$trans$insert = $23 + 4 | 0;
   $$pre$phi273Z2D = $$phi$trans$insert;
   $31 = HEAP32[$17 >> 2] | 0;
   $32 = HEAP32[$$phi$trans$insert >> 2] | 0;
  }
  HEAPF32[$23 >> 2] = $24;
  HEAPF32[$15 >> 2] = $22;
  HEAP32[$$pre$phi273Z2D >> 2] = $31;
  HEAP32[$17 >> 2] = $32;
 } else if ((label | 0) == 10) {
  HEAP32[$4 >> 2] = $20;
  HEAP32[$5 >> 2] = $20 + 8;
  HEAP32[$2 >> 2] = $15;
  HEAP32[$6 >> 2] = $15;
  HEAP32[$$byval_copy5 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$$byval_copy7 >> 2] = HEAP32[$6 >> 2];
  __ZNSt3__27__sort3IRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEjT0_S9_S9_T_($$byval_copy5, $$byval_copy6, $$byval_copy7, $3) | 0;
 } else if ((label | 0) == 12) {
  HEAP32[$7 >> 2] = $20;
  HEAP32[$8 >> 2] = $13;
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$7 >> 2];
  HEAP32[$$byval_copy7 >> 2] = HEAP32[$8 >> 2];
  __ZNSt3__216__selection_sortIRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEvT0_S9_T_($$byval_copy6, $$byval_copy7, $3);
 } while (0);
 STACKTOP = sp;
 return;
}

function _decode_mcu_sub($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$017$i = 0, $$0196 = 0, $$0197304 = 0, $$0198 = 0, $$0199$lcssa = 0, $$0199303 = 0, $$0209 = 0, $$0210$lcssa = 0, $$0210302 = 0, $$0239288 = 0, $$11$ph = 0, $$11221$ph = 0, $$11255$ph = 0, $$12 = 0, $$1200 = 0, $$1211 = 0, $$12222 = 0, $$1240 = 0, $$13 = 0, $$13223 = 0, $$14 = 0, $$14224 = 0, $$15 = 0, $$15225 = 0, $$16226294 = 0, $$16295 = 0, $$17 = 0, $$17227 = 0, $$18 = 0, $$18228 = 0, $$20$ph = 0, $$20230$ph = 0, $$21 = 0, $$21231 = 0, $$22 = 0, $$2201 = 0, $$2212 = 0, $$22232 = 0, $$2241 = 0, $$2246$ph = 0, $$24 = 0, $$24234 = 0, $$3242293 = 0, $$3247 = 0, $$4203$ph = 0, $$4214$ph = 0, $$5204 = 0, $$5215 = 0, $$6205 = 0, $$6216 = 0, $$6250$ph = 0, $$7206290 = 0, $$7217289 = 0, $$8207 = 0, $$8218 = 0, $$9 = 0, $$9208 = 0, $$9219 = 0, $$in = 0, $$pn = 0, $100 = 0, $108 = 0, $110 = 0, $116 = 0, $117 = 0, $12 = 0, $121 = 0, $123 = 0, $129 = 0, $133 = 0, $134 = 0, $136 = 0, $142 = 0, $145 = 0, $146 = 0, $158 = 0, $16 = 0, $17 = 0, $170 = 0, $171 = 0, $175 = 0, $177 = 0, $183 = 0, $187 = 0, $188 = 0, $2 = 0, $202 = 0, $204 = 0, $205 = 0, $24 = 0, $3 = 0, $41 = 0, $43 = 0, $45 = 0, $46 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $64 = 0, $68 = 0, $69 = 0, $73 = 0, $75 = 0, $81 = 0, $86 = 0, $88 = 0, $9 = 0, $90 = 0, $96 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $2 = sp + 20 | 0;
 $3 = sp;
 $5 = HEAP32[$0 + 468 >> 2] | 0;
 $6 = $0 + 280 | 0;
 if (HEAP32[$6 >> 2] | 0 ? ($9 = $5 + 44 | 0, (HEAP32[$9 >> 2] | 0) == 0) : 0) {
  $12 = $5 + 16 | 0;
  $16 = HEAP32[$0 + 464 >> 2] | 0;
  $17 = $16 + 24 | 0;
  HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + ((HEAP32[$12 >> 2] | 0) / 8 | 0);
  HEAP32[$12 >> 2] = 0;
  if (!(FUNCTION_TABLE_ii[HEAP32[$16 + 8 >> 2] & 127]($0) | 0)) {
   $$9 = 0;
   STACKTOP = sp;
   return $$9 | 0;
  }
  $24 = $0 + 340 | 0;
  if ((HEAP32[$24 >> 2] | 0) > 0) {
   $$017$i = 0;
   do {
    HEAP32[$5 + 24 + ($$017$i << 2) >> 2] = 0;
    $$017$i = $$017$i + 1 | 0;
   } while (($$017$i | 0) < (HEAP32[$24 >> 2] | 0));
  }
  HEAP32[$5 + 20 >> 2] = 0;
  HEAP32[$9 >> 2] = HEAP32[$6 >> 2];
  if (!(HEAP32[$0 + 440 >> 2] | 0)) HEAP32[$5 + 40 >> 2] = 0;
 }
 if (!(HEAP32[$5 + 40 >> 2] | 0)) {
  $41 = HEAP32[$0 + 432 >> 2] | 0;
  $43 = HEAP32[$0 + 436 >> 2] | 0;
  HEAP32[$2 + 16 >> 2] = $0;
  $45 = $0 + 24 | 0;
  $46 = HEAP32[$45 >> 2] | 0;
  $47 = HEAP32[$46 >> 2] | 0;
  HEAP32[$2 >> 2] = $47;
  $49 = HEAP32[$46 + 4 >> 2] | 0;
  $50 = $2 + 4 | 0;
  HEAP32[$50 >> 2] = $49;
  $51 = $5 + 12 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  $53 = $5 + 16 | 0;
  $54 = HEAP32[$53 >> 2] | 0;
  $55 = $5 + 20 | 0;
  HEAP32[$3 >> 2] = HEAP32[$55 >> 2];
  HEAP32[$3 + 4 >> 2] = HEAP32[$55 + 4 >> 2];
  HEAP32[$3 + 8 >> 2] = HEAP32[$55 + 8 >> 2];
  HEAP32[$3 + 12 >> 2] = HEAP32[$55 + 12 >> 2];
  HEAP32[$3 + 16 >> 2] = HEAP32[$55 + 16 >> 2];
  $56 = $0 + 368 | 0;
  do if ((HEAP32[$56 >> 2] | 0) > 0) {
   $59 = $2 + 8 | 0;
   $60 = $2 + 12 | 0;
   $$0197304 = 0;
   $$0199303 = $52;
   $$0210302 = $54;
   L18 : while (1) {
    $62 = HEAP32[$1 + ($$0197304 << 2) >> 2] | 0;
    $64 = HEAP32[$5 + 100 + ($$0197304 << 2) >> 2] | 0;
    if (($$0210302 | 0) < 8) {
     if (!(_jpeg_fill_bit_buffer($2, $$0199303, $$0210302, 0) | 0)) {
      $$9 = 0;
      label = 67;
      break;
     }
     $68 = HEAP32[$59 >> 2] | 0;
     $69 = HEAP32[$60 >> 2] | 0;
     if (($69 | 0) < 8) {
      $$0209 = 1;
      $$2201 = $68;
      $$2212 = $69;
      label = 17;
     } else {
      $$1200 = $68;
      $$1211 = $69;
      label = 15;
     }
    } else {
     $$1200 = $$0199303;
     $$1211 = $$0210302;
     label = 15;
    }
    if ((label | 0) == 15) {
     label = 0;
     $73 = $$1200 >> $$1211 + -8 & 255;
     $75 = HEAP32[$64 + 144 + ($73 << 2) >> 2] | 0;
     if (!$75) {
      $$0209 = 9;
      $$2201 = $$1200;
      $$2212 = $$1211;
      label = 17;
     } else {
      $$2246$ph = HEAPU8[$64 + 1168 + $73 >> 0] | 0;
      $$4203$ph = $$1200;
      $$4214$ph = $$1211 - $75 | 0;
     }
    }
    if ((label | 0) == 17) {
     label = 0;
     $81 = _jpeg_huff_decode($2, $$2201, $$2212, $64, $$0209) | 0;
     if (($81 | 0) < 0) {
      $$9 = 0;
      label = 67;
      break;
     }
     $$2246$ph = $81;
     $$4203$ph = HEAP32[$59 >> 2] | 0;
     $$4214$ph = HEAP32[$60 >> 2] | 0;
    }
    $86 = HEAP32[$5 + 140 + ($$0197304 << 2) >> 2] | 0;
    $88 = HEAP32[$5 + 180 + ($$0197304 << 2) >> 2] | 0;
    $90 = ($$2246$ph | 0) != 0;
    L30 : do if (!$88) if ($90) {
     if (($$4214$ph | 0) < ($$2246$ph | 0)) {
      if (!(_jpeg_fill_bit_buffer($2, $$4203$ph, $$4214$ph, $$2246$ph) | 0)) {
       $$9 = 0;
       label = 67;
       break L18;
      }
      $$14 = HEAP32[$59 >> 2] | 0;
      $$14224 = HEAP32[$60 >> 2] | 0;
     } else {
      $$14 = $$4203$ph;
      $$14224 = $$4214$ph;
     }
     $$15 = $$14;
     $$15225 = $$14224 - $$2246$ph | 0;
     $$2241 = 1;
     label = 47;
    } else {
     $$15 = $$4203$ph;
     $$15225 = $$4214$ph;
     $$2241 = 1;
     label = 47;
    } else {
     if ($90) {
      if (($$4214$ph | 0) < ($$2246$ph | 0)) {
       if (!(_jpeg_fill_bit_buffer($2, $$4203$ph, $$4214$ph, $$2246$ph) | 0)) {
        $$9 = 0;
        label = 67;
        break L18;
       }
       $$5204 = HEAP32[$59 >> 2] | 0;
       $$5215 = HEAP32[$60 >> 2] | 0;
      } else {
       $$5204 = $$4203$ph;
       $$5215 = $$4214$ph;
      }
      $96 = $$5215 - $$2246$ph | 0;
      $99 = HEAP32[5184 + ($$2246$ph << 2) >> 2] | 0;
      $100 = $$5204 >> $96 & $99;
      $$3247 = $100 - (($100 | 0) > (HEAP32[5184 + ($$2246$ph + -1 << 2) >> 2] | 0) ? 0 : $99) | 0;
      $$6205 = $$5204;
      $$6216 = $96;
     } else {
      $$3247 = 0;
      $$6205 = $$4203$ph;
      $$6216 = $$4214$ph;
     }
     $108 = $3 + 4 + (HEAP32[$0 + 372 + ($$0197304 << 2) >> 2] << 2) | 0;
     $110 = (HEAP32[$108 >> 2] | 0) + $$3247 | 0;
     HEAP32[$108 >> 2] = $110;
     HEAP16[$62 >> 1] = $110;
     if (($88 | 0) > 1) {
      $$0239288 = 1;
      $$7206290 = $$6205;
      $$7217289 = $$6216;
      while (1) {
       if (($$7217289 | 0) < 8) {
        if (!(_jpeg_fill_bit_buffer($2, $$7206290, $$7217289, 0) | 0)) {
         $$9 = 0;
         label = 67;
         break L18;
        }
        $116 = HEAP32[$59 >> 2] | 0;
        $117 = HEAP32[$60 >> 2] | 0;
        if (($117 | 0) < 8) {
         $$0198 = 1;
         $$9208 = $116;
         $$9219 = $117;
         label = 32;
        } else {
         $$8207 = $116;
         $$8218 = $117;
         label = 30;
        }
       } else {
        $$8207 = $$7206290;
        $$8218 = $$7217289;
        label = 30;
       }
       if ((label | 0) == 30) {
        label = 0;
        $121 = $$8207 >> $$8218 + -8 & 255;
        $123 = HEAP32[$86 + 144 + ($121 << 2) >> 2] | 0;
        if (!$123) {
         $$0198 = 9;
         $$9208 = $$8207;
         $$9219 = $$8218;
         label = 32;
        } else {
         $$11$ph = $$8207;
         $$11221$ph = $$8218 - $123 | 0;
         $$6250$ph = HEAPU8[$86 + 1168 + $121 >> 0] | 0;
        }
       }
       if ((label | 0) == 32) {
        label = 0;
        $129 = _jpeg_huff_decode($2, $$9208, $$9219, $86, $$0198) | 0;
        if (($129 | 0) < 0) {
         $$9 = 0;
         label = 67;
         break L18;
        }
        $$11$ph = HEAP32[$59 >> 2] | 0;
        $$11221$ph = HEAP32[$60 >> 2] | 0;
        $$6250$ph = $129;
       }
       $133 = $$6250$ph >>> 4;
       $134 = $$6250$ph & 15;
       if (!$134) {
        if (($133 | 0) != 15) {
         $$24 = $$11$ph;
         $$24234 = $$11221$ph;
         break L30;
        }
        $$1240 = $$0239288 + 15 | 0;
        $$13 = $$11$ph;
        $$13223 = $$11221$ph;
       } else {
        $136 = $133 + $$0239288 | 0;
        if (($$11221$ph | 0) < ($134 | 0)) {
         if (!(_jpeg_fill_bit_buffer($2, $$11$ph, $$11221$ph, $134) | 0)) {
          $$9 = 0;
          label = 67;
          break L18;
         }
         $$12 = HEAP32[$59 >> 2] | 0;
         $$12222 = HEAP32[$60 >> 2] | 0;
        } else {
         $$12 = $$11$ph;
         $$12222 = $$11221$ph;
        }
        $142 = $$12222 - $134 | 0;
        $145 = HEAP32[5184 + ($134 << 2) >> 2] | 0;
        $146 = $$12 >> $142 & $145;
        HEAP16[$62 + (HEAP32[$41 + ($136 << 2) >> 2] << 1) >> 1] = $146 - (($146 | 0) > (HEAP32[5184 + ($134 + -1 << 2) >> 2] | 0) ? 0 : $145);
        $$1240 = $136;
        $$13 = $$12;
        $$13223 = $142;
       }
       $158 = $$1240 + 1 | 0;
       if (($158 | 0) < ($88 | 0)) {
        $$0239288 = $158;
        $$7206290 = $$13;
        $$7217289 = $$13223;
       } else {
        $$15 = $$13;
        $$15225 = $$13223;
        $$2241 = $158;
        label = 47;
        break;
       }
      }
     } else {
      $$15 = $$6205;
      $$15225 = $$6216;
      $$2241 = 1;
      label = 47;
     }
    } while (0);
    L67 : do if ((label | 0) == 47) {
     label = 0;
     if (($$2241 | 0) > ($43 | 0)) {
      $$24 = $$15;
      $$24234 = $$15225;
     } else {
      $$16226294 = $$15225;
      $$16295 = $$15;
      $$3242293 = $$2241;
      while (1) {
       if (($$16226294 | 0) < 8) {
        if (!(_jpeg_fill_bit_buffer($2, $$16295, $$16226294, 0) | 0)) {
         $$9 = 0;
         label = 67;
         break L18;
        }
        $170 = HEAP32[$59 >> 2] | 0;
        $171 = HEAP32[$60 >> 2] | 0;
        if (($171 | 0) < 8) {
         $$0196 = 1;
         $$18 = $170;
         $$18228 = $171;
         label = 54;
        } else {
         $$17 = $170;
         $$17227 = $171;
         label = 52;
        }
       } else {
        $$17 = $$16295;
        $$17227 = $$16226294;
        label = 52;
       }
       if ((label | 0) == 52) {
        label = 0;
        $175 = $$17 >> $$17227 + -8 & 255;
        $177 = HEAP32[$86 + 144 + ($175 << 2) >> 2] | 0;
        if (!$177) {
         $$0196 = 9;
         $$18 = $$17;
         $$18228 = $$17227;
         label = 54;
        } else {
         $$11255$ph = HEAPU8[$86 + 1168 + $175 >> 0] | 0;
         $$20$ph = $$17;
         $$20230$ph = $$17227 - $177 | 0;
        }
       }
       if ((label | 0) == 54) {
        label = 0;
        $183 = _jpeg_huff_decode($2, $$18, $$18228, $86, $$0196) | 0;
        if (($183 | 0) < 0) {
         $$9 = 0;
         label = 67;
         break L18;
        }
        $$11255$ph = $183;
        $$20$ph = HEAP32[$59 >> 2] | 0;
        $$20230$ph = HEAP32[$60 >> 2] | 0;
       }
       $187 = $$11255$ph >>> 4;
       $188 = $$11255$ph & 15;
       if (!$188) if (($187 | 0) == 15) {
        $$22 = $$20$ph;
        $$22232 = $$20230$ph;
        $$pn = 15;
       } else {
        $$24 = $$20$ph;
        $$24234 = $$20230$ph;
        break L67;
       } else {
        if (($$20230$ph | 0) < ($188 | 0)) {
         if (!(_jpeg_fill_bit_buffer($2, $$20$ph, $$20230$ph, $188) | 0)) {
          $$9 = 0;
          label = 67;
          break L18;
         }
         $$21 = HEAP32[$59 >> 2] | 0;
         $$21231 = HEAP32[$60 >> 2] | 0;
        } else {
         $$21 = $$20$ph;
         $$21231 = $$20230$ph;
        }
        $$22 = $$21;
        $$22232 = $$21231 - $188 | 0;
        $$pn = $187;
       }
       $$3242293 = $$3242293 + 1 + $$pn | 0;
       if (($$3242293 | 0) > ($43 | 0)) {
        $$24 = $$22;
        $$24234 = $$22232;
        break;
       } else {
        $$16226294 = $$22232;
        $$16295 = $$22;
       }
      }
     }
    } while (0);
    $$0197304 = $$0197304 + 1 | 0;
    if (($$0197304 | 0) >= (HEAP32[$56 >> 2] | 0)) {
     label = 64;
     break;
    } else {
     $$0199303 = $$24;
     $$0210302 = $$24234;
    }
   }
   if ((label | 0) == 64) {
    $$0199$lcssa = $$24;
    $$0210$lcssa = $$24234;
    $$in = HEAP32[$45 >> 2] | 0;
    $202 = HEAP32[$2 >> 2] | 0;
    $204 = HEAP32[$50 >> 2] | 0;
    break;
   } else if ((label | 0) == 67) {
    STACKTOP = sp;
    return $$9 | 0;
   }
  } else {
   $$0199$lcssa = $52;
   $$0210$lcssa = $54;
   $$in = $46;
   $202 = $47;
   $204 = $49;
  } while (0);
  HEAP32[$$in >> 2] = $202;
  HEAP32[$$in + 4 >> 2] = $204;
  HEAP32[$51 >> 2] = $$0199$lcssa;
  HEAP32[$53 >> 2] = $$0210$lcssa;
  HEAP32[$55 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$55 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$55 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  HEAP32[$55 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
  HEAP32[$55 + 16 >> 2] = HEAP32[$3 + 16 >> 2];
 }
 $205 = $5 + 44 | 0;
 HEAP32[$205 >> 2] = (HEAP32[$205 >> 2] | 0) + -1;
 $$9 = 1;
 STACKTOP = sp;
 return $$9 | 0;
}

function _decode_mcu_66($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$017$i = 0, $$0188 = 0, $$0189296 = 0, $$0190 = 0, $$0191$lcssa = 0, $$0191295 = 0, $$0201 = 0, $$0202$lcssa = 0, $$0202294 = 0, $$0231280 = 0, $$11$ph = 0, $$11213$ph = 0, $$11247$ph = 0, $$1192 = 0, $$12 = 0, $$1203 = 0, $$12214 = 0, $$1232 = 0, $$13 = 0, $$13215 = 0, $$14 = 0, $$14216 = 0, $$16218286 = 0, $$16218286$ph = 0, $$16287 = 0, $$16287$ph = 0, $$17 = 0, $$17219 = 0, $$18 = 0, $$18220 = 0, $$20$ph = 0, $$20222$ph = 0, $$21 = 0, $$21223 = 0, $$2193 = 0, $$22 = 0, $$2204 = 0, $$22224 = 0, $$2238$ph = 0, $$24 = 0, $$24226 = 0, $$3234285 = 0, $$3234285$ph = 0, $$3239 = 0, $$4195$ph = 0, $$4206$ph = 0, $$5196 = 0, $$5207 = 0, $$6197 = 0, $$6208 = 0, $$6242$ph = 0, $$7198282 = 0, $$7209281 = 0, $$8199 = 0, $$8210 = 0, $$9 = 0, $$9200 = 0, $$9211 = 0, $$in = 0, $$pn = 0, $104 = 0, $106 = 0, $112 = 0, $113 = 0, $117 = 0, $119 = 0, $12 = 0, $125 = 0, $129 = 0, $130 = 0, $132 = 0, $138 = 0, $141 = 0, $142 = 0, $16 = 0, $166 = 0, $167 = 0, $17 = 0, $171 = 0, $173 = 0, $179 = 0, $183 = 0, $184 = 0, $198 = 0, $2 = 0, $200 = 0, $201 = 0, $24 = 0, $3 = 0, $41 = 0, $42 = 0, $43 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $55 = 0, $56 = 0, $58 = 0, $6 = 0, $60 = 0, $64 = 0, $65 = 0, $69 = 0, $71 = 0, $77 = 0, $82 = 0, $84 = 0, $86 = 0, $9 = 0, $92 = 0, $95 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $2 = sp + 20 | 0;
 $3 = sp;
 $5 = HEAP32[$0 + 468 >> 2] | 0;
 $6 = $0 + 280 | 0;
 if (HEAP32[$6 >> 2] | 0 ? ($9 = $5 + 44 | 0, (HEAP32[$9 >> 2] | 0) == 0) : 0) {
  $12 = $5 + 16 | 0;
  $16 = HEAP32[$0 + 464 >> 2] | 0;
  $17 = $16 + 24 | 0;
  HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + ((HEAP32[$12 >> 2] | 0) / 8 | 0);
  HEAP32[$12 >> 2] = 0;
  if (!(FUNCTION_TABLE_ii[HEAP32[$16 + 8 >> 2] & 127]($0) | 0)) {
   $$9 = 0;
   STACKTOP = sp;
   return $$9 | 0;
  }
  $24 = $0 + 340 | 0;
  if ((HEAP32[$24 >> 2] | 0) > 0) {
   $$017$i = 0;
   do {
    HEAP32[$5 + 24 + ($$017$i << 2) >> 2] = 0;
    $$017$i = $$017$i + 1 | 0;
   } while (($$017$i | 0) < (HEAP32[$24 >> 2] | 0));
  }
  HEAP32[$5 + 20 >> 2] = 0;
  HEAP32[$9 >> 2] = HEAP32[$6 >> 2];
  if (!(HEAP32[$0 + 440 >> 2] | 0)) HEAP32[$5 + 40 >> 2] = 0;
 }
 if (!(HEAP32[$5 + 40 >> 2] | 0)) {
  HEAP32[$2 + 16 >> 2] = $0;
  $41 = $0 + 24 | 0;
  $42 = HEAP32[$41 >> 2] | 0;
  $43 = HEAP32[$42 >> 2] | 0;
  HEAP32[$2 >> 2] = $43;
  $45 = HEAP32[$42 + 4 >> 2] | 0;
  $46 = $2 + 4 | 0;
  HEAP32[$46 >> 2] = $45;
  $47 = $5 + 12 | 0;
  $48 = HEAP32[$47 >> 2] | 0;
  $49 = $5 + 16 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  $51 = $5 + 20 | 0;
  HEAP32[$3 >> 2] = HEAP32[$51 >> 2];
  HEAP32[$3 + 4 >> 2] = HEAP32[$51 + 4 >> 2];
  HEAP32[$3 + 8 >> 2] = HEAP32[$51 + 8 >> 2];
  HEAP32[$3 + 12 >> 2] = HEAP32[$51 + 12 >> 2];
  HEAP32[$3 + 16 >> 2] = HEAP32[$51 + 16 >> 2];
  $52 = $0 + 368 | 0;
  do if ((HEAP32[$52 >> 2] | 0) > 0) {
   $55 = $2 + 8 | 0;
   $56 = $2 + 12 | 0;
   $$0189296 = 0;
   $$0191295 = $48;
   $$0202294 = $50;
   L18 : while (1) {
    $58 = HEAP32[$1 + ($$0189296 << 2) >> 2] | 0;
    $60 = HEAP32[$5 + 100 + ($$0189296 << 2) >> 2] | 0;
    if (($$0202294 | 0) < 8) {
     if (!(_jpeg_fill_bit_buffer($2, $$0191295, $$0202294, 0) | 0)) {
      $$9 = 0;
      label = 67;
      break;
     }
     $64 = HEAP32[$55 >> 2] | 0;
     $65 = HEAP32[$56 >> 2] | 0;
     if (($65 | 0) < 8) {
      $$0201 = 1;
      $$2193 = $64;
      $$2204 = $65;
      label = 17;
     } else {
      $$1192 = $64;
      $$1203 = $65;
      label = 15;
     }
    } else {
     $$1192 = $$0191295;
     $$1203 = $$0202294;
     label = 15;
    }
    if ((label | 0) == 15) {
     label = 0;
     $69 = $$1192 >> $$1203 + -8 & 255;
     $71 = HEAP32[$60 + 144 + ($69 << 2) >> 2] | 0;
     if (!$71) {
      $$0201 = 9;
      $$2193 = $$1192;
      $$2204 = $$1203;
      label = 17;
     } else {
      $$2238$ph = HEAPU8[$60 + 1168 + $69 >> 0] | 0;
      $$4195$ph = $$1192;
      $$4206$ph = $$1203 - $71 | 0;
     }
    }
    if ((label | 0) == 17) {
     label = 0;
     $77 = _jpeg_huff_decode($2, $$2193, $$2204, $60, $$0201) | 0;
     if (($77 | 0) < 0) {
      $$9 = 0;
      label = 67;
      break;
     }
     $$2238$ph = $77;
     $$4195$ph = HEAP32[$55 >> 2] | 0;
     $$4206$ph = HEAP32[$56 >> 2] | 0;
    }
    $82 = HEAP32[$5 + 140 + ($$0189296 << 2) >> 2] | 0;
    $84 = HEAP32[$5 + 180 + ($$0189296 << 2) >> 2] | 0;
    $86 = ($$2238$ph | 0) != 0;
    L30 : do if (!$84) if ($86) {
     if (($$4206$ph | 0) < ($$2238$ph | 0)) {
      if (!(_jpeg_fill_bit_buffer($2, $$4195$ph, $$4206$ph, $$2238$ph) | 0)) {
       $$9 = 0;
       label = 67;
       break L18;
      }
      $$14 = HEAP32[$55 >> 2] | 0;
      $$14216 = HEAP32[$56 >> 2] | 0;
     } else {
      $$14 = $$4195$ph;
      $$14216 = $$4206$ph;
     }
     $$16218286$ph = $$14216 - $$2238$ph | 0;
     $$16287$ph = $$14;
     $$3234285$ph = 1;
     label = 48;
    } else {
     $$16218286$ph = $$4206$ph;
     $$16287$ph = $$4195$ph;
     $$3234285$ph = 1;
     label = 48;
    } else {
     if ($86) {
      if (($$4206$ph | 0) < ($$2238$ph | 0)) {
       if (!(_jpeg_fill_bit_buffer($2, $$4195$ph, $$4206$ph, $$2238$ph) | 0)) {
        $$9 = 0;
        label = 67;
        break L18;
       }
       $$5196 = HEAP32[$55 >> 2] | 0;
       $$5207 = HEAP32[$56 >> 2] | 0;
      } else {
       $$5196 = $$4195$ph;
       $$5207 = $$4206$ph;
      }
      $92 = $$5207 - $$2238$ph | 0;
      $95 = HEAP32[5184 + ($$2238$ph << 2) >> 2] | 0;
      $96 = $$5196 >> $92 & $95;
      $$3239 = $96 - (($96 | 0) > (HEAP32[5184 + ($$2238$ph + -1 << 2) >> 2] | 0) ? 0 : $95) | 0;
      $$6197 = $$5196;
      $$6208 = $92;
     } else {
      $$3239 = 0;
      $$6197 = $$4195$ph;
      $$6208 = $$4206$ph;
     }
     $104 = $3 + 4 + (HEAP32[$0 + 372 + ($$0189296 << 2) >> 2] << 2) | 0;
     $106 = (HEAP32[$104 >> 2] | 0) + $$3239 | 0;
     HEAP32[$104 >> 2] = $106;
     HEAP16[$58 >> 1] = $106;
     if (($84 | 0) > 1) {
      $$0231280 = 1;
      $$7198282 = $$6197;
      $$7209281 = $$6208;
      while (1) {
       if (($$7209281 | 0) < 8) {
        if (!(_jpeg_fill_bit_buffer($2, $$7198282, $$7209281, 0) | 0)) {
         $$9 = 0;
         label = 67;
         break L18;
        }
        $112 = HEAP32[$55 >> 2] | 0;
        $113 = HEAP32[$56 >> 2] | 0;
        if (($113 | 0) < 8) {
         $$0190 = 1;
         $$9200 = $112;
         $$9211 = $113;
         label = 32;
        } else {
         $$8199 = $112;
         $$8210 = $113;
         label = 30;
        }
       } else {
        $$8199 = $$7198282;
        $$8210 = $$7209281;
        label = 30;
       }
       if ((label | 0) == 30) {
        label = 0;
        $117 = $$8199 >> $$8210 + -8 & 255;
        $119 = HEAP32[$82 + 144 + ($117 << 2) >> 2] | 0;
        if (!$119) {
         $$0190 = 9;
         $$9200 = $$8199;
         $$9211 = $$8210;
         label = 32;
        } else {
         $$11$ph = $$8199;
         $$11213$ph = $$8210 - $119 | 0;
         $$6242$ph = HEAPU8[$82 + 1168 + $117 >> 0] | 0;
        }
       }
       if ((label | 0) == 32) {
        label = 0;
        $125 = _jpeg_huff_decode($2, $$9200, $$9211, $82, $$0190) | 0;
        if (($125 | 0) < 0) {
         $$9 = 0;
         label = 67;
         break L18;
        }
        $$11$ph = HEAP32[$55 >> 2] | 0;
        $$11213$ph = HEAP32[$56 >> 2] | 0;
        $$6242$ph = $125;
       }
       $129 = $$6242$ph >>> 4;
       $130 = $$6242$ph & 15;
       if (!$130) {
        if (($129 | 0) != 15) {
         $$24 = $$11$ph;
         $$24226 = $$11213$ph;
         break L30;
        }
        $$1232 = $$0231280 + 15 | 0;
        $$13 = $$11$ph;
        $$13215 = $$11213$ph;
       } else {
        $132 = $129 + $$0231280 | 0;
        if (($$11213$ph | 0) < ($130 | 0)) {
         if (!(_jpeg_fill_bit_buffer($2, $$11$ph, $$11213$ph, $130) | 0)) {
          $$9 = 0;
          label = 67;
          break L18;
         }
         $$12 = HEAP32[$55 >> 2] | 0;
         $$12214 = HEAP32[$56 >> 2] | 0;
        } else {
         $$12 = $$11$ph;
         $$12214 = $$11213$ph;
        }
        $138 = $$12214 - $130 | 0;
        $141 = HEAP32[5184 + ($130 << 2) >> 2] | 0;
        $142 = $$12 >> $138 & $141;
        HEAP16[$58 + (HEAP32[2576 + ($132 << 2) >> 2] << 1) >> 1] = $142 - (($142 | 0) > (HEAP32[5184 + ($130 + -1 << 2) >> 2] | 0) ? 0 : $141);
        $$1232 = $132;
        $$13 = $$12;
        $$13215 = $138;
       }
       $$0231280 = $$1232 + 1 | 0;
       if (($$0231280 | 0) >= ($84 | 0)) break; else {
        $$7198282 = $$13;
        $$7209281 = $$13215;
       }
      }
      if (($$1232 | 0) < 63) {
       $$16218286$ph = $$13215;
       $$16287$ph = $$13;
       $$3234285$ph = $$0231280;
       label = 48;
      } else {
       $$24 = $$13;
       $$24226 = $$13215;
      }
     } else {
      $$16218286$ph = $$6208;
      $$16287$ph = $$6197;
      $$3234285$ph = 1;
      label = 48;
     }
    } while (0);
    L68 : do if ((label | 0) == 48) {
     label = 0;
     $$16218286 = $$16218286$ph;
     $$16287 = $$16287$ph;
     $$3234285 = $$3234285$ph;
     while (1) {
      if (($$16218286 | 0) < 8) {
       if (!(_jpeg_fill_bit_buffer($2, $$16287, $$16218286, 0) | 0)) {
        $$9 = 0;
        label = 67;
        break L18;
       }
       $166 = HEAP32[$55 >> 2] | 0;
       $167 = HEAP32[$56 >> 2] | 0;
       if (($167 | 0) < 8) {
        $$0188 = 1;
        $$18 = $166;
        $$18220 = $167;
        label = 54;
       } else {
        $$17 = $166;
        $$17219 = $167;
        label = 52;
       }
      } else {
       $$17 = $$16287;
       $$17219 = $$16218286;
       label = 52;
      }
      if ((label | 0) == 52) {
       label = 0;
       $171 = $$17 >> $$17219 + -8 & 255;
       $173 = HEAP32[$82 + 144 + ($171 << 2) >> 2] | 0;
       if (!$173) {
        $$0188 = 9;
        $$18 = $$17;
        $$18220 = $$17219;
        label = 54;
       } else {
        $$11247$ph = HEAPU8[$82 + 1168 + $171 >> 0] | 0;
        $$20$ph = $$17;
        $$20222$ph = $$17219 - $173 | 0;
       }
      }
      if ((label | 0) == 54) {
       label = 0;
       $179 = _jpeg_huff_decode($2, $$18, $$18220, $82, $$0188) | 0;
       if (($179 | 0) < 0) {
        $$9 = 0;
        label = 67;
        break L18;
       }
       $$11247$ph = $179;
       $$20$ph = HEAP32[$55 >> 2] | 0;
       $$20222$ph = HEAP32[$56 >> 2] | 0;
      }
      $183 = $$11247$ph >>> 4;
      $184 = $$11247$ph & 15;
      if (!$184) if (($183 | 0) == 15) {
       $$22 = $$20$ph;
       $$22224 = $$20222$ph;
       $$pn = 15;
      } else {
       $$24 = $$20$ph;
       $$24226 = $$20222$ph;
       break L68;
      } else {
       if (($$20222$ph | 0) < ($184 | 0)) {
        if (!(_jpeg_fill_bit_buffer($2, $$20$ph, $$20222$ph, $184) | 0)) {
         $$9 = 0;
         label = 67;
         break L18;
        }
        $$21 = HEAP32[$55 >> 2] | 0;
        $$21223 = HEAP32[$56 >> 2] | 0;
       } else {
        $$21 = $$20$ph;
        $$21223 = $$20222$ph;
       }
       $$22 = $$21;
       $$22224 = $$21223 - $184 | 0;
       $$pn = $183;
      }
      $$3234285 = $$3234285 + 1 + $$pn | 0;
      if (($$3234285 | 0) >= 64) {
       $$24 = $$22;
       $$24226 = $$22224;
       break;
      } else {
       $$16218286 = $$22224;
       $$16287 = $$22;
      }
     }
    } while (0);
    $$0189296 = $$0189296 + 1 | 0;
    if (($$0189296 | 0) >= (HEAP32[$52 >> 2] | 0)) {
     label = 64;
     break;
    } else {
     $$0191295 = $$24;
     $$0202294 = $$24226;
    }
   }
   if ((label | 0) == 64) {
    $$0191$lcssa = $$24;
    $$0202$lcssa = $$24226;
    $$in = HEAP32[$41 >> 2] | 0;
    $198 = HEAP32[$2 >> 2] | 0;
    $200 = HEAP32[$46 >> 2] | 0;
    break;
   } else if ((label | 0) == 67) {
    STACKTOP = sp;
    return $$9 | 0;
   }
  } else {
   $$0191$lcssa = $48;
   $$0202$lcssa = $50;
   $$in = $42;
   $198 = $43;
   $200 = $45;
  } while (0);
  HEAP32[$$in >> 2] = $198;
  HEAP32[$$in + 4 >> 2] = $200;
  HEAP32[$47 >> 2] = $$0191$lcssa;
  HEAP32[$49 >> 2] = $$0202$lcssa;
  HEAP32[$51 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$51 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$51 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  HEAP32[$51 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
  HEAP32[$51 + 16 >> 2] = HEAP32[$3 + 16 >> 2];
 }
 $201 = $5 + 44 | 0;
 HEAP32[$201 >> 2] = (HEAP32[$201 >> 2] | 0) + -1;
 $$9 = 1;
 STACKTOP = sp;
 return $$9 | 0;
}

function _free($0) {
 $0 = $0 | 0;
 var $$0211$i = 0, $$0211$in$i = 0, $$0381438 = 0, $$0382$lcssa = 0, $$0382437 = 0, $$0394 = 0, $$0401 = 0, $$1 = 0, $$1380 = 0, $$1385 = 0, $$1385$be = 0, $$1385$ph = 0, $$1388 = 0, $$1388$be = 0, $$1388$ph = 0, $$1396 = 0, $$1396$be = 0, $$1396$ph = 0, $$1400 = 0, $$1400$be = 0, $$1400$ph = 0, $$2 = 0, $$3 = 0, $$3398 = 0, $$pre$phi444Z2D = 0, $$pre$phi446Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $105 = 0, $106 = 0, $114 = 0, $115 = 0, $116 = 0, $124 = 0, $13 = 0, $132 = 0, $137 = 0, $138 = 0, $141 = 0, $143 = 0, $145 = 0, $16 = 0, $160 = 0, $165 = 0, $167 = 0, $17 = 0, $170 = 0, $173 = 0, $176 = 0, $179 = 0, $180 = 0, $181 = 0, $183 = 0, $185 = 0, $186 = 0, $188 = 0, $189 = 0, $195 = 0, $196 = 0, $2 = 0, $205 = 0, $21 = 0, $210 = 0, $213 = 0, $214 = 0, $220 = 0, $235 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $244 = 0, $245 = 0, $251 = 0, $256 = 0, $257 = 0, $26 = 0, $260 = 0, $262 = 0, $265 = 0, $270 = 0, $276 = 0, $28 = 0, $280 = 0, $281 = 0, $288 = 0, $3 = 0, $300 = 0, $305 = 0, $312 = 0, $313 = 0, $314 = 0, $323 = 0, $41 = 0, $46 = 0, $48 = 0, $51 = 0, $53 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $65 = 0, $66 = 0, $68 = 0, $69 = 0, $7 = 0, $74 = 0, $75 = 0, $84 = 0, $89 = 0, $9 = 0, $92 = 0, $93 = 0, $99 = 0;
 if (!$0) return;
 $2 = $0 + -8 | 0;
 $3 = HEAP32[16739] | 0;
 if ($2 >>> 0 < $3 >>> 0) _abort();
 $6 = HEAP32[$0 + -4 >> 2] | 0;
 $7 = $6 & 3;
 if (($7 | 0) == 1) _abort();
 $9 = $6 & -8;
 $10 = $2 + $9 | 0;
 L10 : do if (!($6 & 1)) {
  $13 = HEAP32[$2 >> 2] | 0;
  if (!$7) return;
  $16 = $2 + (0 - $13) | 0;
  $17 = $13 + $9 | 0;
  if ($16 >>> 0 < $3 >>> 0) _abort();
  if ((HEAP32[16740] | 0) == ($16 | 0)) {
   $105 = $10 + 4 | 0;
   $106 = HEAP32[$105 >> 2] | 0;
   if (($106 & 3 | 0) != 3) {
    $$1 = $16;
    $$1380 = $17;
    $114 = $16;
    break;
   }
   HEAP32[16737] = $17;
   HEAP32[$105 >> 2] = $106 & -2;
   HEAP32[$16 + 4 >> 2] = $17 | 1;
   HEAP32[$16 + $17 >> 2] = $17;
   return;
  }
  $21 = $13 >>> 3;
  if ($13 >>> 0 < 256) {
   $24 = HEAP32[$16 + 8 >> 2] | 0;
   $26 = HEAP32[$16 + 12 >> 2] | 0;
   $28 = 66980 + ($21 << 1 << 2) | 0;
   if (($24 | 0) != ($28 | 0)) {
    if ($3 >>> 0 > $24 >>> 0) _abort();
    if ((HEAP32[$24 + 12 >> 2] | 0) != ($16 | 0)) _abort();
   }
   if (($26 | 0) == ($24 | 0)) {
    HEAP32[16735] = HEAP32[16735] & ~(1 << $21);
    $$1 = $16;
    $$1380 = $17;
    $114 = $16;
    break;
   }
   if (($26 | 0) != ($28 | 0)) {
    if ($3 >>> 0 > $26 >>> 0) _abort();
    $41 = $26 + 8 | 0;
    if ((HEAP32[$41 >> 2] | 0) == ($16 | 0)) $$pre$phi446Z2D = $41; else _abort();
   } else $$pre$phi446Z2D = $26 + 8 | 0;
   HEAP32[$24 + 12 >> 2] = $26;
   HEAP32[$$pre$phi446Z2D >> 2] = $24;
   $$1 = $16;
   $$1380 = $17;
   $114 = $16;
   break;
  }
  $46 = HEAP32[$16 + 24 >> 2] | 0;
  $48 = HEAP32[$16 + 12 >> 2] | 0;
  do if (($48 | 0) == ($16 | 0)) {
   $59 = $16 + 16 | 0;
   $60 = $59 + 4 | 0;
   $61 = HEAP32[$60 >> 2] | 0;
   if (!$61) {
    $63 = HEAP32[$59 >> 2] | 0;
    if (!$63) {
     $$3 = 0;
     break;
    } else {
     $$1385$ph = $63;
     $$1388$ph = $59;
    }
   } else {
    $$1385$ph = $61;
    $$1388$ph = $60;
   }
   $$1385 = $$1385$ph;
   $$1388 = $$1388$ph;
   while (1) {
    $65 = $$1385 + 20 | 0;
    $66 = HEAP32[$65 >> 2] | 0;
    if (!$66) {
     $68 = $$1385 + 16 | 0;
     $69 = HEAP32[$68 >> 2] | 0;
     if (!$69) break; else {
      $$1385$be = $69;
      $$1388$be = $68;
     }
    } else {
     $$1385$be = $66;
     $$1388$be = $65;
    }
    $$1385 = $$1385$be;
    $$1388 = $$1388$be;
   }
   if ($3 >>> 0 > $$1388 >>> 0) _abort(); else {
    HEAP32[$$1388 >> 2] = 0;
    $$3 = $$1385;
    break;
   }
  } else {
   $51 = HEAP32[$16 + 8 >> 2] | 0;
   if ($3 >>> 0 > $51 >>> 0) _abort();
   $53 = $51 + 12 | 0;
   if ((HEAP32[$53 >> 2] | 0) != ($16 | 0)) _abort();
   $56 = $48 + 8 | 0;
   if ((HEAP32[$56 >> 2] | 0) == ($16 | 0)) {
    HEAP32[$53 >> 2] = $48;
    HEAP32[$56 >> 2] = $51;
    $$3 = $48;
    break;
   } else _abort();
  } while (0);
  if ($46) {
   $74 = HEAP32[$16 + 28 >> 2] | 0;
   $75 = 67244 + ($74 << 2) | 0;
   do if ((HEAP32[$75 >> 2] | 0) == ($16 | 0)) {
    HEAP32[$75 >> 2] = $$3;
    if (!$$3) {
     HEAP32[16736] = HEAP32[16736] & ~(1 << $74);
     $$1 = $16;
     $$1380 = $17;
     $114 = $16;
     break L10;
    }
   } else if ((HEAP32[16739] | 0) >>> 0 <= $46 >>> 0) {
    $84 = $46 + 16 | 0;
    HEAP32[((HEAP32[$84 >> 2] | 0) == ($16 | 0) ? $84 : $46 + 20 | 0) >> 2] = $$3;
    if (!$$3) {
     $$1 = $16;
     $$1380 = $17;
     $114 = $16;
     break L10;
    } else break;
   } else _abort(); while (0);
   $89 = HEAP32[16739] | 0;
   if ($89 >>> 0 > $$3 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $46;
   $92 = $16 + 16 | 0;
   $93 = HEAP32[$92 >> 2] | 0;
   do if ($93 | 0) if ($89 >>> 0 > $93 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $93;
    HEAP32[$93 + 24 >> 2] = $$3;
    break;
   } while (0);
   $99 = HEAP32[$92 + 4 >> 2] | 0;
   if ($99) if ((HEAP32[16739] | 0) >>> 0 > $99 >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $99;
    HEAP32[$99 + 24 >> 2] = $$3;
    $$1 = $16;
    $$1380 = $17;
    $114 = $16;
    break;
   } else {
    $$1 = $16;
    $$1380 = $17;
    $114 = $16;
   }
  } else {
   $$1 = $16;
   $$1380 = $17;
   $114 = $16;
  }
 } else {
  $$1 = $2;
  $$1380 = $9;
  $114 = $2;
 } while (0);
 if ($114 >>> 0 >= $10 >>> 0) _abort();
 $115 = $10 + 4 | 0;
 $116 = HEAP32[$115 >> 2] | 0;
 if (!($116 & 1)) _abort();
 if (!($116 & 2)) {
  if ((HEAP32[16741] | 0) == ($10 | 0)) {
   $124 = (HEAP32[16738] | 0) + $$1380 | 0;
   HEAP32[16738] = $124;
   HEAP32[16741] = $$1;
   HEAP32[$$1 + 4 >> 2] = $124 | 1;
   if (($$1 | 0) != (HEAP32[16740] | 0)) return;
   HEAP32[16740] = 0;
   HEAP32[16737] = 0;
   return;
  }
  if ((HEAP32[16740] | 0) == ($10 | 0)) {
   $132 = (HEAP32[16737] | 0) + $$1380 | 0;
   HEAP32[16737] = $132;
   HEAP32[16740] = $114;
   HEAP32[$$1 + 4 >> 2] = $132 | 1;
   HEAP32[$114 + $132 >> 2] = $132;
   return;
  }
  $137 = ($116 & -8) + $$1380 | 0;
  $138 = $116 >>> 3;
  L111 : do if ($116 >>> 0 >= 256) {
   $165 = HEAP32[$10 + 24 >> 2] | 0;
   $167 = HEAP32[$10 + 12 >> 2] | 0;
   do if (($167 | 0) == ($10 | 0)) {
    $179 = $10 + 16 | 0;
    $180 = $179 + 4 | 0;
    $181 = HEAP32[$180 >> 2] | 0;
    if (!$181) {
     $183 = HEAP32[$179 >> 2] | 0;
     if (!$183) {
      $$3398 = 0;
      break;
     } else {
      $$1396$ph = $183;
      $$1400$ph = $179;
     }
    } else {
     $$1396$ph = $181;
     $$1400$ph = $180;
    }
    $$1396 = $$1396$ph;
    $$1400 = $$1400$ph;
    while (1) {
     $185 = $$1396 + 20 | 0;
     $186 = HEAP32[$185 >> 2] | 0;
     if (!$186) {
      $188 = $$1396 + 16 | 0;
      $189 = HEAP32[$188 >> 2] | 0;
      if (!$189) break; else {
       $$1396$be = $189;
       $$1400$be = $188;
      }
     } else {
      $$1396$be = $186;
      $$1400$be = $185;
     }
     $$1396 = $$1396$be;
     $$1400 = $$1400$be;
    }
    if ((HEAP32[16739] | 0) >>> 0 > $$1400 >>> 0) _abort(); else {
     HEAP32[$$1400 >> 2] = 0;
     $$3398 = $$1396;
     break;
    }
   } else {
    $170 = HEAP32[$10 + 8 >> 2] | 0;
    if ((HEAP32[16739] | 0) >>> 0 > $170 >>> 0) _abort();
    $173 = $170 + 12 | 0;
    if ((HEAP32[$173 >> 2] | 0) != ($10 | 0)) _abort();
    $176 = $167 + 8 | 0;
    if ((HEAP32[$176 >> 2] | 0) == ($10 | 0)) {
     HEAP32[$173 >> 2] = $167;
     HEAP32[$176 >> 2] = $170;
     $$3398 = $167;
     break;
    } else _abort();
   } while (0);
   if ($165 | 0) {
    $195 = HEAP32[$10 + 28 >> 2] | 0;
    $196 = 67244 + ($195 << 2) | 0;
    do if ((HEAP32[$196 >> 2] | 0) == ($10 | 0)) {
     HEAP32[$196 >> 2] = $$3398;
     if (!$$3398) {
      HEAP32[16736] = HEAP32[16736] & ~(1 << $195);
      break L111;
     }
    } else if ((HEAP32[16739] | 0) >>> 0 <= $165 >>> 0) {
     $205 = $165 + 16 | 0;
     HEAP32[((HEAP32[$205 >> 2] | 0) == ($10 | 0) ? $205 : $165 + 20 | 0) >> 2] = $$3398;
     if (!$$3398) break L111; else break;
    } else _abort(); while (0);
    $210 = HEAP32[16739] | 0;
    if ($210 >>> 0 > $$3398 >>> 0) _abort();
    HEAP32[$$3398 + 24 >> 2] = $165;
    $213 = $10 + 16 | 0;
    $214 = HEAP32[$213 >> 2] | 0;
    do if ($214 | 0) if ($210 >>> 0 > $214 >>> 0) _abort(); else {
     HEAP32[$$3398 + 16 >> 2] = $214;
     HEAP32[$214 + 24 >> 2] = $$3398;
     break;
    } while (0);
    $220 = HEAP32[$213 + 4 >> 2] | 0;
    if ($220 | 0) if ((HEAP32[16739] | 0) >>> 0 > $220 >>> 0) _abort(); else {
     HEAP32[$$3398 + 20 >> 2] = $220;
     HEAP32[$220 + 24 >> 2] = $$3398;
     break;
    }
   }
  } else {
   $141 = HEAP32[$10 + 8 >> 2] | 0;
   $143 = HEAP32[$10 + 12 >> 2] | 0;
   $145 = 66980 + ($138 << 1 << 2) | 0;
   if (($141 | 0) != ($145 | 0)) {
    if ((HEAP32[16739] | 0) >>> 0 > $141 >>> 0) _abort();
    if ((HEAP32[$141 + 12 >> 2] | 0) != ($10 | 0)) _abort();
   }
   if (($143 | 0) == ($141 | 0)) {
    HEAP32[16735] = HEAP32[16735] & ~(1 << $138);
    break;
   }
   if (($143 | 0) != ($145 | 0)) {
    if ((HEAP32[16739] | 0) >>> 0 > $143 >>> 0) _abort();
    $160 = $143 + 8 | 0;
    if ((HEAP32[$160 >> 2] | 0) == ($10 | 0)) $$pre$phi444Z2D = $160; else _abort();
   } else $$pre$phi444Z2D = $143 + 8 | 0;
   HEAP32[$141 + 12 >> 2] = $143;
   HEAP32[$$pre$phi444Z2D >> 2] = $141;
  } while (0);
  HEAP32[$$1 + 4 >> 2] = $137 | 1;
  HEAP32[$114 + $137 >> 2] = $137;
  if (($$1 | 0) == (HEAP32[16740] | 0)) {
   HEAP32[16737] = $137;
   return;
  } else $$2 = $137;
 } else {
  HEAP32[$115 >> 2] = $116 & -2;
  HEAP32[$$1 + 4 >> 2] = $$1380 | 1;
  HEAP32[$114 + $$1380 >> 2] = $$1380;
  $$2 = $$1380;
 }
 $235 = $$2 >>> 3;
 if ($$2 >>> 0 < 256) {
  $238 = 66980 + ($235 << 1 << 2) | 0;
  $239 = HEAP32[16735] | 0;
  $240 = 1 << $235;
  if ($239 & $240) {
   $244 = $238 + 8 | 0;
   $245 = HEAP32[$244 >> 2] | 0;
   if ((HEAP32[16739] | 0) >>> 0 > $245 >>> 0) _abort(); else {
    $$0401 = $245;
    $$pre$phiZ2D = $244;
   }
  } else {
   HEAP32[16735] = $239 | $240;
   $$0401 = $238;
   $$pre$phiZ2D = $238 + 8 | 0;
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$1;
  HEAP32[$$0401 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$0401;
  HEAP32[$$1 + 12 >> 2] = $238;
  return;
 }
 $251 = $$2 >>> 8;
 if ($251) if ($$2 >>> 0 > 16777215) $$0394 = 31; else {
  $256 = ($251 + 1048320 | 0) >>> 16 & 8;
  $257 = $251 << $256;
  $260 = ($257 + 520192 | 0) >>> 16 & 4;
  $262 = $257 << $260;
  $265 = ($262 + 245760 | 0) >>> 16 & 2;
  $270 = 14 - ($260 | $256 | $265) + ($262 << $265 >>> 15) | 0;
  $$0394 = $$2 >>> ($270 + 7 | 0) & 1 | $270 << 1;
 } else $$0394 = 0;
 $276 = 67244 + ($$0394 << 2) | 0;
 HEAP32[$$1 + 28 >> 2] = $$0394;
 HEAP32[$$1 + 20 >> 2] = 0;
 HEAP32[$$1 + 16 >> 2] = 0;
 $280 = HEAP32[16736] | 0;
 $281 = 1 << $$0394;
 L197 : do if ($280 & $281) {
  $288 = HEAP32[$276 >> 2] | 0;
  L200 : do if ((HEAP32[$288 + 4 >> 2] & -8 | 0) != ($$2 | 0)) {
   $$0381438 = $$2 << (($$0394 | 0) == 31 ? 0 : 25 - ($$0394 >>> 1) | 0);
   $$0382437 = $288;
   while (1) {
    $305 = $$0382437 + 16 + ($$0381438 >>> 31 << 2) | 0;
    $300 = HEAP32[$305 >> 2] | 0;
    if (!$300) break;
    if ((HEAP32[$300 + 4 >> 2] & -8 | 0) == ($$2 | 0)) {
     $$0382$lcssa = $300;
     break L200;
    } else {
     $$0381438 = $$0381438 << 1;
     $$0382437 = $300;
    }
   }
   if ((HEAP32[16739] | 0) >>> 0 > $305 >>> 0) _abort(); else {
    HEAP32[$305 >> 2] = $$1;
    HEAP32[$$1 + 24 >> 2] = $$0382437;
    HEAP32[$$1 + 12 >> 2] = $$1;
    HEAP32[$$1 + 8 >> 2] = $$1;
    break L197;
   }
  } else $$0382$lcssa = $288; while (0);
  $312 = $$0382$lcssa + 8 | 0;
  $313 = HEAP32[$312 >> 2] | 0;
  $314 = HEAP32[16739] | 0;
  if ($314 >>> 0 <= $313 >>> 0 & $314 >>> 0 <= $$0382$lcssa >>> 0) {
   HEAP32[$313 + 12 >> 2] = $$1;
   HEAP32[$312 >> 2] = $$1;
   HEAP32[$$1 + 8 >> 2] = $313;
   HEAP32[$$1 + 12 >> 2] = $$0382$lcssa;
   HEAP32[$$1 + 24 >> 2] = 0;
   break;
  } else _abort();
 } else {
  HEAP32[16736] = $280 | $281;
  HEAP32[$276 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $276;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
 } while (0);
 $323 = (HEAP32[16743] | 0) + -1 | 0;
 HEAP32[16743] = $323;
 if ($323 | 0) return;
 $$0211$in$i = 67396;
 while (1) {
  $$0211$i = HEAP32[$$0211$in$i >> 2] | 0;
  if (!$$0211$i) break; else $$0211$in$i = $$0211$i + 8 | 0;
 }
 HEAP32[16743] = -1;
 return;
}

function _arLabelingSubEWZ($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0373 = 0, $$0374 = 0, $$0376 = 0, $$0378 = 0, $$0380 = 0, $$0384 = 0, $$0387 = 0, $$0392 = 0, $$0395 = 0, $$0399 = 0, $$1 = 0, $$1375 = 0, $$1377 = 0, $$1379 = 0, $$1381 = 0, $$1385 = 0, $$1388 = 0, $$1393 = 0, $$1396 = 0, $$1400 = 0, $$2 = 0, $$2382 = 0, $$2386 = 0, $$2389 = 0, $$2394 = 0, $$2397 = 0, $$3 = 0, $$3383 = 0, $$3390 = 0, $$3398 = 0, $$4 = 0, $$4391 = 0, $$5 = 0, $$6 = 0, $103 = 0, $106 = 0, $121 = 0, $123 = 0, $125 = 0, $129 = 0, $13 = 0, $133 = 0, $136 = 0, $138 = 0, $142 = 0, $146 = 0, $150 = 0, $155 = 0, $157 = 0, $161 = 0, $165 = 0, $169 = 0, $175 = 0, $178 = 0, $180 = 0, $184 = 0, $188 = 0, $19 = 0, $192 = 0, $195 = 0, $20 = 0, $200 = 0, $224 = 0, $226 = 0, $232 = 0, $235 = 0, $236 = 0, $242 = 0, $254 = 0, $255 = 0, $258 = 0, $265 = 0, $266 = 0, $27 = 0, $274 = 0, $277 = 0, $278 = 0, $282 = 0, $285 = 0, $289 = 0, $292 = 0, $296 = 0, $299 = 0, $303 = 0, $306 = 0, $310 = 0.0, $311 = 0, $312 = 0, $316 = 0, $33 = 0, $34 = 0, $37 = 0, $39 = 0, $43 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $65 = 0, $80 = 0, $82 = 0, $84 = 0, $88 = 0, $92 = 0, $98 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0376 = $5;
 $$0387 = 0;
 $$0395 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 while (1) {
  if (($$0387 | 0) >= ($1 | 0)) break;
  HEAP16[$$0395 >> 1] = 0;
  HEAP16[$$0376 >> 1] = 0;
  $$0376 = $$0376 + 2 | 0;
  $$0387 = $$0387 + 1 | 0;
  $$0395 = $$0395 + 2 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1377 = $5;
 $$1388 = 0;
 $$1396 = $5 + ($13 << 1) | 0;
 while (1) {
  if (($$1388 | 0) >= ($2 | 0)) break;
  HEAP16[$$1396 >> 1] = 0;
  HEAP16[$$1377 >> 1] = 0;
  $$1377 = $$1377 + ($1 << 1) | 0;
  $$1388 = $$1388 + 1 | 0;
  $$1396 = $$1396 + ($1 << 1) | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $27 = 0 - $1 | 0;
 $$0373 = $0 + $20 | 0;
 $$0374 = $3 + $20 | 0;
 $$0384 = 1;
 $$0392 = 0;
 $$0399 = (HEAP32[$4 + 4 >> 2] | 0) + $20 | 0;
 $$2397 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0384 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0373;
  $$1375 = $$0374;
  $$1393 = $$0392;
  $$1400 = $$0399;
  $$2389 = 1;
  $$3398 = $$2397;
  while (1) {
   if (($$2389 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0) > (HEAPU8[$$1375 >> 0] | 0)) {
    HEAP8[$$1400 >> 0] = -1;
    $33 = $$3398 + ($27 << 1) | 0;
    $34 = HEAP16[$33 >> 1] | 0;
    if ($34 << 16 >> 16 > 0) {
     HEAP16[$$3398 >> 1] = $34;
     $37 = ($34 << 16 >> 16) * 7 | 0;
     $39 = $4 + 1310736 + ($37 + -7 << 2) | 0;
     HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 1;
     $43 = $4 + 1310736 + ($37 + -6 << 2) | 0;
     HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + $$2389;
     $47 = $4 + 1310736 + ($37 + -5 << 2) | 0;
     HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + $$0384;
     HEAP32[$4 + 1310736 + ($37 + -1 << 2) >> 2] = $$0384;
     $$2394 = $$1393;
     break;
    }
    $53 = HEAP16[$33 + 2 >> 1] | 0;
    $54 = $53 << 16 >> 16;
    $57 = HEAP16[$33 + -2 >> 1] | 0;
    $58 = $57 << 16 >> 16;
    $59 = $57 << 16 >> 16 > 0;
    if ($53 << 16 >> 16 <= 0) {
     if ($59) {
      HEAP16[$$3398 >> 1] = $57;
      $155 = $58 * 7 | 0;
      $157 = $4 + 1310736 + ($155 + -7 << 2) | 0;
      HEAP32[$157 >> 2] = (HEAP32[$157 >> 2] | 0) + 1;
      $161 = $4 + 1310736 + ($155 + -6 << 2) | 0;
      HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + $$2389;
      $165 = $4 + 1310736 + ($155 + -5 << 2) | 0;
      HEAP32[$165 >> 2] = (HEAP32[$165 >> 2] | 0) + $$0384;
      $169 = $4 + 1310736 + ($155 + -3 << 2) | 0;
      if ((HEAP32[$169 >> 2] | 0) < ($$2389 | 0)) HEAP32[$169 >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($155 + -1 << 2) >> 2] = $$0384;
      $$2394 = $$1393;
      break;
     }
     $175 = HEAP16[$$3398 + -2 >> 1] | 0;
     if ($175 << 16 >> 16 > 0) {
      HEAP16[$$3398 >> 1] = $175;
      $178 = ($175 << 16 >> 16) * 7 | 0;
      $180 = $4 + 1310736 + ($178 + -7 << 2) | 0;
      HEAP32[$180 >> 2] = (HEAP32[$180 >> 2] | 0) + 1;
      $184 = $4 + 1310736 + ($178 + -6 << 2) | 0;
      HEAP32[$184 >> 2] = (HEAP32[$184 >> 2] | 0) + $$2389;
      $188 = $4 + 1310736 + ($178 + -5 << 2) | 0;
      HEAP32[$188 >> 2] = (HEAP32[$188 >> 2] | 0) + $$0384;
      $192 = $4 + 1310736 + ($178 + -3 << 2) | 0;
      if ((HEAP32[$192 >> 2] | 0) >= ($$2389 | 0)) {
       $$2394 = $$1393;
       break;
      }
      HEAP32[$192 >> 2] = $$2389;
      $$2394 = $$1393;
      break;
     } else {
      $195 = $$1393 + 1 | 0;
      if (($$1393 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3398 >> 1] = $195;
      HEAP32[$4 + 1179664 + ($$1393 << 2) >> 2] = $195 << 16 >> 16;
      $200 = $$1393 * 7 | 0;
      HEAP32[$4 + 1310736 + ($200 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($200 + 1 << 2) >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($200 + 2 << 2) >> 2] = $$0384;
      HEAP32[$4 + 1310736 + ($200 + 3 << 2) >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($200 + 4 << 2) >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($200 + 5 << 2) >> 2] = $$0384;
      HEAP32[$4 + 1310736 + ($200 + 6 << 2) >> 2] = $$0384;
      $$2394 = $195;
      break;
     }
    }
    if ($59) {
     $62 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
     $65 = HEAP32[$4 + 1179664 + ($58 + -1 << 2) >> 2] | 0;
     L36 : do if (($62 | 0) <= ($65 | 0)) {
      HEAP16[$$3398 >> 1] = $62;
      if (($62 | 0) < ($65 | 0)) {
       $$1379 = $19;
       $$1381 = 0;
       while (1) {
        if (($$1381 | 0) >= ($$1393 | 0)) {
         $80 = $62;
         break L36;
        }
        if ((HEAP32[$$1379 >> 2] | 0) == ($65 | 0)) HEAP32[$$1379 >> 2] = $62;
        $$1379 = $$1379 + 4 | 0;
        $$1381 = $$1381 + 1 | 0;
       }
      } else $80 = $62;
     } else {
      HEAP16[$$3398 >> 1] = $65;
      $$0378 = $19;
      $$0380 = 0;
      while (1) {
       if (($$0380 | 0) >= ($$1393 | 0)) {
        $80 = $65;
        break L36;
       }
       if ((HEAP32[$$0378 >> 2] | 0) == ($62 | 0)) HEAP32[$$0378 >> 2] = $65;
       $$0378 = $$0378 + 4 | 0;
       $$0380 = $$0380 + 1 | 0;
      }
     } while (0);
     $82 = ($80 << 16 >> 16) * 7 | 0;
     $84 = $4 + 1310736 + ($82 + -7 << 2) | 0;
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
     $88 = $4 + 1310736 + ($82 + -6 << 2) | 0;
     HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + $$2389;
     $92 = $4 + 1310736 + ($82 + -5 << 2) | 0;
     HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + $$0384;
     HEAP32[$4 + 1310736 + ($82 + -1 << 2) >> 2] = $$0384;
     $$2394 = $$1393;
     break;
    }
    $98 = HEAP16[$$3398 + -2 >> 1] | 0;
    if ($98 << 16 >> 16 <= 0) {
     HEAP16[$$3398 >> 1] = $53;
     $136 = $54 * 7 | 0;
     $138 = $4 + 1310736 + ($136 + -7 << 2) | 0;
     HEAP32[$138 >> 2] = (HEAP32[$138 >> 2] | 0) + 1;
     $142 = $4 + 1310736 + ($136 + -6 << 2) | 0;
     HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + $$2389;
     $146 = $4 + 1310736 + ($136 + -5 << 2) | 0;
     HEAP32[$146 >> 2] = (HEAP32[$146 >> 2] | 0) + $$0384;
     $150 = $4 + 1310736 + ($136 + -4 << 2) | 0;
     if ((HEAP32[$150 >> 2] | 0) > ($$2389 | 0)) HEAP32[$150 >> 2] = $$2389;
     HEAP32[$4 + 1310736 + ($136 + -1 << 2) >> 2] = $$0384;
     $$2394 = $$1393;
     break;
    }
    $103 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
    $106 = HEAP32[$4 + 1179664 + (($98 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if (($103 | 0) <= ($106 | 0)) {
     HEAP16[$$3398 >> 1] = $103;
     if (($103 | 0) < ($106 | 0)) {
      $$3 = $19;
      $$3383 = 0;
      while (1) {
       if (($$3383 | 0) >= ($$1393 | 0)) {
        $121 = $103;
        break L60;
       }
       if ((HEAP32[$$3 >> 2] | 0) == ($106 | 0)) HEAP32[$$3 >> 2] = $103;
       $$3 = $$3 + 4 | 0;
       $$3383 = $$3383 + 1 | 0;
      }
     } else $121 = $103;
    } else {
     HEAP16[$$3398 >> 1] = $106;
     $$2 = $19;
     $$2382 = 0;
     while (1) {
      if (($$2382 | 0) >= ($$1393 | 0)) {
       $121 = $106;
       break L60;
      }
      if ((HEAP32[$$2 >> 2] | 0) == ($103 | 0)) HEAP32[$$2 >> 2] = $106;
      $$2 = $$2 + 4 | 0;
      $$2382 = $$2382 + 1 | 0;
     }
    } while (0);
    $123 = ($121 << 16 >> 16) * 7 | 0;
    $125 = $4 + 1310736 + ($123 + -7 << 2) | 0;
    HEAP32[$125 >> 2] = (HEAP32[$125 >> 2] | 0) + 1;
    $129 = $4 + 1310736 + ($123 + -6 << 2) | 0;
    HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + $$2389;
    $133 = $4 + 1310736 + ($123 + -5 << 2) | 0;
    HEAP32[$133 >> 2] = (HEAP32[$133 >> 2] | 0) + $$0384;
    $$2394 = $$1393;
   } else {
    HEAP16[$$3398 >> 1] = 0;
    HEAP8[$$1400 >> 0] = 0;
    $$2394 = $$1393;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1375 = $$1375 + 1 | 0;
   $$1393 = $$2394;
   $$1400 = $$1400 + 1 | 0;
   $$2389 = $$2389 + 1 | 0;
   $$3398 = $$3398 + 2 | 0;
  }
  $$0373 = $$1 + 2 | 0;
  $$0374 = $$1375 + 2 | 0;
  $$0384 = $$0384 + 1 | 0;
  $$0392 = $$1393;
  $$0399 = $$1400 + 2 | 0;
  $$2397 = $$3398 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 23780, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $224 = $4 + 12 | 0;
  $$1385 = 1;
  $$3390 = 1;
  $$4 = $19;
  while (1) {
   if (($$3390 | 0) > ($$0392 | 0)) break;
   $226 = HEAP32[$$4 >> 2] | 0;
   if (($226 | 0) == ($$3390 | 0)) {
    $$2386 = $$1385 + 1 | 0;
    $232 = $$1385;
   } else {
    $$2386 = $$1385;
    $232 = HEAP32[$4 + 1179664 + ($226 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $232;
   $$1385 = $$2386;
   $$3390 = $$3390 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $235 = $4 + 8 | 0;
  $236 = $$1385 + -1 | 0;
  HEAP32[$235 >> 2] = $236;
  if (!$236) $$0 = 0; else {
   _memset($224 | 0, 0, $236 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $236 << 4 | 0) | 0;
   $$4391 = 0;
   while (1) {
    if (($$4391 | 0) >= ($236 | 0)) break;
    $242 = $$4391 << 2;
    HEAP32[$4 + 131084 + ($242 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($242 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($242 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($242 | 3) << 2) >> 2] = 0;
    $$4391 = $$4391 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0392 | 0)) break;
    $254 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $255 = $$5 * 7 | 0;
    $258 = $4 + 12 + ($254 << 2) | 0;
    HEAP32[$258 >> 2] = (HEAP32[$258 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($255 << 2) >> 2] | 0);
    $265 = $254 << 1;
    $266 = $4 + 655376 + ($265 << 3) | 0;
    HEAPF64[$266 >> 3] = +HEAPF64[$266 >> 3] + +(HEAP32[$4 + 1310736 + ($255 + 1 << 2) >> 2] | 0);
    $274 = $4 + 655376 + (($265 | 1) << 3) | 0;
    HEAPF64[$274 >> 3] = +HEAPF64[$274 >> 3] + +(HEAP32[$4 + 1310736 + ($255 + 2 << 2) >> 2] | 0);
    $277 = $254 << 2;
    $278 = $4 + 131084 + ($277 << 2) | 0;
    $282 = HEAP32[$4 + 1310736 + ($255 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$278 >> 2] | 0) > ($282 | 0)) HEAP32[$278 >> 2] = $282;
    $285 = $4 + 131084 + (($277 | 1) << 2) | 0;
    $289 = HEAP32[$4 + 1310736 + ($255 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$285 >> 2] | 0) < ($289 | 0)) HEAP32[$285 >> 2] = $289;
    $292 = $4 + 131084 + (($277 | 2) << 2) | 0;
    $296 = HEAP32[$4 + 1310736 + ($255 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$292 >> 2] | 0) > ($296 | 0)) HEAP32[$292 >> 2] = $296;
    $299 = $4 + 131084 + (($277 | 3) << 2) | 0;
    $303 = HEAP32[$4 + 1310736 + ($255 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$299 >> 2] | 0) < ($303 | 0)) HEAP32[$299 >> 2] = $303;
    $$5 = $$5 + 1 | 0;
   }
   $306 = HEAP32[$235 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($306 | 0)) {
     $$0 = 0;
     break L80;
    }
    $310 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $311 = $$6 << 1;
    $312 = $4 + 655376 + ($311 << 3) | 0;
    HEAPF64[$312 >> 3] = +HEAPF64[$312 >> 3] / $310;
    $316 = $4 + 655376 + (($311 | 1) << 3) | 0;
    HEAPF64[$316 >> 3] = +HEAPF64[$316 >> 3] / $310;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubEBZ($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0373 = 0, $$0374 = 0, $$0376 = 0, $$0378 = 0, $$0380 = 0, $$0384 = 0, $$0387 = 0, $$0392 = 0, $$0395 = 0, $$0399 = 0, $$1 = 0, $$1375 = 0, $$1377 = 0, $$1379 = 0, $$1381 = 0, $$1385 = 0, $$1388 = 0, $$1393 = 0, $$1396 = 0, $$1400 = 0, $$2 = 0, $$2382 = 0, $$2386 = 0, $$2389 = 0, $$2394 = 0, $$2397 = 0, $$3 = 0, $$3383 = 0, $$3390 = 0, $$3398 = 0, $$4 = 0, $$4391 = 0, $$5 = 0, $$6 = 0, $103 = 0, $106 = 0, $121 = 0, $123 = 0, $125 = 0, $129 = 0, $13 = 0, $133 = 0, $136 = 0, $138 = 0, $142 = 0, $146 = 0, $150 = 0, $155 = 0, $157 = 0, $161 = 0, $165 = 0, $169 = 0, $175 = 0, $178 = 0, $180 = 0, $184 = 0, $188 = 0, $19 = 0, $192 = 0, $195 = 0, $20 = 0, $200 = 0, $224 = 0, $226 = 0, $232 = 0, $235 = 0, $236 = 0, $242 = 0, $254 = 0, $255 = 0, $258 = 0, $265 = 0, $266 = 0, $27 = 0, $274 = 0, $277 = 0, $278 = 0, $282 = 0, $285 = 0, $289 = 0, $292 = 0, $296 = 0, $299 = 0, $303 = 0, $306 = 0, $310 = 0.0, $311 = 0, $312 = 0, $316 = 0, $33 = 0, $34 = 0, $37 = 0, $39 = 0, $43 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $65 = 0, $80 = 0, $82 = 0, $84 = 0, $88 = 0, $92 = 0, $98 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0376 = $5;
 $$0387 = 0;
 $$0395 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 while (1) {
  if (($$0387 | 0) >= ($1 | 0)) break;
  HEAP16[$$0395 >> 1] = 0;
  HEAP16[$$0376 >> 1] = 0;
  $$0376 = $$0376 + 2 | 0;
  $$0387 = $$0387 + 1 | 0;
  $$0395 = $$0395 + 2 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1377 = $5;
 $$1388 = 0;
 $$1396 = $5 + ($13 << 1) | 0;
 while (1) {
  if (($$1388 | 0) >= ($2 | 0)) break;
  HEAP16[$$1396 >> 1] = 0;
  HEAP16[$$1377 >> 1] = 0;
  $$1377 = $$1377 + ($1 << 1) | 0;
  $$1388 = $$1388 + 1 | 0;
  $$1396 = $$1396 + ($1 << 1) | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $27 = 0 - $1 | 0;
 $$0373 = $0 + $20 | 0;
 $$0374 = $3 + $20 | 0;
 $$0384 = 1;
 $$0392 = 0;
 $$0399 = (HEAP32[$4 + 4 >> 2] | 0) + $20 | 0;
 $$2397 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0384 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0373;
  $$1375 = $$0374;
  $$1393 = $$0392;
  $$1400 = $$0399;
  $$2389 = 1;
  $$3398 = $$2397;
  while (1) {
   if (($$2389 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0) > (HEAPU8[$$1375 >> 0] | 0)) {
    HEAP16[$$3398 >> 1] = 0;
    HEAP8[$$1400 >> 0] = 0;
    $$2394 = $$1393;
   } else {
    HEAP8[$$1400 >> 0] = -1;
    $33 = $$3398 + ($27 << 1) | 0;
    $34 = HEAP16[$33 >> 1] | 0;
    if ($34 << 16 >> 16 > 0) {
     HEAP16[$$3398 >> 1] = $34;
     $37 = ($34 << 16 >> 16) * 7 | 0;
     $39 = $4 + 1310736 + ($37 + -7 << 2) | 0;
     HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 1;
     $43 = $4 + 1310736 + ($37 + -6 << 2) | 0;
     HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + $$2389;
     $47 = $4 + 1310736 + ($37 + -5 << 2) | 0;
     HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + $$0384;
     HEAP32[$4 + 1310736 + ($37 + -1 << 2) >> 2] = $$0384;
     $$2394 = $$1393;
     break;
    }
    $53 = HEAP16[$33 + 2 >> 1] | 0;
    $54 = $53 << 16 >> 16;
    $57 = HEAP16[$33 + -2 >> 1] | 0;
    $58 = $57 << 16 >> 16;
    $59 = $57 << 16 >> 16 > 0;
    if ($53 << 16 >> 16 <= 0) {
     if ($59) {
      HEAP16[$$3398 >> 1] = $57;
      $155 = $58 * 7 | 0;
      $157 = $4 + 1310736 + ($155 + -7 << 2) | 0;
      HEAP32[$157 >> 2] = (HEAP32[$157 >> 2] | 0) + 1;
      $161 = $4 + 1310736 + ($155 + -6 << 2) | 0;
      HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + $$2389;
      $165 = $4 + 1310736 + ($155 + -5 << 2) | 0;
      HEAP32[$165 >> 2] = (HEAP32[$165 >> 2] | 0) + $$0384;
      $169 = $4 + 1310736 + ($155 + -3 << 2) | 0;
      if ((HEAP32[$169 >> 2] | 0) < ($$2389 | 0)) HEAP32[$169 >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($155 + -1 << 2) >> 2] = $$0384;
      $$2394 = $$1393;
      break;
     }
     $175 = HEAP16[$$3398 + -2 >> 1] | 0;
     if ($175 << 16 >> 16 > 0) {
      HEAP16[$$3398 >> 1] = $175;
      $178 = ($175 << 16 >> 16) * 7 | 0;
      $180 = $4 + 1310736 + ($178 + -7 << 2) | 0;
      HEAP32[$180 >> 2] = (HEAP32[$180 >> 2] | 0) + 1;
      $184 = $4 + 1310736 + ($178 + -6 << 2) | 0;
      HEAP32[$184 >> 2] = (HEAP32[$184 >> 2] | 0) + $$2389;
      $188 = $4 + 1310736 + ($178 + -5 << 2) | 0;
      HEAP32[$188 >> 2] = (HEAP32[$188 >> 2] | 0) + $$0384;
      $192 = $4 + 1310736 + ($178 + -3 << 2) | 0;
      if ((HEAP32[$192 >> 2] | 0) >= ($$2389 | 0)) {
       $$2394 = $$1393;
       break;
      }
      HEAP32[$192 >> 2] = $$2389;
      $$2394 = $$1393;
      break;
     } else {
      $195 = $$1393 + 1 | 0;
      if (($$1393 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3398 >> 1] = $195;
      HEAP32[$4 + 1179664 + ($$1393 << 2) >> 2] = $195 << 16 >> 16;
      $200 = $$1393 * 7 | 0;
      HEAP32[$4 + 1310736 + ($200 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($200 + 1 << 2) >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($200 + 2 << 2) >> 2] = $$0384;
      HEAP32[$4 + 1310736 + ($200 + 3 << 2) >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($200 + 4 << 2) >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($200 + 5 << 2) >> 2] = $$0384;
      HEAP32[$4 + 1310736 + ($200 + 6 << 2) >> 2] = $$0384;
      $$2394 = $195;
      break;
     }
    }
    if ($59) {
     $62 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
     $65 = HEAP32[$4 + 1179664 + ($58 + -1 << 2) >> 2] | 0;
     L37 : do if (($62 | 0) <= ($65 | 0)) {
      HEAP16[$$3398 >> 1] = $62;
      if (($62 | 0) < ($65 | 0)) {
       $$1379 = $19;
       $$1381 = 0;
       while (1) {
        if (($$1381 | 0) >= ($$1393 | 0)) {
         $80 = $62;
         break L37;
        }
        if ((HEAP32[$$1379 >> 2] | 0) == ($65 | 0)) HEAP32[$$1379 >> 2] = $62;
        $$1379 = $$1379 + 4 | 0;
        $$1381 = $$1381 + 1 | 0;
       }
      } else $80 = $62;
     } else {
      HEAP16[$$3398 >> 1] = $65;
      $$0378 = $19;
      $$0380 = 0;
      while (1) {
       if (($$0380 | 0) >= ($$1393 | 0)) {
        $80 = $65;
        break L37;
       }
       if ((HEAP32[$$0378 >> 2] | 0) == ($62 | 0)) HEAP32[$$0378 >> 2] = $65;
       $$0378 = $$0378 + 4 | 0;
       $$0380 = $$0380 + 1 | 0;
      }
     } while (0);
     $82 = ($80 << 16 >> 16) * 7 | 0;
     $84 = $4 + 1310736 + ($82 + -7 << 2) | 0;
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
     $88 = $4 + 1310736 + ($82 + -6 << 2) | 0;
     HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + $$2389;
     $92 = $4 + 1310736 + ($82 + -5 << 2) | 0;
     HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + $$0384;
     HEAP32[$4 + 1310736 + ($82 + -1 << 2) >> 2] = $$0384;
     $$2394 = $$1393;
     break;
    }
    $98 = HEAP16[$$3398 + -2 >> 1] | 0;
    if ($98 << 16 >> 16 <= 0) {
     HEAP16[$$3398 >> 1] = $53;
     $136 = $54 * 7 | 0;
     $138 = $4 + 1310736 + ($136 + -7 << 2) | 0;
     HEAP32[$138 >> 2] = (HEAP32[$138 >> 2] | 0) + 1;
     $142 = $4 + 1310736 + ($136 + -6 << 2) | 0;
     HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + $$2389;
     $146 = $4 + 1310736 + ($136 + -5 << 2) | 0;
     HEAP32[$146 >> 2] = (HEAP32[$146 >> 2] | 0) + $$0384;
     $150 = $4 + 1310736 + ($136 + -4 << 2) | 0;
     if ((HEAP32[$150 >> 2] | 0) > ($$2389 | 0)) HEAP32[$150 >> 2] = $$2389;
     HEAP32[$4 + 1310736 + ($136 + -1 << 2) >> 2] = $$0384;
     $$2394 = $$1393;
     break;
    }
    $103 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
    $106 = HEAP32[$4 + 1179664 + (($98 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if (($103 | 0) <= ($106 | 0)) {
     HEAP16[$$3398 >> 1] = $103;
     if (($103 | 0) < ($106 | 0)) {
      $$3 = $19;
      $$3383 = 0;
      while (1) {
       if (($$3383 | 0) >= ($$1393 | 0)) {
        $121 = $103;
        break L61;
       }
       if ((HEAP32[$$3 >> 2] | 0) == ($106 | 0)) HEAP32[$$3 >> 2] = $103;
       $$3 = $$3 + 4 | 0;
       $$3383 = $$3383 + 1 | 0;
      }
     } else $121 = $103;
    } else {
     HEAP16[$$3398 >> 1] = $106;
     $$2 = $19;
     $$2382 = 0;
     while (1) {
      if (($$2382 | 0) >= ($$1393 | 0)) {
       $121 = $106;
       break L61;
      }
      if ((HEAP32[$$2 >> 2] | 0) == ($103 | 0)) HEAP32[$$2 >> 2] = $106;
      $$2 = $$2 + 4 | 0;
      $$2382 = $$2382 + 1 | 0;
     }
    } while (0);
    $123 = ($121 << 16 >> 16) * 7 | 0;
    $125 = $4 + 1310736 + ($123 + -7 << 2) | 0;
    HEAP32[$125 >> 2] = (HEAP32[$125 >> 2] | 0) + 1;
    $129 = $4 + 1310736 + ($123 + -6 << 2) | 0;
    HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + $$2389;
    $133 = $4 + 1310736 + ($123 + -5 << 2) | 0;
    HEAP32[$133 >> 2] = (HEAP32[$133 >> 2] | 0) + $$0384;
    $$2394 = $$1393;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1375 = $$1375 + 1 | 0;
   $$1393 = $$2394;
   $$1400 = $$1400 + 1 | 0;
   $$2389 = $$2389 + 1 | 0;
   $$3398 = $$3398 + 2 | 0;
  }
  $$0373 = $$1 + 2 | 0;
  $$0374 = $$1375 + 2 | 0;
  $$0384 = $$0384 + 1 | 0;
  $$0392 = $$1393;
  $$0399 = $$1400 + 2 | 0;
  $$2397 = $$3398 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 23780, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $224 = $4 + 12 | 0;
  $$1385 = 1;
  $$3390 = 1;
  $$4 = $19;
  while (1) {
   if (($$3390 | 0) > ($$0392 | 0)) break;
   $226 = HEAP32[$$4 >> 2] | 0;
   if (($226 | 0) == ($$3390 | 0)) {
    $$2386 = $$1385 + 1 | 0;
    $232 = $$1385;
   } else {
    $$2386 = $$1385;
    $232 = HEAP32[$4 + 1179664 + ($226 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $232;
   $$1385 = $$2386;
   $$3390 = $$3390 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $235 = $4 + 8 | 0;
  $236 = $$1385 + -1 | 0;
  HEAP32[$235 >> 2] = $236;
  if (!$236) $$0 = 0; else {
   _memset($224 | 0, 0, $236 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $236 << 4 | 0) | 0;
   $$4391 = 0;
   while (1) {
    if (($$4391 | 0) >= ($236 | 0)) break;
    $242 = $$4391 << 2;
    HEAP32[$4 + 131084 + ($242 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($242 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($242 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($242 | 3) << 2) >> 2] = 0;
    $$4391 = $$4391 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0392 | 0)) break;
    $254 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $255 = $$5 * 7 | 0;
    $258 = $4 + 12 + ($254 << 2) | 0;
    HEAP32[$258 >> 2] = (HEAP32[$258 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($255 << 2) >> 2] | 0);
    $265 = $254 << 1;
    $266 = $4 + 655376 + ($265 << 3) | 0;
    HEAPF64[$266 >> 3] = +HEAPF64[$266 >> 3] + +(HEAP32[$4 + 1310736 + ($255 + 1 << 2) >> 2] | 0);
    $274 = $4 + 655376 + (($265 | 1) << 3) | 0;
    HEAPF64[$274 >> 3] = +HEAPF64[$274 >> 3] + +(HEAP32[$4 + 1310736 + ($255 + 2 << 2) >> 2] | 0);
    $277 = $254 << 2;
    $278 = $4 + 131084 + ($277 << 2) | 0;
    $282 = HEAP32[$4 + 1310736 + ($255 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$278 >> 2] | 0) > ($282 | 0)) HEAP32[$278 >> 2] = $282;
    $285 = $4 + 131084 + (($277 | 1) << 2) | 0;
    $289 = HEAP32[$4 + 1310736 + ($255 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$285 >> 2] | 0) < ($289 | 0)) HEAP32[$285 >> 2] = $289;
    $292 = $4 + 131084 + (($277 | 2) << 2) | 0;
    $296 = HEAP32[$4 + 1310736 + ($255 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$292 >> 2] | 0) > ($296 | 0)) HEAP32[$292 >> 2] = $296;
    $299 = $4 + 131084 + (($277 | 3) << 2) | 0;
    $303 = HEAP32[$4 + 1310736 + ($255 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$299 >> 2] | 0) < ($303 | 0)) HEAP32[$299 >> 2] = $303;
    $$5 = $$5 + 1 | 0;
   }
   $306 = HEAP32[$235 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($306 | 0)) {
     $$0 = 0;
     break L80;
    }
    $310 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $311 = $$6 << 1;
    $312 = $4 + 655376 + ($311 << 3) | 0;
    HEAPF64[$312 >> 3] = +HEAPF64[$312 >> 3] / $310;
    $316 = $4 + 655376 + (($311 | 1) << 3) | 0;
    HEAPF64[$316 >> 3] = +HEAPF64[$316 >> 3] / $310;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubEWIC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0369 = 0, $$0370 = 0, $$0372 = 0, $$0374 = 0, $$0378 = 0, $$0382 = 0, $$0385 = 0, $$0390 = 0, $$0393 = 0, $$1 = 0, $$1371 = 0, $$1373 = 0, $$1375 = 0, $$1379 = 0, $$1383 = 0, $$1386 = 0, $$1391 = 0, $$1394 = 0, $$2 = 0, $$2376 = 0, $$2380 = 0, $$2384 = 0, $$2387 = 0, $$2392 = 0, $$3 = 0, $$3377 = 0, $$3381 = 0, $$3388 = 0, $$4 = 0, $$4389 = 0, $$5 = 0, $$6 = 0, $101 = 0, $106 = 0, $109 = 0, $124 = 0, $126 = 0, $128 = 0, $132 = 0, $136 = 0, $139 = 0, $141 = 0, $145 = 0, $149 = 0, $15 = 0, $153 = 0, $158 = 0, $160 = 0, $164 = 0, $168 = 0, $172 = 0, $178 = 0, $181 = 0, $183 = 0, $187 = 0, $191 = 0, $195 = 0, $198 = 0, $203 = 0, $21 = 0, $22 = 0, $226 = 0, $228 = 0, $234 = 0, $237 = 0, $238 = 0, $244 = 0, $256 = 0, $257 = 0, $260 = 0, $267 = 0, $268 = 0, $276 = 0, $279 = 0, $280 = 0, $284 = 0, $287 = 0, $291 = 0, $294 = 0, $298 = 0, $30 = 0, $301 = 0, $305 = 0, $308 = 0, $312 = 0.0, $313 = 0, $314 = 0, $318 = 0, $36 = 0, $37 = 0, $40 = 0, $42 = 0, $46 = 0, $5 = 0, $50 = 0, $56 = 0, $57 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $65 = 0, $68 = 0, $7 = 0, $8 = 0, $83 = 0, $85 = 0, $87 = 0, $91 = 0, $95 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = ($1 | 0) / 2 | 0;
 $6 = ($2 | 0) / 2 | 0;
 $7 = HEAP32[$4 >> 2] | 0;
 $8 = $6 + -1 | 0;
 $$0370 = $7;
 $$0372 = $7 + ((Math_imul($8, $5) | 0) << 1) | 0;
 $$0385 = 0;
 while (1) {
  if (($$0385 | 0) >= ($5 | 0)) break;
  HEAP16[$$0372 >> 1] = 0;
  HEAP16[$$0370 >> 1] = 0;
  $$0370 = $$0370 + 2 | 0;
  $$0372 = $$0372 + 2 | 0;
  $$0385 = $$0385 + 1 | 0;
 }
 $15 = $5 + -1 | 0;
 $$1371 = $7;
 $$1373 = $7 + ($15 << 1) | 0;
 $$1386 = 0;
 while (1) {
  if (($$1386 | 0) >= ($6 | 0)) break;
  HEAP16[$$1373 >> 1] = 0;
  HEAP16[$$1371 >> 1] = 0;
  $$1371 = $$1371 + ($5 << 1) | 0;
  $$1373 = $$1373 + ($5 << 1) | 0;
  $$1386 = $$1386 + 1 | 0;
 }
 $21 = $4 + 1179664 | 0;
 $22 = $5 + 1 | 0;
 $30 = 0 - $5 | 0;
 $$0369 = $0 + (($1 << 1) + 2) | 0;
 $$0382 = 1;
 $$0390 = 0;
 $$0393 = (HEAP32[$4 + 4 >> 2] | 0) + $22 | 0;
 $$2 = $7 + ($22 << 1) | 0;
 L9 : while (1) {
  if (($$0382 | 0) >= ($8 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0369;
  $$1391 = $$0390;
  $$1394 = $$0393;
  $$2387 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2387 | 0) >= ($15 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    HEAP8[$$1394 >> 0] = -1;
    $36 = $$3 + ($30 << 1) | 0;
    $37 = HEAP16[$36 >> 1] | 0;
    if ($37 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $37;
     $40 = ($37 << 16 >> 16) * 7 | 0;
     $42 = $4 + 1310736 + ($40 + -7 << 2) | 0;
     HEAP32[$42 >> 2] = (HEAP32[$42 >> 2] | 0) + 1;
     $46 = $4 + 1310736 + ($40 + -6 << 2) | 0;
     HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + $$2387;
     $50 = $4 + 1310736 + ($40 + -5 << 2) | 0;
     HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + $$0382;
     HEAP32[$4 + 1310736 + ($40 + -1 << 2) >> 2] = $$0382;
     $$2392 = $$1391;
     break;
    }
    $56 = HEAP16[$36 + 2 >> 1] | 0;
    $57 = $56 << 16 >> 16;
    $60 = HEAP16[$36 + -2 >> 1] | 0;
    $61 = $60 << 16 >> 16;
    $62 = $60 << 16 >> 16 > 0;
    if ($56 << 16 >> 16 <= 0) {
     if ($62) {
      HEAP16[$$3 >> 1] = $60;
      $158 = $61 * 7 | 0;
      $160 = $4 + 1310736 + ($158 + -7 << 2) | 0;
      HEAP32[$160 >> 2] = (HEAP32[$160 >> 2] | 0) + 1;
      $164 = $4 + 1310736 + ($158 + -6 << 2) | 0;
      HEAP32[$164 >> 2] = (HEAP32[$164 >> 2] | 0) + $$2387;
      $168 = $4 + 1310736 + ($158 + -5 << 2) | 0;
      HEAP32[$168 >> 2] = (HEAP32[$168 >> 2] | 0) + $$0382;
      $172 = $4 + 1310736 + ($158 + -3 << 2) | 0;
      if ((HEAP32[$172 >> 2] | 0) < ($$2387 | 0)) HEAP32[$172 >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($158 + -1 << 2) >> 2] = $$0382;
      $$2392 = $$1391;
      break;
     }
     $178 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($178 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $178;
      $181 = ($178 << 16 >> 16) * 7 | 0;
      $183 = $4 + 1310736 + ($181 + -7 << 2) | 0;
      HEAP32[$183 >> 2] = (HEAP32[$183 >> 2] | 0) + 1;
      $187 = $4 + 1310736 + ($181 + -6 << 2) | 0;
      HEAP32[$187 >> 2] = (HEAP32[$187 >> 2] | 0) + $$2387;
      $191 = $4 + 1310736 + ($181 + -5 << 2) | 0;
      HEAP32[$191 >> 2] = (HEAP32[$191 >> 2] | 0) + $$0382;
      $195 = $4 + 1310736 + ($181 + -3 << 2) | 0;
      if ((HEAP32[$195 >> 2] | 0) >= ($$2387 | 0)) {
       $$2392 = $$1391;
       break;
      }
      HEAP32[$195 >> 2] = $$2387;
      $$2392 = $$1391;
      break;
     } else {
      $198 = $$1391 + 1 | 0;
      if (($$1391 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $198;
      HEAP32[$4 + 1179664 + ($$1391 << 2) >> 2] = $198 << 16 >> 16;
      $203 = $$1391 * 7 | 0;
      HEAP32[$4 + 1310736 + ($203 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($203 + 1 << 2) >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($203 + 2 << 2) >> 2] = $$0382;
      HEAP32[$4 + 1310736 + ($203 + 3 << 2) >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($203 + 4 << 2) >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($203 + 5 << 2) >> 2] = $$0382;
      HEAP32[$4 + 1310736 + ($203 + 6 << 2) >> 2] = $$0382;
      $$2392 = $198;
      break;
     }
    }
    if ($62) {
     $65 = HEAP32[$4 + 1179664 + ($57 + -1 << 2) >> 2] | 0;
     $68 = HEAP32[$4 + 1179664 + ($61 + -1 << 2) >> 2] | 0;
     L36 : do if (($65 | 0) <= ($68 | 0)) {
      HEAP16[$$3 >> 1] = $65;
      if (($65 | 0) < ($68 | 0)) {
       $$1375 = $21;
       $$1379 = 0;
       while (1) {
        if (($$1379 | 0) >= ($$1391 | 0)) {
         $83 = $65;
         break L36;
        }
        if ((HEAP32[$$1375 >> 2] | 0) == ($68 | 0)) HEAP32[$$1375 >> 2] = $65;
        $$1375 = $$1375 + 4 | 0;
        $$1379 = $$1379 + 1 | 0;
       }
      } else $83 = $65;
     } else {
      HEAP16[$$3 >> 1] = $68;
      $$0374 = $21;
      $$0378 = 0;
      while (1) {
       if (($$0378 | 0) >= ($$1391 | 0)) {
        $83 = $68;
        break L36;
       }
       if ((HEAP32[$$0374 >> 2] | 0) == ($65 | 0)) HEAP32[$$0374 >> 2] = $68;
       $$0374 = $$0374 + 4 | 0;
       $$0378 = $$0378 + 1 | 0;
      }
     } while (0);
     $85 = ($83 << 16 >> 16) * 7 | 0;
     $87 = $4 + 1310736 + ($85 + -7 << 2) | 0;
     HEAP32[$87 >> 2] = (HEAP32[$87 >> 2] | 0) + 1;
     $91 = $4 + 1310736 + ($85 + -6 << 2) | 0;
     HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + $$2387;
     $95 = $4 + 1310736 + ($85 + -5 << 2) | 0;
     HEAP32[$95 >> 2] = (HEAP32[$95 >> 2] | 0) + $$0382;
     HEAP32[$4 + 1310736 + ($85 + -1 << 2) >> 2] = $$0382;
     $$2392 = $$1391;
     break;
    }
    $101 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($101 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $56;
     $139 = $57 * 7 | 0;
     $141 = $4 + 1310736 + ($139 + -7 << 2) | 0;
     HEAP32[$141 >> 2] = (HEAP32[$141 >> 2] | 0) + 1;
     $145 = $4 + 1310736 + ($139 + -6 << 2) | 0;
     HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + $$2387;
     $149 = $4 + 1310736 + ($139 + -5 << 2) | 0;
     HEAP32[$149 >> 2] = (HEAP32[$149 >> 2] | 0) + $$0382;
     $153 = $4 + 1310736 + ($139 + -4 << 2) | 0;
     if ((HEAP32[$153 >> 2] | 0) > ($$2387 | 0)) HEAP32[$153 >> 2] = $$2387;
     HEAP32[$4 + 1310736 + ($139 + -1 << 2) >> 2] = $$0382;
     $$2392 = $$1391;
     break;
    }
    $106 = HEAP32[$4 + 1179664 + ($57 + -1 << 2) >> 2] | 0;
    $109 = HEAP32[$4 + 1179664 + (($101 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if (($106 | 0) <= ($109 | 0)) {
     HEAP16[$$3 >> 1] = $106;
     if (($106 | 0) < ($109 | 0)) {
      $$3377 = $21;
      $$3381 = 0;
      while (1) {
       if (($$3381 | 0) >= ($$1391 | 0)) {
        $124 = $106;
        break L60;
       }
       if ((HEAP32[$$3377 >> 2] | 0) == ($109 | 0)) HEAP32[$$3377 >> 2] = $106;
       $$3377 = $$3377 + 4 | 0;
       $$3381 = $$3381 + 1 | 0;
      }
     } else $124 = $106;
    } else {
     HEAP16[$$3 >> 1] = $109;
     $$2376 = $21;
     $$2380 = 0;
     while (1) {
      if (($$2380 | 0) >= ($$1391 | 0)) {
       $124 = $109;
       break L60;
      }
      if ((HEAP32[$$2376 >> 2] | 0) == ($106 | 0)) HEAP32[$$2376 >> 2] = $109;
      $$2376 = $$2376 + 4 | 0;
      $$2380 = $$2380 + 1 | 0;
     }
    } while (0);
    $126 = ($124 << 16 >> 16) * 7 | 0;
    $128 = $4 + 1310736 + ($126 + -7 << 2) | 0;
    HEAP32[$128 >> 2] = (HEAP32[$128 >> 2] | 0) + 1;
    $132 = $4 + 1310736 + ($126 + -6 << 2) | 0;
    HEAP32[$132 >> 2] = (HEAP32[$132 >> 2] | 0) + $$2387;
    $136 = $4 + 1310736 + ($126 + -5 << 2) | 0;
    HEAP32[$136 >> 2] = (HEAP32[$136 >> 2] | 0) + $$0382;
    $$2392 = $$1391;
   } else {
    HEAP16[$$3 >> 1] = 0;
    HEAP8[$$1394 >> 0] = 0;
    $$2392 = $$1391;
   } while (0);
   $$1 = $$1 + 2 | 0;
   $$1391 = $$2392;
   $$1394 = $$1394 + 1 | 0;
   $$2387 = $$2387 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0369 = $$1 + $1 + 4 | 0;
  $$0382 = $$0382 + 1 | 0;
  $$0390 = $$1391;
  $$0393 = $$1394 + 2 | 0;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 23780, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $226 = $4 + 12 | 0;
  $$1383 = 1;
  $$3388 = 1;
  $$4 = $21;
  while (1) {
   if (($$3388 | 0) > ($$0390 | 0)) break;
   $228 = HEAP32[$$4 >> 2] | 0;
   if (($228 | 0) == ($$3388 | 0)) {
    $$2384 = $$1383 + 1 | 0;
    $234 = $$1383;
   } else {
    $$2384 = $$1383;
    $234 = HEAP32[$4 + 1179664 + ($228 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $234;
   $$1383 = $$2384;
   $$3388 = $$3388 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $237 = $4 + 8 | 0;
  $238 = $$1383 + -1 | 0;
  HEAP32[$237 >> 2] = $238;
  if (!$238) $$0 = 0; else {
   _memset($226 | 0, 0, $238 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $238 << 4 | 0) | 0;
   $$4389 = 0;
   while (1) {
    if (($$4389 | 0) >= ($238 | 0)) break;
    $244 = $$4389 << 2;
    HEAP32[$4 + 131084 + ($244 << 2) >> 2] = $5;
    HEAP32[$4 + 131084 + (($244 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($244 | 2) << 2) >> 2] = $6;
    HEAP32[$4 + 131084 + (($244 | 3) << 2) >> 2] = 0;
    $$4389 = $$4389 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0390 | 0)) break;
    $256 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $257 = $$5 * 7 | 0;
    $260 = $4 + 12 + ($256 << 2) | 0;
    HEAP32[$260 >> 2] = (HEAP32[$260 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($257 << 2) >> 2] | 0);
    $267 = $256 << 1;
    $268 = $4 + 655376 + ($267 << 3) | 0;
    HEAPF64[$268 >> 3] = +HEAPF64[$268 >> 3] + +(HEAP32[$4 + 1310736 + ($257 + 1 << 2) >> 2] | 0);
    $276 = $4 + 655376 + (($267 | 1) << 3) | 0;
    HEAPF64[$276 >> 3] = +HEAPF64[$276 >> 3] + +(HEAP32[$4 + 1310736 + ($257 + 2 << 2) >> 2] | 0);
    $279 = $256 << 2;
    $280 = $4 + 131084 + ($279 << 2) | 0;
    $284 = HEAP32[$4 + 1310736 + ($257 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$280 >> 2] | 0) > ($284 | 0)) HEAP32[$280 >> 2] = $284;
    $287 = $4 + 131084 + (($279 | 1) << 2) | 0;
    $291 = HEAP32[$4 + 1310736 + ($257 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$287 >> 2] | 0) < ($291 | 0)) HEAP32[$287 >> 2] = $291;
    $294 = $4 + 131084 + (($279 | 2) << 2) | 0;
    $298 = HEAP32[$4 + 1310736 + ($257 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$294 >> 2] | 0) > ($298 | 0)) HEAP32[$294 >> 2] = $298;
    $301 = $4 + 131084 + (($279 | 3) << 2) | 0;
    $305 = HEAP32[$4 + 1310736 + ($257 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$301 >> 2] | 0) < ($305 | 0)) HEAP32[$301 >> 2] = $305;
    $$5 = $$5 + 1 | 0;
   }
   $308 = HEAP32[$237 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($308 | 0)) {
     $$0 = 0;
     break L80;
    }
    $312 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $313 = $$6 << 1;
    $314 = $4 + 655376 + ($313 << 3) | 0;
    HEAPF64[$314 >> 3] = +HEAPF64[$314 >> 3] / $312;
    $318 = $4 + 655376 + (($313 | 1) << 3) | 0;
    HEAPF64[$318 >> 3] = +HEAPF64[$318 >> 3] / $312;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubEBIC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0369 = 0, $$0370 = 0, $$0372 = 0, $$0374 = 0, $$0378 = 0, $$0382 = 0, $$0385 = 0, $$0390 = 0, $$0393 = 0, $$1 = 0, $$1371 = 0, $$1373 = 0, $$1375 = 0, $$1379 = 0, $$1383 = 0, $$1386 = 0, $$1391 = 0, $$1394 = 0, $$2 = 0, $$2376 = 0, $$2380 = 0, $$2384 = 0, $$2387 = 0, $$2392 = 0, $$3 = 0, $$3377 = 0, $$3381 = 0, $$3388 = 0, $$4 = 0, $$4389 = 0, $$5 = 0, $$6 = 0, $101 = 0, $106 = 0, $109 = 0, $124 = 0, $126 = 0, $128 = 0, $132 = 0, $136 = 0, $139 = 0, $141 = 0, $145 = 0, $149 = 0, $15 = 0, $153 = 0, $158 = 0, $160 = 0, $164 = 0, $168 = 0, $172 = 0, $178 = 0, $181 = 0, $183 = 0, $187 = 0, $191 = 0, $195 = 0, $198 = 0, $203 = 0, $21 = 0, $22 = 0, $226 = 0, $228 = 0, $234 = 0, $237 = 0, $238 = 0, $244 = 0, $256 = 0, $257 = 0, $260 = 0, $267 = 0, $268 = 0, $276 = 0, $279 = 0, $280 = 0, $284 = 0, $287 = 0, $291 = 0, $294 = 0, $298 = 0, $30 = 0, $301 = 0, $305 = 0, $308 = 0, $312 = 0.0, $313 = 0, $314 = 0, $318 = 0, $36 = 0, $37 = 0, $40 = 0, $42 = 0, $46 = 0, $5 = 0, $50 = 0, $56 = 0, $57 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $65 = 0, $68 = 0, $7 = 0, $8 = 0, $83 = 0, $85 = 0, $87 = 0, $91 = 0, $95 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = ($1 | 0) / 2 | 0;
 $6 = ($2 | 0) / 2 | 0;
 $7 = HEAP32[$4 >> 2] | 0;
 $8 = $6 + -1 | 0;
 $$0370 = $7;
 $$0372 = $7 + ((Math_imul($8, $5) | 0) << 1) | 0;
 $$0385 = 0;
 while (1) {
  if (($$0385 | 0) >= ($5 | 0)) break;
  HEAP16[$$0372 >> 1] = 0;
  HEAP16[$$0370 >> 1] = 0;
  $$0370 = $$0370 + 2 | 0;
  $$0372 = $$0372 + 2 | 0;
  $$0385 = $$0385 + 1 | 0;
 }
 $15 = $5 + -1 | 0;
 $$1371 = $7;
 $$1373 = $7 + ($15 << 1) | 0;
 $$1386 = 0;
 while (1) {
  if (($$1386 | 0) >= ($6 | 0)) break;
  HEAP16[$$1373 >> 1] = 0;
  HEAP16[$$1371 >> 1] = 0;
  $$1371 = $$1371 + ($5 << 1) | 0;
  $$1373 = $$1373 + ($5 << 1) | 0;
  $$1386 = $$1386 + 1 | 0;
 }
 $21 = $4 + 1179664 | 0;
 $22 = $5 + 1 | 0;
 $30 = 0 - $5 | 0;
 $$0369 = $0 + (($1 << 1) + 2) | 0;
 $$0382 = 1;
 $$0390 = 0;
 $$0393 = (HEAP32[$4 + 4 >> 2] | 0) + $22 | 0;
 $$2 = $7 + ($22 << 1) | 0;
 L9 : while (1) {
  if (($$0382 | 0) >= ($8 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0369;
  $$1391 = $$0390;
  $$1394 = $$0393;
  $$2387 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2387 | 0) >= ($15 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    HEAP16[$$3 >> 1] = 0;
    HEAP8[$$1394 >> 0] = 0;
    $$2392 = $$1391;
   } else {
    HEAP8[$$1394 >> 0] = -1;
    $36 = $$3 + ($30 << 1) | 0;
    $37 = HEAP16[$36 >> 1] | 0;
    if ($37 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $37;
     $40 = ($37 << 16 >> 16) * 7 | 0;
     $42 = $4 + 1310736 + ($40 + -7 << 2) | 0;
     HEAP32[$42 >> 2] = (HEAP32[$42 >> 2] | 0) + 1;
     $46 = $4 + 1310736 + ($40 + -6 << 2) | 0;
     HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + $$2387;
     $50 = $4 + 1310736 + ($40 + -5 << 2) | 0;
     HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + $$0382;
     HEAP32[$4 + 1310736 + ($40 + -1 << 2) >> 2] = $$0382;
     $$2392 = $$1391;
     break;
    }
    $56 = HEAP16[$36 + 2 >> 1] | 0;
    $57 = $56 << 16 >> 16;
    $60 = HEAP16[$36 + -2 >> 1] | 0;
    $61 = $60 << 16 >> 16;
    $62 = $60 << 16 >> 16 > 0;
    if ($56 << 16 >> 16 <= 0) {
     if ($62) {
      HEAP16[$$3 >> 1] = $60;
      $158 = $61 * 7 | 0;
      $160 = $4 + 1310736 + ($158 + -7 << 2) | 0;
      HEAP32[$160 >> 2] = (HEAP32[$160 >> 2] | 0) + 1;
      $164 = $4 + 1310736 + ($158 + -6 << 2) | 0;
      HEAP32[$164 >> 2] = (HEAP32[$164 >> 2] | 0) + $$2387;
      $168 = $4 + 1310736 + ($158 + -5 << 2) | 0;
      HEAP32[$168 >> 2] = (HEAP32[$168 >> 2] | 0) + $$0382;
      $172 = $4 + 1310736 + ($158 + -3 << 2) | 0;
      if ((HEAP32[$172 >> 2] | 0) < ($$2387 | 0)) HEAP32[$172 >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($158 + -1 << 2) >> 2] = $$0382;
      $$2392 = $$1391;
      break;
     }
     $178 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($178 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $178;
      $181 = ($178 << 16 >> 16) * 7 | 0;
      $183 = $4 + 1310736 + ($181 + -7 << 2) | 0;
      HEAP32[$183 >> 2] = (HEAP32[$183 >> 2] | 0) + 1;
      $187 = $4 + 1310736 + ($181 + -6 << 2) | 0;
      HEAP32[$187 >> 2] = (HEAP32[$187 >> 2] | 0) + $$2387;
      $191 = $4 + 1310736 + ($181 + -5 << 2) | 0;
      HEAP32[$191 >> 2] = (HEAP32[$191 >> 2] | 0) + $$0382;
      $195 = $4 + 1310736 + ($181 + -3 << 2) | 0;
      if ((HEAP32[$195 >> 2] | 0) >= ($$2387 | 0)) {
       $$2392 = $$1391;
       break;
      }
      HEAP32[$195 >> 2] = $$2387;
      $$2392 = $$1391;
      break;
     } else {
      $198 = $$1391 + 1 | 0;
      if (($$1391 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $198;
      HEAP32[$4 + 1179664 + ($$1391 << 2) >> 2] = $198 << 16 >> 16;
      $203 = $$1391 * 7 | 0;
      HEAP32[$4 + 1310736 + ($203 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($203 + 1 << 2) >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($203 + 2 << 2) >> 2] = $$0382;
      HEAP32[$4 + 1310736 + ($203 + 3 << 2) >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($203 + 4 << 2) >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($203 + 5 << 2) >> 2] = $$0382;
      HEAP32[$4 + 1310736 + ($203 + 6 << 2) >> 2] = $$0382;
      $$2392 = $198;
      break;
     }
    }
    if ($62) {
     $65 = HEAP32[$4 + 1179664 + ($57 + -1 << 2) >> 2] | 0;
     $68 = HEAP32[$4 + 1179664 + ($61 + -1 << 2) >> 2] | 0;
     L37 : do if (($65 | 0) <= ($68 | 0)) {
      HEAP16[$$3 >> 1] = $65;
      if (($65 | 0) < ($68 | 0)) {
       $$1375 = $21;
       $$1379 = 0;
       while (1) {
        if (($$1379 | 0) >= ($$1391 | 0)) {
         $83 = $65;
         break L37;
        }
        if ((HEAP32[$$1375 >> 2] | 0) == ($68 | 0)) HEAP32[$$1375 >> 2] = $65;
        $$1375 = $$1375 + 4 | 0;
        $$1379 = $$1379 + 1 | 0;
       }
      } else $83 = $65;
     } else {
      HEAP16[$$3 >> 1] = $68;
      $$0374 = $21;
      $$0378 = 0;
      while (1) {
       if (($$0378 | 0) >= ($$1391 | 0)) {
        $83 = $68;
        break L37;
       }
       if ((HEAP32[$$0374 >> 2] | 0) == ($65 | 0)) HEAP32[$$0374 >> 2] = $68;
       $$0374 = $$0374 + 4 | 0;
       $$0378 = $$0378 + 1 | 0;
      }
     } while (0);
     $85 = ($83 << 16 >> 16) * 7 | 0;
     $87 = $4 + 1310736 + ($85 + -7 << 2) | 0;
     HEAP32[$87 >> 2] = (HEAP32[$87 >> 2] | 0) + 1;
     $91 = $4 + 1310736 + ($85 + -6 << 2) | 0;
     HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + $$2387;
     $95 = $4 + 1310736 + ($85 + -5 << 2) | 0;
     HEAP32[$95 >> 2] = (HEAP32[$95 >> 2] | 0) + $$0382;
     HEAP32[$4 + 1310736 + ($85 + -1 << 2) >> 2] = $$0382;
     $$2392 = $$1391;
     break;
    }
    $101 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($101 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $56;
     $139 = $57 * 7 | 0;
     $141 = $4 + 1310736 + ($139 + -7 << 2) | 0;
     HEAP32[$141 >> 2] = (HEAP32[$141 >> 2] | 0) + 1;
     $145 = $4 + 1310736 + ($139 + -6 << 2) | 0;
     HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + $$2387;
     $149 = $4 + 1310736 + ($139 + -5 << 2) | 0;
     HEAP32[$149 >> 2] = (HEAP32[$149 >> 2] | 0) + $$0382;
     $153 = $4 + 1310736 + ($139 + -4 << 2) | 0;
     if ((HEAP32[$153 >> 2] | 0) > ($$2387 | 0)) HEAP32[$153 >> 2] = $$2387;
     HEAP32[$4 + 1310736 + ($139 + -1 << 2) >> 2] = $$0382;
     $$2392 = $$1391;
     break;
    }
    $106 = HEAP32[$4 + 1179664 + ($57 + -1 << 2) >> 2] | 0;
    $109 = HEAP32[$4 + 1179664 + (($101 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if (($106 | 0) <= ($109 | 0)) {
     HEAP16[$$3 >> 1] = $106;
     if (($106 | 0) < ($109 | 0)) {
      $$3377 = $21;
      $$3381 = 0;
      while (1) {
       if (($$3381 | 0) >= ($$1391 | 0)) {
        $124 = $106;
        break L61;
       }
       if ((HEAP32[$$3377 >> 2] | 0) == ($109 | 0)) HEAP32[$$3377 >> 2] = $106;
       $$3377 = $$3377 + 4 | 0;
       $$3381 = $$3381 + 1 | 0;
      }
     } else $124 = $106;
    } else {
     HEAP16[$$3 >> 1] = $109;
     $$2376 = $21;
     $$2380 = 0;
     while (1) {
      if (($$2380 | 0) >= ($$1391 | 0)) {
       $124 = $109;
       break L61;
      }
      if ((HEAP32[$$2376 >> 2] | 0) == ($106 | 0)) HEAP32[$$2376 >> 2] = $109;
      $$2376 = $$2376 + 4 | 0;
      $$2380 = $$2380 + 1 | 0;
     }
    } while (0);
    $126 = ($124 << 16 >> 16) * 7 | 0;
    $128 = $4 + 1310736 + ($126 + -7 << 2) | 0;
    HEAP32[$128 >> 2] = (HEAP32[$128 >> 2] | 0) + 1;
    $132 = $4 + 1310736 + ($126 + -6 << 2) | 0;
    HEAP32[$132 >> 2] = (HEAP32[$132 >> 2] | 0) + $$2387;
    $136 = $4 + 1310736 + ($126 + -5 << 2) | 0;
    HEAP32[$136 >> 2] = (HEAP32[$136 >> 2] | 0) + $$0382;
    $$2392 = $$1391;
   } while (0);
   $$1 = $$1 + 2 | 0;
   $$1391 = $$2392;
   $$1394 = $$1394 + 1 | 0;
   $$2387 = $$2387 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0369 = $$1 + $1 + 4 | 0;
  $$0382 = $$0382 + 1 | 0;
  $$0390 = $$1391;
  $$0393 = $$1394 + 2 | 0;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 23780, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $226 = $4 + 12 | 0;
  $$1383 = 1;
  $$3388 = 1;
  $$4 = $21;
  while (1) {
   if (($$3388 | 0) > ($$0390 | 0)) break;
   $228 = HEAP32[$$4 >> 2] | 0;
   if (($228 | 0) == ($$3388 | 0)) {
    $$2384 = $$1383 + 1 | 0;
    $234 = $$1383;
   } else {
    $$2384 = $$1383;
    $234 = HEAP32[$4 + 1179664 + ($228 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $234;
   $$1383 = $$2384;
   $$3388 = $$3388 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $237 = $4 + 8 | 0;
  $238 = $$1383 + -1 | 0;
  HEAP32[$237 >> 2] = $238;
  if (!$238) $$0 = 0; else {
   _memset($226 | 0, 0, $238 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $238 << 4 | 0) | 0;
   $$4389 = 0;
   while (1) {
    if (($$4389 | 0) >= ($238 | 0)) break;
    $244 = $$4389 << 2;
    HEAP32[$4 + 131084 + ($244 << 2) >> 2] = $5;
    HEAP32[$4 + 131084 + (($244 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($244 | 2) << 2) >> 2] = $6;
    HEAP32[$4 + 131084 + (($244 | 3) << 2) >> 2] = 0;
    $$4389 = $$4389 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0390 | 0)) break;
    $256 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $257 = $$5 * 7 | 0;
    $260 = $4 + 12 + ($256 << 2) | 0;
    HEAP32[$260 >> 2] = (HEAP32[$260 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($257 << 2) >> 2] | 0);
    $267 = $256 << 1;
    $268 = $4 + 655376 + ($267 << 3) | 0;
    HEAPF64[$268 >> 3] = +HEAPF64[$268 >> 3] + +(HEAP32[$4 + 1310736 + ($257 + 1 << 2) >> 2] | 0);
    $276 = $4 + 655376 + (($267 | 1) << 3) | 0;
    HEAPF64[$276 >> 3] = +HEAPF64[$276 >> 3] + +(HEAP32[$4 + 1310736 + ($257 + 2 << 2) >> 2] | 0);
    $279 = $256 << 2;
    $280 = $4 + 131084 + ($279 << 2) | 0;
    $284 = HEAP32[$4 + 1310736 + ($257 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$280 >> 2] | 0) > ($284 | 0)) HEAP32[$280 >> 2] = $284;
    $287 = $4 + 131084 + (($279 | 1) << 2) | 0;
    $291 = HEAP32[$4 + 1310736 + ($257 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$287 >> 2] | 0) < ($291 | 0)) HEAP32[$287 >> 2] = $291;
    $294 = $4 + 131084 + (($279 | 2) << 2) | 0;
    $298 = HEAP32[$4 + 1310736 + ($257 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$294 >> 2] | 0) > ($298 | 0)) HEAP32[$294 >> 2] = $298;
    $301 = $4 + 131084 + (($279 | 3) << 2) | 0;
    $305 = HEAP32[$4 + 1310736 + ($257 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$301 >> 2] | 0) < ($305 | 0)) HEAP32[$301 >> 2] = $305;
    $$5 = $$5 + 1 | 0;
   }
   $308 = HEAP32[$237 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($308 | 0)) {
     $$0 = 0;
     break L80;
    }
    $312 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $313 = $$6 << 1;
    $314 = $4 + 655376 + ($313 << 3) | 0;
    HEAPF64[$314 >> 3] = +HEAPF64[$314 >> 3] / $312;
    $318 = $4 + 655376 + (($313 | 1) << 3) | 0;
    HEAPF64[$318 >> 3] = +HEAPF64[$318 >> 3] / $312;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision21HoughSimilarityVoting4voteEffff($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = +$3;
 $4 = +$4;
 var $$0 = 0, $10 = 0.0, $102 = 0, $106 = 0, $113 = 0, $118 = 0, $122 = 0, $129 = 0, $13 = 0.0, $134 = 0, $138 = 0, $145 = 0, $150 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0.0, $162 = 0, $166 = 0, $170 = 0, $174 = 0, $176 = 0, $178 = 0, $18 = 0.0, $180 = 0, $185 = 0, $190 = 0, $195 = 0, $22 = 0.0, $25 = 0.0, $33 = 0, $38 = 0, $42 = 0, $49 = 0, $5 = 0, $54 = 0, $58 = 0, $65 = 0, $7 = 0.0, $70 = 0, $74 = 0, $81 = 0, $86 = 0, $90 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 $7 = +HEAPF32[$0 + 20 >> 2];
 if ((((((!($7 > $1) ? ($10 = +HEAPF32[$0 + 24 >> 2], !($10 <= $1)) : 0) ? ($13 = +HEAPF32[$0 + 28 >> 2], !($13 > $2)) : 0) ? ($16 = +HEAPF32[$0 + 32 >> 2], !($16 <= $2)) : 0) ? ($18 = $3, !($18 <= -3.141592653589793 | $18 > 3.141592653589793)) : 0) ? ($22 = +HEAPF32[$0 + 36 >> 2], !($22 > $4)) : 0) ? ($25 = +HEAPF32[$0 + 40 >> 2], !($25 <= $4)) : 0) {
  if (!($7 <= $1)) {
   $33 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36193) | 0, 36227) | 0, 39072) | 0, 360) | 0, 39079) | 0, 36314) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $33 + (HEAP32[(HEAP32[$33 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $38 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
   $42 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$38 >> 2] | 0) + 28 >> 2] & 127]($38, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($33, $42) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($33) | 0;
   _abort();
  }
  if (!($10 > $1)) {
   $49 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36329) | 0, 36227) | 0, 39072) | 0, 361) | 0, 39079) | 0, 36314) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $49 + (HEAP32[(HEAP32[$49 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $54 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
   $58 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$54 >> 2] | 0) + 28 >> 2] & 127]($54, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($49, $58) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($49) | 0;
   _abort();
  }
  if (!($13 <= $2)) {
   $65 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36362) | 0, 36227) | 0, 39072) | 0, 362) | 0, 39079) | 0, 36396) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $65 + (HEAP32[(HEAP32[$65 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $70 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
   $74 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$70 >> 2] | 0) + 28 >> 2] & 127]($70, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($65, $74) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($65) | 0;
   _abort();
  }
  if (!($16 > $2)) {
   $81 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36411) | 0, 36227) | 0, 39072) | 0, 363) | 0, 39079) | 0, 36396) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $81 + (HEAP32[(HEAP32[$81 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $86 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
   $90 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$86 >> 2] | 0) + 28 >> 2] & 127]($86, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($81, $90) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($81) | 0;
   _abort();
  }
  if (!($18 > -3.141592653589793)) {
   $97 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36444) | 0, 36227) | 0, 39072) | 0, 364) | 0, 39079) | 0, 36479) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $97 + (HEAP32[(HEAP32[$97 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $102 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
   $106 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$102 >> 2] | 0) + 28 >> 2] & 127]($102, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($97, $106) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($97) | 0;
   _abort();
  }
  if (!($18 <= 3.141592653589793)) {
   $113 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36498) | 0, 36227) | 0, 39072) | 0, 365) | 0, 39079) | 0, 36479) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $113 + (HEAP32[(HEAP32[$113 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $118 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
   $122 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$118 >> 2] | 0) + 28 >> 2] & 127]($118, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($113, $122) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($113) | 0;
   _abort();
  }
  if (!($22 <= $4)) {
   $129 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36533) | 0, 36227) | 0, 39072) | 0, 366) | 0, 39079) | 0, 36575) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $129 + (HEAP32[(HEAP32[$129 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $134 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
   $138 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$134 >> 2] | 0) + 28 >> 2] & 127]($134, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($129, $138) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($129) | 0;
   _abort();
  }
  if (!($25 > $4)) {
   $145 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36594) | 0, 36227) | 0, 39072) | 0, 367) | 0, 39079) | 0, 36575) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $145 + (HEAP32[(HEAP32[$145 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $150 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
   $154 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$150 >> 2] | 0) + 28 >> 2] & 127]($150, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($145, $154) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($145) | 0;
   _abort();
  }
  $155 = $0 + 68 | 0;
  $156 = $0 + 72 | 0;
  $157 = $0 + 76 | 0;
  $158 = $0 + 80 | 0;
  __ZNK6vision21HoughSimilarityVoting12mapVoteToBinERfS1_S1_S1_ffff($0, $155, $156, $157, $158, $1, $2, $3, $4);
  $162 = ~~+Math_floor(+(+HEAPF32[$155 >> 2] + -.5));
  $166 = ~~+Math_floor(+(+HEAPF32[$156 >> 2] + -.5));
  $170 = ~~+Math_floor(+(+HEAPF32[$157 >> 2] + -.5));
  $174 = ~~+Math_floor(+(+HEAPF32[$158 >> 2] + -.5));
  $176 = HEAP32[$0 + 60 >> 2] | 0;
  $178 = ($176 + $170 | 0) % ($176 | 0) | 0;
  if (((($162 | 0) >= 0 ? ($180 = $162 + 1 | 0, !(($166 | 0) < 0 ? 1 : ($180 | 0) >= (HEAP32[$0 + 52 >> 2] | 0))) : 0) ? ($185 = $166 + 1 | 0, !(($174 | 0) < 0 ? 1 : ($185 | 0) >= (HEAP32[$0 + 56 >> 2] | 0))) : 0) ? ($190 = $174 + 1 | 0, ($190 | 0) < (HEAP32[$0 + 64 >> 2] | 0)) : 0) {
   $195 = ($178 + 1 | 0) % ($176 | 0) | 0;
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $166, $178, $174) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $166, $178, $174) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $185, $178, $174) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $185, $195, $174) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $185, $195, $190) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $185, $178, $190) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $166, $195, $174) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $166, $195, $190) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $166, $178, $190) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $185, $178, $174) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $185, $195, $174) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $185, $195, $190) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $185, $178, $190) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $166, $195, $174) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $166, $195, $190) | 0, 1);
   __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $166, $178, $190) | 0, 1);
   $$0 = 1;
  } else $$0 = 0;
 } else $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubEWRC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0367 = 0, $$0368 = 0, $$0370 = 0, $$0372 = 0, $$0376 = 0, $$0380 = 0, $$0383 = 0, $$0388 = 0, $$0391 = 0, $$1 = 0, $$1369 = 0, $$1371 = 0, $$1373 = 0, $$1377 = 0, $$1381 = 0, $$1384 = 0, $$1389 = 0, $$1392 = 0, $$2 = 0, $$2374 = 0, $$2378 = 0, $$2382 = 0, $$2385 = 0, $$2390 = 0, $$3 = 0, $$3375 = 0, $$3379 = 0, $$3386 = 0, $$4 = 0, $$4387 = 0, $$5 = 0, $$6 = 0, $102 = 0, $105 = 0, $120 = 0, $122 = 0, $124 = 0, $128 = 0, $13 = 0, $132 = 0, $135 = 0, $137 = 0, $141 = 0, $145 = 0, $149 = 0, $154 = 0, $156 = 0, $160 = 0, $164 = 0, $168 = 0, $174 = 0, $177 = 0, $179 = 0, $183 = 0, $187 = 0, $19 = 0, $191 = 0, $194 = 0, $199 = 0, $20 = 0, $221 = 0, $223 = 0, $229 = 0, $232 = 0, $233 = 0, $239 = 0, $251 = 0, $252 = 0, $255 = 0, $26 = 0, $262 = 0, $263 = 0, $271 = 0, $274 = 0, $275 = 0, $279 = 0, $282 = 0, $286 = 0, $289 = 0, $293 = 0, $296 = 0, $300 = 0, $303 = 0, $307 = 0.0, $308 = 0, $309 = 0, $313 = 0, $32 = 0, $33 = 0, $36 = 0, $38 = 0, $42 = 0, $46 = 0, $5 = 0, $52 = 0, $53 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $61 = 0, $64 = 0, $79 = 0, $81 = 0, $83 = 0, $87 = 0, $91 = 0, $97 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0368 = $5;
 $$0370 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 $$0383 = 0;
 while (1) {
  if (($$0383 | 0) >= ($1 | 0)) break;
  HEAP16[$$0370 >> 1] = 0;
  HEAP16[$$0368 >> 1] = 0;
  $$0368 = $$0368 + 2 | 0;
  $$0370 = $$0370 + 2 | 0;
  $$0383 = $$0383 + 1 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1369 = $5;
 $$1371 = $5 + ($13 << 1) | 0;
 $$1384 = 0;
 while (1) {
  if (($$1384 | 0) >= ($2 | 0)) break;
  HEAP16[$$1371 >> 1] = 0;
  HEAP16[$$1369 >> 1] = 0;
  $$1369 = $$1369 + ($1 << 1) | 0;
  $$1371 = $$1371 + ($1 << 1) | 0;
  $$1384 = $$1384 + 1 | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $26 = 0 - $1 | 0;
 $$0367 = $0 + $20 | 0;
 $$0380 = 1;
 $$0388 = 0;
 $$0391 = (HEAP32[$4 + 4 >> 2] | 0) + $20 | 0;
 $$2 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0380 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0367;
  $$1389 = $$0388;
  $$1392 = $$0391;
  $$2385 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2385 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    HEAP8[$$1392 >> 0] = -1;
    $32 = $$3 + ($26 << 1) | 0;
    $33 = HEAP16[$32 >> 1] | 0;
    if ($33 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $33;
     $36 = ($33 << 16 >> 16) * 7 | 0;
     $38 = $4 + 1310736 + ($36 + -7 << 2) | 0;
     HEAP32[$38 >> 2] = (HEAP32[$38 >> 2] | 0) + 1;
     $42 = $4 + 1310736 + ($36 + -6 << 2) | 0;
     HEAP32[$42 >> 2] = (HEAP32[$42 >> 2] | 0) + $$2385;
     $46 = $4 + 1310736 + ($36 + -5 << 2) | 0;
     HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + $$0380;
     HEAP32[$4 + 1310736 + ($36 + -1 << 2) >> 2] = $$0380;
     $$2390 = $$1389;
     break;
    }
    $52 = HEAP16[$32 + 2 >> 1] | 0;
    $53 = $52 << 16 >> 16;
    $56 = HEAP16[$32 + -2 >> 1] | 0;
    $57 = $56 << 16 >> 16;
    $58 = $56 << 16 >> 16 > 0;
    if ($52 << 16 >> 16 <= 0) {
     if ($58) {
      HEAP16[$$3 >> 1] = $56;
      $154 = $57 * 7 | 0;
      $156 = $4 + 1310736 + ($154 + -7 << 2) | 0;
      HEAP32[$156 >> 2] = (HEAP32[$156 >> 2] | 0) + 1;
      $160 = $4 + 1310736 + ($154 + -6 << 2) | 0;
      HEAP32[$160 >> 2] = (HEAP32[$160 >> 2] | 0) + $$2385;
      $164 = $4 + 1310736 + ($154 + -5 << 2) | 0;
      HEAP32[$164 >> 2] = (HEAP32[$164 >> 2] | 0) + $$0380;
      $168 = $4 + 1310736 + ($154 + -3 << 2) | 0;
      if ((HEAP32[$168 >> 2] | 0) < ($$2385 | 0)) HEAP32[$168 >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($154 + -1 << 2) >> 2] = $$0380;
      $$2390 = $$1389;
      break;
     }
     $174 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($174 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $174;
      $177 = ($174 << 16 >> 16) * 7 | 0;
      $179 = $4 + 1310736 + ($177 + -7 << 2) | 0;
      HEAP32[$179 >> 2] = (HEAP32[$179 >> 2] | 0) + 1;
      $183 = $4 + 1310736 + ($177 + -6 << 2) | 0;
      HEAP32[$183 >> 2] = (HEAP32[$183 >> 2] | 0) + $$2385;
      $187 = $4 + 1310736 + ($177 + -5 << 2) | 0;
      HEAP32[$187 >> 2] = (HEAP32[$187 >> 2] | 0) + $$0380;
      $191 = $4 + 1310736 + ($177 + -3 << 2) | 0;
      if ((HEAP32[$191 >> 2] | 0) >= ($$2385 | 0)) {
       $$2390 = $$1389;
       break;
      }
      HEAP32[$191 >> 2] = $$2385;
      $$2390 = $$1389;
      break;
     } else {
      $194 = $$1389 + 1 | 0;
      if (($$1389 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $194;
      HEAP32[$4 + 1179664 + ($$1389 << 2) >> 2] = $194 << 16 >> 16;
      $199 = $$1389 * 7 | 0;
      HEAP32[$4 + 1310736 + ($199 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($199 + 1 << 2) >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($199 + 2 << 2) >> 2] = $$0380;
      HEAP32[$4 + 1310736 + ($199 + 3 << 2) >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($199 + 4 << 2) >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($199 + 5 << 2) >> 2] = $$0380;
      HEAP32[$4 + 1310736 + ($199 + 6 << 2) >> 2] = $$0380;
      $$2390 = $194;
      break;
     }
    }
    if ($58) {
     $61 = HEAP32[$4 + 1179664 + ($53 + -1 << 2) >> 2] | 0;
     $64 = HEAP32[$4 + 1179664 + ($57 + -1 << 2) >> 2] | 0;
     L36 : do if (($61 | 0) <= ($64 | 0)) {
      HEAP16[$$3 >> 1] = $61;
      if (($61 | 0) < ($64 | 0)) {
       $$1373 = $19;
       $$1377 = 0;
       while (1) {
        if (($$1377 | 0) >= ($$1389 | 0)) {
         $79 = $61;
         break L36;
        }
        if ((HEAP32[$$1373 >> 2] | 0) == ($64 | 0)) HEAP32[$$1373 >> 2] = $61;
        $$1373 = $$1373 + 4 | 0;
        $$1377 = $$1377 + 1 | 0;
       }
      } else $79 = $61;
     } else {
      HEAP16[$$3 >> 1] = $64;
      $$0372 = $19;
      $$0376 = 0;
      while (1) {
       if (($$0376 | 0) >= ($$1389 | 0)) {
        $79 = $64;
        break L36;
       }
       if ((HEAP32[$$0372 >> 2] | 0) == ($61 | 0)) HEAP32[$$0372 >> 2] = $64;
       $$0372 = $$0372 + 4 | 0;
       $$0376 = $$0376 + 1 | 0;
      }
     } while (0);
     $81 = ($79 << 16 >> 16) * 7 | 0;
     $83 = $4 + 1310736 + ($81 + -7 << 2) | 0;
     HEAP32[$83 >> 2] = (HEAP32[$83 >> 2] | 0) + 1;
     $87 = $4 + 1310736 + ($81 + -6 << 2) | 0;
     HEAP32[$87 >> 2] = (HEAP32[$87 >> 2] | 0) + $$2385;
     $91 = $4 + 1310736 + ($81 + -5 << 2) | 0;
     HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + $$0380;
     HEAP32[$4 + 1310736 + ($81 + -1 << 2) >> 2] = $$0380;
     $$2390 = $$1389;
     break;
    }
    $97 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($97 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $52;
     $135 = $53 * 7 | 0;
     $137 = $4 + 1310736 + ($135 + -7 << 2) | 0;
     HEAP32[$137 >> 2] = (HEAP32[$137 >> 2] | 0) + 1;
     $141 = $4 + 1310736 + ($135 + -6 << 2) | 0;
     HEAP32[$141 >> 2] = (HEAP32[$141 >> 2] | 0) + $$2385;
     $145 = $4 + 1310736 + ($135 + -5 << 2) | 0;
     HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + $$0380;
     $149 = $4 + 1310736 + ($135 + -4 << 2) | 0;
     if ((HEAP32[$149 >> 2] | 0) > ($$2385 | 0)) HEAP32[$149 >> 2] = $$2385;
     HEAP32[$4 + 1310736 + ($135 + -1 << 2) >> 2] = $$0380;
     $$2390 = $$1389;
     break;
    }
    $102 = HEAP32[$4 + 1179664 + ($53 + -1 << 2) >> 2] | 0;
    $105 = HEAP32[$4 + 1179664 + (($97 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if (($102 | 0) <= ($105 | 0)) {
     HEAP16[$$3 >> 1] = $102;
     if (($102 | 0) < ($105 | 0)) {
      $$3375 = $19;
      $$3379 = 0;
      while (1) {
       if (($$3379 | 0) >= ($$1389 | 0)) {
        $120 = $102;
        break L60;
       }
       if ((HEAP32[$$3375 >> 2] | 0) == ($105 | 0)) HEAP32[$$3375 >> 2] = $102;
       $$3375 = $$3375 + 4 | 0;
       $$3379 = $$3379 + 1 | 0;
      }
     } else $120 = $102;
    } else {
     HEAP16[$$3 >> 1] = $105;
     $$2374 = $19;
     $$2378 = 0;
     while (1) {
      if (($$2378 | 0) >= ($$1389 | 0)) {
       $120 = $105;
       break L60;
      }
      if ((HEAP32[$$2374 >> 2] | 0) == ($102 | 0)) HEAP32[$$2374 >> 2] = $105;
      $$2374 = $$2374 + 4 | 0;
      $$2378 = $$2378 + 1 | 0;
     }
    } while (0);
    $122 = ($120 << 16 >> 16) * 7 | 0;
    $124 = $4 + 1310736 + ($122 + -7 << 2) | 0;
    HEAP32[$124 >> 2] = (HEAP32[$124 >> 2] | 0) + 1;
    $128 = $4 + 1310736 + ($122 + -6 << 2) | 0;
    HEAP32[$128 >> 2] = (HEAP32[$128 >> 2] | 0) + $$2385;
    $132 = $4 + 1310736 + ($122 + -5 << 2) | 0;
    HEAP32[$132 >> 2] = (HEAP32[$132 >> 2] | 0) + $$0380;
    $$2390 = $$1389;
   } else {
    HEAP16[$$3 >> 1] = 0;
    HEAP8[$$1392 >> 0] = 0;
    $$2390 = $$1389;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1389 = $$2390;
   $$1392 = $$1392 + 1 | 0;
   $$2385 = $$2385 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0367 = $$1 + 2 | 0;
  $$0380 = $$0380 + 1 | 0;
  $$0388 = $$1389;
  $$0391 = $$1392 + 2 | 0;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 23780, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $221 = $4 + 12 | 0;
  $$1381 = 1;
  $$3386 = 1;
  $$4 = $19;
  while (1) {
   if (($$3386 | 0) > ($$0388 | 0)) break;
   $223 = HEAP32[$$4 >> 2] | 0;
   if (($223 | 0) == ($$3386 | 0)) {
    $$2382 = $$1381 + 1 | 0;
    $229 = $$1381;
   } else {
    $$2382 = $$1381;
    $229 = HEAP32[$4 + 1179664 + ($223 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $229;
   $$1381 = $$2382;
   $$3386 = $$3386 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $232 = $4 + 8 | 0;
  $233 = $$1381 + -1 | 0;
  HEAP32[$232 >> 2] = $233;
  if (!$233) $$0 = 0; else {
   _memset($221 | 0, 0, $233 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $233 << 4 | 0) | 0;
   $$4387 = 0;
   while (1) {
    if (($$4387 | 0) >= ($233 | 0)) break;
    $239 = $$4387 << 2;
    HEAP32[$4 + 131084 + ($239 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($239 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($239 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($239 | 3) << 2) >> 2] = 0;
    $$4387 = $$4387 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0388 | 0)) break;
    $251 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $252 = $$5 * 7 | 0;
    $255 = $4 + 12 + ($251 << 2) | 0;
    HEAP32[$255 >> 2] = (HEAP32[$255 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($252 << 2) >> 2] | 0);
    $262 = $251 << 1;
    $263 = $4 + 655376 + ($262 << 3) | 0;
    HEAPF64[$263 >> 3] = +HEAPF64[$263 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 1 << 2) >> 2] | 0);
    $271 = $4 + 655376 + (($262 | 1) << 3) | 0;
    HEAPF64[$271 >> 3] = +HEAPF64[$271 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 2 << 2) >> 2] | 0);
    $274 = $251 << 2;
    $275 = $4 + 131084 + ($274 << 2) | 0;
    $279 = HEAP32[$4 + 1310736 + ($252 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$275 >> 2] | 0) > ($279 | 0)) HEAP32[$275 >> 2] = $279;
    $282 = $4 + 131084 + (($274 | 1) << 2) | 0;
    $286 = HEAP32[$4 + 1310736 + ($252 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$282 >> 2] | 0) < ($286 | 0)) HEAP32[$282 >> 2] = $286;
    $289 = $4 + 131084 + (($274 | 2) << 2) | 0;
    $293 = HEAP32[$4 + 1310736 + ($252 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$289 >> 2] | 0) > ($293 | 0)) HEAP32[$289 >> 2] = $293;
    $296 = $4 + 131084 + (($274 | 3) << 2) | 0;
    $300 = HEAP32[$4 + 1310736 + ($252 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$296 >> 2] | 0) < ($300 | 0)) HEAP32[$296 >> 2] = $300;
    $$5 = $$5 + 1 | 0;
   }
   $303 = HEAP32[$232 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($303 | 0)) {
     $$0 = 0;
     break L80;
    }
    $307 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $308 = $$6 << 1;
    $309 = $4 + 655376 + ($308 << 3) | 0;
    HEAPF64[$309 >> 3] = +HEAPF64[$309 >> 3] / $307;
    $313 = $4 + 655376 + (($308 | 1) << 3) | 0;
    HEAPF64[$313 >> 3] = +HEAPF64[$313 >> 3] / $307;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubEBRC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0367 = 0, $$0368 = 0, $$0370 = 0, $$0372 = 0, $$0376 = 0, $$0380 = 0, $$0383 = 0, $$0388 = 0, $$0391 = 0, $$1 = 0, $$1369 = 0, $$1371 = 0, $$1373 = 0, $$1377 = 0, $$1381 = 0, $$1384 = 0, $$1389 = 0, $$1392 = 0, $$2 = 0, $$2374 = 0, $$2378 = 0, $$2382 = 0, $$2385 = 0, $$2390 = 0, $$3 = 0, $$3375 = 0, $$3379 = 0, $$3386 = 0, $$4 = 0, $$4387 = 0, $$5 = 0, $$6 = 0, $102 = 0, $105 = 0, $120 = 0, $122 = 0, $124 = 0, $128 = 0, $13 = 0, $132 = 0, $135 = 0, $137 = 0, $141 = 0, $145 = 0, $149 = 0, $154 = 0, $156 = 0, $160 = 0, $164 = 0, $168 = 0, $174 = 0, $177 = 0, $179 = 0, $183 = 0, $187 = 0, $19 = 0, $191 = 0, $194 = 0, $199 = 0, $20 = 0, $221 = 0, $223 = 0, $229 = 0, $232 = 0, $233 = 0, $239 = 0, $251 = 0, $252 = 0, $255 = 0, $26 = 0, $262 = 0, $263 = 0, $271 = 0, $274 = 0, $275 = 0, $279 = 0, $282 = 0, $286 = 0, $289 = 0, $293 = 0, $296 = 0, $300 = 0, $303 = 0, $307 = 0.0, $308 = 0, $309 = 0, $313 = 0, $32 = 0, $33 = 0, $36 = 0, $38 = 0, $42 = 0, $46 = 0, $5 = 0, $52 = 0, $53 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $61 = 0, $64 = 0, $79 = 0, $81 = 0, $83 = 0, $87 = 0, $91 = 0, $97 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0368 = $5;
 $$0370 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 $$0383 = 0;
 while (1) {
  if (($$0383 | 0) >= ($1 | 0)) break;
  HEAP16[$$0370 >> 1] = 0;
  HEAP16[$$0368 >> 1] = 0;
  $$0368 = $$0368 + 2 | 0;
  $$0370 = $$0370 + 2 | 0;
  $$0383 = $$0383 + 1 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1369 = $5;
 $$1371 = $5 + ($13 << 1) | 0;
 $$1384 = 0;
 while (1) {
  if (($$1384 | 0) >= ($2 | 0)) break;
  HEAP16[$$1371 >> 1] = 0;
  HEAP16[$$1369 >> 1] = 0;
  $$1369 = $$1369 + ($1 << 1) | 0;
  $$1371 = $$1371 + ($1 << 1) | 0;
  $$1384 = $$1384 + 1 | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $26 = 0 - $1 | 0;
 $$0367 = $0 + $20 | 0;
 $$0380 = 1;
 $$0388 = 0;
 $$0391 = (HEAP32[$4 + 4 >> 2] | 0) + $20 | 0;
 $$2 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0380 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0367;
  $$1389 = $$0388;
  $$1392 = $$0391;
  $$2385 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2385 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    HEAP16[$$3 >> 1] = 0;
    HEAP8[$$1392 >> 0] = 0;
    $$2390 = $$1389;
   } else {
    HEAP8[$$1392 >> 0] = -1;
    $32 = $$3 + ($26 << 1) | 0;
    $33 = HEAP16[$32 >> 1] | 0;
    if ($33 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $33;
     $36 = ($33 << 16 >> 16) * 7 | 0;
     $38 = $4 + 1310736 + ($36 + -7 << 2) | 0;
     HEAP32[$38 >> 2] = (HEAP32[$38 >> 2] | 0) + 1;
     $42 = $4 + 1310736 + ($36 + -6 << 2) | 0;
     HEAP32[$42 >> 2] = (HEAP32[$42 >> 2] | 0) + $$2385;
     $46 = $4 + 1310736 + ($36 + -5 << 2) | 0;
     HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + $$0380;
     HEAP32[$4 + 1310736 + ($36 + -1 << 2) >> 2] = $$0380;
     $$2390 = $$1389;
     break;
    }
    $52 = HEAP16[$32 + 2 >> 1] | 0;
    $53 = $52 << 16 >> 16;
    $56 = HEAP16[$32 + -2 >> 1] | 0;
    $57 = $56 << 16 >> 16;
    $58 = $56 << 16 >> 16 > 0;
    if ($52 << 16 >> 16 <= 0) {
     if ($58) {
      HEAP16[$$3 >> 1] = $56;
      $154 = $57 * 7 | 0;
      $156 = $4 + 1310736 + ($154 + -7 << 2) | 0;
      HEAP32[$156 >> 2] = (HEAP32[$156 >> 2] | 0) + 1;
      $160 = $4 + 1310736 + ($154 + -6 << 2) | 0;
      HEAP32[$160 >> 2] = (HEAP32[$160 >> 2] | 0) + $$2385;
      $164 = $4 + 1310736 + ($154 + -5 << 2) | 0;
      HEAP32[$164 >> 2] = (HEAP32[$164 >> 2] | 0) + $$0380;
      $168 = $4 + 1310736 + ($154 + -3 << 2) | 0;
      if ((HEAP32[$168 >> 2] | 0) < ($$2385 | 0)) HEAP32[$168 >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($154 + -1 << 2) >> 2] = $$0380;
      $$2390 = $$1389;
      break;
     }
     $174 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($174 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $174;
      $177 = ($174 << 16 >> 16) * 7 | 0;
      $179 = $4 + 1310736 + ($177 + -7 << 2) | 0;
      HEAP32[$179 >> 2] = (HEAP32[$179 >> 2] | 0) + 1;
      $183 = $4 + 1310736 + ($177 + -6 << 2) | 0;
      HEAP32[$183 >> 2] = (HEAP32[$183 >> 2] | 0) + $$2385;
      $187 = $4 + 1310736 + ($177 + -5 << 2) | 0;
      HEAP32[$187 >> 2] = (HEAP32[$187 >> 2] | 0) + $$0380;
      $191 = $4 + 1310736 + ($177 + -3 << 2) | 0;
      if ((HEAP32[$191 >> 2] | 0) >= ($$2385 | 0)) {
       $$2390 = $$1389;
       break;
      }
      HEAP32[$191 >> 2] = $$2385;
      $$2390 = $$1389;
      break;
     } else {
      $194 = $$1389 + 1 | 0;
      if (($$1389 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $194;
      HEAP32[$4 + 1179664 + ($$1389 << 2) >> 2] = $194 << 16 >> 16;
      $199 = $$1389 * 7 | 0;
      HEAP32[$4 + 1310736 + ($199 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($199 + 1 << 2) >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($199 + 2 << 2) >> 2] = $$0380;
      HEAP32[$4 + 1310736 + ($199 + 3 << 2) >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($199 + 4 << 2) >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($199 + 5 << 2) >> 2] = $$0380;
      HEAP32[$4 + 1310736 + ($199 + 6 << 2) >> 2] = $$0380;
      $$2390 = $194;
      break;
     }
    }
    if ($58) {
     $61 = HEAP32[$4 + 1179664 + ($53 + -1 << 2) >> 2] | 0;
     $64 = HEAP32[$4 + 1179664 + ($57 + -1 << 2) >> 2] | 0;
     L37 : do if (($61 | 0) <= ($64 | 0)) {
      HEAP16[$$3 >> 1] = $61;
      if (($61 | 0) < ($64 | 0)) {
       $$1373 = $19;
       $$1377 = 0;
       while (1) {
        if (($$1377 | 0) >= ($$1389 | 0)) {
         $79 = $61;
         break L37;
        }
        if ((HEAP32[$$1373 >> 2] | 0) == ($64 | 0)) HEAP32[$$1373 >> 2] = $61;
        $$1373 = $$1373 + 4 | 0;
        $$1377 = $$1377 + 1 | 0;
       }
      } else $79 = $61;
     } else {
      HEAP16[$$3 >> 1] = $64;
      $$0372 = $19;
      $$0376 = 0;
      while (1) {
       if (($$0376 | 0) >= ($$1389 | 0)) {
        $79 = $64;
        break L37;
       }
       if ((HEAP32[$$0372 >> 2] | 0) == ($61 | 0)) HEAP32[$$0372 >> 2] = $64;
       $$0372 = $$0372 + 4 | 0;
       $$0376 = $$0376 + 1 | 0;
      }
     } while (0);
     $81 = ($79 << 16 >> 16) * 7 | 0;
     $83 = $4 + 1310736 + ($81 + -7 << 2) | 0;
     HEAP32[$83 >> 2] = (HEAP32[$83 >> 2] | 0) + 1;
     $87 = $4 + 1310736 + ($81 + -6 << 2) | 0;
     HEAP32[$87 >> 2] = (HEAP32[$87 >> 2] | 0) + $$2385;
     $91 = $4 + 1310736 + ($81 + -5 << 2) | 0;
     HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + $$0380;
     HEAP32[$4 + 1310736 + ($81 + -1 << 2) >> 2] = $$0380;
     $$2390 = $$1389;
     break;
    }
    $97 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($97 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $52;
     $135 = $53 * 7 | 0;
     $137 = $4 + 1310736 + ($135 + -7 << 2) | 0;
     HEAP32[$137 >> 2] = (HEAP32[$137 >> 2] | 0) + 1;
     $141 = $4 + 1310736 + ($135 + -6 << 2) | 0;
     HEAP32[$141 >> 2] = (HEAP32[$141 >> 2] | 0) + $$2385;
     $145 = $4 + 1310736 + ($135 + -5 << 2) | 0;
     HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + $$0380;
     $149 = $4 + 1310736 + ($135 + -4 << 2) | 0;
     if ((HEAP32[$149 >> 2] | 0) > ($$2385 | 0)) HEAP32[$149 >> 2] = $$2385;
     HEAP32[$4 + 1310736 + ($135 + -1 << 2) >> 2] = $$0380;
     $$2390 = $$1389;
     break;
    }
    $102 = HEAP32[$4 + 1179664 + ($53 + -1 << 2) >> 2] | 0;
    $105 = HEAP32[$4 + 1179664 + (($97 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if (($102 | 0) <= ($105 | 0)) {
     HEAP16[$$3 >> 1] = $102;
     if (($102 | 0) < ($105 | 0)) {
      $$3375 = $19;
      $$3379 = 0;
      while (1) {
       if (($$3379 | 0) >= ($$1389 | 0)) {
        $120 = $102;
        break L61;
       }
       if ((HEAP32[$$3375 >> 2] | 0) == ($105 | 0)) HEAP32[$$3375 >> 2] = $102;
       $$3375 = $$3375 + 4 | 0;
       $$3379 = $$3379 + 1 | 0;
      }
     } else $120 = $102;
    } else {
     HEAP16[$$3 >> 1] = $105;
     $$2374 = $19;
     $$2378 = 0;
     while (1) {
      if (($$2378 | 0) >= ($$1389 | 0)) {
       $120 = $105;
       break L61;
      }
      if ((HEAP32[$$2374 >> 2] | 0) == ($102 | 0)) HEAP32[$$2374 >> 2] = $105;
      $$2374 = $$2374 + 4 | 0;
      $$2378 = $$2378 + 1 | 0;
     }
    } while (0);
    $122 = ($120 << 16 >> 16) * 7 | 0;
    $124 = $4 + 1310736 + ($122 + -7 << 2) | 0;
    HEAP32[$124 >> 2] = (HEAP32[$124 >> 2] | 0) + 1;
    $128 = $4 + 1310736 + ($122 + -6 << 2) | 0;
    HEAP32[$128 >> 2] = (HEAP32[$128 >> 2] | 0) + $$2385;
    $132 = $4 + 1310736 + ($122 + -5 << 2) | 0;
    HEAP32[$132 >> 2] = (HEAP32[$132 >> 2] | 0) + $$0380;
    $$2390 = $$1389;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1389 = $$2390;
   $$1392 = $$1392 + 1 | 0;
   $$2385 = $$2385 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0367 = $$1 + 2 | 0;
  $$0380 = $$0380 + 1 | 0;
  $$0388 = $$1389;
  $$0391 = $$1392 + 2 | 0;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 23780, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $221 = $4 + 12 | 0;
  $$1381 = 1;
  $$3386 = 1;
  $$4 = $19;
  while (1) {
   if (($$3386 | 0) > ($$0388 | 0)) break;
   $223 = HEAP32[$$4 >> 2] | 0;
   if (($223 | 0) == ($$3386 | 0)) {
    $$2382 = $$1381 + 1 | 0;
    $229 = $$1381;
   } else {
    $$2382 = $$1381;
    $229 = HEAP32[$4 + 1179664 + ($223 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $229;
   $$1381 = $$2382;
   $$3386 = $$3386 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $232 = $4 + 8 | 0;
  $233 = $$1381 + -1 | 0;
  HEAP32[$232 >> 2] = $233;
  if (!$233) $$0 = 0; else {
   _memset($221 | 0, 0, $233 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $233 << 4 | 0) | 0;
   $$4387 = 0;
   while (1) {
    if (($$4387 | 0) >= ($233 | 0)) break;
    $239 = $$4387 << 2;
    HEAP32[$4 + 131084 + ($239 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($239 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($239 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($239 | 3) << 2) >> 2] = 0;
    $$4387 = $$4387 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0388 | 0)) break;
    $251 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $252 = $$5 * 7 | 0;
    $255 = $4 + 12 + ($251 << 2) | 0;
    HEAP32[$255 >> 2] = (HEAP32[$255 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($252 << 2) >> 2] | 0);
    $262 = $251 << 1;
    $263 = $4 + 655376 + ($262 << 3) | 0;
    HEAPF64[$263 >> 3] = +HEAPF64[$263 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 1 << 2) >> 2] | 0);
    $271 = $4 + 655376 + (($262 | 1) << 3) | 0;
    HEAPF64[$271 >> 3] = +HEAPF64[$271 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 2 << 2) >> 2] | 0);
    $274 = $251 << 2;
    $275 = $4 + 131084 + ($274 << 2) | 0;
    $279 = HEAP32[$4 + 1310736 + ($252 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$275 >> 2] | 0) > ($279 | 0)) HEAP32[$275 >> 2] = $279;
    $282 = $4 + 131084 + (($274 | 1) << 2) | 0;
    $286 = HEAP32[$4 + 1310736 + ($252 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$282 >> 2] | 0) < ($286 | 0)) HEAP32[$282 >> 2] = $286;
    $289 = $4 + 131084 + (($274 | 2) << 2) | 0;
    $293 = HEAP32[$4 + 1310736 + ($252 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$289 >> 2] | 0) > ($293 | 0)) HEAP32[$289 >> 2] = $293;
    $296 = $4 + 131084 + (($274 | 3) << 2) | 0;
    $300 = HEAP32[$4 + 1310736 + ($252 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$296 >> 2] | 0) < ($300 | 0)) HEAP32[$296 >> 2] = $300;
    $$5 = $$5 + 1 | 0;
   }
   $303 = HEAP32[$232 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($303 | 0)) {
     $$0 = 0;
     break L80;
    }
    $307 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $308 = $$6 << 1;
    $309 = $4 + 655376 + ($308 << 3) | 0;
    HEAPF64[$309 >> 3] = +HEAPF64[$309 >> 3] / $307;
    $313 = $4 + 655376 + (($308 | 1) << 3) | 0;
    HEAPF64[$313 >> 3] = +HEAPF64[$313 >> 3] / $307;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubDWZ($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0364 = 0, $$0365 = 0, $$0367 = 0, $$0369 = 0, $$0371 = 0, $$0375 = 0, $$0378 = 0, $$0383 = 0, $$0386 = 0, $$1 = 0, $$1366 = 0, $$1368 = 0, $$1370 = 0, $$1372 = 0, $$1376 = 0, $$1379 = 0, $$1384 = 0, $$1387 = 0, $$2 = 0, $$2373 = 0, $$2377 = 0, $$2380 = 0, $$2385 = 0, $$2388 = 0, $$3 = 0, $$3374 = 0, $$3381 = 0, $$3389 = 0, $$4 = 0, $$4382 = 0, $$5 = 0, $$6 = 0, $100 = 0, $103 = 0, $118 = 0, $120 = 0, $122 = 0, $126 = 0, $13 = 0, $130 = 0, $133 = 0, $135 = 0, $139 = 0, $143 = 0, $147 = 0, $152 = 0, $154 = 0, $158 = 0, $162 = 0, $166 = 0, $172 = 0, $175 = 0, $177 = 0, $181 = 0, $185 = 0, $189 = 0, $19 = 0, $192 = 0, $197 = 0, $20 = 0, $219 = 0, $221 = 0, $227 = 0, $230 = 0, $231 = 0, $237 = 0, $24 = 0, $249 = 0, $250 = 0, $253 = 0, $260 = 0, $261 = 0, $269 = 0, $272 = 0, $273 = 0, $277 = 0, $280 = 0, $284 = 0, $287 = 0, $291 = 0, $294 = 0, $298 = 0, $30 = 0, $301 = 0, $305 = 0.0, $306 = 0, $307 = 0, $31 = 0, $311 = 0, $34 = 0, $36 = 0, $40 = 0, $44 = 0, $5 = 0, $50 = 0, $51 = 0, $54 = 0, $55 = 0, $56 = 0, $59 = 0, $6 = 0, $62 = 0, $77 = 0, $79 = 0, $81 = 0, $85 = 0, $89 = 0, $95 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0367 = $5;
 $$0378 = 0;
 $$0386 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 while (1) {
  if (($$0378 | 0) >= ($1 | 0)) break;
  HEAP16[$$0386 >> 1] = 0;
  HEAP16[$$0367 >> 1] = 0;
  $$0367 = $$0367 + 2 | 0;
  $$0378 = $$0378 + 1 | 0;
  $$0386 = $$0386 + 2 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1368 = $5;
 $$1379 = 0;
 $$1387 = $5 + ($13 << 1) | 0;
 while (1) {
  if (($$1379 | 0) >= ($2 | 0)) break;
  HEAP16[$$1387 >> 1] = 0;
  HEAP16[$$1368 >> 1] = 0;
  $$1368 = $$1368 + ($1 << 1) | 0;
  $$1379 = $$1379 + 1 | 0;
  $$1387 = $$1387 + ($1 << 1) | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $24 = 0 - $1 | 0;
 $$0364 = $0 + $20 | 0;
 $$0365 = $3 + $20 | 0;
 $$0375 = 1;
 $$0383 = 0;
 $$2388 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0375 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0364;
  $$1366 = $$0365;
  $$1384 = $$0383;
  $$2380 = 1;
  $$3389 = $$2388;
  while (1) {
   if (($$2380 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0) > (HEAPU8[$$1366 >> 0] | 0)) {
    $30 = $$3389 + ($24 << 1) | 0;
    $31 = HEAP16[$30 >> 1] | 0;
    if ($31 << 16 >> 16 > 0) {
     HEAP16[$$3389 >> 1] = $31;
     $34 = ($31 << 16 >> 16) * 7 | 0;
     $36 = $4 + 1310736 + ($34 + -7 << 2) | 0;
     HEAP32[$36 >> 2] = (HEAP32[$36 >> 2] | 0) + 1;
     $40 = $4 + 1310736 + ($34 + -6 << 2) | 0;
     HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + $$2380;
     $44 = $4 + 1310736 + ($34 + -5 << 2) | 0;
     HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + $$0375;
     HEAP32[$4 + 1310736 + ($34 + -1 << 2) >> 2] = $$0375;
     $$2385 = $$1384;
     break;
    }
    $50 = HEAP16[$30 + 2 >> 1] | 0;
    $51 = $50 << 16 >> 16;
    $54 = HEAP16[$30 + -2 >> 1] | 0;
    $55 = $54 << 16 >> 16;
    $56 = $54 << 16 >> 16 > 0;
    if ($50 << 16 >> 16 <= 0) {
     if ($56) {
      HEAP16[$$3389 >> 1] = $54;
      $152 = $55 * 7 | 0;
      $154 = $4 + 1310736 + ($152 + -7 << 2) | 0;
      HEAP32[$154 >> 2] = (HEAP32[$154 >> 2] | 0) + 1;
      $158 = $4 + 1310736 + ($152 + -6 << 2) | 0;
      HEAP32[$158 >> 2] = (HEAP32[$158 >> 2] | 0) + $$2380;
      $162 = $4 + 1310736 + ($152 + -5 << 2) | 0;
      HEAP32[$162 >> 2] = (HEAP32[$162 >> 2] | 0) + $$0375;
      $166 = $4 + 1310736 + ($152 + -3 << 2) | 0;
      if ((HEAP32[$166 >> 2] | 0) < ($$2380 | 0)) HEAP32[$166 >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($152 + -1 << 2) >> 2] = $$0375;
      $$2385 = $$1384;
      break;
     }
     $172 = HEAP16[$$3389 + -2 >> 1] | 0;
     if ($172 << 16 >> 16 > 0) {
      HEAP16[$$3389 >> 1] = $172;
      $175 = ($172 << 16 >> 16) * 7 | 0;
      $177 = $4 + 1310736 + ($175 + -7 << 2) | 0;
      HEAP32[$177 >> 2] = (HEAP32[$177 >> 2] | 0) + 1;
      $181 = $4 + 1310736 + ($175 + -6 << 2) | 0;
      HEAP32[$181 >> 2] = (HEAP32[$181 >> 2] | 0) + $$2380;
      $185 = $4 + 1310736 + ($175 + -5 << 2) | 0;
      HEAP32[$185 >> 2] = (HEAP32[$185 >> 2] | 0) + $$0375;
      $189 = $4 + 1310736 + ($175 + -3 << 2) | 0;
      if ((HEAP32[$189 >> 2] | 0) >= ($$2380 | 0)) {
       $$2385 = $$1384;
       break;
      }
      HEAP32[$189 >> 2] = $$2380;
      $$2385 = $$1384;
      break;
     } else {
      $192 = $$1384 + 1 | 0;
      if (($$1384 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3389 >> 1] = $192;
      HEAP32[$4 + 1179664 + ($$1384 << 2) >> 2] = $192 << 16 >> 16;
      $197 = $$1384 * 7 | 0;
      HEAP32[$4 + 1310736 + ($197 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($197 + 1 << 2) >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($197 + 2 << 2) >> 2] = $$0375;
      HEAP32[$4 + 1310736 + ($197 + 3 << 2) >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($197 + 4 << 2) >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($197 + 5 << 2) >> 2] = $$0375;
      HEAP32[$4 + 1310736 + ($197 + 6 << 2) >> 2] = $$0375;
      $$2385 = $192;
      break;
     }
    }
    if ($56) {
     $59 = HEAP32[$4 + 1179664 + ($51 + -1 << 2) >> 2] | 0;
     $62 = HEAP32[$4 + 1179664 + ($55 + -1 << 2) >> 2] | 0;
     L36 : do if (($59 | 0) <= ($62 | 0)) {
      HEAP16[$$3389 >> 1] = $59;
      if (($59 | 0) < ($62 | 0)) {
       $$1370 = $19;
       $$1372 = 0;
       while (1) {
        if (($$1372 | 0) >= ($$1384 | 0)) {
         $77 = $59;
         break L36;
        }
        if ((HEAP32[$$1370 >> 2] | 0) == ($62 | 0)) HEAP32[$$1370 >> 2] = $59;
        $$1370 = $$1370 + 4 | 0;
        $$1372 = $$1372 + 1 | 0;
       }
      } else $77 = $59;
     } else {
      HEAP16[$$3389 >> 1] = $62;
      $$0369 = $19;
      $$0371 = 0;
      while (1) {
       if (($$0371 | 0) >= ($$1384 | 0)) {
        $77 = $62;
        break L36;
       }
       if ((HEAP32[$$0369 >> 2] | 0) == ($59 | 0)) HEAP32[$$0369 >> 2] = $62;
       $$0369 = $$0369 + 4 | 0;
       $$0371 = $$0371 + 1 | 0;
      }
     } while (0);
     $79 = ($77 << 16 >> 16) * 7 | 0;
     $81 = $4 + 1310736 + ($79 + -7 << 2) | 0;
     HEAP32[$81 >> 2] = (HEAP32[$81 >> 2] | 0) + 1;
     $85 = $4 + 1310736 + ($79 + -6 << 2) | 0;
     HEAP32[$85 >> 2] = (HEAP32[$85 >> 2] | 0) + $$2380;
     $89 = $4 + 1310736 + ($79 + -5 << 2) | 0;
     HEAP32[$89 >> 2] = (HEAP32[$89 >> 2] | 0) + $$0375;
     HEAP32[$4 + 1310736 + ($79 + -1 << 2) >> 2] = $$0375;
     $$2385 = $$1384;
     break;
    }
    $95 = HEAP16[$$3389 + -2 >> 1] | 0;
    if ($95 << 16 >> 16 <= 0) {
     HEAP16[$$3389 >> 1] = $50;
     $133 = $51 * 7 | 0;
     $135 = $4 + 1310736 + ($133 + -7 << 2) | 0;
     HEAP32[$135 >> 2] = (HEAP32[$135 >> 2] | 0) + 1;
     $139 = $4 + 1310736 + ($133 + -6 << 2) | 0;
     HEAP32[$139 >> 2] = (HEAP32[$139 >> 2] | 0) + $$2380;
     $143 = $4 + 1310736 + ($133 + -5 << 2) | 0;
     HEAP32[$143 >> 2] = (HEAP32[$143 >> 2] | 0) + $$0375;
     $147 = $4 + 1310736 + ($133 + -4 << 2) | 0;
     if ((HEAP32[$147 >> 2] | 0) > ($$2380 | 0)) HEAP32[$147 >> 2] = $$2380;
     HEAP32[$4 + 1310736 + ($133 + -1 << 2) >> 2] = $$0375;
     $$2385 = $$1384;
     break;
    }
    $100 = HEAP32[$4 + 1179664 + ($51 + -1 << 2) >> 2] | 0;
    $103 = HEAP32[$4 + 1179664 + (($95 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if (($100 | 0) <= ($103 | 0)) {
     HEAP16[$$3389 >> 1] = $100;
     if (($100 | 0) < ($103 | 0)) {
      $$3 = $19;
      $$3374 = 0;
      while (1) {
       if (($$3374 | 0) >= ($$1384 | 0)) {
        $118 = $100;
        break L60;
       }
       if ((HEAP32[$$3 >> 2] | 0) == ($103 | 0)) HEAP32[$$3 >> 2] = $100;
       $$3 = $$3 + 4 | 0;
       $$3374 = $$3374 + 1 | 0;
      }
     } else $118 = $100;
    } else {
     HEAP16[$$3389 >> 1] = $103;
     $$2 = $19;
     $$2373 = 0;
     while (1) {
      if (($$2373 | 0) >= ($$1384 | 0)) {
       $118 = $103;
       break L60;
      }
      if ((HEAP32[$$2 >> 2] | 0) == ($100 | 0)) HEAP32[$$2 >> 2] = $103;
      $$2 = $$2 + 4 | 0;
      $$2373 = $$2373 + 1 | 0;
     }
    } while (0);
    $120 = ($118 << 16 >> 16) * 7 | 0;
    $122 = $4 + 1310736 + ($120 + -7 << 2) | 0;
    HEAP32[$122 >> 2] = (HEAP32[$122 >> 2] | 0) + 1;
    $126 = $4 + 1310736 + ($120 + -6 << 2) | 0;
    HEAP32[$126 >> 2] = (HEAP32[$126 >> 2] | 0) + $$2380;
    $130 = $4 + 1310736 + ($120 + -5 << 2) | 0;
    HEAP32[$130 >> 2] = (HEAP32[$130 >> 2] | 0) + $$0375;
    $$2385 = $$1384;
   } else {
    HEAP16[$$3389 >> 1] = 0;
    $$2385 = $$1384;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1366 = $$1366 + 1 | 0;
   $$1384 = $$2385;
   $$2380 = $$2380 + 1 | 0;
   $$3389 = $$3389 + 2 | 0;
  }
  $$0364 = $$1 + 2 | 0;
  $$0365 = $$1366 + 2 | 0;
  $$0375 = $$0375 + 1 | 0;
  $$0383 = $$1384;
  $$2388 = $$3389 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 23780, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $219 = $4 + 12 | 0;
  $$1376 = 1;
  $$3381 = 1;
  $$4 = $19;
  while (1) {
   if (($$3381 | 0) > ($$0383 | 0)) break;
   $221 = HEAP32[$$4 >> 2] | 0;
   if (($221 | 0) == ($$3381 | 0)) {
    $$2377 = $$1376 + 1 | 0;
    $227 = $$1376;
   } else {
    $$2377 = $$1376;
    $227 = HEAP32[$4 + 1179664 + ($221 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $227;
   $$1376 = $$2377;
   $$3381 = $$3381 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $230 = $4 + 8 | 0;
  $231 = $$1376 + -1 | 0;
  HEAP32[$230 >> 2] = $231;
  if (!$231) $$0 = 0; else {
   _memset($219 | 0, 0, $231 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $231 << 4 | 0) | 0;
   $$4382 = 0;
   while (1) {
    if (($$4382 | 0) >= ($231 | 0)) break;
    $237 = $$4382 << 2;
    HEAP32[$4 + 131084 + ($237 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($237 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($237 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($237 | 3) << 2) >> 2] = 0;
    $$4382 = $$4382 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0383 | 0)) break;
    $249 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $250 = $$5 * 7 | 0;
    $253 = $4 + 12 + ($249 << 2) | 0;
    HEAP32[$253 >> 2] = (HEAP32[$253 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($250 << 2) >> 2] | 0);
    $260 = $249 << 1;
    $261 = $4 + 655376 + ($260 << 3) | 0;
    HEAPF64[$261 >> 3] = +HEAPF64[$261 >> 3] + +(HEAP32[$4 + 1310736 + ($250 + 1 << 2) >> 2] | 0);
    $269 = $4 + 655376 + (($260 | 1) << 3) | 0;
    HEAPF64[$269 >> 3] = +HEAPF64[$269 >> 3] + +(HEAP32[$4 + 1310736 + ($250 + 2 << 2) >> 2] | 0);
    $272 = $249 << 2;
    $273 = $4 + 131084 + ($272 << 2) | 0;
    $277 = HEAP32[$4 + 1310736 + ($250 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$273 >> 2] | 0) > ($277 | 0)) HEAP32[$273 >> 2] = $277;
    $280 = $4 + 131084 + (($272 | 1) << 2) | 0;
    $284 = HEAP32[$4 + 1310736 + ($250 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$280 >> 2] | 0) < ($284 | 0)) HEAP32[$280 >> 2] = $284;
    $287 = $4 + 131084 + (($272 | 2) << 2) | 0;
    $291 = HEAP32[$4 + 1310736 + ($250 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$287 >> 2] | 0) > ($291 | 0)) HEAP32[$287 >> 2] = $291;
    $294 = $4 + 131084 + (($272 | 3) << 2) | 0;
    $298 = HEAP32[$4 + 1310736 + ($250 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$294 >> 2] | 0) < ($298 | 0)) HEAP32[$294 >> 2] = $298;
    $$5 = $$5 + 1 | 0;
   }
   $301 = HEAP32[$230 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($301 | 0)) {
     $$0 = 0;
     break L80;
    }
    $305 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $306 = $$6 << 1;
    $307 = $4 + 655376 + ($306 << 3) | 0;
    HEAPF64[$307 >> 3] = +HEAPF64[$307 >> 3] / $305;
    $311 = $4 + 655376 + (($306 | 1) << 3) | 0;
    HEAPF64[$311 >> 3] = +HEAPF64[$311 >> 3] / $305;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubDBZ($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0364 = 0, $$0365 = 0, $$0367 = 0, $$0369 = 0, $$0371 = 0, $$0375 = 0, $$0378 = 0, $$0383 = 0, $$0386 = 0, $$1 = 0, $$1366 = 0, $$1368 = 0, $$1370 = 0, $$1372 = 0, $$1376 = 0, $$1379 = 0, $$1384 = 0, $$1387 = 0, $$2 = 0, $$2373 = 0, $$2377 = 0, $$2380 = 0, $$2385 = 0, $$2388 = 0, $$3 = 0, $$3374 = 0, $$3381 = 0, $$3389 = 0, $$4 = 0, $$4382 = 0, $$5 = 0, $$6 = 0, $100 = 0, $103 = 0, $118 = 0, $120 = 0, $122 = 0, $126 = 0, $13 = 0, $130 = 0, $133 = 0, $135 = 0, $139 = 0, $143 = 0, $147 = 0, $152 = 0, $154 = 0, $158 = 0, $162 = 0, $166 = 0, $172 = 0, $175 = 0, $177 = 0, $181 = 0, $185 = 0, $189 = 0, $19 = 0, $192 = 0, $197 = 0, $20 = 0, $219 = 0, $221 = 0, $227 = 0, $230 = 0, $231 = 0, $237 = 0, $24 = 0, $249 = 0, $250 = 0, $253 = 0, $260 = 0, $261 = 0, $269 = 0, $272 = 0, $273 = 0, $277 = 0, $280 = 0, $284 = 0, $287 = 0, $291 = 0, $294 = 0, $298 = 0, $30 = 0, $301 = 0, $305 = 0.0, $306 = 0, $307 = 0, $31 = 0, $311 = 0, $34 = 0, $36 = 0, $40 = 0, $44 = 0, $5 = 0, $50 = 0, $51 = 0, $54 = 0, $55 = 0, $56 = 0, $59 = 0, $6 = 0, $62 = 0, $77 = 0, $79 = 0, $81 = 0, $85 = 0, $89 = 0, $95 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0367 = $5;
 $$0378 = 0;
 $$0386 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 while (1) {
  if (($$0378 | 0) >= ($1 | 0)) break;
  HEAP16[$$0386 >> 1] = 0;
  HEAP16[$$0367 >> 1] = 0;
  $$0367 = $$0367 + 2 | 0;
  $$0378 = $$0378 + 1 | 0;
  $$0386 = $$0386 + 2 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1368 = $5;
 $$1379 = 0;
 $$1387 = $5 + ($13 << 1) | 0;
 while (1) {
  if (($$1379 | 0) >= ($2 | 0)) break;
  HEAP16[$$1387 >> 1] = 0;
  HEAP16[$$1368 >> 1] = 0;
  $$1368 = $$1368 + ($1 << 1) | 0;
  $$1379 = $$1379 + 1 | 0;
  $$1387 = $$1387 + ($1 << 1) | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $24 = 0 - $1 | 0;
 $$0364 = $0 + $20 | 0;
 $$0365 = $3 + $20 | 0;
 $$0375 = 1;
 $$0383 = 0;
 $$2388 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0375 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0364;
  $$1366 = $$0365;
  $$1384 = $$0383;
  $$2380 = 1;
  $$3389 = $$2388;
  while (1) {
   if (($$2380 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0) > (HEAPU8[$$1366 >> 0] | 0)) {
    HEAP16[$$3389 >> 1] = 0;
    $$2385 = $$1384;
   } else {
    $30 = $$3389 + ($24 << 1) | 0;
    $31 = HEAP16[$30 >> 1] | 0;
    if ($31 << 16 >> 16 > 0) {
     HEAP16[$$3389 >> 1] = $31;
     $34 = ($31 << 16 >> 16) * 7 | 0;
     $36 = $4 + 1310736 + ($34 + -7 << 2) | 0;
     HEAP32[$36 >> 2] = (HEAP32[$36 >> 2] | 0) + 1;
     $40 = $4 + 1310736 + ($34 + -6 << 2) | 0;
     HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + $$2380;
     $44 = $4 + 1310736 + ($34 + -5 << 2) | 0;
     HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + $$0375;
     HEAP32[$4 + 1310736 + ($34 + -1 << 2) >> 2] = $$0375;
     $$2385 = $$1384;
     break;
    }
    $50 = HEAP16[$30 + 2 >> 1] | 0;
    $51 = $50 << 16 >> 16;
    $54 = HEAP16[$30 + -2 >> 1] | 0;
    $55 = $54 << 16 >> 16;
    $56 = $54 << 16 >> 16 > 0;
    if ($50 << 16 >> 16 <= 0) {
     if ($56) {
      HEAP16[$$3389 >> 1] = $54;
      $152 = $55 * 7 | 0;
      $154 = $4 + 1310736 + ($152 + -7 << 2) | 0;
      HEAP32[$154 >> 2] = (HEAP32[$154 >> 2] | 0) + 1;
      $158 = $4 + 1310736 + ($152 + -6 << 2) | 0;
      HEAP32[$158 >> 2] = (HEAP32[$158 >> 2] | 0) + $$2380;
      $162 = $4 + 1310736 + ($152 + -5 << 2) | 0;
      HEAP32[$162 >> 2] = (HEAP32[$162 >> 2] | 0) + $$0375;
      $166 = $4 + 1310736 + ($152 + -3 << 2) | 0;
      if ((HEAP32[$166 >> 2] | 0) < ($$2380 | 0)) HEAP32[$166 >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($152 + -1 << 2) >> 2] = $$0375;
      $$2385 = $$1384;
      break;
     }
     $172 = HEAP16[$$3389 + -2 >> 1] | 0;
     if ($172 << 16 >> 16 > 0) {
      HEAP16[$$3389 >> 1] = $172;
      $175 = ($172 << 16 >> 16) * 7 | 0;
      $177 = $4 + 1310736 + ($175 + -7 << 2) | 0;
      HEAP32[$177 >> 2] = (HEAP32[$177 >> 2] | 0) + 1;
      $181 = $4 + 1310736 + ($175 + -6 << 2) | 0;
      HEAP32[$181 >> 2] = (HEAP32[$181 >> 2] | 0) + $$2380;
      $185 = $4 + 1310736 + ($175 + -5 << 2) | 0;
      HEAP32[$185 >> 2] = (HEAP32[$185 >> 2] | 0) + $$0375;
      $189 = $4 + 1310736 + ($175 + -3 << 2) | 0;
      if ((HEAP32[$189 >> 2] | 0) >= ($$2380 | 0)) {
       $$2385 = $$1384;
       break;
      }
      HEAP32[$189 >> 2] = $$2380;
      $$2385 = $$1384;
      break;
     } else {
      $192 = $$1384 + 1 | 0;
      if (($$1384 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3389 >> 1] = $192;
      HEAP32[$4 + 1179664 + ($$1384 << 2) >> 2] = $192 << 16 >> 16;
      $197 = $$1384 * 7 | 0;
      HEAP32[$4 + 1310736 + ($197 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($197 + 1 << 2) >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($197 + 2 << 2) >> 2] = $$0375;
      HEAP32[$4 + 1310736 + ($197 + 3 << 2) >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($197 + 4 << 2) >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($197 + 5 << 2) >> 2] = $$0375;
      HEAP32[$4 + 1310736 + ($197 + 6 << 2) >> 2] = $$0375;
      $$2385 = $192;
      break;
     }
    }
    if ($56) {
     $59 = HEAP32[$4 + 1179664 + ($51 + -1 << 2) >> 2] | 0;
     $62 = HEAP32[$4 + 1179664 + ($55 + -1 << 2) >> 2] | 0;
     L37 : do if (($59 | 0) <= ($62 | 0)) {
      HEAP16[$$3389 >> 1] = $59;
      if (($59 | 0) < ($62 | 0)) {
       $$1370 = $19;
       $$1372 = 0;
       while (1) {
        if (($$1372 | 0) >= ($$1384 | 0)) {
         $77 = $59;
         break L37;
        }
        if ((HEAP32[$$1370 >> 2] | 0) == ($62 | 0)) HEAP32[$$1370 >> 2] = $59;
        $$1370 = $$1370 + 4 | 0;
        $$1372 = $$1372 + 1 | 0;
       }
      } else $77 = $59;
     } else {
      HEAP16[$$3389 >> 1] = $62;
      $$0369 = $19;
      $$0371 = 0;
      while (1) {
       if (($$0371 | 0) >= ($$1384 | 0)) {
        $77 = $62;
        break L37;
       }
       if ((HEAP32[$$0369 >> 2] | 0) == ($59 | 0)) HEAP32[$$0369 >> 2] = $62;
       $$0369 = $$0369 + 4 | 0;
       $$0371 = $$0371 + 1 | 0;
      }
     } while (0);
     $79 = ($77 << 16 >> 16) * 7 | 0;
     $81 = $4 + 1310736 + ($79 + -7 << 2) | 0;
     HEAP32[$81 >> 2] = (HEAP32[$81 >> 2] | 0) + 1;
     $85 = $4 + 1310736 + ($79 + -6 << 2) | 0;
     HEAP32[$85 >> 2] = (HEAP32[$85 >> 2] | 0) + $$2380;
     $89 = $4 + 1310736 + ($79 + -5 << 2) | 0;
     HEAP32[$89 >> 2] = (HEAP32[$89 >> 2] | 0) + $$0375;
     HEAP32[$4 + 1310736 + ($79 + -1 << 2) >> 2] = $$0375;
     $$2385 = $$1384;
     break;
    }
    $95 = HEAP16[$$3389 + -2 >> 1] | 0;
    if ($95 << 16 >> 16 <= 0) {
     HEAP16[$$3389 >> 1] = $50;
     $133 = $51 * 7 | 0;
     $135 = $4 + 1310736 + ($133 + -7 << 2) | 0;
     HEAP32[$135 >> 2] = (HEAP32[$135 >> 2] | 0) + 1;
     $139 = $4 + 1310736 + ($133 + -6 << 2) | 0;
     HEAP32[$139 >> 2] = (HEAP32[$139 >> 2] | 0) + $$2380;
     $143 = $4 + 1310736 + ($133 + -5 << 2) | 0;
     HEAP32[$143 >> 2] = (HEAP32[$143 >> 2] | 0) + $$0375;
     $147 = $4 + 1310736 + ($133 + -4 << 2) | 0;
     if ((HEAP32[$147 >> 2] | 0) > ($$2380 | 0)) HEAP32[$147 >> 2] = $$2380;
     HEAP32[$4 + 1310736 + ($133 + -1 << 2) >> 2] = $$0375;
     $$2385 = $$1384;
     break;
    }
    $100 = HEAP32[$4 + 1179664 + ($51 + -1 << 2) >> 2] | 0;
    $103 = HEAP32[$4 + 1179664 + (($95 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if (($100 | 0) <= ($103 | 0)) {
     HEAP16[$$3389 >> 1] = $100;
     if (($100 | 0) < ($103 | 0)) {
      $$3 = $19;
      $$3374 = 0;
      while (1) {
       if (($$3374 | 0) >= ($$1384 | 0)) {
        $118 = $100;
        break L61;
       }
       if ((HEAP32[$$3 >> 2] | 0) == ($103 | 0)) HEAP32[$$3 >> 2] = $100;
       $$3 = $$3 + 4 | 0;
       $$3374 = $$3374 + 1 | 0;
      }
     } else $118 = $100;
    } else {
     HEAP16[$$3389 >> 1] = $103;
     $$2 = $19;
     $$2373 = 0;
     while (1) {
      if (($$2373 | 0) >= ($$1384 | 0)) {
       $118 = $103;
       break L61;
      }
      if ((HEAP32[$$2 >> 2] | 0) == ($100 | 0)) HEAP32[$$2 >> 2] = $103;
      $$2 = $$2 + 4 | 0;
      $$2373 = $$2373 + 1 | 0;
     }
    } while (0);
    $120 = ($118 << 16 >> 16) * 7 | 0;
    $122 = $4 + 1310736 + ($120 + -7 << 2) | 0;
    HEAP32[$122 >> 2] = (HEAP32[$122 >> 2] | 0) + 1;
    $126 = $4 + 1310736 + ($120 + -6 << 2) | 0;
    HEAP32[$126 >> 2] = (HEAP32[$126 >> 2] | 0) + $$2380;
    $130 = $4 + 1310736 + ($120 + -5 << 2) | 0;
    HEAP32[$130 >> 2] = (HEAP32[$130 >> 2] | 0) + $$0375;
    $$2385 = $$1384;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1366 = $$1366 + 1 | 0;
   $$1384 = $$2385;
   $$2380 = $$2380 + 1 | 0;
   $$3389 = $$3389 + 2 | 0;
  }
  $$0364 = $$1 + 2 | 0;
  $$0365 = $$1366 + 2 | 0;
  $$0375 = $$0375 + 1 | 0;
  $$0383 = $$1384;
  $$2388 = $$3389 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 23780, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $219 = $4 + 12 | 0;
  $$1376 = 1;
  $$3381 = 1;
  $$4 = $19;
  while (1) {
   if (($$3381 | 0) > ($$0383 | 0)) break;
   $221 = HEAP32[$$4 >> 2] | 0;
   if (($221 | 0) == ($$3381 | 0)) {
    $$2377 = $$1376 + 1 | 0;
    $227 = $$1376;
   } else {
    $$2377 = $$1376;
    $227 = HEAP32[$4 + 1179664 + ($221 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $227;
   $$1376 = $$2377;
   $$3381 = $$3381 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $230 = $4 + 8 | 0;
  $231 = $$1376 + -1 | 0;
  HEAP32[$230 >> 2] = $231;
  if (!$231) $$0 = 0; else {
   _memset($219 | 0, 0, $231 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $231 << 4 | 0) | 0;
   $$4382 = 0;
   while (1) {
    if (($$4382 | 0) >= ($231 | 0)) break;
    $237 = $$4382 << 2;
    HEAP32[$4 + 131084 + ($237 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($237 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($237 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($237 | 3) << 2) >> 2] = 0;
    $$4382 = $$4382 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0383 | 0)) break;
    $249 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $250 = $$5 * 7 | 0;
    $253 = $4 + 12 + ($249 << 2) | 0;
    HEAP32[$253 >> 2] = (HEAP32[$253 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($250 << 2) >> 2] | 0);
    $260 = $249 << 1;
    $261 = $4 + 655376 + ($260 << 3) | 0;
    HEAPF64[$261 >> 3] = +HEAPF64[$261 >> 3] + +(HEAP32[$4 + 1310736 + ($250 + 1 << 2) >> 2] | 0);
    $269 = $4 + 655376 + (($260 | 1) << 3) | 0;
    HEAPF64[$269 >> 3] = +HEAPF64[$269 >> 3] + +(HEAP32[$4 + 1310736 + ($250 + 2 << 2) >> 2] | 0);
    $272 = $249 << 2;
    $273 = $4 + 131084 + ($272 << 2) | 0;
    $277 = HEAP32[$4 + 1310736 + ($250 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$273 >> 2] | 0) > ($277 | 0)) HEAP32[$273 >> 2] = $277;
    $280 = $4 + 131084 + (($272 | 1) << 2) | 0;
    $284 = HEAP32[$4 + 1310736 + ($250 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$280 >> 2] | 0) < ($284 | 0)) HEAP32[$280 >> 2] = $284;
    $287 = $4 + 131084 + (($272 | 2) << 2) | 0;
    $291 = HEAP32[$4 + 1310736 + ($250 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$287 >> 2] | 0) > ($291 | 0)) HEAP32[$287 >> 2] = $291;
    $294 = $4 + 131084 + (($272 | 3) << 2) | 0;
    $298 = HEAP32[$4 + 1310736 + ($250 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$294 >> 2] | 0) < ($298 | 0)) HEAP32[$294 >> 2] = $298;
    $$5 = $$5 + 1 | 0;
   }
   $301 = HEAP32[$230 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($301 | 0)) {
     $$0 = 0;
     break L80;
    }
    $305 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $306 = $$6 << 1;
    $307 = $4 + 655376 + ($306 << 3) | 0;
    HEAPF64[$307 >> 3] = +HEAPF64[$307 >> 3] / $305;
    $311 = $4 + 655376 + (($306 | 1) << 3) | 0;
    HEAPF64[$311 >> 3] = +HEAPF64[$311 >> 3] / $305;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 $5 = +$5;
 var $103 = 0, $108 = 0, $112 = 0, $114 = 0, $115 = 0, $117 = 0.0, $119 = 0.0, $120 = 0.0, $122 = 0.0, $123 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $136 = 0, $141 = 0, $145 = 0, $154 = 0, $159 = 0, $16 = 0, $163 = 0, $172 = 0, $177 = 0, $181 = 0, $190 = 0, $195 = 0, $199 = 0, $21 = 0, $210 = 0, $215 = 0, $219 = 0, $25 = 0, $27 = 0, $35 = 0, $40 = 0, $44 = 0, $45 = 0, $46 = 0, $54 = 0, $59 = 0, $6 = 0, $63 = 0, $70 = 0, $75 = 0, $79 = 0, $8 = 0, $87 = 0, $92 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $6 = sp;
 $8 = ~~+Math_floor(+$4);
 if (($8 | 0) != (~~$4 | 0)) {
  $16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29355) | 0, 29407) | 0, 39072) | 0, 69) | 0, 39079) | 0, 29483) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $16 + (HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 127]($21, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($16, $25) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($16) | 0;
  _abort();
 }
 $27 = ~~+Math_floor(+$5);
 if (($27 | 0) != (~~$5 | 0)) {
  $35 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29513) | 0, 29407) | 0, 39072) | 0, 70) | 0, 39079) | 0, 29483) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $35 + (HEAP32[(HEAP32[$35 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $40 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $44 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$40 >> 2] | 0) + 28 >> 2] & 127]($40, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($35, $44) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($35) | 0;
  _abort();
 }
 $45 = $8 + 1 | 0;
 $46 = $27 + 1 | 0;
 if (!(($27 | 0) > -1 & $27 >>> 0 < $2 >>> 0)) {
  $54 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29565) | 0, 29407) | 0, 39072) | 0, 79) | 0, 39079) | 0, 29611) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $54 + (HEAP32[(HEAP32[$54 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $59 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $63 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$59 >> 2] | 0) + 28 >> 2] & 127]($59, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($54, $63) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($54) | 0;
  _abort();
 }
 if ($46 >>> 0 >= $2 >>> 0) {
  $70 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29628) | 0, 29407) | 0, 39072) | 0, 80) | 0, 39079) | 0, 29688) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $70 + (HEAP32[(HEAP32[$70 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $75 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $79 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$75 >> 2] | 0) + 28 >> 2] & 127]($75, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($70, $79) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($70) | 0;
  _abort();
 }
 if (!(($8 | 0) > -1 & $8 >>> 0 < $1 >>> 0)) {
  $87 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29712) | 0, 29407) | 0, 39072) | 0, 81) | 0, 39079) | 0, 29757) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $87 + (HEAP32[(HEAP32[$87 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $92 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $96 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$92 >> 2] | 0) + 28 >> 2] & 127]($92, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($87, $96) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($87) | 0;
  _abort();
 }
 if ($45 >>> 0 >= $1 >>> 0) {
  $103 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29774) | 0, 29407) | 0, 39072) | 0, 82) | 0, 39079) | 0, 29833) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $103 + (HEAP32[(HEAP32[$103 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $108 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $112 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$108 >> 2] | 0) + 28 >> 2] & 127]($108, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($103, $112) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($103) | 0;
  _abort();
 }
 $114 = $0 + (Math_imul($27, $3) | 0) | 0;
 $115 = $114 + $3 | 0;
 $117 = +($45 | 0) - $4;
 $119 = +($46 | 0) - $5;
 $120 = $117 * $119;
 $122 = $4 - +($8 | 0);
 $123 = $122 * $119;
 $125 = $5 - +($27 | 0);
 $126 = $117 * $125;
 $127 = $122 * $125;
 if (!($120 >= 0.0) | !($120 <= 1.0001)) {
  $136 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29857) | 0, 29407) | 0, 39072) | 0, 94) | 0, 39079) | 0, 29904) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $136 + (HEAP32[(HEAP32[$136 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $141 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $145 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$141 >> 2] | 0) + 28 >> 2] & 127]($141, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($136, $145) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($136) | 0;
  _abort();
 }
 if (!($123 >= 0.0) | !($123 <= 1.0001)) {
  $154 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29917) | 0, 29407) | 0, 39072) | 0, 95) | 0, 39079) | 0, 29904) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $154 + (HEAP32[(HEAP32[$154 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $159 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $163 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$159 >> 2] | 0) + 28 >> 2] & 127]($159, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($154, $163) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($154) | 0;
  _abort();
 }
 if (!($126 >= 0.0) | !($126 <= 1.0001)) {
  $172 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29964) | 0, 29407) | 0, 39072) | 0, 96) | 0, 39079) | 0, 29904) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $172 + (HEAP32[(HEAP32[$172 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $177 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $181 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$177 >> 2] | 0) + 28 >> 2] & 127]($177, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($172, $181) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($172) | 0;
  _abort();
 }
 if (!($127 >= 0.0) | !($127 <= 1.0001)) {
  $190 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30011) | 0, 29407) | 0, 39072) | 0, 97) | 0, 39079) | 0, 29904) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $190 + (HEAP32[(HEAP32[$190 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $195 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $199 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$195 >> 2] | 0) + 28 >> 2] & 127]($195, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($190, $199) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($190) | 0;
  _abort();
 }
 if (!($127 + ($126 + ($120 + $123)) <= 1.0001)) {
  $210 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30058) | 0, 29407) | 0, 39072) | 0, 98) | 0, 39079) | 0, 29904) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $210 + (HEAP32[(HEAP32[$210 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $215 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $219 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$215 >> 2] | 0) + 28 >> 2] & 127]($215, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($210, $219) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($210) | 0;
  _abort();
 } else {
  STACKTOP = sp;
  return +($120 * +HEAPF32[$114 + ($8 << 2) >> 2] + $123 * +HEAPF32[$114 + ($45 << 2) >> 2] + $126 * +HEAPF32[$115 + ($8 << 2) >> 2] + $127 * +HEAPF32[$115 + ($45 << 2) >> 2]);
 }
 return +(0.0);
}

function _arLabelingSubDWIC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0360 = 0, $$0361 = 0, $$0363 = 0, $$0365 = 0, $$0369 = 0, $$0373 = 0, $$0376 = 0, $$0381 = 0, $$1 = 0, $$1362 = 0, $$1364 = 0, $$1366 = 0, $$1370 = 0, $$1374 = 0, $$1377 = 0, $$1382 = 0, $$2 = 0, $$2367 = 0, $$2371 = 0, $$2375 = 0, $$2378 = 0, $$2383 = 0, $$3 = 0, $$3368 = 0, $$3372 = 0, $$3379 = 0, $$4 = 0, $$4380 = 0, $$5 = 0, $$6 = 0, $103 = 0, $106 = 0, $121 = 0, $123 = 0, $125 = 0, $129 = 0, $133 = 0, $136 = 0, $138 = 0, $142 = 0, $146 = 0, $15 = 0, $150 = 0, $155 = 0, $157 = 0, $161 = 0, $165 = 0, $169 = 0, $175 = 0, $178 = 0, $180 = 0, $184 = 0, $188 = 0, $192 = 0, $195 = 0, $200 = 0, $21 = 0, $221 = 0, $223 = 0, $229 = 0, $232 = 0, $233 = 0, $239 = 0, $251 = 0, $252 = 0, $255 = 0, $262 = 0, $263 = 0, $27 = 0, $271 = 0, $274 = 0, $275 = 0, $279 = 0, $282 = 0, $286 = 0, $289 = 0, $293 = 0, $296 = 0, $300 = 0, $303 = 0, $307 = 0.0, $308 = 0, $309 = 0, $313 = 0, $33 = 0, $34 = 0, $37 = 0, $39 = 0, $43 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $65 = 0, $7 = 0, $8 = 0, $80 = 0, $82 = 0, $84 = 0, $88 = 0, $92 = 0, $98 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = ($1 | 0) / 2 | 0;
 $6 = ($2 | 0) / 2 | 0;
 $7 = HEAP32[$4 >> 2] | 0;
 $8 = $6 + -1 | 0;
 $$0361 = $7;
 $$0363 = $7 + ((Math_imul($8, $5) | 0) << 1) | 0;
 $$0376 = 0;
 while (1) {
  if (($$0376 | 0) >= ($5 | 0)) break;
  HEAP16[$$0363 >> 1] = 0;
  HEAP16[$$0361 >> 1] = 0;
  $$0361 = $$0361 + 2 | 0;
  $$0363 = $$0363 + 2 | 0;
  $$0376 = $$0376 + 1 | 0;
 }
 $15 = $5 + -1 | 0;
 $$1362 = $7;
 $$1364 = $7 + ($15 << 1) | 0;
 $$1377 = 0;
 while (1) {
  if (($$1377 | 0) >= ($6 | 0)) break;
  HEAP16[$$1364 >> 1] = 0;
  HEAP16[$$1362 >> 1] = 0;
  $$1362 = $$1362 + ($5 << 1) | 0;
  $$1364 = $$1364 + ($5 << 1) | 0;
  $$1377 = $$1377 + 1 | 0;
 }
 $21 = $4 + 1179664 | 0;
 $27 = 0 - $5 | 0;
 $$0360 = $0 + (($1 << 1) + 2) | 0;
 $$0373 = 1;
 $$0381 = 0;
 $$2 = $7 + ($5 + 1 << 1) | 0;
 L9 : while (1) {
  if (($$0373 | 0) >= ($8 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0360;
  $$1382 = $$0381;
  $$2378 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2378 | 0) >= ($15 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    $33 = $$3 + ($27 << 1) | 0;
    $34 = HEAP16[$33 >> 1] | 0;
    if ($34 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $34;
     $37 = ($34 << 16 >> 16) * 7 | 0;
     $39 = $4 + 1310736 + ($37 + -7 << 2) | 0;
     HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 1;
     $43 = $4 + 1310736 + ($37 + -6 << 2) | 0;
     HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + $$2378;
     $47 = $4 + 1310736 + ($37 + -5 << 2) | 0;
     HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + $$0373;
     HEAP32[$4 + 1310736 + ($37 + -1 << 2) >> 2] = $$0373;
     $$2383 = $$1382;
     break;
    }
    $53 = HEAP16[$33 + 2 >> 1] | 0;
    $54 = $53 << 16 >> 16;
    $57 = HEAP16[$33 + -2 >> 1] | 0;
    $58 = $57 << 16 >> 16;
    $59 = $57 << 16 >> 16 > 0;
    if ($53 << 16 >> 16 <= 0) {
     if ($59) {
      HEAP16[$$3 >> 1] = $57;
      $155 = $58 * 7 | 0;
      $157 = $4 + 1310736 + ($155 + -7 << 2) | 0;
      HEAP32[$157 >> 2] = (HEAP32[$157 >> 2] | 0) + 1;
      $161 = $4 + 1310736 + ($155 + -6 << 2) | 0;
      HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + $$2378;
      $165 = $4 + 1310736 + ($155 + -5 << 2) | 0;
      HEAP32[$165 >> 2] = (HEAP32[$165 >> 2] | 0) + $$0373;
      $169 = $4 + 1310736 + ($155 + -3 << 2) | 0;
      if ((HEAP32[$169 >> 2] | 0) < ($$2378 | 0)) HEAP32[$169 >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($155 + -1 << 2) >> 2] = $$0373;
      $$2383 = $$1382;
      break;
     }
     $175 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($175 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $175;
      $178 = ($175 << 16 >> 16) * 7 | 0;
      $180 = $4 + 1310736 + ($178 + -7 << 2) | 0;
      HEAP32[$180 >> 2] = (HEAP32[$180 >> 2] | 0) + 1;
      $184 = $4 + 1310736 + ($178 + -6 << 2) | 0;
      HEAP32[$184 >> 2] = (HEAP32[$184 >> 2] | 0) + $$2378;
      $188 = $4 + 1310736 + ($178 + -5 << 2) | 0;
      HEAP32[$188 >> 2] = (HEAP32[$188 >> 2] | 0) + $$0373;
      $192 = $4 + 1310736 + ($178 + -3 << 2) | 0;
      if ((HEAP32[$192 >> 2] | 0) >= ($$2378 | 0)) {
       $$2383 = $$1382;
       break;
      }
      HEAP32[$192 >> 2] = $$2378;
      $$2383 = $$1382;
      break;
     } else {
      $195 = $$1382 + 1 | 0;
      if (($$1382 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $195;
      HEAP32[$4 + 1179664 + ($$1382 << 2) >> 2] = $195 << 16 >> 16;
      $200 = $$1382 * 7 | 0;
      HEAP32[$4 + 1310736 + ($200 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($200 + 1 << 2) >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($200 + 2 << 2) >> 2] = $$0373;
      HEAP32[$4 + 1310736 + ($200 + 3 << 2) >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($200 + 4 << 2) >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($200 + 5 << 2) >> 2] = $$0373;
      HEAP32[$4 + 1310736 + ($200 + 6 << 2) >> 2] = $$0373;
      $$2383 = $195;
      break;
     }
    }
    if ($59) {
     $62 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
     $65 = HEAP32[$4 + 1179664 + ($58 + -1 << 2) >> 2] | 0;
     L36 : do if (($62 | 0) <= ($65 | 0)) {
      HEAP16[$$3 >> 1] = $62;
      if (($62 | 0) < ($65 | 0)) {
       $$1366 = $21;
       $$1370 = 0;
       while (1) {
        if (($$1370 | 0) >= ($$1382 | 0)) {
         $80 = $62;
         break L36;
        }
        if ((HEAP32[$$1366 >> 2] | 0) == ($65 | 0)) HEAP32[$$1366 >> 2] = $62;
        $$1366 = $$1366 + 4 | 0;
        $$1370 = $$1370 + 1 | 0;
       }
      } else $80 = $62;
     } else {
      HEAP16[$$3 >> 1] = $65;
      $$0365 = $21;
      $$0369 = 0;
      while (1) {
       if (($$0369 | 0) >= ($$1382 | 0)) {
        $80 = $65;
        break L36;
       }
       if ((HEAP32[$$0365 >> 2] | 0) == ($62 | 0)) HEAP32[$$0365 >> 2] = $65;
       $$0365 = $$0365 + 4 | 0;
       $$0369 = $$0369 + 1 | 0;
      }
     } while (0);
     $82 = ($80 << 16 >> 16) * 7 | 0;
     $84 = $4 + 1310736 + ($82 + -7 << 2) | 0;
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
     $88 = $4 + 1310736 + ($82 + -6 << 2) | 0;
     HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + $$2378;
     $92 = $4 + 1310736 + ($82 + -5 << 2) | 0;
     HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + $$0373;
     HEAP32[$4 + 1310736 + ($82 + -1 << 2) >> 2] = $$0373;
     $$2383 = $$1382;
     break;
    }
    $98 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($98 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $53;
     $136 = $54 * 7 | 0;
     $138 = $4 + 1310736 + ($136 + -7 << 2) | 0;
     HEAP32[$138 >> 2] = (HEAP32[$138 >> 2] | 0) + 1;
     $142 = $4 + 1310736 + ($136 + -6 << 2) | 0;
     HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + $$2378;
     $146 = $4 + 1310736 + ($136 + -5 << 2) | 0;
     HEAP32[$146 >> 2] = (HEAP32[$146 >> 2] | 0) + $$0373;
     $150 = $4 + 1310736 + ($136 + -4 << 2) | 0;
     if ((HEAP32[$150 >> 2] | 0) > ($$2378 | 0)) HEAP32[$150 >> 2] = $$2378;
     HEAP32[$4 + 1310736 + ($136 + -1 << 2) >> 2] = $$0373;
     $$2383 = $$1382;
     break;
    }
    $103 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
    $106 = HEAP32[$4 + 1179664 + (($98 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if (($103 | 0) <= ($106 | 0)) {
     HEAP16[$$3 >> 1] = $103;
     if (($103 | 0) < ($106 | 0)) {
      $$3368 = $21;
      $$3372 = 0;
      while (1) {
       if (($$3372 | 0) >= ($$1382 | 0)) {
        $121 = $103;
        break L60;
       }
       if ((HEAP32[$$3368 >> 2] | 0) == ($106 | 0)) HEAP32[$$3368 >> 2] = $103;
       $$3368 = $$3368 + 4 | 0;
       $$3372 = $$3372 + 1 | 0;
      }
     } else $121 = $103;
    } else {
     HEAP16[$$3 >> 1] = $106;
     $$2367 = $21;
     $$2371 = 0;
     while (1) {
      if (($$2371 | 0) >= ($$1382 | 0)) {
       $121 = $106;
       break L60;
      }
      if ((HEAP32[$$2367 >> 2] | 0) == ($103 | 0)) HEAP32[$$2367 >> 2] = $106;
      $$2367 = $$2367 + 4 | 0;
      $$2371 = $$2371 + 1 | 0;
     }
    } while (0);
    $123 = ($121 << 16 >> 16) * 7 | 0;
    $125 = $4 + 1310736 + ($123 + -7 << 2) | 0;
    HEAP32[$125 >> 2] = (HEAP32[$125 >> 2] | 0) + 1;
    $129 = $4 + 1310736 + ($123 + -6 << 2) | 0;
    HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + $$2378;
    $133 = $4 + 1310736 + ($123 + -5 << 2) | 0;
    HEAP32[$133 >> 2] = (HEAP32[$133 >> 2] | 0) + $$0373;
    $$2383 = $$1382;
   } else {
    HEAP16[$$3 >> 1] = 0;
    $$2383 = $$1382;
   } while (0);
   $$1 = $$1 + 2 | 0;
   $$1382 = $$2383;
   $$2378 = $$2378 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0360 = $$1 + $1 + 4 | 0;
  $$0373 = $$0373 + 1 | 0;
  $$0381 = $$1382;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 23780, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $221 = $4 + 12 | 0;
  $$1374 = 1;
  $$3379 = 1;
  $$4 = $21;
  while (1) {
   if (($$3379 | 0) > ($$0381 | 0)) break;
   $223 = HEAP32[$$4 >> 2] | 0;
   if (($223 | 0) == ($$3379 | 0)) {
    $$2375 = $$1374 + 1 | 0;
    $229 = $$1374;
   } else {
    $$2375 = $$1374;
    $229 = HEAP32[$4 + 1179664 + ($223 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $229;
   $$1374 = $$2375;
   $$3379 = $$3379 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $232 = $4 + 8 | 0;
  $233 = $$1374 + -1 | 0;
  HEAP32[$232 >> 2] = $233;
  if (!$233) $$0 = 0; else {
   _memset($221 | 0, 0, $233 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $233 << 4 | 0) | 0;
   $$4380 = 0;
   while (1) {
    if (($$4380 | 0) >= ($233 | 0)) break;
    $239 = $$4380 << 2;
    HEAP32[$4 + 131084 + ($239 << 2) >> 2] = $5;
    HEAP32[$4 + 131084 + (($239 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($239 | 2) << 2) >> 2] = $6;
    HEAP32[$4 + 131084 + (($239 | 3) << 2) >> 2] = 0;
    $$4380 = $$4380 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0381 | 0)) break;
    $251 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $252 = $$5 * 7 | 0;
    $255 = $4 + 12 + ($251 << 2) | 0;
    HEAP32[$255 >> 2] = (HEAP32[$255 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($252 << 2) >> 2] | 0);
    $262 = $251 << 1;
    $263 = $4 + 655376 + ($262 << 3) | 0;
    HEAPF64[$263 >> 3] = +HEAPF64[$263 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 1 << 2) >> 2] | 0);
    $271 = $4 + 655376 + (($262 | 1) << 3) | 0;
    HEAPF64[$271 >> 3] = +HEAPF64[$271 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 2 << 2) >> 2] | 0);
    $274 = $251 << 2;
    $275 = $4 + 131084 + ($274 << 2) | 0;
    $279 = HEAP32[$4 + 1310736 + ($252 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$275 >> 2] | 0) > ($279 | 0)) HEAP32[$275 >> 2] = $279;
    $282 = $4 + 131084 + (($274 | 1) << 2) | 0;
    $286 = HEAP32[$4 + 1310736 + ($252 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$282 >> 2] | 0) < ($286 | 0)) HEAP32[$282 >> 2] = $286;
    $289 = $4 + 131084 + (($274 | 2) << 2) | 0;
    $293 = HEAP32[$4 + 1310736 + ($252 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$289 >> 2] | 0) > ($293 | 0)) HEAP32[$289 >> 2] = $293;
    $296 = $4 + 131084 + (($274 | 3) << 2) | 0;
    $300 = HEAP32[$4 + 1310736 + ($252 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$296 >> 2] | 0) < ($300 | 0)) HEAP32[$296 >> 2] = $300;
    $$5 = $$5 + 1 | 0;
   }
   $303 = HEAP32[$232 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($303 | 0)) {
     $$0 = 0;
     break L80;
    }
    $307 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $308 = $$6 << 1;
    $309 = $4 + 655376 + ($308 << 3) | 0;
    HEAPF64[$309 >> 3] = +HEAPF64[$309 >> 3] / $307;
    $313 = $4 + 655376 + (($308 | 1) << 3) | 0;
    HEAPF64[$313 >> 3] = +HEAPF64[$313 >> 3] / $307;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubDBIC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0360 = 0, $$0361 = 0, $$0363 = 0, $$0365 = 0, $$0369 = 0, $$0373 = 0, $$0376 = 0, $$0381 = 0, $$1 = 0, $$1362 = 0, $$1364 = 0, $$1366 = 0, $$1370 = 0, $$1374 = 0, $$1377 = 0, $$1382 = 0, $$2 = 0, $$2367 = 0, $$2371 = 0, $$2375 = 0, $$2378 = 0, $$2383 = 0, $$3 = 0, $$3368 = 0, $$3372 = 0, $$3379 = 0, $$4 = 0, $$4380 = 0, $$5 = 0, $$6 = 0, $103 = 0, $106 = 0, $121 = 0, $123 = 0, $125 = 0, $129 = 0, $133 = 0, $136 = 0, $138 = 0, $142 = 0, $146 = 0, $15 = 0, $150 = 0, $155 = 0, $157 = 0, $161 = 0, $165 = 0, $169 = 0, $175 = 0, $178 = 0, $180 = 0, $184 = 0, $188 = 0, $192 = 0, $195 = 0, $200 = 0, $21 = 0, $221 = 0, $223 = 0, $229 = 0, $232 = 0, $233 = 0, $239 = 0, $251 = 0, $252 = 0, $255 = 0, $262 = 0, $263 = 0, $27 = 0, $271 = 0, $274 = 0, $275 = 0, $279 = 0, $282 = 0, $286 = 0, $289 = 0, $293 = 0, $296 = 0, $300 = 0, $303 = 0, $307 = 0.0, $308 = 0, $309 = 0, $313 = 0, $33 = 0, $34 = 0, $37 = 0, $39 = 0, $43 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $65 = 0, $7 = 0, $8 = 0, $80 = 0, $82 = 0, $84 = 0, $88 = 0, $92 = 0, $98 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = ($1 | 0) / 2 | 0;
 $6 = ($2 | 0) / 2 | 0;
 $7 = HEAP32[$4 >> 2] | 0;
 $8 = $6 + -1 | 0;
 $$0361 = $7;
 $$0363 = $7 + ((Math_imul($8, $5) | 0) << 1) | 0;
 $$0376 = 0;
 while (1) {
  if (($$0376 | 0) >= ($5 | 0)) break;
  HEAP16[$$0363 >> 1] = 0;
  HEAP16[$$0361 >> 1] = 0;
  $$0361 = $$0361 + 2 | 0;
  $$0363 = $$0363 + 2 | 0;
  $$0376 = $$0376 + 1 | 0;
 }
 $15 = $5 + -1 | 0;
 $$1362 = $7;
 $$1364 = $7 + ($15 << 1) | 0;
 $$1377 = 0;
 while (1) {
  if (($$1377 | 0) >= ($6 | 0)) break;
  HEAP16[$$1364 >> 1] = 0;
  HEAP16[$$1362 >> 1] = 0;
  $$1362 = $$1362 + ($5 << 1) | 0;
  $$1364 = $$1364 + ($5 << 1) | 0;
  $$1377 = $$1377 + 1 | 0;
 }
 $21 = $4 + 1179664 | 0;
 $27 = 0 - $5 | 0;
 $$0360 = $0 + (($1 << 1) + 2) | 0;
 $$0373 = 1;
 $$0381 = 0;
 $$2 = $7 + ($5 + 1 << 1) | 0;
 L9 : while (1) {
  if (($$0373 | 0) >= ($8 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0360;
  $$1382 = $$0381;
  $$2378 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2378 | 0) >= ($15 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    HEAP16[$$3 >> 1] = 0;
    $$2383 = $$1382;
   } else {
    $33 = $$3 + ($27 << 1) | 0;
    $34 = HEAP16[$33 >> 1] | 0;
    if ($34 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $34;
     $37 = ($34 << 16 >> 16) * 7 | 0;
     $39 = $4 + 1310736 + ($37 + -7 << 2) | 0;
     HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 1;
     $43 = $4 + 1310736 + ($37 + -6 << 2) | 0;
     HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + $$2378;
     $47 = $4 + 1310736 + ($37 + -5 << 2) | 0;
     HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + $$0373;
     HEAP32[$4 + 1310736 + ($37 + -1 << 2) >> 2] = $$0373;
     $$2383 = $$1382;
     break;
    }
    $53 = HEAP16[$33 + 2 >> 1] | 0;
    $54 = $53 << 16 >> 16;
    $57 = HEAP16[$33 + -2 >> 1] | 0;
    $58 = $57 << 16 >> 16;
    $59 = $57 << 16 >> 16 > 0;
    if ($53 << 16 >> 16 <= 0) {
     if ($59) {
      HEAP16[$$3 >> 1] = $57;
      $155 = $58 * 7 | 0;
      $157 = $4 + 1310736 + ($155 + -7 << 2) | 0;
      HEAP32[$157 >> 2] = (HEAP32[$157 >> 2] | 0) + 1;
      $161 = $4 + 1310736 + ($155 + -6 << 2) | 0;
      HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + $$2378;
      $165 = $4 + 1310736 + ($155 + -5 << 2) | 0;
      HEAP32[$165 >> 2] = (HEAP32[$165 >> 2] | 0) + $$0373;
      $169 = $4 + 1310736 + ($155 + -3 << 2) | 0;
      if ((HEAP32[$169 >> 2] | 0) < ($$2378 | 0)) HEAP32[$169 >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($155 + -1 << 2) >> 2] = $$0373;
      $$2383 = $$1382;
      break;
     }
     $175 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($175 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $175;
      $178 = ($175 << 16 >> 16) * 7 | 0;
      $180 = $4 + 1310736 + ($178 + -7 << 2) | 0;
      HEAP32[$180 >> 2] = (HEAP32[$180 >> 2] | 0) + 1;
      $184 = $4 + 1310736 + ($178 + -6 << 2) | 0;
      HEAP32[$184 >> 2] = (HEAP32[$184 >> 2] | 0) + $$2378;
      $188 = $4 + 1310736 + ($178 + -5 << 2) | 0;
      HEAP32[$188 >> 2] = (HEAP32[$188 >> 2] | 0) + $$0373;
      $192 = $4 + 1310736 + ($178 + -3 << 2) | 0;
      if ((HEAP32[$192 >> 2] | 0) >= ($$2378 | 0)) {
       $$2383 = $$1382;
       break;
      }
      HEAP32[$192 >> 2] = $$2378;
      $$2383 = $$1382;
      break;
     } else {
      $195 = $$1382 + 1 | 0;
      if (($$1382 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $195;
      HEAP32[$4 + 1179664 + ($$1382 << 2) >> 2] = $195 << 16 >> 16;
      $200 = $$1382 * 7 | 0;
      HEAP32[$4 + 1310736 + ($200 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($200 + 1 << 2) >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($200 + 2 << 2) >> 2] = $$0373;
      HEAP32[$4 + 1310736 + ($200 + 3 << 2) >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($200 + 4 << 2) >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($200 + 5 << 2) >> 2] = $$0373;
      HEAP32[$4 + 1310736 + ($200 + 6 << 2) >> 2] = $$0373;
      $$2383 = $195;
      break;
     }
    }
    if ($59) {
     $62 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
     $65 = HEAP32[$4 + 1179664 + ($58 + -1 << 2) >> 2] | 0;
     L37 : do if (($62 | 0) <= ($65 | 0)) {
      HEAP16[$$3 >> 1] = $62;
      if (($62 | 0) < ($65 | 0)) {
       $$1366 = $21;
       $$1370 = 0;
       while (1) {
        if (($$1370 | 0) >= ($$1382 | 0)) {
         $80 = $62;
         break L37;
        }
        if ((HEAP32[$$1366 >> 2] | 0) == ($65 | 0)) HEAP32[$$1366 >> 2] = $62;
        $$1366 = $$1366 + 4 | 0;
        $$1370 = $$1370 + 1 | 0;
       }
      } else $80 = $62;
     } else {
      HEAP16[$$3 >> 1] = $65;
      $$0365 = $21;
      $$0369 = 0;
      while (1) {
       if (($$0369 | 0) >= ($$1382 | 0)) {
        $80 = $65;
        break L37;
       }
       if ((HEAP32[$$0365 >> 2] | 0) == ($62 | 0)) HEAP32[$$0365 >> 2] = $65;
       $$0365 = $$0365 + 4 | 0;
       $$0369 = $$0369 + 1 | 0;
      }
     } while (0);
     $82 = ($80 << 16 >> 16) * 7 | 0;
     $84 = $4 + 1310736 + ($82 + -7 << 2) | 0;
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
     $88 = $4 + 1310736 + ($82 + -6 << 2) | 0;
     HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + $$2378;
     $92 = $4 + 1310736 + ($82 + -5 << 2) | 0;
     HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + $$0373;
     HEAP32[$4 + 1310736 + ($82 + -1 << 2) >> 2] = $$0373;
     $$2383 = $$1382;
     break;
    }
    $98 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($98 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $53;
     $136 = $54 * 7 | 0;
     $138 = $4 + 1310736 + ($136 + -7 << 2) | 0;
     HEAP32[$138 >> 2] = (HEAP32[$138 >> 2] | 0) + 1;
     $142 = $4 + 1310736 + ($136 + -6 << 2) | 0;
     HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + $$2378;
     $146 = $4 + 1310736 + ($136 + -5 << 2) | 0;
     HEAP32[$146 >> 2] = (HEAP32[$146 >> 2] | 0) + $$0373;
     $150 = $4 + 1310736 + ($136 + -4 << 2) | 0;
     if ((HEAP32[$150 >> 2] | 0) > ($$2378 | 0)) HEAP32[$150 >> 2] = $$2378;
     HEAP32[$4 + 1310736 + ($136 + -1 << 2) >> 2] = $$0373;
     $$2383 = $$1382;
     break;
    }
    $103 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
    $106 = HEAP32[$4 + 1179664 + (($98 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if (($103 | 0) <= ($106 | 0)) {
     HEAP16[$$3 >> 1] = $103;
     if (($103 | 0) < ($106 | 0)) {
      $$3368 = $21;
      $$3372 = 0;
      while (1) {
       if (($$3372 | 0) >= ($$1382 | 0)) {
        $121 = $103;
        break L61;
       }
       if ((HEAP32[$$3368 >> 2] | 0) == ($106 | 0)) HEAP32[$$3368 >> 2] = $103;
       $$3368 = $$3368 + 4 | 0;
       $$3372 = $$3372 + 1 | 0;
      }
     } else $121 = $103;
    } else {
     HEAP16[$$3 >> 1] = $106;
     $$2367 = $21;
     $$2371 = 0;
     while (1) {
      if (($$2371 | 0) >= ($$1382 | 0)) {
       $121 = $106;
       break L61;
      }
      if ((HEAP32[$$2367 >> 2] | 0) == ($103 | 0)) HEAP32[$$2367 >> 2] = $106;
      $$2367 = $$2367 + 4 | 0;
      $$2371 = $$2371 + 1 | 0;
     }
    } while (0);
    $123 = ($121 << 16 >> 16) * 7 | 0;
    $125 = $4 + 1310736 + ($123 + -7 << 2) | 0;
    HEAP32[$125 >> 2] = (HEAP32[$125 >> 2] | 0) + 1;
    $129 = $4 + 1310736 + ($123 + -6 << 2) | 0;
    HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + $$2378;
    $133 = $4 + 1310736 + ($123 + -5 << 2) | 0;
    HEAP32[$133 >> 2] = (HEAP32[$133 >> 2] | 0) + $$0373;
    $$2383 = $$1382;
   } while (0);
   $$1 = $$1 + 2 | 0;
   $$1382 = $$2383;
   $$2378 = $$2378 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0360 = $$1 + $1 + 4 | 0;
  $$0373 = $$0373 + 1 | 0;
  $$0381 = $$1382;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 23780, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $221 = $4 + 12 | 0;
  $$1374 = 1;
  $$3379 = 1;
  $$4 = $21;
  while (1) {
   if (($$3379 | 0) > ($$0381 | 0)) break;
   $223 = HEAP32[$$4 >> 2] | 0;
   if (($223 | 0) == ($$3379 | 0)) {
    $$2375 = $$1374 + 1 | 0;
    $229 = $$1374;
   } else {
    $$2375 = $$1374;
    $229 = HEAP32[$4 + 1179664 + ($223 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $229;
   $$1374 = $$2375;
   $$3379 = $$3379 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $232 = $4 + 8 | 0;
  $233 = $$1374 + -1 | 0;
  HEAP32[$232 >> 2] = $233;
  if (!$233) $$0 = 0; else {
   _memset($221 | 0, 0, $233 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $233 << 4 | 0) | 0;
   $$4380 = 0;
   while (1) {
    if (($$4380 | 0) >= ($233 | 0)) break;
    $239 = $$4380 << 2;
    HEAP32[$4 + 131084 + ($239 << 2) >> 2] = $5;
    HEAP32[$4 + 131084 + (($239 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($239 | 2) << 2) >> 2] = $6;
    HEAP32[$4 + 131084 + (($239 | 3) << 2) >> 2] = 0;
    $$4380 = $$4380 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0381 | 0)) break;
    $251 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $252 = $$5 * 7 | 0;
    $255 = $4 + 12 + ($251 << 2) | 0;
    HEAP32[$255 >> 2] = (HEAP32[$255 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($252 << 2) >> 2] | 0);
    $262 = $251 << 1;
    $263 = $4 + 655376 + ($262 << 3) | 0;
    HEAPF64[$263 >> 3] = +HEAPF64[$263 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 1 << 2) >> 2] | 0);
    $271 = $4 + 655376 + (($262 | 1) << 3) | 0;
    HEAPF64[$271 >> 3] = +HEAPF64[$271 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 2 << 2) >> 2] | 0);
    $274 = $251 << 2;
    $275 = $4 + 131084 + ($274 << 2) | 0;
    $279 = HEAP32[$4 + 1310736 + ($252 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$275 >> 2] | 0) > ($279 | 0)) HEAP32[$275 >> 2] = $279;
    $282 = $4 + 131084 + (($274 | 1) << 2) | 0;
    $286 = HEAP32[$4 + 1310736 + ($252 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$282 >> 2] | 0) < ($286 | 0)) HEAP32[$282 >> 2] = $286;
    $289 = $4 + 131084 + (($274 | 2) << 2) | 0;
    $293 = HEAP32[$4 + 1310736 + ($252 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$289 >> 2] | 0) > ($293 | 0)) HEAP32[$289 >> 2] = $293;
    $296 = $4 + 131084 + (($274 | 3) << 2) | 0;
    $300 = HEAP32[$4 + 1310736 + ($252 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$296 >> 2] | 0) < ($300 | 0)) HEAP32[$296 >> 2] = $300;
    $$5 = $$5 + 1 | 0;
   }
   $303 = HEAP32[$232 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($303 | 0)) {
     $$0 = 0;
     break L80;
    }
    $307 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $308 = $$6 << 1;
    $309 = $4 + 655376 + ($308 << 3) | 0;
    HEAPF64[$309 >> 3] = +HEAPF64[$309 >> 3] / $307;
    $313 = $4 + 655376 + (($308 | 1) << 3) | 0;
    HEAPF64[$313 >> 3] = +HEAPF64[$313 >> 3] / $307;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubDWRC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0358 = 0, $$0359 = 0, $$0361 = 0, $$0363 = 0, $$0367 = 0, $$0371 = 0, $$0374 = 0, $$0379 = 0, $$1 = 0, $$1360 = 0, $$1362 = 0, $$1364 = 0, $$1368 = 0, $$1372 = 0, $$1375 = 0, $$1380 = 0, $$2 = 0, $$2365 = 0, $$2369 = 0, $$2373 = 0, $$2376 = 0, $$2381 = 0, $$3 = 0, $$3366 = 0, $$3370 = 0, $$3377 = 0, $$4 = 0, $$4378 = 0, $$5 = 0, $$6 = 0, $102 = 0, $117 = 0, $119 = 0, $121 = 0, $125 = 0, $129 = 0, $13 = 0, $132 = 0, $134 = 0, $138 = 0, $142 = 0, $146 = 0, $151 = 0, $153 = 0, $157 = 0, $161 = 0, $165 = 0, $171 = 0, $174 = 0, $176 = 0, $180 = 0, $184 = 0, $188 = 0, $19 = 0, $191 = 0, $196 = 0, $20 = 0, $216 = 0, $218 = 0, $224 = 0, $227 = 0, $228 = 0, $23 = 0, $234 = 0, $246 = 0, $247 = 0, $250 = 0, $257 = 0, $258 = 0, $266 = 0, $269 = 0, $270 = 0, $274 = 0, $277 = 0, $281 = 0, $284 = 0, $288 = 0, $29 = 0, $291 = 0, $295 = 0, $298 = 0, $30 = 0, $302 = 0.0, $303 = 0, $304 = 0, $308 = 0, $33 = 0, $35 = 0, $39 = 0, $43 = 0, $49 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $55 = 0, $58 = 0, $6 = 0, $61 = 0, $76 = 0, $78 = 0, $80 = 0, $84 = 0, $88 = 0, $94 = 0, $99 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0359 = $5;
 $$0361 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 $$0374 = 0;
 while (1) {
  if (($$0374 | 0) >= ($1 | 0)) break;
  HEAP16[$$0361 >> 1] = 0;
  HEAP16[$$0359 >> 1] = 0;
  $$0359 = $$0359 + 2 | 0;
  $$0361 = $$0361 + 2 | 0;
  $$0374 = $$0374 + 1 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1360 = $5;
 $$1362 = $5 + ($13 << 1) | 0;
 $$1375 = 0;
 while (1) {
  if (($$1375 | 0) >= ($2 | 0)) break;
  HEAP16[$$1362 >> 1] = 0;
  HEAP16[$$1360 >> 1] = 0;
  $$1360 = $$1360 + ($1 << 1) | 0;
  $$1362 = $$1362 + ($1 << 1) | 0;
  $$1375 = $$1375 + 1 | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $23 = 0 - $1 | 0;
 $$0358 = $0 + $20 | 0;
 $$0371 = 1;
 $$0379 = 0;
 $$2 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0371 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0358;
  $$1380 = $$0379;
  $$2376 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2376 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    $29 = $$3 + ($23 << 1) | 0;
    $30 = HEAP16[$29 >> 1] | 0;
    if ($30 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $30;
     $33 = ($30 << 16 >> 16) * 7 | 0;
     $35 = $4 + 1310736 + ($33 + -7 << 2) | 0;
     HEAP32[$35 >> 2] = (HEAP32[$35 >> 2] | 0) + 1;
     $39 = $4 + 1310736 + ($33 + -6 << 2) | 0;
     HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + $$2376;
     $43 = $4 + 1310736 + ($33 + -5 << 2) | 0;
     HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + $$0371;
     HEAP32[$4 + 1310736 + ($33 + -1 << 2) >> 2] = $$0371;
     $$2381 = $$1380;
     break;
    }
    $49 = HEAP16[$29 + 2 >> 1] | 0;
    $50 = $49 << 16 >> 16;
    $53 = HEAP16[$29 + -2 >> 1] | 0;
    $54 = $53 << 16 >> 16;
    $55 = $53 << 16 >> 16 > 0;
    if ($49 << 16 >> 16 <= 0) {
     if ($55) {
      HEAP16[$$3 >> 1] = $53;
      $151 = $54 * 7 | 0;
      $153 = $4 + 1310736 + ($151 + -7 << 2) | 0;
      HEAP32[$153 >> 2] = (HEAP32[$153 >> 2] | 0) + 1;
      $157 = $4 + 1310736 + ($151 + -6 << 2) | 0;
      HEAP32[$157 >> 2] = (HEAP32[$157 >> 2] | 0) + $$2376;
      $161 = $4 + 1310736 + ($151 + -5 << 2) | 0;
      HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + $$0371;
      $165 = $4 + 1310736 + ($151 + -3 << 2) | 0;
      if ((HEAP32[$165 >> 2] | 0) < ($$2376 | 0)) HEAP32[$165 >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($151 + -1 << 2) >> 2] = $$0371;
      $$2381 = $$1380;
      break;
     }
     $171 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($171 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $171;
      $174 = ($171 << 16 >> 16) * 7 | 0;
      $176 = $4 + 1310736 + ($174 + -7 << 2) | 0;
      HEAP32[$176 >> 2] = (HEAP32[$176 >> 2] | 0) + 1;
      $180 = $4 + 1310736 + ($174 + -6 << 2) | 0;
      HEAP32[$180 >> 2] = (HEAP32[$180 >> 2] | 0) + $$2376;
      $184 = $4 + 1310736 + ($174 + -5 << 2) | 0;
      HEAP32[$184 >> 2] = (HEAP32[$184 >> 2] | 0) + $$0371;
      $188 = $4 + 1310736 + ($174 + -3 << 2) | 0;
      if ((HEAP32[$188 >> 2] | 0) >= ($$2376 | 0)) {
       $$2381 = $$1380;
       break;
      }
      HEAP32[$188 >> 2] = $$2376;
      $$2381 = $$1380;
      break;
     } else {
      $191 = $$1380 + 1 | 0;
      if (($$1380 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $191;
      HEAP32[$4 + 1179664 + ($$1380 << 2) >> 2] = $191 << 16 >> 16;
      $196 = $$1380 * 7 | 0;
      HEAP32[$4 + 1310736 + ($196 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($196 + 1 << 2) >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($196 + 2 << 2) >> 2] = $$0371;
      HEAP32[$4 + 1310736 + ($196 + 3 << 2) >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($196 + 4 << 2) >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($196 + 5 << 2) >> 2] = $$0371;
      HEAP32[$4 + 1310736 + ($196 + 6 << 2) >> 2] = $$0371;
      $$2381 = $191;
      break;
     }
    }
    if ($55) {
     $58 = HEAP32[$4 + 1179664 + ($50 + -1 << 2) >> 2] | 0;
     $61 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
     L36 : do if (($58 | 0) <= ($61 | 0)) {
      HEAP16[$$3 >> 1] = $58;
      if (($58 | 0) < ($61 | 0)) {
       $$1364 = $19;
       $$1368 = 0;
       while (1) {
        if (($$1368 | 0) >= ($$1380 | 0)) {
         $76 = $58;
         break L36;
        }
        if ((HEAP32[$$1364 >> 2] | 0) == ($61 | 0)) HEAP32[$$1364 >> 2] = $58;
        $$1364 = $$1364 + 4 | 0;
        $$1368 = $$1368 + 1 | 0;
       }
      } else $76 = $58;
     } else {
      HEAP16[$$3 >> 1] = $61;
      $$0363 = $19;
      $$0367 = 0;
      while (1) {
       if (($$0367 | 0) >= ($$1380 | 0)) {
        $76 = $61;
        break L36;
       }
       if ((HEAP32[$$0363 >> 2] | 0) == ($58 | 0)) HEAP32[$$0363 >> 2] = $61;
       $$0363 = $$0363 + 4 | 0;
       $$0367 = $$0367 + 1 | 0;
      }
     } while (0);
     $78 = ($76 << 16 >> 16) * 7 | 0;
     $80 = $4 + 1310736 + ($78 + -7 << 2) | 0;
     HEAP32[$80 >> 2] = (HEAP32[$80 >> 2] | 0) + 1;
     $84 = $4 + 1310736 + ($78 + -6 << 2) | 0;
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + $$2376;
     $88 = $4 + 1310736 + ($78 + -5 << 2) | 0;
     HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + $$0371;
     HEAP32[$4 + 1310736 + ($78 + -1 << 2) >> 2] = $$0371;
     $$2381 = $$1380;
     break;
    }
    $94 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($94 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $49;
     $132 = $50 * 7 | 0;
     $134 = $4 + 1310736 + ($132 + -7 << 2) | 0;
     HEAP32[$134 >> 2] = (HEAP32[$134 >> 2] | 0) + 1;
     $138 = $4 + 1310736 + ($132 + -6 << 2) | 0;
     HEAP32[$138 >> 2] = (HEAP32[$138 >> 2] | 0) + $$2376;
     $142 = $4 + 1310736 + ($132 + -5 << 2) | 0;
     HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + $$0371;
     $146 = $4 + 1310736 + ($132 + -4 << 2) | 0;
     if ((HEAP32[$146 >> 2] | 0) > ($$2376 | 0)) HEAP32[$146 >> 2] = $$2376;
     HEAP32[$4 + 1310736 + ($132 + -1 << 2) >> 2] = $$0371;
     $$2381 = $$1380;
     break;
    }
    $99 = HEAP32[$4 + 1179664 + ($50 + -1 << 2) >> 2] | 0;
    $102 = HEAP32[$4 + 1179664 + (($94 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if (($99 | 0) <= ($102 | 0)) {
     HEAP16[$$3 >> 1] = $99;
     if (($99 | 0) < ($102 | 0)) {
      $$3366 = $19;
      $$3370 = 0;
      while (1) {
       if (($$3370 | 0) >= ($$1380 | 0)) {
        $117 = $99;
        break L60;
       }
       if ((HEAP32[$$3366 >> 2] | 0) == ($102 | 0)) HEAP32[$$3366 >> 2] = $99;
       $$3366 = $$3366 + 4 | 0;
       $$3370 = $$3370 + 1 | 0;
      }
     } else $117 = $99;
    } else {
     HEAP16[$$3 >> 1] = $102;
     $$2365 = $19;
     $$2369 = 0;
     while (1) {
      if (($$2369 | 0) >= ($$1380 | 0)) {
       $117 = $102;
       break L60;
      }
      if ((HEAP32[$$2365 >> 2] | 0) == ($99 | 0)) HEAP32[$$2365 >> 2] = $102;
      $$2365 = $$2365 + 4 | 0;
      $$2369 = $$2369 + 1 | 0;
     }
    } while (0);
    $119 = ($117 << 16 >> 16) * 7 | 0;
    $121 = $4 + 1310736 + ($119 + -7 << 2) | 0;
    HEAP32[$121 >> 2] = (HEAP32[$121 >> 2] | 0) + 1;
    $125 = $4 + 1310736 + ($119 + -6 << 2) | 0;
    HEAP32[$125 >> 2] = (HEAP32[$125 >> 2] | 0) + $$2376;
    $129 = $4 + 1310736 + ($119 + -5 << 2) | 0;
    HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + $$0371;
    $$2381 = $$1380;
   } else {
    HEAP16[$$3 >> 1] = 0;
    $$2381 = $$1380;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1380 = $$2381;
   $$2376 = $$2376 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0358 = $$1 + 2 | 0;
  $$0371 = $$0371 + 1 | 0;
  $$0379 = $$1380;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 23780, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $216 = $4 + 12 | 0;
  $$1372 = 1;
  $$3377 = 1;
  $$4 = $19;
  while (1) {
   if (($$3377 | 0) > ($$0379 | 0)) break;
   $218 = HEAP32[$$4 >> 2] | 0;
   if (($218 | 0) == ($$3377 | 0)) {
    $$2373 = $$1372 + 1 | 0;
    $224 = $$1372;
   } else {
    $$2373 = $$1372;
    $224 = HEAP32[$4 + 1179664 + ($218 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $224;
   $$1372 = $$2373;
   $$3377 = $$3377 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $227 = $4 + 8 | 0;
  $228 = $$1372 + -1 | 0;
  HEAP32[$227 >> 2] = $228;
  if (!$228) $$0 = 0; else {
   _memset($216 | 0, 0, $228 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $228 << 4 | 0) | 0;
   $$4378 = 0;
   while (1) {
    if (($$4378 | 0) >= ($228 | 0)) break;
    $234 = $$4378 << 2;
    HEAP32[$4 + 131084 + ($234 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($234 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($234 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($234 | 3) << 2) >> 2] = 0;
    $$4378 = $$4378 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0379 | 0)) break;
    $246 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $247 = $$5 * 7 | 0;
    $250 = $4 + 12 + ($246 << 2) | 0;
    HEAP32[$250 >> 2] = (HEAP32[$250 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($247 << 2) >> 2] | 0);
    $257 = $246 << 1;
    $258 = $4 + 655376 + ($257 << 3) | 0;
    HEAPF64[$258 >> 3] = +HEAPF64[$258 >> 3] + +(HEAP32[$4 + 1310736 + ($247 + 1 << 2) >> 2] | 0);
    $266 = $4 + 655376 + (($257 | 1) << 3) | 0;
    HEAPF64[$266 >> 3] = +HEAPF64[$266 >> 3] + +(HEAP32[$4 + 1310736 + ($247 + 2 << 2) >> 2] | 0);
    $269 = $246 << 2;
    $270 = $4 + 131084 + ($269 << 2) | 0;
    $274 = HEAP32[$4 + 1310736 + ($247 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$270 >> 2] | 0) > ($274 | 0)) HEAP32[$270 >> 2] = $274;
    $277 = $4 + 131084 + (($269 | 1) << 2) | 0;
    $281 = HEAP32[$4 + 1310736 + ($247 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$277 >> 2] | 0) < ($281 | 0)) HEAP32[$277 >> 2] = $281;
    $284 = $4 + 131084 + (($269 | 2) << 2) | 0;
    $288 = HEAP32[$4 + 1310736 + ($247 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$284 >> 2] | 0) > ($288 | 0)) HEAP32[$284 >> 2] = $288;
    $291 = $4 + 131084 + (($269 | 3) << 2) | 0;
    $295 = HEAP32[$4 + 1310736 + ($247 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$291 >> 2] | 0) < ($295 | 0)) HEAP32[$291 >> 2] = $295;
    $$5 = $$5 + 1 | 0;
   }
   $298 = HEAP32[$227 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($298 | 0)) {
     $$0 = 0;
     break L80;
    }
    $302 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $303 = $$6 << 1;
    $304 = $4 + 655376 + ($303 << 3) | 0;
    HEAPF64[$304 >> 3] = +HEAPF64[$304 >> 3] / $302;
    $308 = $4 + 655376 + (($303 | 1) << 3) | 0;
    HEAPF64[$308 >> 3] = +HEAPF64[$308 >> 3] / $302;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubDBRC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0358 = 0, $$0359 = 0, $$0361 = 0, $$0363 = 0, $$0367 = 0, $$0371 = 0, $$0374 = 0, $$0379 = 0, $$1 = 0, $$1360 = 0, $$1362 = 0, $$1364 = 0, $$1368 = 0, $$1372 = 0, $$1375 = 0, $$1380 = 0, $$2 = 0, $$2365 = 0, $$2369 = 0, $$2373 = 0, $$2376 = 0, $$2381 = 0, $$3 = 0, $$3366 = 0, $$3370 = 0, $$3377 = 0, $$4 = 0, $$4378 = 0, $$5 = 0, $$6 = 0, $102 = 0, $117 = 0, $119 = 0, $121 = 0, $125 = 0, $129 = 0, $13 = 0, $132 = 0, $134 = 0, $138 = 0, $142 = 0, $146 = 0, $151 = 0, $153 = 0, $157 = 0, $161 = 0, $165 = 0, $171 = 0, $174 = 0, $176 = 0, $180 = 0, $184 = 0, $188 = 0, $19 = 0, $191 = 0, $196 = 0, $20 = 0, $216 = 0, $218 = 0, $224 = 0, $227 = 0, $228 = 0, $23 = 0, $234 = 0, $246 = 0, $247 = 0, $250 = 0, $257 = 0, $258 = 0, $266 = 0, $269 = 0, $270 = 0, $274 = 0, $277 = 0, $281 = 0, $284 = 0, $288 = 0, $29 = 0, $291 = 0, $295 = 0, $298 = 0, $30 = 0, $302 = 0.0, $303 = 0, $304 = 0, $308 = 0, $33 = 0, $35 = 0, $39 = 0, $43 = 0, $49 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $55 = 0, $58 = 0, $6 = 0, $61 = 0, $76 = 0, $78 = 0, $80 = 0, $84 = 0, $88 = 0, $94 = 0, $99 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0359 = $5;
 $$0361 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 $$0374 = 0;
 while (1) {
  if (($$0374 | 0) >= ($1 | 0)) break;
  HEAP16[$$0361 >> 1] = 0;
  HEAP16[$$0359 >> 1] = 0;
  $$0359 = $$0359 + 2 | 0;
  $$0361 = $$0361 + 2 | 0;
  $$0374 = $$0374 + 1 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1360 = $5;
 $$1362 = $5 + ($13 << 1) | 0;
 $$1375 = 0;
 while (1) {
  if (($$1375 | 0) >= ($2 | 0)) break;
  HEAP16[$$1362 >> 1] = 0;
  HEAP16[$$1360 >> 1] = 0;
  $$1360 = $$1360 + ($1 << 1) | 0;
  $$1362 = $$1362 + ($1 << 1) | 0;
  $$1375 = $$1375 + 1 | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $23 = 0 - $1 | 0;
 $$0358 = $0 + $20 | 0;
 $$0371 = 1;
 $$0379 = 0;
 $$2 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0371 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0358;
  $$1380 = $$0379;
  $$2376 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2376 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    HEAP16[$$3 >> 1] = 0;
    $$2381 = $$1380;
   } else {
    $29 = $$3 + ($23 << 1) | 0;
    $30 = HEAP16[$29 >> 1] | 0;
    if ($30 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $30;
     $33 = ($30 << 16 >> 16) * 7 | 0;
     $35 = $4 + 1310736 + ($33 + -7 << 2) | 0;
     HEAP32[$35 >> 2] = (HEAP32[$35 >> 2] | 0) + 1;
     $39 = $4 + 1310736 + ($33 + -6 << 2) | 0;
     HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + $$2376;
     $43 = $4 + 1310736 + ($33 + -5 << 2) | 0;
     HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + $$0371;
     HEAP32[$4 + 1310736 + ($33 + -1 << 2) >> 2] = $$0371;
     $$2381 = $$1380;
     break;
    }
    $49 = HEAP16[$29 + 2 >> 1] | 0;
    $50 = $49 << 16 >> 16;
    $53 = HEAP16[$29 + -2 >> 1] | 0;
    $54 = $53 << 16 >> 16;
    $55 = $53 << 16 >> 16 > 0;
    if ($49 << 16 >> 16 <= 0) {
     if ($55) {
      HEAP16[$$3 >> 1] = $53;
      $151 = $54 * 7 | 0;
      $153 = $4 + 1310736 + ($151 + -7 << 2) | 0;
      HEAP32[$153 >> 2] = (HEAP32[$153 >> 2] | 0) + 1;
      $157 = $4 + 1310736 + ($151 + -6 << 2) | 0;
      HEAP32[$157 >> 2] = (HEAP32[$157 >> 2] | 0) + $$2376;
      $161 = $4 + 1310736 + ($151 + -5 << 2) | 0;
      HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + $$0371;
      $165 = $4 + 1310736 + ($151 + -3 << 2) | 0;
      if ((HEAP32[$165 >> 2] | 0) < ($$2376 | 0)) HEAP32[$165 >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($151 + -1 << 2) >> 2] = $$0371;
      $$2381 = $$1380;
      break;
     }
     $171 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($171 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $171;
      $174 = ($171 << 16 >> 16) * 7 | 0;
      $176 = $4 + 1310736 + ($174 + -7 << 2) | 0;
      HEAP32[$176 >> 2] = (HEAP32[$176 >> 2] | 0) + 1;
      $180 = $4 + 1310736 + ($174 + -6 << 2) | 0;
      HEAP32[$180 >> 2] = (HEAP32[$180 >> 2] | 0) + $$2376;
      $184 = $4 + 1310736 + ($174 + -5 << 2) | 0;
      HEAP32[$184 >> 2] = (HEAP32[$184 >> 2] | 0) + $$0371;
      $188 = $4 + 1310736 + ($174 + -3 << 2) | 0;
      if ((HEAP32[$188 >> 2] | 0) >= ($$2376 | 0)) {
       $$2381 = $$1380;
       break;
      }
      HEAP32[$188 >> 2] = $$2376;
      $$2381 = $$1380;
      break;
     } else {
      $191 = $$1380 + 1 | 0;
      if (($$1380 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $191;
      HEAP32[$4 + 1179664 + ($$1380 << 2) >> 2] = $191 << 16 >> 16;
      $196 = $$1380 * 7 | 0;
      HEAP32[$4 + 1310736 + ($196 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($196 + 1 << 2) >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($196 + 2 << 2) >> 2] = $$0371;
      HEAP32[$4 + 1310736 + ($196 + 3 << 2) >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($196 + 4 << 2) >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($196 + 5 << 2) >> 2] = $$0371;
      HEAP32[$4 + 1310736 + ($196 + 6 << 2) >> 2] = $$0371;
      $$2381 = $191;
      break;
     }
    }
    if ($55) {
     $58 = HEAP32[$4 + 1179664 + ($50 + -1 << 2) >> 2] | 0;
     $61 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
     L37 : do if (($58 | 0) <= ($61 | 0)) {
      HEAP16[$$3 >> 1] = $58;
      if (($58 | 0) < ($61 | 0)) {
       $$1364 = $19;
       $$1368 = 0;
       while (1) {
        if (($$1368 | 0) >= ($$1380 | 0)) {
         $76 = $58;
         break L37;
        }
        if ((HEAP32[$$1364 >> 2] | 0) == ($61 | 0)) HEAP32[$$1364 >> 2] = $58;
        $$1364 = $$1364 + 4 | 0;
        $$1368 = $$1368 + 1 | 0;
       }
      } else $76 = $58;
     } else {
      HEAP16[$$3 >> 1] = $61;
      $$0363 = $19;
      $$0367 = 0;
      while (1) {
       if (($$0367 | 0) >= ($$1380 | 0)) {
        $76 = $61;
        break L37;
       }
       if ((HEAP32[$$0363 >> 2] | 0) == ($58 | 0)) HEAP32[$$0363 >> 2] = $61;
       $$0363 = $$0363 + 4 | 0;
       $$0367 = $$0367 + 1 | 0;
      }
     } while (0);
     $78 = ($76 << 16 >> 16) * 7 | 0;
     $80 = $4 + 1310736 + ($78 + -7 << 2) | 0;
     HEAP32[$80 >> 2] = (HEAP32[$80 >> 2] | 0) + 1;
     $84 = $4 + 1310736 + ($78 + -6 << 2) | 0;
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + $$2376;
     $88 = $4 + 1310736 + ($78 + -5 << 2) | 0;
     HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + $$0371;
     HEAP32[$4 + 1310736 + ($78 + -1 << 2) >> 2] = $$0371;
     $$2381 = $$1380;
     break;
    }
    $94 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($94 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $49;
     $132 = $50 * 7 | 0;
     $134 = $4 + 1310736 + ($132 + -7 << 2) | 0;
     HEAP32[$134 >> 2] = (HEAP32[$134 >> 2] | 0) + 1;
     $138 = $4 + 1310736 + ($132 + -6 << 2) | 0;
     HEAP32[$138 >> 2] = (HEAP32[$138 >> 2] | 0) + $$2376;
     $142 = $4 + 1310736 + ($132 + -5 << 2) | 0;
     HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + $$0371;
     $146 = $4 + 1310736 + ($132 + -4 << 2) | 0;
     if ((HEAP32[$146 >> 2] | 0) > ($$2376 | 0)) HEAP32[$146 >> 2] = $$2376;
     HEAP32[$4 + 1310736 + ($132 + -1 << 2) >> 2] = $$0371;
     $$2381 = $$1380;
     break;
    }
    $99 = HEAP32[$4 + 1179664 + ($50 + -1 << 2) >> 2] | 0;
    $102 = HEAP32[$4 + 1179664 + (($94 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if (($99 | 0) <= ($102 | 0)) {
     HEAP16[$$3 >> 1] = $99;
     if (($99 | 0) < ($102 | 0)) {
      $$3366 = $19;
      $$3370 = 0;
      while (1) {
       if (($$3370 | 0) >= ($$1380 | 0)) {
        $117 = $99;
        break L61;
       }
       if ((HEAP32[$$3366 >> 2] | 0) == ($102 | 0)) HEAP32[$$3366 >> 2] = $99;
       $$3366 = $$3366 + 4 | 0;
       $$3370 = $$3370 + 1 | 0;
      }
     } else $117 = $99;
    } else {
     HEAP16[$$3 >> 1] = $102;
     $$2365 = $19;
     $$2369 = 0;
     while (1) {
      if (($$2369 | 0) >= ($$1380 | 0)) {
       $117 = $102;
       break L61;
      }
      if ((HEAP32[$$2365 >> 2] | 0) == ($99 | 0)) HEAP32[$$2365 >> 2] = $102;
      $$2365 = $$2365 + 4 | 0;
      $$2369 = $$2369 + 1 | 0;
     }
    } while (0);
    $119 = ($117 << 16 >> 16) * 7 | 0;
    $121 = $4 + 1310736 + ($119 + -7 << 2) | 0;
    HEAP32[$121 >> 2] = (HEAP32[$121 >> 2] | 0) + 1;
    $125 = $4 + 1310736 + ($119 + -6 << 2) | 0;
    HEAP32[$125 >> 2] = (HEAP32[$125 >> 2] | 0) + $$2376;
    $129 = $4 + 1310736 + ($119 + -5 << 2) | 0;
    HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + $$0371;
    $$2381 = $$1380;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1380 = $$2381;
   $$2376 = $$2376 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0358 = $$1 + 2 | 0;
  $$0371 = $$0371 + 1 | 0;
  $$0379 = $$1380;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 23780, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $216 = $4 + 12 | 0;
  $$1372 = 1;
  $$3377 = 1;
  $$4 = $19;
  while (1) {
   if (($$3377 | 0) > ($$0379 | 0)) break;
   $218 = HEAP32[$$4 >> 2] | 0;
   if (($218 | 0) == ($$3377 | 0)) {
    $$2373 = $$1372 + 1 | 0;
    $224 = $$1372;
   } else {
    $$2373 = $$1372;
    $224 = HEAP32[$4 + 1179664 + ($218 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $224;
   $$1372 = $$2373;
   $$3377 = $$3377 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $227 = $4 + 8 | 0;
  $228 = $$1372 + -1 | 0;
  HEAP32[$227 >> 2] = $228;
  if (!$228) $$0 = 0; else {
   _memset($216 | 0, 0, $228 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $228 << 4 | 0) | 0;
   $$4378 = 0;
   while (1) {
    if (($$4378 | 0) >= ($228 | 0)) break;
    $234 = $$4378 << 2;
    HEAP32[$4 + 131084 + ($234 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($234 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($234 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($234 | 3) << 2) >> 2] = 0;
    $$4378 = $$4378 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0379 | 0)) break;
    $246 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $247 = $$5 * 7 | 0;
    $250 = $4 + 12 + ($246 << 2) | 0;
    HEAP32[$250 >> 2] = (HEAP32[$250 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($247 << 2) >> 2] | 0);
    $257 = $246 << 1;
    $258 = $4 + 655376 + ($257 << 3) | 0;
    HEAPF64[$258 >> 3] = +HEAPF64[$258 >> 3] + +(HEAP32[$4 + 1310736 + ($247 + 1 << 2) >> 2] | 0);
    $266 = $4 + 655376 + (($257 | 1) << 3) | 0;
    HEAPF64[$266 >> 3] = +HEAPF64[$266 >> 3] + +(HEAP32[$4 + 1310736 + ($247 + 2 << 2) >> 2] | 0);
    $269 = $246 << 2;
    $270 = $4 + 131084 + ($269 << 2) | 0;
    $274 = HEAP32[$4 + 1310736 + ($247 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$270 >> 2] | 0) > ($274 | 0)) HEAP32[$270 >> 2] = $274;
    $277 = $4 + 131084 + (($269 | 1) << 2) | 0;
    $281 = HEAP32[$4 + 1310736 + ($247 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$277 >> 2] | 0) < ($281 | 0)) HEAP32[$277 >> 2] = $281;
    $284 = $4 + 131084 + (($269 | 2) << 2) | 0;
    $288 = HEAP32[$4 + 1310736 + ($247 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$284 >> 2] | 0) > ($288 | 0)) HEAP32[$284 >> 2] = $288;
    $291 = $4 + 131084 + (($269 | 3) << 2) | 0;
    $295 = HEAP32[$4 + 1310736 + ($247 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$291 >> 2] | 0) < ($295 | 0)) HEAP32[$291 >> 2] = $295;
    $$5 = $$5 + 1 | 0;
   }
   $298 = HEAP32[$227 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($298 | 0)) {
     $$0 = 0;
     break L80;
    }
    $302 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $303 = $$6 << 1;
    $304 = $4 + 655376 + ($303 << 3) | 0;
    HEAPF64[$304 >> 3] = +HEAPF64[$304 >> 3] / $302;
    $308 = $4 + 655376 + (($303 | 1) << 3) | 0;
    HEAPF64[$308 >> 3] = +HEAPF64[$308 >> 3] / $302;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _dispose_chunk($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$041722 = 0, $$0418$lcssa = 0, $$041821 = 0, $$0429 = 0, $$0436 = 0, $$1 = 0, $$1416 = 0, $$1424 = 0, $$1424$be = 0, $$1424$ph = 0, $$1427 = 0, $$1427$be = 0, $$1427$ph = 0, $$1431 = 0, $$1431$be = 0, $$1431$ph = 0, $$1435 = 0, $$1435$be = 0, $$1435$ph = 0, $$2 = 0, $$3 = 0, $$3433 = 0, $$pre$phi28Z2D = 0, $$pre$phi30Z2D = 0, $$pre$phiZ2D = 0, $101 = 0, $102 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $117 = 0, $12 = 0, $125 = 0, $13 = 0, $130 = 0, $131 = 0, $134 = 0, $136 = 0, $138 = 0, $151 = 0, $156 = 0, $158 = 0, $161 = 0, $163 = 0, $166 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $175 = 0, $176 = 0, $178 = 0, $179 = 0, $184 = 0, $185 = 0, $194 = 0, $199 = 0, $2 = 0, $20 = 0, $202 = 0, $203 = 0, $209 = 0, $22 = 0, $224 = 0, $227 = 0, $228 = 0, $229 = 0, $233 = 0, $234 = 0, $24 = 0, $240 = 0, $245 = 0, $246 = 0, $249 = 0, $251 = 0, $254 = 0, $259 = 0, $265 = 0, $269 = 0, $270 = 0, $277 = 0, $289 = 0, $294 = 0, $301 = 0, $302 = 0, $303 = 0, $37 = 0, $4 = 0, $42 = 0, $44 = 0, $47 = 0, $49 = 0, $52 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $61 = 0, $62 = 0, $64 = 0, $65 = 0, $7 = 0, $70 = 0, $71 = 0, $80 = 0, $85 = 0, $88 = 0, $89 = 0, $95 = 0;
 $2 = $0 + $1 | 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 L1 : do if (!($4 & 1)) {
  $7 = HEAP32[$0 >> 2] | 0;
  if (!($4 & 3)) return;
  $11 = $0 + (0 - $7) | 0;
  $12 = $7 + $1 | 0;
  $13 = HEAP32[16739] | 0;
  if ($11 >>> 0 < $13 >>> 0) _abort();
  if ((HEAP32[16740] | 0) == ($11 | 0)) {
   $101 = $2 + 4 | 0;
   $102 = HEAP32[$101 >> 2] | 0;
   if (($102 & 3 | 0) != 3) {
    $$1 = $11;
    $$1416 = $12;
    break;
   }
   HEAP32[16737] = $12;
   HEAP32[$101 >> 2] = $102 & -2;
   HEAP32[$11 + 4 >> 2] = $12 | 1;
   HEAP32[$2 >> 2] = $12;
   return;
  }
  $17 = $7 >>> 3;
  if ($7 >>> 0 < 256) {
   $20 = HEAP32[$11 + 8 >> 2] | 0;
   $22 = HEAP32[$11 + 12 >> 2] | 0;
   $24 = 66980 + ($17 << 1 << 2) | 0;
   if (($20 | 0) != ($24 | 0)) {
    if ($13 >>> 0 > $20 >>> 0) _abort();
    if ((HEAP32[$20 + 12 >> 2] | 0) != ($11 | 0)) _abort();
   }
   if (($22 | 0) == ($20 | 0)) {
    HEAP32[16735] = HEAP32[16735] & ~(1 << $17);
    $$1 = $11;
    $$1416 = $12;
    break;
   }
   if (($22 | 0) != ($24 | 0)) {
    if ($13 >>> 0 > $22 >>> 0) _abort();
    $37 = $22 + 8 | 0;
    if ((HEAP32[$37 >> 2] | 0) == ($11 | 0)) $$pre$phi30Z2D = $37; else _abort();
   } else $$pre$phi30Z2D = $22 + 8 | 0;
   HEAP32[$20 + 12 >> 2] = $22;
   HEAP32[$$pre$phi30Z2D >> 2] = $20;
   $$1 = $11;
   $$1416 = $12;
   break;
  }
  $42 = HEAP32[$11 + 24 >> 2] | 0;
  $44 = HEAP32[$11 + 12 >> 2] | 0;
  do if (($44 | 0) == ($11 | 0)) {
   $55 = $11 + 16 | 0;
   $56 = $55 + 4 | 0;
   $57 = HEAP32[$56 >> 2] | 0;
   if (!$57) {
    $59 = HEAP32[$55 >> 2] | 0;
    if (!$59) {
     $$3 = 0;
     break;
    } else {
     $$1424$ph = $59;
     $$1427$ph = $55;
    }
   } else {
    $$1424$ph = $57;
    $$1427$ph = $56;
   }
   $$1424 = $$1424$ph;
   $$1427 = $$1427$ph;
   while (1) {
    $61 = $$1424 + 20 | 0;
    $62 = HEAP32[$61 >> 2] | 0;
    if (!$62) {
     $64 = $$1424 + 16 | 0;
     $65 = HEAP32[$64 >> 2] | 0;
     if (!$65) break; else {
      $$1424$be = $65;
      $$1427$be = $64;
     }
    } else {
     $$1424$be = $62;
     $$1427$be = $61;
    }
    $$1424 = $$1424$be;
    $$1427 = $$1427$be;
   }
   if ($13 >>> 0 > $$1427 >>> 0) _abort(); else {
    HEAP32[$$1427 >> 2] = 0;
    $$3 = $$1424;
    break;
   }
  } else {
   $47 = HEAP32[$11 + 8 >> 2] | 0;
   if ($13 >>> 0 > $47 >>> 0) _abort();
   $49 = $47 + 12 | 0;
   if ((HEAP32[$49 >> 2] | 0) != ($11 | 0)) _abort();
   $52 = $44 + 8 | 0;
   if ((HEAP32[$52 >> 2] | 0) == ($11 | 0)) {
    HEAP32[$49 >> 2] = $44;
    HEAP32[$52 >> 2] = $47;
    $$3 = $44;
    break;
   } else _abort();
  } while (0);
  if ($42) {
   $70 = HEAP32[$11 + 28 >> 2] | 0;
   $71 = 67244 + ($70 << 2) | 0;
   do if ((HEAP32[$71 >> 2] | 0) == ($11 | 0)) {
    HEAP32[$71 >> 2] = $$3;
    if (!$$3) {
     HEAP32[16736] = HEAP32[16736] & ~(1 << $70);
     $$1 = $11;
     $$1416 = $12;
     break L1;
    }
   } else if ((HEAP32[16739] | 0) >>> 0 <= $42 >>> 0) {
    $80 = $42 + 16 | 0;
    HEAP32[((HEAP32[$80 >> 2] | 0) == ($11 | 0) ? $80 : $42 + 20 | 0) >> 2] = $$3;
    if (!$$3) {
     $$1 = $11;
     $$1416 = $12;
     break L1;
    } else break;
   } else _abort(); while (0);
   $85 = HEAP32[16739] | 0;
   if ($85 >>> 0 > $$3 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $42;
   $88 = $11 + 16 | 0;
   $89 = HEAP32[$88 >> 2] | 0;
   do if ($89 | 0) if ($85 >>> 0 > $89 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $89;
    HEAP32[$89 + 24 >> 2] = $$3;
    break;
   } while (0);
   $95 = HEAP32[$88 + 4 >> 2] | 0;
   if ($95) if ((HEAP32[16739] | 0) >>> 0 > $95 >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $95;
    HEAP32[$95 + 24 >> 2] = $$3;
    $$1 = $11;
    $$1416 = $12;
    break;
   } else {
    $$1 = $11;
    $$1416 = $12;
   }
  } else {
   $$1 = $11;
   $$1416 = $12;
  }
 } else {
  $$1 = $0;
  $$1416 = $1;
 } while (0);
 $108 = HEAP32[16739] | 0;
 if ($2 >>> 0 < $108 >>> 0) _abort();
 $110 = $2 + 4 | 0;
 $111 = HEAP32[$110 >> 2] | 0;
 if (!($111 & 2)) {
  if ((HEAP32[16741] | 0) == ($2 | 0)) {
   $117 = (HEAP32[16738] | 0) + $$1416 | 0;
   HEAP32[16738] = $117;
   HEAP32[16741] = $$1;
   HEAP32[$$1 + 4 >> 2] = $117 | 1;
   if (($$1 | 0) != (HEAP32[16740] | 0)) return;
   HEAP32[16740] = 0;
   HEAP32[16737] = 0;
   return;
  }
  if ((HEAP32[16740] | 0) == ($2 | 0)) {
   $125 = (HEAP32[16737] | 0) + $$1416 | 0;
   HEAP32[16737] = $125;
   HEAP32[16740] = $$1;
   HEAP32[$$1 + 4 >> 2] = $125 | 1;
   HEAP32[$$1 + $125 >> 2] = $125;
   return;
  }
  $130 = ($111 & -8) + $$1416 | 0;
  $131 = $111 >>> 3;
  L99 : do if ($111 >>> 0 >= 256) {
   $156 = HEAP32[$2 + 24 >> 2] | 0;
   $158 = HEAP32[$2 + 12 >> 2] | 0;
   do if (($158 | 0) == ($2 | 0)) {
    $169 = $2 + 16 | 0;
    $170 = $169 + 4 | 0;
    $171 = HEAP32[$170 >> 2] | 0;
    if (!$171) {
     $173 = HEAP32[$169 >> 2] | 0;
     if (!$173) {
      $$3433 = 0;
      break;
     } else {
      $$1431$ph = $173;
      $$1435$ph = $169;
     }
    } else {
     $$1431$ph = $171;
     $$1435$ph = $170;
    }
    $$1431 = $$1431$ph;
    $$1435 = $$1435$ph;
    while (1) {
     $175 = $$1431 + 20 | 0;
     $176 = HEAP32[$175 >> 2] | 0;
     if (!$176) {
      $178 = $$1431 + 16 | 0;
      $179 = HEAP32[$178 >> 2] | 0;
      if (!$179) break; else {
       $$1431$be = $179;
       $$1435$be = $178;
      }
     } else {
      $$1431$be = $176;
      $$1435$be = $175;
     }
     $$1431 = $$1431$be;
     $$1435 = $$1435$be;
    }
    if ($108 >>> 0 > $$1435 >>> 0) _abort(); else {
     HEAP32[$$1435 >> 2] = 0;
     $$3433 = $$1431;
     break;
    }
   } else {
    $161 = HEAP32[$2 + 8 >> 2] | 0;
    if ($108 >>> 0 > $161 >>> 0) _abort();
    $163 = $161 + 12 | 0;
    if ((HEAP32[$163 >> 2] | 0) != ($2 | 0)) _abort();
    $166 = $158 + 8 | 0;
    if ((HEAP32[$166 >> 2] | 0) == ($2 | 0)) {
     HEAP32[$163 >> 2] = $158;
     HEAP32[$166 >> 2] = $161;
     $$3433 = $158;
     break;
    } else _abort();
   } while (0);
   if ($156 | 0) {
    $184 = HEAP32[$2 + 28 >> 2] | 0;
    $185 = 67244 + ($184 << 2) | 0;
    do if ((HEAP32[$185 >> 2] | 0) == ($2 | 0)) {
     HEAP32[$185 >> 2] = $$3433;
     if (!$$3433) {
      HEAP32[16736] = HEAP32[16736] & ~(1 << $184);
      break L99;
     }
    } else if ((HEAP32[16739] | 0) >>> 0 <= $156 >>> 0) {
     $194 = $156 + 16 | 0;
     HEAP32[((HEAP32[$194 >> 2] | 0) == ($2 | 0) ? $194 : $156 + 20 | 0) >> 2] = $$3433;
     if (!$$3433) break L99; else break;
    } else _abort(); while (0);
    $199 = HEAP32[16739] | 0;
    if ($199 >>> 0 > $$3433 >>> 0) _abort();
    HEAP32[$$3433 + 24 >> 2] = $156;
    $202 = $2 + 16 | 0;
    $203 = HEAP32[$202 >> 2] | 0;
    do if ($203 | 0) if ($199 >>> 0 > $203 >>> 0) _abort(); else {
     HEAP32[$$3433 + 16 >> 2] = $203;
     HEAP32[$203 + 24 >> 2] = $$3433;
     break;
    } while (0);
    $209 = HEAP32[$202 + 4 >> 2] | 0;
    if ($209 | 0) if ((HEAP32[16739] | 0) >>> 0 > $209 >>> 0) _abort(); else {
     HEAP32[$$3433 + 20 >> 2] = $209;
     HEAP32[$209 + 24 >> 2] = $$3433;
     break;
    }
   }
  } else {
   $134 = HEAP32[$2 + 8 >> 2] | 0;
   $136 = HEAP32[$2 + 12 >> 2] | 0;
   $138 = 66980 + ($131 << 1 << 2) | 0;
   if (($134 | 0) != ($138 | 0)) {
    if ($108 >>> 0 > $134 >>> 0) _abort();
    if ((HEAP32[$134 + 12 >> 2] | 0) != ($2 | 0)) _abort();
   }
   if (($136 | 0) == ($134 | 0)) {
    HEAP32[16735] = HEAP32[16735] & ~(1 << $131);
    break;
   }
   if (($136 | 0) != ($138 | 0)) {
    if ($108 >>> 0 > $136 >>> 0) _abort();
    $151 = $136 + 8 | 0;
    if ((HEAP32[$151 >> 2] | 0) == ($2 | 0)) $$pre$phi28Z2D = $151; else _abort();
   } else $$pre$phi28Z2D = $136 + 8 | 0;
   HEAP32[$134 + 12 >> 2] = $136;
   HEAP32[$$pre$phi28Z2D >> 2] = $134;
  } while (0);
  HEAP32[$$1 + 4 >> 2] = $130 | 1;
  HEAP32[$$1 + $130 >> 2] = $130;
  if (($$1 | 0) == (HEAP32[16740] | 0)) {
   HEAP32[16737] = $130;
   return;
  } else $$2 = $130;
 } else {
  HEAP32[$110 >> 2] = $111 & -2;
  HEAP32[$$1 + 4 >> 2] = $$1416 | 1;
  HEAP32[$$1 + $$1416 >> 2] = $$1416;
  $$2 = $$1416;
 }
 $224 = $$2 >>> 3;
 if ($$2 >>> 0 < 256) {
  $227 = 66980 + ($224 << 1 << 2) | 0;
  $228 = HEAP32[16735] | 0;
  $229 = 1 << $224;
  if ($228 & $229) {
   $233 = $227 + 8 | 0;
   $234 = HEAP32[$233 >> 2] | 0;
   if ((HEAP32[16739] | 0) >>> 0 > $234 >>> 0) _abort(); else {
    $$0436 = $234;
    $$pre$phiZ2D = $233;
   }
  } else {
   HEAP32[16735] = $228 | $229;
   $$0436 = $227;
   $$pre$phiZ2D = $227 + 8 | 0;
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$1;
  HEAP32[$$0436 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$0436;
  HEAP32[$$1 + 12 >> 2] = $227;
  return;
 }
 $240 = $$2 >>> 8;
 if ($240) if ($$2 >>> 0 > 16777215) $$0429 = 31; else {
  $245 = ($240 + 1048320 | 0) >>> 16 & 8;
  $246 = $240 << $245;
  $249 = ($246 + 520192 | 0) >>> 16 & 4;
  $251 = $246 << $249;
  $254 = ($251 + 245760 | 0) >>> 16 & 2;
  $259 = 14 - ($249 | $245 | $254) + ($251 << $254 >>> 15) | 0;
  $$0429 = $$2 >>> ($259 + 7 | 0) & 1 | $259 << 1;
 } else $$0429 = 0;
 $265 = 67244 + ($$0429 << 2) | 0;
 HEAP32[$$1 + 28 >> 2] = $$0429;
 HEAP32[$$1 + 20 >> 2] = 0;
 HEAP32[$$1 + 16 >> 2] = 0;
 $269 = HEAP32[16736] | 0;
 $270 = 1 << $$0429;
 if (!($269 & $270)) {
  HEAP32[16736] = $269 | $270;
  HEAP32[$265 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $265;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
  return;
 }
 $277 = HEAP32[$265 >> 2] | 0;
 L189 : do if ((HEAP32[$277 + 4 >> 2] & -8 | 0) == ($$2 | 0)) $$0418$lcssa = $277; else {
  $$041722 = $$2 << (($$0429 | 0) == 31 ? 0 : 25 - ($$0429 >>> 1) | 0);
  $$041821 = $277;
  while (1) {
   $294 = $$041821 + 16 + ($$041722 >>> 31 << 2) | 0;
   $289 = HEAP32[$294 >> 2] | 0;
   if (!$289) break;
   if ((HEAP32[$289 + 4 >> 2] & -8 | 0) == ($$2 | 0)) {
    $$0418$lcssa = $289;
    break L189;
   } else {
    $$041722 = $$041722 << 1;
    $$041821 = $289;
   }
  }
  if ((HEAP32[16739] | 0) >>> 0 > $294 >>> 0) _abort();
  HEAP32[$294 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $$041821;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
  return;
 } while (0);
 $301 = $$0418$lcssa + 8 | 0;
 $302 = HEAP32[$301 >> 2] | 0;
 $303 = HEAP32[16739] | 0;
 if (!($303 >>> 0 <= $302 >>> 0 & $303 >>> 0 <= $$0418$lcssa >>> 0)) _abort();
 HEAP32[$302 + 12 >> 2] = $$1;
 HEAP32[$301 >> 2] = $$1;
 HEAP32[$$1 + 8 >> 2] = $302;
 HEAP32[$$1 + 12 >> 2] = $$0418$lcssa;
 HEAP32[$$1 + 24 >> 2] = 0;
 return;
}

function __ZN6vision21OrientationAssignment7computeEPfRiiifff($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 $6 = +$6;
 $7 = +$7;
 var $$0 = 0, $$0148 = 0, $$0149 = 0, $$0150 = 0.0, $$0152 = 0, $$0153 = 0, $$pre = 0, $10 = 0, $107 = 0, $11 = 0, $112 = 0, $116 = 0, $118 = 0, $12 = 0, $120 = 0, $13 = 0, $130 = 0.0, $133 = 0.0, $136 = 0.0, $138 = 0.0, $14 = 0, $140 = 0, $145 = 0, $148 = 0, $149 = 0, $152 = 0, $153 = 0, $154 = 0, $159 = 0, $161 = 0, $164 = 0.0, $165 = 0, $171 = 0.0, $174 = 0, $177 = 0.0, $178 = 0, $191 = 0, $192 = 0, $199 = 0.0, $208 = 0, $21 = 0, $213 = 0, $217 = 0, $218 = 0, $219 = 0, $220 = 0, $221 = 0, $223 = 0, $224 = 0.0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $233 = 0, $234 = 0, $239 = 0, $244 = 0.0, $245 = 0.0, $256 = 0.0, $26 = 0, $263 = 0, $30 = 0, $31 = 0, $34 = 0, $35 = 0, $46 = 0, $51 = 0, $55 = 0, $62 = 0, $67 = 0, $71 = 0, $74 = 0, $8 = 0, $85 = 0, $9 = 0, $90 = 0, $94 = 0, $97 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $8 = sp + 32 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 12 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 if (!($5 >= 0.0)) {
  $21 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 32047) | 0, 31917) | 0, 39072) | 0, 119) | 0, 39079) | 0, 32077) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $21 + (HEAP32[(HEAP32[$21 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $26 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 66512) | 0;
  $30 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$26 >> 2] | 0) + 28 >> 2] & 127]($26, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($21, $30) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($21) | 0;
  _abort();
 }
 $31 = $0 + 4 | 0;
 $34 = (Math_imul(HEAP32[$31 >> 2] | 0, $3) | 0) + $4 | 0;
 $35 = $0 + 40 | 0;
 if (!(+((__ZNK6vision5Image5widthEv((HEAP32[$35 >> 2] | 0) + ($34 << 5) | 0) | 0) >>> 0) > $5)) {
  $46 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 32096) | 0, 31917) | 0, 39072) | 0, 120) | 0, 39079) | 0, 32176) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $46 + (HEAP32[(HEAP32[$46 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $51 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 66512) | 0;
  $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$51 >> 2] | 0) + 28 >> 2] & 127]($51, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($46, $55) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($46) | 0;
  _abort();
 }
 if (!($6 >= 0.0)) {
  $62 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 32212) | 0, 31917) | 0, 39072) | 0, 121) | 0, 39079) | 0, 32242) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $62 + (HEAP32[(HEAP32[$62 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $67 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 66512) | 0;
  $71 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$67 >> 2] | 0) + 28 >> 2] & 127]($67, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($62, $71) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($62) | 0;
  _abort();
 }
 $74 = (Math_imul(HEAP32[$31 >> 2] | 0, $3) | 0) + $4 | 0;
 if (!(+((__ZNK6vision5Image6heightEv((HEAP32[$35 >> 2] | 0) + ($74 << 5) | 0) | 0) >>> 0) > $6)) {
  $85 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 32261) | 0, 31917) | 0, 39072) | 0, 122) | 0, 39079) | 0, 32342) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $85 + (HEAP32[(HEAP32[$85 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $90 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 66512) | 0;
  $94 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$90 >> 2] | 0) + 28 >> 2] & 127]($90, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($85, $94) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($85) | 0;
  _abort();
 }
 $97 = (Math_imul(HEAP32[$31 >> 2] | 0, $3) | 0) + $4 | 0;
 $99 = (HEAP32[$35 >> 2] | 0) + ($97 << 5) | 0;
 if ((__ZNK6vision5Image8channelsEv($99) | 0) != 2) {
  $107 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 32379) | 0, 31917) | 0, 39072) | 0, 126) | 0, 39079) | 0, 32420) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $107 + (HEAP32[(HEAP32[$107 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $112 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 66512) | 0;
  $116 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$112 >> 2] | 0) + 28 >> 2] & 127]($112, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($107, $116) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($107) | 0;
  _abort();
 }
 HEAP32[$2 >> 2] = 0;
 $118 = ~~($5 + .5);
 $120 = ~~($6 + .5);
 L16 : do if ((($118 | 0) >= 0 ? !(($120 | 0) < 0 | (__ZNK6vision5Image5widthEv($99) | 0) >>> 0 <= $118 >>> 0) : 0) ? (__ZNK6vision5Image6heightEv($99) | 0) >>> 0 > $120 >>> 0 : 0) {
  $130 = +__ZN6vision4max2IfEET_S1_S1_(1.0, +HEAPF32[$0 + 12 >> 2] * $7);
  $133 = -1.0 / (+__ZN6vision3sqrIfEET_S1_($130) * 2.0);
  $136 = $130 * +HEAPF32[$0 + 16 >> 2];
  $138 = +Math_ceil(+(+__ZN6vision3sqrIfEET_S1_($136)));
  $140 = ~~($136 + .5);
  $145 = __ZN6vision4max2IiEET_S1_S1_(0, $118 - $140 | 0) | 0;
  $148 = __ZN6vision4min2IiEET_S1_S1_($140 + $118 | 0, (__ZNK6vision5Image5widthEv($99) | 0) + -1 | 0) | 0;
  $149 = __ZN6vision4max2IiEET_S1_S1_(0, $120 - $140 | 0) | 0;
  $152 = __ZN6vision4min2IiEET_S1_S1_($140 + $120 | 0, (__ZNK6vision5Image6heightEv($99) | 0) + -1 | 0) | 0;
  $153 = $0 + 28 | 0;
  $154 = HEAP32[$153 >> 2] | 0;
  __ZN6vision10ZeroVectorIfEEvPT_m($154, (HEAP32[$0 + 32 >> 2] | 0) - $154 >> 2);
  $159 = $0 + 8 | 0;
  $$0152 = $149;
  while (1) {
   if (($$0152 | 0) > ($152 | 0)) break;
   $164 = +__ZN6vision3sqrIfEET_S1_(+($$0152 | 0) - $6);
   $165 = __ZNK6vision5Image3getIfEEPKT_m($99, $$0152) | 0;
   $$0153 = $145;
   while (1) {
    if (($$0153 | 0) > ($148 | 0)) break;
    $171 = $164 + +__ZN6vision3sqrIfEET_S1_(+($$0153 | 0) - $5);
    if (!($171 > $138)) {
     $174 = $165 + ($$0153 << 1 << 2) | 0;
     $177 = +__ZN6vision8fastexp6IfEET_S1_($133 * $171);
     $178 = HEAP32[$159 >> 2] | 0;
     __ZN6vision25bilinear_histogram_updateEPfffi(HEAP32[$153 >> 2] | 0, +HEAPF32[$174 >> 2] * +($178 | 0) * .159154943091895, $177 * +HEAPF32[$174 + 4 >> 2], $178);
    }
    $$0153 = $$0153 + 1 | 0;
   }
   $$0152 = $$0152 + 1 | 0;
  }
  $161 = $0 + 20 | 0;
  $$0149 = 0;
  while (1) {
   if (($$0149 | 0) >= (HEAP32[$161 >> 2] | 0)) break;
   $192 = HEAP32[$153 >> 2] | 0;
   __ZN6vision26SmoothOrientationHistogramIfEEvPT_PKS1_mS4_($192, $192, HEAP32[$159 >> 2] | 0, 16800);
   $$0149 = $$0149 + 1 | 0;
  }
  $191 = HEAP32[$159 >> 2] | 0;
  $$0148 = 0;
  $$0150 = 0.0;
  while (1) {
   if (($$0148 | 0) >= ($191 | 0)) break;
   $199 = +HEAPF32[(HEAP32[$153 >> 2] | 0) + ($$0148 << 2) >> 2];
   $$0148 = $$0148 + 1 | 0;
   $$0150 = $199 > $$0150 ? $199 : $$0150;
  }
  if (!($$0150 == 0.0)) {
   if (!($$0150 > 0.0)) {
    $208 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 32451) | 0, 31917) | 0, 39072) | 0, 218) | 0, 39079) | 0, 32489) | 0;
    __ZNKSt3__28ios_base6getlocEv($8, $208 + (HEAP32[(HEAP32[$208 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $213 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 66512) | 0;
    $217 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$213 >> 2] | 0) + 28 >> 2] & 127]($213, 10) | 0;
    __ZNSt3__26localeD2Ev($8);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($208, $217) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($208) | 0;
    _abort();
   }
   $218 = $8 + 4 | 0;
   $219 = $9 + 4 | 0;
   $220 = $10 + 4 | 0;
   $221 = $0 + 24 | 0;
   $$0 = 0;
   $223 = $191;
   while (1) {
    if (($$0 | 0) >= ($223 | 0)) break L16;
    $224 = +($$0 | 0);
    HEAPF32[$8 >> 2] = $224;
    $225 = HEAP32[$153 >> 2] | 0;
    $226 = $225 + ($$0 << 2) | 0;
    $227 = HEAP32[$226 >> 2] | 0;
    HEAP32[$218 >> 2] = $227;
    $228 = $$0 + -1 | 0;
    HEAPF32[$9 >> 2] = +($228 | 0);
    $233 = HEAP32[$225 + ((($228 + $223 | 0) % ($223 | 0) | 0) << 2) >> 2] | 0;
    HEAP32[$219 >> 2] = $233;
    $234 = $$0 + 1 | 0;
    HEAPF32[$10 >> 2] = +($234 | 0);
    $239 = HEAP32[$225 + ((($234 + $223 | 0) % ($223 | 0) | 0) << 2) >> 2] | 0;
    HEAP32[$220 >> 2] = $239;
    $244 = (HEAP32[tempDoublePtr >> 2] = $227, +HEAPF32[tempDoublePtr >> 2]);
    if (+HEAPF32[$226 >> 2] > $$0150 * +HEAPF32[$221 >> 2] ? ($245 = (HEAP32[tempDoublePtr >> 2] = $239, +HEAPF32[tempDoublePtr >> 2]), $244 > (HEAP32[tempDoublePtr >> 2] = $233, +HEAPF32[tempDoublePtr >> 2]) & $244 > $245) : 0) {
     HEAPF32[$14 >> 2] = $224;
     if (__ZN6vision16Quadratic3PointsIfEEbRT_S2_S2_PKS1_S4_S4_($11, $12, $13, $9, $8, $10) | 0) __ZN6vision22QuadraticCriticalPointIfEEbRT_S1_S1_S1_($14, +HEAPF32[$11 >> 2], +HEAPF32[$12 >> 2], +HEAPF32[$13 >> 2]) | 0;
     $256 = +(HEAP32[$159 >> 2] | 0);
     $263 = HEAP32[$2 >> 2] | 0;
     HEAPF32[$1 + ($263 << 2) >> 2] = (+HEAPF32[$14 >> 2] + .5 + $256) / $256 * 6.283185307179586 % 6.283185307179586;
     HEAP32[$2 >> 2] = $263 + 1;
     $$pre = HEAP32[$159 >> 2] | 0;
    } else $$pre = $223;
    $$0 = $234;
    $223 = $$pre;
   }
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function _jpeg_idct_5x5($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $103 = 0, $109 = 0, $111 = 0, $113 = 0, $115 = 0, $137 = 0, $143 = 0, $149 = 0, $15 = 0, $151 = 0, $152 = 0, $154 = 0, $155 = 0, $156 = 0, $158 = 0, $164 = 0, $170 = 0, $172 = 0, $174 = 0, $176 = 0, $198 = 0, $204 = 0, $21 = 0, $210 = 0, $212 = 0, $213 = 0, $215 = 0, $216 = 0, $217 = 0, $219 = 0, $225 = 0, $231 = 0, $233 = 0, $235 = 0, $237 = 0, $259 = 0, $265 = 0, $27 = 0, $271 = 0, $273 = 0, $274 = 0, $276 = 0, $277 = 0, $278 = 0, $280 = 0, $286 = 0, $29 = 0, $292 = 0, $294 = 0, $296 = 0, $298 = 0, $30 = 0, $312 = 0, $314 = 0, $317 = 0, $319 = 0, $32 = 0, $321 = 0, $323 = 0, $324 = 0, $326 = 0, $327 = 0, $328 = 0, $33 = 0, $330 = 0, $331 = 0, $333 = 0, $335 = 0, $337 = 0, $339 = 0, $34 = 0, $36 = 0, $370 = 0, $373 = 0, $375 = 0, $377 = 0, $379 = 0, $380 = 0, $382 = 0, $383 = 0, $384 = 0, $386 = 0, $388 = 0, $390 = 0, $392 = 0, $394 = 0, $396 = 0, $42 = 0, $428 = 0, $431 = 0, $433 = 0, $435 = 0, $437 = 0, $438 = 0, $440 = 0, $441 = 0, $442 = 0, $444 = 0, $446 = 0, $448 = 0, $450 = 0, $452 = 0, $454 = 0, $48 = 0, $486 = 0, $489 = 0, $491 = 0, $493 = 0, $495 = 0, $496 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $502 = 0, $504 = 0, $506 = 0, $508 = 0, $510 = 0, $512 = 0, $52 = 0, $54 = 0, $544 = 0, $547 = 0, $549 = 0, $551 = 0, $553 = 0, $554 = 0, $556 = 0, $557 = 0, $558 = 0, $560 = 0, $562 = 0, $564 = 0, $566 = 0, $568 = 0, $570 = 0, $62 = 0, $7 = 0, $70 = 0, $76 = 0, $82 = 0, $88 = 0, $9 = 0, $90 = 0, $91 = 0, $93 = 0, $94 = 0, $95 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $9 = HEAP32[$1 + 84 >> 2] | 0;
 $15 = Math_imul(HEAP16[$2 >> 1] << 13, HEAP32[$9 >> 2] | 0) | 0 | 1024;
 $21 = Math_imul(HEAP32[$9 + 64 >> 2] | 0, HEAP16[$2 + 32 >> 1] | 0) | 0;
 $27 = Math_imul(HEAP32[$9 + 128 >> 2] | 0, HEAP16[$2 + 64 >> 1] | 0) | 0;
 $29 = ($27 + $21 | 0) * 6476 | 0;
 $30 = $21 - $27 | 0;
 $32 = ($30 * 2896 | 0) + $15 | 0;
 $33 = $32 + $29 | 0;
 $34 = $32 - $29 | 0;
 $36 = (Math_imul($30, -11584) | 0) + $15 | 0;
 $42 = Math_imul(HEAP32[$9 + 32 >> 2] | 0, HEAP16[$2 + 16 >> 1] | 0) | 0;
 $48 = Math_imul(HEAP32[$9 + 96 >> 2] | 0, HEAP16[$2 + 48 >> 1] | 0) | 0;
 $50 = ($48 + $42 | 0) * 6810 | 0;
 $52 = $50 + ($42 * 4209 | 0) | 0;
 $54 = $50 + (Math_imul($48, -17828) | 0) | 0;
 HEAP32[$5 >> 2] = $52 + $33 >> 11;
 HEAP32[$5 + 80 >> 2] = $33 - $52 >> 11;
 $62 = $5 + 20 | 0;
 HEAP32[$62 >> 2] = $54 + $34 >> 11;
 HEAP32[$5 + 60 >> 2] = $34 - $54 >> 11;
 HEAP32[$5 + 40 >> 2] = $36 >> 11;
 $70 = $5 + 4 | 0;
 $76 = Math_imul(HEAP16[$2 + 2 >> 1] << 13, HEAP32[$9 + 4 >> 2] | 0) | 0 | 1024;
 $82 = Math_imul(HEAP32[$9 + 68 >> 2] | 0, HEAP16[$2 + 34 >> 1] | 0) | 0;
 $88 = Math_imul(HEAP32[$9 + 132 >> 2] | 0, HEAP16[$2 + 66 >> 1] | 0) | 0;
 $90 = ($88 + $82 | 0) * 6476 | 0;
 $91 = $82 - $88 | 0;
 $93 = ($91 * 2896 | 0) + $76 | 0;
 $94 = $93 + $90 | 0;
 $95 = $93 - $90 | 0;
 $97 = (Math_imul($91, -11584) | 0) + $76 | 0;
 $103 = Math_imul(HEAP32[$9 + 36 >> 2] | 0, HEAP16[$2 + 18 >> 1] | 0) | 0;
 $109 = Math_imul(HEAP32[$9 + 100 >> 2] | 0, HEAP16[$2 + 50 >> 1] | 0) | 0;
 $111 = ($109 + $103 | 0) * 6810 | 0;
 $113 = $111 + ($103 * 4209 | 0) | 0;
 $115 = $111 + (Math_imul($109, -17828) | 0) | 0;
 HEAP32[$70 >> 2] = $113 + $94 >> 11;
 HEAP32[$5 + 84 >> 2] = $94 - $113 >> 11;
 HEAP32[$5 + 24 >> 2] = $115 + $95 >> 11;
 HEAP32[$5 + 64 >> 2] = $95 - $115 >> 11;
 HEAP32[$5 + 44 >> 2] = $97 >> 11;
 $137 = Math_imul(HEAP16[$2 + 4 >> 1] << 13, HEAP32[$9 + 8 >> 2] | 0) | 0 | 1024;
 $143 = Math_imul(HEAP32[$9 + 72 >> 2] | 0, HEAP16[$2 + 36 >> 1] | 0) | 0;
 $149 = Math_imul(HEAP32[$9 + 136 >> 2] | 0, HEAP16[$2 + 68 >> 1] | 0) | 0;
 $151 = ($149 + $143 | 0) * 6476 | 0;
 $152 = $143 - $149 | 0;
 $154 = ($152 * 2896 | 0) + $137 | 0;
 $155 = $154 + $151 | 0;
 $156 = $154 - $151 | 0;
 $158 = (Math_imul($152, -11584) | 0) + $137 | 0;
 $164 = Math_imul(HEAP32[$9 + 40 >> 2] | 0, HEAP16[$2 + 20 >> 1] | 0) | 0;
 $170 = Math_imul(HEAP32[$9 + 104 >> 2] | 0, HEAP16[$2 + 52 >> 1] | 0) | 0;
 $172 = ($170 + $164 | 0) * 6810 | 0;
 $174 = $172 + ($164 * 4209 | 0) | 0;
 $176 = $172 + (Math_imul($170, -17828) | 0) | 0;
 HEAP32[$5 + 8 >> 2] = $174 + $155 >> 11;
 HEAP32[$5 + 88 >> 2] = $155 - $174 >> 11;
 HEAP32[$5 + 28 >> 2] = $176 + $156 >> 11;
 HEAP32[$5 + 68 >> 2] = $156 - $176 >> 11;
 HEAP32[$5 + 48 >> 2] = $158 >> 11;
 $198 = Math_imul(HEAP16[$2 + 6 >> 1] << 13, HEAP32[$9 + 12 >> 2] | 0) | 0 | 1024;
 $204 = Math_imul(HEAP32[$9 + 76 >> 2] | 0, HEAP16[$2 + 38 >> 1] | 0) | 0;
 $210 = Math_imul(HEAP32[$9 + 140 >> 2] | 0, HEAP16[$2 + 70 >> 1] | 0) | 0;
 $212 = ($210 + $204 | 0) * 6476 | 0;
 $213 = $204 - $210 | 0;
 $215 = ($213 * 2896 | 0) + $198 | 0;
 $216 = $215 + $212 | 0;
 $217 = $215 - $212 | 0;
 $219 = (Math_imul($213, -11584) | 0) + $198 | 0;
 $225 = Math_imul(HEAP32[$9 + 44 >> 2] | 0, HEAP16[$2 + 22 >> 1] | 0) | 0;
 $231 = Math_imul(HEAP32[$9 + 108 >> 2] | 0, HEAP16[$2 + 54 >> 1] | 0) | 0;
 $233 = ($231 + $225 | 0) * 6810 | 0;
 $235 = $233 + ($225 * 4209 | 0) | 0;
 $237 = $233 + (Math_imul($231, -17828) | 0) | 0;
 HEAP32[$5 + 12 >> 2] = $235 + $216 >> 11;
 HEAP32[$5 + 92 >> 2] = $216 - $235 >> 11;
 HEAP32[$5 + 32 >> 2] = $237 + $217 >> 11;
 HEAP32[$5 + 72 >> 2] = $217 - $237 >> 11;
 HEAP32[$5 + 52 >> 2] = $219 >> 11;
 $259 = Math_imul(HEAP16[$2 + 8 >> 1] << 13, HEAP32[$9 + 16 >> 2] | 0) | 0 | 1024;
 $265 = Math_imul(HEAP32[$9 + 80 >> 2] | 0, HEAP16[$2 + 40 >> 1] | 0) | 0;
 $271 = Math_imul(HEAP32[$9 + 144 >> 2] | 0, HEAP16[$2 + 72 >> 1] | 0) | 0;
 $273 = ($271 + $265 | 0) * 6476 | 0;
 $274 = $265 - $271 | 0;
 $276 = ($274 * 2896 | 0) + $259 | 0;
 $277 = $276 + $273 | 0;
 $278 = $276 - $273 | 0;
 $280 = (Math_imul($274, -11584) | 0) + $259 | 0;
 $286 = Math_imul(HEAP32[$9 + 48 >> 2] | 0, HEAP16[$2 + 24 >> 1] | 0) | 0;
 $292 = Math_imul(HEAP32[$9 + 112 >> 2] | 0, HEAP16[$2 + 56 >> 1] | 0) | 0;
 $294 = ($292 + $286 | 0) * 6810 | 0;
 $296 = $294 + ($286 * 4209 | 0) | 0;
 $298 = $294 + (Math_imul($292, -17828) | 0) | 0;
 HEAP32[$5 + 16 >> 2] = $296 + $277 >> 11;
 HEAP32[$5 + 96 >> 2] = $277 - $296 >> 11;
 HEAP32[$5 + 36 >> 2] = $298 + $278 >> 11;
 HEAP32[$5 + 76 >> 2] = $278 - $298 >> 11;
 HEAP32[$5 + 56 >> 2] = $280 >> 11;
 $312 = $7 + -384 | 0;
 $314 = (HEAP32[$3 >> 2] | 0) + $4 | 0;
 $317 = (HEAP32[$5 >> 2] << 13) + 134348800 | 0;
 $319 = HEAP32[$5 + 8 >> 2] | 0;
 $321 = HEAP32[$5 + 16 >> 2] | 0;
 $323 = ($321 + $319 | 0) * 6476 | 0;
 $324 = $319 - $321 | 0;
 $326 = ($324 * 2896 | 0) + $317 | 0;
 $327 = $326 + $323 | 0;
 $328 = $326 - $323 | 0;
 $330 = (Math_imul($324, -11584) | 0) + $317 | 0;
 $331 = HEAP32[$70 >> 2] | 0;
 $333 = HEAP32[$5 + 12 >> 2] | 0;
 $335 = ($333 + $331 | 0) * 6810 | 0;
 $337 = $335 + ($331 * 4209 | 0) | 0;
 $339 = $335 + (Math_imul($333, -17828) | 0) | 0;
 HEAP8[$314 >> 0] = HEAP8[$312 + (($337 + $327 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$314 + 4 >> 0] = HEAP8[$312 + (($327 - $337 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$314 + 1 >> 0] = HEAP8[$312 + (($339 + $328 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$314 + 3 >> 0] = HEAP8[$312 + (($328 - $339 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$314 + 2 >> 0] = HEAP8[$312 + ($330 >>> 18 & 1023) >> 0] | 0;
 $370 = (HEAP32[$3 + 4 >> 2] | 0) + $4 | 0;
 $373 = (HEAP32[$62 >> 2] << 13) + 134348800 | 0;
 $375 = HEAP32[$5 + 28 >> 2] | 0;
 $377 = HEAP32[$5 + 36 >> 2] | 0;
 $379 = ($377 + $375 | 0) * 6476 | 0;
 $380 = $375 - $377 | 0;
 $382 = ($380 * 2896 | 0) + $373 | 0;
 $383 = $382 + $379 | 0;
 $384 = $382 - $379 | 0;
 $386 = (Math_imul($380, -11584) | 0) + $373 | 0;
 $388 = HEAP32[$5 + 24 >> 2] | 0;
 $390 = HEAP32[$5 + 32 >> 2] | 0;
 $392 = ($390 + $388 | 0) * 6810 | 0;
 $394 = $392 + ($388 * 4209 | 0) | 0;
 $396 = $392 + (Math_imul($390, -17828) | 0) | 0;
 HEAP8[$370 >> 0] = HEAP8[$312 + (($394 + $383 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$370 + 4 >> 0] = HEAP8[$312 + (($383 - $394 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$370 + 1 >> 0] = HEAP8[$312 + (($396 + $384 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$370 + 3 >> 0] = HEAP8[$312 + (($384 - $396 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$370 + 2 >> 0] = HEAP8[$312 + ($386 >>> 18 & 1023) >> 0] | 0;
 $428 = (HEAP32[$3 + 8 >> 2] | 0) + $4 | 0;
 $431 = (HEAP32[$5 + 40 >> 2] << 13) + 134348800 | 0;
 $433 = HEAP32[$5 + 48 >> 2] | 0;
 $435 = HEAP32[$5 + 56 >> 2] | 0;
 $437 = ($435 + $433 | 0) * 6476 | 0;
 $438 = $433 - $435 | 0;
 $440 = ($438 * 2896 | 0) + $431 | 0;
 $441 = $440 + $437 | 0;
 $442 = $440 - $437 | 0;
 $444 = (Math_imul($438, -11584) | 0) + $431 | 0;
 $446 = HEAP32[$5 + 44 >> 2] | 0;
 $448 = HEAP32[$5 + 52 >> 2] | 0;
 $450 = ($448 + $446 | 0) * 6810 | 0;
 $452 = $450 + ($446 * 4209 | 0) | 0;
 $454 = $450 + (Math_imul($448, -17828) | 0) | 0;
 HEAP8[$428 >> 0] = HEAP8[$312 + (($452 + $441 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$428 + 4 >> 0] = HEAP8[$312 + (($441 - $452 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$428 + 1 >> 0] = HEAP8[$312 + (($454 + $442 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$428 + 3 >> 0] = HEAP8[$312 + (($442 - $454 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$428 + 2 >> 0] = HEAP8[$312 + ($444 >>> 18 & 1023) >> 0] | 0;
 $486 = (HEAP32[$3 + 12 >> 2] | 0) + $4 | 0;
 $489 = (HEAP32[$5 + 60 >> 2] << 13) + 134348800 | 0;
 $491 = HEAP32[$5 + 68 >> 2] | 0;
 $493 = HEAP32[$5 + 76 >> 2] | 0;
 $495 = ($493 + $491 | 0) * 6476 | 0;
 $496 = $491 - $493 | 0;
 $498 = ($496 * 2896 | 0) + $489 | 0;
 $499 = $498 + $495 | 0;
 $500 = $498 - $495 | 0;
 $502 = (Math_imul($496, -11584) | 0) + $489 | 0;
 $504 = HEAP32[$5 + 64 >> 2] | 0;
 $506 = HEAP32[$5 + 72 >> 2] | 0;
 $508 = ($506 + $504 | 0) * 6810 | 0;
 $510 = $508 + ($504 * 4209 | 0) | 0;
 $512 = $508 + (Math_imul($506, -17828) | 0) | 0;
 HEAP8[$486 >> 0] = HEAP8[$312 + (($510 + $499 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$486 + 4 >> 0] = HEAP8[$312 + (($499 - $510 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$486 + 1 >> 0] = HEAP8[$312 + (($512 + $500 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$486 + 3 >> 0] = HEAP8[$312 + (($500 - $512 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$486 + 2 >> 0] = HEAP8[$312 + ($502 >>> 18 & 1023) >> 0] | 0;
 $544 = (HEAP32[$3 + 16 >> 2] | 0) + $4 | 0;
 $547 = (HEAP32[$5 + 80 >> 2] << 13) + 134348800 | 0;
 $549 = HEAP32[$5 + 88 >> 2] | 0;
 $551 = HEAP32[$5 + 96 >> 2] | 0;
 $553 = ($551 + $549 | 0) * 6476 | 0;
 $554 = $549 - $551 | 0;
 $556 = ($554 * 2896 | 0) + $547 | 0;
 $557 = $556 + $553 | 0;
 $558 = $556 - $553 | 0;
 $560 = (Math_imul($554, -11584) | 0) + $547 | 0;
 $562 = HEAP32[$5 + 84 >> 2] | 0;
 $564 = HEAP32[$5 + 92 >> 2] | 0;
 $566 = ($564 + $562 | 0) * 6810 | 0;
 $568 = $566 + ($562 * 4209 | 0) | 0;
 $570 = $566 + (Math_imul($564, -17828) | 0) | 0;
 HEAP8[$544 >> 0] = HEAP8[$312 + (($568 + $557 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$544 + 4 >> 0] = HEAP8[$312 + (($557 - $568 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$544 + 1 >> 0] = HEAP8[$312 + (($570 + $558 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$544 + 3 >> 0] = HEAP8[$312 + (($558 - $570 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$544 + 2 >> 0] = HEAP8[$312 + ($560 >>> 18 & 1023) >> 0] | 0;
 STACKTOP = sp;
 return;
}

function __ZN6vision10DoGPyramid25difference_image_binomialERNS_5ImageERKS1_S4_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$041 = 0, $102 = 0, $106 = 0, $107 = 0, $115 = 0, $12 = 0, $120 = 0, $124 = 0, $125 = 0, $133 = 0, $138 = 0, $142 = 0, $143 = 0, $151 = 0, $156 = 0, $160 = 0, $161 = 0, $169 = 0, $17 = 0, $174 = 0, $178 = 0, $181 = 0, $182 = 0, $183 = 0, $21 = 0, $29 = 0, $34 = 0, $38 = 0, $4 = 0, $46 = 0, $51 = 0, $55 = 0, $63 = 0, $68 = 0, $72 = 0, $80 = 0, $85 = 0, $89 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 if ((__ZNK6vision5Image4typeEv($1) | 0) != 2) {
  $12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 27182) | 0, 26748) | 0, 39072) | 0, 86) | 0, 39079) | 0, 27227) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 127]($17, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image4typeEv($2) | 0) != 2) {
  $29 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 27253) | 0, 26748) | 0, 39072) | 0, 87) | 0, 39079) | 0, 27227) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $29 + (HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $34 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $38 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$34 >> 2] | 0) + 28 >> 2] & 127]($34, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($29, $38) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($29) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image4typeEv($3) | 0) != 2) {
  $46 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 27300) | 0, 26748) | 0, 39072) | 0, 88) | 0, 39079) | 0, 27227) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $46 + (HEAP32[(HEAP32[$46 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $51 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$51 >> 2] | 0) + 28 >> 2] & 127]($51, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($46, $55) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($46) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image8channelsEv($1) | 0) != 1) {
  $63 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 27347) | 0, 26748) | 0, 39072) | 0, 89) | 0, 39079) | 0, 27388) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $63 + (HEAP32[(HEAP32[$63 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $68 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $72 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$68 >> 2] | 0) + 28 >> 2] & 127]($68, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($63, $72) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($63) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image8channelsEv($2) | 0) != 1) {
  $80 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 27425) | 0, 26748) | 0, 39072) | 0, 90) | 0, 39079) | 0, 27388) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $80 + (HEAP32[(HEAP32[$80 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $85 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $89 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$85 >> 2] | 0) + 28 >> 2] & 127]($85, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($80, $89) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($80) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image8channelsEv($3) | 0) != 1) {
  $97 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 27468) | 0, 26748) | 0, 39072) | 0, 91) | 0, 39079) | 0, 27388) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $97 + (HEAP32[(HEAP32[$97 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $102 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $106 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$102 >> 2] | 0) + 28 >> 2] & 127]($102, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($97, $106) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($97) | 0;
  _abort();
 }
 $107 = __ZNK6vision5Image5widthEv($1) | 0;
 if (($107 | 0) != (__ZNK6vision5Image5widthEv($3) | 0)) {
  $115 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 27511) | 0, 26748) | 0, 39072) | 0, 92) | 0, 39079) | 0, 27559) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $115 + (HEAP32[(HEAP32[$115 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $120 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $124 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$120 >> 2] | 0) + 28 >> 2] & 127]($120, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($115, $124) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($115) | 0;
  _abort();
 }
 $125 = __ZNK6vision5Image6heightEv($1) | 0;
 if (($125 | 0) != (__ZNK6vision5Image6heightEv($3) | 0)) {
  $133 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 27591) | 0, 26748) | 0, 39072) | 0, 93) | 0, 39079) | 0, 27641) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $133 + (HEAP32[(HEAP32[$133 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $138 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $142 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$138 >> 2] | 0) + 28 >> 2] & 127]($138, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($133, $142) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($133) | 0;
  _abort();
 }
 $143 = __ZNK6vision5Image5widthEv($2) | 0;
 if (($143 | 0) != (__ZNK6vision5Image5widthEv($3) | 0)) {
  $151 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 27674) | 0, 26748) | 0, 39072) | 0, 94) | 0, 39079) | 0, 27559) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $151 + (HEAP32[(HEAP32[$151 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $156 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $160 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$156 >> 2] | 0) + 28 >> 2] & 127]($156, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($151, $160) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($151) | 0;
  _abort();
 }
 $161 = __ZNK6vision5Image6heightEv($2) | 0;
 if (($161 | 0) != (__ZNK6vision5Image6heightEv($3) | 0)) {
  $169 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 27724) | 0, 26748) | 0, 39072) | 0, 95) | 0, 39079) | 0, 27641) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $169 + (HEAP32[(HEAP32[$169 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $174 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $178 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$174 >> 2] | 0) + 28 >> 2] & 127]($174, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($169, $178) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($169) | 0;
  _abort();
 }
 $$041 = 0;
 while (1) {
  if ($$041 >>> 0 >= (__ZNK6vision5Image6heightEv($2) | 0) >>> 0) break;
  $181 = __ZN6vision5Image3getIfEEPT_m($1, $$041) | 0;
  $182 = __ZNK6vision5Image3getIfEEPKT_m($2, $$041) | 0;
  $183 = __ZNK6vision5Image3getIfEEPKT_m($3, $$041) | 0;
  $$0 = 0;
  while (1) {
   if ($$0 >>> 0 >= (__ZNK6vision5Image5widthEv($2) | 0) >>> 0) break;
   HEAPF32[$181 + ($$0 << 2) >> 2] = +HEAPF32[$182 + ($$0 << 2) >> 2] - +HEAPF32[$183 + ($$0 << 2) >> 2];
   $$0 = $$0 + 1 | 0;
  }
  $$041 = $$041 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function ___intscan($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0154215 = 0, $$0157 = 0, $$0159 = 0, $$1155184 = 0, $$1158 = 0, $$1160 = 0, $$1160170 = 0, $$1165 = 0, $$1165168 = 0, $$1165169 = 0, $$2156202 = 0, $$3162208 = 0, $$4163$lcssa = 0, $$6$lcssa = 0, $$7190 = 0, $$8 = 0, $$pre$phi237Z2D = 0, $$pre$phi239Z2D = 0, $104 = 0, $112 = 0, $128 = 0, $130 = 0, $131 = 0, $135 = 0, $136 = 0, $144 = 0, $145 = 0, $150 = 0, $151 = 0, $154 = 0, $156 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $165 = 0, $166 = 0, $167 = 0, $175 = 0, $185 = 0, $186 = 0, $190 = 0, $191 = 0, $199 = 0, $20 = 0, $200 = 0, $206 = 0, $207 = 0, $209 = 0, $21 = 0, $211 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $225 = 0, $226 = 0, $227 = 0, $235 = 0, $243 = 0, $251 = 0, $255 = 0, $265 = 0, $267 = 0, $276 = 0, $277 = 0, $28 = 0, $284 = 0, $286 = 0, $289 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $32 = 0, $40 = 0, $42 = 0, $50 = 0, $54 = 0, $6 = 0, $68 = 0, $7 = 0, $70 = 0, $74 = 0, $75 = 0, $8 = 0, $83 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $93 = 0, $94 = 0, $96 = 0, $spec$select166 = 0, label = 0;
 L1 : do if ($1 >>> 0 > 36) {
  $6 = ___errno_location() | 0;
  HEAP32[$6 >> 2] = 28;
  $291 = 0;
  $292 = 0;
 } else {
  $7 = $0 + 4 | 0;
  $8 = $0 + 104 | 0;
  do {
   $9 = HEAP32[$7 >> 2] | 0;
   if ($9 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
    HEAP32[$7 >> 2] = $9 + 1;
    $16 = HEAPU8[$9 >> 0] | 0;
   } else $16 = ___shgetc($0) | 0;
  } while ((_isspace($16) | 0) != 0);
  L11 : do switch ($16 | 0) {
  case 43:
  case 45:
   {
    $20 = (($16 | 0) == 45) << 31 >> 31;
    $21 = HEAP32[$7 >> 2] | 0;
    if ($21 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
     HEAP32[$7 >> 2] = $21 + 1;
     $$0157 = $20;
     $$0159 = HEAPU8[$21 >> 0] | 0;
     break L11;
    } else {
     $$0157 = $20;
     $$0159 = ___shgetc($0) | 0;
     break L11;
    }
    break;
   }
  default:
   {
    $$0157 = 0;
    $$0159 = $16;
   }
  } while (0);
  $28 = ($1 | 0) == 0;
  do if (($1 | 16 | 0) == 16 & ($$0159 | 0) == 48) {
   $32 = HEAP32[$7 >> 2] | 0;
   if ($32 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
    HEAP32[$7 >> 2] = $32 + 1;
    $40 = HEAPU8[$32 >> 0] | 0;
   } else $40 = ___shgetc($0) | 0;
   if (($40 | 32 | 0) != 120) if ($28) {
    $$1160170 = $40;
    $$1165168 = 8;
    label = 47;
    break;
   } else {
    $$1160 = $40;
    $$1165 = $1;
    label = 32;
    break;
   }
   $42 = HEAP32[$7 >> 2] | 0;
   if ($42 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
    HEAP32[$7 >> 2] = $42 + 1;
    $50 = HEAPU8[$42 >> 0] | 0;
   } else $50 = ___shgetc($0) | 0;
   if ((HEAPU8[5937 + $50 >> 0] | 0) > 15) {
    $54 = (HEAP32[$8 >> 2] | 0) == 0;
    if (!$54) HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
    if (!$2) {
     ___shlim($0, 0, 0);
     $291 = 0;
     $292 = 0;
     break L1;
    }
    if ($54) {
     $291 = 0;
     $292 = 0;
     break L1;
    }
    HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
    $291 = 0;
    $292 = 0;
    break L1;
   } else {
    $$1160170 = $50;
    $$1165168 = 16;
    label = 47;
   }
  } else {
   $spec$select166 = $28 ? 10 : $1;
   if ($spec$select166 >>> 0 > (HEAPU8[5937 + $$0159 >> 0] | 0) >>> 0) {
    $$1160 = $$0159;
    $$1165 = $spec$select166;
    label = 32;
   } else {
    if (HEAP32[$8 >> 2] | 0) HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
    ___shlim($0, 0, 0);
    $68 = ___errno_location() | 0;
    HEAP32[$68 >> 2] = 28;
    $291 = 0;
    $292 = 0;
    break L1;
   }
  } while (0);
  L43 : do if ((label | 0) == 32) if (($$1165 | 0) == 10) {
   $70 = $$1160 + -48 | 0;
   if ($70 >>> 0 < 10) {
    $$0154215 = 0;
    $74 = $70;
    do {
     $$0154215 = ($$0154215 * 10 | 0) + $74 | 0;
     $75 = HEAP32[$7 >> 2] | 0;
     if ($75 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
      HEAP32[$7 >> 2] = $75 + 1;
      $83 = HEAPU8[$75 >> 0] | 0;
     } else $83 = ___shgetc($0) | 0;
     $74 = $83 + -48 | 0;
    } while ($74 >>> 0 < 10 & $$0154215 >>> 0 < 429496729);
    if ($74 >>> 0 < 10) {
     $$3162208 = $83;
     $88 = $$0154215;
     $89 = 0;
     $93 = $74;
     while (1) {
      $90 = ___muldi3($88 | 0, $89 | 0, 10, 0) | 0;
      $91 = getTempRet0() | 0;
      $94 = (($93 | 0) < 0) << 31 >> 31;
      $96 = ~$94;
      if ($91 >>> 0 > $96 >>> 0 | ($91 | 0) == ($96 | 0) & $90 >>> 0 > ~$93 >>> 0) {
       $$1165169 = 10;
       $$8 = $$3162208;
       $293 = $88;
       $294 = $89;
       label = 76;
       break L43;
      }
      $88 = _i64Add($90 | 0, $91 | 0, $93 | 0, $94 | 0) | 0;
      $89 = getTempRet0() | 0;
      $104 = HEAP32[$7 >> 2] | 0;
      if ($104 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
       HEAP32[$7 >> 2] = $104 + 1;
       $112 = HEAPU8[$104 >> 0] | 0;
      } else $112 = ___shgetc($0) | 0;
      $93 = $112 + -48 | 0;
      if (!($93 >>> 0 < 10 & ($89 >>> 0 < 429496729 | ($89 | 0) == 429496729 & $88 >>> 0 < 2576980378))) break; else $$3162208 = $112;
     }
     if ($93 >>> 0 > 9) {
      $$1158 = $$0157;
      $265 = $89;
      $267 = $88;
     } else {
      $$1165169 = 10;
      $$8 = $112;
      $293 = $88;
      $294 = $89;
      label = 76;
     }
    } else {
     $$1158 = $$0157;
     $265 = 0;
     $267 = $$0154215;
    }
   } else {
    $$1158 = $$0157;
    $265 = 0;
    $267 = 0;
   }
  } else {
   $$1160170 = $$1160;
   $$1165168 = $$1165;
   label = 47;
  } while (0);
  L63 : do if ((label | 0) == 47) {
   if (!($$1165168 + -1 & $$1165168)) {
    $128 = HEAP8[50731 + (($$1165168 * 23 | 0) >>> 5 & 7) >> 0] | 0;
    $130 = HEAP8[5937 + $$1160170 >> 0] | 0;
    $131 = $130 & 255;
    if ($$1165168 >>> 0 > $131 >>> 0) {
     $$1155184 = 0;
     $135 = $131;
     do {
      $$1155184 = $135 | $$1155184 << $128;
      $136 = HEAP32[$7 >> 2] | 0;
      if ($136 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
       HEAP32[$7 >> 2] = $136 + 1;
       $144 = HEAPU8[$136 >> 0] | 0;
      } else $144 = ___shgetc($0) | 0;
      $145 = HEAP8[5937 + $144 >> 0] | 0;
      $135 = $145 & 255;
     } while ($$1155184 >>> 0 < 134217728 & $$1165168 >>> 0 > $135 >>> 0);
     $$4163$lcssa = $144;
     $$pre$phi237Z2D = $135;
     $154 = 0;
     $156 = $$1155184;
     $295 = $145;
    } else {
     $$4163$lcssa = $$1160170;
     $$pre$phi237Z2D = $131;
     $154 = 0;
     $156 = 0;
     $295 = $130;
    }
    $150 = _bitshift64Lshr(-1, -1, $128 | 0) | 0;
    $151 = getTempRet0() | 0;
    if ($$1165168 >>> 0 <= $$pre$phi237Z2D >>> 0 | ($151 >>> 0 < $154 >>> 0 | ($151 | 0) == ($154 | 0) & $150 >>> 0 < $156 >>> 0)) {
     $$1165169 = $$1165168;
     $$8 = $$4163$lcssa;
     $293 = $156;
     $294 = $154;
     label = 76;
     break;
    }
    $160 = $156;
    $161 = $154;
    $165 = $295;
    while (1) {
     $162 = _bitshift64Shl($160 | 0, $161 | 0, $128 | 0) | 0;
     $163 = getTempRet0() | 0;
     $166 = $162 | $165 & 255;
     $167 = HEAP32[$7 >> 2] | 0;
     if ($167 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
      HEAP32[$7 >> 2] = $167 + 1;
      $175 = HEAPU8[$167 >> 0] | 0;
     } else $175 = ___shgetc($0) | 0;
     $165 = HEAP8[5937 + $175 >> 0] | 0;
     if ($$1165168 >>> 0 <= ($165 & 255) >>> 0 | ($163 >>> 0 > $151 >>> 0 | ($163 | 0) == ($151 | 0) & $166 >>> 0 > $150 >>> 0)) {
      $$1165169 = $$1165168;
      $$8 = $175;
      $293 = $166;
      $294 = $163;
      label = 76;
      break L63;
     } else {
      $160 = $166;
      $161 = $163;
     }
    }
   }
   $185 = HEAP8[5937 + $$1160170 >> 0] | 0;
   $186 = $185 & 255;
   if ($$1165168 >>> 0 > $186 >>> 0) {
    $$2156202 = 0;
    $190 = $186;
    do {
     $$2156202 = $190 + (Math_imul($$2156202, $$1165168) | 0) | 0;
     $191 = HEAP32[$7 >> 2] | 0;
     if ($191 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
      HEAP32[$7 >> 2] = $191 + 1;
      $199 = HEAPU8[$191 >> 0] | 0;
     } else $199 = ___shgetc($0) | 0;
     $200 = HEAP8[5937 + $199 >> 0] | 0;
     $190 = $200 & 255;
    } while ($$2156202 >>> 0 < 119304647 & $$1165168 >>> 0 > $190 >>> 0);
    $$6$lcssa = $199;
    $$pre$phi239Z2D = $190;
    $296 = $200;
    $297 = $$2156202;
    $298 = 0;
   } else {
    $$6$lcssa = $$1160170;
    $$pre$phi239Z2D = $186;
    $296 = $185;
    $297 = 0;
    $298 = 0;
   }
   if ($$1165168 >>> 0 > $$pre$phi239Z2D >>> 0) {
    $206 = ___udivdi3(-1, -1, $$1165168 | 0, 0) | 0;
    $207 = getTempRet0() | 0;
    $$7190 = $$6$lcssa;
    $209 = $298;
    $211 = $297;
    $218 = $296;
    while (1) {
     if ($209 >>> 0 > $207 >>> 0 | ($209 | 0) == ($207 | 0) & $211 >>> 0 > $206 >>> 0) {
      $$1165169 = $$1165168;
      $$8 = $$7190;
      $293 = $211;
      $294 = $209;
      label = 76;
      break L63;
     }
     $215 = ___muldi3($211 | 0, $209 | 0, $$1165168 | 0, 0) | 0;
     $216 = getTempRet0() | 0;
     $217 = $218 & 255;
     if ($216 >>> 0 > 4294967295 | ($216 | 0) == -1 & $215 >>> 0 > ~$217 >>> 0) {
      $$1165169 = $$1165168;
      $$8 = $$7190;
      $293 = $211;
      $294 = $209;
      label = 76;
      break L63;
     }
     $225 = _i64Add($215 | 0, $216 | 0, $217 | 0, 0) | 0;
     $226 = getTempRet0() | 0;
     $227 = HEAP32[$7 >> 2] | 0;
     if ($227 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
      HEAP32[$7 >> 2] = $227 + 1;
      $235 = HEAPU8[$227 >> 0] | 0;
     } else $235 = ___shgetc($0) | 0;
     $218 = HEAP8[5937 + $235 >> 0] | 0;
     if ($$1165168 >>> 0 <= ($218 & 255) >>> 0) {
      $$1165169 = $$1165168;
      $$8 = $235;
      $293 = $225;
      $294 = $226;
      label = 76;
      break;
     } else {
      $$7190 = $235;
      $209 = $226;
      $211 = $225;
     }
    }
   } else {
    $$1165169 = $$1165168;
    $$8 = $$6$lcssa;
    $293 = $297;
    $294 = $298;
    label = 76;
   }
  } while (0);
  if ((label | 0) == 76) if ($$1165169 >>> 0 > (HEAPU8[5937 + $$8 >> 0] | 0) >>> 0) {
   do {
    $243 = HEAP32[$7 >> 2] | 0;
    if ($243 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
     HEAP32[$7 >> 2] = $243 + 1;
     $251 = HEAPU8[$243 >> 0] | 0;
    } else $251 = ___shgetc($0) | 0;
   } while ($$1165169 >>> 0 > (HEAPU8[5937 + $251 >> 0] | 0) >>> 0);
   $255 = ___errno_location() | 0;
   HEAP32[$255 >> 2] = 68;
   $$1158 = ($3 & 1 | 0) == 0 & 0 == 0 ? $$0157 : 0;
   $265 = $4;
   $267 = $3;
  } else {
   $$1158 = $$0157;
   $265 = $294;
   $267 = $293;
  }
  if (HEAP32[$8 >> 2] | 0) HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
  if (!($265 >>> 0 < $4 >>> 0 | ($265 | 0) == ($4 | 0) & $267 >>> 0 < $3 >>> 0)) {
   if (!(($3 & 1 | 0) != 0 | 0 != 0 | ($$1158 | 0) != 0)) {
    $276 = ___errno_location() | 0;
    HEAP32[$276 >> 2] = 68;
    $277 = _i64Add($3 | 0, $4 | 0, -1, -1) | 0;
    $291 = getTempRet0() | 0;
    $292 = $277;
    break;
   }
   if ($265 >>> 0 > $4 >>> 0 | ($265 | 0) == ($4 | 0) & $267 >>> 0 > $3 >>> 0) {
    $284 = ___errno_location() | 0;
    HEAP32[$284 >> 2] = 68;
    $291 = $4;
    $292 = $3;
    break;
   }
  }
  $286 = (($$1158 | 0) < 0) << 31 >> 31;
  $289 = _i64Subtract($267 ^ $$1158 | 0, $265 ^ $286 | 0, $$1158 | 0, $286 | 0) | 0;
  $291 = getTempRet0() | 0;
  $292 = $289;
 } while (0);
 setTempRet0($291 | 0);
 return $292 | 0;
}

function _ar2GetBestMatchingSubFine($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0231 = 0, $$0232 = 0, $$0239 = 0, $$0251 = 0, $$0257 = 0, $$0263 = 0, $$0282 = 0, $$1 = 0, $$10 = 0, $$10249 = 0, $$10273 = 0, $$10292 = 0, $$11 = 0, $$11250 = 0, $$11274 = 0, $$11293 = 0, $$12 = 0, $$12275 = 0, $$12294 = 0, $$1233 = 0, $$1240 = 0, $$1252 = 0, $$1258 = 0, $$1264 = 0, $$1283 = 0, $$13 = 0, $$13276 = 0, $$13295 = 0, $$14 = 0, $$14277 = 0, $$14296 = 0, $$15 = 0, $$15278 = 0, $$15297 = 0, $$16 = 0, $$16279 = 0, $$16298 = 0, $$17 = 0, $$17280 = 0, $$17299 = 0, $$18 = 0, $$18281 = 0, $$18300 = 0, $$2 = 0, $$2234 = 0, $$2241 = 0, $$2253 = 0, $$2259 = 0, $$2265 = 0, $$2284 = 0, $$3 = 0, $$3235 = 0, $$3242 = 0, $$3254 = 0, $$3260 = 0, $$3266 = 0, $$3285 = 0, $$4 = 0, $$4236 = 0, $$4243 = 0, $$4255 = 0, $$4261 = 0, $$4267 = 0, $$4286 = 0, $$5 = 0, $$5237 = 0, $$5244 = 0, $$5256 = 0, $$5262 = 0, $$5268 = 0, $$5287 = 0, $$6 = 0, $$6238 = 0, $$6245 = 0, $$6269 = 0, $$6288 = 0, $$7 = 0, $$7246 = 0, $$7270 = 0, $$7289 = 0, $$8 = 0, $$8247 = 0, $$8271 = 0, $$8290 = 0, $$9 = 0, $$9248 = 0, $$9272 = 0, $$9291 = 0, $101 = 0, $102 = 0, $108 = 0, $11 = 0, $110 = 0, $123 = 0, $13 = 0, $139 = 0, $140 = 0, $141 = 0, $146 = 0, $147 = 0, $153 = 0, $155 = 0, $16 = 0, $169 = 0, $18 = 0, $183 = 0, $184 = 0, $185 = 0, $190 = 0, $191 = 0, $197 = 0, $199 = 0, $204 = 0, $218 = 0, $219 = 0, $220 = 0, $225 = 0, $226 = 0, $232 = 0, $234 = 0, $238 = 0, $249 = 0, $252 = 0, $259 = 0, $26 = 0, $29 = 0, $33 = 0, $49 = 0, $50 = 0, $51 = 0, $56 = 0, $57 = 0, $63 = 0, $65 = 0, $78 = 0, $8 = 0, $94 = 0, $95 = 0, $96 = 0, $storemerge = 0;
 $8 = HEAP32[$3 + 24 >> 2] | 0;
 L1 : do switch ($2 | 0) {
 case 5:
 case 12:
 case 13:
 case 14:
  {
   $11 = 0 - (HEAP32[$3 + 8 >> 2] | 0) | 0;
   $13 = HEAP32[$3 + 12 >> 2] | 0;
   $16 = 0 - (HEAP32[$3 + 16 >> 2] | 0) | 0;
   $18 = HEAP32[$3 + 20 >> 2] | 0;
   $26 = $1 << 1;
   $$0231 = $8;
   $$0232 = $0 + (($11 << 1) + $4 + (Math_imul(($16 << 1) + $5 | 0, $1) | 0)) | 0;
   $$0239 = 0;
   $$0251 = $16;
   $$0263 = 0;
   $$0282 = 0;
   while (1) {
    if (($$0251 | 0) > ($18 | 0)) {
     $$18 = $$0239;
     $$18281 = $$0263;
     $$18300 = $$0282;
     break L1;
    }
    $$0257 = $11;
    $$1 = $$0231;
    $$1233 = $$0232;
    $$1240 = $$0239;
    $$1264 = $$0263;
    $$1283 = $$0282;
    while (1) {
     if (($$0257 | 0) > ($13 | 0)) break;
     $29 = HEAP16[$$1 >> 1] | 0;
     if ($29 << 16 >> 16 == 4096) {
      $$2241 = $$1240;
      $$2265 = $$1264;
      $$2284 = $$1283;
     } else {
      $33 = HEAPU8[$$1233 >> 0] | 0;
      $$2241 = $$1240 + $33 | 0;
      $$2265 = (Math_imul($33, $33) | 0) + $$1264 | 0;
      $$2284 = (Math_imul($33, $29 & 65535) | 0) + $$1283 | 0;
     }
     $$0257 = $$0257 + 1 | 0;
     $$1 = $$1 + 2 | 0;
     $$1233 = $$1233 + 2 | 0;
     $$1240 = $$2241;
     $$1264 = $$2265;
     $$1283 = $$2284;
    }
    $$0231 = $$1;
    $$0232 = $$0232 + $26 | 0;
    $$0239 = $$1240;
    $$0251 = $$0251 + 1 | 0;
    $$0263 = $$1264;
    $$0282 = $$1283;
   }
   break;
  }
 default:
  {
   if ($2 >>> 0 < 2) {
    $49 = HEAP32[$3 + 20 >> 2] | 0;
    $50 = $3 + 8 | 0;
    $51 = $3 + 12 | 0;
    $$1252 = 0 - (HEAP32[$3 + 16 >> 2] | 0) | 0;
    $$2 = $8;
    $$3242 = 0;
    $$3266 = 0;
    $$3285 = 0;
    while (1) {
     if (($$1252 | 0) > ($49 | 0)) {
      $$18 = $$3242;
      $$18281 = $$3266;
      $$18300 = $$3285;
      break L1;
     }
     $56 = (Math_imul(($$1252 << 1) + $5 | 0, $1) | 0) + $4 | 0;
     $57 = HEAP32[$50 >> 2] | 0;
     $63 = HEAP32[$51 >> 2] | 0;
     $$1258 = 0 - $57 | 0;
     $$2234 = $0 + (($56 - ($57 << 1) | 0) * 3 | 0) | 0;
     $$3 = $$2;
     $$4243 = $$3242;
     $$4267 = $$3266;
     $$4286 = $$3285;
     while (1) {
      if (($$1258 | 0) > ($63 | 0)) break;
      $65 = HEAP16[$$3 >> 1] | 0;
      if ($65 << 16 >> 16 == 4096) {
       $$5244 = $$4243;
       $$5268 = $$4267;
       $$5287 = $$4286;
      } else {
       $78 = (((HEAPU8[$$2234 + 1 >> 0] | 0) + (HEAPU8[$$2234 >> 0] | 0) + (HEAPU8[$$2234 + 2 >> 0] | 0) | 0) >>> 0) / 3 | 0;
       $$5244 = $78 + $$4243 | 0;
       $$5268 = (Math_imul($78, $78) | 0) + $$4267 | 0;
       $$5287 = (Math_imul($78, $65 & 65535) | 0) + $$4286 | 0;
      }
      $$1258 = $$1258 + 1 | 0;
      $$2234 = $$2234 + 6 | 0;
      $$3 = $$3 + 2 | 0;
      $$4243 = $$5244;
      $$4267 = $$5268;
      $$4286 = $$5287;
     }
     $$1252 = $$1252 + 1 | 0;
     $$2 = $$3;
     $$3242 = $$4243;
     $$3266 = $$4267;
     $$3285 = $$4286;
    }
   }
   if (($2 | 1 | 0) == 3) {
    $94 = HEAP32[$3 + 20 >> 2] | 0;
    $95 = $3 + 8 | 0;
    $96 = $3 + 12 | 0;
    $$2253 = 0 - (HEAP32[$3 + 16 >> 2] | 0) | 0;
    $$4 = $8;
    $$6245 = 0;
    $$6269 = 0;
    $$6288 = 0;
    while (1) {
     if (($$2253 | 0) > ($94 | 0)) {
      $$18 = $$6245;
      $$18281 = $$6269;
      $$18300 = $$6288;
      break L1;
     }
     $101 = (Math_imul(($$2253 << 1) + $5 | 0, $1) | 0) + $4 | 0;
     $102 = HEAP32[$95 >> 2] | 0;
     $108 = HEAP32[$96 >> 2] | 0;
     $$2259 = 0 - $102 | 0;
     $$3235 = $0 + ($101 - ($102 << 1) << 2) | 0;
     $$5 = $$4;
     $$7246 = $$6245;
     $$7270 = $$6269;
     $$7289 = $$6288;
     while (1) {
      if (($$2259 | 0) > ($108 | 0)) break;
      $110 = HEAP16[$$5 >> 1] | 0;
      if ($110 << 16 >> 16 == 4096) {
       $$8247 = $$7246;
       $$8271 = $$7270;
       $$8290 = $$7289;
      } else {
       $123 = (((HEAPU8[$$3235 + 1 >> 0] | 0) + (HEAPU8[$$3235 >> 0] | 0) + (HEAPU8[$$3235 + 2 >> 0] | 0) | 0) >>> 0) / 3 | 0;
       $$8247 = $123 + $$7246 | 0;
       $$8271 = (Math_imul($123, $123) | 0) + $$7270 | 0;
       $$8290 = (Math_imul($123, $110 & 65535) | 0) + $$7289 | 0;
      }
      $$2259 = $$2259 + 1 | 0;
      $$3235 = $$3235 + 8 | 0;
      $$5 = $$5 + 2 | 0;
      $$7246 = $$8247;
      $$7270 = $$8271;
      $$7289 = $$8290;
     }
     $$2253 = $$2253 + 1 | 0;
     $$4 = $$5;
     $$6245 = $$7246;
     $$6269 = $$7270;
     $$6288 = $$7289;
    }
   }
   if (($2 | 2 | 0) == 6) {
    $139 = HEAP32[$3 + 20 >> 2] | 0;
    $140 = $3 + 8 | 0;
    $141 = $3 + 12 | 0;
    $$3254 = 0 - (HEAP32[$3 + 16 >> 2] | 0) | 0;
    $$6 = $8;
    $$9248 = 0;
    $$9272 = 0;
    $$9291 = 0;
    while (1) {
     if (($$3254 | 0) > ($139 | 0)) {
      $$18 = $$9248;
      $$18281 = $$9272;
      $$18300 = $$9291;
      break L1;
     }
     $146 = (Math_imul(($$3254 << 1) + $5 | 0, $1) | 0) + $4 | 0;
     $147 = HEAP32[$140 >> 2] | 0;
     $153 = HEAP32[$141 >> 2] | 0;
     $$10249 = $$9248;
     $$10273 = $$9272;
     $$10292 = $$9291;
     $$3260 = 0 - $147 | 0;
     $$4236 = $0 + ($146 - ($147 << 1) << 2) | 0;
     $$7 = $$6;
     while (1) {
      if (($$3260 | 0) > ($153 | 0)) break;
      $155 = HEAP16[$$7 >> 1] | 0;
      if ($155 << 16 >> 16 == 4096) {
       $$11250 = $$10249;
       $$11274 = $$10273;
       $$11293 = $$10292;
      } else {
       $169 = (((HEAPU8[$$4236 + 2 >> 0] | 0) + (HEAPU8[$$4236 + 1 >> 0] | 0) + (HEAPU8[$$4236 + 3 >> 0] | 0) | 0) >>> 0) / 3 | 0;
       $$11250 = $169 + $$10249 | 0;
       $$11274 = (Math_imul($169, $169) | 0) + $$10273 | 0;
       $$11293 = (Math_imul($169, $155 & 65535) | 0) + $$10292 | 0;
      }
      $$10249 = $$11250;
      $$10273 = $$11274;
      $$10292 = $$11293;
      $$3260 = $$3260 + 1 | 0;
      $$4236 = $$4236 + 8 | 0;
      $$7 = $$7 + 2 | 0;
     }
     $$3254 = $$3254 + 1 | 0;
     $$6 = $$7;
     $$9248 = $$10249;
     $$9272 = $$10273;
     $$9291 = $$10292;
    }
   }
   switch ($2 | 0) {
   case 7:
    {
     $183 = HEAP32[$3 + 20 >> 2] | 0;
     $184 = $3 + 8 | 0;
     $185 = $3 + 12 | 0;
     $$12 = 0;
     $$12275 = 0;
     $$12294 = 0;
     $$4255 = 0 - (HEAP32[$3 + 16 >> 2] | 0) | 0;
     $$8 = $8;
     while (1) {
      if (($$4255 | 0) > ($183 | 0)) {
       $$18 = $$12;
       $$18281 = $$12275;
       $$18300 = $$12294;
       break L1;
      }
      $190 = (Math_imul(($$4255 << 1) + $5 | 0, $1) | 0) + $4 | 0;
      $191 = HEAP32[$184 >> 2] | 0;
      $197 = HEAP32[$185 >> 2] | 0;
      $$13 = $$12;
      $$13276 = $$12275;
      $$13295 = $$12294;
      $$4261 = 0 - $191 | 0;
      $$5237 = $0 + ($190 - ($191 << 1) << 1) | 0;
      $$9 = $$8;
      while (1) {
       if (($$4261 | 0) > ($197 | 0)) break;
       $199 = HEAP16[$$9 >> 1] | 0;
       if ($199 << 16 >> 16 == 4096) {
        $$14 = $$13;
        $$14277 = $$13276;
        $$14296 = $$13295;
       } else {
        $204 = HEAPU8[$$5237 + 1 >> 0] | 0;
        $$14 = $$13 + $204 | 0;
        $$14277 = (Math_imul($204, $204) | 0) + $$13276 | 0;
        $$14296 = (Math_imul($204, $199 & 65535) | 0) + $$13295 | 0;
       }
       $$13 = $$14;
       $$13276 = $$14277;
       $$13295 = $$14296;
       $$4261 = $$4261 + 1 | 0;
       $$5237 = $$5237 + 4 | 0;
       $$9 = $$9 + 2 | 0;
      }
      $$12 = $$13;
      $$12275 = $$13276;
      $$12294 = $$13295;
      $$4255 = $$4255 + 1 | 0;
      $$8 = $$9;
     }
     break;
    }
   case 8:
    {
     $218 = HEAP32[$3 + 20 >> 2] | 0;
     $219 = $3 + 8 | 0;
     $220 = $3 + 12 | 0;
     $$10 = $8;
     $$15 = 0;
     $$15278 = 0;
     $$15297 = 0;
     $$5256 = 0 - (HEAP32[$3 + 16 >> 2] | 0) | 0;
     while (1) {
      if (($$5256 | 0) > ($218 | 0)) {
       $$18 = $$15;
       $$18281 = $$15278;
       $$18300 = $$15297;
       break L1;
      }
      $225 = (Math_imul(($$5256 << 1) + $5 | 0, $1) | 0) + $4 | 0;
      $226 = HEAP32[$219 >> 2] | 0;
      $232 = HEAP32[$220 >> 2] | 0;
      $$11 = $$10;
      $$16 = $$15;
      $$16279 = $$15278;
      $$16298 = $$15297;
      $$5262 = 0 - $226 | 0;
      $$6238 = $0 + ($225 - ($226 << 1) << 1) | 0;
      while (1) {
       if (($$5262 | 0) > ($232 | 0)) break;
       $234 = HEAP16[$$11 >> 1] | 0;
       if ($234 << 16 >> 16 == 4096) {
        $$17 = $$16;
        $$17280 = $$16279;
        $$17299 = $$16298;
       } else {
        $238 = HEAPU8[$$6238 >> 0] | 0;
        $$17 = $$16 + $238 | 0;
        $$17280 = (Math_imul($238, $238) | 0) + $$16279 | 0;
        $$17299 = (Math_imul($238, $234 & 65535) | 0) + $$16298 | 0;
       }
       $$11 = $$11 + 2 | 0;
       $$16 = $$17;
       $$16279 = $$17280;
       $$16298 = $$17299;
       $$5262 = $$5262 + 1 | 0;
       $$6238 = $$6238 + 4 | 0;
      }
      $$10 = $$11;
      $$15 = $$16;
      $$15278 = $$16279;
      $$15297 = $$16298;
      $$5256 = $$5256 + 1 | 0;
     }
     break;
    }
   default:
    {
     $$18 = 0;
     $$18281 = 0;
     $$18300 = 0;
     break L1;
    }
   }
  }
 } while (0);
 $249 = HEAP32[$3 + 36 >> 2] | 0;
 $252 = $$18281 - ((Math_imul($$18, $$18) | 0) / ($249 | 0) | 0) | 0;
 if (!$252) $storemerge = 0; else {
  $259 = ($$18300 - ((Math_imul(HEAP32[$3 + 32 >> 2] | 0, $$18) | 0) / ($249 | 0) | 0) | 0) * 100 | 0;
  $storemerge = ((($259 | 0) / (HEAP32[$3 + 28 >> 2] | 0) | 0) * 100 | 0) / (~~+Math_sqrt(+(+($252 | 0))) | 0) | 0;
 }
 HEAP32[$6 >> 2] = $storemerge;
 return;
}

function __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i51 = 0, $$0$i$i$i59 = 0, $$0$i$i$i67 = 0, $$0$i$i$i75 = 0, $$0$i$i$i83 = 0, $$0$i$i$i91 = 0, $$0$i$i$i99 = 0, $$pre$phi102Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $101 = 0, $104 = 0, $108 = 0, $11 = 0, $116 = 0, $12 = 0, $120 = 0, $123 = 0, $127 = 0, $135 = 0, $139 = 0, $143 = 0, $146 = 0, $150 = 0, $158 = 0, $16 = 0, $161 = 0, $165 = 0, $20 = 0, $23 = 0, $27 = 0, $35 = 0, $39 = 0, $42 = 0, $46 = 0, $54 = 0, $58 = 0, $62 = 0, $65 = 0, $69 = 0, $77 = 0, $80 = 0, $84 = 0, $93 = 0, $97 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($0) {
  $12 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66744) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 44 >> 2] & 255]($10, $12);
   $16 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $16;
   HEAP8[$3 + 1 >> 0] = $16 >> 8;
   HEAP8[$3 + 2 >> 0] = $16 >> 16;
   HEAP8[$3 + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 255]($11, $12);
   $20 = $8 + 11 | 0;
   if ((HEAP8[$20 >> 0] | 0) < 0) {
    $23 = HEAP32[$8 >> 2] | 0;
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($23, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    if ((HEAP8[$20 >> 0] | 0) < 0) {
     $27 = $8 + 8 | 0;
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$8 >> 2] | 0, HEAP32[$27 >> 2] & 2147483647);
     HEAP32[$27 >> 2] = 0;
    }
   } else {
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
    HEAP8[$20 >> 0] = 0;
   };
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   $$pre$phiZ2D = $12;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 40 >> 2] & 255]($10, $12);
   $35 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $35;
   HEAP8[$3 + 1 >> 0] = $35 >> 8;
   HEAP8[$3 + 2 >> 0] = $35 >> 16;
   HEAP8[$3 + 3 >> 0] = $35 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 255]($11, $12);
   $39 = $8 + 11 | 0;
   if ((HEAP8[$39 >> 0] | 0) < 0) {
    $42 = HEAP32[$8 >> 2] | 0;
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($42, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    if ((HEAP8[$39 >> 0] | 0) < 0) {
     $46 = $8 + 8 | 0;
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$8 >> 2] | 0, HEAP32[$46 >> 2] & 2147483647);
     HEAP32[$46 >> 2] = 0;
    }
   } else {
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
    HEAP8[$39 >> 0] = 0;
   };
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i51 = 0;
   while (1) {
    if (($$0$i$i$i51 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i51 << 2) >> 2] = 0;
    $$0$i$i$i51 = $$0$i$i$i51 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   $$pre$phiZ2D = $12;
  }
  $54 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP8[$4 >> 0] = $54;
  $58 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  HEAP8[$5 >> 0] = $58;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 20 >> 2] & 255]($11, $12);
  $62 = $6 + 11 | 0;
  if ((HEAP8[$62 >> 0] | 0) < 0) {
   $65 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($65, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   if ((HEAP8[$62 >> 0] | 0) < 0) {
    $69 = $6 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$6 >> 2] | 0, HEAP32[$69 >> 2] & 2147483647);
    HEAP32[$69 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$62 >> 0] = 0;
  };
  HEAP32[$6 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i59 = 0;
  while (1) {
   if (($$0$i$i$i59 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i59 << 2) >> 2] = 0;
   $$0$i$i$i59 = $$0$i$i$i59 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 24 >> 2] & 255]($11, $12);
  $77 = $7 + 11 | 0;
  if ((HEAP8[$77 >> 0] | 0) < 0) {
   $80 = HEAP32[$7 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($80, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   if ((HEAP8[$77 >> 0] | 0) < 0) {
    $84 = $7 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$7 >> 2] | 0, HEAP32[$84 >> 2] & 2147483647);
    HEAP32[$84 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7, $10);
   HEAP8[$77 >> 0] = 0;
  };
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i67 = 0;
  while (1) {
   if (($$0$i$i$i67 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i67 << 2) >> 2] = 0;
   $$0$i$i$i67 = $$0$i$i$i67 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $93 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66736) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 44 >> 2] & 255]($10, $93);
   $97 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $97;
   HEAP8[$3 + 1 >> 0] = $97 >> 8;
   HEAP8[$3 + 2 >> 0] = $97 >> 16;
   HEAP8[$3 + 3 >> 0] = $97 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 32 >> 2] & 255]($11, $93);
   $101 = $8 + 11 | 0;
   if ((HEAP8[$101 >> 0] | 0) < 0) {
    $104 = HEAP32[$8 >> 2] | 0;
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($104, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    if ((HEAP8[$101 >> 0] | 0) < 0) {
     $108 = $8 + 8 | 0;
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$8 >> 2] | 0, HEAP32[$108 >> 2] & 2147483647);
     HEAP32[$108 >> 2] = 0;
    }
   } else {
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
    HEAP8[$101 >> 0] = 0;
   };
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i75 = 0;
   while (1) {
    if (($$0$i$i$i75 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i75 << 2) >> 2] = 0;
    $$0$i$i$i75 = $$0$i$i$i75 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   $$pre$phi102Z2D = $93;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 40 >> 2] & 255]($10, $93);
   $116 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $116;
   HEAP8[$3 + 1 >> 0] = $116 >> 8;
   HEAP8[$3 + 2 >> 0] = $116 >> 16;
   HEAP8[$3 + 3 >> 0] = $116 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 28 >> 2] & 255]($11, $93);
   $120 = $8 + 11 | 0;
   if ((HEAP8[$120 >> 0] | 0) < 0) {
    $123 = HEAP32[$8 >> 2] | 0;
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($123, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    if ((HEAP8[$120 >> 0] | 0) < 0) {
     $127 = $8 + 8 | 0;
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$8 >> 2] | 0, HEAP32[$127 >> 2] & 2147483647);
     HEAP32[$127 >> 2] = 0;
    }
   } else {
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
    HEAP8[$120 >> 0] = 0;
   };
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i83 = 0;
   while (1) {
    if (($$0$i$i$i83 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i83 << 2) >> 2] = 0;
    $$0$i$i$i83 = $$0$i$i$i83 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   $$pre$phi102Z2D = $93;
  }
  $135 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 12 >> 2] & 127]($93) | 0;
  HEAP8[$4 >> 0] = $135;
  $139 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 16 >> 2] & 127]($93) | 0;
  HEAP8[$5 >> 0] = $139;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phi102Z2D >> 2] | 0) + 20 >> 2] & 255]($11, $93);
  $143 = $6 + 11 | 0;
  if ((HEAP8[$143 >> 0] | 0) < 0) {
   $146 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($146, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   if ((HEAP8[$143 >> 0] | 0) < 0) {
    $150 = $6 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$6 >> 2] | 0, HEAP32[$150 >> 2] & 2147483647);
    HEAP32[$150 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$143 >> 0] = 0;
  };
  HEAP32[$6 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i91 = 0;
  while (1) {
   if (($$0$i$i$i91 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i91 << 2) >> 2] = 0;
   $$0$i$i$i91 = $$0$i$i$i91 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phi102Z2D >> 2] | 0) + 24 >> 2] & 255]($11, $93);
  $158 = $7 + 11 | 0;
  if ((HEAP8[$158 >> 0] | 0) < 0) {
   $161 = HEAP32[$7 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($161, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   if ((HEAP8[$158 >> 0] | 0) < 0) {
    $165 = $7 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$7 >> 2] | 0, HEAP32[$165 >> 2] & 2147483647);
    HEAP32[$165 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7, $10);
   HEAP8[$158 >> 0] = 0;
  };
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i99 = 0;
  while (1) {
   if (($$0$i$i$i99 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i99 << 2) >> 2] = 0;
   $$0$i$i$i99 = $$0$i$i$i99 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 36 >> 2] & 127]($93) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function _consume_markers($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0160168$i = 0, $$0169$i = 0, $$1161166$i = 0, $$1167$i = 0, $$pre183$i = 0, $1 = 0, $10 = 0, $103 = 0, $105 = 0, $108 = 0, $11 = 0, $111 = 0, $113 = 0, $116 = 0, $119 = 0, $12 = 0, $121 = 0, $125 = 0, $129 = 0, $13 = 0, $131 = 0, $135 = 0, $137 = 0, $14 = 0, $141 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0, $160 = 0, $163 = 0, $17 = 0, $174 = 0, $177 = 0, $18 = 0, $180 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $38 = 0, $43 = 0, $45 = 0, $50 = 0, $52 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $65 = 0, $67 = 0, $7 = 0, $71 = 0, $72 = 0, $74 = 0, $75 = 0, $8 = 0, $80 = 0, $88 = 0, $9 = 0, label = 0;
 $1 = $0 + 460 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $2 + 20 | 0;
 if (HEAP32[$3 >> 2] | 0) {
  $$0 = 2;
  return $$0 | 0;
 }
 $6 = $0 + 464 | 0;
 $7 = $2 + 24 | 0;
 $8 = $0 + 340 | 0;
 $9 = $2 + 16 | 0;
 $10 = $0 + 32 | 0;
 $11 = $0 + 212 | 0;
 $12 = $0 + 28 | 0;
 $13 = $0 + 36 | 0;
 $14 = $0 + 316 | 0;
 $15 = $0 + 320 | 0;
 $16 = $0 + 216 | 0;
 $17 = $0 + 220 | 0;
 $18 = $0 + 224 | 0;
 $19 = $0 + 324 | 0;
 $20 = $0 + 328 | 0;
 $21 = $0 + 428 | 0;
 $22 = $0 + 432 | 0;
 $23 = $0 + 436 | 0;
 $24 = $0 + 416 | 0;
 $25 = $0 + 332 | 0;
 $26 = $0 + 412 | 0;
 $27 = $0 + 420 | 0;
 $28 = $0 + 424 | 0;
 L4 : while (1) {
  $32 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 4 >> 2] & 127]($0) | 0;
  switch ($32 | 0) {
  case 2:
   {
    label = 58;
    break L4;
    break;
   }
  case 1:
   break;
  default:
   {
    $$0 = $32;
    label = 63;
    break L4;
   }
  }
  L7 : do switch (HEAP32[$7 >> 2] | 0) {
  case 0:
   {
    if (!(HEAP32[$9 >> 2] | 0)) {
     $163 = HEAP32[$0 >> 2] | 0;
     HEAP32[$163 + 20 >> 2] = 36;
     FUNCTION_TABLE_vi[HEAP32[$163 >> 2] & 255]($0);
    }
    if (HEAP32[$8 >> 2] | 0) {
     label = 57;
     break L4;
    }
    break;
   }
  case 1:
   {
    if ((HEAP32[$10 >> 2] | 0) <= 65500 ? (HEAP32[$12 >> 2] | 0) <= 65500 : 0) {} else {
     $38 = HEAP32[$0 >> 2] | 0;
     HEAP32[$38 + 20 >> 2] = 42;
     HEAP32[$38 + 24 >> 2] = 65500;
     FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
    }
    $43 = HEAP32[$11 >> 2] | 0;
    if (($43 + -8 | 0) >>> 0 > 4) {
     $45 = HEAP32[$0 >> 2] | 0;
     HEAP32[$45 + 20 >> 2] = 16;
     HEAP32[$45 + 24 >> 2] = $43;
     FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
    }
    $50 = HEAP32[$13 >> 2] | 0;
    if (($50 | 0) > 10) {
     $52 = HEAP32[$0 >> 2] | 0;
     HEAP32[$52 + 20 >> 2] = 27;
     HEAP32[$52 + 24 >> 2] = $50;
     HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = 10;
     FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
     $60 = HEAP32[$13 >> 2] | 0;
    } else $60 = $50;
    HEAP32[$14 >> 2] = 1;
    HEAP32[$15 >> 2] = 1;
    if (($60 | 0) > 0) {
     $$0160168$i = 0;
     $$0169$i = HEAP32[$16 >> 2] | 0;
     $183 = $60;
     $184 = 1;
     $185 = 1;
     while (1) {
      $62 = $$0169$i + 8 | 0;
      $63 = HEAP32[$62 >> 2] | 0;
      $$pre183$i = $$0169$i + 12 | 0;
      if (($63 + -1 | 0) >>> 0 <= 3 ? ($65 = HEAP32[$$pre183$i >> 2] | 0, ($65 + -1 | 0) >>> 0 <= 3) : 0) {
       $71 = $185;
       $72 = $63;
       $74 = $184;
       $75 = $65;
       $80 = $183;
      } else {
       $67 = HEAP32[$0 >> 2] | 0;
       HEAP32[$67 + 20 >> 2] = 19;
       FUNCTION_TABLE_vi[HEAP32[$67 >> 2] & 255]($0);
       $71 = HEAP32[$14 >> 2] | 0;
       $72 = HEAP32[$62 >> 2] | 0;
       $74 = HEAP32[$15 >> 2] | 0;
       $75 = HEAP32[$$pre183$i >> 2] | 0;
       $80 = HEAP32[$13 >> 2] | 0;
      }
      $185 = ($71 | 0) > ($72 | 0) ? $71 : $72;
      HEAP32[$14 >> 2] = $185;
      $184 = ($74 | 0) > ($75 | 0) ? $74 : $75;
      HEAP32[$15 >> 2] = $184;
      $$0160168$i = $$0160168$i + 1 | 0;
      if (($$0160168$i | 0) >= ($80 | 0)) {
       $182 = $80;
       break;
      } else {
       $$0169$i = $$0169$i + 88 | 0;
       $183 = $80;
      }
     }
    } else $182 = $60;
    L35 : do if (!(HEAP32[$17 >> 2] | 0)) {
     if (HEAP32[$18 >> 2] | 0 ? HEAP32[$8 >> 2] | 0 : 0) {
      label = 22;
      break;
     }
     do switch (HEAP32[$24 >> 2] | 0) {
     case 0:
      {
       HEAP32[$21 >> 2] = 1;
       HEAP32[$22 >> 2] = 2576;
       HEAP32[$23 >> 2] = 0;
       $103 = 1;
       $105 = $182;
       break L35;
       break;
      }
     case 3:
      {
       HEAP32[$21 >> 2] = 2;
       HEAP32[$22 >> 2] = 3792;
       HEAP32[$23 >> 2] = 3;
       $103 = 2;
       $105 = $182;
       break L35;
       break;
      }
     case 8:
      {
       HEAP32[$21 >> 2] = 3;
       HEAP32[$22 >> 2] = 3680;
       HEAP32[$23 >> 2] = 8;
       $103 = 3;
       $105 = $182;
       break L35;
       break;
      }
     case 15:
      {
       HEAP32[$21 >> 2] = 4;
       HEAP32[$22 >> 2] = 3552;
       HEAP32[$23 >> 2] = 15;
       $103 = 4;
       $105 = $182;
       break L35;
       break;
      }
     case 24:
      {
       HEAP32[$21 >> 2] = 5;
       HEAP32[$22 >> 2] = 3376;
       HEAP32[$23 >> 2] = 24;
       $103 = 5;
       $105 = $182;
       break L35;
       break;
      }
     case 35:
      {
       HEAP32[$21 >> 2] = 6;
       HEAP32[$22 >> 2] = 3168;
       HEAP32[$23 >> 2] = 35;
       $103 = 6;
       $105 = $182;
       break L35;
       break;
      }
     case 48:
      {
       HEAP32[$21 >> 2] = 7;
       HEAP32[$22 >> 2] = 2896;
       HEAP32[$23 >> 2] = 48;
       $103 = 7;
       $105 = $182;
       break L35;
       break;
      }
     case 63:
      {
       HEAP32[$21 >> 2] = 8;
       HEAP32[$22 >> 2] = 2576;
       HEAP32[$23 >> 2] = 63;
       $103 = 8;
       $105 = $182;
       break L35;
       break;
      }
     case 80:
      {
       HEAP32[$21 >> 2] = 9;
       HEAP32[$22 >> 2] = 2576;
       HEAP32[$23 >> 2] = 63;
       $103 = 9;
       $105 = $182;
       break L35;
       break;
      }
     case 99:
      {
       HEAP32[$21 >> 2] = 10;
       HEAP32[$22 >> 2] = 2576;
       HEAP32[$23 >> 2] = 63;
       $103 = 10;
       $105 = $182;
       break L35;
       break;
      }
     case 120:
      {
       HEAP32[$21 >> 2] = 11;
       HEAP32[$22 >> 2] = 2576;
       HEAP32[$23 >> 2] = 63;
       $103 = 11;
       $105 = $182;
       break L35;
       break;
      }
     case 143:
      {
       HEAP32[$21 >> 2] = 12;
       HEAP32[$22 >> 2] = 2576;
       HEAP32[$23 >> 2] = 63;
       $103 = 12;
       $105 = $182;
       break L35;
       break;
      }
     case 168:
      {
       HEAP32[$21 >> 2] = 13;
       HEAP32[$22 >> 2] = 2576;
       HEAP32[$23 >> 2] = 63;
       $103 = 13;
       $105 = $182;
       break L35;
       break;
      }
     case 195:
      {
       HEAP32[$21 >> 2] = 14;
       HEAP32[$22 >> 2] = 2576;
       HEAP32[$23 >> 2] = 63;
       $103 = 14;
       $105 = $182;
       break L35;
       break;
      }
     case 224:
      {
       HEAP32[$21 >> 2] = 15;
       HEAP32[$22 >> 2] = 2576;
       HEAP32[$23 >> 2] = 63;
       $103 = 15;
       $105 = $182;
       break L35;
       break;
      }
     case 255:
      {
       HEAP32[$21 >> 2] = 16;
       HEAP32[$22 >> 2] = 2576;
       HEAP32[$23 >> 2] = 63;
       $103 = 16;
       $105 = $182;
       break L35;
       break;
      }
     default:
      {
       $88 = HEAP32[$0 >> 2] | 0;
       HEAP32[$88 + 20 >> 2] = 17;
       HEAP32[$88 + 24 >> 2] = HEAP32[$26 >> 2];
       HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = HEAP32[$24 >> 2];
       HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] = HEAP32[$27 >> 2];
       HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] = HEAP32[$28 >> 2];
       FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
       $103 = HEAP32[$21 >> 2] | 0;
       $105 = HEAP32[$13 >> 2] | 0;
       break L35;
      }
     } while (0);
    } else label = 22; while (0);
    if ((label | 0) == 22) {
     label = 0;
     HEAP32[$21 >> 2] = 8;
     HEAP32[$22 >> 2] = 2576;
     HEAP32[$23 >> 2] = 63;
     $103 = 8;
     $105 = $182;
    }
    HEAP32[$19 >> 2] = $103;
    HEAP32[$20 >> 2] = $103;
    if (($105 | 0) > 0) {
     $$1161166$i = 0;
     $$1167$i = HEAP32[$16 >> 2] | 0;
     $108 = $103;
     while (1) {
      HEAP32[$$1167$i + 36 >> 2] = $108;
      HEAP32[$$1167$i + 40 >> 2] = $108;
      $111 = $$1167$i + 8 | 0;
      $113 = Math_imul(HEAP32[$111 >> 2] | 0, HEAP32[$12 >> 2] | 0) | 0;
      $116 = _jdiv_round_up($113, Math_imul(HEAP32[$14 >> 2] | 0, $108) | 0) | 0;
      HEAP32[$$1167$i + 28 >> 2] = $116;
      $119 = $$1167$i + 12 | 0;
      $121 = Math_imul(HEAP32[$119 >> 2] | 0, HEAP32[$10 >> 2] | 0) | 0;
      $125 = _jdiv_round_up($121, Math_imul(HEAP32[$21 >> 2] | 0, HEAP32[$15 >> 2] | 0) | 0) | 0;
      HEAP32[$$1167$i + 32 >> 2] = $125;
      $129 = Math_imul(HEAP32[$111 >> 2] | 0, HEAP32[$12 >> 2] | 0) | 0;
      $131 = _jdiv_round_up($129, HEAP32[$14 >> 2] | 0) | 0;
      HEAP32[$$1167$i + 44 >> 2] = $131;
      $135 = Math_imul(HEAP32[$119 >> 2] | 0, HEAP32[$10 >> 2] | 0) | 0;
      $137 = _jdiv_round_up($135, HEAP32[$15 >> 2] | 0) | 0;
      HEAP32[$$1167$i + 48 >> 2] = $137;
      HEAP32[$$1167$i + 52 >> 2] = 1;
      HEAP32[$$1167$i + 80 >> 2] = 0;
      $141 = $$1161166$i + 1 | 0;
      if (($141 | 0) >= (HEAP32[$13 >> 2] | 0)) break;
      $$1161166$i = $141;
      $$1167$i = $$1167$i + 88 | 0;
      $108 = HEAP32[$21 >> 2] | 0;
     }
     $148 = HEAP32[$21 >> 2] | 0;
    } else $148 = $103;
    $149 = _jdiv_round_up(HEAP32[$10 >> 2] | 0, Math_imul($148, HEAP32[$15 >> 2] | 0) | 0) | 0;
    HEAP32[$25 >> 2] = $149;
    $150 = HEAP32[$8 >> 2] | 0;
    if (($150 | 0) >= (HEAP32[$13 >> 2] | 0) ? (HEAP32[$18 >> 2] | 0) == 0 : 0) {
     HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] = 0;
     $160 = $150;
     label = 50;
     break L7;
    }
    HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] = 1;
    $160 = $150;
    label = 50;
    break;
   }
  default:
   {
    $160 = HEAP32[$8 >> 2] | 0;
    label = 50;
   }
  } while (0);
  if ((label | 0) == 50) {
   label = 0;
   if ($160 | 0) {
    label = 52;
    break;
   }
   HEAP32[$7 >> 2] = 2;
  }
 }
 if ((label | 0) == 52) {
  HEAP32[$7 >> 2] = 0;
  $$0 = 1;
  return $$0 | 0;
 } else if ((label | 0) == 57) {
  _start_input_pass_79($0);
  $$0 = 1;
  return $$0 | 0;
 } else if ((label | 0) == 58) {
  HEAP32[$3 >> 2] = 1;
  if (!(HEAP32[$7 >> 2] | 0)) {
   $177 = $0 + 152 | 0;
   $180 = HEAP32[$0 + 144 >> 2] | 0;
   if ((HEAP32[$177 >> 2] | 0) <= ($180 | 0)) {
    $$0 = 2;
    return $$0 | 0;
   }
   HEAP32[$177 >> 2] = $180;
   $$0 = 2;
   return $$0 | 0;
  } else {
   if (!(HEAP32[(HEAP32[$6 >> 2] | 0) + 16 >> 2] | 0)) {
    $$0 = 2;
    return $$0 | 0;
   }
   $174 = HEAP32[$0 >> 2] | 0;
   HEAP32[$174 + 20 >> 2] = 62;
   FUNCTION_TABLE_vi[HEAP32[$174 >> 2] & 255]($0);
   $$0 = 2;
   return $$0 | 0;
  }
 } else if ((label | 0) == 63) return $$0 | 0;
 return 0;
}

function __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i51 = 0, $$0$i$i$i55 = 0, $$0$i$i$i62 = 0, $$0$i$i$i70 = 0, $$0$i$i$i78 = 0, $$0$i$i$i86 = 0, $$0$i$i$i94 = 0, $10 = 0, $101 = 0, $102 = 0, $105 = 0, $11 = 0, $116 = 0, $12 = 0, $120 = 0, $121 = 0, $124 = 0, $135 = 0, $139 = 0, $143 = 0, $146 = 0, $150 = 0, $158 = 0, $159 = 0, $16 = 0, $162 = 0, $20 = 0, $21 = 0, $24 = 0, $35 = 0, $39 = 0, $40 = 0, $43 = 0, $54 = 0, $58 = 0, $62 = 0, $65 = 0, $69 = 0, $77 = 0, $78 = 0, $81 = 0, $93 = 0, $97 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($0) {
  $12 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66760) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 44 >> 2] & 255]($10, $12);
   $16 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $16;
   HEAP8[$3 + 1 >> 0] = $16 >> 8;
   HEAP8[$3 + 2 >> 0] = $16 >> 16;
   HEAP8[$3 + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 255]($11, $12);
   $20 = $8 + 8 | 0;
   $21 = $20 + 3 | 0;
   if ((HEAP8[$21 >> 0] | 0) < 0) {
    $24 = HEAP32[$8 >> 2] | 0;
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($24, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    if ((HEAP8[$21 >> 0] | 0) < 0) {
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$8 >> 2] | 0, HEAP32[$20 >> 2] << 2);
     HEAP32[$20 >> 2] = 0;
    }
   } else {
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
    HEAP8[$21 >> 0] = 0;
   };
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 40 >> 2] & 255]($10, $12);
   $35 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $35;
   HEAP8[$3 + 1 >> 0] = $35 >> 8;
   HEAP8[$3 + 2 >> 0] = $35 >> 16;
   HEAP8[$3 + 3 >> 0] = $35 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 255]($11, $12);
   $39 = $8 + 8 | 0;
   $40 = $39 + 3 | 0;
   if ((HEAP8[$40 >> 0] | 0) < 0) {
    $43 = HEAP32[$8 >> 2] | 0;
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($43, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    if ((HEAP8[$40 >> 0] | 0) < 0) {
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$8 >> 2] | 0, HEAP32[$39 >> 2] << 2);
     HEAP32[$39 >> 2] = 0;
    }
   } else {
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
    HEAP8[$40 >> 0] = 0;
   };
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i51 = 0;
   while (1) {
    if (($$0$i$i$i51 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i51 << 2) >> 2] = 0;
    $$0$i$i$i51 = $$0$i$i$i51 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  }
  $54 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP32[$4 >> 2] = $54;
  $58 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  HEAP32[$5 >> 2] = $58;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 255]($11, $12);
  $62 = $6 + 11 | 0;
  if ((HEAP8[$62 >> 0] | 0) < 0) {
   $65 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($65, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   if ((HEAP8[$62 >> 0] | 0) < 0) {
    $69 = $6 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$6 >> 2] | 0, HEAP32[$69 >> 2] & 2147483647);
    HEAP32[$69 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$62 >> 0] = 0;
  };
  HEAP32[$6 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i55 = 0;
  while (1) {
   if (($$0$i$i$i55 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i55 << 2) >> 2] = 0;
   $$0$i$i$i55 = $$0$i$i$i55 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 255]($11, $12);
  $77 = $7 + 8 | 0;
  $78 = $77 + 3 | 0;
  if ((HEAP8[$78 >> 0] | 0) < 0) {
   $81 = HEAP32[$7 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($81, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   if ((HEAP8[$78 >> 0] | 0) < 0) {
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$7 >> 2] | 0, HEAP32[$77 >> 2] << 2);
    HEAP32[$77 >> 2] = 0;
   }
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7, $10);
   HEAP8[$78 >> 0] = 0;
  };
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i62 = 0;
  while (1) {
   if (($$0$i$i$i62 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i62 << 2) >> 2] = 0;
   $$0$i$i$i62 = $$0$i$i$i62 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $93 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66752) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 44 >> 2] & 255]($10, $93);
   $97 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $97;
   HEAP8[$3 + 1 >> 0] = $97 >> 8;
   HEAP8[$3 + 2 >> 0] = $97 >> 16;
   HEAP8[$3 + 3 >> 0] = $97 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 32 >> 2] & 255]($11, $93);
   $101 = $8 + 8 | 0;
   $102 = $101 + 3 | 0;
   if ((HEAP8[$102 >> 0] | 0) < 0) {
    $105 = HEAP32[$8 >> 2] | 0;
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($105, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    if ((HEAP8[$102 >> 0] | 0) < 0) {
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$8 >> 2] | 0, HEAP32[$101 >> 2] << 2);
     HEAP32[$101 >> 2] = 0;
    }
   } else {
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
    HEAP8[$102 >> 0] = 0;
   };
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i70 = 0;
   while (1) {
    if (($$0$i$i$i70 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i70 << 2) >> 2] = 0;
    $$0$i$i$i70 = $$0$i$i$i70 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 40 >> 2] & 255]($10, $93);
   $116 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $116;
   HEAP8[$3 + 1 >> 0] = $116 >> 8;
   HEAP8[$3 + 2 >> 0] = $116 >> 16;
   HEAP8[$3 + 3 >> 0] = $116 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 28 >> 2] & 255]($11, $93);
   $120 = $8 + 8 | 0;
   $121 = $120 + 3 | 0;
   if ((HEAP8[$121 >> 0] | 0) < 0) {
    $124 = HEAP32[$8 >> 2] | 0;
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($124, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    if ((HEAP8[$121 >> 0] | 0) < 0) {
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$8 >> 2] | 0, HEAP32[$120 >> 2] << 2);
     HEAP32[$120 >> 2] = 0;
    }
   } else {
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
    HEAP8[$121 >> 0] = 0;
   };
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i78 = 0;
   while (1) {
    if (($$0$i$i$i78 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i78 << 2) >> 2] = 0;
    $$0$i$i$i78 = $$0$i$i$i78 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  }
  $135 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 12 >> 2] & 127]($93) | 0;
  HEAP32[$4 >> 2] = $135;
  $139 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 16 >> 2] & 127]($93) | 0;
  HEAP32[$5 >> 2] = $139;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 20 >> 2] & 255]($11, $93);
  $143 = $6 + 11 | 0;
  if ((HEAP8[$143 >> 0] | 0) < 0) {
   $146 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($146, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   if ((HEAP8[$143 >> 0] | 0) < 0) {
    $150 = $6 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$6 >> 2] | 0, HEAP32[$150 >> 2] & 2147483647);
    HEAP32[$150 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$143 >> 0] = 0;
  };
  HEAP32[$6 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i86 = 0;
  while (1) {
   if (($$0$i$i$i86 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i86 << 2) >> 2] = 0;
   $$0$i$i$i86 = $$0$i$i$i86 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 24 >> 2] & 255]($11, $93);
  $158 = $7 + 8 | 0;
  $159 = $158 + 3 | 0;
  if ((HEAP8[$159 >> 0] | 0) < 0) {
   $162 = HEAP32[$7 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($162, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   if ((HEAP8[$159 >> 0] | 0) < 0) {
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$7 >> 2] | 0, HEAP32[$158 >> 2] << 2);
    HEAP32[$158 >> 2] = 0;
   }
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7, $10);
   HEAP8[$159 >> 0] = 0;
  };
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i94 = 0;
  while (1) {
   if (($$0$i$i$i94 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i94 << 2) >> 2] = 0;
   $$0$i$i$i94 = $$0$i$i$i94 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 36 >> 2] & 127]($93) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function _ar2GetBestMatching($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 var $$0 = 0, $$0282 = 0, $$0284 = 0, $$0286 = 0, $$0288 = 0, $$0289 = 0, $$0293 = 0, $$0295 = 0, $$0299 = 0, $$0305 = 0, $$0306 = 0, $$0315 = 0, $$0317 = 0, $$0318 = 0, $$1 = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$1285 = 0, $$1287 = 0, $$1290 = 0, $$1294 = 0, $$1296 = 0, $$13 = 0, $$1300 = 0, $$1307 = 0, $$1316 = 0, $$1319 = 0, $$14 = 0, $$2 = 0, $$2291 = 0, $$2297 = 0, $$2301 = 0, $$2308 = 0, $$2320 = 0, $$3 = 0, $$3292 = 0, $$3298 = 0, $$3302 = 0, $$3309 = 0, $$3321 = 0, $$4 = 0, $$4303 = 0, $$4310 = 0, $$4322 = 0, $$5 = 0, $$5304 = 0, $$5323 = 0, $$6 = 0, $$6312 = 0, $$7 = 0, $$7313 = 0, $$8 = 0, $$8314 = 0, $$9 = 0, $101 = 0, $102 = 0, $104 = 0, $106 = 0, $110 = 0, $111 = 0, $114 = 0, $115 = 0, $119 = 0, $12 = 0, $126 = 0, $127 = 0, $13 = 0, $131 = 0, $139 = 0, $14 = 0, $141 = 0, $142 = 0, $15 = 0, $151 = 0, $153 = 0, $16 = 0, $162 = 0, $169 = 0, $17 = 0, $171 = 0, $177 = 0, $18 = 0, $19 = 0, $192 = 0, $193 = 0, $195 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $201 = 0, $21 = 0, $214 = 0, $215 = 0, $216 = 0, $219 = 0, $22 = 0, $23 = 0, $24 = 0, $27 = 0, $30 = 0, $35 = 0, $36 = 0, $38 = 0, $40 = 0, $42 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $59 = 0, $63 = 0, $68 = 0, $70 = 0, $71 = 0, $72 = 0, $77 = 0, $87 = 0, $96 = 0, $scevgep = 0, $spec$select = 0, $spec$store$select = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $12 = sp + 72 | 0;
 $13 = sp + 60 | 0;
 $14 = sp + 48 | 0;
 $15 = sp + 36 | 0;
 $16 = sp + 32 | 0;
 $17 = sp + 24 | 0;
 $18 = sp + 16 | 0;
 $19 = $5 + 16 | 0;
 $20 = HEAP32[$19 >> 2] | 0;
 $21 = $5 + 20 | 0;
 $22 = HEAP32[$21 >> 2] | 0;
 $23 = $2 + -1 | 0;
 $24 = $3 + -1 | 0;
 $$0315 = 0;
 while (1) {
  if ($$0315 >>> 0 >= 3) break;
  $27 = HEAP32[$8 + ($$0315 << 3) >> 2] | 0;
  if (($27 | 0) < 0) break;
  $30 = $27 & -4 | 2;
  $35 = ((HEAP32[$8 + ($$0315 << 3) + 4 >> 2] | 0) / 4 | 0) << 2 | 2;
  $36 = $30 - $6 | 0;
  $spec$store$select = ($36 | 0) > 0 ? $36 : 0;
  $38 = $30 + $6 | 0;
  $spec$select = ($38 | 0) < ($2 | 0) ? $38 : $23;
  $40 = $35 - $7 | 0;
  $42 = $35 + $7 | 0;
  $$0288 = ($42 | 0) < ($3 | 0) ? $42 : $24;
  $$0318 = ($40 | 0) > 0 ? $40 : 0;
  while (1) {
   if (($$0318 | 0) > ($$0288 | 0)) break;
   $$0299 = $spec$store$select;
   $$0305 = $1 + ((Math_imul($$0318, $2) | 0) + $spec$store$select) | 0;
   while (1) {
    if (($$0299 | 0) > ($spec$select | 0)) break;
    HEAP8[$$0305 >> 0] = 0;
    $$0299 = $$0299 + 1 | 0;
    $$0305 = $$0305 + 1 | 0;
   }
   $$0318 = $$0318 + 1 | 0;
  }
  $$0315 = $$0315 + 1 | 0;
 }
 HEAP32[$12 >> 2] = 0;
 $53 = $22 << 1;
 $54 = $20 << 1;
 $55 = $5 + 12 | 0;
 $56 = $5 + 8 | 0;
 $$0306 = 1;
 $$1316 = 0;
 while (1) {
  if ($$1316 >>> 0 >= 3) {
   label = 28;
   break;
  }
  $59 = HEAP32[$8 + ($$1316 << 3) >> 2] | 0;
  if (($59 | 0) < 0) {
   label = 14;
   break;
  }
  $63 = $59 & -4 | 2;
  $68 = ((HEAP32[$8 + ($$1316 << 3) + 4 >> 2] | 0) / 4 | 0) << 2 | 2;
  $70 = $68 + $7 | 0;
  $71 = $63 - $6 | 0;
  $72 = $63 + $6 | 0;
  $$1307 = $$0306;
  $$1319 = $68 - $7 | 0;
  L18 : while (1) {
   if (($$1319 | 0) > ($70 | 0)) break;
   L21 : do if (($$1319 | 0) < ($54 | 0)) $$4310 = $$1307; else {
    if (($$1319 + $53 | 0) >= ($3 | 0)) break L18;
    $77 = Math_imul($$1319, $2) | 0;
    $$1300 = $71;
    $$2308 = $$1307;
    while (1) {
     if (($$1300 | 0) > ($72 | 0)) {
      $$4310 = $$2308;
      break L21;
     }
     if (($$1300 | 0) >= (HEAP32[$56 >> 2] << 1 | 0)) {
      if (((HEAP32[$55 >> 2] << 1) + $$1300 | 0) >= ($2 | 0)) {
       $$4310 = $$2308;
       break L21;
      }
      $87 = $1 + ($$1300 + $77) | 0;
      if (!(HEAP8[$87 >> 0] | 0)) {
       HEAP8[$87 >> 0] = 1;
       _ar2GetBestMatchingSubFine($0, $2, $4, $5, $$1300, $$1319, $16);
       _updateCandidate($$1300, $$1319, HEAP32[$16 >> 2] | 0, $12, $13, $14, $15);
       $$3309 = 0;
      } else $$3309 = $$2308;
     } else $$3309 = $$2308;
     $$1300 = $$1300 + 4 | 0;
     $$2308 = $$3309;
    }
   } while (0);
   $$1307 = $$4310;
   $$1319 = $$1319 + 4 | 0;
  }
  $$0306 = $$1307;
  $$1316 = $$1316 + 1 | 0;
 }
 if ((label | 0) == 14) if (!$$0306) label = 28; else $$0 = -1;
 if ((label | 0) == 28) {
  $96 = $5 + 4 | 0;
  $101 = Math_imul((HEAP32[$5 >> 2] << 3) + 32 | 0, (HEAP32[$96 >> 2] << 1) + 8 | 0) | 0;
  $102 = _malloc($101) | 0;
  if (!$102) {
   _arLog(0, 3, 45930, $vararg_buffer);
   _exit(1);
  }
  $104 = _malloc($101) | 0;
  if (!$104) {
   _arLog(0, 3, 45930, $vararg_buffer1);
   _exit(1);
  }
  $106 = $5 + 36 | 0;
  $$0289 = 0;
  $$0317 = 0;
  $$6312 = -1;
  while (1) {
   if (($$0317 | 0) >= (HEAP32[$12 >> 2] | 0)) break;
   $110 = HEAP32[$5 >> 2] | 0;
   $111 = HEAP32[$96 >> 2] | 0;
   L47 : do if ((HEAP32[$106 >> 2] | 0) == (Math_imul($111, $110) | 0)) {
    switch ($4 | 0) {
    case 5:
    case 12:
    case 13:
    case 14:
     break;
    default:
     {
      label = 40;
      break L47;
     }
    }
    $114 = $14 + ($$0317 << 2) | 0;
    $115 = HEAP32[$114 >> 2] | 0;
    $119 = $115 + -3 - (HEAP32[$19 >> 2] << 1) | 0;
    if (((($119 | 0) >= 0 ? ($115 + 3 + (HEAP32[$21 >> 2] << 1) | 0) < ($3 | 0) : 0) ? ($126 = $13 + ($$0317 << 2) | 0, $127 = HEAP32[$126 >> 2] | 0, $131 = $127 + -3 - (HEAP32[$56 >> 2] << 1) | 0, ($131 | 0) >= 0) : 0) ? ($127 + 3 + (HEAP32[$55 >> 2] << 1) | 0) < ($2 | 0) : 0) {
     $169 = ($111 << 1) + 6 | 0;
     $171 = ($110 << 2) + 16 | 0;
     $$0286 = $104;
     $$0295 = $102;
     $$3321 = 0;
     while (1) {
      if (($$3321 | 0) >= ($171 | 0)) break;
      HEAP32[$$0295 >> 2] = 0;
      HEAP32[$$0286 >> 2] = 0;
      $$0286 = $$0286 + 4 | 0;
      $$0295 = $$0295 + 4 | 0;
      $$3321 = $$3321 + 1 | 0;
     }
     $177 = ($110 << 1) + 6 | 0;
     $$0282 = $0 + ($131 + (Math_imul($119, $2) | 0)) | 0;
     $$0284 = $104;
     $$0293 = $102;
     $$1287 = $$0286;
     $$1296 = $$0295;
     $$4322 = 0;
     while (1) {
      if (($$4322 | 0) >= ($169 | 0)) break;
      $scevgep = $$1296 + 8 | 0;
      $$2 = $$1287;
      $$2297 = $$1296;
      $$3302 = 0;
      while (1) {
       if (($$3302 | 0) == 2) break;
       HEAP32[$$2297 >> 2] = 0;
       HEAP32[$$2 >> 2] = 0;
       HEAP32[$17 + ($$3302 << 2) >> 2] = 0;
       HEAP32[$18 + ($$3302 << 2) >> 2] = 0;
       $$2 = $$2 + 4 | 0;
       $$2297 = $$2297 + 4 | 0;
       $$3302 = $$3302 + 1 | 0;
      }
      $$1 = $$0282;
      $$1285 = $$0284 + 8 | 0;
      $$1294 = $$0293 + 8 | 0;
      $$3 = $$1287 + 8 | 0;
      $$3298 = $scevgep;
      $$4303 = 0;
      while (1) {
       if (($$4303 | 0) >= ($177 | 0)) break;
       $192 = $$4303 & 1;
       $193 = $17 + ($192 << 2) | 0;
       $195 = (HEAP32[$193 >> 2] | 0) + (HEAPU8[$$1 >> 0] | 0) | 0;
       HEAP32[$193 >> 2] = $195;
       $197 = HEAPU8[$$1 >> 0] | 0;
       $198 = Math_imul($197, $197) | 0;
       $199 = $18 + ($192 << 2) | 0;
       $201 = $198 + (HEAP32[$199 >> 2] | 0) | 0;
       HEAP32[$199 >> 2] = $201;
       HEAP32[$$3298 >> 2] = (HEAP32[$$1294 >> 2] | 0) + $195;
       HEAP32[$$3 >> 2] = (HEAP32[$$1285 >> 2] | 0) + $201;
       $$1 = $$1 + 1 | 0;
       $$1285 = $$1285 + 4 | 0;
       $$1294 = $$1294 + 4 | 0;
       $$3 = $$3 + 4 | 0;
       $$3298 = $$3298 + 4 | 0;
       $$4303 = $$4303 + 1 | 0;
      }
      $$0282 = $$0282 + $2 | 0;
      $$0284 = $$1285;
      $$0293 = $$1294;
      $$1287 = $$3;
      $$1296 = $$3298;
      $$4322 = $$4322 + 1 | 0;
     }
     $$11 = $$6312;
     $$5 = $$0289;
     $$5323 = 0;
     while (1) {
      if (($$5323 | 0) == 7) {
       $$14 = $$11;
       $$8 = $$5;
       break L47;
      }
      $214 = $$5323 + $119 | 0;
      $215 = $$5323 + 2 | 0;
      $216 = $$5323 + -3 | 0;
      $$12 = $$11;
      $$5304 = 0;
      $$6 = $$5;
      while (1) {
       if (($$5304 | 0) == 7) break;
       _ar2GetBestMatchingSubFineOpt($0, $2, $$5304 + $131 | 0, $214, $5, $102, $104, $$5304 + 2 | 0, $215, $16);
       $219 = HEAP32[$16 >> 2] | 0;
       if (($219 | 0) > ($$6 | 0)) {
        HEAP32[$9 >> 2] = $$5304 + -3 + (HEAP32[$126 >> 2] | 0);
        HEAP32[$10 >> 2] = $216 + (HEAP32[$114 >> 2] | 0);
        HEAPF32[$11 >> 2] = +($219 | 0) / 1.0e4;
        $$13 = 0;
        $$7 = $219;
       } else {
        $$13 = $$12;
        $$7 = $$6;
       }
       $$12 = $$13;
       $$5304 = $$5304 + 1 | 0;
       $$6 = $$7;
      }
      $$11 = $$12;
      $$5 = $$6;
      $$5323 = $$5323 + 1 | 0;
     }
    } else label = 40;
   } else label = 40; while (0);
   L80 : do if ((label | 0) == 40) {
    label = 0;
    $139 = HEAP32[$14 + ($$0317 << 2) >> 2] | 0;
    $141 = $139 + 3 | 0;
    $142 = $13 + ($$0317 << 2) | 0;
    $$1290 = $$0289;
    $$2320 = $139 + -3 | 0;
    $$7313 = $$6312;
    while (1) {
     if (($$2320 | 0) > ($141 | 0)) {
      $$14 = $$7313;
      $$8 = $$1290;
      break L80;
     }
     L85 : do if (($$2320 | 0) < (HEAP32[$19 >> 2] << 1 | 0)) {
      $$10 = $$7313;
      $$4 = $$1290;
     } else {
      if (((HEAP32[$21 >> 2] << 1) + $$2320 | 0) >= ($3 | 0)) {
       $$14 = $$7313;
       $$8 = $$1290;
       break L80;
      }
      $151 = HEAP32[$142 >> 2] | 0;
      $153 = $151 + 3 | 0;
      $$2291 = $$1290;
      $$2301 = $151 + -3 | 0;
      $$8314 = $$7313;
      while (1) {
       if (($$2301 | 0) > ($153 | 0)) {
        $$10 = $$8314;
        $$4 = $$2291;
        break L85;
       }
       if (($$2301 | 0) >= (HEAP32[$56 >> 2] << 1 | 0)) {
        if (((HEAP32[$55 >> 2] << 1) + $$2301 | 0) >= ($2 | 0)) {
         $$10 = $$8314;
         $$4 = $$2291;
         break L85;
        }
        _ar2GetBestMatchingSubFine($0, $2, $4, $5, $$2301, $$2320, $16);
        $162 = HEAP32[$16 >> 2] | 0;
        if (($162 | 0) > ($$2291 | 0)) {
         HEAP32[$9 >> 2] = $$2301;
         HEAP32[$10 >> 2] = $$2320;
         HEAPF32[$11 >> 2] = +($162 | 0) / 1.0e4;
         $$3292 = $162;
         $$9 = 0;
        } else {
         $$3292 = $$2291;
         $$9 = $$8314;
        }
       } else {
        $$3292 = $$2291;
        $$9 = $$8314;
       }
       $$2291 = $$3292;
       $$2301 = $$2301 + 1 | 0;
       $$8314 = $$9;
      }
     } while (0);
     $$1290 = $$4;
     $$2320 = $$2320 + 1 | 0;
     $$7313 = $$10;
    }
   } while (0);
   $$0289 = $$8;
   $$0317 = $$0317 + 1 | 0;
   $$6312 = $$14;
  }
  _free($102);
  _free($104);
  $$0 = $$6312;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$095$0 = 0, $10 = 0, $103 = 0, $107 = 0, $11 = 0, $112 = 0, $113 = 0, $118 = 0, $12 = 0, $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $45 = 0, $49 = 0, $54 = 0, $55 = 0, $60 = 0, $62 = 0, $63 = 0, $68 = 0, $71 = 0, $8 = 0, $87 = 0, $9 = 0, $90 = 0, $94 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 $$byval_copy30 = sp + 128 | 0;
 $$byval_copy26 = sp + 112 | 0;
 $8 = sp + 124 | 0;
 $9 = sp + 120 | 0;
 $10 = sp + 116 | 0;
 $11 = sp + 108 | 0;
 $12 = sp + 104 | 0;
 $13 = sp + 100 | 0;
 $14 = sp + 96 | 0;
 $15 = sp + 92 | 0;
 $16 = sp + 88 | 0;
 $17 = sp + 84 | 0;
 $18 = sp + 80 | 0;
 $19 = sp + 76 | 0;
 $20 = sp + 72 | 0;
 $21 = sp + 68 | 0;
 $22 = sp + 64 | 0;
 $23 = sp + 60 | 0;
 $24 = sp + 56 | 0;
 $25 = sp + 52 | 0;
 $26 = sp + 48 | 0;
 $27 = sp + 44 | 0;
 $28 = sp + 40 | 0;
 $29 = sp + 36 | 0;
 $30 = sp + 32 | 0;
 $31 = sp + 28 | 0;
 $32 = sp + 24 | 0;
 $33 = sp + 20 | 0;
 $34 = sp + 16 | 0;
 $35 = sp + 12 | 0;
 $36 = sp + 8 | 0;
 $37 = sp + 4 | 0;
 $38 = sp;
 HEAP32[$4 >> 2] = 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy30, $3);
 $39 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy30, 66544) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy30);
 do switch ($6 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$8 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 24 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$9 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 16 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 99:
  {
   $45 = $0 + 8 | 0;
   $49 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 12 >> 2] & 127]($45) | 0;
   HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$11 >> 2] = HEAP32[$2 >> 2];
   $54 = HEAP8[$49 + 8 + 3 >> 0] | 0;
   $55 = $54 << 24 >> 24 < 0;
   $60 = $55 ? HEAP32[$49 >> 2] | 0 : $49;
   $62 = $60 + (($55 ? HEAP32[$49 + 4 >> 2] | 0 : $54 & 255) << 2) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$11 >> 2];
   $63 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $60, $62) | 0;
   HEAP32[$1 >> 2] = $63;
   label = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$12 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 12 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 68:
  {
   HEAP32[$13 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$14 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$14 >> 2];
   $68 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 12976, 13008) | 0;
   HEAP32[$1 >> 2] = $68;
   label = 26;
   break;
  }
 case 70:
  {
   HEAP32[$15 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$16 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$15 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$16 >> 2];
   $71 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 13008, 13040) | 0;
   HEAP32[$1 >> 2] = $71;
   label = 26;
   break;
  }
 case 72:
  {
   HEAP32[$17 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$17 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 73:
  {
   HEAP32[$18 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$18 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 106:
  {
   HEAP32[$19 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$19 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 28 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 109:
  {
   HEAP32[$20 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$20 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 16 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 77:
  {
   HEAP32[$21 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$21 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 4 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$22 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$22 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 112:
  {
   HEAP32[$23 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$23 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 114:
  {
   HEAP32[$24 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$25 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$24 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$25 >> 2];
   $87 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 13040, 13084) | 0;
   HEAP32[$1 >> 2] = $87;
   label = 26;
   break;
  }
 case 82:
  {
   HEAP32[$26 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$27 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$26 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$27 >> 2];
   $90 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 13088, 13108) | 0;
   HEAP32[$1 >> 2] = $90;
   label = 26;
   break;
  }
 case 83:
  {
   HEAP32[$28 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$28 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 84:
  {
   HEAP32[$29 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$30 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$29 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$30 >> 2];
   $94 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 13120, 13152) | 0;
   HEAP32[$1 >> 2] = $94;
   label = 26;
   break;
  }
 case 119:
  {
   HEAP32[$31 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$31 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 24 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 120:
  {
   $99 = HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$33 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$32 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$33 >> 2];
   $$sroa$095$0 = FUNCTION_TABLE_iiiiiii[$99 & 63]($0, $$byval_copy26, $$byval_copy30, $3, $4, $5) | 0;
   break;
  }
 case 88:
  {
   $103 = $0 + 8 | 0;
   $107 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$103 >> 2] | 0) + 24 >> 2] & 127]($103) | 0;
   HEAP32[$34 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$35 >> 2] = HEAP32[$2 >> 2];
   $112 = HEAP8[$107 + 8 + 3 >> 0] | 0;
   $113 = $112 << 24 >> 24 < 0;
   $118 = $113 ? HEAP32[$107 >> 2] | 0 : $107;
   $120 = $118 + (($113 ? HEAP32[$107 + 4 >> 2] | 0 : $112 & 255) << 2) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$34 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$35 >> 2];
   $121 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $118, $120) | 0;
   HEAP32[$1 >> 2] = $121;
   label = 26;
   break;
  }
 case 121:
  {
   HEAP32[$36 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$36 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 20 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 89:
  {
   HEAP32[$37 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$37 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 20 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 37:
  {
   HEAP32[$38 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$38 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 default:
  {
   HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4;
   label = 26;
  }
 } while (0);
 if ((label | 0) == 26) $$sroa$095$0 = HEAP32[$1 >> 2] | 0;
 STACKTOP = sp;
 return $$sroa$095$0 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$095$0 = 0, $10 = 0, $102 = 0, $106 = 0, $11 = 0, $110 = 0, $111 = 0, $116 = 0, $118 = 0, $119 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $45 = 0, $49 = 0, $53 = 0, $54 = 0, $59 = 0, $61 = 0, $62 = 0, $67 = 0, $70 = 0, $8 = 0, $86 = 0, $89 = 0, $9 = 0, $93 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 $$byval_copy30 = sp + 128 | 0;
 $$byval_copy26 = sp + 112 | 0;
 $8 = sp + 124 | 0;
 $9 = sp + 120 | 0;
 $10 = sp + 116 | 0;
 $11 = sp + 108 | 0;
 $12 = sp + 104 | 0;
 $13 = sp + 100 | 0;
 $14 = sp + 96 | 0;
 $15 = sp + 92 | 0;
 $16 = sp + 88 | 0;
 $17 = sp + 84 | 0;
 $18 = sp + 80 | 0;
 $19 = sp + 76 | 0;
 $20 = sp + 72 | 0;
 $21 = sp + 68 | 0;
 $22 = sp + 64 | 0;
 $23 = sp + 60 | 0;
 $24 = sp + 56 | 0;
 $25 = sp + 52 | 0;
 $26 = sp + 48 | 0;
 $27 = sp + 44 | 0;
 $28 = sp + 40 | 0;
 $29 = sp + 36 | 0;
 $30 = sp + 32 | 0;
 $31 = sp + 28 | 0;
 $32 = sp + 24 | 0;
 $33 = sp + 20 | 0;
 $34 = sp + 16 | 0;
 $35 = sp + 12 | 0;
 $36 = sp + 8 | 0;
 $37 = sp + 4 | 0;
 $38 = sp;
 HEAP32[$4 >> 2] = 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy30, $3);
 $39 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy30, 66512) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy30);
 do switch ($6 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$8 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 24 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$9 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 16 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 99:
  {
   $45 = $0 + 8 | 0;
   $49 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 12 >> 2] & 127]($45) | 0;
   HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$11 >> 2] = HEAP32[$2 >> 2];
   $53 = HEAP8[$49 + 11 >> 0] | 0;
   $54 = $53 << 24 >> 24 < 0;
   $59 = $54 ? HEAP32[$49 >> 2] | 0 : $49;
   $61 = $59 + ($54 ? HEAP32[$49 + 4 >> 2] | 0 : $53 & 255) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$11 >> 2];
   $62 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $59, $61) | 0;
   HEAP32[$1 >> 2] = $62;
   label = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$12 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 12 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 68:
  {
   HEAP32[$13 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$14 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$14 >> 2];
   $67 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 59674, 59682) | 0;
   HEAP32[$1 >> 2] = $67;
   label = 26;
   break;
  }
 case 70:
  {
   HEAP32[$15 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$16 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$15 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$16 >> 2];
   $70 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 59682, 59690) | 0;
   HEAP32[$1 >> 2] = $70;
   label = 26;
   break;
  }
 case 72:
  {
   HEAP32[$17 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$17 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 73:
  {
   HEAP32[$18 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$18 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 106:
  {
   HEAP32[$19 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$19 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 28 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 109:
  {
   HEAP32[$20 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$20 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 16 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 77:
  {
   HEAP32[$21 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$21 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 4 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$22 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$22 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 112:
  {
   HEAP32[$23 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$23 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 114:
  {
   HEAP32[$24 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$25 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$24 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$25 >> 2];
   $86 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 59690, 59701) | 0;
   HEAP32[$1 >> 2] = $86;
   label = 26;
   break;
  }
 case 82:
  {
   HEAP32[$26 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$27 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$26 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$27 >> 2];
   $89 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 59701, 59706) | 0;
   HEAP32[$1 >> 2] = $89;
   label = 26;
   break;
  }
 case 83:
  {
   HEAP32[$28 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$28 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 84:
  {
   HEAP32[$29 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$30 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$29 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$30 >> 2];
   $93 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 59706, 59714) | 0;
   HEAP32[$1 >> 2] = $93;
   label = 26;
   break;
  }
 case 119:
  {
   HEAP32[$31 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$31 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 24 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 120:
  {
   $98 = HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$33 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$32 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$33 >> 2];
   $$sroa$095$0 = FUNCTION_TABLE_iiiiiii[$98 & 63]($0, $$byval_copy26, $$byval_copy30, $3, $4, $5) | 0;
   break;
  }
 case 88:
  {
   $102 = $0 + 8 | 0;
   $106 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$102 >> 2] | 0) + 24 >> 2] & 127]($102) | 0;
   HEAP32[$34 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$35 >> 2] = HEAP32[$2 >> 2];
   $110 = HEAP8[$106 + 11 >> 0] | 0;
   $111 = $110 << 24 >> 24 < 0;
   $116 = $111 ? HEAP32[$106 >> 2] | 0 : $106;
   $118 = $116 + ($111 ? HEAP32[$106 + 4 >> 2] | 0 : $110 & 255) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$34 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$35 >> 2];
   $119 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $116, $118) | 0;
   HEAP32[$1 >> 2] = $119;
   label = 26;
   break;
  }
 case 121:
  {
   HEAP32[$36 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$36 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 20 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 89:
  {
   HEAP32[$37 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$37 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 20 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 37:
  {
   HEAP32[$38 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$38 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 default:
  {
   HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4;
   label = 26;
  }
 } while (0);
 if ((label | 0) == 26) $$sroa$095$0 = HEAP32[$1 >> 2] | 0;
 STACKTOP = sp;
 return $$sroa$095$0 | 0;
}

function _jpgread($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$reg2mem$0 = 0, $$033$reg2mem99$0 = 0, $$034$reg2mem101$0 = 0, $$reg2mem103$0 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $69 = 0, $7 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $91 = 0, $93 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer105 = 0, $vararg_buffer107 = 0, _setjmpTable = 0, _setjmpTableSize = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 832 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(832);
 $vararg_buffer107 = sp + 528 | 0;
 $vararg_buffer105 = sp + 520 | 0;
 $vararg_buffer = sp + 512 | 0;
 _setjmpTableSize = 4;
 _setjmpTable = _malloc(40) | 0;
 HEAP32[_setjmpTable >> 2] = 0;
 $5 = sp + 24 | 0;
 $6 = sp + 536 | 0;
 $7 = sp;
 _memset($5 | 0, 0, 488) | 0;
 __THREW__ = 0;
 $8 = invoke_ii(63, $6 | 0) | 0;
 $9 = __THREW__;
 __THREW__ = 0;
 if (($9 | 0) != 0 & (threwValue | 0) != 0) {
  $10 = _testSetjmp(HEAP32[$9 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
  if (!$10) _longjmp($9 | 0, threwValue | 0);
  setTempRet0(threwValue | 0);
 } else $10 = -1;
 $11 = getTempRet0() | 0;
 if (($10 | 0) != 1) {
  HEAP32[$5 >> 2] = $8;
  HEAP32[$6 >> 2] = 181;
  _setjmpTable = _saveSetjmp($6 + 132 | 0, 1, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
  _setjmpTableSize = getTempRet0() | 0;
  __THREW__ = 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if (($13 | 0) != 0 & (threwValue | 0) != 0) {
   $14 = _testSetjmp(HEAP32[$13 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$14) _longjmp($13 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $14 = -1;
  $15 = getTempRet0() | 0;
  if (($14 | 0) == 1) $$reg2mem103$0 = $15; else $$reg2mem103$0 = 0;
 } else $$reg2mem103$0 = $11;
 L4 : while (1) {
  if ($$reg2mem103$0 | 0) {
   __THREW__ = 0;
   invoke_vi(182, $5 | 0);
   $17 = __THREW__;
   __THREW__ = 0;
   if (($17 | 0) != 0 & (threwValue | 0) != 0) {
    $18 = _testSetjmp(HEAP32[$17 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
    if (!$18) _longjmp($17 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else $18 = -1;
   $19 = getTempRet0() | 0;
   if (($18 | 0) == 1) {
    $$reg2mem103$0 = $19;
    continue;
   }
   __THREW__ = 0;
   invoke_viiii(8, 0, 3, 25828, $vararg_buffer | 0);
   $20 = __THREW__;
   __THREW__ = 0;
   if (($20 | 0) != 0 & (threwValue | 0) != 0) {
    $21 = _testSetjmp(HEAP32[$20 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
    if (!$21) _longjmp($20 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else $21 = -1;
   $22 = getTempRet0() | 0;
   if (($21 | 0) == 1) {
    $$reg2mem103$0 = $22;
    continue;
   } else {
    label = 7;
    break;
   }
  }
  __THREW__ = 0;
  invoke_viii(1, $5 | 0, 90, 488);
  $23 = __THREW__;
  __THREW__ = 0;
  if (($23 | 0) != 0 & (threwValue | 0) != 0) {
   $24 = _testSetjmp(HEAP32[$23 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$24) _longjmp($23 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $24 = -1;
  $25 = getTempRet0() | 0;
  if (($24 | 0) == 1) {
   $$reg2mem103$0 = $25;
   continue;
  }
  __THREW__ = 0;
  invoke_vii(125, $5 | 0, $0 | 0);
  $26 = __THREW__;
  __THREW__ = 0;
  if (($26 | 0) != 0 & (threwValue | 0) != 0) {
   $27 = _testSetjmp(HEAP32[$26 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$27) _longjmp($26 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $27 = -1;
  $28 = getTempRet0() | 0;
  if (($27 | 0) == 1) {
   $$reg2mem103$0 = $28;
   continue;
  }
  __THREW__ = 0;
  $29 = invoke_iii(43, $5 | 0, 1) | 0;
  $30 = __THREW__;
  __THREW__ = 0;
  if (($30 | 0) != 0 & (threwValue | 0) != 0) {
   $31 = _testSetjmp(HEAP32[$30 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$31) _longjmp($30 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $31 = -1;
  $32 = getTempRet0() | 0;
  if (($31 | 0) == 1) {
   $$reg2mem103$0 = $32;
   continue;
  }
  if (($29 | 0) != 1) {
   __THREW__ = 0;
   invoke_viiii(8, 0, 3, 25854, $vararg_buffer105 | 0);
   $34 = __THREW__;
   __THREW__ = 0;
   if (($34 | 0) != 0 & (threwValue | 0) != 0) {
    $35 = _testSetjmp(HEAP32[$34 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
    if (!$35) _longjmp($34 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else $35 = -1;
   $36 = getTempRet0() | 0;
   if (($35 | 0) == 1) {
    $$reg2mem103$0 = $36;
    continue;
   }
   __THREW__ = 0;
   invoke_vi(182, $5 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if (($37 | 0) != 0 & (threwValue | 0) != 0) {
    $38 = _testSetjmp(HEAP32[$37 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
    if (!$38) _longjmp($37 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else $38 = -1;
   $39 = getTempRet0() | 0;
   if (($38 | 0) == 1) {
    $$reg2mem103$0 = $39;
    continue;
   } else {
    label = 14;
    break;
   }
  }
  __THREW__ = 0;
  invoke_ii(64, $5 | 0) | 0;
  $40 = __THREW__;
  __THREW__ = 0;
  if (($40 | 0) != 0 & (threwValue | 0) != 0) {
   $41 = _testSetjmp(HEAP32[$40 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$41) _longjmp($40 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $41 = -1;
  $42 = getTempRet0() | 0;
  if (($41 | 0) == 1) {
   $$reg2mem103$0 = $42;
   continue;
  }
  $43 = $5 + 36 | 0;
  $45 = $5 + 28 | 0;
  $47 = Math_imul(HEAP32[$45 >> 2] | 0, HEAP32[$43 >> 2] | 0) | 0;
  $48 = $5 + 32 | 0;
  $50 = Math_imul($47, HEAP32[$48 >> 2] | 0) | 0;
  __THREW__ = 0;
  $51 = invoke_ii(65, $50 | 0) | 0;
  $52 = __THREW__;
  __THREW__ = 0;
  if (($52 | 0) != 0 & (threwValue | 0) != 0) {
   $53 = _testSetjmp(HEAP32[$52 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$53) _longjmp($52 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $53 = -1;
  $54 = getTempRet0() | 0;
  if (($53 | 0) == 1) {
   $$reg2mem103$0 = $54;
   continue;
  }
  if (!$51) {
   __THREW__ = 0;
   invoke_viiii(8, 0, 3, 45930, $vararg_buffer107 | 0);
   $56 = __THREW__;
   __THREW__ = 0;
   if (($56 | 0) != 0 & (threwValue | 0) != 0) {
    $57 = _testSetjmp(HEAP32[$56 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
    if (!$57) _longjmp($56 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else $57 = -1;
   $58 = getTempRet0() | 0;
   if (($57 | 0) == 1) {
    $$reg2mem103$0 = $58;
    continue;
   }
   __THREW__ = 0;
   invoke_vi(182, $5 | 0);
   $59 = __THREW__;
   __THREW__ = 0;
   if (($59 | 0) != 0 & (threwValue | 0) != 0) {
    $60 = _testSetjmp(HEAP32[$59 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
    if (!$60) _longjmp($59 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else $60 = -1;
   $61 = getTempRet0() | 0;
   if (($60 | 0) == 1) {
    $$reg2mem103$0 = $61;
    continue;
   } else {
    label = 20;
    break;
   }
  }
  $62 = $5 + 140 | 0;
  $63 = $5 + 116 | 0;
  $$034$reg2mem101$0 = 0;
  while (1) {
   if ((HEAP32[$62 >> 2] | 0) >>> 0 >= (HEAP32[$63 >> 2] | 0) >>> 0) break;
   $$033$reg2mem99$0 = 0;
   while (1) {
    if (($$033$reg2mem99$0 | 0) == 5) break;
    $69 = $51 + (Math_imul($$033$reg2mem99$0 + $$034$reg2mem101$0 | 0, $47) | 0) | 0;
    HEAP32[$7 + ($$033$reg2mem99$0 << 2) >> 2] = $69;
    $$033$reg2mem99$0 = $$033$reg2mem99$0 + 1 | 0;
   }
   __THREW__ = 0;
   $72 = invoke_iiii(25, $5 | 0, $7 | 0, 5) | 0;
   $73 = __THREW__;
   __THREW__ = 0;
   if (($73 | 0) != 0 & (threwValue | 0) != 0) {
    $74 = _testSetjmp(HEAP32[$73 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
    if (!$74) _longjmp($73 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else $74 = -1;
   $75 = getTempRet0() | 0;
   if (($74 | 0) == 1) {
    $$reg2mem103$0 = $75;
    continue L4;
   }
   $$034$reg2mem101$0 = $72 + $$034$reg2mem101$0 | 0;
  }
  __THREW__ = 0;
  invoke_ii(66, $5 | 0) | 0;
  $77 = __THREW__;
  __THREW__ = 0;
  if (($77 | 0) != 0 & (threwValue | 0) != 0) {
   $78 = _testSetjmp(HEAP32[$77 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$78) _longjmp($77 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $78 = -1;
  $79 = getTempRet0() | 0;
  if (($78 | 0) == 1) {
   $$reg2mem103$0 = $79;
   continue;
  }
  __THREW__ = 0;
  invoke_vi(182, $5 | 0);
  $80 = __THREW__;
  __THREW__ = 0;
  if (($80 | 0) != 0 & (threwValue | 0) != 0) {
   $81 = _testSetjmp(HEAP32[$80 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$81) _longjmp($80 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $81 = -1;
  $$reg2mem103$0 = getTempRet0() | 0;
  if (($81 | 0) != 1) {
   label = 30;
   break;
  }
 }
 L33 : do if ((label | 0) == 7) $$0$reg2mem$0 = 0; else if ((label | 0) == 14) $$0$reg2mem$0 = 0; else if ((label | 0) == 20) $$0$reg2mem$0 = 0; else if ((label | 0) == 30) {
  if ($1 | 0) HEAP32[$1 >> 2] = HEAP32[$45 >> 2];
  if ($2 | 0) HEAP32[$2 >> 2] = HEAP32[$48 >> 2];
  if ($3 | 0) HEAP32[$3 >> 2] = HEAP32[$43 >> 2];
  if (!$4) $$0$reg2mem$0 = $51; else {
   $91 = HEAP8[$5 + 290 >> 0] | 0;
   switch ($91 << 24 >> 24) {
   case 1:
    {
     $93 = HEAP16[$5 + 292 >> 1] | 0;
     if ($93 << 16 >> 16 == (HEAP16[$5 + 294 >> 1] | 0)) {
      HEAPF32[$4 >> 2] = +($93 & 65535);
      $$0$reg2mem$0 = $51;
      break L33;
     }
     break;
    }
   case 2:
    {
     $99 = HEAP16[$5 + 292 >> 1] | 0;
     if ($99 << 16 >> 16 == (HEAP16[$5 + 294 >> 1] | 0)) {
      HEAPF32[$4 >> 2] = +($99 & 65535) * 2.5399999618530273;
      $$0$reg2mem$0 = $51;
      break L33;
     }
     break;
    }
   default:
    if ((($91 & 255) > 2 ? (HEAP16[$5 + 292 >> 1] | 0) == 0 : 0) ? (HEAP16[$5 + 294 >> 1] | 0) == 0 : 0) {
     HEAPF32[$4 >> 2] = +($91 & 255);
     $$0$reg2mem$0 = $51;
     break L33;
    }
   }
   HEAPF32[$4 >> 2] = 0.0;
   $$0$reg2mem$0 = $51;
  }
 } while (0);
 _free(_setjmpTable | 0);
 STACKTOP = sp;
 return $$0$reg2mem$0 | 0;
}

function _decompress_smooth_data($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0284 = 0, $$0288350 = 0, $$0289349 = 0, $$0289349$phi = 0, $$0292348 = 0, $$0293347 = 0, $$0293347$phi = 0, $$0296346 = 0, $$0297345 = 0, $$0297345$phi = 0, $$0298344 = 0, $$0299354 = 0, $$0300352 = 0, $$0303 = 0, $$0304 = 0, $$0305343 = 0, $$0306 = 0, $$0308 = 0, $$0309 = 0, $$0310 = 0, $$0312353 = 0, $$0313340 = 0, $$0314351 = 0, $$1 = 0, $$1287 = 0, $$1291 = 0, $$1295 = 0, $$1302 = 0, $$1307342 = 0, $$1311341 = 0, $$3 = 0, $$5 = 0, $$7 = 0, $$9 = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $103 = 0, $106 = 0, $109 = 0, $11 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $138 = 0, $14 = 0, $148 = 0, $15 = 0, $150 = 0, $152 = 0, $154 = 0, $16 = 0, $165 = 0, $170 = 0, $173 = 0, $175 = 0, $179 = 0, $181 = 0, $186 = 0, $191 = 0, $194 = 0, $196 = 0, $2 = 0, $20 = 0, $200 = 0, $202 = 0, $207 = 0, $214 = 0, $217 = 0, $219 = 0, $223 = 0, $225 = 0, $230 = 0, $237 = 0, $240 = 0, $242 = 0, $246 = 0, $248 = 0, $25 = 0, $253 = 0, $26 = 0, $260 = 0, $263 = 0, $265 = 0, $269 = 0, $271 = 0, $291 = 0, $37 = 0, $4 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $54 = 0, $57 = 0, $62 = 0, $63 = 0, $68 = 0, $7 = 0, $75 = 0, $76 = 0, $8 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $94 = 0, $97 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 $2 = sp;
 $4 = HEAP32[$0 + 452 >> 2] | 0;
 $5 = $0 + 332 | 0;
 $7 = (HEAP32[$5 >> 2] | 0) + -1 | 0;
 $8 = $0 + 144 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 $10 = $0 + 152 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 L1 : do if (($9 | 0) <= ($11 | 0)) {
  $13 = $0 + 460 | 0;
  $14 = $0 + 412 | 0;
  $15 = $0 + 148 | 0;
  $16 = $0 + 156 | 0;
  $25 = $9;
  $26 = $11;
  while (1) {
   $20 = HEAP32[$13 >> 2] | 0;
   if (HEAP32[$20 + 20 >> 2] | 0) break L1;
   if (($25 | 0) == ($26 | 0) ? (HEAP32[$15 >> 2] | 0) >>> 0 > ((HEAP32[$16 >> 2] | 0) + ((HEAP32[$14 >> 2] | 0) == 0 & 1) | 0) >>> 0 : 0) break L1;
   if (!(FUNCTION_TABLE_ii[HEAP32[$20 >> 2] & 127]($0) | 0)) {
    $$0284 = 0;
    break;
   }
   $25 = HEAP32[$8 >> 2] | 0;
   $26 = HEAP32[$10 >> 2] | 0;
   if (($25 | 0) > ($26 | 0)) break L1;
  }
  STACKTOP = sp;
  return $$0284 | 0;
 } while (0);
 $37 = $0 + 36 | 0;
 if ((HEAP32[$37 >> 2] | 0) > 0) {
  $42 = $0 + 156 | 0;
  $43 = $0 + 4 | 0;
  $44 = $4 + 112 | 0;
  $45 = $0 + 472 | 0;
  $46 = $2 + 2 | 0;
  $47 = $2 + 16 | 0;
  $48 = $2 + 32 | 0;
  $49 = $2 + 18 | 0;
  $50 = $2 + 4 | 0;
  $$0299354 = 0;
  $$0312353 = HEAP32[$0 + 216 >> 2] | 0;
  while (1) {
   if (HEAP32[$$0312353 + 52 >> 2] | 0) {
    $54 = HEAP32[$42 >> 2] | 0;
    if ($54 >>> 0 < $7 >>> 0) {
     $57 = HEAP32[$$0312353 + 12 >> 2] | 0;
     $$0303 = $57 << 1;
     $$0308 = 0;
     $$1302 = $57;
     $68 = $57;
    } else {
     $62 = HEAP32[$$0312353 + 12 >> 2] | 0;
     $63 = ((HEAP32[$$0312353 + 32 >> 2] | 0) >>> 0) % ($62 >>> 0) | 0;
     $spec$select = ($63 | 0) == 0 ? $62 : $63;
     $$0303 = $spec$select;
     $$0308 = 1;
     $$1302 = $spec$select;
     $68 = $62;
    }
    if (!$54) {
     $$0304 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$43 >> 2] | 0) + 32 >> 2] & 31]($0, HEAP32[$4 + 72 + ($$0299354 << 2) >> 2] | 0, 0, $$0303, 0) | 0;
     $$0309 = 1;
    } else {
     $75 = Math_imul($68, $54 + -1 | 0) | 0;
     $76 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$43 >> 2] | 0) + 32 >> 2] & 31]($0, HEAP32[$4 + 72 + ($$0299354 << 2) >> 2] | 0, $75, $68 + $$0303 | 0, 0) | 0;
     $$0304 = $76 + (HEAP32[$$0312353 + 12 >> 2] << 2) | 0;
     $$0309 = 0;
    }
    $87 = (HEAP32[$44 >> 2] | 0) + ($$0299354 * 6 << 2) | 0;
    $89 = HEAP32[$$0312353 + 80 >> 2] | 0;
    $91 = HEAPU16[$89 >> 1] | 0;
    $94 = HEAPU16[$89 + 2 >> 1] | 0;
    $97 = HEAPU16[$89 + 16 >> 1] | 0;
    $100 = HEAPU16[$89 + 32 >> 1] | 0;
    $103 = HEAPU16[$89 + 18 >> 1] | 0;
    $106 = HEAPU16[$89 + 4 >> 1] | 0;
    $109 = HEAP32[(HEAP32[$45 >> 2] | 0) + 4 + ($$0299354 << 2) >> 2] | 0;
    if (($$1302 | 0) > 0) {
     $113 = ($$0309 | 0) != 0;
     $114 = ($$0308 | 0) != 0;
     $115 = $$1302 + -1 | 0;
     $116 = $$0312353 + 28 | 0;
     $117 = $87 + 4 | 0;
     $118 = $87 + 8 | 0;
     $119 = $87 + 12 | 0;
     $120 = $91 * 36 | 0;
     $121 = $94 << 7;
     $122 = $87 + 16 | 0;
     $123 = $97 << 7;
     $124 = $94 << 8;
     $125 = $87 + 20 | 0;
     $126 = $91 * 9 | 0;
     $127 = $100 << 7;
     $128 = $97 << 8;
     $129 = $$0312353 + 36 | 0;
     $130 = $91 * 5 | 0;
     $131 = $103 << 7;
     $132 = $100 << 8;
     $133 = $106 << 7;
     $134 = $103 << 8;
     $135 = $106 << 8;
     $136 = $$0312353 + 40 | 0;
     $$0300352 = 0;
     $$0314351 = HEAP32[$1 + ($$0299354 << 2) >> 2] | 0;
     while (1) {
      $138 = HEAP32[$$0304 + ($$0300352 << 2) >> 2] | 0;
      if ($113 & ($$0300352 | 0) == 0) $$0306 = $138; else $$0306 = HEAP32[$$0304 + ($$0300352 + -1 << 2) >> 2] | 0;
      if ($114 & ($$0300352 | 0) == ($115 | 0)) $$0310 = $138; else $$0310 = HEAP32[$$0304 + ($$0300352 + 1 << 2) >> 2] | 0;
      $148 = HEAP16[$$0306 >> 1] | 0;
      $150 = HEAP16[$138 >> 1] | 0;
      $152 = HEAP16[$$0310 >> 1] | 0;
      $154 = (HEAP32[$116 >> 2] | 0) + -1 | 0;
      $$0288350 = $152;
      $$0289349 = $152;
      $$0292348 = $150;
      $$0293347 = $150;
      $$0296346 = $148;
      $$0297345 = $148;
      $$0298344 = 0;
      $$0305343 = $138;
      $$0313340 = 0;
      $$1307342 = $$0306;
      $$1311341 = $$0310;
      while (1) {
       _jcopy_block_row($$0305343, $2, 1);
       if ($$0298344 >>> 0 < $154 >>> 0) {
        $$1287 = HEAP16[$$1311341 + 128 >> 1] | 0;
        $$1291 = HEAP16[$$0305343 + 128 >> 1] | 0;
        $$1295 = HEAP16[$$1307342 + 128 >> 1] | 0;
       } else {
        $$1287 = $$0288350;
        $$1291 = $$0292348;
        $$1295 = $$0296346;
       }
       $165 = HEAP32[$117 >> 2] | 0;
       if (($165 | 0) != 0 & (HEAP16[$46 >> 1] | 0) == 0) {
        $170 = Math_imul($120, $$0293347 - $$1291 | 0) | 0;
        if (($170 | 0) > -1) {
         $173 = ($170 + $121 | 0) / ($124 | 0) | 0;
         $175 = 1 << $165;
         $$1 = ($165 | 0) > 0 ? (($173 | 0) < ($175 | 0) ? $173 : $175 + -1 | 0) : $173;
        } else {
         $179 = ($121 - $170 | 0) / ($124 | 0) | 0;
         $181 = 1 << $165;
         $$1 = 0 - (($165 | 0) > 0 ? (($179 | 0) < ($181 | 0) ? $179 : $181 + -1 | 0) : $179) | 0;
        }
        HEAP16[$46 >> 1] = $$1;
       }
       $186 = HEAP32[$118 >> 2] | 0;
       if (($186 | 0) != 0 & (HEAP16[$47 >> 1] | 0) == 0) {
        $191 = Math_imul($120, $$0296346 - $$0288350 | 0) | 0;
        if (($191 | 0) > -1) {
         $194 = ($191 + $123 | 0) / ($128 | 0) | 0;
         $196 = 1 << $186;
         $$3 = ($186 | 0) > 0 ? (($194 | 0) < ($196 | 0) ? $194 : $196 + -1 | 0) : $194;
        } else {
         $200 = ($123 - $191 | 0) / ($128 | 0) | 0;
         $202 = 1 << $186;
         $$3 = 0 - (($186 | 0) > 0 ? (($200 | 0) < ($202 | 0) ? $200 : $202 + -1 | 0) : $200) | 0;
        }
        HEAP16[$47 >> 1] = $$3;
       }
       $207 = HEAP32[$119 >> 2] | 0;
       if (($207 | 0) != 0 & (HEAP16[$48 >> 1] | 0) == 0) {
        $214 = Math_imul($126, $$0296346 - ($$0292348 << 1) + $$0288350 | 0) | 0;
        if (($214 | 0) > -1) {
         $217 = ($214 + $127 | 0) / ($132 | 0) | 0;
         $219 = 1 << $207;
         $$5 = ($207 | 0) > 0 ? (($217 | 0) < ($219 | 0) ? $217 : $219 + -1 | 0) : $217;
        } else {
         $223 = ($127 - $214 | 0) / ($132 | 0) | 0;
         $225 = 1 << $207;
         $$5 = 0 - (($207 | 0) > 0 ? (($223 | 0) < ($225 | 0) ? $223 : $225 + -1 | 0) : $223) | 0;
        }
        HEAP16[$48 >> 1] = $$5;
       }
       $230 = HEAP32[$122 >> 2] | 0;
       if (($230 | 0) != 0 & (HEAP16[$49 >> 1] | 0) == 0) {
        $237 = Math_imul($130, $$0297345 - $$0289349 - $$1295 + $$1287 | 0) | 0;
        if (($237 | 0) > -1) {
         $240 = ($237 + $131 | 0) / ($134 | 0) | 0;
         $242 = 1 << $230;
         $$7 = ($230 | 0) > 0 ? (($240 | 0) < ($242 | 0) ? $240 : $242 + -1 | 0) : $240;
        } else {
         $246 = ($131 - $237 | 0) / ($134 | 0) | 0;
         $248 = 1 << $230;
         $$7 = 0 - (($230 | 0) > 0 ? (($246 | 0) < ($248 | 0) ? $246 : $248 + -1 | 0) : $246) | 0;
        }
        HEAP16[$49 >> 1] = $$7;
       }
       $253 = HEAP32[$125 >> 2] | 0;
       if (($253 | 0) != 0 & (HEAP16[$50 >> 1] | 0) == 0) {
        $260 = Math_imul($126, $$0293347 - ($$0292348 << 1) + $$1291 | 0) | 0;
        if (($260 | 0) > -1) {
         $263 = ($260 + $133 | 0) / ($135 | 0) | 0;
         $265 = 1 << $253;
         $$9 = ($253 | 0) > 0 ? (($263 | 0) < ($265 | 0) ? $263 : $265 + -1 | 0) : $263;
        } else {
         $269 = ($133 - $260 | 0) / ($135 | 0) | 0;
         $271 = 1 << $253;
         $$9 = 0 - (($253 | 0) > 0 ? (($269 | 0) < ($271 | 0) ? $269 : $271 + -1 | 0) : $269) | 0;
        }
        HEAP16[$50 >> 1] = $$9;
       }
       FUNCTION_TABLE_viiiii[$109 & 63]($0, $$0312353, $2, $$0314351, $$0313340);
       $$0298344 = $$0298344 + 1 | 0;
       if ($$0298344 >>> 0 > $154 >>> 0) break; else {
        $$0297345$phi = $$0296346;
        $$0293347$phi = $$0292348;
        $$0289349$phi = $$0288350;
        $$0288350 = $$1287;
        $$0292348 = $$1291;
        $$0296346 = $$1295;
        $$0305343 = $$0305343 + 128 | 0;
        $$0313340 = (HEAP32[$129 >> 2] | 0) + $$0313340 | 0;
        $$1307342 = $$1307342 + 128 | 0;
        $$1311341 = $$1311341 + 128 | 0;
        $$0297345 = $$0297345$phi;
        $$0293347 = $$0293347$phi;
        $$0289349 = $$0289349$phi;
       }
      }
      $$0300352 = $$0300352 + 1 | 0;
      if (($$0300352 | 0) == ($$1302 | 0)) break; else $$0314351 = $$0314351 + (HEAP32[$136 >> 2] << 2) | 0;
     }
    }
   }
   $$0299354 = $$0299354 + 1 | 0;
   if (($$0299354 | 0) >= (HEAP32[$37 >> 2] | 0)) {
    $$pre$phiZ2D = $42;
    break;
   } else $$0312353 = $$0312353 + 88 | 0;
  }
 } else $$pre$phiZ2D = $0 + 156 | 0;
 $291 = (HEAP32[$$pre$phiZ2D >> 2] | 0) + 1 | 0;
 HEAP32[$$pre$phiZ2D >> 2] = $291;
 $$0284 = $291 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0 ? 3 : 4;
 STACKTOP = sp;
 return $$0284 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseSpecialNameEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$11 = 0, $$12 = 0, $$13 = 0, $$14 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$7 = 0, $$8 = 0, $$9 = 0, $1 = 0, $10 = 0, $16 = 0, $2 = 0, $22 = 0, $28 = 0, $36 = 0, $41 = 0, $42 = 0, $46 = 0, $52 = 0, $58 = 0, $64 = 0, $67 = 0, $76 = 0, $82 = 0, $84 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp + 8 | 0;
 $2 = sp;
 L1 : do switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 | 0) {
 case 84:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
   case 86:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$1 >> 2] = $10;
     if (!$10) $$0 = 0; else $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA12_KcRPNS0_4NodeEEEESC_DpOT0_($0, $1) | 0;
     $$14 = $$0;
     break L1;
     break;
    }
   case 84:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $16 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$1 >> 2] = $16;
     if (!$16) $$1 = 0; else $$1 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA9_KcRPNS0_4NodeEEEESC_DpOT0_($0, $1) | 0;
     $$14 = $$1;
     break L1;
     break;
    }
   case 73:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $22 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$1 >> 2] = $22;
     if (!$22) $$2 = 0; else $$2 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA14_KcRPNS0_4NodeEEEESC_DpOT0_($0, $1) | 0;
     $$14 = $$2;
     break L1;
     break;
    }
   case 83:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $28 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$1 >> 2] = $28;
     if (!$28) $$3 = 0; else $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA19_KcRPNS0_4NodeEEEESC_DpOT0_($0, $1) | 0;
     $$14 = $$3;
     break L1;
     break;
    }
   case 99:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseCallOffsetEv($0) | 0) {
      $$14 = 0;
      break L1;
     }
     if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseCallOffsetEv($0) | 0) {
      $$14 = 0;
      break L1;
     }
     $36 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$1 >> 2] = $36;
     if (!$36) $$4 = 0; else $$4 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA27_KcRPNS0_4NodeEEEESC_DpOT0_($0, $1) | 0;
     $$14 = $$4;
     break L1;
     break;
    }
   case 67:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $41 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
     $42 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($41) | 0;
     HEAP32[$1 >> 2] = $42;
     do if ($42) {
      __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($2, $0, 1);
      if (__ZNK12_GLOBAL__N_110StringView5emptyEv($2) | 0) {
       $$6 = 0;
       break;
      }
      if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) {
       $46 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($41) | 0;
       HEAP32[$2 >> 2] = $46;
       if (!$46) $$5 = 0; else $$5 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_21CtorVtableSpecialNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $2, $1) | 0;
       $$6 = $$5;
      } else $$6 = 0;
     } else $$6 = 0; while (0);
     $$14 = $$6;
     break L1;
     break;
    }
   case 87:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $52 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0, 0) | 0;
     HEAP32[$1 >> 2] = $52;
     if (!$52) $$7 = 0; else $$7 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA34_KcRPNS0_4NodeEEEESC_DpOT0_($0, 56739, $1) | 0;
     $$14 = $$7;
     break L1;
     break;
    }
   case 72:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $58 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0, 0) | 0;
     HEAP32[$1 >> 2] = $58;
     if (!$58) $$8 = 0; else $$8 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA41_KcRPNS0_4NodeEEEESC_DpOT0_($0, $1) | 0;
     $$14 = $$8;
     break L1;
     break;
    }
   default:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
     $64 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 == 118;
     if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseCallOffsetEv($0) | 0) {
      $$14 = 0;
      break L1;
     }
     $67 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$1 >> 2] = $67;
     do if ($67) if ($64) {
      $$9 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA18_KcRPNS0_4NodeEEEESC_DpOT0_($0, $1) | 0;
      break;
     } else {
      $$9 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA22_KcRPNS0_4NodeEEEESC_DpOT0_($0, $1) | 0;
      break;
     } else $$9 = 0; while (0);
     $$14 = $$9;
     break L1;
    }
   }
   break;
  }
 case 71:
  {
   switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
   case 86:
    {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
     $76 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0, 0) | 0;
     HEAP32[$1 >> 2] = $76;
     if (!$76) $$11 = 0; else $$11 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA20_KcRPNS0_4NodeEEEESC_DpOT0_($0, $1) | 0;
     $$14 = $$11;
     break L1;
     break;
    }
   case 82:
    break;
   default:
    {
     $$14 = 0;
     break L1;
    }
   }
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
   $82 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0, 0) | 0;
   HEAP32[$1 >> 2] = $82;
   if (!$82) $$13 = 0; else {
    $84 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10parseSeqIdEPm($0, $2) | 0;
    if ($84 | (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0)) $$12 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA25_KcRPNS0_4NodeEEEESC_DpOT0_($0, $1) | 0; else $$12 = 0;
    $$13 = $$12;
   }
   $$14 = $$13;
   break;
  }
 default:
  $$14 = 0;
 } while (0);
 STACKTOP = sp;
 return $$14 | 0;
}

function _ar2SelectTemplate($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0248 = 0, $$0250 = 0, $$0253 = 0, $$0255 = 0, $$0256 = 0, $$0257 = 0, $$0258 = 0, $$0259 = 0.0, $$0261 = 0.0, $$0263 = 0, $$0265 = 0, $$0266 = 0.0, $$0268 = 0, $$0270 = 0, $$0271 = 0.0, $$0273 = 0, $$0274 = 0, $$1 = 0, $$1249 = 0, $$1251 = 0, $$1254 = 0, $$1260 = 0.0, $$1262 = 0.0, $$1264 = 0, $$1267 = 0.0, $$1269 = 0, $$1272 = 0.0, $$1275 = 0, $$2 = 0, $$2252 = 0, $$279 = 0, $$280 = 0, $$3 = 0, $$4 = 0, $$pre = 0.0, $10 = 0, $101 = 0.0, $104 = 0.0, $11 = 0, $111 = 0.0, $112 = 0.0, $120 = 0.0, $123 = 0.0, $125 = 0.0, $128 = 0.0, $129 = 0, $130 = 0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0.0, $136 = 0.0, $138 = 0, $14 = 0.0, $140 = 0, $144 = 0.0, $147 = 0, $148 = 0.0, $153 = 0.0, $160 = 0, $161 = 0.0, $162 = 0.0, $163 = 0.0, $169 = 0, $17 = 0.0, $176 = 0.0, $181 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $19 = 0.0, $203 = 0, $206 = 0, $207 = 0, $219 = 0, $22 = 0.0, $220 = 0, $221 = 0, $24 = 0.0, $26 = 0.0, $30 = 0.0, $34 = 0.0, $37 = 0.0, $39 = 0.0, $41 = 0.0, $47 = 0.0, $50 = 0.0, $52 = 0.0, $55 = 0.0, $56 = 0, $6 = 0, $60 = 0.0, $64 = 0.0, $68 = 0.0, $7 = 0, $71 = 0.0, $73 = 0.0, $79 = 0.0, $8 = 0, $82 = 0.0, $84 = 0.0, $87 = 0.0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $94 = 0.0, $98 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $6 = sp + 20 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 12 | 0;
 $9 = sp + 8 | 0;
 $10 = sp + 4 | 0;
 $11 = sp;
 L1 : do if (($2 | 0) < 0) $$1 = -1; else switch ($2 | 0) {
 case 0:
  {
   $14 = +(($4 | 0) / 8 | 0 | 0);
   $17 = +(($4 * 7 | 0) / 8 | 0 | 0);
   $19 = +(($5 | 0) / 8 | 0 | 0);
   $22 = +(($5 * 7 | 0) / 8 | 0 | 0);
   $24 = +(($4 | 0) / 2 | 0 | 0);
   $26 = +(($5 | 0) / 2 | 0 | 0);
   $$0259 = 0.0;
   $$0273 = 0;
   $$0274 = -1;
   L38 : while (1) {
    switch (HEAP32[$0 + ($$0273 * 24 | 0) + 12 >> 2] | 0) {
    case -1:
     {
      break L38;
      break;
     }
    case 0:
     {
      $30 = +HEAPF32[$0 + ($$0273 * 24 | 0) + 16 >> 2];
      if ((!($30 < $14 | $30 > $17) ? ($34 = +HEAPF32[$0 + ($$0273 * 24 | 0) + 20 >> 2], !($34 < $19 | $34 > $22)) : 0) ? ($37 = $30 - $24, $39 = $34 - $26, $41 = $37 * $37 + $39 * $39, $41 > $$0259) : 0) {
       $$1260 = $41;
       $$1275 = $$0273;
      } else {
       $$1260 = $$0259;
       $$1275 = $$0274;
      }
      break;
     }
    default:
     {
      $$1260 = $$0259;
      $$1275 = $$0274;
     }
    }
    $$0259 = $$1260;
    $$0273 = $$0273 + 1 | 0;
    $$0274 = $$1275;
   }
   if (($$0274 | 0) == -1) {
    $$1 = -1;
    break L1;
   }
   HEAP32[$0 + ($$0274 * 24 | 0) + 12 >> 2] = 1;
   $$1 = $$0274;
   break L1;
   break;
  }
 case 1:
  {
   $47 = +(($4 | 0) / 8 | 0 | 0);
   $50 = +(($4 * 7 | 0) / 8 | 0 | 0);
   $52 = +(($5 | 0) / 8 | 0 | 0);
   $55 = +(($5 * 7 | 0) / 8 | 0 | 0);
   $56 = $3 + 4 | 0;
   $$0268 = -1;
   $$0270 = 0;
   $$0271 = 0.0;
   L49 : while (1) {
    switch (HEAP32[$0 + ($$0270 * 24 | 0) + 12 >> 2] | 0) {
    case -1:
     {
      break L49;
      break;
     }
    case 0:
     {
      $60 = +HEAPF32[$0 + ($$0270 * 24 | 0) + 16 >> 2];
      if ((!($60 < $47 | $60 > $50) ? ($64 = +HEAPF32[$0 + ($$0270 * 24 | 0) + 20 >> 2], !($64 < $52 | $64 > $55)) : 0) ? ($68 = $60 - +HEAPF32[$3 >> 2], $71 = $64 - +HEAPF32[$56 >> 2], $73 = $68 * $68 + $71 * $71, $73 > $$0271) : 0) {
       $$1269 = $$0270;
       $$1272 = $73;
      } else {
       $$1269 = $$0268;
       $$1272 = $$0271;
      }
      break;
     }
    default:
     {
      $$1269 = $$0268;
      $$1272 = $$0271;
     }
    }
    $$0268 = $$1269;
    $$0270 = $$0270 + 1 | 0;
    $$0271 = $$1272;
   }
   if (($$0268 | 0) == -1) {
    $$1 = -1;
    break L1;
   }
   HEAP32[$0 + ($$0268 * 24 | 0) + 12 >> 2] = 1;
   $$1 = $$0268;
   break L1;
   break;
  }
 case 2:
  {
   $79 = +(($4 | 0) / 8 | 0 | 0);
   $82 = +(($4 * 7 | 0) / 8 | 0 | 0);
   $84 = +(($5 | 0) / 8 | 0 | 0);
   $87 = +(($5 * 7 | 0) / 8 | 0 | 0);
   $88 = $3 + 12 | 0;
   $89 = $3 + 4 | 0;
   $90 = $3 + 8 | 0;
   $$0263 = -1;
   $$0265 = 0;
   $$0266 = 0.0;
   L60 : while (1) {
    switch (HEAP32[$0 + ($$0265 * 24 | 0) + 12 >> 2] | 0) {
    case -1:
     {
      break L60;
      break;
     }
    case 0:
     {
      $94 = +HEAPF32[$0 + ($$0265 * 24 | 0) + 16 >> 2];
      if ((!($94 < $79 | $94 > $82) ? ($98 = +HEAPF32[$0 + ($$0265 * 24 | 0) + 20 >> 2], !($98 < $84 | $98 > $87)) : 0) ? ($101 = +HEAPF32[$3 >> 2], $104 = +HEAPF32[$89 >> 2], $111 = ($94 - $101) * (+HEAPF32[$88 >> 2] - $104) - ($98 - $104) * (+HEAPF32[$90 >> 2] - $101), $112 = $111 * $111, $112 > $$0266) : 0) {
       $$1264 = $$0265;
       $$1267 = $112;
      } else {
       $$1264 = $$0263;
       $$1267 = $$0266;
      }
      break;
     }
    default:
     {
      $$1264 = $$0263;
      $$1267 = $$0266;
     }
    }
    $$0263 = $$1264;
    $$0265 = $$0265 + 1 | 0;
    $$0266 = $$1267;
   }
   if (($$0263 | 0) == -1) {
    $$1 = -1;
    break L1;
   }
   HEAP32[$0 + ($$0263 * 24 | 0) + 12 >> 2] = 1;
   $$1 = $$0263;
   break L1;
   break;
  }
 case 3:
  {
   _ar2GetVectorAngle($3, $3 + 8 | 0, $6, $7);
   _ar2GetVectorAngle($3, $3 + 16 | 0, $8, $9);
   $120 = +(($4 | 0) / 8 | 0 | 0);
   $123 = +(($4 * 7 | 0) / 8 | 0 | 0);
   $125 = +(($5 | 0) / 8 | 0 | 0);
   $128 = +(($5 * 7 | 0) / 8 | 0 | 0);
   $129 = $3 + 24 | 0;
   $130 = $3 + 28 | 0;
   $131 = +HEAPF32[$8 >> 2];
   $132 = +HEAPF32[$7 >> 2];
   $133 = $131 * $132;
   $134 = +HEAPF32[$9 >> 2];
   $135 = +HEAPF32[$6 >> 2];
   $136 = $134 * $135;
   $138 = !($133 - $136 >= 0.0);
   $140 = !($136 - $133 >= 0.0);
   $$279 = $138 ? 2 : 1;
   $$280 = $138 ? 1 : 2;
   $$0253 = -1;
   $$0255 = 0;
   $$0261 = 0.0;
   L71 : while (1) {
    L73 : do switch (HEAP32[$0 + ($$0255 * 24 | 0) + 12 >> 2] | 0) {
    case -1:
     {
      break L71;
      break;
     }
    case 0:
     {
      $144 = +HEAPF32[$0 + ($$0255 * 24 | 0) + 16 >> 2];
      if (!($144 < $120 | $144 > $123) ? ($147 = $0 + ($$0255 * 24 | 0) + 20 | 0, $148 = +HEAPF32[$147 >> 2], !($148 < $125 | $148 > $128)) : 0) {
       HEAPF32[$129 >> 2] = $144;
       HEAP32[$130 >> 2] = HEAP32[$147 >> 2];
       _ar2GetVectorAngle($3, $129, $10, $11);
       $$pre = +HEAPF32[$10 >> 2];
       if (!$138) {
        $153 = +HEAPF32[$11 >> 2];
        if (!($132 * $$pre - $135 * $153 >= 0.0)) {
         $163 = $153;
         label = 39;
        } else {
         $160 = !($134 * $$pre - $131 * $153 >= 0.0);
         $$0256 = $160 ? 2 : 3;
         $$0257 = $160 ? 3 : 2;
         $$0258 = 1;
        }
       } else {
        $163 = +HEAPF32[$11 >> 2];
        label = 39;
       }
       do if ((label | 0) == 39) {
        label = 0;
        $161 = $134 * $$pre;
        $162 = $131 * $163;
        if ($140 | !($161 - $162 >= 0.0)) if ($162 - $161 >= 0.0 ? !($135 * $163 - $132 * $$pre >= 0.0) : 1) {
         $$1254 = $$0253;
         $$1262 = $$0261;
         break L73;
        } else {
         $$0256 = $$280;
         $$0257 = $$279;
         $$0258 = 3;
         break;
        } else {
         $169 = !($132 * $$pre - $135 * $163 >= 0.0);
         $$0256 = $169 ? 1 : 3;
         $$0257 = $169 ? 3 : 1;
         $$0258 = 2;
         break;
        }
       } while (0);
       $176 = +_ar2GetRegionArea($3, $$0258, $$0257, $$0256);
       if ($176 > $$0261) {
        $$1254 = $$0255;
        $$1262 = $176;
       } else {
        $$1254 = $$0253;
        $$1262 = $$0261;
       }
      } else {
       $$1254 = $$0253;
       $$1262 = $$0261;
      }
      break;
     }
    default:
     {
      $$1254 = $$0253;
      $$1262 = $$0261;
     }
    } while (0);
    $$0253 = $$1254;
    $$0255 = $$0255 + 1 | 0;
    $$0261 = $$1262;
   }
   if (($$0253 | 0) != -1) HEAP32[$0 + ($$0253 * 24 | 0) + 12 >> 2] = 1;
   $$1 = $$0253;
   break L1;
   break;
  }
 default:
  {
   $$0250 = 0;
   L5 : while (1) {
    $181 = $1 + ($$0250 * 24 | 0) + 12 | 0;
    L7 : do switch (HEAP32[$181 >> 2] | 0) {
    case -1:
     {
      break L5;
      break;
     }
    case 0:
     {
      HEAP32[$181 >> 2] = 1;
      $183 = $1 + ($$0250 * 24 | 0) | 0;
      $184 = $1 + ($$0250 * 24 | 0) + 4 | 0;
      $185 = $1 + ($$0250 * 24 | 0) + 8 | 0;
      $$0248 = 0;
      while (1) {
       $186 = $0 + ($$0248 * 24 | 0) + 12 | 0;
       switch (HEAP32[$186 >> 2] | 0) {
       case -1:
        {
         break L7;
         break;
        }
       case 0:
        {
         if (((HEAP32[$183 >> 2] | 0) == (HEAP32[$0 + ($$0248 * 24 | 0) >> 2] | 0) ? (HEAP32[$184 >> 2] | 0) == (HEAP32[$0 + ($$0248 * 24 | 0) + 4 >> 2] | 0) : 0) ? (HEAP32[$185 >> 2] | 0) == (HEAP32[$0 + ($$0248 * 24 | 0) + 8 >> 2] | 0) : 0) {
          label = 55;
          break L5;
         }
         break;
        }
       default:
        {}
       }
       $$0248 = $$0248 + 1 | 0;
      }
      break;
     }
    default:
     {}
    } while (0);
    $$0250 = $$0250 + 1 | 0;
   }
   if ((label | 0) == 55) {
    HEAP32[$186 >> 2] = 1;
    $$1 = $$0248;
    break L1;
   }
   HEAP32[$1 + 12 >> 2] = -1;
   $203 = HEAP32[16309] | 0;
   if (!$203) {
    _srand(_time(0) | 0);
    $207 = HEAP32[16309] | 0;
   } else $207 = $203;
   $206 = $207 + 1 | 0;
   HEAP32[16309] = ($206 | 0) == 128 ? 0 : $206;
   $$1249 = 0;
   $$1251 = 0;
   L23 : while (1) {
    switch (HEAP32[$0 + ($$1251 * 24 | 0) + 12 >> 2] | 0) {
    case -1:
     {
      break L23;
      break;
     }
    case 0:
     {
      $$2 = $$1249 + 1 | 0;
      break;
     }
    default:
     $$2 = $$1249;
    }
    $$1249 = $$2;
    $$1251 = $$1251 + 1 | 0;
   }
   if (!$$1249) {
    $$1 = -1;
    break L1;
   }
   $219 = ~~(+($$1249 | 0) * +(_rand() | 0) * 4.656612873077393e-10);
   $$2252 = 0;
   $$3 = 0;
   L30 : while (1) {
    $220 = $0 + ($$2252 * 24 | 0) + 12 | 0;
    $221 = HEAP32[$220 >> 2] | 0;
    switch ($221 | 0) {
    case -1:
     {
      $$1 = $221;
      break L1;
      break;
     }
    case 0:
     {
      if (($$3 | 0) == ($219 | 0)) break L30;
      $$4 = $$3 + 1 | 0;
      break;
     }
    default:
     $$4 = $$3;
    }
    $$2252 = $$2252 + 1 | 0;
    $$3 = $$4;
   }
   HEAP32[$220 >> 2] = 1;
   $$1 = $$2252;
   break L1;
  }
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function _jpeg_idct_4x8($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0199209 = 0, $$0201208 = 0, $$0203207 = 0, $$0210 = 0, $$sink = 0, $$sink212 = 0, $100 = 0, $101 = 0, $103 = 0, $106 = 0, $107 = 0, $109 = 0, $11 = 0, $113 = 0, $115 = 0, $117 = 0, $121 = 0, $123 = 0, $13 = 0, $149 = 0, $151 = 0, $153 = 0, $155 = 0, $157 = 0, $159 = 0, $161 = 0, $163 = 0, $165 = 0, $167 = 0, $169 = 0, $196 = 0, $198 = 0, $200 = 0, $202 = 0, $204 = 0, $206 = 0, $208 = 0, $210 = 0, $212 = 0, $214 = 0, $241 = 0, $243 = 0, $245 = 0, $247 = 0, $249 = 0, $251 = 0, $253 = 0, $255 = 0, $257 = 0, $259 = 0, $286 = 0, $288 = 0, $290 = 0, $292 = 0, $294 = 0, $296 = 0, $298 = 0, $300 = 0, $302 = 0, $304 = 0, $331 = 0, $333 = 0, $335 = 0, $337 = 0, $339 = 0, $341 = 0, $343 = 0, $345 = 0, $347 = 0, $349 = 0, $35 = 0, $376 = 0, $378 = 0, $380 = 0, $382 = 0, $384 = 0, $386 = 0, $388 = 0, $390 = 0, $392 = 0, $394 = 0, $421 = 0, $423 = 0, $425 = 0, $427 = 0, $429 = 0, $431 = 0, $433 = 0, $435 = 0, $437 = 0, $439 = 0, $466 = 0, $468 = 0, $470 = 0, $472 = 0, $474 = 0, $476 = 0, $478 = 0, $480 = 0, $482 = 0, $484 = 0, $5 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $58 = 0, $61 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $83 = 0, $89 = 0, $95 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0199209 = $5;
 $$0201208 = HEAP32[$1 + 84 >> 2] | 0;
 $$0203207 = $2;
 $$0210 = 4;
 while (1) {
  $11 = HEAP16[$$0203207 + 16 >> 1] | 0;
  $13 = HEAP16[$$0203207 + 32 >> 1] | 0;
  if (!(($11 | $13) << 16 >> 16)) if (((((HEAP16[$$0203207 + 48 >> 1] | 0) == 0 ? (HEAP16[$$0203207 + 64 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0203207 + 80 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0203207 + 96 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0203207 + 112 >> 1] | 0) == 0 : 0) {
   $35 = Math_imul(HEAP16[$$0203207 >> 1] << 2, HEAP32[$$0201208 >> 2] | 0) | 0;
   HEAP32[$$0199209 >> 2] = $35;
   HEAP32[$$0199209 + 16 >> 2] = $35;
   HEAP32[$$0199209 + 32 >> 2] = $35;
   HEAP32[$$0199209 + 48 >> 2] = $35;
   HEAP32[$$0199209 + 64 >> 2] = $35;
   HEAP32[$$0199209 + 80 >> 2] = $35;
   HEAP32[$$0199209 + 96 >> 2] = $35;
   $$sink = $35;
   $$sink212 = 28;
  } else {
   $58 = 0;
   label = 9;
  } else {
   $58 = $13;
   label = 9;
  }
  if ((label | 0) == 9) {
   label = 0;
   $53 = Math_imul(HEAP16[$$0203207 + 64 >> 1] << 13, HEAP32[$$0201208 + 128 >> 2] | 0) | 0;
   $54 = Math_imul(HEAP16[$$0203207 >> 1] << 13, HEAP32[$$0201208 >> 2] | 0) | 0 | 1024;
   $55 = $53 + $54 | 0;
   $56 = $54 - $53 | 0;
   $61 = Math_imul(HEAP32[$$0201208 + 64 >> 2] | 0, $58 << 16 >> 16) | 0;
   $67 = Math_imul(HEAP32[$$0201208 + 192 >> 2] | 0, HEAP16[$$0203207 + 96 >> 1] | 0) | 0;
   $69 = ($67 + $61 | 0) * 4433 | 0;
   $71 = $69 + ($61 * 6270 | 0) | 0;
   $73 = $69 + (Math_imul($67, -15137) | 0) | 0;
   $74 = $71 + $55 | 0;
   $75 = $55 - $71 | 0;
   $76 = $73 + $56 | 0;
   $77 = $56 - $73 | 0;
   $83 = Math_imul(HEAP32[$$0201208 + 224 >> 2] | 0, HEAP16[$$0203207 + 112 >> 1] | 0) | 0;
   $89 = Math_imul(HEAP32[$$0201208 + 160 >> 2] | 0, HEAP16[$$0203207 + 80 >> 1] | 0) | 0;
   $95 = Math_imul(HEAP32[$$0201208 + 96 >> 2] | 0, HEAP16[$$0203207 + 48 >> 1] | 0) | 0;
   $99 = Math_imul(HEAP32[$$0201208 + 32 >> 2] | 0, $11 << 16 >> 16) | 0;
   $100 = $95 + $83 | 0;
   $101 = $99 + $89 | 0;
   $103 = ($101 + $100 | 0) * 9633 | 0;
   $106 = $103 + (Math_imul($100, -16069) | 0) | 0;
   $107 = $103 + (Math_imul($101, -3196) | 0) | 0;
   $109 = Math_imul($99 + $83 | 0, -7373) | 0;
   $113 = $109 + ($83 * 2446 | 0) + $106 | 0;
   $115 = $109 + ($99 * 12299 | 0) + $107 | 0;
   $117 = Math_imul($95 + $89 | 0, -20995) | 0;
   $121 = $117 + ($89 * 16819 | 0) + $107 | 0;
   $123 = $117 + ($95 * 25172 | 0) + $106 | 0;
   HEAP32[$$0199209 >> 2] = $115 + $74 >> 11;
   HEAP32[$$0199209 + 112 >> 2] = $74 - $115 >> 11;
   HEAP32[$$0199209 + 16 >> 2] = $123 + $76 >> 11;
   HEAP32[$$0199209 + 96 >> 2] = $76 - $123 >> 11;
   HEAP32[$$0199209 + 32 >> 2] = $121 + $77 >> 11;
   HEAP32[$$0199209 + 80 >> 2] = $77 - $121 >> 11;
   HEAP32[$$0199209 + 48 >> 2] = $113 + $75 >> 11;
   $$sink = $75 - $113 >> 11;
   $$sink212 = 16;
  }
  HEAP32[$$0199209 + ($$sink212 << 2) >> 2] = $$sink;
  if ($$0210 >>> 0 > 1) {
   $$0199209 = $$0199209 + 4 | 0;
   $$0201208 = $$0201208 + 4 | 0;
   $$0203207 = $$0203207 + 2 | 0;
   $$0210 = $$0210 + -1 | 0;
  } else break;
 }
 $149 = $7 + -384 | 0;
 $151 = (HEAP32[$3 >> 2] | 0) + $4 | 0;
 $153 = (HEAP32[$5 >> 2] | 0) + 16400 | 0;
 $155 = HEAP32[$5 + 8 >> 2] | 0;
 $157 = $153 + $155 << 13;
 $159 = $153 - $155 << 13;
 $161 = HEAP32[$5 + 4 >> 2] | 0;
 $163 = HEAP32[$5 + 12 >> 2] | 0;
 $165 = ($163 + $161 | 0) * 4433 | 0;
 $167 = $165 + ($161 * 6270 | 0) | 0;
 $169 = $165 + (Math_imul($163, -15137) | 0) | 0;
 HEAP8[$151 >> 0] = HEAP8[$149 + (($167 + $157 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$151 + 3 >> 0] = HEAP8[$149 + (($157 - $167 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$151 + 1 >> 0] = HEAP8[$149 + (($169 + $159 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$151 + 2 >> 0] = HEAP8[$149 + (($159 - $169 | 0) >>> 18 & 1023) >> 0] | 0;
 $196 = (HEAP32[$3 + 4 >> 2] | 0) + $4 | 0;
 $198 = (HEAP32[$5 + 16 >> 2] | 0) + 16400 | 0;
 $200 = HEAP32[$5 + 24 >> 2] | 0;
 $202 = $198 + $200 << 13;
 $204 = $198 - $200 << 13;
 $206 = HEAP32[$5 + 20 >> 2] | 0;
 $208 = HEAP32[$5 + 28 >> 2] | 0;
 $210 = ($208 + $206 | 0) * 4433 | 0;
 $212 = $210 + ($206 * 6270 | 0) | 0;
 $214 = $210 + (Math_imul($208, -15137) | 0) | 0;
 HEAP8[$196 >> 0] = HEAP8[$149 + (($212 + $202 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$196 + 3 >> 0] = HEAP8[$149 + (($202 - $212 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$196 + 1 >> 0] = HEAP8[$149 + (($214 + $204 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$196 + 2 >> 0] = HEAP8[$149 + (($204 - $214 | 0) >>> 18 & 1023) >> 0] | 0;
 $241 = (HEAP32[$3 + 8 >> 2] | 0) + $4 | 0;
 $243 = (HEAP32[$5 + 32 >> 2] | 0) + 16400 | 0;
 $245 = HEAP32[$5 + 40 >> 2] | 0;
 $247 = $243 + $245 << 13;
 $249 = $243 - $245 << 13;
 $251 = HEAP32[$5 + 36 >> 2] | 0;
 $253 = HEAP32[$5 + 44 >> 2] | 0;
 $255 = ($253 + $251 | 0) * 4433 | 0;
 $257 = $255 + ($251 * 6270 | 0) | 0;
 $259 = $255 + (Math_imul($253, -15137) | 0) | 0;
 HEAP8[$241 >> 0] = HEAP8[$149 + (($257 + $247 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$241 + 3 >> 0] = HEAP8[$149 + (($247 - $257 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$241 + 1 >> 0] = HEAP8[$149 + (($259 + $249 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$241 + 2 >> 0] = HEAP8[$149 + (($249 - $259 | 0) >>> 18 & 1023) >> 0] | 0;
 $286 = (HEAP32[$3 + 12 >> 2] | 0) + $4 | 0;
 $288 = (HEAP32[$5 + 48 >> 2] | 0) + 16400 | 0;
 $290 = HEAP32[$5 + 56 >> 2] | 0;
 $292 = $288 + $290 << 13;
 $294 = $288 - $290 << 13;
 $296 = HEAP32[$5 + 52 >> 2] | 0;
 $298 = HEAP32[$5 + 60 >> 2] | 0;
 $300 = ($298 + $296 | 0) * 4433 | 0;
 $302 = $300 + ($296 * 6270 | 0) | 0;
 $304 = $300 + (Math_imul($298, -15137) | 0) | 0;
 HEAP8[$286 >> 0] = HEAP8[$149 + (($302 + $292 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$286 + 3 >> 0] = HEAP8[$149 + (($292 - $302 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$286 + 1 >> 0] = HEAP8[$149 + (($304 + $294 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$286 + 2 >> 0] = HEAP8[$149 + (($294 - $304 | 0) >>> 18 & 1023) >> 0] | 0;
 $331 = (HEAP32[$3 + 16 >> 2] | 0) + $4 | 0;
 $333 = (HEAP32[$5 + 64 >> 2] | 0) + 16400 | 0;
 $335 = HEAP32[$5 + 72 >> 2] | 0;
 $337 = $333 + $335 << 13;
 $339 = $333 - $335 << 13;
 $341 = HEAP32[$5 + 68 >> 2] | 0;
 $343 = HEAP32[$5 + 76 >> 2] | 0;
 $345 = ($343 + $341 | 0) * 4433 | 0;
 $347 = $345 + ($341 * 6270 | 0) | 0;
 $349 = $345 + (Math_imul($343, -15137) | 0) | 0;
 HEAP8[$331 >> 0] = HEAP8[$149 + (($347 + $337 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$331 + 3 >> 0] = HEAP8[$149 + (($337 - $347 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$331 + 1 >> 0] = HEAP8[$149 + (($349 + $339 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$331 + 2 >> 0] = HEAP8[$149 + (($339 - $349 | 0) >>> 18 & 1023) >> 0] | 0;
 $376 = (HEAP32[$3 + 20 >> 2] | 0) + $4 | 0;
 $378 = (HEAP32[$5 + 80 >> 2] | 0) + 16400 | 0;
 $380 = HEAP32[$5 + 88 >> 2] | 0;
 $382 = $378 + $380 << 13;
 $384 = $378 - $380 << 13;
 $386 = HEAP32[$5 + 84 >> 2] | 0;
 $388 = HEAP32[$5 + 92 >> 2] | 0;
 $390 = ($388 + $386 | 0) * 4433 | 0;
 $392 = $390 + ($386 * 6270 | 0) | 0;
 $394 = $390 + (Math_imul($388, -15137) | 0) | 0;
 HEAP8[$376 >> 0] = HEAP8[$149 + (($392 + $382 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$376 + 3 >> 0] = HEAP8[$149 + (($382 - $392 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$376 + 1 >> 0] = HEAP8[$149 + (($394 + $384 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$376 + 2 >> 0] = HEAP8[$149 + (($384 - $394 | 0) >>> 18 & 1023) >> 0] | 0;
 $421 = (HEAP32[$3 + 24 >> 2] | 0) + $4 | 0;
 $423 = (HEAP32[$5 + 96 >> 2] | 0) + 16400 | 0;
 $425 = HEAP32[$5 + 104 >> 2] | 0;
 $427 = $423 + $425 << 13;
 $429 = $423 - $425 << 13;
 $431 = HEAP32[$5 + 100 >> 2] | 0;
 $433 = HEAP32[$5 + 108 >> 2] | 0;
 $435 = ($433 + $431 | 0) * 4433 | 0;
 $437 = $435 + ($431 * 6270 | 0) | 0;
 $439 = $435 + (Math_imul($433, -15137) | 0) | 0;
 HEAP8[$421 >> 0] = HEAP8[$149 + (($437 + $427 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$421 + 3 >> 0] = HEAP8[$149 + (($427 - $437 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$421 + 1 >> 0] = HEAP8[$149 + (($439 + $429 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$421 + 2 >> 0] = HEAP8[$149 + (($429 - $439 | 0) >>> 18 & 1023) >> 0] | 0;
 $466 = (HEAP32[$3 + 28 >> 2] | 0) + $4 | 0;
 $468 = (HEAP32[$5 + 112 >> 2] | 0) + 16400 | 0;
 $470 = HEAP32[$5 + 120 >> 2] | 0;
 $472 = $468 + $470 << 13;
 $474 = $468 - $470 << 13;
 $476 = HEAP32[$5 + 116 >> 2] | 0;
 $478 = HEAP32[$5 + 124 >> 2] | 0;
 $480 = ($478 + $476 | 0) * 4433 | 0;
 $482 = $480 + ($476 * 6270 | 0) | 0;
 $484 = $480 + (Math_imul($478, -15137) | 0) | 0;
 HEAP8[$466 >> 0] = HEAP8[$149 + (($482 + $472 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$466 + 3 >> 0] = HEAP8[$149 + (($472 - $482 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$466 + 1 >> 0] = HEAP8[$149 + (($484 + $474 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$466 + 2 >> 0] = HEAP8[$149 + (($474 - $484 | 0) >>> 18 & 1023) >> 0] | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i43 = 0, $$0$i$i$i51 = 0, $$0$i$i$i59 = 0, $$0$i$i$i67 = 0, $$0$i$i$i75 = 0, $$0$i$i$i83 = 0, $$0$i$i$i91 = 0, $10 = 0, $100 = 0, $104 = 0, $11 = 0, $112 = 0, $115 = 0, $119 = 0, $12 = 0, $127 = 0, $131 = 0, $135 = 0, $138 = 0, $142 = 0, $150 = 0, $153 = 0, $157 = 0, $16 = 0, $20 = 0, $23 = 0, $27 = 0, $35 = 0, $38 = 0, $42 = 0, $50 = 0, $54 = 0, $58 = 0, $61 = 0, $65 = 0, $73 = 0, $76 = 0, $80 = 0, $89 = 0, $93 = 0, $97 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($0) {
  $12 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 66744) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 44 >> 2] & 255]($10, $12);
  $16 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $16;
  HEAP8[$2 + 1 >> 0] = $16 >> 8;
  HEAP8[$2 + 2 >> 0] = $16 >> 16;
  HEAP8[$2 + 3 >> 0] = $16 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 255]($11, $12);
  $20 = $8 + 11 | 0;
  if ((HEAP8[$20 >> 0] | 0) < 0) {
   $23 = HEAP32[$8 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($23, $10);
   HEAP32[$8 + 4 >> 2] = 0;
   if ((HEAP8[$20 >> 0] | 0) < 0) {
    $27 = $8 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$8 >> 2] | 0, HEAP32[$27 >> 2] & 2147483647);
    HEAP32[$27 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
   HEAP8[$20 >> 0] = 0;
  };
  HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i = 0;
  while (1) {
   if (($$0$i$i$i | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i << 2) >> 2] = 0;
   $$0$i$i$i = $$0$i$i$i + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 255]($11, $12);
  $35 = $7 + 11 | 0;
  if ((HEAP8[$35 >> 0] | 0) < 0) {
   $38 = HEAP32[$7 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($38, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   if ((HEAP8[$35 >> 0] | 0) < 0) {
    $42 = $7 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$7 >> 2] | 0, HEAP32[$42 >> 2] & 2147483647);
    HEAP32[$42 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7, $10);
   HEAP8[$35 >> 0] = 0;
  };
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i43 = 0;
  while (1) {
   if (($$0$i$i$i43 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i43 << 2) >> 2] = 0;
   $$0$i$i$i43 = $$0$i$i$i43 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $50 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP8[$3 >> 0] = $50;
  $54 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  HEAP8[$4 >> 0] = $54;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 255]($11, $12);
  $58 = $5 + 11 | 0;
  if ((HEAP8[$58 >> 0] | 0) < 0) {
   $61 = HEAP32[$5 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($61, $10);
   HEAP32[$5 + 4 >> 2] = 0;
   if ((HEAP8[$58 >> 0] | 0) < 0) {
    $65 = $5 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$5 >> 2] | 0, HEAP32[$65 >> 2] & 2147483647);
    HEAP32[$65 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5, $10);
   HEAP8[$58 >> 0] = 0;
  };
  HEAP32[$5 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$5 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$5 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i51 = 0;
  while (1) {
   if (($$0$i$i$i51 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i51 << 2) >> 2] = 0;
   $$0$i$i$i51 = $$0$i$i$i51 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 255]($11, $12);
  $73 = $6 + 11 | 0;
  if ((HEAP8[$73 >> 0] | 0) < 0) {
   $76 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($76, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   if ((HEAP8[$73 >> 0] | 0) < 0) {
    $80 = $6 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$6 >> 2] | 0, HEAP32[$80 >> 2] & 2147483647);
    HEAP32[$80 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$73 >> 0] = 0;
  };
  HEAP32[$6 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i59 = 0;
  while (1) {
   if (($$0$i$i$i59 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i59 << 2) >> 2] = 0;
   $$0$i$i$i59 = $$0$i$i$i59 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $89 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 66736) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$89 >> 2] | 0) + 44 >> 2] & 255]($10, $89);
  $93 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $93;
  HEAP8[$2 + 1 >> 0] = $93 >> 8;
  HEAP8[$2 + 2 >> 0] = $93 >> 16;
  HEAP8[$2 + 3 >> 0] = $93 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$89 >> 2] | 0) + 32 >> 2] & 255]($11, $89);
  $97 = $8 + 11 | 0;
  if ((HEAP8[$97 >> 0] | 0) < 0) {
   $100 = HEAP32[$8 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($100, $10);
   HEAP32[$8 + 4 >> 2] = 0;
   if ((HEAP8[$97 >> 0] | 0) < 0) {
    $104 = $8 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$8 >> 2] | 0, HEAP32[$104 >> 2] & 2147483647);
    HEAP32[$104 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
   HEAP8[$97 >> 0] = 0;
  };
  HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i67 = 0;
  while (1) {
   if (($$0$i$i$i67 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i67 << 2) >> 2] = 0;
   $$0$i$i$i67 = $$0$i$i$i67 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$89 >> 2] | 0) + 28 >> 2] & 255]($11, $89);
  $112 = $7 + 11 | 0;
  if ((HEAP8[$112 >> 0] | 0) < 0) {
   $115 = HEAP32[$7 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($115, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   if ((HEAP8[$112 >> 0] | 0) < 0) {
    $119 = $7 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$7 >> 2] | 0, HEAP32[$119 >> 2] & 2147483647);
    HEAP32[$119 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7, $10);
   HEAP8[$112 >> 0] = 0;
  };
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i75 = 0;
  while (1) {
   if (($$0$i$i$i75 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i75 << 2) >> 2] = 0;
   $$0$i$i$i75 = $$0$i$i$i75 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $127 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$89 >> 2] | 0) + 12 >> 2] & 127]($89) | 0;
  HEAP8[$3 >> 0] = $127;
  $131 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$89 >> 2] | 0) + 16 >> 2] & 127]($89) | 0;
  HEAP8[$4 >> 0] = $131;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$89 >> 2] | 0) + 20 >> 2] & 255]($11, $89);
  $135 = $5 + 11 | 0;
  if ((HEAP8[$135 >> 0] | 0) < 0) {
   $138 = HEAP32[$5 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($138, $10);
   HEAP32[$5 + 4 >> 2] = 0;
   if ((HEAP8[$135 >> 0] | 0) < 0) {
    $142 = $5 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$5 >> 2] | 0, HEAP32[$142 >> 2] & 2147483647);
    HEAP32[$142 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5, $10);
   HEAP8[$135 >> 0] = 0;
  };
  HEAP32[$5 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$5 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$5 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i83 = 0;
  while (1) {
   if (($$0$i$i$i83 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i83 << 2) >> 2] = 0;
   $$0$i$i$i83 = $$0$i$i$i83 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$89 >> 2] | 0) + 24 >> 2] & 255]($11, $89);
  $150 = $6 + 11 | 0;
  if ((HEAP8[$150 >> 0] | 0) < 0) {
   $153 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($153, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   if ((HEAP8[$150 >> 0] | 0) < 0) {
    $157 = $6 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$6 >> 2] | 0, HEAP32[$157 >> 2] & 2147483647);
    HEAP32[$157 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$150 >> 0] = 0;
  };
  HEAP32[$6 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i91 = 0;
  while (1) {
   if (($$0$i$i$i91 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i91 << 2) >> 2] = 0;
   $$0$i$i$i91 = $$0$i$i$i91 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$89 >> 2] | 0) + 36 >> 2] & 127]($89) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i43 = 0, $$0$i$i$i47 = 0, $$0$i$i$i54 = 0, $$0$i$i$i62 = 0, $$0$i$i$i70 = 0, $$0$i$i$i78 = 0, $$0$i$i$i86 = 0, $10 = 0, $101 = 0, $11 = 0, $112 = 0, $113 = 0, $116 = 0, $12 = 0, $127 = 0, $131 = 0, $135 = 0, $138 = 0, $142 = 0, $150 = 0, $151 = 0, $154 = 0, $16 = 0, $20 = 0, $21 = 0, $24 = 0, $35 = 0, $36 = 0, $39 = 0, $50 = 0, $54 = 0, $58 = 0, $61 = 0, $65 = 0, $73 = 0, $74 = 0, $77 = 0, $89 = 0, $93 = 0, $97 = 0, $98 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($0) {
  $12 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 66760) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 44 >> 2] & 255]($10, $12);
  $16 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $16;
  HEAP8[$2 + 1 >> 0] = $16 >> 8;
  HEAP8[$2 + 2 >> 0] = $16 >> 16;
  HEAP8[$2 + 3 >> 0] = $16 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 255]($11, $12);
  $20 = $8 + 8 | 0;
  $21 = $20 + 3 | 0;
  if ((HEAP8[$21 >> 0] | 0) < 0) {
   $24 = HEAP32[$8 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($24, $10);
   HEAP32[$8 + 4 >> 2] = 0;
   if ((HEAP8[$21 >> 0] | 0) < 0) {
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$8 >> 2] | 0, HEAP32[$20 >> 2] << 2);
    HEAP32[$20 >> 2] = 0;
   }
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
   HEAP8[$21 >> 0] = 0;
  };
  HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i = 0;
  while (1) {
   if (($$0$i$i$i | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i << 2) >> 2] = 0;
   $$0$i$i$i = $$0$i$i$i + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 255]($11, $12);
  $35 = $7 + 8 | 0;
  $36 = $35 + 3 | 0;
  if ((HEAP8[$36 >> 0] | 0) < 0) {
   $39 = HEAP32[$7 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($39, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   if ((HEAP8[$36 >> 0] | 0) < 0) {
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$7 >> 2] | 0, HEAP32[$35 >> 2] << 2);
    HEAP32[$35 >> 2] = 0;
   }
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7, $10);
   HEAP8[$36 >> 0] = 0;
  };
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i43 = 0;
  while (1) {
   if (($$0$i$i$i43 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i43 << 2) >> 2] = 0;
   $$0$i$i$i43 = $$0$i$i$i43 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $50 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP32[$3 >> 2] = $50;
  $54 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  HEAP32[$4 >> 2] = $54;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 255]($11, $12);
  $58 = $5 + 11 | 0;
  if ((HEAP8[$58 >> 0] | 0) < 0) {
   $61 = HEAP32[$5 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($61, $10);
   HEAP32[$5 + 4 >> 2] = 0;
   if ((HEAP8[$58 >> 0] | 0) < 0) {
    $65 = $5 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$5 >> 2] | 0, HEAP32[$65 >> 2] & 2147483647);
    HEAP32[$65 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5, $10);
   HEAP8[$58 >> 0] = 0;
  };
  HEAP32[$5 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$5 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$5 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i47 = 0;
  while (1) {
   if (($$0$i$i$i47 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i47 << 2) >> 2] = 0;
   $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 255]($11, $12);
  $73 = $6 + 8 | 0;
  $74 = $73 + 3 | 0;
  if ((HEAP8[$74 >> 0] | 0) < 0) {
   $77 = HEAP32[$6 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($77, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   if ((HEAP8[$74 >> 0] | 0) < 0) {
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$6 >> 2] | 0, HEAP32[$73 >> 2] << 2);
    HEAP32[$73 >> 2] = 0;
   }
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($6, $10);
   HEAP8[$74 >> 0] = 0;
  };
  HEAP32[$6 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i54 = 0;
  while (1) {
   if (($$0$i$i$i54 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i54 << 2) >> 2] = 0;
   $$0$i$i$i54 = $$0$i$i$i54 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $89 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 66752) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$89 >> 2] | 0) + 44 >> 2] & 255]($10, $89);
  $93 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $93;
  HEAP8[$2 + 1 >> 0] = $93 >> 8;
  HEAP8[$2 + 2 >> 0] = $93 >> 16;
  HEAP8[$2 + 3 >> 0] = $93 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$89 >> 2] | 0) + 32 >> 2] & 255]($11, $89);
  $97 = $8 + 8 | 0;
  $98 = $97 + 3 | 0;
  if ((HEAP8[$98 >> 0] | 0) < 0) {
   $101 = HEAP32[$8 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($101, $10);
   HEAP32[$8 + 4 >> 2] = 0;
   if ((HEAP8[$98 >> 0] | 0) < 0) {
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$8 >> 2] | 0, HEAP32[$97 >> 2] << 2);
    HEAP32[$97 >> 2] = 0;
   }
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
   HEAP8[$98 >> 0] = 0;
  };
  HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i62 = 0;
  while (1) {
   if (($$0$i$i$i62 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i62 << 2) >> 2] = 0;
   $$0$i$i$i62 = $$0$i$i$i62 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$89 >> 2] | 0) + 28 >> 2] & 255]($11, $89);
  $112 = $7 + 8 | 0;
  $113 = $112 + 3 | 0;
  if ((HEAP8[$113 >> 0] | 0) < 0) {
   $116 = HEAP32[$7 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($116, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   if ((HEAP8[$113 >> 0] | 0) < 0) {
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$7 >> 2] | 0, HEAP32[$112 >> 2] << 2);
    HEAP32[$112 >> 2] = 0;
   }
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7, $10);
   HEAP8[$113 >> 0] = 0;
  };
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i70 = 0;
  while (1) {
   if (($$0$i$i$i70 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i70 << 2) >> 2] = 0;
   $$0$i$i$i70 = $$0$i$i$i70 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $127 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$89 >> 2] | 0) + 12 >> 2] & 127]($89) | 0;
  HEAP32[$3 >> 2] = $127;
  $131 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$89 >> 2] | 0) + 16 >> 2] & 127]($89) | 0;
  HEAP32[$4 >> 2] = $131;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$89 >> 2] | 0) + 20 >> 2] & 255]($11, $89);
  $135 = $5 + 11 | 0;
  if ((HEAP8[$135 >> 0] | 0) < 0) {
   $138 = HEAP32[$5 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($138, $10);
   HEAP32[$5 + 4 >> 2] = 0;
   if ((HEAP8[$135 >> 0] | 0) < 0) {
    $142 = $5 + 8 | 0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$5 >> 2] | 0, HEAP32[$142 >> 2] & 2147483647);
    HEAP32[$142 >> 2] = 0;
   }
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5, $10);
   HEAP8[$135 >> 0] = 0;
  };
  HEAP32[$5 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$5 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$5 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i78 = 0;
  while (1) {
   if (($$0$i$i$i78 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i78 << 2) >> 2] = 0;
   $$0$i$i$i78 = $$0$i$i$i78 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$89 >> 2] | 0) + 24 >> 2] & 255]($11, $89);
  $150 = $6 + 8 | 0;
  $151 = $150 + 3 | 0;
  if ((HEAP8[$151 >> 0] | 0) < 0) {
   $154 = HEAP32[$6 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($154, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   if ((HEAP8[$151 >> 0] | 0) < 0) {
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm(HEAP32[$6 >> 2] | 0, HEAP32[$150 >> 2] << 2);
    HEAP32[$150 >> 2] = 0;
   }
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($6, $10);
   HEAP8[$151 >> 0] = 0;
  };
  HEAP32[$6 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i86 = 0;
  while (1) {
   if (($$0$i$i$i86 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i86 << 2) >> 2] = 0;
   $$0$i$i$i86 = $$0$i$i$i86 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$89 >> 2] | 0) + 36 >> 2] & 127]($89) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function _ar2GetTransMatHomographyRobust_178($initConv, $pos2d, $pos3d, $num, $conv, $inlierProb) {
 $initConv = $initConv | 0;
 $pos2d = $pos2d | 0;
 $pos3d = $pos3d | 0;
 $num = $num | 0;
 $conv = $conv | 0;
 $inlierProb = +$inlierProb;
 var $21 = 0.0, $22 = 0.0, $5 = 0.0, $7 = 0.0, $K2$0 = 0.0, $add49 = 0.0, $add63 = 0.0, $add75 = 0.0, $add95 = 0.0, $arrayidx181 = 0, $arrayidx2 = 0, $arrayidx368 = 0, $arrayidx372 = 0, $arrayidx376 = 0, $arrayidx380 = 0, $arrayidx384 = 0, $arrayidx388 = 0, $arrayidx392 = 0, $arrayidx43 = 0, $arrayidx48 = 0, $arrayidx51 = 0, $arrayidx56 = 0, $arrayidx62 = 0, $arrayidx65 = 0, $arrayidx70 = 0, $call = 0, $call13 = 0, $call17 = 0, $call21 = 0, $conv5 = 0.0, $dH = 0, $div100 = 0.0, $div106 = 0.0, $div110 = 0.0, $div190 = 0.0, $div190$pn = 0.0, $div209 = 0.0, $err0$0 = 0.0, $err1$0 = 0.0, $i$0 = 0, $i$1 = 0, $j$0 = 0, $j$1 = 0, $j$2 = 0, $j$3 = 0, $k$0 = 0, $k$1 = 0, $mul101 = 0, $mul16 = 0, $mul182 = 0.0, $mul232 = 0.0, $mul233 = 0, $mul237 = 0, $mul345 = 0, $mul78 = 0.0, $mul87 = 0, $retval$0 = 0.0, $spec$store$select = 0, $sub = 0, $sub195 = 0.0, $sub228 = 0.0, $sub83 = 0.0, $sub86 = 0.0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $vararg_buffer5 = sp + 56 | 0;
 $vararg_buffer3 = sp + 48 | 0;
 $vararg_buffer1 = sp + 40 | 0;
 $vararg_buffer = sp + 32 | 0;
 $dH = sp;
 do if (($num | 0) >= 4 ? ($arrayidx2 = $initConv + 44 | 0, !(+HEAPF32[$arrayidx2 >> 2] == 0.0)) : 0) {
  $conv5 = +($num | 0);
  $sub = ~~($conv5 * $inlierProb) + -1 | 0;
  $spec$store$select = ($sub | 0) > 4 ? $sub : 4;
  $call = _malloc($num << 6) | 0;
  if (!$call) {
   _arLog(0, 3, 45947, $vararg_buffer);
   $retval$0 = -1.0;
   break;
  }
  $call13 = _malloc($num << 3) | 0;
  if (!$call13) {
   _arLog(0, 3, 45947, $vararg_buffer1);
   _free($call);
   $retval$0 = -1.0;
   break;
  }
  $mul16 = $num << 2;
  $call17 = _malloc($mul16) | 0;
  if (!$call17) {
   _arLog(0, 3, 45947, $vararg_buffer3);
   _free($call);
   _free($call13);
   $retval$0 = -1.0;
   break;
  }
  $call21 = _malloc($mul16) | 0;
  if (!$call21) {
   _arLog(0, 3, 45947, $vararg_buffer5);
   _free($call);
   _free($call13);
   _free($call17);
   $retval$0 = -1.0;
   break;
  }
  $j$0 = 0;
  while (1) {
   if (($j$0 | 0) == 3) break;
   $i$0 = 0;
   while (1) {
    if (($i$0 | 0) == 4) break;
    HEAPF32[$conv + ($j$0 << 4) + ($i$0 << 2) >> 2] = +HEAPF32[$initConv + ($j$0 << 4) + ($i$0 << 2) >> 2] / +HEAPF32[$arrayidx2 >> 2];
    $i$0 = $i$0 + 1 | 0;
   }
   $j$0 = $j$0 + 1 | 0;
  }
  $arrayidx43 = $conv + 4 | 0;
  $arrayidx48 = $conv + 12 | 0;
  $arrayidx51 = $conv + 16 | 0;
  $arrayidx56 = $conv + 20 | 0;
  $arrayidx62 = $conv + 28 | 0;
  $arrayidx65 = $conv + 32 | 0;
  $arrayidx70 = $conv + 36 | 0;
  $arrayidx181 = $call21 + ($spec$store$select << 2) | 0;
  $arrayidx368 = $dH + 4 | 0;
  $arrayidx372 = $dH + 8 | 0;
  $arrayidx376 = $dH + 12 | 0;
  $arrayidx380 = $dH + 16 | 0;
  $arrayidx384 = $dH + 20 | 0;
  $arrayidx388 = $dH + 24 | 0;
  $arrayidx392 = $dH + 28 | 0;
  $err0$0 = 0.0;
  $i$1 = 0;
  L24 : while (1) {
   $j$1 = 0;
   while (1) {
    if (($j$1 | 0) >= ($num | 0)) break;
    $5 = +HEAPF32[$pos3d + ($j$1 * 12 | 0) >> 2];
    $7 = +HEAPF32[$pos3d + ($j$1 * 12 | 0) + 4 >> 2];
    $add49 = +HEAPF32[$arrayidx48 >> 2] + (+HEAPF32[$conv >> 2] * $5 + +HEAPF32[$arrayidx43 >> 2] * $7);
    $add63 = +HEAPF32[$arrayidx62 >> 2] + ($5 * +HEAPF32[$arrayidx51 >> 2] + $7 * +HEAPF32[$arrayidx56 >> 2]);
    $add75 = $5 * +HEAPF32[$arrayidx65 >> 2] + $7 * +HEAPF32[$arrayidx70 >> 2] + 1.0;
    if ($add75 == 0.0) {
     label = 21;
     break L24;
    }
    $mul78 = $add75 * $add75;
    $sub83 = +HEAPF32[$pos2d + ($j$1 << 3) >> 2] - $add49 / $add75;
    $sub86 = +HEAPF32[$pos2d + ($j$1 << 3) + 4 >> 2] - $add63 / $add75;
    $mul87 = $j$1 << 1;
    HEAPF32[$call13 + ($mul87 << 2) >> 2] = $sub83;
    HEAPF32[$call13 + (($mul87 | 1) << 2) >> 2] = $sub86;
    $add95 = $sub83 * $sub83 + $sub86 * $sub86;
    HEAPF32[$call21 + ($j$1 << 2) >> 2] = $add95;
    HEAPF32[$call17 + ($j$1 << 2) >> 2] = $add95;
    $div100 = $5 / $add75;
    $mul101 = $j$1 << 4;
    HEAPF32[$call + ($mul101 << 2) >> 2] = $div100;
    $div106 = $7 / $add75;
    HEAPF32[$call + (($mul101 | 1) << 2) >> 2] = $div106;
    $div110 = 1.0 / $add75;
    HEAPF32[$call + (($mul101 | 2) << 2) >> 2] = $div110;
    HEAPF32[$call + (($mul101 | 3) << 2) >> 2] = 0.0;
    HEAPF32[$call + (($mul101 | 4) << 2) >> 2] = 0.0;
    HEAPF32[$call + (($mul101 | 5) << 2) >> 2] = 0.0;
    HEAPF32[$call + (($mul101 | 6) << 2) >> 2] = -($5 * $add49) / $mul78;
    HEAPF32[$call + (($mul101 | 7) << 2) >> 2] = -($7 * $add49) / $mul78;
    HEAPF32[$call + (($mul101 | 8) << 2) >> 2] = 0.0;
    HEAPF32[$call + (($mul101 | 9) << 2) >> 2] = 0.0;
    HEAPF32[$call + (($mul101 | 10) << 2) >> 2] = 0.0;
    HEAPF32[$call + (($mul101 | 11) << 2) >> 2] = $div100;
    HEAPF32[$call + (($mul101 | 12) << 2) >> 2] = $div106;
    HEAPF32[$call + (($mul101 | 13) << 2) >> 2] = $div110;
    HEAPF32[$call + (($mul101 | 14) << 2) >> 2] = -($5 * $add63) / $mul78;
    HEAPF32[$call + (($mul101 | 15) << 2) >> 2] = -($7 * $add63) / $mul78;
    $j$1 = $j$1 + 1 | 0;
   }
   _qsort($call21, $num, 4, 56);
   $mul182 = +HEAPF32[$arrayidx181 >> 2] * 4.0;
   $K2$0 = $mul182 < 16.0 ? 16.0 : $mul182;
   $div190 = $K2$0 / 6.0;
   $err1$0 = 0.0;
   $j$2 = 0;
   while (1) {
    if (($j$2 | 0) == ($num | 0)) break;
    $21 = +HEAPF32[$call21 + ($j$2 << 2) >> 2];
    if ($21 > $K2$0) $div190$pn = $div190; else {
     $sub195 = 1.0 - $21 / $K2$0;
     $div190$pn = $div190 * (1.0 - $sub195 * ($sub195 * $sub195));
    }
    $err1$0 = $err1$0 + $div190$pn;
    $j$2 = $j$2 + 1 | 0;
   }
   $div209 = $err1$0 / $conv5;
   if ($div209 < .10000000149011612) {
    label = 42;
    break;
   }
   if (($i$1 | 0) != 0 & $div209 < 4.0) {
    if (($i$1 | 0) == 10 | $div209 / $err0$0 > .9900000095367432) {
     label = 42;
     break;
    }
   } else if (($i$1 | 0) == 10) {
    label = 42;
    break;
   }
   $j$3 = 0;
   $k$0 = 0;
   while (1) {
    if (($j$3 | 0) == ($num | 0)) break;
    $22 = +HEAPF32[$call17 + ($j$3 << 2) >> 2];
    if (!($22 <= $K2$0)) $k$1 = $k$0; else {
     $sub228 = 1.0 - $22 / $K2$0;
     $mul232 = $sub228 * $sub228;
     $mul233 = $j$3 << 4;
     $mul237 = $k$0 << 3;
     HEAPF32[$call + ($mul237 << 2) >> 2] = $mul232 * +HEAPF32[$call + ($mul233 << 2) >> 2];
     HEAPF32[$call + (($mul237 | 1) << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 1) << 2) >> 2];
     HEAPF32[$call + (($mul237 | 2) << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 2) << 2) >> 2];
     HEAPF32[$call + (($mul237 | 3) << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 3) << 2) >> 2];
     HEAPF32[$call + (($mul237 | 4) << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 4) << 2) >> 2];
     HEAPF32[$call + (($mul237 | 5) << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 5) << 2) >> 2];
     HEAPF32[$call + (($mul237 | 6) << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 6) << 2) >> 2];
     HEAPF32[$call + (($mul237 | 7) << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 7) << 2) >> 2];
     HEAPF32[$call + ($mul237 + 8 << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 8) << 2) >> 2];
     HEAPF32[$call + ($mul237 + 9 << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 9) << 2) >> 2];
     HEAPF32[$call + ($mul237 + 10 << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 10) << 2) >> 2];
     HEAPF32[$call + ($mul237 + 11 << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 11) << 2) >> 2];
     HEAPF32[$call + ($mul237 + 12 << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 12) << 2) >> 2];
     HEAPF32[$call + ($mul237 + 13 << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 13) << 2) >> 2];
     HEAPF32[$call + ($mul237 + 14 << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 14) << 2) >> 2];
     HEAPF32[$call + ($mul237 + 15 << 2) >> 2] = $mul232 * +HEAPF32[$call + (($mul233 | 15) << 2) >> 2];
     $mul345 = $j$3 << 1;
     HEAPF32[$call13 + ($k$0 << 2) >> 2] = $mul232 * +HEAPF32[$call13 + ($mul345 << 2) >> 2];
     HEAPF32[$call13 + ($k$0 + 1 << 2) >> 2] = $mul232 * +HEAPF32[$call13 + (($mul345 | 1) << 2) >> 2];
     $k$1 = $k$0 + 2 | 0;
    }
    $j$3 = $j$3 + 1 | 0;
    $k$0 = $k$1;
   }
   if (($k$0 | 0) < 6) {
    label = 38;
    break;
   }
   if ((_getDeltaS_181($dH, $call13, $call, $k$0) | 0) < 0) {
    label = 40;
    break;
   }
   HEAPF32[$conv >> 2] = +HEAPF32[$dH >> 2] + +HEAPF32[$conv >> 2];
   HEAPF32[$arrayidx43 >> 2] = +HEAPF32[$arrayidx368 >> 2] + +HEAPF32[$arrayidx43 >> 2];
   HEAPF32[$arrayidx48 >> 2] = +HEAPF32[$arrayidx372 >> 2] + +HEAPF32[$arrayidx48 >> 2];
   HEAPF32[$arrayidx51 >> 2] = +HEAPF32[$arrayidx376 >> 2] + +HEAPF32[$arrayidx51 >> 2];
   HEAPF32[$arrayidx56 >> 2] = +HEAPF32[$arrayidx380 >> 2] + +HEAPF32[$arrayidx56 >> 2];
   HEAPF32[$arrayidx62 >> 2] = +HEAPF32[$arrayidx384 >> 2] + +HEAPF32[$arrayidx62 >> 2];
   HEAPF32[$arrayidx65 >> 2] = +HEAPF32[$arrayidx388 >> 2] + +HEAPF32[$arrayidx65 >> 2];
   HEAPF32[$arrayidx70 >> 2] = +HEAPF32[$arrayidx392 >> 2] + +HEAPF32[$arrayidx70 >> 2];
   $err0$0 = $div209;
   $i$1 = $i$1 + 1 | 0;
  }
  if ((label | 0) == 21) {
   _free($call);
   _free($call13);
   _free($call17);
   _free($call21);
   $retval$0 = 1.0e8;
   break;
  } else if ((label | 0) == 38) {
   _free($call);
   _free($call13);
   _free($call17);
   _free($call21);
   $retval$0 = -1.0;
   break;
  } else if ((label | 0) == 40) {
   _free($call);
   _free($call13);
   _free($call17);
   _free($call21);
   $retval$0 = 1.0e8;
   break;
  } else if ((label | 0) == 42) {
   _free($call);
   _free($call13);
   _free($call17);
   _free($call21);
   $retval$0 = $div209;
   break;
  }
 } else $retval$0 = 1.0e8; while (0);
 STACKTOP = sp;
 return +$retval$0;
}

function _decode_bch($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$ = 0, $$0 = 0, $$0235 = 0, $$0237 = 0, $$0238 = 0, $$0240 = 0, $$0242 = 0, $$0245 = 0, $$0251 = 0, $$0253 = 0, $$0259 = 0, $$0261 = 0, $$0268 = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$1236 = 0, $$1239 = 0, $$1241 = 0, $$1243 = 0, $$1246 = 0, $$1252 = 0, $$1254 = 0, $$1256 = 0, $$1260 = 0, $$1262 = 0, $$1264 = 0, $$2 = 0, $$2244 = 0, $$2247 = 0, $$2257 = 0, $$2265 = 0, $$3 = 0, $$3248 = 0, $$3258 = 0, $$3266 = 0, $$4 = 0, $$4249 = 0, $$5 = 0, $$5250 = 0, $$6 = 0, $$7 = 0, $$8 = 0, $$9 = 0, $$pre$phiZ2D = 0, $$pre280 = 0, $$sink = 0, $10 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $114 = 0, $118 = 0, $12 = 0, $122 = 0, $126 = 0, $129 = 0, $137 = 0, $138 = 0, $14 = 0, $145 = 0, $157 = 0, $158 = 0, $161 = 0, $17 = 0, $175 = 0, $179 = 0, $18 = 0, $188 = 0, $189 = 0, $190 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $200 = 0, $205 = 0, $206 = 0, $21 = 0, $23 = 0, $30 = 0, $32 = 0, $33 = 0, $39 = 0, $41 = 0, $5 = 0, $52 = 0, $53 = 0, $55 = 0, $57 = 0, $58 = 0, $6 = 0, $66 = 0, $7 = 0, $79 = 0, $8 = 0, $81 = 0, $82 = 0, $84 = 0, $89 = 0, $9 = 0, $90 = 0, $93 = 0, label = 0, sp = 0, $$1243$looptemp = 0, $$0240$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2384 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2384);
 $5 = sp + 2320 | 0;
 $6 = sp + 880 | 0;
 $7 = sp + 800 | 0;
 $8 = sp + 720 | 0;
 $9 = sp + 640 | 0;
 $10 = sp + 560 | 0;
 $11 = sp + 48 | 0;
 $12 = sp;
 switch ($0 | 0) {
 case 2830:
  {
   $$0268 = $3;
   $$1252 = 1200;
   $$1254 = 688;
   $$1260 = 120;
   $$1262 = 127;
   $$3258 = 64;
   $$3266 = 9;
   label = 8;
   break;
  }
 case 772:
  {
   $$0251 = 624;
   $$0253 = 432;
   $$0259 = 13;
   $$0261 = 15;
   $$2257 = 9;
   $$2265 = 1;
   label = 5;
   break;
  }
 case 1028:
  {
   $$0251 = 624;
   $$0253 = 432;
   $$0259 = 13;
   $$0261 = 15;
   $$2257 = 5;
   $$2265 = 2;
   label = 5;
   break;
  }
 case 1029:
  {
   $$1256 = 12;
   $$1264 = 2;
   label = 4;
   break;
  }
 case 1285:
  {
   $$1256 = 7;
   $$1264 = 3;
   label = 4;
   break;
  }
 default:
  $$0237 = -1;
 }
 if ((label | 0) == 4) {
  $$0251 = 496;
  $$0253 = 304;
  $$0259 = 22;
  $$0261 = 31;
  $$2257 = $$1256;
  $$2265 = $$1264;
  label = 5;
 }
 L6 : do if ((label | 0) == 5) {
  $$0245 = 0;
  $14 = $1;
  $17 = $2;
  while (1) {
   if (($$0245 | 0) == ($$0259 | 0)) {
    $$0268 = $5;
    $$1252 = $$0251;
    $$1254 = $$0253;
    $$1260 = $$0259;
    $$1262 = $$0261;
    $$3258 = $$2257;
    $$3266 = $$2265;
    label = 8;
    break L6;
   }
   HEAP8[$5 + $$0245 >> 0] = $14 & 1;
   $18 = _bitshift64Lshr($14 | 0, $17 | 0, 1) | 0;
   $$0245 = $$0245 + 1 | 0;
   $14 = $18;
   $17 = getTempRet0() | 0;
  }
 } while (0);
 L11 : do if ((label | 0) == 8) {
  $21 = $$3266 << 1;
  $$0 = 0;
  $$1246 = 1;
  while (1) {
   if (($$1246 | 0) > ($21 | 0)) break;
   $23 = $10 + ($$1246 << 2) | 0;
   HEAP32[$23 >> 2] = 0;
   $$0242 = 0;
   $33 = 0;
   while (1) {
    if (($$0242 | 0) >= ($$1260 | 0)) break;
    if (!(HEAP8[$$0268 + $$0242 >> 0] | 0)) $205 = $33; else {
     $30 = $$1254 + (((Math_imul($$0242, $$1246) | 0) % ($$1262 | 0) | 0) << 2) | 0;
     $32 = $33 ^ HEAP32[$30 >> 2];
     HEAP32[$23 >> 2] = $32;
     $205 = $32;
    }
    $$0242 = $$0242 + 1 | 0;
    $33 = $205;
   }
   HEAP32[$23 >> 2] = HEAP32[$$1252 + ($33 << 2) >> 2];
   $$0 = ($33 | 0) == 0 ? $$0 : 1;
   $$1246 = $$1246 + 1 | 0;
  }
  $39 = ($$0 | 0) != 0;
  L24 : do if ($39) {
   HEAP32[$7 >> 2] = 0;
   $41 = HEAP32[$10 + 4 >> 2] | 0;
   HEAP32[$7 + 4 >> 2] = $41;
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 72 >> 2] = 1;
   $$2247 = 1;
   while (1) {
    if (($$2247 | 0) >= ($21 | 0)) break;
    HEAP32[$6 + ($$2247 << 2) >> 2] = -1;
    HEAP32[$6 + 72 + ($$2247 << 2) >> 2] = 0;
    $$2247 = $$2247 + 1 | 0;
   }
   HEAP32[$8 >> 2] = 0;
   HEAP32[$8 + 4 >> 2] = 0;
   HEAP32[$9 >> 2] = -1;
   HEAP32[$9 + 4 >> 2] = 0;
   $$0240 = 0;
   $52 = $41;
   $55 = 0;
   while (1) {
    $$0240$looptemp = $$0240;
    $$0240 = $$0240 + 1 | 0;
    L32 : do if (($52 | 0) == -1) {
     $53 = $$0240$looptemp + 2 | 0;
     HEAP32[$8 + ($53 << 2) >> 2] = $55;
     $$3248 = 0;
     while (1) {
      if (($$3248 | 0) > ($55 | 0)) {
       $$pre$phiZ2D = $53;
       $114 = $55;
       break L32;
      }
      $57 = $6 + ($$0240 * 72 | 0) + ($$3248 << 2) | 0;
      $58 = HEAP32[$57 >> 2] | 0;
      HEAP32[$6 + ($53 * 72 | 0) + ($$3248 << 2) >> 2] = $58;
      HEAP32[$57 >> 2] = HEAP32[$$1252 + ($58 << 2) >> 2];
      $$3248 = $$3248 + 1 | 0;
     }
    } else {
     $$0238 = $$0240$looptemp;
     while (1) {
      $66 = ($$0238 | 0) > 0;
      if ($66 & (HEAP32[$7 + ($$0238 << 2) >> 2] | 0) == -1) $$0238 = $$0238 + -1 | 0; else break;
     }
     if ($66) {
      $$1239 = $$0238;
      $$1243 = $$0238;
      while (1) {
       $$1243$looptemp = $$1243;
       $$1243 = $$1243 + -1 | 0;
       if ((HEAP32[$7 + ($$1243 << 2) >> 2] | 0) == -1) $$2 = $$1239; else $$2 = (HEAP32[$9 + ($$1239 << 2) >> 2] | 0) < (HEAP32[$9 + ($$1243 << 2) >> 2] | 0) ? $$1243 : $$1239;
       if (($$1243$looptemp | 0) <= 1) {
        $$3 = $$2;
        break;
       } else $$1239 = $$2;
      }
     } else $$3 = $$0238;
     $79 = $8 + ($$3 << 2) | 0;
     $81 = $$0240 - $$3 | 0;
     $82 = $81 + (HEAP32[$79 >> 2] | 0) | 0;
     $84 = $$0240$looptemp + 2 | 0;
     $$ = ($55 | 0) > ($82 | 0) ? $55 : $82;
     HEAP32[$8 + ($84 << 2) >> 2] = $$;
     $$4249 = 0;
     while (1) {
      if (($$4249 | 0) >= ($21 | 0)) break;
      HEAP32[$6 + ($84 * 72 | 0) + ($$4249 << 2) >> 2] = 0;
      $$4249 = $$4249 + 1 | 0;
     }
     $89 = $52 + $$1262 | 0;
     $90 = $7 + ($$3 << 2) | 0;
     $$pre280 = HEAP32[$79 >> 2] | 0;
     $$5250 = 0;
     while (1) {
      if (($$5250 | 0) > ($$pre280 | 0)) break;
      $93 = HEAP32[$6 + ($$3 * 72 | 0) + ($$5250 << 2) >> 2] | 0;
      if (($93 | 0) != -1) HEAP32[$6 + ($84 * 72 | 0) + ($81 + $$5250 << 2) >> 2] = HEAP32[$$1254 + ((($89 + $93 - (HEAP32[$90 >> 2] | 0) | 0) % ($$1262 | 0) | 0) << 2) >> 2];
      $$5250 = $$5250 + 1 | 0;
     }
     $$6 = 0;
     while (1) {
      if (($$6 | 0) > ($55 | 0)) {
       $$pre$phiZ2D = $84;
       $114 = $$;
       break L32;
      }
      $105 = $6 + ($$0240 * 72 | 0) + ($$6 << 2) | 0;
      $106 = HEAP32[$105 >> 2] | 0;
      $107 = $6 + ($84 * 72 | 0) + ($$6 << 2) | 0;
      HEAP32[$107 >> 2] = HEAP32[$107 >> 2] ^ $106;
      HEAP32[$105 >> 2] = HEAP32[$$1252 + ($106 << 2) >> 2];
      $$6 = $$6 + 1 | 0;
     }
    } while (0);
    HEAP32[$9 + ($$pre$phiZ2D << 2) >> 2] = $$0240 - $114;
    if (($$0240 | 0) >= ($21 | 0)) break;
    $118 = HEAP32[$10 + ($$pre$phiZ2D << 2) >> 2] | 0;
    if (($118 | 0) == -1) $$sink = 0; else $$sink = HEAP32[$$1254 + ($118 << 2) >> 2] | 0;
    $122 = $7 + ($$pre$phiZ2D << 2) | 0;
    HEAP32[$122 >> 2] = $$sink;
    $$7 = 1;
    $138 = $$sink;
    while (1) {
     if (($$7 | 0) > ($114 | 0)) break;
     $126 = HEAP32[$10 + ($$pre$phiZ2D - $$7 << 2) >> 2] | 0;
     if (($126 | 0) != -1 ? ($129 = HEAP32[$6 + ($$pre$phiZ2D * 72 | 0) + ($$7 << 2) >> 2] | 0, ($129 | 0) != 0) : 0) {
      $137 = $138 ^ HEAP32[$$1254 + ((((HEAP32[$$1252 + ($129 << 2) >> 2] | 0) + $126 | 0) % ($$1262 | 0) | 0) << 2) >> 2];
      HEAP32[$122 >> 2] = $137;
      $206 = $137;
     } else $206 = $138;
     $$7 = $$7 + 1 | 0;
     $138 = $206;
    }
    $52 = HEAP32[$$1252 + ($138 << 2) >> 2] | 0;
    HEAP32[$122 >> 2] = $52;
    if (($114 | 0) > ($$3266 | 0)) break; else $55 = $114;
   }
   if (($114 | 0) > ($$3266 | 0)) {
    $$0237 = -1;
    break L11;
   }
   $$8 = 0;
   while (1) {
    if (($$8 | 0) > ($114 | 0)) break;
    $145 = $6 + ($$pre$phiZ2D * 72 | 0) + ($$8 << 2) | 0;
    HEAP32[$145 >> 2] = HEAP32[$$1252 + (HEAP32[$145 >> 2] << 2) >> 2];
    $$8 = $$8 + 1 | 0;
   }
   $$9 = 1;
   while (1) {
    if (($$9 | 0) > ($114 | 0)) break;
    HEAP32[$12 + ($$9 << 2) >> 2] = HEAP32[$6 + ($$pre$phiZ2D * 72 | 0) + ($$9 << 2) >> 2];
    $$9 = $$9 + 1 | 0;
   }
   $$0235 = 0;
   $$10 = 1;
   while (1) {
    if (($$1262 | 0) < ($$10 | 0)) break;
    $$2244 = 1;
    $$4 = 1;
    while (1) {
     if (($$2244 | 0) > ($114 | 0)) break;
     $157 = $12 + ($$2244 << 2) | 0;
     $158 = HEAP32[$157 >> 2] | 0;
     if (($158 | 0) == -1) $$5 = $$4; else {
      $161 = ($158 + $$2244 | 0) % ($$1262 | 0) | 0;
      HEAP32[$157 >> 2] = $161;
      $$5 = HEAP32[$$1254 + ($161 << 2) >> 2] ^ $$4;
     }
     $$2244 = $$2244 + 1 | 0;
     $$4 = $$5;
    }
    if (!$$4) {
     HEAP32[$11 + ($$0235 << 2) >> 2] = $$1262 - $$10;
     $$1236 = $$0235 + 1 | 0;
    } else $$1236 = $$0235;
    $$0235 = $$1236;
    $$10 = $$10 + 1 | 0;
   }
   if (($$0235 | 0) != ($114 | 0)) {
    $$0237 = -1;
    break L11;
   }
   $$11 = 0;
   while (1) {
    if (($$11 | 0) >= ($114 | 0)) {
     $$1241 = $$pre$phiZ2D;
     break L24;
    }
    $175 = $$0268 + (HEAP32[$11 + ($$11 << 2) >> 2] | 0) | 0;
    HEAP8[$175 >> 0] = HEAP8[$175 >> 0] ^ 1;
    $$11 = $$11 + 1 | 0;
   }
  } else $$1241 = 0; while (0);
  $179 = $4;
  HEAP32[$179 >> 2] = 0;
  HEAP32[$179 + 4 >> 2] = 0;
  $$12 = $$1260 - $$3258 | 0;
  $188 = 1;
  $189 = 0;
  $192 = 0;
  $193 = 0;
  while (1) {
   if (($$12 | 0) >= ($$1260 | 0)) break;
   $190 = ___muldi3($188 | 0, $189 | 0, HEAPU8[$$0268 + $$12 >> 0] | 0, 0) | 0;
   $194 = _i64Add($190 | 0, getTempRet0() | 0, $192 | 0, $193 | 0) | 0;
   $195 = getTempRet0() | 0;
   $196 = $4;
   HEAP32[$196 >> 2] = $194;
   HEAP32[$196 + 4 >> 2] = $195;
   $200 = _bitshift64Shl($188 | 0, $189 | 0, 1) | 0;
   $$12 = $$12 + 1 | 0;
   $188 = $200;
   $189 = getTempRet0() | 0;
   $192 = $194;
   $193 = $195;
  }
  if ($39) $$0237 = HEAP32[$8 + ($$1241 << 2) >> 2] | 0; else $$0237 = 0;
 } while (0);
 STACKTOP = sp;
 return $$0237 | 0;
}

function _jinit_color_deconverter($0) {
 $0 = $0 | 0;
 var $$0107 = 0, $$019$i = 0, $$03233$i = 0, $$03233$i100 = 0, $$03233$i96 = 0, $$034$i = 0, $$034$i95 = 0, $$034$i99 = 0, $$sink = 0, $1 = 0, $108 = 0, $11 = 0, $111 = 0, $116 = 0, $119 = 0, $120 = 0, $123 = 0, $124 = 0, $127 = 0, $128 = 0, $131 = 0, $133 = 0, $134 = 0, $135 = 0, $144 = 0, $147 = 0, $154 = 0, $157 = 0, $166 = 0, $169 = 0, $17 = 0, $175 = 0, $178 = 0, $179 = 0, $182 = 0, $183 = 0, $186 = 0, $187 = 0, $190 = 0, $192 = 0, $193 = 0, $194 = 0, $203 = 0, $206 = 0, $211 = 0, $220 = 0, $228 = 0, $23 = 0, $29 = 0, $32 = 0, $36 = 0, $4 = 0, $40 = 0, $45 = 0, $48 = 0, $5 = 0, $55 = 0, $58 = 0, $6 = 0, $61 = 0, $73 = 0, $80 = 0, $83 = 0, $84 = 0, $87 = 0, $88 = 0, $91 = 0, $92 = 0, $95 = 0, $97 = 0, $98 = 0, $99 = 0;
 $1 = $0 + 4 | 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 28) | 0;
 $5 = $0 + 480 | 0;
 HEAP32[$5 >> 2] = $4;
 HEAP32[$4 >> 2] = 190;
 $6 = $0 + 40 | 0;
 switch (HEAP32[$6 >> 2] | 0) {
 case 1:
  {
   if ((HEAP32[$0 + 36 >> 2] | 0) != 1) {
    $11 = HEAP32[$0 >> 2] | 0;
    HEAP32[$11 + 20 >> 2] = 11;
    FUNCTION_TABLE_vi[HEAP32[$11 >> 2] & 255]($0);
   }
   break;
  }
 case 7:
 case 6:
 case 3:
 case 2:
  {
   if ((HEAP32[$0 + 36 >> 2] | 0) != 3) {
    $17 = HEAP32[$0 >> 2] | 0;
    HEAP32[$17 + 20 >> 2] = 11;
    FUNCTION_TABLE_vi[HEAP32[$17 >> 2] & 255]($0);
   }
   break;
  }
 case 5:
 case 4:
  {
   if ((HEAP32[$0 + 36 >> 2] | 0) != 4) {
    $23 = HEAP32[$0 >> 2] | 0;
    HEAP32[$23 + 20 >> 2] = 11;
    FUNCTION_TABLE_vi[HEAP32[$23 >> 2] & 255]($0);
   }
   break;
  }
 default:
  if ((HEAP32[$0 + 36 >> 2] | 0) < 1) {
   $29 = HEAP32[$0 >> 2] | 0;
   HEAP32[$29 + 20 >> 2] = 11;
   FUNCTION_TABLE_vi[HEAP32[$29 >> 2] & 255]($0);
  }
 }
 $32 = $0 + 304 | 0;
 L11 : do if (HEAP32[$32 >> 2] | 0) {
  switch (HEAP32[$6 >> 2] | 0) {
  case 6:
  case 2:
   {
    break L11;
    break;
   }
  default:
   {}
  }
  $36 = HEAP32[$0 >> 2] | 0;
  HEAP32[$36 + 20 >> 2] = 28;
  FUNCTION_TABLE_vi[HEAP32[$36 >> 2] & 255]($0);
 } while (0);
 $40 = HEAP32[$0 + 44 >> 2] | 0;
 L15 : do switch ($40 | 0) {
 case 1:
  {
   HEAP32[$0 + 120 >> 2] = 1;
   switch (HEAP32[$6 >> 2] | 0) {
   case 7:
   case 3:
   case 1:
    {
     HEAP32[$4 + 4 >> 2] = 4;
     $45 = HEAP32[$0 + 36 >> 2] | 0;
     if (($45 | 0) <= 1) break L15;
     $48 = HEAP32[$0 + 216 >> 2] | 0;
     $$0107 = 1;
     do {
      HEAP32[$48 + ($$0107 * 88 | 0) + 52 >> 2] = 0;
      $$0107 = $$0107 + 1 | 0;
     } while (($$0107 | 0) < ($45 | 0));
     break;
    }
   case 2:
    {
     switch (HEAP32[$32 >> 2] | 0) {
     case 0:
      {
       HEAP32[$4 + 4 >> 2] = 5;
       break;
      }
     case 1:
      {
       HEAP32[$4 + 4 >> 2] = 6;
       break;
      }
     default:
      {
       $55 = HEAP32[$0 >> 2] | 0;
       HEAP32[$55 + 20 >> 2] = 28;
       FUNCTION_TABLE_vi[HEAP32[$55 >> 2] & 255]($0);
      }
     }
     $58 = HEAP32[$5 >> 2] | 0;
     $61 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 3072) | 0;
     HEAP32[$58 + 24 >> 2] = $61;
     $$019$i = 0;
     do {
      HEAP32[$61 + ($$019$i << 2) >> 2] = $$019$i * 19595;
      HEAP32[$61 + ($$019$i + 256 << 2) >> 2] = $$019$i * 38470;
      HEAP32[$61 + ($$019$i + 512 << 2) >> 2] = ($$019$i * 7471 | 0) + 32768;
      $$019$i = $$019$i + 1 | 0;
     } while (($$019$i | 0) != 256);
     break;
    }
   default:
    {
     $73 = HEAP32[$0 >> 2] | 0;
     HEAP32[$73 + 20 >> 2] = 28;
     FUNCTION_TABLE_vi[HEAP32[$73 >> 2] & 255]($0);
     break L15;
    }
   }
   break;
  }
 case 2:
  {
   HEAP32[$0 + 120 >> 2] = 3;
   switch (HEAP32[$6 >> 2] | 0) {
   case 1:
    {
     HEAP32[$4 + 4 >> 2] = 7;
     break L15;
     break;
    }
   case 3:
    {
     HEAP32[$4 + 4 >> 2] = 8;
     $80 = HEAP32[$5 >> 2] | 0;
     $83 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
     $84 = $80 + 8 | 0;
     HEAP32[$84 >> 2] = $83;
     $87 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
     $88 = $80 + 12 | 0;
     HEAP32[$88 >> 2] = $87;
     $91 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
     $92 = $80 + 16 | 0;
     HEAP32[$92 >> 2] = $91;
     $95 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
     HEAP32[$80 + 20 >> 2] = $95;
     $97 = HEAP32[$84 >> 2] | 0;
     $98 = HEAP32[$88 >> 2] | 0;
     $99 = HEAP32[$92 >> 2] | 0;
     $$03233$i = 0;
     $$034$i = -128;
     while (1) {
      HEAP32[$97 + ($$03233$i << 2) >> 2] = ($$034$i * 91881 | 0) + 32768 >> 16;
      HEAP32[$98 + ($$03233$i << 2) >> 2] = ($$034$i * 116130 | 0) + 32768 >> 16;
      $108 = Math_imul($$034$i, -46802) | 0;
      HEAP32[$99 + ($$03233$i << 2) >> 2] = $108;
      $111 = (Math_imul($$034$i, -22553) | 0) + 32768 | 0;
      HEAP32[$95 + ($$03233$i << 2) >> 2] = $111;
      $$03233$i = $$03233$i + 1 | 0;
      if (($$03233$i | 0) == 256) break; else $$034$i = $$034$i + 1 | 0;
     }
     break;
    }
   case 7:
    {
     HEAP32[$4 + 4 >> 2] = 8;
     $116 = HEAP32[$5 >> 2] | 0;
     $119 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
     $120 = $116 + 8 | 0;
     HEAP32[$120 >> 2] = $119;
     $123 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
     $124 = $116 + 12 | 0;
     HEAP32[$124 >> 2] = $123;
     $127 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
     $128 = $116 + 16 | 0;
     HEAP32[$128 >> 2] = $127;
     $131 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
     HEAP32[$116 + 20 >> 2] = $131;
     $133 = HEAP32[$120 >> 2] | 0;
     $134 = HEAP32[$124 >> 2] | 0;
     $135 = HEAP32[$128 >> 2] | 0;
     $$03233$i96 = 0;
     $$034$i95 = -128;
     while (1) {
      HEAP32[$133 + ($$03233$i96 << 2) >> 2] = ($$034$i95 * 183763 | 0) + 32768 >> 16;
      HEAP32[$134 + ($$03233$i96 << 2) >> 2] = ($$034$i95 * 232260 | 0) + 32768 >> 16;
      $144 = Math_imul($$034$i95, -93603) | 0;
      HEAP32[$135 + ($$03233$i96 << 2) >> 2] = $144;
      $147 = (Math_imul($$034$i95, -45107) | 0) + 32768 | 0;
      HEAP32[$131 + ($$03233$i96 << 2) >> 2] = $147;
      $$03233$i96 = $$03233$i96 + 1 | 0;
      if (($$03233$i96 | 0) == 256) break; else $$034$i95 = $$034$i95 + 1 | 0;
     }
     break;
    }
   case 2:
    {
     switch (HEAP32[$32 >> 2] | 0) {
     case 0:
      {
       HEAP32[$4 + 4 >> 2] = 9;
       break L15;
       break;
      }
     case 1:
      {
       HEAP32[$4 + 4 >> 2] = 10;
       break L15;
       break;
      }
     default:
      {
       $154 = HEAP32[$0 >> 2] | 0;
       HEAP32[$154 + 20 >> 2] = 28;
       FUNCTION_TABLE_vi[HEAP32[$154 >> 2] & 255]($0);
       break L15;
      }
     }
     break;
    }
   default:
    {
     $157 = HEAP32[$0 >> 2] | 0;
     HEAP32[$157 + 20 >> 2] = 28;
     FUNCTION_TABLE_vi[HEAP32[$157 >> 2] & 255]($0);
     break L15;
    }
   }
   break;
  }
 case 6:
  {
   HEAP32[$0 + 120 >> 2] = 3;
   if ((HEAP32[$6 >> 2] | 0) != 6) {
    $169 = HEAP32[$0 >> 2] | 0;
    HEAP32[$169 + 20 >> 2] = 28;
    FUNCTION_TABLE_vi[HEAP32[$169 >> 2] & 255]($0);
    break L15;
   }
   switch (HEAP32[$32 >> 2] | 0) {
   case 0:
    {
     HEAP32[$4 + 4 >> 2] = 9;
     break L15;
     break;
    }
   case 1:
    {
     HEAP32[$4 + 4 >> 2] = 10;
     break L15;
     break;
    }
   default:
    {
     $166 = HEAP32[$0 >> 2] | 0;
     HEAP32[$166 + 20 >> 2] = 28;
     FUNCTION_TABLE_vi[HEAP32[$166 >> 2] & 255]($0);
     break L15;
    }
   }
   break;
  }
 case 4:
  {
   HEAP32[$0 + 120 >> 2] = 4;
   switch (HEAP32[$6 >> 2] | 0) {
   case 5:
    {
     HEAP32[$4 + 4 >> 2] = 11;
     $175 = HEAP32[$5 >> 2] | 0;
     $178 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
     $179 = $175 + 8 | 0;
     HEAP32[$179 >> 2] = $178;
     $182 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
     $183 = $175 + 12 | 0;
     HEAP32[$183 >> 2] = $182;
     $186 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
     $187 = $175 + 16 | 0;
     HEAP32[$187 >> 2] = $186;
     $190 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
     HEAP32[$175 + 20 >> 2] = $190;
     $192 = HEAP32[$179 >> 2] | 0;
     $193 = HEAP32[$183 >> 2] | 0;
     $194 = HEAP32[$187 >> 2] | 0;
     $$03233$i100 = 0;
     $$034$i99 = -128;
     while (1) {
      HEAP32[$192 + ($$03233$i100 << 2) >> 2] = ($$034$i99 * 91881 | 0) + 32768 >> 16;
      HEAP32[$193 + ($$03233$i100 << 2) >> 2] = ($$034$i99 * 116130 | 0) + 32768 >> 16;
      $203 = Math_imul($$034$i99, -46802) | 0;
      HEAP32[$194 + ($$03233$i100 << 2) >> 2] = $203;
      $206 = (Math_imul($$034$i99, -22553) | 0) + 32768 | 0;
      HEAP32[$190 + ($$03233$i100 << 2) >> 2] = $206;
      $$03233$i100 = $$03233$i100 + 1 | 0;
      if (($$03233$i100 | 0) == 256) break; else $$034$i99 = $$034$i99 + 1 | 0;
     }
     break;
    }
   case 4:
    {
     HEAP32[$4 + 4 >> 2] = 12;
     break L15;
     break;
    }
   default:
    {
     $211 = HEAP32[$0 >> 2] | 0;
     HEAP32[$211 + 20 >> 2] = 28;
     FUNCTION_TABLE_vi[HEAP32[$211 >> 2] & 255]($0);
     break L15;
    }
   }
   break;
  }
 default:
  if (($40 | 0) == (HEAP32[$6 >> 2] | 0)) {
   HEAP32[$0 + 120 >> 2] = HEAP32[$0 + 36 >> 2];
   HEAP32[$4 + 4 >> 2] = 12;
   break L15;
  } else {
   $220 = HEAP32[$0 >> 2] | 0;
   HEAP32[$220 + 20 >> 2] = 28;
   FUNCTION_TABLE_vi[HEAP32[$220 >> 2] & 255]($0);
   break L15;
  }
 } while (0);
 if (HEAP32[$0 + 84 >> 2] | 0) {
  $$sink = 1;
  $228 = $0 + 124 | 0;
  HEAP32[$228 >> 2] = $$sink;
  return;
 }
 $$sink = HEAP32[$0 + 120 >> 2] | 0;
 $228 = $0 + 124 | 0;
 HEAP32[$228 >> 2] = $$sink;
 return;
}

function _decode_mcu_AC_refine_65($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0164 = 0, $$0166 = 0, $$017$i = 0, $$0170 = 0, $$0175 = 0, $$0180 = 0, $$0197 = 0, $$0199205 = 0, $$10 = 0, $$10190 = 0, $$11 = 0, $$11191 = 0, $$1167 = 0, $$1171 = 0, $$1176 = 0, $$1181 = 0, $$1198 = 0, $$1200 = 0, $$12192206 = 0, $$12207 = 0, $$13 = 0, $$13193 = 0, $$14 = 0, $$14194 = 0, $$15 = 0, $$15195 = 0, $$16 = 0, $$16196 = 0, $$2$ph = 0, $$2168209 = 0, $$2172 = 0, $$2177 = 0, $$2182 = 0, $$3 = 0, $$3169 = 0, $$3173208 = 0, $$4174 = 0, $$4179$ph = 0, $$4184$ph = 0, $$4226 = 0, $$5 = 0, $$5185 = 0, $$6 = 0, $$6186 = 0, $$7 = 0, $$7187 = 0, $$8 = 0, $$8188 = 0, $$9 = 0, $$9189 = 0, $104 = 0, $113 = 0, $12 = 0, $121 = 0, $125 = 0, $126 = 0, $136 = 0, $140 = 0, $147 = 0, $152 = 0, $156 = 0, $16 = 0, $164 = 0, $168 = 0, $169 = 0, $17 = 0, $181 = 0, $184 = 0, $2 = 0, $24 = 0, $3 = 0, $41 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $65 = 0, $67 = 0, $68 = 0, $72 = 0, $73 = 0, $77 = 0, $79 = 0, $85 = 0, $89 = 0, $9 = 0, $90 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 $2 = sp + 256 | 0;
 $3 = sp;
 $5 = HEAP32[$0 + 468 >> 2] | 0;
 $6 = $0 + 280 | 0;
 if (HEAP32[$6 >> 2] | 0 ? ($9 = $5 + 44 | 0, (HEAP32[$9 >> 2] | 0) == 0) : 0) {
  $12 = $5 + 16 | 0;
  $16 = HEAP32[$0 + 464 >> 2] | 0;
  $17 = $16 + 24 | 0;
  HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + ((HEAP32[$12 >> 2] | 0) / 8 | 0);
  HEAP32[$12 >> 2] = 0;
  if (!(FUNCTION_TABLE_ii[HEAP32[$16 + 8 >> 2] & 127]($0) | 0)) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $24 = $0 + 340 | 0;
  if ((HEAP32[$24 >> 2] | 0) > 0) {
   $$017$i = 0;
   do {
    HEAP32[$5 + 24 + ($$017$i << 2) >> 2] = 0;
    $$017$i = $$017$i + 1 | 0;
   } while (($$017$i | 0) < (HEAP32[$24 >> 2] | 0));
  }
  HEAP32[$5 + 20 >> 2] = 0;
  HEAP32[$9 >> 2] = HEAP32[$6 >> 2];
  if (!(HEAP32[$0 + 440 >> 2] | 0)) HEAP32[$5 + 40 >> 2] = 0;
 }
 do if (!(HEAP32[$5 + 40 >> 2] | 0)) {
  $41 = HEAP32[$0 + 416 >> 2] | 0;
  $43 = HEAP32[$0 + 424 >> 2] | 0;
  $44 = 1 << $43;
  $45 = -1 << $43;
  $47 = HEAP32[$0 + 432 >> 2] | 0;
  HEAP32[$2 + 16 >> 2] = $0;
  $49 = $0 + 24 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  HEAP32[$2 >> 2] = HEAP32[$50 >> 2];
  $54 = $2 + 4 | 0;
  HEAP32[$54 >> 2] = HEAP32[$50 + 4 >> 2];
  $55 = $5 + 12 | 0;
  $56 = HEAP32[$55 >> 2] | 0;
  $57 = $5 + 16 | 0;
  $58 = HEAP32[$57 >> 2] | 0;
  $59 = $5 + 20 | 0;
  $60 = HEAP32[$59 >> 2] | 0;
  $61 = HEAP32[$1 >> 2] | 0;
  $63 = HEAP32[$5 + 64 >> 2] | 0;
  $65 = HEAP32[$0 + 412 >> 2] | 0;
  $67 = $2 + 8 | 0;
  $68 = $2 + 12 | 0;
  L16 : do if (!$60) {
   $$0166 = 0;
   $$0170 = $65;
   $$0175 = $58;
   $$0180 = $56;
   L18 : while (1) {
    if (($$0175 | 0) < 8) {
     if (!(_jpeg_fill_bit_buffer($2, $$0180, $$0175, 0) | 0)) {
      $$3169 = $$0166;
      break L16;
     }
     $72 = HEAP32[$67 >> 2] | 0;
     $73 = HEAP32[$68 >> 2] | 0;
     if (($73 | 0) < 8) {
      $$0164 = 1;
      $$2177 = $73;
      $$2182 = $72;
      label = 17;
     } else {
      $$1176 = $73;
      $$1181 = $72;
      label = 15;
     }
    } else {
     $$1176 = $$0175;
     $$1181 = $$0180;
     label = 15;
    }
    if ((label | 0) == 15) {
     label = 0;
     $77 = $$1181 >> $$1176 + -8 & 255;
     $79 = HEAP32[$63 + 144 + ($77 << 2) >> 2] | 0;
     if (!$79) {
      $$0164 = 9;
      $$2177 = $$1176;
      $$2182 = $$1181;
      label = 17;
     } else {
      $$2$ph = HEAPU8[$63 + 1168 + $77 >> 0] | 0;
      $$4179$ph = $$1176 - $79 | 0;
      $$4184$ph = $$1181;
     }
    }
    if ((label | 0) == 17) {
     label = 0;
     $85 = _jpeg_huff_decode($2, $$2182, $$2177, $63, $$0164) | 0;
     if (($85 | 0) < 0) {
      $$3169 = $$0166;
      break L16;
     }
     $$2$ph = $85;
     $$4179$ph = HEAP32[$68 >> 2] | 0;
     $$4184$ph = HEAP32[$67 >> 2] | 0;
    }
    $89 = $$2$ph >>> 4;
    switch ($$2$ph & 15) {
    case 0:
     {
      if (($89 | 0) == 15) {
       $$3 = 0;
       $$7 = $$4179$ph;
       $$7187 = $$4184$ph;
      } else break L18;
      break;
     }
    case 1:
     {
      label = 21;
      break;
     }
    default:
     {
      $90 = HEAP32[$0 >> 2] | 0;
      HEAP32[$90 + 20 >> 2] = 121;
      FUNCTION_TABLE_vii[HEAP32[$90 + 4 >> 2] & 255]($0, -1);
      label = 21;
     }
    }
    if ((label | 0) == 21) {
     label = 0;
     if (($$4179$ph | 0) < 1) {
      if (!(_jpeg_fill_bit_buffer($2, $$4184$ph, $$4179$ph, 1) | 0)) {
       $$3169 = $$0166;
       break L16;
      }
      $$5 = HEAP32[$68 >> 2] | 0;
      $$5185 = HEAP32[$67 >> 2] | 0;
     } else {
      $$5 = $$4179$ph;
      $$5185 = $$4184$ph;
     }
     $99 = $$5 + -1 | 0;
     $$3 = (1 << $99 & $$5185 | 0) == 0 ? $45 : $44;
     $$7 = $99;
     $$7187 = $$5185;
    }
    $$0197 = $89;
    $$1171 = $$0170;
    $$8 = $$7;
    $$8188 = $$7187;
    L40 : while (1) {
     $113 = $61 + (HEAP32[$47 + ($$1171 << 2) >> 2] << 1) | 0;
     do if (!(HEAP16[$113 >> 1] | 0)) if (($$0197 | 0) < 1) {
      $$11 = $$8;
      $$11191 = $$8188;
      $$2172 = $$1171;
      break L40;
     } else {
      $$10 = $$8;
      $$10190 = $$8188;
      $$1198 = $$0197 + -1 | 0;
     } else {
      if (($$8 | 0) < 1) {
       if (!(_jpeg_fill_bit_buffer($2, $$8188, $$8, 1) | 0)) {
        $$3169 = $$0166;
        break L16;
       }
       $$9 = HEAP32[$68 >> 2] | 0;
       $$9189 = HEAP32[$67 >> 2] | 0;
      } else {
       $$9 = $$8;
       $$9189 = $$8188;
      }
      $121 = $$9 + -1 | 0;
      if ((1 << $121 & $$9189 | 0) != 0 ? ($125 = HEAP16[$113 >> 1] | 0, $126 = $125 << 16 >> 16, ($44 & $126 | 0) == 0) : 0) if ($125 << 16 >> 16 > -1) {
       HEAP16[$113 >> 1] = $44 + $126;
       $$10 = $121;
       $$10190 = $$9189;
       $$1198 = $$0197;
       break;
      } else {
       HEAP16[$113 >> 1] = $45 + $126;
       $$10 = $121;
       $$10190 = $$9189;
       $$1198 = $$0197;
       break;
      } else {
       $$10 = $121;
       $$10190 = $$9189;
       $$1198 = $$0197;
      }
     } while (0);
     $136 = $$1171 + 1 | 0;
     if (($$1171 | 0) < ($41 | 0)) {
      $$0197 = $$1198;
      $$1171 = $136;
      $$8 = $$10;
      $$8188 = $$10190;
     } else {
      $$11 = $$10;
      $$11191 = $$10190;
      $$2172 = $136;
      break;
     }
    }
    if (!$$3) $$1167 = $$0166; else {
     $140 = HEAP32[$47 + ($$2172 << 2) >> 2] | 0;
     HEAP16[$61 + ($140 << 1) >> 1] = $$3;
     HEAP32[$3 + ($$0166 << 2) >> 2] = $140;
     $$1167 = $$0166 + 1 | 0;
    }
    if (($$2172 | 0) < ($41 | 0)) {
     $$0166 = $$1167;
     $$0170 = $$2172 + 1 | 0;
     $$0175 = $$11;
     $$0180 = $$11191;
    } else {
     $$1200 = 0;
     $$16 = $$11;
     $$16196 = $$11191;
     label = 58;
     break L16;
    }
   }
   $104 = 1 << $89;
   if ($89) {
    if (($$4179$ph | 0) < ($89 | 0)) {
     if (!(_jpeg_fill_bit_buffer($2, $$4184$ph, $$4179$ph, $89) | 0)) {
      $$3169 = $$0166;
      break;
     }
     $$6 = HEAP32[$68 >> 2] | 0;
     $$6186 = HEAP32[$67 >> 2] | 0;
    } else {
     $$6 = $$4179$ph;
     $$6186 = $$4184$ph;
    }
    $147 = $$6 - $89 | 0;
    $152 = ($$6186 >> $147 & HEAP32[5184 + ($89 << 2) >> 2]) + $104 | 0;
    if (!$152) {
     $$1200 = 0;
     $$16 = $147;
     $$16196 = $$6186;
     label = 58;
    } else {
     $$0199205 = $152;
     $$12192206 = $$6186;
     $$12207 = $147;
     $$2168209 = $$0166;
     $$3173208 = $$0170;
     label = 46;
    }
   } else {
    $$0199205 = 1;
    $$12192206 = $$4184$ph;
    $$12207 = $$4179$ph;
    $$2168209 = $$0166;
    $$3173208 = $$0170;
    label = 46;
   }
  } else {
   $$0199205 = $60;
   $$12192206 = $56;
   $$12207 = $58;
   $$2168209 = 0;
   $$3173208 = $65;
   label = 46;
  } while (0);
  L65 : do if ((label | 0) == 46) {
   $$13 = $$12207;
   $$13193 = $$12192206;
   $$4174 = $$3173208;
   while (1) {
    $156 = $61 + (HEAP32[$47 + ($$4174 << 2) >> 2] << 1) | 0;
    do if (HEAP16[$156 >> 1] | 0) {
     if (($$13 | 0) < 1) {
      if (!(_jpeg_fill_bit_buffer($2, $$13193, $$13, 1) | 0)) {
       $$3169 = $$2168209;
       break L65;
      }
      $$14 = HEAP32[$68 >> 2] | 0;
      $$14194 = HEAP32[$67 >> 2] | 0;
     } else {
      $$14 = $$13;
      $$14194 = $$13193;
     }
     $164 = $$14 + -1 | 0;
     if ((1 << $164 & $$14194 | 0) != 0 ? ($168 = HEAP16[$156 >> 1] | 0, $169 = $168 << 16 >> 16, ($44 & $169 | 0) == 0) : 0) if ($168 << 16 >> 16 > -1) {
      HEAP16[$156 >> 1] = $44 + $169;
      $$15 = $164;
      $$15195 = $$14194;
      break;
     } else {
      HEAP16[$156 >> 1] = $45 + $169;
      $$15 = $164;
      $$15195 = $$14194;
      break;
     } else {
      $$15 = $164;
      $$15195 = $$14194;
     }
    } else {
     $$15 = $$13;
     $$15195 = $$13193;
    } while (0);
    if (($$4174 | 0) < ($41 | 0)) {
     $$13 = $$15;
     $$13193 = $$15195;
     $$4174 = $$4174 + 1 | 0;
    } else break;
   }
   $$1200 = $$0199205 + -1 | 0;
   $$16 = $$15;
   $$16196 = $$15195;
   label = 58;
  } while (0);
  if ((label | 0) == 58) {
   $181 = HEAP32[$49 >> 2] | 0;
   HEAP32[$181 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$181 + 4 >> 2] = HEAP32[$54 >> 2];
   HEAP32[$55 >> 2] = $$16196;
   HEAP32[$57 >> 2] = $$16;
   HEAP32[$59 >> 2] = $$1200;
   break;
  }
  if (!$$3169) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $$4226 = $$3169;
  do {
   $$4226 = $$4226 + -1 | 0;
   HEAP16[$61 + (HEAP32[$3 + ($$4226 << 2) >> 2] << 1) >> 1] = 0;
  } while (($$4226 | 0) != 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 $184 = $5 + 44 | 0;
 HEAP32[$184 >> 2] = (HEAP32[$184 >> 2] | 0) + -1;
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function _mbsrtowcs($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0105132 = 0, $$0111131 = 0, $$097 = 0, $$098$lcssa = 0, $$098133 = 0, $$10 = 0, $$1106$ph = 0, $$1106147 = 0, $$1112 = 0, $$1112$ph = 0, $$11122124 = 0, $$11182 = 0, $$11183 = 0, $$199 = 0, $$199$ph = 0, $$2 = 0, $$2100154 = 0, $$2107135 = 0, $$2113153 = 0, $$3101 = 0, $$3108 = 0, $$3108$ph = 0, $$3108176 = 0, $$3114 = 0, $$4 = 0, $$4102 = 0, $$4109 = 0, $$4115 = 0, $$5 = 0, $$5103 = 0, $$5110 = 0, $$5110180 = 0, $$5110181 = 0, $$5116$ph = 0, $$5116146 = 0, $$6 = 0, $$6104$lcssa = 0, $$6104$ph = 0, $$6104148 = 0, $$6117134 = 0, $$7118 = 0, $$7118$ph = 0, $$7118175 = 0, $$7136 = 0, $$8 = 0, $$8$ph = 0, $$8119 = 0, $$8177 = 0, $$9 = 0, $$9$sink = 0, $$9120 = 0, $$9120179 = 0, $$pre = 0, $$pre$phi173Z2D = 0, $$pre$phi174Z2D = 0, $$pre$phiZ2D = 0, $$pre171 = 0, $10 = 0, $105 = 0, $108 = 0, $109 = 0, $113 = 0, $117 = 0, $123 = 0, $124 = 0, $131 = 0, $133 = 0, $137 = 0, $14 = 0, $140 = 0, $141 = 0, $145 = 0, $152 = 0, $153 = 0, $159 = 0, $17 = 0, $19 = 0, $23 = 0, $26 = 0, $33 = 0, $38 = 0, $4 = 0, $41 = 0, $47 = 0, $48 = 0, $53 = 0, $6 = 0, $60 = 0, $66 = 0, $72 = 0, $82 = 0, $83 = 0, $89 = 0, label = 0;
 $4 = HEAP32[$1 >> 2] | 0;
 if (($3 | 0) != 0 ? ($6 = HEAP32[$3 >> 2] | 0, ($6 | 0) != 0) : 0) if (!$0) {
  $$2 = $6;
  $$4102 = $4;
  $$4115 = $2;
  label = 26;
 } else {
  HEAP32[$3 >> 2] = 0;
  $$4 = $6;
  $$4109 = $0;
  $$8119 = $2;
  $$9 = $4;
  label = 48;
 } else label = 5;
 L5 : do if ((label | 0) == 5) {
  $10 = (___pthread_self_417() | 0) + 188 | 0;
  $14 = ($0 | 0) != 0;
  if (HEAP32[HEAP32[$10 >> 2] >> 2] | 0) if ($14) {
   $$1106$ph = $0;
   $$5116$ph = $2;
   $$6104$ph = $4;
   label = 33;
   break;
  } else {
   $$1112$ph = $2;
   $$199$ph = $4;
   label = 15;
   break;
  }
  if (!$14) {
   $$097 = _strlen($4) | 0;
   label = 63;
   break;
  }
  L13 : do if (!$2) $$098$lcssa = $4; else {
   $$0105132 = $0;
   $$0111131 = $2;
   $$098133 = $4;
   while (1) {
    $17 = HEAP8[$$098133 >> 0] | 0;
    if (!($17 << 24 >> 24)) break;
    $19 = $$098133 + 1 | 0;
    HEAP32[$$0105132 >> 2] = $17 << 24 >> 24 & 57343;
    $23 = $$0111131 + -1 | 0;
    if (!$23) {
     $$098$lcssa = $19;
     break L13;
    } else {
     $$0105132 = $$0105132 + 4 | 0;
     $$0111131 = $23;
     $$098133 = $19;
    }
   }
   HEAP32[$$0105132 >> 2] = 0;
   HEAP32[$1 >> 2] = 0;
   $$097 = $2 - $$0111131 | 0;
   label = 63;
   break L5;
  } while (0);
  HEAP32[$1 >> 2] = $$098$lcssa;
  $$097 = $2;
  label = 63;
 } while (0);
 L20 : while (1) {
  L21 : do if ((label | 0) == 15) {
   label = 0;
   $$1112 = $$1112$ph;
   $$199 = $$199$ph;
   while (1) {
    $26 = HEAP8[$$199 >> 0] | 0;
    if ((($26 & 255) + -1 | 0) >>> 0 < 127 ? ($$199 & 3 | 0) == 0 : 0) {
     $33 = HEAP32[$$199 >> 2] | 0;
     $38 = $33 & 255;
     if (!(($33 + -16843009 | $33) & -2139062144)) {
      $$2100154 = $$199;
      $$2113153 = $$1112;
      do {
       $$2100154 = $$2100154 + 4 | 0;
       $$2113153 = $$2113153 + -4 | 0;
       $41 = HEAP32[$$2100154 >> 2] | 0;
      } while (!(($41 + -16843009 | $41) & -2139062144 | 0));
      $$3101 = $$2100154;
      $$3114 = $$2113153;
      $48 = $41 & 255;
     } else {
      $$3101 = $$199;
      $$3114 = $$1112;
      $48 = $38;
     }
    } else {
     $$3101 = $$199;
     $$3114 = $$1112;
     $48 = $26;
    }
    $47 = $48 & 255;
    if (($47 + -1 | 0) >>> 0 >= 127) break;
    $$1112 = $$3114 + -1 | 0;
    $$199 = $$3101 + 1 | 0;
   }
   $53 = $47 + -194 | 0;
   if ($53 >>> 0 > 50) {
    $$11182 = $$3101;
    $$5110180 = $0;
    $$9120179 = $$3114;
    label = 57;
   } else {
    $$2 = HEAP32[5728 + ($53 << 2) >> 2] | 0;
    $$4102 = $$3101 + 1 | 0;
    $$4115 = $$3114;
    label = 26;
    continue L20;
   }
  } else if ((label | 0) == 26) {
   label = 0;
   $60 = (HEAPU8[$$4102 >> 0] | 0) >>> 3;
   if (($60 + -16 | $60 + ($$2 >> 26)) >>> 0 > 7) {
    $$5110 = $0;
    $$6 = $$2;
    $$9$sink = $$4102;
    $$9120 = $$4115;
    label = 56;
   } else {
    $66 = $$4102 + 1 | 0;
    if ($$2 & 33554432) {
     if ((HEAP8[$66 >> 0] & -64) << 24 >> 24 != -128) {
      $$5110 = $0;
      $$6 = $$2;
      $$9$sink = $$4102;
      $$9120 = $$4115;
      label = 56;
      break;
     }
     $72 = $$4102 + 2 | 0;
     if (!($$2 & 524288)) $$5103 = $72; else {
      if ((HEAP8[$72 >> 0] & -64) << 24 >> 24 != -128) {
       $$5110 = $0;
       $$6 = $$2;
       $$9$sink = $$4102;
       $$9120 = $$4115;
       label = 56;
       break;
      }
      $$5103 = $$4102 + 3 | 0;
     }
    } else $$5103 = $66;
    $$1112$ph = $$4115 + -1 | 0;
    $$199$ph = $$5103;
    label = 15;
    continue L20;
   }
  } else if ((label | 0) == 33) {
   label = 0;
   L23 : do if (!$$5116$ph) $$6104$lcssa = $$6104$ph; else {
    $$1106147 = $$1106$ph;
    $$5116146 = $$5116$ph;
    $$6104148 = $$6104$ph;
    while (1) {
     $82 = HEAPU8[$$6104148 >> 0] | 0;
     $83 = $82 + -1 | 0;
     if ($83 >>> 0 < 127) if (($$6104148 & 3 | 0) == 0 & $$5116146 >>> 0 > 4) {
      $$2107135 = $$1106147;
      $$6117134 = $$5116146;
      $$7136 = $$6104148;
      while (1) {
       $89 = HEAP32[$$7136 >> 2] | 0;
       if (($89 + -16843009 | $89) & -2139062144 | 0) {
        label = 42;
        break;
       }
       HEAP32[$$2107135 >> 2] = $89 & 255;
       HEAP32[$$2107135 + 4 >> 2] = HEAPU8[$$7136 + 1 >> 0];
       HEAP32[$$2107135 + 8 >> 2] = HEAPU8[$$7136 + 2 >> 0];
       $105 = $$7136 + 4 | 0;
       $108 = $$2107135 + 16 | 0;
       HEAP32[$$2107135 + 12 >> 2] = HEAPU8[$$7136 + 3 >> 0];
       $109 = $$6117134 + -4 | 0;
       if ($109 >>> 0 > 4) {
        $$2107135 = $108;
        $$6117134 = $109;
        $$7136 = $105;
       } else {
        label = 41;
        break;
       }
      }
      if ((label | 0) == 41) {
       label = 0;
       $$3108$ph = $108;
       $$7118$ph = $109;
       $$8$ph = $105;
       $$pre = HEAP8[$105 >> 0] | 0;
      } else if ((label | 0) == 42) {
       label = 0;
       $$3108$ph = $$2107135;
       $$7118$ph = $$6117134;
       $$8$ph = $$7136;
       $$pre = $89 & 255;
      }
      $$pre171 = $$pre & 255;
      $$3108 = $$3108$ph;
      $$7118 = $$7118$ph;
      $$8 = $$8$ph;
      $$pre$phi173Z2D = $$pre171 + -1 | 0;
      $$pre$phiZ2D = $$pre171;
      label = 44;
     } else {
      $$3108176 = $$1106147;
      $$7118175 = $$5116146;
      $$8177 = $$6104148;
      $$pre$phi174Z2D = $82;
     } else {
      $$3108 = $$1106147;
      $$7118 = $$5116146;
      $$8 = $$6104148;
      $$pre$phi173Z2D = $83;
      $$pre$phiZ2D = $82;
      label = 44;
     }
     if ((label | 0) == 44) {
      label = 0;
      if ($$pre$phi173Z2D >>> 0 < 127) {
       $$3108176 = $$3108;
       $$7118175 = $$7118;
       $$8177 = $$8;
       $$pre$phi174Z2D = $$pre$phiZ2D;
      } else break;
     }
     $113 = $$8177 + 1 | 0;
     HEAP32[$$3108176 >> 2] = $$pre$phi174Z2D;
     $$5116146 = $$7118175 + -1 | 0;
     if (!$$5116146) {
      $$6104$lcssa = $113;
      break L23;
     } else {
      $$1106147 = $$3108176 + 4 | 0;
      $$6104148 = $113;
     }
    }
    $117 = $$pre$phiZ2D + -194 | 0;
    if ($117 >>> 0 > 50) {
     $$11182 = $$8;
     $$5110180 = $$3108;
     $$9120179 = $$7118;
     label = 57;
     break L21;
    }
    $$4 = HEAP32[5728 + ($117 << 2) >> 2] | 0;
    $$4109 = $$3108;
    $$8119 = $$7118;
    $$9 = $$8 + 1 | 0;
    label = 48;
    continue L20;
   } while (0);
   HEAP32[$1 >> 2] = $$6104$lcssa;
   $$097 = $2;
   label = 63;
   continue L20;
  } else if ((label | 0) == 48) {
   label = 0;
   $123 = HEAPU8[$$9 >> 0] | 0;
   $124 = $123 >>> 3;
   if (($124 + -16 | $124 + ($$4 >> 26)) >>> 0 > 7) {
    $$5110 = $$4109;
    $$6 = $$4;
    $$9$sink = $$9;
    $$9120 = $$8119;
    label = 56;
   } else {
    $131 = $$9 + 1 | 0;
    $133 = $123 + -128 | $$4 << 6;
    do if (($133 | 0) < 0) {
     $137 = (HEAPU8[$131 >> 0] | 0) + -128 | 0;
     if ($137 >>> 0 <= 63) {
      $140 = $$9 + 2 | 0;
      $141 = $137 | $133 << 6;
      if (($141 | 0) >= 0) {
       $$10 = $140;
       $$5 = $141;
       break;
      }
      $145 = (HEAPU8[$140 >> 0] | 0) + -128 | 0;
      if ($145 >>> 0 <= 63) {
       $$10 = $$9 + 3 | 0;
       $$5 = $145 | $141 << 6;
       break;
      }
     }
     $152 = ___errno_location() | 0;
     HEAP32[$152 >> 2] = 25;
     $$11122124 = $$9 + -1 | 0;
     break L21;
    } else {
     $$10 = $131;
     $$5 = $133;
    } while (0);
    HEAP32[$$4109 >> 2] = $$5;
    $$1106$ph = $$4109 + 4 | 0;
    $$5116$ph = $$8119 + -1 | 0;
    $$6104$ph = $$10;
    label = 33;
    continue L20;
   }
  } else if ((label | 0) == 63) {
   label = 0;
   return $$097 | 0;
  } while (0);
  if ((label | 0) == 56) {
   label = 0;
   $153 = $$9$sink + -1 | 0;
   if (!$$6) {
    $$11182 = $153;
    $$5110180 = $$5110;
    $$9120179 = $$9120;
    label = 57;
   } else {
    $$11183 = $153;
    $$5110181 = $$5110;
    label = 61;
   }
  }
  if ((label | 0) == 57) {
   label = 0;
   if (!(HEAP8[$$11182 >> 0] | 0)) {
    if ($$5110180 | 0) {
     HEAP32[$$5110180 >> 2] = 0;
     HEAP32[$1 >> 2] = 0;
    }
    $$097 = $2 - $$9120179 | 0;
    label = 63;
    continue;
   } else {
    $$11183 = $$11182;
    $$5110181 = $$5110180;
    label = 61;
   }
  }
  if ((label | 0) == 61) {
   label = 0;
   $159 = ___errno_location() | 0;
   HEAP32[$159 >> 2] = 25;
   if (!$$5110181) {
    $$097 = -1;
    label = 63;
    continue;
   } else $$11122124 = $$11183;
  }
  HEAP32[$1 >> 2] = $$11122124;
  $$097 = -1;
  label = 63;
 }
 return 0;
}

function __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $103 = 0, $107 = 0, $114 = 0, $119 = 0, $12 = 0, $123 = 0, $132 = 0, $137 = 0, $141 = 0, $143 = 0, $147 = 0, $151 = 0, $160 = 0, $165 = 0, $169 = 0, $17 = 0, $21 = 0, $23 = 0, $30 = 0, $35 = 0, $39 = 0, $46 = 0, $5 = 0, $51 = 0, $55 = 0, $57 = 0, $64 = 0, $69 = 0, $73 = 0, $80 = 0, $85 = 0, $89 = 0, $91 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 if (($1 | 0) <= -1) {
  $12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36688) | 0, 36227) | 0, 39072) | 0, 165) | 0, 39079) | 0, 36721) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 127]($17, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  _abort();
 }
 $23 = HEAP32[$0 + 52 >> 2] | 0;
 if (($23 | 0) <= ($1 | 0)) {
  $30 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36739) | 0, 36227) | 0, 39072) | 0, 166) | 0, 39079) | 0, 36721) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $30 + (HEAP32[(HEAP32[$30 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $35 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $39 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$35 >> 2] | 0) + 28 >> 2] & 127]($35, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($30, $39) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($30) | 0;
  _abort();
 }
 if (($2 | 0) <= -1) {
  $46 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36779) | 0, 36227) | 0, 39072) | 0, 167) | 0, 39079) | 0, 36812) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $46 + (HEAP32[(HEAP32[$46 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $51 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$51 >> 2] | 0) + 28 >> 2] & 127]($51, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($46, $55) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($46) | 0;
  _abort();
 }
 $57 = HEAP32[$0 + 56 >> 2] | 0;
 if (($57 | 0) <= ($2 | 0)) {
  $64 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36830) | 0, 36227) | 0, 39072) | 0, 168) | 0, 39079) | 0, 36812) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $64 + (HEAP32[(HEAP32[$64 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $69 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $73 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$69 >> 2] | 0) + 28 >> 2] & 127]($69, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($64, $73) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($64) | 0;
  _abort();
 }
 if (($3 | 0) <= -1) {
  $80 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36870) | 0, 36227) | 0, 39072) | 0, 169) | 0, 39079) | 0, 36907) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $80 + (HEAP32[(HEAP32[$80 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $85 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $89 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$85 >> 2] | 0) + 28 >> 2] & 127]($85, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($80, $89) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($80) | 0;
  _abort();
 }
 $91 = HEAP32[$0 + 60 >> 2] | 0;
 if (($91 | 0) <= ($3 | 0)) {
  $98 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36929) | 0, 36227) | 0, 39072) | 0, 170) | 0, 39079) | 0, 36907) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $98 + (HEAP32[(HEAP32[$98 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $103 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $107 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$103 >> 2] | 0) + 28 >> 2] & 127]($103, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($98, $107) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($98) | 0;
  _abort();
 }
 if (($4 | 0) <= -1) {
  $114 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36977) | 0, 36227) | 0, 39072) | 0, 171) | 0, 39079) | 0, 37014) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $114 + (HEAP32[(HEAP32[$114 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $119 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $123 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$119 >> 2] | 0) + 28 >> 2] & 127]($119, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($114, $123) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($114) | 0;
  _abort();
 }
 if ((HEAP32[$0 + 64 >> 2] | 0) <= ($4 | 0)) {
  $132 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37036) | 0, 36227) | 0, 39072) | 0, 172) | 0, 39079) | 0, 37014) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $132 + (HEAP32[(HEAP32[$132 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $137 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $141 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$137 >> 2] | 0) + 28 >> 2] & 127]($137, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($132, $141) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($132) | 0;
  _abort();
 }
 $143 = (Math_imul($23, $2) | 0) + $1 | 0;
 $147 = (Math_imul(HEAP32[$0 + 84 >> 2] | 0, $3) | 0) + $143 | 0;
 $151 = $147 + (Math_imul(HEAP32[$0 + 88 >> 2] | 0, $4) | 0) | 0;
 if (($151 | 0) > ((Math_imul(Math_imul($57, $23) | 0, (Math_imul($91, $4) | 0) + $3 | 0) | 0) + $143 | 0)) {
  $160 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37084) | 0, 36227) | 0, 39072) | 0, 176) | 0, 39079) | 0, 36669) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $160 + (HEAP32[(HEAP32[$160 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $165 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $169 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$165 >> 2] | 0) + 28 >> 2] & 127]($165, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($160, $169) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($160) | 0;
  _abort();
 } else {
  STACKTOP = sp;
  return $151 | 0;
 }
 return 0;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPNS_4NodeILi96EEEPKhiPKii($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$065 = 0, $$066 = 0, $$in = 0, $$sroa$0120$0 = 0, $$sroa$0120$0$in = 0, $100 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $118 = 0, $119 = 0, $123 = 0, $127 = 0, $128 = 0, $129 = 0, $138 = 0, $143 = 0, $147 = 0, $148 = 0, $149 = 0, $154 = 0, $155 = 0, $156 = 0, $164 = 0, $17 = 0, $18 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $35 = 0, $40 = 0, $44 = 0, $46 = 0, $49 = 0, $54 = 0, $6 = 0, $61 = 0, $66 = 0, $7 = 0, $70 = 0, $77 = 0, $8 = 0, $82 = 0, $86 = 0, $87 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $6 = sp + 20 | 0;
 $7 = sp;
 $8 = $0 + 12 | 0;
 $9 = __ZNK6vision14BinarykMedoidsILi96EE1kEv($8) | 0;
 if ((__ZN6vision4max2IiEET_S1_S1_($9, HEAP32[$0 + 108 >> 2] | 0) | 0) >= ($5 | 0)) {
  __ZN6vision4NodeILi96EE4leafEb($1, 1);
  __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm(__ZN6vision4NodeILi96EE12reverseIndexEv($1) | 0, $5);
  $$0 = 0;
  while (1) {
   if (($$0 | 0) >= ($5 | 0)) break;
   $17 = HEAP32[$4 + ($$0 << 2) >> 2] | 0;
   $18 = __ZN6vision4NodeILi96EE12reverseIndexEv($1) | 0;
   HEAP32[(HEAP32[$18 >> 2] | 0) + ($$0 << 2) >> 2] = $17;
   $$0 = $$0 + 1 | 0;
  }
  STACKTOP = sp;
  return;
 }
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP32[$7 + 16 >> 2] = 1065353216;
 __ZN6vision14BinarykMedoidsILi96EE6assignEPKhiPKii($8, $2, $3, $4, $5);
 $23 = __ZNK6vision14BinarykMedoidsILi96EE10assignmentEv($8) | 0;
 $24 = $23 + 4 | 0;
 $25 = HEAP32[$24 >> 2] | 0;
 $26 = HEAP32[$23 >> 2] | 0;
 if (($25 - $26 >> 2 | 0) != ($5 | 0)) {
  $35 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33206) | 0, 33262) | 0, 39072) | 0, 363) | 0, 39079) | 0, 33356) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $35 + (HEAP32[(HEAP32[$35 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $40 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $44 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$40 >> 2] | 0) + 28 >> 2] & 127]($40, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($35, $44) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($35) | 0;
  _abort();
 }
 $$066 = 0;
 $$in = $26;
 $46 = $25;
 while (1) {
  if ($$066 >>> 0 >= $46 - $$in >> 2 >>> 0) {
   label = 10;
   break;
  }
  $54 = HEAP32[$$in + ($$066 << 2) >> 2] | 0;
  if (($54 | 0) == -1) {
   label = 12;
   break;
  }
  if (($54 | 0) >= ($5 | 0)) {
   label = 14;
   break;
  }
  $87 = $4 + ($54 << 2) | 0;
  if ((HEAP32[$87 >> 2] | 0) >= ($3 | 0)) {
   label = 16;
   break;
  }
  $105 = __ZNSt3__213unordered_mapIiNS_6vectorIiNS_9allocatorIiEEEENS_4hashIiEENS_8equal_toIiEENS2_INS_4pairIKiS4_EEEEEixERSA_($7, $87) | 0;
  $106 = $4 + ($$066 << 2) | 0;
  $107 = $105 + 4 | 0;
  $108 = HEAP32[$107 >> 2] | 0;
  if (($108 | 0) == (HEAP32[$105 + 8 >> 2] | 0)) __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_($105, $106); else {
   HEAP32[$108 >> 2] = HEAP32[$106 >> 2];
   HEAP32[$107 >> 2] = $108 + 4;
  }
  $$066 = $$066 + 1 | 0;
  $$in = HEAP32[$23 >> 2] | 0;
  $46 = HEAP32[$24 >> 2] | 0;
 }
 if ((label | 0) == 10) {
  $49 = $7 + 12 | 0;
  L23 : do if ((HEAP32[$49 >> 2] | 0) == 1) {
   __ZN6vision4NodeILi96EE4leafEb($1, 1);
   __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm(__ZN6vision4NodeILi96EE12reverseIndexEv($1) | 0, $5);
   $$065 = 0;
   while (1) {
    if (($$065 | 0) >= ($5 | 0)) break L23;
    $118 = HEAP32[$4 + ($$065 << 2) >> 2] | 0;
    $119 = __ZN6vision4NodeILi96EE12reverseIndexEv($1) | 0;
    HEAP32[(HEAP32[$119 >> 2] | 0) + ($$065 << 2) >> 2] = $118;
    $$065 = $$065 + 1 | 0;
   }
  } else {
   $123 = __ZN6vision4NodeILi96EE8childrenEv($1) | 0;
   __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE7reserveEm($123, HEAP32[$49 >> 2] | 0);
   $$sroa$0120$0$in = $7 + 8 | 0;
   while (1) {
    $$sroa$0120$0 = HEAP32[$$sroa$0120$0$in >> 2] | 0;
    if (!$$sroa$0120$0) break L23;
    $127 = $$sroa$0120$0;
    $128 = $127 + 12 | 0;
    $129 = $127 + 16 | 0;
    if ((HEAP32[$129 >> 2] | 0) == (HEAP32[$128 >> 2] | 0)) break;
    $148 = __Znwm(128) | 0;
    $149 = __ZN6vision28BinaryHierarchicalClusteringILi96EE10nextNodeIdEv($0) | 0;
    __ZN6vision4NodeILi96EEC2EiPKh($148, $149, $2 + ((HEAP32[$127 + 8 >> 2] | 0) * 96 | 0) | 0);
    HEAP32[$6 >> 2] = $148;
    __ZN6vision4NodeILi96EE4leafEb($148, 0);
    $154 = __ZN6vision4NodeILi96EE8childrenEv($1) | 0;
    $155 = $154 + 4 | 0;
    $156 = HEAP32[$155 >> 2] | 0;
    if (($156 | 0) == (HEAP32[$154 + 8 >> 2] | 0)) __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_($154, $6); else {
     HEAP32[$156 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$155 >> 2] = (HEAP32[$155 >> 2] | 0) + 4;
    }
    $164 = HEAP32[$128 >> 2] | 0;
    __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPNS_4NodeILi96EEEPKhiPKii($0, HEAP32[$6 >> 2] | 0, $2, $3, $164, (HEAP32[$129 >> 2] | 0) - $164 >> 2);
    $$sroa$0120$0$in = $$sroa$0120$0;
   }
   $138 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33579) | 0, 33262) | 0, 39072) | 0, 387) | 0, 39079) | 0, 33625) | 0;
   __ZNKSt3__28ios_base6getlocEv($6, $138 + (HEAP32[(HEAP32[$138 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $143 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
   $147 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$143 >> 2] | 0) + 28 >> 2] & 127]($143, 10) | 0;
   __ZNSt3__26localeD2Ev($6);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($138, $147) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($138) | 0;
   _abort();
  } while (0);
  __ZNSt3__213unordered_mapIiNS_6vectorIiNS_9allocatorIiEEEENS_4hashIiEENS_8equal_toIiEENS2_INS_4pairIKiS4_EEEEED2Ev($7);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 12) {
  $61 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33378) | 0, 33262) | 0, 39072) | 0, 365) | 0, 39079) | 0, 33421) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $61 + (HEAP32[(HEAP32[$61 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $66 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $70 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$66 >> 2] | 0) + 28 >> 2] & 127]($66, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($61, $70) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($61) | 0;
  _abort();
 } else if ((label | 0) == 14) {
  $77 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33443) | 0, 33262) | 0, 39072) | 0, 366) | 0, 39079) | 0, 33494) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $77 + (HEAP32[(HEAP32[$77 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $82 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $86 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$82 >> 2] | 0) + 28 >> 2] & 127]($82, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($77, $86) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($77) | 0;
  _abort();
 } else if ((label | 0) == 16) {
  $95 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33518) | 0, 33262) | 0, 39072) | 0, 367) | 0, 39079) | 0, 33494) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $95 + (HEAP32[(HEAP32[$95 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $100 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $104 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$100 >> 2] | 0) + 28 >> 2] & 127]($100, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($95, $104) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($95) | 0;
  _abort();
 }
}

function _realize_virt_arrays($0) {
 $0 = $0 | 0;
 var $$$i = 0, $$$i108 = 0, $$0$i = 0, $$0101 = 0, $$0102$lcssa = 0, $$0102139 = 0, $$0104$lcssa = 0, $$0104138 = 0, $$0129 = 0, $$0132 = 0, $$04853$i = 0, $$04853$i116 = 0, $$04956$i = 0, $$04956$i110 = 0, $$054$i = 0, $$054$i115 = 0, $$099137 = 0, $$099140 = 0, $$1$lcssa$i = 0, $$1$lcssa$i119 = 0, $$1100125 = 0, $$1100126 = 0, $$1103 = 0, $$1105 = 0, $$1122 = 0, $$1123 = 0, $$15155$i = 0, $$15155$i111 = 0, $$152$i = 0, $$152$i117 = 0, $$2$lcssa = 0, $$2106$lcssa = 0, $$2106130 = 0, $$2131 = 0, $$3 = 0, $$3107 = 0, $$pre$phi151Z2D = 0, $$pre$phiZ2D = 0, $1 = 0, $10 = 0, $100 = 0, $103 = 0, $109 = 0, $110 = 0, $111 = 0, $12 = 0, $128 = 0, $132 = 0, $135 = 0, $140 = 0, $141 = 0, $143 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $153 = 0, $157 = 0, $160 = 0, $162 = 0, $163 = 0, $165 = 0, $166 = 0, $168 = 0, $173 = 0, $174 = 0, $176 = 0, $181 = 0, $184 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $2 = 0, $26 = 0, $29 = 0, $3 = 0, $40 = 0, $42 = 0, $45 = 0, $49 = 0, $52 = 0, $57 = 0, $58 = 0, $60 = 0, $64 = 0, $65 = 0, $66 = 0, $68 = 0, $72 = 0, $75 = 0, $77 = 0, $78 = 0, $80 = 0, $81 = 0, $83 = 0, $88 = 0, $92 = 0, $93 = 0, $95 = 0, $$15155$i$looptemp = 0, $$15155$i111$looptemp = 0;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $2 + 68 | 0;
 $$099137 = HEAP32[$3 >> 2] | 0;
 if (!$$099137) {
  $$0102$lcssa = 0;
  $$0104$lcssa = 0;
 } else {
  $$0102139 = 0;
  $$0104138 = 0;
  $$099140 = $$099137;
  while (1) {
   if (!(HEAP32[$$099140 >> 2] | 0)) {
    $10 = HEAP32[$$099140 + 8 >> 2] | 0;
    $12 = (Math_imul($10, HEAP32[$$099140 + 12 >> 2] | 0) | 0) + $$0102139 | 0;
    $$1103 = $12;
    $$1105 = (Math_imul(HEAP32[$$099140 + 4 >> 2] | 0, $10) | 0) + $$0104138 | 0;
   } else {
    $$1103 = $$0102139;
    $$1105 = $$0104138;
   }
   $$099140 = HEAP32[$$099140 + 44 >> 2] | 0;
   if (!$$099140) {
    $$0102$lcssa = $$1103;
    $$0104$lcssa = $$1105;
    break;
   } else {
    $$0102139 = $$1103;
    $$0104138 = $$1105;
   }
  }
 }
 $19 = $2 + 72 | 0;
 $$0129 = HEAP32[$19 >> 2] | 0;
 if (!$$0129) {
  $$2$lcssa = $$0102$lcssa;
  $$2106$lcssa = $$0104$lcssa;
 } else {
  $$0132 = $$0129;
  $$2106130 = $$0104$lcssa;
  $$2131 = $$0102$lcssa;
  while (1) {
   if (!(HEAP32[$$0132 >> 2] | 0)) {
    $26 = HEAP32[$$0132 + 8 >> 2] | 0;
    $29 = (Math_imul(HEAP32[$$0132 + 12 >> 2] << 7, $26) | 0) + $$2131 | 0;
    $$3 = $29;
    $$3107 = (Math_imul($26 << 7, HEAP32[$$0132 + 4 >> 2] | 0) | 0) + $$2106130 | 0;
   } else {
    $$3 = $$2131;
    $$3107 = $$2106130;
   }
   $$0132 = HEAP32[$$0132 + 44 >> 2] | 0;
   if (!$$0132) {
    $$2$lcssa = $$3;
    $$2106$lcssa = $$3107;
    break;
   } else {
    $$2106130 = $$3107;
    $$2131 = $$3;
   }
  }
 }
 if (($$2$lcssa | 0) < 1) return;
 $40 = _jpeg_mem_available($0, $$2$lcssa, $$2106$lcssa, HEAP32[$2 + 76 >> 2] | 0) | 0;
 if (($40 | 0) < ($$2106$lcssa | 0)) {
  $42 = ($40 | 0) / ($$2$lcssa | 0) | 0;
  $$0101 = ($42 | 0) > 1 ? $42 : 1;
 } else $$0101 = 1e9;
 $$1100125 = HEAP32[$3 >> 2] | 0;
 if ($$1100125 | 0) {
  $45 = $2 + 80 | 0;
  $$1100126 = $$1100125;
  do {
   if (!(HEAP32[$$1100126 >> 2] | 0)) {
    $49 = HEAP32[$$1100126 + 4 >> 2] | 0;
    $52 = HEAP32[$$1100126 + 12 >> 2] | 0;
    if ((((($49 + -1 | 0) >>> 0) / ($52 >>> 0) | 0) + 1 | 0) > ($$0101 | 0)) {
     $57 = Math_imul($52, $$0101) | 0;
     $58 = $$1100126 + 16 | 0;
     HEAP32[$58 >> 2] = $57;
     $60 = $$1100126 + 8 | 0;
     _jpeg_open_backing_store($0, $$1100126 + 48 | 0, Math_imul(HEAP32[$60 >> 2] | 0, $49) | 0);
     HEAP32[$$1100126 + 40 >> 2] = 1;
     $$pre$phi151Z2D = $60;
     $72 = HEAP32[$58 >> 2] | 0;
    } else {
     HEAP32[$$1100126 + 16 >> 2] = $49;
     $$pre$phi151Z2D = $$1100126 + 8 | 0;
     $72 = $49;
    }
    $64 = HEAP32[$$pre$phi151Z2D >> 2] | 0;
    $65 = HEAP32[$1 >> 2] | 0;
    $66 = 999999984 / ($64 >>> 0) | 0;
    if ($64 >>> 0 > 999999984) {
     $68 = HEAP32[$0 >> 2] | 0;
     HEAP32[$68 + 20 >> 2] = 72;
     FUNCTION_TABLE_vi[HEAP32[$68 >> 2] & 255]($0);
    }
    $$$i = ($66 | 0) < ($72 | 0) ? $66 : $72;
    HEAP32[$65 + 80 >> 2] = $$$i;
    $75 = _alloc_small($0, 1, $72 << 2) | 0;
    if ($72 | 0) {
     $77 = ~$72;
     $$04956$i = 0;
     $$15155$i = $$$i;
     while (1) {
      $78 = $72 - $$04956$i | 0;
      $$15155$i$looptemp = $$15155$i;
      $$15155$i = $$15155$i >>> 0 < $78 >>> 0 ? $$15155$i : $78;
      $80 = Math_imul($$15155$i, $64) | 0;
      $81 = HEAP32[$1 >> 2] | 0;
      if ($80 >>> 0 > 999999984) {
       $83 = HEAP32[$0 >> 2] | 0;
       HEAP32[$83 + 20 >> 2] = 56;
       HEAP32[$83 + 24 >> 2] = 3;
       FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
      }
      $88 = $80 & 7;
      $$0$i = (($88 | 0) == 0 ? 0 : 8 - $88 | 0) + $80 | 0;
      $92 = $$0$i + 16 | 0;
      $93 = _jpeg_get_large($0, $92) | 0;
      if (!$93) {
       $95 = HEAP32[$0 >> 2] | 0;
       HEAP32[$95 + 20 >> 2] = 56;
       HEAP32[$95 + 24 >> 2] = 4;
       FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
      }
      $100 = $81 + 76 | 0;
      HEAP32[$100 >> 2] = (HEAP32[$100 >> 2] | 0) + $92;
      $103 = $81 + 64 | 0;
      HEAP32[$93 >> 2] = HEAP32[$103 >> 2];
      HEAP32[$93 + 4 >> 2] = $$0$i;
      HEAP32[$93 + 8 >> 2] = 0;
      HEAP32[$103 >> 2] = $93;
      if (!$$15155$i) $$1$lcssa$i = $$04956$i; else {
       $109 = $$04956$i + $77 | 0;
       $110 = ~$$15155$i$looptemp;
       $111 = $109 >>> 0 > $110 >>> 0;
       $$04853$i = $$15155$i;
       $$054$i = $93 + 16 | 0;
       $$152$i = $$04956$i;
       while (1) {
        HEAP32[$75 + ($$152$i << 2) >> 2] = $$054$i;
        $$04853$i = $$04853$i + -1 | 0;
        if (!$$04853$i) break; else {
         $$054$i = $$054$i + $64 | 0;
         $$152$i = $$152$i + 1 | 0;
        }
       }
       $$1$lcssa$i = $$04956$i + -1 - ($111 ? $109 : $110) | 0;
      }
      if ($$1$lcssa$i >>> 0 >= $72 >>> 0) break; else $$04956$i = $$1$lcssa$i;
     }
    }
    HEAP32[$$1100126 >> 2] = $75;
    HEAP32[$$1100126 + 20 >> 2] = HEAP32[$45 >> 2];
    HEAP32[$$1100126 + 24 >> 2] = 0;
    HEAP32[$$1100126 + 28 >> 2] = 0;
    HEAP32[$$1100126 + 36 >> 2] = 0;
   }
   $$1100126 = HEAP32[$$1100126 + 44 >> 2] | 0;
  } while (($$1100126 | 0) != 0);
 }
 $$1122 = HEAP32[$19 >> 2] | 0;
 if (!$$1122) return;
 $128 = $2 + 80 | 0;
 $$1123 = $$1122;
 do {
  if (!(HEAP32[$$1123 >> 2] | 0)) {
   $132 = HEAP32[$$1123 + 4 >> 2] | 0;
   $135 = HEAP32[$$1123 + 12 >> 2] | 0;
   if ((((($132 + -1 | 0) >>> 0) / ($135 >>> 0) | 0) + 1 | 0) > ($$0101 | 0)) {
    $140 = Math_imul($135, $$0101) | 0;
    $141 = $$1123 + 16 | 0;
    HEAP32[$141 >> 2] = $140;
    $143 = $$1123 + 8 | 0;
    _jpeg_open_backing_store($0, $$1123 + 48 | 0, Math_imul($132 << 7, HEAP32[$143 >> 2] | 0) | 0);
    HEAP32[$$1123 + 40 >> 2] = 1;
    $$pre$phiZ2D = $143;
    $157 = HEAP32[$141 >> 2] | 0;
   } else {
    HEAP32[$$1123 + 16 >> 2] = $132;
    $$pre$phiZ2D = $$1123 + 8 | 0;
    $157 = $132;
   }
   $148 = HEAP32[$$pre$phiZ2D >> 2] | 0;
   $149 = HEAP32[$1 >> 2] | 0;
   $150 = $148 << 7;
   $151 = 999999984 / ($150 >>> 0) | 0;
   if ($150 >>> 0 > 999999984) {
    $153 = HEAP32[$0 >> 2] | 0;
    HEAP32[$153 + 20 >> 2] = 72;
    FUNCTION_TABLE_vi[HEAP32[$153 >> 2] & 255]($0);
   }
   $$$i108 = ($151 | 0) < ($157 | 0) ? $151 : $157;
   HEAP32[$149 + 80 >> 2] = $$$i108;
   $160 = _alloc_small($0, 1, $157 << 2) | 0;
   if ($157 | 0) {
    $162 = ~$157;
    $$04956$i110 = 0;
    $$15155$i111 = $$$i108;
    while (1) {
     $163 = $157 - $$04956$i110 | 0;
     $$15155$i111$looptemp = $$15155$i111;
     $$15155$i111 = $$15155$i111 >>> 0 < $163 >>> 0 ? $$15155$i111 : $163;
     $165 = Math_imul($$15155$i111, $150) | 0;
     $166 = HEAP32[$1 >> 2] | 0;
     if ($165 >>> 0 > 999999984) {
      $168 = HEAP32[$0 >> 2] | 0;
      HEAP32[$168 + 20 >> 2] = 56;
      HEAP32[$168 + 24 >> 2] = 3;
      FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
     }
     $173 = $165 | 16;
     $174 = _jpeg_get_large($0, $173) | 0;
     if (!$174) {
      $176 = HEAP32[$0 >> 2] | 0;
      HEAP32[$176 + 20 >> 2] = 56;
      HEAP32[$176 + 24 >> 2] = 4;
      FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
     }
     $181 = $166 + 76 | 0;
     HEAP32[$181 >> 2] = (HEAP32[$181 >> 2] | 0) + $173;
     $184 = $166 + 64 | 0;
     HEAP32[$174 >> 2] = HEAP32[$184 >> 2];
     HEAP32[$174 + 4 >> 2] = $165;
     HEAP32[$174 + 8 >> 2] = 0;
     HEAP32[$184 >> 2] = $174;
     if (!$$15155$i111) $$1$lcssa$i119 = $$04956$i110; else {
      $190 = $$04956$i110 + $162 | 0;
      $191 = ~$$15155$i111$looptemp;
      $192 = $190 >>> 0 > $191 >>> 0;
      $$04853$i116 = $$15155$i111;
      $$054$i115 = $174 + 16 | 0;
      $$152$i117 = $$04956$i110;
      while (1) {
       HEAP32[$160 + ($$152$i117 << 2) >> 2] = $$054$i115;
       $$04853$i116 = $$04853$i116 + -1 | 0;
       if (!$$04853$i116) break; else {
        $$054$i115 = $$054$i115 + ($148 << 7) | 0;
        $$152$i117 = $$152$i117 + 1 | 0;
       }
      }
      $$1$lcssa$i119 = $$04956$i110 + -1 - ($192 ? $190 : $191) | 0;
     }
     if ($$1$lcssa$i119 >>> 0 >= $157 >>> 0) break; else $$04956$i110 = $$1$lcssa$i119;
    }
   }
   HEAP32[$$1123 >> 2] = $160;
   HEAP32[$$1123 + 20 >> 2] = HEAP32[$128 >> 2];
   HEAP32[$$1123 + 24 >> 2] = 0;
   HEAP32[$$1123 + 28 >> 2] = 0;
   HEAP32[$$1123 + 36 >> 2] = 0;
  }
  $$1123 = HEAP32[$$1123 + 44 >> 2] | 0;
 } while (($$1123 | 0) != 0);
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i53 = 0, $$0$i$i$i$i68 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i59 = 0, $$0$i$i2$i$i74 = 0, $$0$i$i65 = 0, $$0$pn = 0, $$049 = 0, $$050 = 0, $$3 = 0, $$3$lcssa = 0, $$4 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$ph = 0, $$sroa$047$0$copyload = 0, $10 = 0, $107 = 0, $109 = 0, $11 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $14 = 0, $141 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $165 = 0, $17 = 0, $172 = 0, $182 = 0, $184 = 0, $19 = 0, $196 = 0, $199 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $31 = 0, $33 = 0, $35 = 0, $53 = 0, $59 = 0, $60 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $74 = 0, $75 = 0, $78 = 0, $8 = 0, $84 = 0, $9 = 0, $92 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $3);
 $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 66512) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy1);
 HEAP32[$4 >> 2] = 0;
 $11 = $10 + 8 | 0;
 $$0 = $6;
 $14 = 0;
 L1 : while (1) {
  $15 = HEAP32[$1 >> 2] | 0;
  if (!(($$0 | 0) != ($7 | 0) & ($14 | 0) == 0)) {
   $182 = $15;
   break;
  }
  $17 = $15;
  if ($15) {
   $19 = HEAP32[$15 + 12 >> 2] | 0;
   if (($19 | 0) == (HEAP32[$15 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 36 >> 2] & 127]($15) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$19 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $150 = 0;
    $213 = 1;
    $70 = 0;
   } else {
    $150 = $15;
    $213 = 0;
    $70 = $17;
   }
  } else {
   $150 = 0;
   $213 = 1;
   $70 = $17;
  }
  $31 = HEAP32[$2 >> 2] | 0;
  $33 = $31;
  do if ($31) {
   $35 = HEAP32[$31 + 12 >> 2] | 0;
   if (($35 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$35 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($213) {
    $214 = $31;
    $71 = $33;
    break;
   } else {
    label = 63;
    break L1;
   } else {
    HEAP32[$2 >> 2] = 0;
    $$ph = 0;
    label = 15;
    break;
   }
  } else {
   $$ph = $33;
   label = 15;
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($213) {
    label = 63;
    break;
   } else {
    $214 = 0;
    $71 = $$ph;
   }
  }
  L24 : do if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 63]($10, HEAP8[$$0 >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
   $53 = $$0 + 1 | 0;
   if (($53 | 0) == ($7 | 0)) {
    label = 63;
    break L1;
   }
   $59 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 63]($10, HEAP8[$53 >> 0] | 0, 0) | 0;
   switch ($59 << 24 >> 24) {
   case 48:
   case 69:
    {
     $60 = $$0 + 2 | 0;
     if (($60 | 0) == ($7 | 0)) {
      label = 63;
      break L1;
     }
     $$049 = $59;
     $$050 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 63]($10, HEAP8[$60 >> 0] | 0, 0) | 0;
     $74 = $53;
     break;
    }
   default:
    {
     $$049 = 0;
     $$050 = $59;
     $74 = $$0;
    }
   }
   $69 = HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[$8 >> 2] = $70;
   HEAP32[$9 >> 2] = $71;
   HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
   HEAP32[$$byval_copy1 >> 2] = HEAP32[$9 >> 2];
   $72 = FUNCTION_TABLE_iiiiiiiii[$69 & 15]($0, $$byval_copy, $$byval_copy1, $3, $4, $5, $$050, $$049) | 0;
   HEAP32[$1 >> 2] = $72;
   $$4 = $74 + 2 | 0;
  } else {
   $75 = HEAP8[$$0 >> 0] | 0;
   if ($75 << 24 >> 24 > -1 ? ($78 = HEAP32[$11 >> 2] | 0, HEAP16[$78 + ($75 << 24 >> 24 << 1) >> 1] & 8192) : 0) {
    $$0$pn = $$0;
    while (1) {
     $$3 = $$0$pn + 1 | 0;
     if (($$3 | 0) == ($7 | 0)) {
      $$3$lcssa = $7;
      break;
     }
     $84 = HEAP8[$$3 >> 0] | 0;
     if ($84 << 24 >> 24 <= -1) {
      $$3$lcssa = $$3;
      break;
     }
     if (!(HEAP16[$78 + ($84 << 24 >> 24 << 1) >> 1] & 8192)) {
      $$3$lcssa = $$3;
      break;
     } else $$0$pn = $$3;
    }
    $107 = $214;
    $92 = $150;
    while (1) {
     if ($92) {
      $94 = HEAP32[$92 + 12 >> 2] | 0;
      if (($94 | 0) == (HEAP32[$92 + 16 >> 2] | 0)) $$0$i$i$i$i53 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$92 >> 2] | 0) + 36 >> 2] & 127]($92) | 0; else $$0$i$i$i$i53 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$94 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i53, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       $122 = 0;
       $215 = 1;
      } else {
       $122 = $92;
       $215 = 0;
      }
     } else {
      $122 = 0;
      $215 = 1;
     }
     do if ($107) {
      $109 = HEAP32[$107 + 12 >> 2] | 0;
      if (($109 | 0) == (HEAP32[$107 + 16 >> 2] | 0)) $$0$i$i2$i$i59 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$107 >> 2] | 0) + 36 >> 2] & 127]($107) | 0; else $$0$i$i2$i$i59 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$109 >> 0] | 0) | 0;
      if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i59, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($215) {
       $216 = $107;
       break;
      } else {
       $$4 = $$3$lcssa;
       break L24;
      } else {
       HEAP32[$2 >> 2] = 0;
       label = 42;
       break;
      }
     } else label = 42; while (0);
     if ((label | 0) == 42) {
      label = 0;
      if ($215) {
       $$4 = $$3$lcssa;
       break L24;
      } else $216 = 0;
     }
     $121 = $122 + 12 | 0;
     $123 = HEAP32[$121 >> 2] | 0;
     $124 = $122 + 16 | 0;
     if (($123 | 0) == (HEAP32[$124 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$122 >> 2] | 0) + 36 >> 2] & 127]($122) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$123 >> 0] | 0) | 0;
     if (($$0$i$i & 255) << 24 >> 24 <= -1) {
      $$4 = $$3$lcssa;
      break L24;
     }
     if (!(HEAP16[(HEAP32[$11 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
      $$4 = $$3$lcssa;
      break L24;
     }
     $141 = HEAP32[$121 >> 2] | 0;
     if (($141 | 0) == (HEAP32[$124 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$122 >> 2] | 0) + 40 >> 2] & 127]($122) | 0; else {
      HEAP32[$121 >> 2] = $141 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$141 >> 0] | 0) | 0;
     }
     $107 = $216;
     $92 = $122;
    }
   }
   $149 = $150 + 12 | 0;
   $151 = HEAP32[$149 >> 2] | 0;
   $152 = $150 + 16 | 0;
   if (($151 | 0) == (HEAP32[$152 >> 2] | 0)) $$0$i$i65 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$150 >> 2] | 0) + 36 >> 2] & 127]($150) | 0; else $$0$i$i65 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$151 >> 0] | 0) | 0;
   $165 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10, $$0$i$i65 & 255) | 0;
   if ($165 << 24 >> 24 != (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10, HEAP8[$$0 >> 0] | 0) | 0) << 24 >> 24) {
    HEAP32[$4 >> 2] = 4;
    $$4 = $$0;
    break;
   }
   $172 = HEAP32[$149 >> 2] | 0;
   if (($172 | 0) == (HEAP32[$152 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$150 >> 2] | 0) + 40 >> 2] & 127]($150) | 0; else {
    HEAP32[$149 >> 2] = $172 + 1;
    __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$172 >> 0] | 0) | 0;
   }
   $$4 = $$0 + 1 | 0;
  } while (0);
  $$0 = $$4;
  $14 = HEAP32[$4 >> 2] | 0;
 }
 if ((label | 0) == 63) {
  HEAP32[$4 >> 2] = 4;
  $182 = $150;
 }
 if ($182) {
  $184 = HEAP32[$182 + 12 >> 2] | 0;
  if (($184 | 0) == (HEAP32[$182 + 16 >> 2] | 0)) $$0$i$i$i$i68 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$182 >> 2] | 0) + 36 >> 2] & 127]($182) | 0; else $$0$i$i$i$i68 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$184 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i68, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $$sroa$047$0$copyload = 0;
   $217 = 1;
  } else {
   $$sroa$047$0$copyload = $182;
   $217 = 0;
  }
 } else {
  $$sroa$047$0$copyload = 0;
  $217 = 1;
 }
 $196 = HEAP32[$2 >> 2] | 0;
 do if ($196) {
  $199 = HEAP32[$196 + 12 >> 2] | 0;
  if (($199 | 0) == (HEAP32[$196 + 16 >> 2] | 0)) $$0$i$i2$i$i74 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$196 >> 2] | 0) + 36 >> 2] & 127]($196) | 0; else $$0$i$i2$i$i74 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$199 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i74, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($217) break; else {
   label = 78;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 76;
   break;
  }
 } else label = 76; while (0);
 if ((label | 0) == 76 ? $217 : 0) label = 78;
 if ((label | 0) == 78) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 STACKTOP = sp;
 return $$sroa$047$0$copyload | 0;
}

function __ZNK6vision21HoughSimilarityVoting16getBinsFromIndexERiS1_S1_S1_i($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$neg31 = 0, $10 = 0, $104 = 0, $108 = 0, $109 = 0, $116 = 0, $121 = 0, $125 = 0, $13 = 0, $134 = 0, $139 = 0, $143 = 0, $15 = 0, $150 = 0, $155 = 0, $159 = 0, $168 = 0, $173 = 0, $177 = 0, $22 = 0, $27 = 0, $31 = 0, $37 = 0, $39 = 0, $40 = 0, $47 = 0, $52 = 0, $56 = 0, $6 = 0, $64 = 0, $69 = 0, $7 = 0, $73 = 0, $74 = 0, $81 = 0, $86 = 0, $90 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $6 = sp;
 $7 = $0 + 88 | 0;
 $10 = $0 + 84 | 0;
 $13 = $0 + 52 | 0;
 $15 = ((($5 | 0) % (HEAP32[$7 >> 2] | 0) | 0 | 0) % (HEAP32[$10 >> 2] | 0) | 0 | 0) % (HEAP32[$13 >> 2] | 0) | 0;
 HEAP32[$1 >> 2] = $15;
 $22 = ((($5 - $15 | 0) % (HEAP32[$7 >> 2] | 0) | 0 | 0) % (HEAP32[$10 >> 2] | 0) | 0 | 0) / (HEAP32[$13 >> 2] | 0) | 0;
 HEAP32[$2 >> 2] = $22;
 $27 = $5 - (HEAP32[$1 >> 2] | 0) - (Math_imul(HEAP32[$13 >> 2] | 0, $22) | 0) | 0;
 $31 = (($27 | 0) % (HEAP32[$7 >> 2] | 0) | 0 | 0) / (HEAP32[$10 >> 2] | 0) | 0;
 HEAP32[$3 >> 2] = $31;
 $$neg31 = Math_imul(HEAP32[$13 >> 2] | 0, HEAP32[$2 >> 2] | 0) | 0;
 $37 = $5 - (HEAP32[$1 >> 2] | 0) - ((Math_imul(HEAP32[$10 >> 2] | 0, $31) | 0) + $$neg31) | 0;
 $39 = ($37 | 0) / (HEAP32[$7 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = $39;
 $40 = HEAP32[$1 >> 2] | 0;
 if (($40 | 0) <= -1) {
  $47 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36688) | 0, 36227) | 0, 39072) | 0, 190) | 0, 39079) | 0, 36721) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $47 + (HEAP32[(HEAP32[$47 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $52 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $56 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$52 >> 2] | 0) + 28 >> 2] & 127]($52, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($47, $56) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($47) | 0;
  _abort();
 }
 if (($40 | 0) >= (HEAP32[$13 >> 2] | 0)) {
  $64 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36739) | 0, 36227) | 0, 39072) | 0, 191) | 0, 39079) | 0, 36721) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $64 + (HEAP32[(HEAP32[$64 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $69 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $73 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$69 >> 2] | 0) + 28 >> 2] & 127]($69, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($64, $73) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($64) | 0;
  _abort();
 }
 $74 = HEAP32[$2 >> 2] | 0;
 if (($74 | 0) <= -1) {
  $81 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36779) | 0, 36227) | 0, 39072) | 0, 192) | 0, 39079) | 0, 36812) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $81 + (HEAP32[(HEAP32[$81 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $86 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $90 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$86 >> 2] | 0) + 28 >> 2] & 127]($86, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($81, $90) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($81) | 0;
  _abort();
 }
 if (($74 | 0) >= (HEAP32[$0 + 56 >> 2] | 0)) {
  $99 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36830) | 0, 36227) | 0, 39072) | 0, 193) | 0, 39079) | 0, 36812) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $99 + (HEAP32[(HEAP32[$99 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $104 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $108 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$104 >> 2] | 0) + 28 >> 2] & 127]($104, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($99, $108) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($99) | 0;
  _abort();
 }
 $109 = HEAP32[$3 >> 2] | 0;
 if (($109 | 0) <= -1) {
  $116 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36870) | 0, 36227) | 0, 39072) | 0, 194) | 0, 39079) | 0, 36907) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $116 + (HEAP32[(HEAP32[$116 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $121 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $125 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$121 >> 2] | 0) + 28 >> 2] & 127]($121, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($116, $125) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($116) | 0;
  _abort();
 }
 if (($109 | 0) >= (HEAP32[$0 + 60 >> 2] | 0)) {
  $134 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36929) | 0, 36227) | 0, 39072) | 0, 195) | 0, 39079) | 0, 36907) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $134 + (HEAP32[(HEAP32[$134 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $139 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $143 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$139 >> 2] | 0) + 28 >> 2] & 127]($139, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($134, $143) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($134) | 0;
  _abort();
 }
 if (($39 | 0) <= -1) {
  $150 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36977) | 0, 36227) | 0, 39072) | 0, 196) | 0, 39079) | 0, 37014) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $150 + (HEAP32[(HEAP32[$150 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $155 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $159 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$155 >> 2] | 0) + 28 >> 2] & 127]($155, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($150, $159) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($150) | 0;
  _abort();
 }
 if (($39 | 0) < (HEAP32[$0 + 64 >> 2] | 0)) {
  STACKTOP = sp;
  return;
 } else {
  $168 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37036) | 0, 36227) | 0, 39072) | 0, 197) | 0, 39079) | 0, 37014) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $168 + (HEAP32[(HEAP32[$168 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $173 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
  $177 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$173 >> 2] | 0) + 28 >> 2] & 127]($173, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($168, $177) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($168) | 0;
  _abort();
 }
}

function _hexfloat($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0$be = 0, $$0$ph = 0, $$0133 = 0, $$0143 = 0, $$0151 = 0, $$0154 = 0.0, $$0155 = 0.0, $$0158 = 0.0, $$0163 = 0, $$0169 = 0.0, $$0170 = 0, $$0170173 = 0, $$0170174 = 0, $$1149 = 0, $$1149$ph = 0, $$1152 = 0, $$1156 = 0.0, $$1159 = 0.0, $$1164 = 0, $$2150 = 0, $$2153 = 0, $$2157 = 0.0, $$2160 = 0.0, $$2165 = 0, $$3 = 0, $$3$be = 0, $$3$lcssa = 0, $$3$ph = 0, $$3146 = 0, $$3146$ph = 0, $$3161$lcssa = 0.0, $$3161181 = 0.0, $$3166$lcssa = 0, $$3166185 = 0, $$4147 = 0, $$4162 = 0.0, $$4167$lcssa = 0, $$4167180 = 0, $$5168 = 0, $$pre = 0, $$pre$phi204Z2D = 0.0, $105 = 0, $106 = 0, $107 = 0, $117 = 0, $118 = 0, $131 = 0, $133 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $14 = 0, $142 = 0, $144 = 0, $150 = 0, $154 = 0, $156 = 0, $162 = 0, $167 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $177 = 0, $180 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $194 = 0.0, $195 = 0, $208 = 0.0, $21 = 0, $210 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $29 = 0, $30 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $42 = 0, $43 = 0, $47 = 0, $5 = 0, $52 = 0, $54 = 0, $6 = 0, $66 = 0.0, $7 = 0, $73 = 0, $75 = 0, $84 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond172 = 0, label = 0, $106$looptemp = 0, $107$looptemp = 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $0 + 104 | 0;
 if ($6 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
  HEAP32[$5 >> 2] = $6 + 1;
  $$0$ph = HEAPU8[$6 >> 0] | 0;
 } else $$0$ph = ___shgetc($0) | 0;
 $$0 = $$0$ph;
 $$0143 = 0;
 L5 : while (1) {
  switch ($$0 | 0) {
  case 46:
   {
    label = 10;
    break L5;
    break;
   }
  case 48:
   break;
  default:
   {
    $$1149$ph = 0;
    $$3$ph = $$0;
    $$3146$ph = $$0143;
    $212 = 0;
    $213 = 0;
    break L5;
   }
  }
  $14 = HEAP32[$5 >> 2] | 0;
  if ($14 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
   HEAP32[$5 >> 2] = $14 + 1;
   $$0$be = HEAPU8[$14 >> 0] | 0;
  } else $$0$be = ___shgetc($0) | 0;
  $$0 = $$0$be;
  $$0143 = 1;
 }
 if ((label | 0) == 10) {
  $21 = HEAP32[$5 >> 2] | 0;
  if ($21 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
   HEAP32[$5 >> 2] = $21 + 1;
   $29 = HEAPU8[$21 >> 0] | 0;
  } else $29 = ___shgetc($0) | 0;
  if (($29 | 0) == 48) {
   $37 = 0;
   $38 = 0;
   while (1) {
    $30 = HEAP32[$5 >> 2] | 0;
    if ($30 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
     HEAP32[$5 >> 2] = $30 + 1;
     $42 = HEAPU8[$30 >> 0] | 0;
    } else $42 = ___shgetc($0) | 0;
    $39 = _i64Add($37 | 0, $38 | 0, -1, -1) | 0;
    $40 = getTempRet0() | 0;
    if (($42 | 0) == 48) {
     $37 = $39;
     $38 = $40;
    } else {
     $$1149$ph = 1;
     $$3$ph = $42;
     $$3146$ph = 1;
     $212 = $39;
     $213 = $40;
     break;
    }
   }
  } else {
   $$1149$ph = 1;
   $$3$ph = $29;
   $$3146$ph = $$0143;
   $212 = 0;
   $213 = 0;
  }
 }
 $$0151 = 0;
 $$0155 = 1.0;
 $$0158 = 0.0;
 $$0163 = 0;
 $$1149 = $$1149$ph;
 $$3 = $$3$ph;
 $$3146 = $$3146$ph;
 $52 = 0;
 $54 = 0;
 $97 = $212;
 $99 = $213;
 while (1) {
  $43 = $$3 + -48 | 0;
  $$pre = $$3 | 32;
  if ($43 >>> 0 >= 10) {
   $47 = ($$3 | 0) == 46;
   if (!($47 | ($$pre + -97 | 0) >>> 0 < 6)) {
    $$3$lcssa = $$3;
    break;
   }
   if ($47) if (!$$1149) {
    $$2150 = 1;
    $$2153 = $$0151;
    $$2157 = $$0155;
    $$2160 = $$0158;
    $$2165 = $$0163;
    $$4147 = $$3146;
    $214 = $54;
    $215 = $52;
    $216 = $54;
    $217 = $52;
   } else {
    $$3$lcssa = 46;
    break;
   } else label = 24;
  } else label = 24;
  if ((label | 0) == 24) {
   label = 0;
   $$0133 = ($$3 | 0) > 57 ? $$pre + -87 | 0 : $43;
   do if (!(($52 | 0) < 0 | ($52 | 0) == 0 & $54 >>> 0 < 8)) if (($52 | 0) < 0 | ($52 | 0) == 0 & $54 >>> 0 < 14) {
    $66 = $$0155 * .0625;
    $$1152 = $$0151;
    $$1156 = $66;
    $$1159 = $$0158 + $66 * +($$0133 | 0);
    $$1164 = $$0163;
    break;
   } else {
    $or$cond = ($$0151 | 0) != 0 | ($$0133 | 0) == 0;
    $$1152 = $or$cond ? $$0151 : 1;
    $$1156 = $$0155;
    $$1159 = $or$cond ? $$0158 : $$0158 + $$0155 * .5;
    $$1164 = $$0163;
    break;
   } else {
    $$1152 = $$0151;
    $$1156 = $$0155;
    $$1159 = $$0158;
    $$1164 = $$0133 + ($$0163 << 4) | 0;
   } while (0);
   $73 = _i64Add($54 | 0, $52 | 0, 1, 0) | 0;
   $$2150 = $$1149;
   $$2153 = $$1152;
   $$2157 = $$1156;
   $$2160 = $$1159;
   $$2165 = $$1164;
   $$4147 = 1;
   $214 = $97;
   $215 = $99;
   $216 = $73;
   $217 = getTempRet0() | 0;
  }
  $75 = HEAP32[$5 >> 2] | 0;
  if ($75 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
   HEAP32[$5 >> 2] = $75 + 1;
   $$3$be = HEAPU8[$75 >> 0] | 0;
  } else $$3$be = ___shgetc($0) | 0;
  $$0151 = $$2153;
  $$0155 = $$2157;
  $$0158 = $$2160;
  $$0163 = $$2165;
  $$1149 = $$2150;
  $$3 = $$3$be;
  $$3146 = $$4147;
  $52 = $217;
  $54 = $216;
  $97 = $214;
  $99 = $215;
 }
 do if (!$$3146) {
  $84 = (HEAP32[$7 >> 2] | 0) == 0;
  if (!$84) HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
  if ($4) {
   if (!$84 ? (HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1, !(($$1149 | 0) == 0 | $84)) : 0) HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
  } else ___shlim($0, 0, 0);
  $$0169 = +($3 | 0) * 0.0;
 } else {
  $95 = ($$1149 | 0) == 0;
  $96 = $95 ? $54 : $97;
  $98 = $95 ? $52 : $99;
  if (($52 | 0) < 0 | ($52 | 0) == 0 & $54 >>> 0 < 8) {
   $$3166185 = $$0163;
   $106 = $54;
   $107 = $52;
   while (1) {
    $105 = $$3166185 << 4;
    $106$looptemp = $106;
    $106 = _i64Add($106 | 0, $107 | 0, 1, 0) | 0;
    $107$looptemp = $107;
    $107 = getTempRet0() | 0;
    if (!(($107$looptemp | 0) < 0 | ($107$looptemp | 0) == 0 & $106$looptemp >>> 0 < 7)) {
     $$3166$lcssa = $105;
     break;
    } else $$3166185 = $105;
   }
  } else $$3166$lcssa = $$0163;
  if (($$3$lcssa | 32 | 0) == 112) {
   $117 = _scanexp($0, $4) | 0;
   $118 = getTempRet0() | 0;
   if (($117 | 0) == 0 & ($118 | 0) == -2147483648) {
    if (!$4) {
     ___shlim($0, 0, 0);
     $$0169 = 0.0;
     break;
    }
    if (!(HEAP32[$7 >> 2] | 0)) {
     $135 = 0;
     $136 = 0;
    } else {
     HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
     $135 = 0;
     $136 = 0;
    }
   } else {
    $135 = $117;
    $136 = $118;
   }
  } else if (!(HEAP32[$7 >> 2] | 0)) {
   $135 = 0;
   $136 = 0;
  } else {
   HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
   $135 = 0;
   $136 = 0;
  }
  $131 = _bitshift64Shl($96 | 0, $98 | 0, 2) | 0;
  $133 = _i64Add($131 | 0, getTempRet0() | 0, -32, -1) | 0;
  $137 = _i64Add($133 | 0, getTempRet0() | 0, $135 | 0, $136 | 0) | 0;
  $138 = getTempRet0() | 0;
  if (!$$3166$lcssa) {
   $$0169 = +($3 | 0) * 0.0;
   break;
  }
  $142 = 0 - $2 | 0;
  $144 = (($142 | 0) < 0) << 31 >> 31;
  if (($138 | 0) > ($144 | 0) | ($138 | 0) == ($144 | 0) & $137 >>> 0 > $142 >>> 0) {
   $150 = ___errno_location() | 0;
   HEAP32[$150 >> 2] = 68;
   $$0169 = +($3 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
   break;
  }
  $154 = $2 + -106 | 0;
  $156 = (($154 | 0) < 0) << 31 >> 31;
  if (($138 | 0) < ($156 | 0) | ($138 | 0) == ($156 | 0) & $137 >>> 0 < $154 >>> 0) {
   $162 = ___errno_location() | 0;
   HEAP32[$162 >> 2] = 68;
   $$0169 = +($3 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
   break;
  }
  if (($$3166$lcssa | 0) > -1) {
   $$3161181 = $$0158;
   $$4167180 = $$3166$lcssa;
   $171 = $137;
   $172 = $138;
   while (1) {
    $167 = !($$3161181 >= .5);
    $$5168 = $$4167180 << 1 | ($167 ^ 1) & 1;
    $$4162 = $$3161181 + ($167 ? $$3161181 : $$3161181 + -1.0);
    $173 = _i64Add($171 | 0, $172 | 0, -1, -1) | 0;
    $174 = getTempRet0() | 0;
    if (($$5168 | 0) > -1) {
     $$3161181 = $$4162;
     $$4167180 = $$5168;
     $171 = $173;
     $172 = $174;
    } else {
     $$3161$lcssa = $$4162;
     $$4167$lcssa = $$5168;
     $182 = $173;
     $183 = $174;
     break;
    }
   }
  } else {
   $$3161$lcssa = $$0158;
   $$4167$lcssa = $$3166$lcssa;
   $182 = $137;
   $183 = $138;
  }
  $177 = (($1 | 0) < 0) << 31 >> 31;
  $180 = _i64Subtract(32, 0, $2 | 0, (($2 | 0) < 0) << 31 >> 31 | 0) | 0;
  $184 = _i64Add($180 | 0, getTempRet0() | 0, $182 | 0, $183 | 0) | 0;
  $185 = getTempRet0() | 0;
  if (($185 | 0) < ($177 | 0) | ($185 | 0) == ($177 | 0) & $184 >>> 0 < $1 >>> 0) if (($184 | 0) > 0) {
   $$0170 = $184;
   label = 65;
  } else {
   $$0170174 = 0;
   $195 = 84;
   label = 67;
  } else {
   $$0170 = $1;
   label = 65;
  }
  if ((label | 0) == 65) if (($$0170 | 0) < 53) {
   $$0170174 = $$0170;
   $195 = 84 - $$0170 | 0;
   label = 67;
  } else {
   $$0154 = 0.0;
   $$0170173 = $$0170;
   $$pre$phi204Z2D = +($3 | 0);
  }
  if ((label | 0) == 67) {
   $194 = +($3 | 0);
   $$0154 = +_copysignl(+_scalbn(1.0, $195), $194);
   $$0170173 = $$0170174;
   $$pre$phi204Z2D = $194;
  }
  $or$cond172 = ($$4167$lcssa & 1 | 0) == 0 & ($$3161$lcssa != 0.0 & ($$0170173 | 0) < 32);
  $208 = ($or$cond172 ? 0.0 : $$3161$lcssa) * $$pre$phi204Z2D + ($$0154 + $$pre$phi204Z2D * +(($$4167$lcssa + ($or$cond172 & 1) | 0) >>> 0)) - $$0154;
  if (!($208 != 0.0)) {
   $210 = ___errno_location() | 0;
   HEAP32[$210 >> 2] = 68;
  }
  $$0169 = +_scalbnl($208, $182);
 } while (0);
 return +$$0169;
}

function __ZN6vision38ComputeSubpixelHessianCoarseOctavePairEPfS0_RKNS_5ImageES3_S3_ii($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $10 = 0, $101 = 0, $106 = 0, $11 = 0, $110 = 0, $112 = 0, $12 = 0, $120 = 0, $125 = 0, $129 = 0, $13 = 0, $131 = 0, $133 = 0, $135 = 0, $137 = 0, $14 = 0, $142 = 0.0, $143 = 0.0, $149 = 0.0, $153 = 0.0, $156 = 0.0, $160 = 0.0, $165 = 0.0, $169 = 0.0, $171 = 0.0, $175 = 0.0, $179 = 0.0, $181 = 0, $24 = 0, $29 = 0, $33 = 0, $34 = 0, $36 = 0, $44 = 0, $49 = 0, $53 = 0, $55 = 0, $63 = 0, $68 = 0, $7 = 0, $72 = 0, $74 = 0, $8 = 0, $82 = 0, $87 = 0, $9 = 0, $91 = 0, $93 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $7 = sp + 28 | 0;
 $8 = sp + 24 | 0;
 $9 = sp + 20 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 12 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 if (($5 | 0) > 0 ? ($5 + 1 | 0) >>> 0 < (__ZNK6vision5Image5widthEv($3) | 0) >>> 0 : 0) {
  $34 = $6 + -1 | 0;
  if (($6 | 0) > 0 ? ($36 = $6 + 1 | 0, $36 >>> 0 < (__ZNK6vision5Image6heightEv($3) | 0) >>> 0) : 0) {
   $55 = (__ZNK6vision5Image5widthEv($2) | 0) >>> 1;
   if (($55 | 0) != (__ZNK6vision5Image5widthEv($3) | 0)) {
    $63 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29093) | 0, 28600) | 0, 39072) | 0, 361) | 0, 39079) | 0, 29150) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $63 + (HEAP32[(HEAP32[$63 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $68 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $72 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$68 >> 2] | 0) + 28 >> 2] & 127]($68, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($63, $72) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($63) | 0;
    _abort();
   }
   $74 = (__ZNK6vision5Image5widthEv($2) | 0) >>> 1;
   if (($74 | 0) != (__ZNK6vision5Image5widthEv($4) | 0)) {
    $82 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29180) | 0, 28600) | 0, 39072) | 0, 362) | 0, 39079) | 0, 29150) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $82 + (HEAP32[(HEAP32[$82 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $87 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $91 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$87 >> 2] | 0) + 28 >> 2] & 127]($87, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($82, $91) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($82) | 0;
    _abort();
   }
   $93 = (__ZNK6vision5Image6heightEv($2) | 0) >>> 1;
   if (($93 | 0) != (__ZNK6vision5Image6heightEv($3) | 0)) {
    $101 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29237) | 0, 28600) | 0, 39072) | 0, 363) | 0, 39079) | 0, 29150) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $101 + (HEAP32[(HEAP32[$101 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $106 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $110 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$106 >> 2] | 0) + 28 >> 2] & 127]($106, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($101, $110) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($101) | 0;
    _abort();
   }
   $112 = (__ZNK6vision5Image6heightEv($2) | 0) >>> 1;
   if (($112 | 0) == (__ZNK6vision5Image6heightEv($4) | 0)) {
    $131 = (__ZNK6vision5Image3getIfEEPKT_m($3, $6) | 0) + ($5 << 2) | 0;
    $133 = (__ZNK6vision5Image3getIfEEPKT_m($4, $34) | 0) + ($5 << 2) | 0;
    $135 = (__ZNK6vision5Image3getIfEEPKT_m($4, $6) | 0) + ($5 << 2) | 0;
    $137 = (__ZNK6vision5Image3getIfEEPKT_m($4, $36) | 0) + ($5 << 2) | 0;
    __ZN6vision23bilinear_upsample_pointERfS0_ffi($8, $9, +($5 | 0), +($6 | 0), 1);
    __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii($10, $11, $12, $13, $14, $3, $5, $6);
    $142 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($2, +HEAPF32[$8 >> 2], +HEAPF32[$9 >> 2]);
    $143 = +HEAPF32[$135 >> 2];
    $149 = $143 + ($142 - +HEAPF32[$131 >> 2] * 2.0);
    $153 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($2, +HEAPF32[$8 >> 2] + -2.0, +HEAPF32[$9 >> 2]);
    $156 = $153 + +HEAPF32[$135 + 4 >> 2];
    $160 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($2, +HEAPF32[$8 >> 2] + 2.0, +HEAPF32[$9 >> 2]);
    $165 = ($156 - ($160 + +HEAPF32[$135 + -4 >> 2])) * .25;
    $169 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($2, +HEAPF32[$8 >> 2], +HEAPF32[$9 >> 2] + -2.0);
    $171 = $169 + +HEAPF32[$137 >> 2];
    $175 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($2, +HEAPF32[$8 >> 2], +HEAPF32[$9 >> 2] + 2.0);
    $179 = ($171 - ($175 + +HEAPF32[$133 >> 2])) * .25;
    HEAP32[$0 >> 2] = HEAP32[$12 >> 2];
    $181 = HEAP32[$14 >> 2] | 0;
    HEAP32[$0 + 4 >> 2] = $181;
    HEAPF32[$0 + 8 >> 2] = $165;
    HEAP32[$0 + 12 >> 2] = $181;
    HEAP32[$0 + 16 >> 2] = HEAP32[$13 >> 2];
    HEAPF32[$0 + 20 >> 2] = $179;
    HEAPF32[$0 + 24 >> 2] = $165;
    HEAPF32[$0 + 28 >> 2] = $179;
    HEAPF32[$0 + 32 >> 2] = $149;
    HEAPF32[$1 >> 2] = -+HEAPF32[$10 >> 2];
    HEAPF32[$1 + 4 >> 2] = -+HEAPF32[$11 >> 2];
    HEAPF32[$1 + 8 >> 2] = -(($143 - $142) * .5);
    STACKTOP = sp;
    return;
   } else {
    $120 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29296) | 0, 28600) | 0, 39072) | 0, 364) | 0, 39079) | 0, 29150) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $120 + (HEAP32[(HEAP32[$120 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $125 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $129 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$125 >> 2] | 0) + 28 >> 2] & 127]($125, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($120, $129) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($120) | 0;
    _abort();
   }
  }
  $44 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29018) | 0, 28600) | 0, 39072) | 0, 360) | 0, 39079) | 0, 29077) | 0;
  __ZNKSt3__28ios_base6getlocEv($7, $44 + (HEAP32[(HEAP32[$44 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $49 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
  $53 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$49 >> 2] | 0) + 28 >> 2] & 127]($49, 10) | 0;
  __ZNSt3__26localeD2Ev($7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($44, $53) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($44) | 0;
  _abort();
 }
 $24 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 28944) | 0, 28600) | 0, 39072) | 0, 359) | 0, 39079) | 0, 29002) | 0;
 __ZNKSt3__28ios_base6getlocEv($7, $24 + (HEAP32[(HEAP32[$24 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $29 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
 $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$29 >> 2] | 0) + 28 >> 2] & 127]($29, 10) | 0;
 __ZNSt3__26localeD2Ev($7);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($24, $33) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($24) | 0;
 _abort();
}

function _kpmSetRefDataSet($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0156 = 0, $$0157 = 0, $$0158 = 0, $$0159 = 0, $$0161 = 0, $$0162 = 0, $$0163 = 0, $$0165 = 0, $$1160 = 0, $$1164 = 0, $$2 = 0, $$pre = 0, $$pre199 = 0, $$pre201 = 0, $11 = 0, $110 = 0, $116 = 0, $12 = 0, $123 = 0, $126 = 0, $148 = 0, $152 = 0, $157 = 0, $16 = 0, $164 = 0, $165 = 0, $17 = 0, $2 = 0, $20 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $56 = 0, $59 = 0, $63 = 0, $68 = 0, $72 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $82 = 0, $86 = 0, $9 = 0, $90 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 96 | 0;
 $3 = sp + 84 | 0;
 $4 = sp + 72 | 0;
 $5 = sp + 52 | 0;
 L1 : do if (($0 | 0) != 0 & ($1 | 0) != 0) {
  $8 = $1 + 4 | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  if (!$9) {
   _arLog(0, 3, 26571, $vararg_buffer1);
   $$0165 = -1;
   break;
  }
  $11 = $0 + 28 | 0;
  $12 = HEAP32[$11 >> 2] | 0;
  if ($12) {
   _free($12);
   $$pre = HEAP32[$8 >> 2] | 0;
   if (!$$pre) {
    HEAP32[$11 >> 2] = 0;
    $27 = 0;
   } else {
    $16 = $$pre;
    label = 7;
   }
  } else {
   $16 = $9;
   label = 7;
  }
  L9 : do if ((label | 0) == 7) {
   $17 = _malloc($16 * 132 | 0) | 0;
   HEAP32[$11 >> 2] = $17;
   if (!$17) {
    _arLog(0, 3, 45930, $vararg_buffer3);
    _exit(1);
   }
   $$0163 = 0;
   $20 = $16;
   while (1) {
    if (($$0163 | 0) >= ($20 | 0)) {
     $27 = $20;
     break L9;
    }
    _memcpy((HEAP32[$11 >> 2] | 0) + ($$0163 * 132 | 0) | 0, (HEAP32[$1 >> 2] | 0) + ($$0163 * 132 | 0) | 0, 132) | 0;
    $$0163 = $$0163 + 1 | 0;
    $20 = HEAP32[$8 >> 2] | 0;
   }
  } while (0);
  $26 = $0 + 32 | 0;
  HEAP32[$26 >> 2] = $27;
  $28 = $0 + 36 | 0;
  $29 = HEAP32[$28 >> 2] | 0;
  if ($29 | 0) {
   $31 = $0 + 40 | 0;
   $$1164 = 0;
   $35 = $29;
   while (1) {
    if (($$1164 | 0) >= (HEAP32[$31 >> 2] | 0)) break;
    $36 = HEAP32[$35 + ($$1164 * 12 | 0) >> 2] | 0;
    if (!$36) $$pre199 = $35; else {
     _free($36);
     $$pre199 = HEAP32[$28 >> 2] | 0;
    }
    $$1164 = $$1164 + 1 | 0;
    $35 = $$pre199;
   }
   _free($35);
  }
  $39 = $1 + 12 | 0;
  $40 = HEAP32[$39 >> 2] | 0;
  L28 : do if (!$40) {
   HEAP32[$28 >> 2] = 0;
   $77 = 0;
  } else {
   $43 = _malloc($40 * 12 | 0) | 0;
   HEAP32[$28 >> 2] = $43;
   if (!$43) {
    _arLog(0, 3, 45930, $vararg_buffer5);
    _exit(1);
   }
   $45 = $1 + 8 | 0;
   $$2 = 0;
   $47 = $40;
   while (1) {
    if (($$2 | 0) >= ($47 | 0)) {
     $77 = $47;
     break L28;
    }
    $48 = HEAP32[$45 >> 2] | 0;
    $51 = HEAP32[$28 >> 2] | 0;
    HEAP32[$51 + ($$2 * 12 | 0) + 8 >> 2] = HEAP32[$48 + ($$2 * 12 | 0) + 8 >> 2];
    $53 = $48 + ($$2 * 12 | 0) + 4 | 0;
    HEAP32[$51 + ($$2 * 12 | 0) + 4 >> 2] = HEAP32[$53 >> 2];
    $56 = HEAP32[$53 >> 2] | 0;
    if (!$56) {
     HEAP32[$48 + ($$2 * 12 | 0) >> 2] = 0;
     $$pre201 = $47;
    } else {
     $59 = _malloc($56 * 12 | 0) | 0;
     HEAP32[$51 + ($$2 * 12 | 0) >> 2] = $59;
     if (!$59) break;
     $$0162 = 0;
     $63 = $48;
     while (1) {
      if (($$0162 | 0) >= (HEAP32[$63 + ($$2 * 12 | 0) + 4 >> 2] | 0)) break;
      $68 = (HEAP32[$63 + ($$2 * 12 | 0) >> 2] | 0) + ($$0162 * 12 | 0) | 0;
      $72 = (HEAP32[(HEAP32[$28 >> 2] | 0) + ($$2 * 12 | 0) >> 2] | 0) + ($$0162 * 12 | 0) | 0;
      HEAP32[$72 >> 2] = HEAP32[$68 >> 2];
      HEAP32[$72 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
      HEAP32[$72 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
      $$0162 = $$0162 + 1 | 0;
      $63 = HEAP32[$45 >> 2] | 0;
     }
     $$pre201 = HEAP32[$39 >> 2] | 0;
    }
    $$2 = $$2 + 1 | 0;
    $47 = $$pre201;
   }
   _arLog(0, 3, 45930, $vararg_buffer7);
   _exit(1);
  } while (0);
  $76 = $0 + 40 | 0;
  HEAP32[$76 >> 2] = $77;
  $78 = $0 + 52 | 0;
  $79 = HEAP32[$78 >> 2] | 0;
  if ($79 | 0) {
   _free($79);
   HEAP32[$78 >> 2] = 0;
   HEAP32[$0 + 56 >> 2] = 0;
  }
  $82 = HEAP32[$39 >> 2] | 0;
  L51 : do if (($82 | 0) > 0) {
   HEAP32[$0 + 56 >> 2] = $82;
   $86 = _malloc($82 * 68 | 0) | 0;
   HEAP32[$78 >> 2] = $86;
   if (!$86) {
    _arLog(0, 3, 45930, $vararg_buffer9);
    _exit(1);
   }
   $$0161 = 0;
   while (1) {
    if (($$0161 | 0) == ($82 | 0)) break L51;
    HEAP32[$86 + ($$0161 * 68 | 0) + 64 >> 2] = 0;
    $$0161 = $$0161 + 1 | 0;
   }
  } while (0);
  $90 = HEAP32[$26 >> 2] | 0;
  if (!$90) $$0165 = 0; else {
   $92 = $2 + 4 | 0;
   $93 = $2 + 8 | 0;
   $94 = $3 + 4 | 0;
   $95 = $3 + 8 | 0;
   $96 = $4 + 4 | 0;
   $97 = $4 + 8 | 0;
   $$0158 = 0;
   $$0159 = 0;
   while (1) {
    if (($$0158 | 0) >= (HEAP32[$76 >> 2] | 0)) {
     $$0165 = 0;
     break L1;
    }
    $$0157 = 0;
    $$1160 = $$0159;
    while (1) {
     if (($$0157 | 0) >= (HEAP32[(HEAP32[$28 >> 2] | 0) + ($$0158 * 12 | 0) + 4 >> 2] | 0)) break;
     HEAP32[$2 >> 2] = 0;
     HEAP32[$92 >> 2] = 0;
     HEAP32[$93 >> 2] = 0;
     HEAP32[$3 >> 2] = 0;
     HEAP32[$94 >> 2] = 0;
     HEAP32[$95 >> 2] = 0;
     HEAP32[$4 >> 2] = 0;
     HEAP32[$96 >> 2] = 0;
     HEAP32[$97 >> 2] = 0;
     $$0156 = 0;
     while (1) {
      if (($$0156 | 0) >= ($90 | 0)) break;
      $123 = HEAP32[$11 >> 2] | 0;
      $126 = HEAP32[$28 >> 2] | 0;
      L70 : do if ((HEAP32[$123 + ($$0156 * 132 | 0) + 128 >> 2] | 0) == (HEAP32[(HEAP32[$126 + ($$0158 * 12 | 0) >> 2] | 0) + ($$0157 * 12 | 0) + 8 >> 2] | 0) ? (HEAP32[$123 + ($$0156 * 132 | 0) + 124 >> 2] | 0) == (HEAP32[$126 + ($$0158 * 12 | 0) + 8 >> 2] | 0) : 0) {
       __ZN6vision12FeaturePointC2Effffb($5, +HEAPF32[$123 + ($$0156 * 132 | 0) >> 2], +HEAPF32[$123 + ($$0156 * 132 | 0) + 4 >> 2], +HEAPF32[$123 + ($$0156 * 132 | 0) + 112 >> 2], +HEAPF32[$123 + ($$0156 * 132 | 0) + 116 >> 2], (HEAP32[$123 + ($$0156 * 132 | 0) + 120 >> 2] | 0) != 0);
       $148 = HEAP32[$92 >> 2] | 0;
       if ($148 >>> 0 < (HEAP32[$93 >> 2] | 0) >>> 0) {
        HEAP32[$148 >> 2] = HEAP32[$5 >> 2];
        HEAP32[$148 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
        HEAP32[$148 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
        HEAP32[$148 + 12 >> 2] = HEAP32[$5 + 12 >> 2];
        HEAP32[$148 + 16 >> 2] = HEAP32[$5 + 16 >> 2];
        HEAP32[$92 >> 2] = $148 + 20;
       } else __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($2, $5);
       __ZN6vision12FeaturePointD2Ev($5);
       $152 = HEAP32[$11 >> 2] | 0;
       __ZN6vision7Point3dIfEC2Efff($5, +HEAPF32[$152 + ($$0156 * 132 | 0) + 8 >> 2], +HEAPF32[$152 + ($$0156 * 132 | 0) + 12 >> 2], 0.0);
       $157 = HEAP32[$94 >> 2] | 0;
       if ($157 >>> 0 < (HEAP32[$95 >> 2] | 0) >>> 0) {
        HEAP32[$157 >> 2] = HEAP32[$5 >> 2];
        HEAP32[$157 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
        HEAP32[$157 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
        HEAP32[$94 >> 2] = (HEAP32[$94 >> 2] | 0) + 12;
       } else __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($3, $5);
       $$0 = 0;
       while (1) {
        if ($$0 >>> 0 >= 96) break L70;
        $164 = (HEAP32[$11 >> 2] | 0) + ($$0156 * 132 | 0) + 16 + $$0 | 0;
        $165 = HEAP32[$96 >> 2] | 0;
        if (($165 | 0) == (HEAP32[$97 >> 2] | 0)) __ZNSt3__26vectorIhNS_9allocatorIhEEE21__push_back_slow_pathIRKhEEvOT_($4, $164); else {
         HEAP8[$165 >> 0] = HEAP8[$164 >> 0] | 0;
         HEAP32[$96 >> 2] = (HEAP32[$96 >> 2] | 0) + 1;
        }
        $$0 = $$0 + 1 | 0;
       }
      } while (0);
      $$0156 = $$0156 + 1 | 0;
     }
     HEAP32[$vararg_buffer11 >> 2] = ((HEAP32[$92 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 20 | 0;
     _arLog(0, 1, 26604, $vararg_buffer11);
     $110 = HEAP32[$28 >> 2] | 0;
     HEAP32[$0 + 60 + ($$1160 << 2) >> 2] = HEAP32[$110 + ($$0158 * 12 | 0) + 8 >> 2];
     $116 = HEAP32[$110 + ($$0158 * 12 | 0) >> 2] | 0;
     __ZN6vision20VisualDatabaseFacade30addFreakFeaturesAndDescriptorsERKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEERKNS2_IhNS4_IhEEEERKNS2_INS_7Point3dIfEENS4_ISE_EEEEmmi(HEAP32[$0 >> 2] | 0, $2, $4, $3, HEAP32[$116 + ($$0157 * 12 | 0) >> 2] | 0, HEAP32[$116 + ($$0157 * 12 | 0) + 4 >> 2] | 0, $$1160);
     __ZNSt3__213__vector_baseIhNS_9allocatorIhEEED2Ev($4);
     __ZNSt3__213__vector_baseIN6vision7Point3dIfEENS_9allocatorIS3_EEED2Ev($3);
     __ZNSt3__213__vector_baseIN6vision12FeaturePointENS_9allocatorIS2_EEED2Ev($2);
     $$0157 = $$0157 + 1 | 0;
     $$1160 = $$1160 + 1 | 0;
    }
    $$0158 = $$0158 + 1 | 0;
    $$0159 = $$1160;
   }
  }
 } else {
  _arLog(0, 3, 26523, $vararg_buffer);
  $$0165 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0165 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i52 = 0, $$0$i$i$i$i66 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i58 = 0, $$0$i$i2$i$i72 = 0, $$0$i$i63 = 0, $$0$pn = 0, $$049 = 0, $$050 = 0, $$3 = 0, $$3$lcssa = 0, $$4 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$ph = 0, $$sroa$047$0$copyload = 0, $10 = 0, $101 = 0, $103 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $13 = 0, $131 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $154 = 0, $16 = 0, $161 = 0, $171 = 0, $173 = 0, $18 = 0, $185 = 0, $188 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $30 = 0, $32 = 0, $34 = 0, $52 = 0, $58 = 0, $59 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $73 = 0, $8 = 0, $86 = 0, $88 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $3);
 $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 66544) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy1);
 HEAP32[$4 >> 2] = 0;
 $$0 = $6;
 $13 = 0;
 L1 : while (1) {
  $14 = HEAP32[$1 >> 2] | 0;
  if (!(($$0 | 0) != ($7 | 0) & ($13 | 0) == 0)) {
   $171 = $14;
   break;
  }
  $16 = $14;
  if ($14) {
   $18 = HEAP32[$14 + 12 >> 2] | 0;
   if (($18 | 0) == (HEAP32[$14 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 127]($14) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$18 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $140 = 0;
    $202 = 1;
    $69 = 0;
   } else {
    $140 = $14;
    $202 = 0;
    $69 = $16;
   }
  } else {
   $140 = 0;
   $202 = 1;
   $69 = $16;
  }
  $30 = HEAP32[$2 >> 2] | 0;
  $32 = $30;
  do if ($30) {
   $34 = HEAP32[$30 + 12 >> 2] | 0;
   if (($34 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$34 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($202) {
    $203 = $30;
    $70 = $32;
    break;
   } else {
    label = 60;
    break L1;
   } else {
    HEAP32[$2 >> 2] = 0;
    $$ph = 0;
    label = 15;
    break;
   }
  } else {
   $$ph = $32;
   label = 15;
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($202) {
    label = 60;
    break;
   } else {
    $203 = 0;
    $70 = $$ph;
   }
  }
  L24 : do if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] & 63]($10, HEAP32[$$0 >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
   $52 = $$0 + 4 | 0;
   if (($52 | 0) == ($7 | 0)) {
    label = 60;
    break L1;
   }
   $58 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] & 63]($10, HEAP32[$52 >> 2] | 0, 0) | 0;
   switch ($58 << 24 >> 24) {
   case 48:
   case 69:
    {
     $59 = $$0 + 8 | 0;
     if (($59 | 0) == ($7 | 0)) {
      label = 60;
      break L1;
     }
     $$049 = $58;
     $$050 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] & 63]($10, HEAP32[$59 >> 2] | 0, 0) | 0;
     $73 = $52;
     break;
    }
   default:
    {
     $$049 = 0;
     $$050 = $58;
     $73 = $$0;
    }
   }
   $68 = HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[$8 >> 2] = $69;
   HEAP32[$9 >> 2] = $70;
   HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
   HEAP32[$$byval_copy1 >> 2] = HEAP32[$9 >> 2];
   $71 = FUNCTION_TABLE_iiiiiiiii[$68 & 15]($0, $$byval_copy, $$byval_copy1, $3, $4, $5, $$050, $$049) | 0;
   HEAP32[$1 >> 2] = $71;
   $$4 = $73 + 8 | 0;
  } else {
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 63]($10, 8192, HEAP32[$$0 >> 2] | 0) | 0)) {
    $139 = $140 + 12 | 0;
    $141 = HEAP32[$139 >> 2] | 0;
    $142 = $140 + 16 | 0;
    if (($141 | 0) == (HEAP32[$142 >> 2] | 0)) $$0$i$i63 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$140 >> 2] | 0) + 36 >> 2] & 127]($140) | 0; else $$0$i$i63 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$141 >> 2] | 0) | 0;
    $154 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 127]($10, $$0$i$i63) | 0;
    if (($154 | 0) != (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 127]($10, HEAP32[$$0 >> 2] | 0) | 0)) {
     HEAP32[$4 >> 2] = 4;
     $$4 = $$0;
     break;
    }
    $161 = HEAP32[$139 >> 2] | 0;
    if (($161 | 0) == (HEAP32[$142 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$140 >> 2] | 0) + 40 >> 2] & 127]($140) | 0; else {
     HEAP32[$139 >> 2] = $161 + 4;
     __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$161 >> 2] | 0) | 0;
    }
    $$4 = $$0 + 4 | 0;
    break;
   }
   $$0$pn = $$0;
   while (1) {
    $$3 = $$0$pn + 4 | 0;
    if (($$3 | 0) == ($7 | 0)) {
     $$3$lcssa = $7;
     break;
    }
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 63]($10, 8192, HEAP32[$$3 >> 2] | 0) | 0) $$0$pn = $$3; else {
     $$3$lcssa = $$3;
     break;
    }
   }
   $101 = $203;
   $86 = $140;
   while (1) {
    if ($86) {
     $88 = HEAP32[$86 + 12 >> 2] | 0;
     if (($88 | 0) == (HEAP32[$86 + 16 >> 2] | 0)) $$0$i$i$i$i52 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$86 >> 2] | 0) + 36 >> 2] & 127]($86) | 0; else $$0$i$i$i$i52 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$88 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i52, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[$1 >> 2] = 0;
      $116 = 0;
      $204 = 1;
     } else {
      $116 = $86;
      $204 = 0;
     }
    } else {
     $116 = 0;
     $204 = 1;
    }
    do if ($101) {
     $103 = HEAP32[$101 + 12 >> 2] | 0;
     if (($103 | 0) == (HEAP32[$101 + 16 >> 2] | 0)) $$0$i$i2$i$i58 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$101 >> 2] | 0) + 36 >> 2] & 127]($101) | 0; else $$0$i$i2$i$i58 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$103 >> 2] | 0) | 0;
     if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i58, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($204) {
      $205 = $101;
      break;
     } else {
      $$4 = $$3$lcssa;
      break L24;
     } else {
      HEAP32[$2 >> 2] = 0;
      label = 40;
      break;
     }
    } else label = 40; while (0);
    if ((label | 0) == 40) {
     label = 0;
     if ($204) {
      $$4 = $$3$lcssa;
      break L24;
     } else $205 = 0;
    }
    $115 = $116 + 12 | 0;
    $117 = HEAP32[$115 >> 2] | 0;
    $118 = $116 + 16 | 0;
    if (($117 | 0) == (HEAP32[$118 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$116 >> 2] | 0) + 36 >> 2] & 127]($116) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$117 >> 2] | 0) | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 63]($10, 8192, $$0$i$i) | 0)) {
     $$4 = $$3$lcssa;
     break L24;
    }
    $131 = HEAP32[$115 >> 2] | 0;
    if (($131 | 0) == (HEAP32[$118 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$116 >> 2] | 0) + 40 >> 2] & 127]($116) | 0; else {
     HEAP32[$115 >> 2] = $131 + 4;
     __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$131 >> 2] | 0) | 0;
    }
    $101 = $205;
    $86 = $116;
   }
  } while (0);
  $$0 = $$4;
  $13 = HEAP32[$4 >> 2] | 0;
 }
 if ((label | 0) == 60) {
  HEAP32[$4 >> 2] = 4;
  $171 = $140;
 }
 if ($171) {
  $173 = HEAP32[$171 + 12 >> 2] | 0;
  if (($173 | 0) == (HEAP32[$171 + 16 >> 2] | 0)) $$0$i$i$i$i66 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$171 >> 2] | 0) + 36 >> 2] & 127]($171) | 0; else $$0$i$i$i$i66 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$173 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i66, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $$sroa$047$0$copyload = 0;
   $206 = 1;
  } else {
   $$sroa$047$0$copyload = $171;
   $206 = 0;
  }
 } else {
  $$sroa$047$0$copyload = 0;
  $206 = 1;
 }
 $185 = HEAP32[$2 >> 2] | 0;
 do if ($185) {
  $188 = HEAP32[$185 + 12 >> 2] | 0;
  if (($188 | 0) == (HEAP32[$185 + 16 >> 2] | 0)) $$0$i$i2$i$i72 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$185 >> 2] | 0) + 36 >> 2] & 127]($185) | 0; else $$0$i$i2$i$i72 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$188 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i72, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($206) break; else {
   label = 75;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 73;
   break;
  }
 } else label = 73; while (0);
 if ((label | 0) == 73 ? $206 : 0) label = 75;
 if ((label | 0) == 75) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 STACKTOP = sp;
 return $$sroa$047$0$copyload | 0;
}

function _check_rotation($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0457 = 0.0, $$0458 = 0.0, $$0459 = 0.0, $$0460 = 0.0, $$0461 = 0.0, $$0462 = 0.0, $$0463 = 0.0, $$0464 = 0.0, $$0465 = 0.0, $$0466 = 0.0, $$0467 = 0.0, $$0468 = 0.0, $$0469 = 0.0, $$0470 = 0.0, $$0471 = 0.0, $$0472 = 0.0, $$0473 = 0.0, $$1 = 0, $$10 = 0.0, $$2 = 0.0, $$3 = 0.0, $$5 = 0.0, $$6 = 0.0, $$9 = 0.0, $$pre = 0.0, $$pre$phi15Z2D = 0.0, $$pre$phi17Z2D = 0.0, $$pre$phi19Z2D = 0.0, $$pre$phi21Z2D = 0.0, $$pre$phi23Z2D = 0.0, $$pre$phiZ2D = 0.0, $$pre14 = 0.0, $$pre18 = 0.0, $$pre20 = 0.0, $$sroa$0$0 = 0.0, $$sroa$0$1 = 0.0, $$sroa$0$1$$sroa$62$1 = 0.0, $$sroa$0$2 = 0.0, $$sroa$0333$0 = 0.0, $$sroa$0370$0 = 0.0, $$sroa$18$0 = 0.0, $$sroa$18384$0 = 0.0, $$sroa$33$0 = 0.0, $$sroa$33$1 = 0.0, $$sroa$33$2 = 0.0, $$sroa$33359$0 = 0.0, $$sroa$33397$0 = 0.0, $$sroa$62$0 = 0.0, $$sroa$62$1 = 0.0, $$sroa$62$1$$sroa$33$1 = 0.0, $$sroa$62$2 = 0.0, $1 = 0.0, $10 = 0, $102 = 0, $107 = 0.0, $109 = 0.0, $11 = 0.0, $113 = 0.0, $114 = 0.0, $116 = 0.0, $120 = 0.0, $123 = 0.0, $130 = 0.0, $133 = 0.0, $135 = 0.0, $137 = 0.0, $139 = 0.0, $14 = 0.0, $141 = 0.0, $143 = 0.0, $145 = 0.0, $150 = 0.0, $157 = 0.0, $164 = 0.0, $17 = 0.0, $171 = 0.0, $2 = 0, $20 = 0.0, $26 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0.0, $30 = 0.0, $35 = 0.0, $4 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $5 = 0.0, $51 = 0, $56 = 0.0, $58 = 0.0, $6 = 0, $62 = 0.0, $63 = 0.0, $65 = 0.0, $69 = 0.0, $7 = 0.0, $72 = 0.0, $79 = 0.0, $8 = 0, $82 = 0.0, $84 = 0.0, $86 = 0.0, $88 = 0.0, $9 = 0.0, $90 = 0.0, $92 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0;
 $1 = +HEAPF64[$0 >> 3];
 $2 = $0 + 8 | 0;
 $3 = +HEAPF64[$2 >> 3];
 $4 = $0 + 16 | 0;
 $5 = +HEAPF64[$4 >> 3];
 $6 = $0 + 24 | 0;
 $7 = +HEAPF64[$6 >> 3];
 $8 = $0 + 32 | 0;
 $9 = +HEAPF64[$8 >> 3];
 $10 = $0 + 40 | 0;
 $11 = +HEAPF64[$10 >> 3];
 $14 = $3 * $11 - $5 * $9;
 $17 = $5 * $7 - $1 * $11;
 $20 = $1 * $9 - $3 * $7;
 $26 = +Math_sqrt(+($20 * $20 + ($14 * $14 + $17 * $17)));
 do if (!($26 == 0.0)) {
  $28 = $14 / $26;
  $29 = $17 / $26;
  $30 = $20 / $26;
  $35 = $1 * $7 + $3 * $9 + $5 * $11;
  $$0473 = $35 < 0.0 ? -$35 : $35;
  $43 = (+Math_sqrt(+($$0473 + 1.0)) + +Math_sqrt(+(1.0 - $$0473))) * .5;
  $44 = $1 * $29;
  $45 = $3 * $28;
  $46 = $44 - $45;
  if ($46 != 0.0) {
   $$0 = 0;
   $$pre$phi15Z2D = $45;
   $$pre$phi17Z2D = $46;
   $$pre$phiZ2D = $44;
   $$sroa$0$0 = $28;
   $$sroa$0370$0 = $1;
   $$sroa$18384$0 = $3;
   $$sroa$33$0 = $29;
   $$sroa$33397$0 = $5;
   $$sroa$62$0 = $30;
  } else {
   $51 = $1 * $30 - $5 * $28 != 0.0;
   $$2 = $51 ? $5 : $3;
   $$3 = $51 ? $1 : $5;
   $$5 = $51 ? $30 : $29;
   $$6 = $51 ? $28 : $30;
   $$pre = $$3 * $$5;
   $$pre14 = $$2 * $$6;
   $$0 = $51 ? 1 : 2;
   $$pre$phi15Z2D = $$pre14;
   $$pre$phi17Z2D = $$pre - $$pre14;
   $$pre$phiZ2D = $$pre;
   $$sroa$0$0 = $$6;
   $$sroa$0370$0 = $$3;
   $$sroa$18384$0 = $$2;
   $$sroa$33$0 = $$5;
   $$sroa$33397$0 = $51 ? $3 : $1;
   $$sroa$62$0 = $51 ? $29 : $28;
  }
  if (!($$pre$phi17Z2D == 0.0) ? ($56 = ($$sroa$18384$0 * $$sroa$62$0 - $$sroa$33397$0 * $$sroa$33$0) / $$pre$phi17Z2D, $58 = $43 * $$sroa$33$0 / $$pre$phi17Z2D, $62 = $$pre$phi15Z2D - $$pre$phiZ2D, $63 = ($$sroa$0370$0 * $$sroa$62$0 - $$sroa$33397$0 * $$sroa$0$0) / $62, $65 = $43 * $$sroa$0$0 / $62, $69 = $56 * $56 + $63 * $63 + 1.0, $72 = $56 * $58 + $63 * $65, $79 = $72 * $72 - $69 * ($58 * $58 + $65 * $65 + -1.0), !($79 < 0.0)) : 0) {
   $82 = +Math_sqrt(+$79);
   $84 = ($82 - $72) / $69;
   $86 = $58 + $56 * $84;
   $88 = $65 + $63 * $84;
   $90 = (-$72 - $82) / $69;
   $92 = $58 + $56 * $90;
   $94 = $65 + $63 * $90;
   switch ($$0 & 3) {
   case 1:
    {
     $$0467 = $94;
     $$0468 = $90;
     $$0469 = $92;
     $$0470 = $88;
     $$0471 = $84;
     $$0472 = $86;
     $$sroa$0$1 = $$sroa$0$0;
     $$sroa$33$1 = $$sroa$62$0;
     $$sroa$62$1 = $$sroa$33$0;
     break;
    }
   case 2:
    {
     $$0467 = $92;
     $$0468 = $94;
     $$0469 = $90;
     $$0470 = $86;
     $$0471 = $88;
     $$0472 = $84;
     $$sroa$0$1 = $$sroa$62$0;
     $$sroa$33$1 = $$sroa$33$0;
     $$sroa$62$1 = $$sroa$0$0;
     break;
    }
   default:
    {
     $$0467 = $90;
     $$0468 = $94;
     $$0469 = $92;
     $$0470 = $84;
     $$0471 = $88;
     $$0472 = $86;
     $$sroa$0$1 = $$sroa$0$0;
     $$sroa$33$1 = $$sroa$33$0;
     $$sroa$62$1 = $$sroa$62$0;
    }
   }
   $95 = $7 * $$sroa$33$1;
   $96 = $9 * $$sroa$0$1;
   $97 = $95 - $96;
   if ($97 != 0.0) {
    $$1 = 0;
    $$pre$phi19Z2D = $95;
    $$pre$phi21Z2D = $96;
    $$pre$phi23Z2D = $97;
    $$sroa$0$2 = $$sroa$0$1;
    $$sroa$0333$0 = $7;
    $$sroa$18$0 = $9;
    $$sroa$33$2 = $$sroa$33$1;
    $$sroa$33359$0 = $11;
    $$sroa$62$2 = $$sroa$62$1;
   } else {
    $102 = $7 * $$sroa$62$1 - $11 * $$sroa$0$1 != 0.0;
    $$9 = $102 ? $11 : $9;
    $$10 = $102 ? $7 : $11;
    $$sroa$62$1$$sroa$33$1 = $102 ? $$sroa$62$1 : $$sroa$33$1;
    $$sroa$0$1$$sroa$62$1 = $102 ? $$sroa$0$1 : $$sroa$62$1;
    $$pre18 = $$10 * $$sroa$62$1$$sroa$33$1;
    $$pre20 = $$9 * $$sroa$0$1$$sroa$62$1;
    $$1 = $102 ? 1 : 2;
    $$pre$phi19Z2D = $$pre18;
    $$pre$phi21Z2D = $$pre20;
    $$pre$phi23Z2D = $$pre18 - $$pre20;
    $$sroa$0$2 = $$sroa$0$1$$sroa$62$1;
    $$sroa$0333$0 = $$10;
    $$sroa$18$0 = $$9;
    $$sroa$33$2 = $$sroa$62$1$$sroa$33$1;
    $$sroa$33359$0 = $102 ? $9 : $7;
    $$sroa$62$2 = $102 ? $$sroa$33$1 : $$sroa$0$1;
   }
   if (!($$pre$phi23Z2D == 0.0) ? ($107 = ($$sroa$18$0 * $$sroa$62$2 - $$sroa$33359$0 * $$sroa$33$2) / $$pre$phi23Z2D, $109 = $43 * $$sroa$33$2 / $$pre$phi23Z2D, $113 = $$pre$phi21Z2D - $$pre$phi19Z2D, $114 = ($$sroa$0333$0 * $$sroa$62$2 - $$sroa$33359$0 * $$sroa$0$2) / $113, $116 = $43 * $$sroa$0$2 / $113, $120 = $107 * $107 + $114 * $114 + 1.0, $123 = $107 * $109 + $114 * $116, $130 = $123 * $123 - $120 * ($109 * $109 + $116 * $116 + -1.0), !($130 < 0.0)) : 0) {
    $133 = +Math_sqrt(+$130);
    $135 = ($133 - $123) / $120;
    $137 = $109 + $107 * $135;
    $139 = $116 + $114 * $135;
    $141 = (-$123 - $133) / $120;
    $143 = $109 + $107 * $141;
    $145 = $116 + $114 * $141;
    switch ($$1 & 3) {
    case 1:
     {
      $$0461 = $145;
      $$0462 = $141;
      $$0463 = $143;
      $$0464 = $139;
      $$0465 = $135;
      $$0466 = $137;
      break;
     }
    case 2:
     {
      $$0461 = $143;
      $$0462 = $145;
      $$0463 = $141;
      $$0464 = $137;
      $$0465 = $139;
      $$0466 = $135;
      break;
     }
    default:
     {
      $$0461 = $141;
      $$0462 = $145;
      $$0463 = $143;
      $$0464 = $135;
      $$0465 = $139;
      $$0466 = $137;
     }
    }
    $150 = $$0472 * $$0466 + $$0471 * $$0465 + $$0470 * $$0464;
    $$0460 = $150 < 0.0 ? -$150 : $150;
    $157 = $$0472 * $$0463 + $$0471 * $$0462 + $$0470 * $$0461;
    $$0459 = $157 < 0.0 ? -$157 : $157;
    $164 = $$0469 * $$0466 + $$0468 * $$0465 + $$0467 * $$0464;
    $$0458 = $164 < 0.0 ? -$164 : $164;
    $171 = $$0469 * $$0463 + $$0468 * $$0462 + $$0467 * $$0461;
    $$0457 = $171 < 0.0 ? -$171 : $171;
    if ($$0460 < $$0459) if ($$0460 < $$0458) if ($$0460 < $$0457) {
     HEAPF64[$0 >> 3] = $$0472;
     HEAPF64[$2 >> 3] = $$0471;
     HEAPF64[$4 >> 3] = $$0470;
     HEAPF64[$6 >> 3] = $$0466;
     HEAPF64[$8 >> 3] = $$0465;
     HEAPF64[$10 >> 3] = $$0464;
     break;
    } else {
     HEAPF64[$0 >> 3] = $$0469;
     HEAPF64[$2 >> 3] = $$0468;
     HEAPF64[$4 >> 3] = $$0467;
     HEAPF64[$6 >> 3] = $$0463;
     HEAPF64[$8 >> 3] = $$0462;
     HEAPF64[$10 >> 3] = $$0461;
     break;
    } else {
     HEAPF64[$0 >> 3] = $$0469;
     HEAPF64[$2 >> 3] = $$0468;
     HEAPF64[$4 >> 3] = $$0467;
     if ($$0458 < $$0457) {
      HEAPF64[$6 >> 3] = $$0466;
      HEAPF64[$8 >> 3] = $$0465;
      HEAPF64[$10 >> 3] = $$0464;
      break;
     } else {
      HEAPF64[$6 >> 3] = $$0463;
      HEAPF64[$8 >> 3] = $$0462;
      HEAPF64[$10 >> 3] = $$0461;
      break;
     }
    } else if ($$0459 < $$0458) if ($$0459 < $$0457) {
     HEAPF64[$0 >> 3] = $$0472;
     HEAPF64[$2 >> 3] = $$0471;
     HEAPF64[$4 >> 3] = $$0470;
     HEAPF64[$6 >> 3] = $$0463;
     HEAPF64[$8 >> 3] = $$0462;
     HEAPF64[$10 >> 3] = $$0461;
     break;
    } else {
     HEAPF64[$0 >> 3] = $$0469;
     HEAPF64[$2 >> 3] = $$0468;
     HEAPF64[$4 >> 3] = $$0467;
     HEAPF64[$6 >> 3] = $$0463;
     HEAPF64[$8 >> 3] = $$0462;
     HEAPF64[$10 >> 3] = $$0461;
     break;
    } else {
     HEAPF64[$0 >> 3] = $$0469;
     HEAPF64[$2 >> 3] = $$0468;
     HEAPF64[$4 >> 3] = $$0467;
     if ($$0458 < $$0457) {
      HEAPF64[$6 >> 3] = $$0466;
      HEAPF64[$8 >> 3] = $$0465;
      HEAPF64[$10 >> 3] = $$0464;
      break;
     } else {
      HEAPF64[$6 >> 3] = $$0463;
      HEAPF64[$8 >> 3] = $$0462;
      HEAPF64[$10 >> 3] = $$0461;
      break;
     }
    }
   }
  }
 } while (0);
 return;
}

function _ar2ReadSurfaceSet($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$093 = 0, $$094 = 0, $$096 = 0, $$1 = 0, $$198 = 0, $$sink = 0, $13 = 0, $15 = 0, $17 = 0, $18 = 0, $20 = 0, $25 = 0, $3 = 0, $30 = 0, $32 = 0, $39 = 0, $4 = 0, $44 = 0, $5 = 0, $51 = 0, $6 = 0, $64 = 0, $73 = 0, $82 = 0, $89 = 0, $96 = 0, $98 = 0, $storemerge = 0, $vararg_buffer = 0, $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer16 = 0, $vararg_buffer19 = 0, $vararg_buffer2 = 0, $vararg_buffer22 = 0, $vararg_buffer24 = 0, $vararg_buffer27 = 0, $vararg_buffer29 = 0, $vararg_buffer31 = 0, $vararg_buffer34 = 0, $vararg_buffer36 = 0, $vararg_buffer38 = 0, $vararg_buffer41 = 0, $vararg_buffer43 = 0, $vararg_buffer49 = 0, $vararg_buffer5 = 0, $vararg_buffer51 = 0, $vararg_buffer57 = 0, $vararg_buffer59 = 0, $vararg_buffer65 = 0, $vararg_buffer67 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1248 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1248);
 $vararg_buffer67 = sp + 1232 | 0;
 $vararg_buffer65 = sp + 1224 | 0;
 $vararg_buffer59 = sp + 1208 | 0;
 $vararg_buffer57 = sp + 1200 | 0;
 $vararg_buffer51 = sp + 1184 | 0;
 $vararg_buffer49 = sp + 1176 | 0;
 $vararg_buffer43 = sp + 1160 | 0;
 $vararg_buffer41 = sp + 1152 | 0;
 $vararg_buffer38 = sp + 1144 | 0;
 $vararg_buffer36 = sp + 1136 | 0;
 $vararg_buffer34 = sp + 1128 | 0;
 $vararg_buffer31 = sp + 1120 | 0;
 $vararg_buffer29 = sp + 1112 | 0;
 $vararg_buffer27 = sp + 1104 | 0;
 $vararg_buffer24 = sp + 1096 | 0;
 $vararg_buffer22 = sp + 1088 | 0;
 $vararg_buffer19 = sp + 1080 | 0;
 $vararg_buffer16 = sp + 1072 | 0;
 $vararg_buffer14 = sp + 1064 | 0;
 $vararg_buffer11 = sp + 1056 | 0;
 $vararg_buffer9 = sp + 1048 | 0;
 $vararg_buffer5 = sp + 1040 | 0;
 $vararg_buffer2 = sp + 1032 | 0;
 $vararg_buffer = sp + 1024 | 0;
 $3 = sp + 768 | 0;
 $4 = sp + 512 | 0;
 $5 = sp + 1236 | 0;
 $6 = sp;
 do if ((($1 | 0) != 0 ? (HEAP8[$1 >> 0] | 0) != 0 : 0) ? (_strcmp($1, 45135) | 0) != 0 : 0) {
  HEAP32[$vararg_buffer >> 2] = $0;
  HEAP32[$vararg_buffer + 4 >> 2] = $1;
  _sprintf($6, 26699, $vararg_buffer) | 0;
  $13 = _fopen($6, 25925) | 0;
  if (!$13) {
   HEAP32[$vararg_buffer2 >> 2] = $0;
   _arLog(0, 3, 25927, $vararg_buffer2);
   $15 = ___errno_location() | 0;
   $17 = _strerror(HEAP32[$15 >> 2] | 0) | 0;
   HEAP32[$vararg_buffer5 >> 2] = 67447;
   HEAP32[$vararg_buffer5 + 4 >> 2] = $17;
   _arLog(0, 3, 25953, $vararg_buffer5);
   $$198 = 0;
   break;
  } else {
   $$096 = $13;
   $$1 = 1;
   label = 8;
   break;
  }
 } else label = 4; while (0);
 if ((label | 0) == 4) {
  _strncpy($4, $0, 255) | 0;
  HEAP8[$4 + 255 >> 0] = 0;
  $$096 = 0;
  $$1 = 0;
  label = 8;
 }
 do if ((label | 0) == 8) {
  $18 = _malloc(1140) | 0;
  if (!$18) {
   _arLog(0, 3, 45930, $vararg_buffer9);
   _exit(1);
  }
  $20 = ($$1 | 0) != 0;
  if ($20) {
   if (!(_get_buff_380($3, $$096) | 0)) {
    _fclose($$096) | 0;
    _free($18);
    $$198 = 0;
    break;
   }
   HEAP32[$vararg_buffer11 >> 2] = $5;
   if ((_sscanf($3, 25959, $vararg_buffer11) | 0) != 1) {
    _fclose($$096) | 0;
    _free($18);
    $$198 = 0;
    break;
   }
   $25 = HEAP32[$5 >> 2] | 0;
   if (($25 | 0) < 1) {
    _fclose($$096) | 0;
    _free($18);
    $$198 = 0;
    break;
   } else $$sink = $25;
  } else $$sink = 1;
  HEAP32[$18 + 4 >> 2] = $$sink;
  HEAP32[$18 + 152 >> 2] = 0;
  $30 = _malloc($$sink * 112 | 0) | 0;
  HEAP32[$18 >> 2] = $30;
  if (!$30) {
   _arLog(0, 3, 45930, $vararg_buffer14);
   _exit(1);
  }
  $32 = ($2 | 0) == 0;
  $storemerge = 0;
  L28 : while (1) {
   HEAP32[$5 >> 2] = $storemerge;
   if (($storemerge | 0) >= ($$sink | 0)) {
    label = 57;
    break;
   }
   HEAP32[$vararg_buffer16 >> 2] = $storemerge + 1;
   _arLog(0, 1, 25962, $vararg_buffer16);
   if ($20) {
    if (!(_get_buff_380($3, $$096) | 0)) {
     label = 57;
     break;
    }
    HEAP32[$vararg_buffer19 >> 2] = $4;
    if ((_sscanf($3, 25986, $vararg_buffer19) | 0) != 1) {
     label = 57;
     break;
    }
    _ar2UtilRemoveExt($4) | 0;
   }
   _arLog(0, 1, 25989, $vararg_buffer22);
   $39 = _ar2ReadImageSet($4) | 0;
   HEAP32[$30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) >> 2] = $39;
   if (!$39) {
    label = 26;
    break;
   }
   _arLog(0, 1, 26038, $vararg_buffer27);
   _arLog(0, 1, 26048, $vararg_buffer29);
   $44 = _ar2ReadFeatureSet($4, 45135) | 0;
   HEAP32[$30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) + 4 >> 2] = $44;
   if (!$44) {
    label = 29;
    break;
   }
   _arLog(0, 1, 26038, $vararg_buffer34);
   if ($32) HEAP32[$30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) + 8 >> 2] = 0; else {
    _arLog(0, 1, 26099, $vararg_buffer36);
    _ar2UtilRemoveExt($4) | 0;
    $51 = _ar2ReadMarkerSet($4, 26118, $2) | 0;
    HEAP32[$30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) + 8 >> 2] = $51;
    if (!$51) {
     label = 33;
     break;
    }
    _arLog(0, 1, 26038, $vararg_buffer41);
   }
   L43 : do if ($20) {
    if (!(_get_buff_380($3, $$096) | 0)) {
     label = 57;
     break L28;
    }
    $64 = HEAP32[$5 >> 2] | 0;
    HEAP32[$vararg_buffer43 >> 2] = $30 + ($64 * 112 | 0) + 12;
    HEAP32[$vararg_buffer43 + 4 >> 2] = $30 + ($64 * 112 | 0) + 16;
    HEAP32[$vararg_buffer43 + 8 >> 2] = $30 + ($64 * 112 | 0) + 20;
    HEAP32[$vararg_buffer43 + 12 >> 2] = $30 + ($64 * 112 | 0) + 24;
    if ((_sscanf($3, 26152, $vararg_buffer43) | 0) != 4) {
     label = 40;
     break L28;
    }
    if (!(_get_buff_380($3, $$096) | 0)) {
     label = 57;
     break L28;
    }
    $73 = HEAP32[$5 >> 2] | 0;
    HEAP32[$vararg_buffer51 >> 2] = $30 + ($73 * 112 | 0) + 28;
    HEAP32[$vararg_buffer51 + 4 >> 2] = $30 + ($73 * 112 | 0) + 32;
    HEAP32[$vararg_buffer51 + 8 >> 2] = $30 + ($73 * 112 | 0) + 36;
    HEAP32[$vararg_buffer51 + 12 >> 2] = $30 + ($73 * 112 | 0) + 40;
    if ((_sscanf($3, 26152, $vararg_buffer51) | 0) != 4) {
     label = 43;
     break L28;
    }
    if (!(_get_buff_380($3, $$096) | 0)) {
     label = 57;
     break L28;
    }
    $82 = HEAP32[$5 >> 2] | 0;
    HEAP32[$vararg_buffer59 >> 2] = $30 + ($82 * 112 | 0) + 44;
    HEAP32[$vararg_buffer59 + 4 >> 2] = $30 + ($82 * 112 | 0) + 48;
    HEAP32[$vararg_buffer59 + 8 >> 2] = $30 + ($82 * 112 | 0) + 52;
    HEAP32[$vararg_buffer59 + 12 >> 2] = $30 + ($82 * 112 | 0) + 56;
    if ((_sscanf($3, 26152, $vararg_buffer59) | 0) != 4) {
     label = 47;
     break L28;
    }
    $96 = HEAP32[$5 >> 2] | 0;
   } else {
    $89 = HEAP32[$5 >> 2] | 0;
    $$094 = 0;
    while (1) {
     if (($$094 | 0) == 3) {
      $96 = $89;
      break L43;
     }
     $$093 = 0;
     while (1) {
      if (($$093 | 0) == 4) break;
      HEAPF32[$30 + ($89 * 112 | 0) + 12 + ($$094 << 4) + ($$093 << 2) >> 2] = ($$094 | 0) == ($$093 | 0) ? 1.0 : 0.0;
      $$093 = $$093 + 1 | 0;
     }
     $$094 = $$094 + 1 | 0;
    }
   } while (0);
   _arUtilMatInvf($30 + ($96 * 112 | 0) + 12 | 0, $30 + ($96 * 112 | 0) + 60 | 0) | 0;
   _ar2UtilReplaceExt($4, 256, 26200) | 0;
   $98 = _malloc(256) | 0;
   HEAP32[$30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) + 108 >> 2] = $98;
   if (!$98) {
    label = 55;
    break;
   }
   _strncpy($98, $4, 256) | 0;
   $storemerge = (HEAP32[$5 >> 2] | 0) + 1 | 0;
  }
  if ((label | 0) == 26) {
   HEAP32[$vararg_buffer24 >> 2] = $4;
   _arLog(0, 3, 26007, $vararg_buffer24);
   _free($30);
   _free($18);
   if (!$$096) {
    $$198 = 0;
    break;
   }
   _fclose($$096) | 0;
   $$198 = 0;
   break;
  } else if ((label | 0) == 29) {
   HEAP32[$vararg_buffer31 >> 2] = $4;
   _arLog(0, 3, 26068, $vararg_buffer31);
   _ar2FreeImageSet($30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) | 0) | 0;
   _free($30);
   _free($18);
   if (!$$096) {
    $$198 = 0;
    break;
   }
   _fclose($$096) | 0;
   $$198 = 0;
   break;
  } else if ((label | 0) == 33) {
   HEAP32[$vararg_buffer38 >> 2] = $4;
   _arLog(0, 3, 26122, $vararg_buffer38);
   _ar2FreeFeatureSet($30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) + 4 | 0) | 0;
   _ar2FreeImageSet($30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) | 0) | 0;
   _free($30);
   _free($18);
   if (!$$096) {
    $$198 = 0;
    break;
   }
   _fclose($$096) | 0;
   $$198 = 0;
   break;
  } else if ((label | 0) == 40) {
   _arLog(0, 3, 26164, $vararg_buffer49);
   _fclose($$096) | 0;
   _exit(0);
  } else if ((label | 0) == 43) {
   _arLog(0, 3, 26164, $vararg_buffer57);
   _fclose($$096) | 0;
   _exit(0);
  } else if ((label | 0) == 47) {
   _arLog(0, 3, 26164, $vararg_buffer65);
   _fclose($$096) | 0;
   _exit(0);
  } else if ((label | 0) == 55) {
   _arLog(0, 3, 45930, $vararg_buffer67);
   _exit(1);
  } else if ((label | 0) == 57) {
   if ($$096 | 0) _fclose($$096) | 0;
   if ((HEAP32[$5 >> 2] | 0) >= ($$sink | 0)) {
    $$198 = $18;
    break;
   }
   _exit(0);
  }
 } while (0);
 STACKTOP = sp;
 return $$198 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$3 = 0, $$4 = 0, $$byval_copy = 0, $13 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $32 = 0, $36 = 0, $37 = 0, $4 = 0, $47 = 0, $5 = 0, $53 = 0, $58 = 0, $60 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy = sp + 32 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 24 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 HEAP32[$2 >> 2] = $1;
 if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 78) | 0) {
  $7 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCVQualifiersEv($0) | 0;
  $8 = ($1 | 0) == 0;
  if (!$8) HEAP32[$1 + 4 >> 2] = $7;
  do if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 79) | 0) {
   if (!$8) HEAP8[$1 + 8 >> 0] = 2;
  } else {
   $13 = ($1 | 0) != 0;
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 82) | 0) {
    if (!$13) break;
    HEAP8[$1 + 8 >> 0] = 1;
    break;
   } else {
    if (!$13) break;
    HEAP8[$1 + 8 >> 0] = 0;
    break;
   }
  } while (0);
  HEAP32[$3 >> 2] = 0;
  HEAP32[$4 >> 2] = $0;
  HEAP32[$4 + 4 >> 2] = $3;
  HEAP32[$4 + 8 >> 2] = $2;
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 55118);
  HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
  HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy) | 0) {
   $19 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA4_KcEEEPNS0_4NodeEDpOT0_($0, 55436) | 0;
   HEAP32[$3 >> 2] = $19;
  }
  $20 = $0 + 148 | 0;
  L19 : while (1) {
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
    label = 41;
    break;
   }
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 76) | 0;
   L22 : do if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 77) | 0) {
    if (!(HEAP32[$3 >> 2] | 0)) {
     $$3 = 0;
     break L19;
    }
   } else {
    L25 : do switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24) {
    case 84:
     {
      if (!(__ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateEENKUlPNS0_4NodeEE_clES9_($4, __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseTemplateParamEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0) | 0)) {
       $$3 = 0;
       break L19;
      }
      __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($20, $3);
      break L22;
      break;
     }
    case 73:
     {
      $32 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0, (HEAP32[$2 >> 2] | 0) != 0) | 0;
      HEAP32[$$byval_copy >> 2] = $32;
      if (($32 | 0) == 0 | (HEAP32[$3 >> 2] | 0) == 0) {
       label = 26;
       break L19;
      }
      $36 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $3, $$byval_copy) | 0;
      HEAP32[$3 >> 2] = $36;
      $37 = HEAP32[$2 >> 2] | 0;
      if ($37 | 0) HEAP8[$37 + 1 >> 0] = 1;
      __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($20, $3);
      break L22;
      break;
     }
    case 68:
     {
      switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24) {
      case 67:
       {
        label = 39;
        break L25;
        break;
       }
      case 84:
      case 116:
       break;
      default:
       break L25;
      }
      if (!(__ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateEENKUlPNS0_4NodeEE_clES9_($4, __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseDecltypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0) | 0)) {
       $$3 = 0;
       break L19;
      }
      __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($20, $3);
      break L22;
      break;
     }
    case 83:
     {
      if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 == 116) label = 39; else {
       $47 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseSubstitutionEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
       HEAP32[$$byval_copy >> 2] = $47;
       if (!(__ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateEENKUlPNS0_4NodeEE_clES9_($4, $47) | 0)) {
        label = 44;
        break L19;
       }
       if ((HEAP32[$3 >> 2] | 0) != ($47 | 0)) __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($20, $$byval_copy);
       break L22;
      }
      break;
     }
    case 67:
     break;
    default:
     label = 39;
    } while (0);
    if ((label | 0) == 39) {
     label = 0;
     $60 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
     if (!(__ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateEENKUlPNS0_4NodeEE_clES9_($4, __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseUnqualifiedNameEPNS5_9NameStateE($60, HEAP32[$2 >> 2] | 0) | 0) | 0)) {
      $$3 = 0;
      break L19;
     }
     __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($20, $3);
     break;
    }
    if (!(HEAP32[$3 >> 2] | 0)) {
     $$3 = 0;
     break L19;
    }
    $53 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
    if (!(__ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateEENKUlPNS0_4NodeEE_clES9_($4, __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCtorDtorNameERPNS0_4NodeEPNS5_9NameStateE($53, $3, HEAP32[$2 >> 2] | 0) | 0) | 0)) {
     $$3 = 0;
     break L19;
    }
    $58 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E12parseAbiTagsEPNS0_4NodeE($53, HEAP32[$3 >> 2] | 0) | 0;
    HEAP32[$3 >> 2] = $58;
    if (!$58) {
     $$3 = 0;
     break L19;
    }
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($20, $3);
   } while (0);
  }
  if ((label | 0) == 26) $$3 = 0; else if ((label | 0) == 41) if ((HEAP32[$3 >> 2] | 0) != 0 ? !(__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE5emptyEv($20) | 0) : 0) {
   __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE8pop_backEv($20);
   $$3 = HEAP32[$3 >> 2] | 0;
  } else $$3 = 0; else if ((label | 0) == 44) $$3 = 0;
  $$4 = $$3;
 } else $$4 = 0;
 STACKTOP = sp;
 return $$4 | 0;
}

function _get_sof($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0192 = 0, $$0193 = 0, $$0205$lcssa = 0, $$0205222 = 0, $$0208219 = 0, $$0211218 = 0, $$0213229 = 0, $$1 = 0, $$10 = 0, $$10203 = 0, $$11 = 0, $$11204 = 0, $$1194 = 0, $$1209$lcssa = 0, $$1209220 = 0, $$1209223 = 0, $$1212221 = 0, $$2 = 0, $$2195 = 0, $$2207 = 0, $$2210 = 0, $$3 = 0, $$3196 = 0, $$4 = 0, $$4197 = 0, $$5 = 0, $$5198 = 0, $$6 = 0, $$6199 = 0, $$7 = 0, $$7200 = 0, $$8 = 0, $$8$lcssa = 0, $$8201 = 0, $$8201$lcssa = 0, $$8201228 = 0, $$8201234 = 0, $$8227 = 0, $$8233 = 0, $$9 = 0, $$9202 = 0, $109 = 0, $110 = 0, $111 = 0, $124 = 0, $129 = 0, $136 = 0, $138 = 0, $142 = 0, $144 = 0, $147 = 0, $155 = 0, $158 = 0, $165 = 0, $166 = 0, $168 = 0, $169 = 0, $173 = 0, $175 = 0, $180 = 0, $189 = 0, $19 = 0, $190 = 0, $192 = 0, $194 = 0, $196 = 0, $20 = 0, $205 = 0, $206 = 0, $23 = 0, $31 = 0, $32 = 0, $35 = 0, $43 = 0, $44 = 0, $5 = 0, $55 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $68 = 0, $69 = 0, $7 = 0, $73 = 0, $8 = 0, $81 = 0, $82 = 0, $85 = 0, $86 = 0, $94 = 0, $95 = 0, $99 = 0, label = 0;
 $5 = HEAP32[$0 + 24 >> 2] | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $5 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 HEAP32[$0 + 220 >> 2] = $1;
 HEAP32[$0 + 224 >> 2] = $2;
 HEAP32[$0 + 228 >> 2] = $3;
 do if (!$8) if (!(FUNCTION_TABLE_ii[HEAP32[$5 + 12 >> 2] & 127]($0) | 0)) {
  $$0 = 0;
  return $$0 | 0;
 } else {
  $$0192 = HEAP32[$7 >> 2] | 0;
  $$0193 = HEAP32[$5 >> 2] | 0;
  break;
 } else {
  $$0192 = $8;
  $$0193 = $6;
 } while (0);
 $19 = $$0192 + -1 | 0;
 $20 = $$0193 + 1 | 0;
 $23 = (HEAPU8[$$0193 >> 0] | 0) << 8;
 do if (!$19) if (!(FUNCTION_TABLE_ii[HEAP32[$5 + 12 >> 2] & 127]($0) | 0)) {
  $$0 = 0;
  return $$0 | 0;
 } else {
  $$1 = HEAP32[$7 >> 2] | 0;
  $$1194 = HEAP32[$5 >> 2] | 0;
  break;
 } else {
  $$1 = $19;
  $$1194 = $20;
 } while (0);
 $31 = $$1 + -1 | 0;
 $32 = $$1194 + 1 | 0;
 $35 = $23 | (HEAPU8[$$1194 >> 0] | 0);
 do if (!$31) if (!(FUNCTION_TABLE_ii[HEAP32[$5 + 12 >> 2] & 127]($0) | 0)) {
  $$0 = 0;
  return $$0 | 0;
 } else {
  $$2 = HEAP32[$7 >> 2] | 0;
  $$2195 = HEAP32[$5 >> 2] | 0;
  break;
 } else {
  $$2 = $31;
  $$2195 = $32;
 } while (0);
 $43 = $$2 + -1 | 0;
 $44 = $$2195 + 1 | 0;
 HEAP32[$0 + 212 >> 2] = HEAPU8[$$2195 >> 0];
 do if (!$43) if (!(FUNCTION_TABLE_ii[HEAP32[$5 + 12 >> 2] & 127]($0) | 0)) {
  $$0 = 0;
  return $$0 | 0;
 } else {
  $$3 = HEAP32[$7 >> 2] | 0;
  $$3196 = HEAP32[$5 >> 2] | 0;
  break;
 } else {
  $$3 = $43;
  $$3196 = $44;
 } while (0);
 $55 = $$3 + -1 | 0;
 $56 = $$3196 + 1 | 0;
 $59 = (HEAPU8[$$3196 >> 0] | 0) << 8;
 $60 = $0 + 32 | 0;
 HEAP32[$60 >> 2] = $59;
 do if (!$55) if (!(FUNCTION_TABLE_ii[HEAP32[$5 + 12 >> 2] & 127]($0) | 0)) {
  $$0 = 0;
  return $$0 | 0;
 } else {
  $$4 = HEAP32[$7 >> 2] | 0;
  $$4197 = HEAP32[$5 >> 2] | 0;
  $73 = HEAP32[$60 >> 2] | 0;
  break;
 } else {
  $$4 = $55;
  $$4197 = $56;
  $73 = $59;
 } while (0);
 $68 = $$4 + -1 | 0;
 $69 = $$4197 + 1 | 0;
 HEAP32[$60 >> 2] = $73 + (HEAPU8[$$4197 >> 0] | 0);
 do if (!$68) if (!(FUNCTION_TABLE_ii[HEAP32[$5 + 12 >> 2] & 127]($0) | 0)) {
  $$0 = 0;
  return $$0 | 0;
 } else {
  $$5 = HEAP32[$7 >> 2] | 0;
  $$5198 = HEAP32[$5 >> 2] | 0;
  break;
 } else {
  $$5 = $68;
  $$5198 = $69;
 } while (0);
 $81 = $$5 + -1 | 0;
 $82 = $$5198 + 1 | 0;
 $85 = (HEAPU8[$$5198 >> 0] | 0) << 8;
 $86 = $0 + 28 | 0;
 HEAP32[$86 >> 2] = $85;
 do if (!$81) if (!(FUNCTION_TABLE_ii[HEAP32[$5 + 12 >> 2] & 127]($0) | 0)) {
  $$0 = 0;
  return $$0 | 0;
 } else {
  $$6 = HEAP32[$7 >> 2] | 0;
  $$6199 = HEAP32[$5 >> 2] | 0;
  $99 = HEAP32[$86 >> 2] | 0;
  break;
 } else {
  $$6 = $81;
  $$6199 = $82;
  $99 = $85;
 } while (0);
 $94 = $$6 + -1 | 0;
 $95 = $$6199 + 1 | 0;
 HEAP32[$86 >> 2] = $99 + (HEAPU8[$$6199 >> 0] | 0);
 do if (!$94) if (!(FUNCTION_TABLE_ii[HEAP32[$5 + 12 >> 2] & 127]($0) | 0)) {
  $$0 = 0;
  return $$0 | 0;
 } else {
  $$7 = HEAP32[$7 >> 2] | 0;
  $$7200 = HEAP32[$5 >> 2] | 0;
  break;
 } else {
  $$7 = $94;
  $$7200 = $95;
 } while (0);
 $109 = $0 + 36 | 0;
 HEAP32[$109 >> 2] = HEAPU8[$$7200 >> 0];
 $110 = $35 + -8 | 0;
 $111 = HEAP32[$0 >> 2] | 0;
 HEAP32[$111 + 24 >> 2] = HEAP32[$0 + 440 >> 2];
 HEAP32[$111 + 28 >> 2] = HEAP32[$86 >> 2];
 HEAP32[$111 + 32 >> 2] = HEAP32[$60 >> 2];
 HEAP32[$111 + 36 >> 2] = HEAP32[$109 >> 2];
 HEAP32[$111 + 20 >> 2] = 102;
 FUNCTION_TABLE_vii[HEAP32[$111 + 4 >> 2] & 255]($0, 1);
 $124 = $0 + 464 | 0;
 if (HEAP32[(HEAP32[$124 >> 2] | 0) + 16 >> 2] | 0) {
  $129 = HEAP32[$0 >> 2] | 0;
  HEAP32[$129 + 20 >> 2] = 61;
  FUNCTION_TABLE_vi[HEAP32[$129 >> 2] & 255]($0);
 }
 if (((HEAP32[$60 >> 2] | 0) != 0 ? (HEAP32[$86 >> 2] | 0) != 0 : 0) ? ($136 = HEAP32[$109 >> 2] | 0, ($136 | 0) >= 1) : 0) $142 = $136; else {
  $138 = HEAP32[$0 >> 2] | 0;
  HEAP32[$138 + 20 >> 2] = 33;
  FUNCTION_TABLE_vi[HEAP32[$138 >> 2] & 255]($0);
  $142 = HEAP32[$109 >> 2] | 0;
 }
 if (($110 | 0) != ($142 * 3 | 0)) {
  $144 = HEAP32[$0 >> 2] | 0;
  HEAP32[$144 + 20 >> 2] = 12;
  FUNCTION_TABLE_vi[HEAP32[$144 >> 2] & 255]($0);
 }
 $147 = $0 + 216 | 0;
 if (!(HEAP32[$147 >> 2] | 0)) {
  $155 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, (HEAP32[$109 >> 2] | 0) * 88 | 0) | 0;
  HEAP32[$147 >> 2] = $155;
 }
 $$8227 = $$7 + -1 | 0;
 $$8201228 = $$7200 + 1 | 0;
 L64 : do if ((HEAP32[$109 >> 2] | 0) > 0) {
  $158 = $5 + 12 | 0;
  $$0213229 = 0;
  $$8201234 = $$8201228;
  $$8233 = $$8227;
  while (1) {
   if (!$$8233) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$158 >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     label = 57;
     break;
    }
    $$9 = HEAP32[$7 >> 2] | 0;
    $$9202 = HEAP32[$5 >> 2] | 0;
   } else {
    $$9 = $$8233;
    $$9202 = $$8201234;
   }
   $165 = $$9 + -1 | 0;
   $166 = $$9202 + 1 | 0;
   $168 = HEAPU8[$$9202 >> 0] | 0;
   $169 = HEAP32[$147 >> 2] | 0;
   L72 : do if (!$$0213229) {
    $$2207 = $168;
    $$2210 = $169;
   } else {
    $$0208219 = $169;
    $$0211218 = 0;
    while (1) {
     if ((HEAP32[$$0208219 >> 2] | 0) == ($168 | 0)) break;
     $$0211218 = $$0211218 + 1 | 0;
     $180 = $$0208219 + 88 | 0;
     if ($$0211218 >>> 0 >= $$0213229 >>> 0) {
      $$2207 = $168;
      $$2210 = $180;
      break L72;
     } else $$0208219 = $180;
    }
    $173 = HEAP32[$169 >> 2] | 0;
    $$1209220 = $169 + 88 | 0;
    if ($$0213229 >>> 0 > 1) {
     $$0205222 = $173;
     $$1209223 = $$1209220;
     $$1212221 = 1;
     while (1) {
      $175 = HEAP32[$$1209223 >> 2] | 0;
      $$0205222 = ($175 | 0) > ($$0205222 | 0) ? $175 : $$0205222;
      $$1212221 = $$1212221 + 1 | 0;
      if (($$1212221 | 0) == ($$0213229 | 0)) break; else $$1209223 = $$1209223 + 88 | 0;
     }
     $$0205$lcssa = $$0205222;
     $$1209$lcssa = $169 + ($$0213229 * 88 | 0) | 0;
    } else {
     $$0205$lcssa = $173;
     $$1209$lcssa = $$1209220;
    }
    $$2207 = $$0205$lcssa + 1 | 0;
    $$2210 = $$1209$lcssa;
   } while (0);
   HEAP32[$$2210 >> 2] = $$2207;
   HEAP32[$$2210 + 4 >> 2] = $$0213229;
   if (!$165) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$158 >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     label = 57;
     break;
    }
    $$10 = HEAP32[$7 >> 2] | 0;
    $$10203 = HEAP32[$5 >> 2] | 0;
   } else {
    $$10 = $165;
    $$10203 = $166;
   }
   $189 = $$10 + -1 | 0;
   $190 = $$10203 + 1 | 0;
   $192 = HEAPU8[$$10203 >> 0] | 0;
   $194 = $$2210 + 8 | 0;
   HEAP32[$194 >> 2] = $192 >>> 4;
   $196 = $$2210 + 12 | 0;
   HEAP32[$196 >> 2] = $192 & 15;
   if (!$189) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$158 >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     label = 57;
     break;
    }
    $$11 = HEAP32[$7 >> 2] | 0;
    $$11204 = HEAP32[$5 >> 2] | 0;
   } else {
    $$11 = $189;
    $$11204 = $190;
   }
   $205 = $$2210 + 16 | 0;
   HEAP32[$205 >> 2] = HEAPU8[$$11204 >> 0];
   $206 = HEAP32[$0 >> 2] | 0;
   HEAP32[$206 + 24 >> 2] = HEAP32[$$2210 >> 2];
   HEAP32[$206 + 28 >> 2] = HEAP32[$194 >> 2];
   HEAP32[$206 + 32 >> 2] = HEAP32[$196 >> 2];
   HEAP32[$206 + 36 >> 2] = HEAP32[$205 >> 2];
   HEAP32[$206 + 20 >> 2] = 103;
   FUNCTION_TABLE_vii[HEAP32[$206 + 4 >> 2] & 255]($0, 1);
   $$0213229 = $$0213229 + 1 | 0;
   $$8 = $$11 + -1 | 0;
   $$8201 = $$11204 + 1 | 0;
   if (($$0213229 | 0) >= (HEAP32[$109 >> 2] | 0)) {
    $$8$lcssa = $$8;
    $$8201$lcssa = $$8201;
    break L64;
   } else {
    $$8201234 = $$8201;
    $$8233 = $$8;
   }
  }
  if ((label | 0) == 57) return $$0 | 0;
 } else {
  $$8$lcssa = $$8227;
  $$8201$lcssa = $$8201228;
 } while (0);
 HEAP32[(HEAP32[$124 >> 2] | 0) + 16 >> 2] = 1;
 HEAP32[$5 >> 2] = $$8201$lcssa;
 HEAP32[$7 >> 2] = $$8$lcssa;
 $$0 = 1;
 return $$0 | 0;
}

function __ZN6vision32ComputeSubpixelHessianSameOctaveEPfS0_RKNS_5ImageES3_S3_ii($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $10 = 0, $101 = 0, $105 = 0, $106 = 0, $11 = 0, $114 = 0, $119 = 0, $12 = 0, $123 = 0, $125 = 0, $127 = 0, $129 = 0, $131 = 0, $133 = 0, $135 = 0, $137 = 0, $138 = 0.0, $139 = 0.0, $145 = 0.0, $157 = 0.0, $165 = 0.0, $167 = 0, $22 = 0, $27 = 0, $31 = 0, $32 = 0, $34 = 0, $42 = 0, $47 = 0, $51 = 0, $52 = 0, $60 = 0, $65 = 0, $69 = 0, $7 = 0, $70 = 0, $78 = 0, $8 = 0, $83 = 0, $87 = 0, $88 = 0, $9 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $7 = sp + 20 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 12 | 0;
 $10 = sp + 8 | 0;
 $11 = sp + 4 | 0;
 $12 = sp;
 if (($5 | 0) > 0 ? ($5 + 1 | 0) >>> 0 < (__ZNK6vision5Image5widthEv($3) | 0) >>> 0 : 0) {
  $32 = $6 + -1 | 0;
  if (($6 | 0) > 0 ? ($34 = $6 + 1 | 0, $34 >>> 0 < (__ZNK6vision5Image6heightEv($3) | 0) >>> 0) : 0) {
   $52 = __ZNK6vision5Image5widthEv($2) | 0;
   if (($52 | 0) != (__ZNK6vision5Image5widthEv($3) | 0)) {
    $60 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30218) | 0, 28600) | 0, 39072) | 0, 311) | 0, 39079) | 0, 29150) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $60 + (HEAP32[(HEAP32[$60 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $65 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $69 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$65 >> 2] | 0) + 28 >> 2] & 127]($65, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($60, $69) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($60) | 0;
    _abort();
   }
   $70 = __ZNK6vision5Image5widthEv($2) | 0;
   if (($70 | 0) != (__ZNK6vision5Image5widthEv($4) | 0)) {
    $78 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30617) | 0, 28600) | 0, 39072) | 0, 312) | 0, 39079) | 0, 29150) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $78 + (HEAP32[(HEAP32[$78 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $83 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $87 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$83 >> 2] | 0) + 28 >> 2] & 127]($83, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($78, $87) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($78) | 0;
    _abort();
   }
   $88 = __ZNK6vision5Image6heightEv($2) | 0;
   if (($88 | 0) != (__ZNK6vision5Image6heightEv($3) | 0)) {
    $96 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30270) | 0, 28600) | 0, 39072) | 0, 313) | 0, 39079) | 0, 29150) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $96 + (HEAP32[(HEAP32[$96 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $101 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $105 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$101 >> 2] | 0) + 28 >> 2] & 127]($101, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($96, $105) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($96) | 0;
    _abort();
   }
   $106 = __ZNK6vision5Image6heightEv($2) | 0;
   if (($106 | 0) == (__ZNK6vision5Image6heightEv($4) | 0)) {
    $125 = (__ZNK6vision5Image3getIfEEPKT_m($2, $32) | 0) + ($5 << 2) | 0;
    $127 = (__ZNK6vision5Image3getIfEEPKT_m($2, $6) | 0) + ($5 << 2) | 0;
    $129 = (__ZNK6vision5Image3getIfEEPKT_m($2, $34) | 0) + ($5 << 2) | 0;
    $131 = (__ZNK6vision5Image3getIfEEPKT_m($3, $6) | 0) + ($5 << 2) | 0;
    $133 = (__ZNK6vision5Image3getIfEEPKT_m($4, $32) | 0) + ($5 << 2) | 0;
    $135 = (__ZNK6vision5Image3getIfEEPKT_m($4, $6) | 0) + ($5 << 2) | 0;
    $137 = (__ZNK6vision5Image3getIfEEPKT_m($4, $34) | 0) + ($5 << 2) | 0;
    __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii($8, $9, $10, $11, $12, $3, $5, $6);
    $138 = +HEAPF32[$135 >> 2];
    $139 = +HEAPF32[$127 >> 2];
    $145 = $138 + ($139 - +HEAPF32[$131 >> 2] * 2.0);
    $157 = (+HEAPF32[$127 + -4 >> 2] - +HEAPF32[$127 + 4 >> 2] + (+HEAPF32[$135 + 4 >> 2] - +HEAPF32[$135 + -4 >> 2])) * .25;
    $165 = (+HEAPF32[$125 >> 2] - +HEAPF32[$129 >> 2] + (+HEAPF32[$137 >> 2] - +HEAPF32[$133 >> 2])) * .25;
    HEAP32[$0 >> 2] = HEAP32[$10 >> 2];
    $167 = HEAP32[$12 >> 2] | 0;
    HEAP32[$0 + 4 >> 2] = $167;
    HEAPF32[$0 + 8 >> 2] = $157;
    HEAP32[$0 + 12 >> 2] = $167;
    HEAP32[$0 + 16 >> 2] = HEAP32[$11 >> 2];
    HEAPF32[$0 + 20 >> 2] = $165;
    HEAPF32[$0 + 24 >> 2] = $157;
    HEAPF32[$0 + 28 >> 2] = $165;
    HEAPF32[$0 + 32 >> 2] = $145;
    HEAPF32[$1 >> 2] = -+HEAPF32[$8 >> 2];
    HEAPF32[$1 + 4 >> 2] = -+HEAPF32[$9 >> 2];
    HEAPF32[$1 + 8 >> 2] = -(($138 - $139) * .5);
    STACKTOP = sp;
    return;
   } else {
    $114 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30669) | 0, 28600) | 0, 39072) | 0, 314) | 0, 39079) | 0, 29150) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $114 + (HEAP32[(HEAP32[$114 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $119 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
    $123 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$119 >> 2] | 0) + 28 >> 2] & 127]($119, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($114, $123) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($114) | 0;
    _abort();
   }
  }
  $42 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 29018) | 0, 28600) | 0, 39072) | 0, 310) | 0, 39079) | 0, 29077) | 0;
  __ZNKSt3__28ios_base6getlocEv($7, $42 + (HEAP32[(HEAP32[$42 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $47 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
  $51 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$47 >> 2] | 0) + 28 >> 2] & 127]($47, 10) | 0;
  __ZNSt3__26localeD2Ev($7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($42, $51) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($42) | 0;
  _abort();
 }
 $22 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 28944) | 0, 28600) | 0, 39072) | 0, 309) | 0, 39079) | 0, 29002) | 0;
 __ZNKSt3__28ios_base6getlocEv($7, $22 + (HEAP32[(HEAP32[$22 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $27 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
 $31 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$27 >> 2] | 0) + 28 >> 2] & 127]($27, 10) | 0;
 __ZNSt3__26localeD2Ev($7);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($22, $31) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($22) | 0;
 _abort();
}

function _start_pass_huff_decoder($0) {
 $0 = $0 | 0;
 var $$0242284 = 0, $$0243291 = 0, $$0295 = 0, $$1287 = 0, $$2285 = 0, $$off = 0, $$off251 = 0, $$off252 = 0, $$off253 = 0, $$off254 = 0, $$off255 = 0, $$off256 = 0, $$off257 = 0, $$off258 = 0, $$off259 = 0, $$off262 = 0, $$off263 = 0, $$pre$phi308Z2D = 0, $$sink = 0, $10 = 0, $100 = 0, $102 = 0, $106 = 0, $109 = 0, $110 = 0, $113 = 0, $127 = 0, $132 = 0, $136 = 0, $140 = 0, $144 = 0, $146 = 0, $151 = 0, $157 = 0, $163 = 0, $178 = 0, $180 = 0, $2 = 0, $20 = 0, $22 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $240 = 0, $27 = 0, $28 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $49 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $60 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $76 = 0, $8 = 0, $89 = 0, $9 = 0, $93 = 0, $94 = 0, $97 = 0, $98 = 0, label = 0;
 $2 = HEAP32[$0 + 468 >> 2] | 0;
 $6 = $0 + 412 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = ($7 | 0) == 0;
 if (!(HEAP32[$0 + 224 >> 2] | 0)) {
  if (($8 ? (HEAP32[$0 + 420 >> 2] | 0) == 0 : 0) ? (HEAP32[$0 + 424 >> 2] | 0) == 0 : 0) {
   $127 = HEAP32[$0 + 416 >> 2] | 0;
   if ((HEAP32[$0 + 220 >> 2] | 0) != 0 | ($127 | 0) < 64 ? ($127 | 0) != (HEAP32[$0 + 436 >> 2] | 0) : 0) label = 38;
  } else label = 38;
  if ((label | 0) == 38) {
   $132 = HEAP32[$0 >> 2] | 0;
   HEAP32[$132 + 20 >> 2] = 125;
   FUNCTION_TABLE_vii[HEAP32[$132 + 4 >> 2] & 255]($0, -1);
  }
  $136 = $0 + 436 | 0;
  HEAP32[$2 + 4 >> 2] = (HEAP32[$136 >> 2] | 0) == 63 ? 64 : 65;
  $140 = $0 + 340 | 0;
  if ((HEAP32[$140 >> 2] | 0) > 0) {
   $$2285 = 0;
   do {
    $144 = HEAP32[$0 + 344 + ($$2285 << 2) >> 2] | 0;
    $146 = HEAP32[$144 + 20 >> 2] | 0;
    _jpeg_make_d_derived_tbl($0, 1, $146, $2 + 68 + ($146 << 2) | 0);
    if (HEAP32[$136 >> 2] | 0) {
     $151 = HEAP32[$144 + 24 >> 2] | 0;
     _jpeg_make_d_derived_tbl($0, 0, $151, $2 + 84 + ($151 << 2) | 0);
    }
    HEAP32[$2 + 24 + ($$2285 << 2) >> 2] = 0;
    $$2285 = $$2285 + 1 | 0;
   } while (($$2285 | 0) < (HEAP32[$140 >> 2] | 0));
  }
  $157 = $0 + 368 | 0;
  if ((HEAP32[$157 >> 2] | 0) <= 0) {
   $235 = $2 + 16 | 0;
   HEAP32[$235 >> 2] = 0;
   $236 = $2 + 12 | 0;
   HEAP32[$236 >> 2] = 0;
   $237 = $2 + 40 | 0;
   HEAP32[$237 >> 2] = 0;
   $238 = $0 + 280 | 0;
   $239 = HEAP32[$238 >> 2] | 0;
   $240 = $2 + 44 | 0;
   HEAP32[$240 >> 2] = $239;
   return;
  }
  $$0242284 = 0;
  do {
   $163 = HEAP32[$0 + 344 + (HEAP32[$0 + 372 + ($$0242284 << 2) >> 2] << 2) >> 2] | 0;
   HEAP32[$2 + 100 + ($$0242284 << 2) >> 2] = HEAP32[$2 + 68 + (HEAP32[$163 + 20 >> 2] << 2) >> 2];
   HEAP32[$2 + 140 + ($$0242284 << 2) >> 2] = HEAP32[$2 + 84 + (HEAP32[$163 + 24 >> 2] << 2) >> 2];
   L24 : do if (!(HEAP32[$163 + 52 >> 2] | 0)) $$sink = 0; else {
    $178 = HEAP32[$163 + 40 >> 2] | 0;
    $180 = HEAP32[$163 + 36 >> 2] | 0;
    switch (HEAP32[$136 >> 2] | 0) {
    case 0:
     {
      $$sink = 1;
      break L24;
      break;
     }
    case 3:
     {
      $$sink = (HEAP32[4336 + ((($178 | 0) != 1 & 1) << 3) + ((($180 | 0) != 1 & 1) << 2) >> 2] | 0) + 1 | 0;
      break L24;
      break;
     }
    case 8:
     {
      $$off258 = $178 + -1 | 0;
      $$off259 = $180 + -1 | 0;
      $$sink = (HEAP32[4352 + (($$off258 >>> 0 < 2 ? $$off258 : 2) * 12 | 0) + (($$off259 >>> 0 < 2 ? $$off259 : 2) << 2) >> 2] | 0) + 1 | 0;
      break L24;
      break;
     }
    case 15:
     {
      $$off256 = $178 + -1 | 0;
      $$off257 = $180 + -1 | 0;
      $$sink = (HEAP32[4400 + (($$off256 >>> 0 < 3 ? $$off256 : 3) << 4) + (($$off257 >>> 0 < 3 ? $$off257 : 3) << 2) >> 2] | 0) + 1 | 0;
      break L24;
      break;
     }
    case 24:
     {
      $$off254 = $178 + -1 | 0;
      $$off255 = $180 + -1 | 0;
      $$sink = (HEAP32[4464 + (($$off254 >>> 0 < 4 ? $$off254 : 4) * 20 | 0) + (($$off255 >>> 0 < 4 ? $$off255 : 4) << 2) >> 2] | 0) + 1 | 0;
      break L24;
      break;
     }
    case 35:
     {
      $$off252 = $178 + -1 | 0;
      $$off253 = $180 + -1 | 0;
      $$sink = (HEAP32[4576 + (($$off252 >>> 0 < 5 ? $$off252 : 5) * 24 | 0) + (($$off253 >>> 0 < 5 ? $$off253 : 5) << 2) >> 2] | 0) + 1 | 0;
      break L24;
      break;
     }
    case 48:
     {
      $$off = $178 + -1 | 0;
      $$off251 = $180 + -1 | 0;
      $$sink = (HEAP32[4720 + (($$off >>> 0 < 6 ? $$off : 6) * 28 | 0) + (($$off251 >>> 0 < 6 ? $$off251 : 6) << 2) >> 2] | 0) + 1 | 0;
      break L24;
      break;
     }
    default:
     {
      $$off262 = $178 + -1 | 0;
      $$off263 = $180 + -1 | 0;
      $$sink = (HEAP32[4928 + (($$off262 >>> 0 < 7 ? $$off262 : 7) << 5) + (($$off263 >>> 0 < 7 ? $$off263 : 7) << 2) >> 2] | 0) + 1 | 0;
      break L24;
     }
    }
   } while (0);
   HEAP32[$2 + 180 + ($$0242284 << 2) >> 2] = $$sink;
   $$0242284 = $$0242284 + 1 | 0;
  } while (($$0242284 | 0) < (HEAP32[$157 >> 2] | 0));
  $235 = $2 + 16 | 0;
  HEAP32[$235 >> 2] = 0;
  $236 = $2 + 12 | 0;
  HEAP32[$236 >> 2] = 0;
  $237 = $2 + 40 | 0;
  HEAP32[$237 >> 2] = 0;
  $238 = $0 + 280 | 0;
  $239 = HEAP32[$238 >> 2] | 0;
  $240 = $2 + 44 | 0;
  HEAP32[$240 >> 2] = $239;
  return;
 }
 $9 = $0 + 416 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if ($8) if (!$10) label = 7; else label = 11; else if ((($10 | 0) >= ($7 | 0) ? ($10 | 0) <= (HEAP32[$0 + 436 >> 2] | 0) : 0) ? (HEAP32[$0 + 340 >> 2] | 0) == 1 : 0) label = 7; else label = 11;
 do if ((label | 0) == 7) {
  $20 = HEAP32[$0 + 420 >> 2] | 0;
  if ($20) {
   $22 = $20 + -1 | 0;
   if (($22 | 0) == (HEAP32[$0 + 424 >> 2] | 0)) $27 = $22; else {
    label = 11;
    break;
   }
  } else $27 = HEAP32[$0 + 424 >> 2] | 0;
  if (($27 | 0) > 13) label = 11;
 } while (0);
 if ((label | 0) == 11) {
  $28 = HEAP32[$0 >> 2] | 0;
  HEAP32[$28 + 20 >> 2] = 17;
  HEAP32[$28 + 24 >> 2] = $7;
  HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = HEAP32[$9 >> 2];
  HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] = HEAP32[$0 + 420 >> 2];
  HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] = HEAP32[$0 + 424 >> 2];
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $44 = $0 + 340 | 0;
 $45 = HEAP32[$44 >> 2] | 0;
 if (($45 | 0) > 0) {
  $47 = $0 + 160 | 0;
  $48 = $0 + 420 | 0;
  $49 = $0 + 424 | 0;
  $$0295 = 0;
  do {
   $53 = HEAP32[(HEAP32[$0 + 344 + ($$0295 << 2) >> 2] | 0) + 4 >> 2] | 0;
   $54 = HEAP32[$47 >> 2] | 0;
   $55 = HEAP32[$6 >> 2] | 0;
   if ($55) if ((HEAP32[$54 + ($53 << 8) >> 2] | 0) < 0) {
    $60 = HEAP32[$0 >> 2] | 0;
    HEAP32[$60 + 20 >> 2] = 118;
    HEAP32[$60 + 24 >> 2] = $53;
    HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = 0;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, -1);
    $70 = HEAP32[$6 >> 2] | 0;
   } else $70 = $55; else $70 = 0;
   if (($70 | 0) <= (HEAP32[$9 >> 2] | 0)) {
    $$0243291 = $70;
    while (1) {
     $71 = $54 + ($53 << 8) + ($$0243291 << 2) | 0;
     $72 = HEAP32[$71 >> 2] | 0;
     if ((HEAP32[$48 >> 2] | 0) != ((($72 | 0) > 0 ? $72 : 0) | 0)) {
      $76 = HEAP32[$0 >> 2] | 0;
      HEAP32[$76 + 20 >> 2] = 118;
      HEAP32[$76 + 24 >> 2] = $53;
      HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $$0243291;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, -1);
     }
     HEAP32[$71 >> 2] = HEAP32[$49 >> 2];
     if (($$0243291 | 0) < (HEAP32[$9 >> 2] | 0)) $$0243291 = $$0243291 + 1 | 0; else break;
    }
   }
   $$0295 = $$0295 + 1 | 0;
   $89 = HEAP32[$44 >> 2] | 0;
  } while (($$0295 | 0) < ($89 | 0));
  $$pre$phi308Z2D = $48;
  $97 = $89;
 } else {
  $$pre$phi308Z2D = $0 + 420 | 0;
  $97 = $45;
 }
 $93 = HEAP32[$6 >> 2] | 0;
 $94 = ($93 | 0) == 0;
 HEAP32[$2 + 4 >> 2] = (HEAP32[$$pre$phi308Z2D >> 2] | 0) == 0 ? ($94 ? 60 : 61) : $94 ? 62 : 63;
 L69 : do if (($97 | 0) > 0) {
  $98 = $2 + 64 | 0;
  $$1287 = 0;
  $102 = $93;
  while (1) {
   $100 = HEAP32[$0 + 344 + ($$1287 << 2) >> 2] | 0;
   if (!$102) {
    if (!(HEAP32[$$pre$phi308Z2D >> 2] | 0)) {
     $106 = HEAP32[$100 + 20 >> 2] | 0;
     _jpeg_make_d_derived_tbl($0, 1, $106, $2 + 48 + ($106 << 2) | 0);
    }
   } else {
    $109 = HEAP32[$100 + 24 >> 2] | 0;
    $110 = $2 + 48 + ($109 << 2) | 0;
    _jpeg_make_d_derived_tbl($0, 0, $109, $110);
    HEAP32[$98 >> 2] = HEAP32[$110 >> 2];
   }
   HEAP32[$2 + 24 + ($$1287 << 2) >> 2] = 0;
   $113 = $$1287 + 1 | 0;
   if (($113 | 0) >= (HEAP32[$44 >> 2] | 0)) break L69;
   $$1287 = $113;
   $102 = HEAP32[$6 >> 2] | 0;
  }
 } while (0);
 HEAP32[$2 + 20 >> 2] = 0;
 $235 = $2 + 16 | 0;
 HEAP32[$235 >> 2] = 0;
 $236 = $2 + 12 | 0;
 HEAP32[$236 >> 2] = 0;
 $237 = $2 + 40 | 0;
 HEAP32[$237 >> 2] = 0;
 $238 = $0 + 280 | 0;
 $239 = HEAP32[$238 >> 2] | 0;
 $240 = $2 + 44 | 0;
 HEAP32[$240 >> 2] = $239;
 return;
}

function _kpmMatching($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0224 = 0, $$0225 = 0, $$0226 = 0, $$0227 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$pre$phi239Z2D = 0, $$pre$phi240Z2D = 0, $101 = 0.0, $103 = 0.0, $104 = 0, $109 = 0, $11 = 0, $113 = 0, $118 = 0, $12 = 0, $121 = 0, $123 = 0.0, $125 = 0.0, $126 = 0, $13 = 0, $131 = 0, $135 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $148 = 0, $155 = 0, $157 = 0, $159 = 0, $161 = 0, $163 = 0, $164 = 0, $169 = 0, $17 = 0, $175 = 0, $182 = 0.0, $185 = 0, $186 = 0, $192 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $37 = 0, $39 = 0.0, $41 = 0.0, $42 = 0, $45 = 0, $48 = 0, $52 = 0, $55 = 0, $57 = 0.0, $59 = 0.0, $60 = 0, $65 = 0, $69 = 0, $7 = 0, $74 = 0, $77 = 0, $79 = 0.0, $81 = 0.0, $82 = 0, $87 = 0, $9 = 0, $91 = 0, $96 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 44 | 0;
 $3 = sp + 40 | 0;
 do if (($0 | 0) != 0 & ($1 | 0) != 0) {
  $7 = HEAP32[$0 + 12 >> 2] | 0;
  $9 = HEAP32[$0 + 16 >> 2] | 0;
  $11 = HEAP32[$0 + 20 >> 2] | 0;
  $12 = ($11 | 0) == 1;
  if (!$12) {
   $13 = _kpmUtilResizeImage($1, $7, $9, $11, $2, $3) | 0;
   if (!$13) {
    $$0 = -1;
    break;
   } else {
    $$0224 = $13;
    $$0226 = 1;
   }
  } else {
   $$0224 = $1;
   $$0226 = 0;
  }
  __ZN6vision20VisualDatabaseFacade5queryEPhmm(HEAP32[$0 >> 2] | 0, $$0224, $7, $9) | 0;
  $17 = __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv(HEAP32[$0 >> 2] | 0) | 0;
  $21 = (HEAP32[$17 + 4 >> 2] | 0) - (HEAP32[$17 >> 2] | 0) | 0;
  $22 = ($21 | 0) / 20 | 0;
  $23 = $0 + 48 | 0;
  HEAP32[$23 >> 2] = $22;
  L6 : do if (!$21) {
   $185 = HEAP32[$0 + 56 >> 2] | 0;
   $186 = $0 + 52 | 0;
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($185 | 0)) {
     $$pre$phi239Z2D = $186;
     $192 = $185;
     break L6;
    }
    HEAP32[(HEAP32[$186 >> 2] | 0) + ($$5 * 68 | 0) + 60 >> 2] = -1;
    $$5 = $$5 + 1 | 0;
   }
  } else {
   $25 = $0 + 44 | 0;
   $26 = HEAP32[$25 >> 2] | 0;
   if (!$26) $29 = $22; else {
    _free($26);
    $29 = HEAP32[$23 >> 2] | 0;
   }
   $30 = _malloc($29 << 3) | 0;
   HEAP32[$25 >> 2] = $30;
   if (!$30) {
    _arLog(0, 3, 45930, $vararg_buffer1);
    _exit(1);
   }
   $33 = __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv(HEAP32[$0 >> 2] | 0) | 0;
   L18 : do if ($12) {
    $34 = $0 + 4 | 0;
    $$0227 = 0;
    while (1) {
     if (($$0227 | 0) >= (HEAP32[$23 >> 2] | 0)) {
      $$pre$phi240Z2D = $34;
      break L18;
     }
     $37 = HEAP32[$33 >> 2] | 0;
     $39 = +HEAPF32[$37 + ($$0227 * 20 | 0) >> 2];
     $41 = +HEAPF32[$37 + ($$0227 * 20 | 0) + 4 >> 2];
     $42 = HEAP32[$34 >> 2] | 0;
     if (!$42) {
      $48 = HEAP32[$25 >> 2] | 0;
      HEAPF32[$48 + ($$0227 << 3) >> 2] = $39;
      HEAPF32[$48 + ($$0227 << 3) + 4 >> 2] = $41;
     } else {
      $45 = HEAP32[$25 >> 2] | 0;
      _arParamObserv2IdealLTf($42 + 184 | 0, $39, $41, $45 + ($$0227 << 3) | 0, $45 + ($$0227 << 3) + 4 | 0) | 0;
     }
     $$0227 = $$0227 + 1 | 0;
    }
   } else switch ($11 | 0) {
   case 5:
    {
     $52 = $0 + 4 | 0;
     $$1 = 0;
     while (1) {
      if (($$1 | 0) >= (HEAP32[$23 >> 2] | 0)) {
       $$pre$phi240Z2D = $52;
       break L18;
      }
      $55 = HEAP32[$33 >> 2] | 0;
      $57 = +HEAPF32[$55 + ($$1 * 20 | 0) >> 2];
      $59 = +HEAPF32[$55 + ($$1 * 20 | 0) + 4 >> 2];
      $60 = HEAP32[$52 >> 2] | 0;
      if (!$60) {
       $69 = HEAP32[$25 >> 2] | 0;
       HEAPF32[$69 + ($$1 << 3) >> 2] = $57 * 1.5;
       HEAPF32[$69 + ($$1 << 3) + 4 >> 2] = $59 * 1.5;
      } else {
       $65 = HEAP32[$25 >> 2] | 0;
       _arParamObserv2IdealLTf($60 + 184 | 0, $57 * 1.5, $59 * 1.5, $65 + ($$1 << 3) | 0, $65 + ($$1 << 3) + 4 | 0) | 0;
      }
      $$1 = $$1 + 1 | 0;
     }
     break;
    }
   case 2:
    {
     $74 = $0 + 4 | 0;
     $$2 = 0;
     while (1) {
      if (($$2 | 0) >= (HEAP32[$23 >> 2] | 0)) {
       $$pre$phi240Z2D = $74;
       break L18;
      }
      $77 = HEAP32[$33 >> 2] | 0;
      $79 = +HEAPF32[$77 + ($$2 * 20 | 0) >> 2];
      $81 = +HEAPF32[$77 + ($$2 * 20 | 0) + 4 >> 2];
      $82 = HEAP32[$74 >> 2] | 0;
      if (!$82) {
       $91 = HEAP32[$25 >> 2] | 0;
       HEAPF32[$91 + ($$2 << 3) >> 2] = $79 * 2.0;
       HEAPF32[$91 + ($$2 << 3) + 4 >> 2] = $81 * 2.0;
      } else {
       $87 = HEAP32[$25 >> 2] | 0;
       _arParamObserv2IdealLTf($82 + 184 | 0, $79 * 2.0, $81 * 2.0, $87 + ($$2 << 3) | 0, $87 + ($$2 << 3) + 4 | 0) | 0;
      }
      $$2 = $$2 + 1 | 0;
     }
     break;
    }
   case 4:
    {
     $96 = $0 + 4 | 0;
     $$3 = 0;
     while (1) {
      if (($$3 | 0) >= (HEAP32[$23 >> 2] | 0)) {
       $$pre$phi240Z2D = $96;
       break L18;
      }
      $99 = HEAP32[$33 >> 2] | 0;
      $101 = +HEAPF32[$99 + ($$3 * 20 | 0) >> 2];
      $103 = +HEAPF32[$99 + ($$3 * 20 | 0) + 4 >> 2];
      $104 = HEAP32[$96 >> 2] | 0;
      if (!$104) {
       $113 = HEAP32[$25 >> 2] | 0;
       HEAPF32[$113 + ($$3 << 3) >> 2] = $101 * 3.0;
       HEAPF32[$113 + ($$3 << 3) + 4 >> 2] = $103 * 3.0;
      } else {
       $109 = HEAP32[$25 >> 2] | 0;
       _arParamObserv2IdealLTf($104 + 184 | 0, $101 * 3.0, $103 * 3.0, $109 + ($$3 << 3) | 0, $109 + ($$3 << 3) + 4 | 0) | 0;
      }
      $$3 = $$3 + 1 | 0;
     }
     break;
    }
   default:
    {
     $118 = $0 + 4 | 0;
     $$4 = 0;
     while (1) {
      if (($$4 | 0) >= (HEAP32[$23 >> 2] | 0)) {
       $$pre$phi240Z2D = $118;
       break L18;
      }
      $121 = HEAP32[$33 >> 2] | 0;
      $123 = +HEAPF32[$121 + ($$4 * 20 | 0) >> 2];
      $125 = +HEAPF32[$121 + ($$4 * 20 | 0) + 4 >> 2];
      $126 = HEAP32[$118 >> 2] | 0;
      if (!$126) {
       $135 = HEAP32[$25 >> 2] | 0;
       HEAPF32[$135 + ($$4 << 3) >> 2] = $123 * 4.0;
       HEAPF32[$135 + ($$4 << 3) + 4 >> 2] = $125 * 4.0;
      } else {
       $131 = HEAP32[$25 >> 2] | 0;
       _arParamObserv2IdealLTf($126 + 184 | 0, $123 * 4.0, $125 * 4.0, $131 + ($$4 << 3) | 0, $131 + ($$4 << 3) + 4 | 0) | 0;
      }
      $$4 = $$4 + 1 | 0;
     }
    }
   } while (0);
   $140 = $0 + 56 | 0;
   $141 = $0 + 36 | 0;
   $142 = $0 + 52 | 0;
   $$0225 = 0;
   while (1) {
    $143 = HEAP32[$140 >> 2] | 0;
    if (($$0225 | 0) >= ($143 | 0)) {
     $$pre$phi239Z2D = $142;
     $192 = $143;
     break L6;
    }
    $148 = HEAP32[$142 >> 2] | 0;
    HEAP32[$148 + ($$0225 * 68 | 0) + 48 >> 2] = HEAP32[(HEAP32[$141 >> 2] | 0) + ($$0225 * 12 | 0) + 8 >> 2];
    HEAP32[$148 + ($$0225 * 68 | 0) + 60 >> 2] = -1;
    if (((HEAP32[$148 + ($$0225 * 68 | 0) + 64 >> 2] | 0) == 0 ? ($155 = __ZNK6vision20VisualDatabaseFacade7inliersEv(HEAP32[$0 >> 2] | 0) | 0, $157 = __ZN6vision20VisualDatabaseFacade9matchedIdEv(HEAP32[$0 >> 2] | 0) | 0, ($157 | 0) >= 0) : 0) ? ($159 = HEAP32[$$pre$phi240Z2D >> 2] | 0, $161 = __ZNK6vision20VisualDatabaseFacade18get3DFeaturePointsEi(HEAP32[$0 >> 2] | 0, $157) | 0, $163 = __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv(HEAP32[$0 >> 2] | 0) | 0, $164 = HEAP32[$142 >> 2] | 0, (__Z21kpmUtilGetPose_binaryP9ARParamLTRKNSt3__26vectorIN6vision7match_tENS1_9allocatorIS4_EEEERKNS2_INS3_7Point3dIfEENS5_ISB_EEEERKNS2_INS3_12FeaturePointENS5_ISG_EEEEPA4_fPf($159, $155, $161, $163, $164 + ($$0225 * 68 | 0) | 0, $164 + ($$0225 * 68 | 0) + 52 | 0) | 0) == 0) : 0) {
     $169 = HEAP32[$142 >> 2] | 0;
     HEAP32[$169 + ($$0225 * 68 | 0) + 60 >> 2] = 0;
     $175 = (HEAP32[$155 + 4 >> 2] | 0) - (HEAP32[$155 >> 2] | 0) >> 3;
     HEAP32[$169 + ($$0225 * 68 | 0) + 56 >> 2] = $175;
     HEAP32[$169 + ($$0225 * 68 | 0) + 48 >> 2] = HEAP32[$0 + 60 + ($157 << 2) >> 2];
     $182 = +HEAPF32[$169 + ($$0225 * 68 | 0) + 52 >> 2];
     HEAP32[$vararg_buffer3 >> 2] = $$0225;
     HEAP32[$vararg_buffer3 + 4 >> 2] = $175;
     HEAP32[$vararg_buffer3 + 8 >> 2] = $175;
     HEAPF64[$vararg_buffer3 + 16 >> 3] = $182;
     _arLog(0, 1, 26659, $vararg_buffer3);
    }
    $$0225 = $$0225 + 1 | 0;
   }
  } while (0);
  $$6 = 0;
  while (1) {
   if (($$6 | 0) >= ($192 | 0)) break;
   HEAP32[(HEAP32[$$pre$phi239Z2D >> 2] | 0) + ($$6 * 68 | 0) + 64 >> 2] = 0;
   $$6 = $$6 + 1 | 0;
  }
  if (!$$0226) $$0 = 0; else {
   _free($$0224);
   $$0 = 0;
  }
 } else {
  _arLog(0, 3, 26615, $vararg_buffer);
  $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision25bilinear_histogram_updateEPfffi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = $3 | 0;
 var $105 = 0, $11 = 0, $110 = 0, $114 = 0, $121 = 0, $126 = 0, $130 = 0, $137 = 0, $142 = 0, $146 = 0, $148 = 0, $152 = 0, $16 = 0, $20 = 0, $23 = 0.0, $31 = 0, $36 = 0, $4 = 0, $40 = 0, $47 = 0, $52 = 0, $56 = 0, $63 = 0, $68 = 0, $72 = 0, $74 = 0, $77 = 0.0, $78 = 0.0, $80 = 0, $82 = 0, $89 = 0, $94 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 if (!$0) {
  $11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 32520) | 0, 32556) | 0, 39072) | 0, 139) | 0, 39079) | 0, 32643) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $11 + (HEAP32[(HEAP32[$11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 127]($16, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($11, $20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  _abort();
 }
 if ($1 + .5 > 0.0 ? ($23 = $1 + -.5, $23 < +($3 | 0)) : 0) {
  if (!($2 >= 0.0)) {
   $47 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 32774) | 0, 32556) | 0, 39072) | 0, 141) | 0, 39079) | 0, 32812) | 0;
   __ZNKSt3__28ios_base6getlocEv($4, $47 + (HEAP32[(HEAP32[$47 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $52 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
   $56 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$52 >> 2] | 0) + 28 >> 2] & 127]($52, 10) | 0;
   __ZNSt3__26localeD2Ev($4);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($47, $56) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($47) | 0;
   _abort();
  }
  if (($3 | 0) <= -1) {
   $63 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 32841) | 0, 32556) | 0, 39072) | 0, 142) | 0, 39079) | 0, 32878) | 0;
   __ZNKSt3__28ios_base6getlocEv($4, $63 + (HEAP32[(HEAP32[$63 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $68 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
   $72 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$68 >> 2] | 0) + 28 >> 2] & 127]($68, 10) | 0;
   __ZNSt3__26localeD2Ev($4);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($63, $72) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($63) | 0;
   _abort();
  }
  $74 = ~~+Math_floor(+$23);
  $77 = $1 - +($74 | 0) + -.5;
  $78 = 1.0 - $77;
  $80 = ($74 + $3 | 0) % ($3 | 0) | 0;
  $82 = ($74 + 1 | 0) % ($3 | 0) | 0;
  if (!($78 >= 0.0)) {
   $89 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 32907) | 0, 32556) | 0, 39072) | 0, 150) | 0, 39079) | 0, 32938) | 0;
   __ZNKSt3__28ios_base6getlocEv($4, $89 + (HEAP32[(HEAP32[$89 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $94 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
   $98 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$94 >> 2] | 0) + 28 >> 2] & 127]($94, 10) | 0;
   __ZNSt3__26localeD2Ev($4);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($89, $98) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($89) | 0;
   _abort();
  }
  if (!($77 >= 0.0)) {
   $105 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 32958) | 0, 32556) | 0, 39072) | 0, 151) | 0, 39079) | 0, 32989) | 0;
   __ZNKSt3__28ios_base6getlocEv($4, $105 + (HEAP32[(HEAP32[$105 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $110 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
   $114 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$110 >> 2] | 0) + 28 >> 2] & 127]($110, 10) | 0;
   __ZNSt3__26localeD2Ev($4);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($105, $114) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($105) | 0;
   _abort();
  }
  if (($80 | 0) <= -1) {
   $121 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33009) | 0, 32556) | 0, 39072) | 0, 152) | 0, 39079) | 0, 33057) | 0;
   __ZNKSt3__28ios_base6getlocEv($4, $121 + (HEAP32[(HEAP32[$121 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $126 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
   $130 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$126 >> 2] | 0) + 28 >> 2] & 127]($126, 10) | 0;
   __ZNSt3__26localeD2Ev($4);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($121, $130) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($121) | 0;
   _abort();
  }
  if (($82 | 0) > -1) {
   $148 = $0 + ($80 << 2) | 0;
   HEAPF32[$148 >> 2] = $78 * $2 + +HEAPF32[$148 >> 2];
   $152 = $0 + ($82 << 2) | 0;
   HEAPF32[$152 >> 2] = $77 * $2 + +HEAPF32[$152 >> 2];
   STACKTOP = sp;
   return;
  } else {
   $137 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33083) | 0, 32556) | 0, 39072) | 0, 153) | 0, 39079) | 0, 33131) | 0;
   __ZNKSt3__28ios_base6getlocEv($4, $137 + (HEAP32[(HEAP32[$137 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $142 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
   $146 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$142 >> 2] | 0) + 28 >> 2] & 127]($142, 10) | 0;
   __ZNSt3__26localeD2Ev($4);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($137, $146) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($137) | 0;
   _abort();
  }
 }
 $31 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 32669) | 0, 32556) | 0, 39072) | 0, 140) | 0, 39079) | 0, 32734) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $31 + (HEAP32[(HEAP32[$31 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $36 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
 $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$36 >> 2] | 0) + 28 >> 2] & 127]($36, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($31, $40) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($31) | 0;
 _abort();
}

function _jpeg_idct_8x4($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$1168171 = 0, $$1172 = 0, $103 = 0, $109 = 0, $111 = 0, $113 = 0, $119 = 0, $125 = 0, $128 = 0, $13 = 0, $131 = 0, $134 = 0, $148 = 0, $154 = 0, $156 = 0, $158 = 0, $164 = 0, $170 = 0, $173 = 0, $176 = 0, $179 = 0, $19 = 0, $193 = 0, $199 = 0, $201 = 0, $203 = 0, $209 = 0, $21 = 0, $215 = 0, $218 = 0, $221 = 0, $224 = 0, $23 = 0, $238 = 0, $244 = 0, $246 = 0, $248 = 0, $254 = 0, $260 = 0, $263 = 0, $266 = 0, $269 = 0, $283 = 0, $289 = 0, $29 = 0, $291 = 0, $293 = 0, $299 = 0, $305 = 0, $308 = 0, $311 = 0, $314 = 0, $328 = 0, $334 = 0, $336 = 0, $338 = 0, $344 = 0, $35 = 0, $350 = 0, $353 = 0, $356 = 0, $359 = 0, $367 = 0, $370 = 0, $372 = 0, $374 = 0, $376 = 0, $378 = 0, $38 = 0, $380 = 0, $382 = 0, $384 = 0, $386 = 0, $388 = 0, $389 = 0, $390 = 0, $391 = 0, $392 = 0, $394 = 0, $396 = 0, $398 = 0, $400 = 0, $401 = 0, $402 = 0, $404 = 0, $407 = 0, $408 = 0, $41 = 0, $410 = 0, $414 = 0, $416 = 0, $418 = 0, $422 = 0, $424 = 0, $44 = 0, $5 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $7 = 0, $74 = 0, $80 = 0, $83 = 0, $86 = 0, $89 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $9 = HEAP32[$1 + 84 >> 2] | 0;
 $13 = Math_imul(HEAP32[$9 >> 2] | 0, HEAP16[$2 >> 1] | 0) | 0;
 $19 = Math_imul(HEAP32[$9 + 64 >> 2] | 0, HEAP16[$2 + 32 >> 1] | 0) | 0;
 $21 = $19 + $13 << 2;
 $23 = $13 - $19 << 2;
 $29 = Math_imul(HEAP32[$9 + 32 >> 2] | 0, HEAP16[$2 + 16 >> 1] | 0) | 0;
 $35 = Math_imul(HEAP32[$9 + 96 >> 2] | 0, HEAP16[$2 + 48 >> 1] | 0) | 0;
 $38 = (($35 + $29 | 0) * 4433 | 0) + 1024 | 0;
 $41 = $38 + ($29 * 6270 | 0) >> 11;
 $44 = $38 + (Math_imul($35, -15137) | 0) >> 11;
 HEAP32[$5 >> 2] = $41 + $21;
 HEAP32[$5 + 96 >> 2] = $21 - $41;
 HEAP32[$5 + 32 >> 2] = $44 + $23;
 HEAP32[$5 + 64 >> 2] = $23 - $44;
 $58 = Math_imul(HEAP32[$9 + 4 >> 2] | 0, HEAP16[$2 + 2 >> 1] | 0) | 0;
 $64 = Math_imul(HEAP32[$9 + 68 >> 2] | 0, HEAP16[$2 + 34 >> 1] | 0) | 0;
 $66 = $64 + $58 << 2;
 $68 = $58 - $64 << 2;
 $74 = Math_imul(HEAP32[$9 + 36 >> 2] | 0, HEAP16[$2 + 18 >> 1] | 0) | 0;
 $80 = Math_imul(HEAP32[$9 + 100 >> 2] | 0, HEAP16[$2 + 50 >> 1] | 0) | 0;
 $83 = (($80 + $74 | 0) * 4433 | 0) + 1024 | 0;
 $86 = $83 + ($74 * 6270 | 0) >> 11;
 $89 = $83 + (Math_imul($80, -15137) | 0) >> 11;
 HEAP32[$5 + 4 >> 2] = $86 + $66;
 HEAP32[$5 + 100 >> 2] = $66 - $86;
 HEAP32[$5 + 36 >> 2] = $89 + $68;
 HEAP32[$5 + 68 >> 2] = $68 - $89;
 $103 = Math_imul(HEAP32[$9 + 8 >> 2] | 0, HEAP16[$2 + 4 >> 1] | 0) | 0;
 $109 = Math_imul(HEAP32[$9 + 72 >> 2] | 0, HEAP16[$2 + 36 >> 1] | 0) | 0;
 $111 = $109 + $103 << 2;
 $113 = $103 - $109 << 2;
 $119 = Math_imul(HEAP32[$9 + 40 >> 2] | 0, HEAP16[$2 + 20 >> 1] | 0) | 0;
 $125 = Math_imul(HEAP32[$9 + 104 >> 2] | 0, HEAP16[$2 + 52 >> 1] | 0) | 0;
 $128 = (($125 + $119 | 0) * 4433 | 0) + 1024 | 0;
 $131 = $128 + ($119 * 6270 | 0) >> 11;
 $134 = $128 + (Math_imul($125, -15137) | 0) >> 11;
 HEAP32[$5 + 8 >> 2] = $131 + $111;
 HEAP32[$5 + 104 >> 2] = $111 - $131;
 HEAP32[$5 + 40 >> 2] = $134 + $113;
 HEAP32[$5 + 72 >> 2] = $113 - $134;
 $148 = Math_imul(HEAP32[$9 + 12 >> 2] | 0, HEAP16[$2 + 6 >> 1] | 0) | 0;
 $154 = Math_imul(HEAP32[$9 + 76 >> 2] | 0, HEAP16[$2 + 38 >> 1] | 0) | 0;
 $156 = $154 + $148 << 2;
 $158 = $148 - $154 << 2;
 $164 = Math_imul(HEAP32[$9 + 44 >> 2] | 0, HEAP16[$2 + 22 >> 1] | 0) | 0;
 $170 = Math_imul(HEAP32[$9 + 108 >> 2] | 0, HEAP16[$2 + 54 >> 1] | 0) | 0;
 $173 = (($170 + $164 | 0) * 4433 | 0) + 1024 | 0;
 $176 = $173 + ($164 * 6270 | 0) >> 11;
 $179 = $173 + (Math_imul($170, -15137) | 0) >> 11;
 HEAP32[$5 + 12 >> 2] = $176 + $156;
 HEAP32[$5 + 108 >> 2] = $156 - $176;
 HEAP32[$5 + 44 >> 2] = $179 + $158;
 HEAP32[$5 + 76 >> 2] = $158 - $179;
 $193 = Math_imul(HEAP32[$9 + 16 >> 2] | 0, HEAP16[$2 + 8 >> 1] | 0) | 0;
 $199 = Math_imul(HEAP32[$9 + 80 >> 2] | 0, HEAP16[$2 + 40 >> 1] | 0) | 0;
 $201 = $199 + $193 << 2;
 $203 = $193 - $199 << 2;
 $209 = Math_imul(HEAP32[$9 + 48 >> 2] | 0, HEAP16[$2 + 24 >> 1] | 0) | 0;
 $215 = Math_imul(HEAP32[$9 + 112 >> 2] | 0, HEAP16[$2 + 56 >> 1] | 0) | 0;
 $218 = (($215 + $209 | 0) * 4433 | 0) + 1024 | 0;
 $221 = $218 + ($209 * 6270 | 0) >> 11;
 $224 = $218 + (Math_imul($215, -15137) | 0) >> 11;
 HEAP32[$5 + 16 >> 2] = $221 + $201;
 HEAP32[$5 + 112 >> 2] = $201 - $221;
 HEAP32[$5 + 48 >> 2] = $224 + $203;
 HEAP32[$5 + 80 >> 2] = $203 - $224;
 $238 = Math_imul(HEAP32[$9 + 20 >> 2] | 0, HEAP16[$2 + 10 >> 1] | 0) | 0;
 $244 = Math_imul(HEAP32[$9 + 84 >> 2] | 0, HEAP16[$2 + 42 >> 1] | 0) | 0;
 $246 = $244 + $238 << 2;
 $248 = $238 - $244 << 2;
 $254 = Math_imul(HEAP32[$9 + 52 >> 2] | 0, HEAP16[$2 + 26 >> 1] | 0) | 0;
 $260 = Math_imul(HEAP32[$9 + 116 >> 2] | 0, HEAP16[$2 + 58 >> 1] | 0) | 0;
 $263 = (($260 + $254 | 0) * 4433 | 0) + 1024 | 0;
 $266 = $263 + ($254 * 6270 | 0) >> 11;
 $269 = $263 + (Math_imul($260, -15137) | 0) >> 11;
 HEAP32[$5 + 20 >> 2] = $266 + $246;
 HEAP32[$5 + 116 >> 2] = $246 - $266;
 HEAP32[$5 + 52 >> 2] = $269 + $248;
 HEAP32[$5 + 84 >> 2] = $248 - $269;
 $283 = Math_imul(HEAP32[$9 + 24 >> 2] | 0, HEAP16[$2 + 12 >> 1] | 0) | 0;
 $289 = Math_imul(HEAP32[$9 + 88 >> 2] | 0, HEAP16[$2 + 44 >> 1] | 0) | 0;
 $291 = $289 + $283 << 2;
 $293 = $283 - $289 << 2;
 $299 = Math_imul(HEAP32[$9 + 56 >> 2] | 0, HEAP16[$2 + 28 >> 1] | 0) | 0;
 $305 = Math_imul(HEAP32[$9 + 120 >> 2] | 0, HEAP16[$2 + 60 >> 1] | 0) | 0;
 $308 = (($305 + $299 | 0) * 4433 | 0) + 1024 | 0;
 $311 = $308 + ($299 * 6270 | 0) >> 11;
 $314 = $308 + (Math_imul($305, -15137) | 0) >> 11;
 HEAP32[$5 + 24 >> 2] = $311 + $291;
 HEAP32[$5 + 120 >> 2] = $291 - $311;
 HEAP32[$5 + 56 >> 2] = $314 + $293;
 HEAP32[$5 + 88 >> 2] = $293 - $314;
 $328 = Math_imul(HEAP32[$9 + 28 >> 2] | 0, HEAP16[$2 + 14 >> 1] | 0) | 0;
 $334 = Math_imul(HEAP32[$9 + 92 >> 2] | 0, HEAP16[$2 + 46 >> 1] | 0) | 0;
 $336 = $334 + $328 << 2;
 $338 = $328 - $334 << 2;
 $344 = Math_imul(HEAP32[$9 + 60 >> 2] | 0, HEAP16[$2 + 30 >> 1] | 0) | 0;
 $350 = Math_imul(HEAP32[$9 + 124 >> 2] | 0, HEAP16[$2 + 62 >> 1] | 0) | 0;
 $353 = (($350 + $344 | 0) * 4433 | 0) + 1024 | 0;
 $356 = $353 + ($344 * 6270 | 0) >> 11;
 $359 = $353 + (Math_imul($350, -15137) | 0) >> 11;
 HEAP32[$5 + 28 >> 2] = $356 + $336;
 HEAP32[$5 + 124 >> 2] = $336 - $356;
 HEAP32[$5 + 60 >> 2] = $359 + $338;
 HEAP32[$5 + 92 >> 2] = $338 - $359;
 $367 = $7 + -384 | 0;
 $$1168171 = $5;
 $$1172 = 0;
 while (1) {
  $370 = (HEAP32[$3 + ($$1172 << 2) >> 2] | 0) + $4 | 0;
  $372 = (HEAP32[$$1168171 >> 2] | 0) + 16400 | 0;
  $374 = HEAP32[$$1168171 + 16 >> 2] | 0;
  $376 = $372 + $374 << 13;
  $378 = $372 - $374 << 13;
  $380 = HEAP32[$$1168171 + 8 >> 2] | 0;
  $382 = HEAP32[$$1168171 + 24 >> 2] | 0;
  $384 = ($382 + $380 | 0) * 4433 | 0;
  $386 = $384 + ($380 * 6270 | 0) | 0;
  $388 = $384 + (Math_imul($382, -15137) | 0) | 0;
  $389 = $386 + $376 | 0;
  $390 = $376 - $386 | 0;
  $391 = $388 + $378 | 0;
  $392 = $378 - $388 | 0;
  $394 = HEAP32[$$1168171 + 28 >> 2] | 0;
  $396 = HEAP32[$$1168171 + 20 >> 2] | 0;
  $398 = HEAP32[$$1168171 + 12 >> 2] | 0;
  $400 = HEAP32[$$1168171 + 4 >> 2] | 0;
  $401 = $398 + $394 | 0;
  $402 = $400 + $396 | 0;
  $404 = ($402 + $401 | 0) * 9633 | 0;
  $407 = $404 + (Math_imul($401, -16069) | 0) | 0;
  $408 = $404 + (Math_imul($402, -3196) | 0) | 0;
  $410 = Math_imul($400 + $394 | 0, -7373) | 0;
  $414 = $410 + ($394 * 2446 | 0) + $407 | 0;
  $416 = $410 + ($400 * 12299 | 0) + $408 | 0;
  $418 = Math_imul($398 + $396 | 0, -20995) | 0;
  $422 = $418 + ($396 * 16819 | 0) + $408 | 0;
  $424 = $418 + ($398 * 25172 | 0) + $407 | 0;
  HEAP8[$370 >> 0] = HEAP8[$367 + (($416 + $389 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$370 + 7 >> 0] = HEAP8[$367 + (($389 - $416 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$370 + 1 >> 0] = HEAP8[$367 + (($424 + $391 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$370 + 6 >> 0] = HEAP8[$367 + (($391 - $424 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$370 + 2 >> 0] = HEAP8[$367 + (($422 + $392 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$370 + 5 >> 0] = HEAP8[$367 + (($392 - $422 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$370 + 3 >> 0] = HEAP8[$367 + (($414 + $390 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$370 + 4 >> 0] = HEAP8[$367 + (($390 - $414 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1172 = $$1172 + 1 | 0;
  if (($$1172 | 0) == 4) break; else $$1168171 = $$1168171 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0, $q_sroa_1_1198$looptemp = 0;
 $n_sroa_0_0_extract_trunc = $a$0;
 $n_sroa_1_4_extract_shift$0 = $a$1;
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
 $d_sroa_0_0_extract_trunc = $b$0;
 $d_sroa_1_4_extract_shift$0 = $b$1;
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
 if (!$n_sroa_1_4_extract_trunc) {
  $4 = ($rem | 0) != 0;
  if (!$d_sroa_1_4_extract_trunc) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  } else {
   if (!$4) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (setTempRet0($_0$1 | 0), $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
 do if ($d_sroa_0_0_extract_trunc) {
  if (!$17) {
   $119 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   if ($119 >>> 0 <= 31) {
    $125 = $119 + 1 | 0;
    $126 = 31 - $119 | 0;
    $130 = $119 - 31 >> 31;
    $sr_1_ph = $125;
    $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
    $q_sroa_0_1_ph = 0;
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
    break;
   }
   if (!$rem) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (setTempRet0($_0$1 | 0), $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  }
  $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
  if ($66 & $d_sroa_0_0_extract_trunc | 0) {
   $88 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   $89 = 64 - $88 | 0;
   $91 = 32 - $88 | 0;
   $92 = $91 >> 31;
   $95 = $88 - 32 | 0;
   $105 = $95 >> 31;
   $sr_1_ph = $88;
   $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
   $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
   $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
   $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
   break;
  }
  if ($rem | 0) {
   HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
   HEAP32[$rem + 4 >> 2] = 0;
  }
  if (($d_sroa_0_0_extract_trunc | 0) == 1) {
   $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$0 = $a$0 | 0 | 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  } else {
   $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
   $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0;
   $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  }
 } else {
  if ($17) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  }
  if (!$n_sroa_0_0_extract_trunc) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = 0;
    HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  }
  $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
  if (!($37 & $d_sroa_1_4_extract_trunc)) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = $a$0 | 0;
    HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
   }
   $_0$1 = 0;
   $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  }
  $51 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
  if ($51 >>> 0 <= 30) {
   $57 = $51 + 1 | 0;
   $58 = 31 - $51 | 0;
   $sr_1_ph = $57;
   $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
   $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
   $q_sroa_0_1_ph = 0;
   $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
   break;
  }
  if (!$rem) {
   $_0$1 = 0;
   $_0$0 = 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  }
  HEAP32[$rem >> 2] = $a$0 | 0;
  HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
  $_0$1 = 0;
  $_0$0 = 0;
  return (setTempRet0($_0$1 | 0), $_0$0) | 0;
 } while (0);
 if (!$sr_1_ph) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = 0;
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 | 0 | 0;
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
  $137$1 = getTempRet0() | 0;
  $q_sroa_1_1198 = $q_sroa_1_1_ph;
  $q_sroa_0_1199 = $q_sroa_0_1_ph;
  $r_sroa_1_1200 = $r_sroa_1_1_ph;
  $r_sroa_0_1201 = $r_sroa_0_1_ph;
  $sr_1202 = $sr_1_ph;
  $carry_0203 = 0;
  do {
   $q_sroa_1_1198$looptemp = $q_sroa_1_1198;
   $q_sroa_1_1198 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
   $q_sroa_0_1199 = $carry_0203 | $q_sroa_0_1199 << 1;
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198$looptemp >>> 31 | 0;
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
   _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
   $150$1 = getTempRet0() | 0;
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
   $carry_0203 = $151$0 & 1;
   $r_sroa_0_1201 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
   $r_sroa_1_1200 = getTempRet0() | 0;
   $sr_1202 = $sr_1202 - 1 | 0;
  } while (($sr_1202 | 0) != 0);
  $q_sroa_1_1_lcssa = $q_sroa_1_1198;
  $q_sroa_0_1_lcssa = $q_sroa_0_1199;
  $r_sroa_1_1_lcssa = $r_sroa_1_1200;
  $r_sroa_0_1_lcssa = $r_sroa_0_1201;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = $carry_0203;
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
 $q_sroa_0_0_insert_ext75$1 = 0;
 if ($rem | 0) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa;
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa;
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
 return (setTempRet0($_0$1 | 0), $_0$0) | 0;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_8KeyframeILi96EEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$047 = 0, $$249 = 0, $$pre = 0, $$pre$phi257Z2D = 0, $$pre$phiZ2D = 0, $$sroa$082$0 = 0, $$sroa$082$0$in = 0, $100 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $34 = 0, $37 = 0, $4 = 0, $42 = 0, $44 = 0, $45 = 0, $46 = 0, $48 = 0, $5 = 0, $51 = 0, $57 = 0, $6 = 0, $70 = 0, $73 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $81 = 0, $84 = 0, $9 = 0, $90 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 $2 = sp + 104 | 0;
 $3 = sp;
 $4 = sp + 72 | 0;
 $5 = sp + 40 | 0;
 $6 = $0 + 12 | 0;
 $8 = $0 + 16 | 0;
 HEAP32[$8 >> 2] = HEAP32[$6 >> 2];
 $9 = $0 + 24 | 0;
 HEAP32[$9 >> 2] = -1;
 $11 = __ZNK6vision18BinaryFeatureStore6pointsEv(__ZNK6vision8KeyframeILi96EE5storeEv($1) | 0) | 0;
 $13 = $0 + 8 | 0;
 $14 = $0 + 636 | 0;
 $15 = $0 + 652 | 0;
 $16 = $2 + 4 | 0;
 $17 = $2 + 8 | 0;
 $18 = $0 + 788 | 0;
 $19 = $4 + 4 | 0;
 $20 = $4 + 8 | 0;
 $21 = $0 + 4 | 0;
 $22 = $0 + 28 | 0;
 $$sroa$082$0$in = $0 + 80 | 0;
 while (1) {
  $$sroa$082$0 = HEAP32[$$sroa$082$0$in >> 2] | 0;
  if (!$$sroa$082$0) break;
  __ZN6vision11ScopedTimerC2EPKc($2, 35008);
  do if (__ZN6vision11ScopedTimercvbEv($2) | 0) {
   $26 = (HEAP8[$13 >> 0] | 0) == 0;
   $27 = __ZNK6vision8KeyframeILi96EE5storeEv($1) | 0;
   $28 = $$sroa$082$0;
   $29 = $28 + 12 | 0;
   $31 = __ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$29 >> 2] | 0) | 0;
   if ($26) {
    $37 = __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_($14, $27, $31) | 0;
    if ($37 >>> 0 >= (HEAP32[$0 >> 2] | 0) >>> 0) {
     $$pre$phi257Z2D = $29;
     $$pre$phiZ2D = $28;
     label = 9;
     break;
    }
   } else {
    $34 = __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_RKNS_28BinaryHierarchicalClusteringILi96EEE($14, $27, $31, __ZNK6vision8KeyframeILi96EE5indexEv(HEAP32[$29 >> 2] | 0) | 0) | 0;
    if ($34 >>> 0 >= (HEAP32[$0 >> 2] | 0) >>> 0) {
     $$pre$phi257Z2D = $29;
     $$pre$phiZ2D = $28;
     label = 9;
     break;
    }
   }
   __ZN6vision11ScopedTimerD2Ev($2);
  } else {
   $$pre = $$sroa$082$0;
   $$pre$phi257Z2D = $$pre + 12 | 0;
   $$pre$phiZ2D = $$pre;
   label = 9;
  } while (0);
  do if ((label | 0) == 9) {
   label = 0;
   __ZN6vision11ScopedTimerD2Ev($2);
   $42 = __ZN6vision18BinaryFeatureStore6pointsEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0) | 0;
   __ZN6vision11ScopedTimerC2EPKc($2, 35025);
   if (__ZN6vision11ScopedTimercvbEv($2) | 0) {
    $44 = __ZNK6vision20BinaryFeatureMatcherILi96EE7matchesEv($14) | 0;
    $45 = __ZNK6vision8KeyframeILi96EE5widthEv($1) | 0;
    $46 = __ZNK6vision8KeyframeILi96EE6heightEv($1) | 0;
    $48 = __ZNK6vision8KeyframeILi96EE5widthEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0;
    $51 = __ZN6vision19FindHoughSimilarityERNS_21HoughSimilarityVotingERKNSt3__26vectorINS_12FeaturePointENS2_9allocatorIS4_EEEES9_RKNS3_INS_7match_tENS5_ISA_EEEEiiii($15, $11, $42, $44, $45, $46, $48, __ZNK6vision8KeyframeILi96EE6heightEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0) | 0;
    if (($51 | 0) < 0) {
     __ZN6vision11ScopedTimerD2Ev($2);
     break;
    } else $$047 = $51;
   } else $$047 = -1;
   __ZN6vision11ScopedTimerD2Ev($2);
   HEAP32[$2 >> 2] = 0;
   HEAP32[$16 >> 2] = 0;
   HEAP32[$17 >> 2] = 0;
   __ZN6vision11ScopedTimerC2EPKc($3, 35042);
   if (__ZN6vision11ScopedTimercvbEv($3) | 0) __ZN6vision16FindHoughMatchesERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEERKNS_21HoughSimilarityVotingERKS5_if($2, $15, __ZNK6vision20BinaryFeatureMatcherILi96EE7matchesEv($14) | 0, $$047, 1.0);
   __ZN6vision11ScopedTimerD2Ev($3);
   __ZN6vision11ScopedTimerC2EPKc($4, 35065);
   if (__ZN6vision11ScopedTimercvbEv($4) | 0 ? ($57 = __ZNK6vision8KeyframeILi96EE5widthEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0, !(__ZN6vision18EstimateHomographyEPfRKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEES8_RKNS2_INS_7match_tENS4_IS9_EEEERNS_16RobustHomographyIfEEii($3, $11, $42, $2, $18, $57, __ZNK6vision8KeyframeILi96EE6heightEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0) | 0)) : 0) __ZN6vision11ScopedTimerD2Ev($4); else {
    __ZN6vision11ScopedTimerD2Ev($4);
    HEAP32[$4 >> 2] = 0;
    HEAP32[$19 >> 2] = 0;
    HEAP32[$20 >> 2] = 0;
    __ZN6vision11ScopedTimerC2EPKc($5, 35089);
    if (__ZN6vision11ScopedTimercvbEv($5) | 0 ? (__ZN6vision11FindInliersERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEEPKfRKNS1_INS_12FeaturePointENS3_IS9_EEEESD_RKS5_f($4, $3, $11, $42, $2, +HEAPF32[$21 >> 2]), (HEAP32[$19 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) >> 3 >>> 0 < (HEAP32[$0 >> 2] | 0) >>> 0) : 0) __ZN6vision11ScopedTimerD2Ev($5); else label = 20;
    do if ((label | 0) == 20) {
     label = 0;
     __ZN6vision11ScopedTimerD2Ev($5);
     __ZN6vision11ScopedTimerC2EPKc($5, 35106);
     if (__ZN6vision11ScopedTimercvbEv($5) | 0 ? ($70 = __ZNK6vision8KeyframeILi96EE5storeEv($1) | 0, $73 = __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_PKff($14, $70, __ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0, $3, 10.0) | 0, $73 >>> 0 < (HEAP32[$0 >> 2] | 0) >>> 0) : 0) {
      __ZN6vision11ScopedTimerD2Ev($5);
      break;
     }
     __ZN6vision11ScopedTimerD2Ev($5);
     __ZN6vision11ScopedTimerC2EPKc($5, 35123);
     if (__ZN6vision11ScopedTimercvbEv($5) | 0) {
      $77 = __ZNK6vision20BinaryFeatureMatcherILi96EE7matchesEv($14) | 0;
      $78 = __ZNK6vision8KeyframeILi96EE5widthEv($1) | 0;
      $79 = __ZNK6vision8KeyframeILi96EE6heightEv($1) | 0;
      $81 = __ZNK6vision8KeyframeILi96EE5widthEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0;
      $84 = __ZN6vision19FindHoughSimilarityERNS_21HoughSimilarityVotingERKNSt3__26vectorINS_12FeaturePointENS2_9allocatorIS4_EEEES9_RKNS3_INS_7match_tENS5_ISA_EEEEiiii($15, $11, $42, $77, $78, $79, $81, __ZNK6vision8KeyframeILi96EE6heightEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0) | 0;
      if (($84 | 0) < 0) {
       __ZN6vision11ScopedTimerD2Ev($5);
       break;
      } else $$249 = $84;
     } else $$249 = $$047;
     __ZN6vision11ScopedTimerD2Ev($5);
     __ZN6vision11ScopedTimerC2EPKc($5, 35140);
     if (__ZN6vision11ScopedTimercvbEv($5) | 0) __ZN6vision16FindHoughMatchesERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEERKNS_21HoughSimilarityVotingERKS5_if($2, $15, __ZNK6vision20BinaryFeatureMatcherILi96EE7matchesEv($14) | 0, $$249, 1.0);
     __ZN6vision11ScopedTimerD2Ev($5);
     __ZN6vision11ScopedTimerC2EPKc($5, 35163);
     if (__ZN6vision11ScopedTimercvbEv($5) | 0 ? ($90 = __ZNK6vision8KeyframeILi96EE5widthEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0, !(__ZN6vision18EstimateHomographyEPfRKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEES8_RKNS2_INS_7match_tENS4_IS9_EEEERNS_16RobustHomographyIfEEii($3, $11, $42, $2, $18, $90, __ZNK6vision8KeyframeILi96EE6heightEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0) | 0)) : 0) {
      __ZN6vision11ScopedTimerD2Ev($5);
      break;
     }
     __ZN6vision11ScopedTimerD2Ev($5);
     HEAP32[$19 >> 2] = HEAP32[$4 >> 2];
     __ZN6vision11ScopedTimerC2EPKc($5, 35187);
     if (__ZN6vision11ScopedTimercvbEv($5) | 0) __ZN6vision11FindInliersERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEEPKfRKNS1_INS_12FeaturePointENS3_IS9_EEEESD_RKS5_f($4, $3, $11, $42, $2, +HEAPF32[$21 >> 2]);
     __ZN6vision11ScopedTimerD2Ev($5);
     $100 = (HEAP32[$19 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) >> 3;
     if ($100 >>> 0 >= (HEAP32[$0 >> 2] | 0) >>> 0 ? $100 >>> 0 > (HEAP32[$8 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) >> 3 >>> 0 : 0) {
      __ZN6vision11CopyVector9IfEEvPT_PKS1_($22, $3);
      __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE4swapERS5_($6, $4);
      HEAP32[$9 >> 2] = HEAP32[$$pre$phiZ2D + 8 >> 2];
     }
    } while (0);
    __ZNSt3__213__vector_baseIN6vision7match_tENS_9allocatorIS2_EEED2Ev($4);
   }
   __ZNSt3__213__vector_baseIN6vision7match_tENS_9allocatorIS2_EEED2Ev($2);
  } while (0);
  $$sroa$082$0$in = $$sroa$082$0;
 }
 STACKTOP = sp;
 return (HEAP32[$9 >> 2] | 0) > -1 | 0;
}

function _decode_mcu($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0148177 = 0, $$0149$lcssa = 0, $$0149179 = 0, $$0155 = 0, $$0157176 = 0, $$0162200 = 0, $$035$i = 0, $$1 = 0, $$1156$lcssa = 0, $$1158 = 0, $$2159$lcssa = 0, $$2159182 = 0, $$3152$lcssa = 0, $$3152195 = 0, $$3160189 = 0, $$3190 = 0, $$4 = 0, $$4161 = 0, $$lcssa = 0, $$sink = 0, $113 = 0, $116 = 0, $117 = 0, $120 = 0, $122 = 0, $128 = 0, $130 = 0, $132 = 0, $136 = 0, $137 = 0, $138 = 0, $141 = 0, $144 = 0, $150 = 0, $151 = 0, $155 = 0, $156 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $166 = 0, $172 = 0, $175 = 0, $177 = 0, $181 = 0, $184 = 0, $185 = 0, $188 = 0, $19 = 0, $190 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $4 = 0, $54 = 0, $56 = 0, $57 = 0, $61 = 0, $62 = 0, $65 = 0, $66 = 0, $68 = 0, $7 = 0, $70 = 0, $72 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $83 = 0, $85 = 0, $86 = 0, $89 = 0, $92 = 0, $94 = 0, $98 = 0, $spec$select = 0, $spec$select164 = 0, dest = 0, label = 0, stop = 0;
 $3 = HEAP32[$0 + 468 >> 2] | 0;
 $4 = $0 + 280 | 0;
 if (HEAP32[$4 >> 2] | 0) {
  $7 = $3 + 56 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  if (!$8) {
   if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 + 464 >> 2] | 0) + 8 >> 2] & 127]($0) | 0)) {
    $16 = HEAP32[$0 >> 2] | 0;
    HEAP32[$16 + 20 >> 2] = 25;
    FUNCTION_TABLE_vi[HEAP32[$16 >> 2] & 255]($0);
   }
   $19 = $0 + 340 | 0;
   if ((HEAP32[$19 >> 2] | 0) > 0) {
    $22 = $0 + 224 | 0;
    $23 = $0 + 412 | 0;
    $24 = $0 + 436 | 0;
    $25 = $0 + 420 | 0;
    $$035$i = 0;
    do {
     $27 = HEAP32[$0 + 344 + ($$035$i << 2) >> 2] | 0;
     if (HEAP32[$22 >> 2] | 0) if (!(HEAP32[$23 >> 2] | 0)) {
      if (!(HEAP32[$25 >> 2] | 0)) label = 10;
     } else label = 13; else label = 10;
     do if ((label | 0) == 10) {
      label = 0;
      dest = HEAP32[$3 + 60 + (HEAP32[$27 + 20 >> 2] << 2) >> 2] | 0;
      stop = dest + 64 | 0;
      do {
       HEAP8[dest >> 0] = 0;
       dest = dest + 1 | 0;
      } while ((dest | 0) < (stop | 0));
      HEAP32[$3 + 24 + ($$035$i << 2) >> 2] = 0;
      HEAP32[$3 + 40 + ($$035$i << 2) >> 2] = 0;
      if (!(HEAP32[$22 >> 2] | 0)) if (!(HEAP32[$24 >> 2] | 0)) break; else {
       label = 13;
       break;
      } else if (!(HEAP32[$23 >> 2] | 0)) break; else {
       label = 13;
       break;
      }
     } while (0);
     if ((label | 0) == 13) {
      label = 0;
      _memset(HEAP32[$3 + 124 + (HEAP32[$27 + 24 >> 2] << 2) >> 2] | 0, 0, 256) | 0;
     }
     $$035$i = $$035$i + 1 | 0;
    } while (($$035$i | 0) < (HEAP32[$19 >> 2] | 0));
   }
   HEAP32[$3 + 12 >> 2] = 0;
   HEAP32[$3 + 16 >> 2] = 0;
   HEAP32[$3 + 20 >> 2] = -16;
   $54 = HEAP32[$4 >> 2] | 0;
   HEAP32[$7 >> 2] = $54;
   $56 = $54;
  } else $56 = $8;
  HEAP32[$7 >> 2] = $56 + -1;
 }
 $57 = $3 + 20 | 0;
 if ((HEAP32[$57 >> 2] | 0) == -1) return 1;
 $61 = HEAP32[$0 + 432 >> 2] | 0;
 $62 = $0 + 368 | 0;
 if ((HEAP32[$62 >> 2] | 0) <= 0) return 1;
 $65 = $0 + 436 | 0;
 $66 = $3 + 188 | 0;
 $$0162200 = 0;
 L32 : while (1) {
  $68 = HEAP32[$1 + ($$0162200 << 2) >> 2] | 0;
  $70 = HEAP32[$0 + 372 + ($$0162200 << 2) >> 2] | 0;
  $72 = HEAP32[$0 + 344 + ($70 << 2) >> 2] | 0;
  $74 = HEAP32[$72 + 20 >> 2] | 0;
  $75 = $3 + 60 + ($74 << 2) | 0;
  $77 = $3 + 40 + ($70 << 2) | 0;
  $79 = (HEAP32[$75 >> 2] | 0) + (HEAP32[$77 >> 2] | 0) | 0;
  if (!(_arith_decode($0, $79) | 0)) {
   HEAP32[$77 >> 2] = 0;
   $132 = HEAP32[$3 + 24 + ($70 << 2) >> 2] | 0;
  } else {
   $83 = _arith_decode($0, $79 + 1 | 0) | 0;
   $85 = $79 + 2 + $83 | 0;
   $86 = _arith_decode($0, $85) | 0;
   if ($86) {
    $89 = (HEAP32[$75 >> 2] | 0) + 20 | 0;
    if (!(_arith_decode($0, $89) | 0)) {
     $$1 = $86;
     $$1158 = $89;
    } else {
     $$0148177 = $86;
     $$0157176 = $89;
     while (1) {
      $92 = $$0148177 << 1;
      if (($92 | 0) == 32768) {
       label = 26;
       break L32;
      }
      $98 = $$0157176 + 1 | 0;
      if (!(_arith_decode($0, $98) | 0)) {
       $$1 = $92;
       $$1158 = $98;
       break;
      } else {
       $$0148177 = $92;
       $$0157176 = $98;
      }
     }
    }
   } else {
    $$1 = 0;
    $$1158 = $85;
   }
   do if (($$1 | 0) >= (1 << (HEAPU8[$0 + 232 + $74 >> 0] | 0) >> 1 | 0)) {
    $113 = $83 << 2;
    if (($$1 | 0) > (1 << (HEAPU8[$0 + 248 + $74 >> 0] | 0) >> 1 | 0)) {
     $$sink = $113 + 12 | 0;
     break;
    } else {
     $$sink = $113 + 4 | 0;
     break;
    }
   } else $$sink = 0; while (0);
   HEAP32[$77 >> 2] = $$sink;
   $116 = $$1158 + 14 | 0;
   $117 = $$1 >> 1;
   if (!$117) $$0149$lcssa = $$1; else {
    $$0149179 = $$1;
    $122 = $117;
    while (1) {
     $120 = (_arith_decode($0, $116) | 0) == 0;
     $spec$select = ($120 ? 0 : $122) | $$0149179;
     $122 = $122 >> 1;
     if (!$122) {
      $$0149$lcssa = $spec$select;
      break;
     } else $$0149179 = $spec$select;
    }
   }
   $128 = $3 + 24 + ($70 << 2) | 0;
   $130 = (HEAP32[$128 >> 2] | 0) + (($83 | 0) == 0 ? $$0149$lcssa + 1 | 0 : ~$$0149$lcssa) | 0;
   HEAP32[$128 >> 2] = $130;
   $132 = $130;
  }
  HEAP16[$68 >> 1] = $132;
  L56 : do if (HEAP32[$65 >> 2] | 0) {
   $136 = HEAP32[$72 + 24 >> 2] | 0;
   $137 = $3 + 124 + ($136 << 2) | 0;
   $138 = $0 + 264 + $136 | 0;
   $$0155 = 0;
   while (1) {
    $141 = (HEAP32[$137 >> 2] | 0) + ($$0155 * 3 | 0) | 0;
    if (_arith_decode($0, $141) | 0) break L56;
    $144 = $$0155 + 1 | 0;
    if (!(_arith_decode($0, $141 + 1 | 0) | 0)) {
     $$2159182 = $141;
     $150 = $144;
     while (1) {
      if (($150 | 0) >= (HEAP32[$65 >> 2] | 0)) {
       label = 42;
       break L32;
      }
      $155 = $$2159182 + 3 | 0;
      $156 = $150 + 1 | 0;
      if (!(_arith_decode($0, $$2159182 + 4 | 0) | 0)) {
       $$2159182 = $155;
       $150 = $156;
      } else {
       $$1156$lcssa = $150;
       $$2159$lcssa = $155;
       $$lcssa = $156;
       break;
      }
     }
    } else {
     $$1156$lcssa = $$0155;
     $$2159$lcssa = $141;
     $$lcssa = $144;
    }
    $160 = _arith_decode($0, $66) | 0;
    $161 = $$2159$lcssa + 2 | 0;
    $162 = _arith_decode($0, $161) | 0;
    if ($162) {
     if (_arith_decode($0, $161) | 0) {
      $166 = $162 << 1;
      $172 = (HEAP32[$137 >> 2] | 0) + (($$1156$lcssa | 0) < (HEAPU8[$138 >> 0] | 0 | 0) ? 189 : 217) | 0;
      if (!(_arith_decode($0, $172) | 0)) {
       $$4 = $166;
       $$4161 = $172;
      } else {
       $$3160189 = $172;
       $$3190 = $166;
       while (1) {
        $175 = $$3190 << 1;
        if (($175 | 0) == 32768) {
         label = 49;
         break L32;
        }
        $181 = $$3160189 + 1 | 0;
        if (!(_arith_decode($0, $181) | 0)) {
         $$4 = $175;
         $$4161 = $181;
         break;
        } else {
         $$3160189 = $181;
         $$3190 = $175;
        }
       }
      }
     } else {
      $$4 = $162;
      $$4161 = $161;
     }
     $184 = $$4161 + 14 | 0;
     $185 = $$4 >> 1;
     if (!$185) $$3152$lcssa = $$4; else {
      $$3152195 = $$4;
      $190 = $185;
      while (1) {
       $188 = (_arith_decode($0, $184) | 0) == 0;
       $spec$select164 = ($188 ? 0 : $190) | $$3152195;
       $190 = $190 >> 1;
       if (!$190) {
        $$3152$lcssa = $spec$select164;
        break;
       } else $$3152195 = $spec$select164;
      }
     }
    } else $$3152$lcssa = 0;
    HEAP16[$68 + (HEAP32[$61 + ($$lcssa << 2) >> 2] << 1) >> 1] = ($160 | 0) == 0 ? $$3152$lcssa + 1 | 0 : $$3152$lcssa ^ 65535;
    if (($$lcssa | 0) < (HEAP32[$65 >> 2] | 0)) $$0155 = $$lcssa; else break;
   }
  } while (0);
  $$0162200 = $$0162200 + 1 | 0;
  if (($$0162200 | 0) >= (HEAP32[$62 >> 2] | 0)) {
   label = 56;
   break;
  }
 }
 if ((label | 0) == 26) {
  $94 = HEAP32[$0 >> 2] | 0;
  HEAP32[$94 + 20 >> 2] = 117;
  FUNCTION_TABLE_vii[HEAP32[$94 + 4 >> 2] & 255]($0, -1);
  HEAP32[$57 >> 2] = -1;
  return 1;
 } else if ((label | 0) == 42) {
  $151 = HEAP32[$0 >> 2] | 0;
  HEAP32[$151 + 20 >> 2] = 117;
  FUNCTION_TABLE_vii[HEAP32[$151 + 4 >> 2] & 255]($0, -1);
  HEAP32[$57 >> 2] = -1;
  return 1;
 } else if ((label | 0) == 49) {
  $177 = HEAP32[$0 >> 2] | 0;
  HEAP32[$177 + 20 >> 2] = 117;
  FUNCTION_TABLE_vii[HEAP32[$177 + 4 >> 2] & 255]($0, -1);
  HEAP32[$57 >> 2] = -1;
  return 1;
 } else if ((label | 0) == 56) return 1;
 return 0;
}

function _jpeg_idct_16x16($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0403411 = 0, $$0405410 = 0, $$0406409 = 0, $$0412 = 0, $$1404407 = 0, $$1408 = 0, $101 = 0, $103 = 0, $109 = 0, $114 = 0, $115 = 0, $118 = 0, $122 = 0, $128 = 0, $130 = 0, $131 = 0, $132 = 0, $134 = 0, $135 = 0, $136 = 0, $15 = 0, $188 = 0, $191 = 0, $194 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $202 = 0, $204 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $211 = 0, $213 = 0, $215 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $227 = 0, $229 = 0, $23 = 0, $231 = 0, $233 = 0, $234 = 0, $236 = 0, $237 = 0, $239 = 0, $24 = 0, $241 = 0, $242 = 0, $244 = 0, $248 = 0, $25 = 0, $252 = 0, $254 = 0, $26 = 0, $260 = 0, $265 = 0, $266 = 0, $269 = 0, $27 = 0, $273 = 0, $279 = 0, $281 = 0, $282 = 0, $283 = 0, $285 = 0, $286 = 0, $287 = 0, $33 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $64 = 0, $7 = 0, $70 = 0, $76 = 0, $82 = 0, $83 = 0, $85 = 0, $86 = 0, $88 = 0, $90 = 0, $91 = 0, $93 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0403411 = $5;
 $$0405410 = HEAP32[$1 + 84 >> 2] | 0;
 $$0406409 = $2;
 $$0412 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0406409 >> 1] << 13, HEAP32[$$0405410 >> 2] | 0) | 0 | 1024;
  $21 = Math_imul(HEAP32[$$0405410 + 128 >> 2] | 0, HEAP16[$$0406409 + 64 >> 1] | 0) | 0;
  $22 = $21 * 10703 | 0;
  $23 = $21 * 4433 | 0;
  $24 = $22 + $15 | 0;
  $25 = $15 - $22 | 0;
  $26 = $23 + $15 | 0;
  $27 = $15 - $23 | 0;
  $33 = Math_imul(HEAP32[$$0405410 + 64 >> 2] | 0, HEAP16[$$0406409 + 32 >> 1] | 0) | 0;
  $39 = Math_imul(HEAP32[$$0405410 + 192 >> 2] | 0, HEAP16[$$0406409 + 96 >> 1] | 0) | 0;
  $40 = $33 - $39 | 0;
  $41 = $40 * 2260 | 0;
  $42 = $40 * 11363 | 0;
  $44 = $42 + ($39 * 20995 | 0) | 0;
  $46 = $41 + ($33 * 7373 | 0) | 0;
  $48 = $42 + (Math_imul($33, -4926) | 0) | 0;
  $50 = $41 + (Math_imul($39, -4176) | 0) | 0;
  $51 = $44 + $24 | 0;
  $52 = $24 - $44 | 0;
  $53 = $46 + $26 | 0;
  $54 = $26 - $46 | 0;
  $55 = $48 + $27 | 0;
  $56 = $27 - $48 | 0;
  $57 = $50 + $25 | 0;
  $58 = $25 - $50 | 0;
  $64 = Math_imul(HEAP32[$$0405410 + 32 >> 2] | 0, HEAP16[$$0406409 + 16 >> 1] | 0) | 0;
  $70 = Math_imul(HEAP32[$$0405410 + 96 >> 2] | 0, HEAP16[$$0406409 + 48 >> 1] | 0) | 0;
  $76 = Math_imul(HEAP32[$$0405410 + 160 >> 2] | 0, HEAP16[$$0406409 + 80 >> 1] | 0) | 0;
  $82 = Math_imul(HEAP32[$$0405410 + 224 >> 2] | 0, HEAP16[$$0406409 + 112 >> 1] | 0) | 0;
  $83 = $76 + $64 | 0;
  $85 = ($70 + $64 | 0) * 11086 | 0;
  $86 = $83 * 10217 | 0;
  $88 = ($82 + $64 | 0) * 8956 | 0;
  $90 = ($64 - $82 | 0) * 7350 | 0;
  $91 = $83 * 5461 | 0;
  $93 = ($64 - $70 | 0) * 3363 | 0;
  $97 = $85 + (Math_imul($64, -18730) | 0) + $86 + $88 | 0;
  $101 = $93 + (Math_imul($64, -15038) | 0) + $91 + $90 | 0;
  $103 = ($76 + $70 | 0) * 1136 | 0;
  $109 = ($76 - $70 | 0) * 11529 | 0;
  $114 = $82 + $70 | 0;
  $115 = Math_imul($114, -5461) | 0;
  $118 = $85 + ($70 * 589 | 0) + $103 + $115 | 0;
  $122 = Math_imul($114, -10217) | 0;
  $128 = $93 + ($70 * 16154 | 0) + $109 + $122 | 0;
  $130 = Math_imul($82 + $76 | 0, -11086) | 0;
  $131 = $103 + (Math_imul($76, -9222) | 0) + $86 + $130 | 0;
  $132 = $115 + ($82 * 8728 | 0) + $88 + $130 | 0;
  $134 = ($82 - $76 | 0) * 3363 | 0;
  $135 = $122 + ($82 * 25733 | 0) + $90 + $134 | 0;
  $136 = $109 + (Math_imul($76, -6278) | 0) + $91 + $134 | 0;
  HEAP32[$$0403411 >> 2] = $97 + $51 >> 11;
  HEAP32[$$0403411 + 480 >> 2] = $51 - $97 >> 11;
  HEAP32[$$0403411 + 32 >> 2] = $118 + $53 >> 11;
  HEAP32[$$0403411 + 448 >> 2] = $53 - $118 >> 11;
  HEAP32[$$0403411 + 64 >> 2] = $131 + $55 >> 11;
  HEAP32[$$0403411 + 416 >> 2] = $55 - $131 >> 11;
  HEAP32[$$0403411 + 96 >> 2] = $132 + $57 >> 11;
  HEAP32[$$0403411 + 384 >> 2] = $57 - $132 >> 11;
  HEAP32[$$0403411 + 128 >> 2] = $135 + $58 >> 11;
  HEAP32[$$0403411 + 352 >> 2] = $58 - $135 >> 11;
  HEAP32[$$0403411 + 160 >> 2] = $136 + $56 >> 11;
  HEAP32[$$0403411 + 320 >> 2] = $56 - $136 >> 11;
  HEAP32[$$0403411 + 192 >> 2] = $128 + $54 >> 11;
  HEAP32[$$0403411 + 288 >> 2] = $54 - $128 >> 11;
  HEAP32[$$0403411 + 224 >> 2] = $101 + $52 >> 11;
  HEAP32[$$0403411 + 256 >> 2] = $52 - $101 >> 11;
  $$0412 = $$0412 + 1 | 0;
  if (($$0412 | 0) == 8) break; else {
   $$0403411 = $$0403411 + 4 | 0;
   $$0405410 = $$0405410 + 4 | 0;
   $$0406409 = $$0406409 + 2 | 0;
  }
 }
 $188 = $7 + -384 | 0;
 $$1404407 = $5;
 $$1408 = 0;
 while (1) {
  $191 = (HEAP32[$3 + ($$1408 << 2) >> 2] | 0) + $4 | 0;
  $194 = (HEAP32[$$1404407 >> 2] << 13) + 134348800 | 0;
  $196 = HEAP32[$$1404407 + 16 >> 2] | 0;
  $197 = $196 * 10703 | 0;
  $198 = $196 * 4433 | 0;
  $199 = $194 + $197 | 0;
  $200 = $194 - $197 | 0;
  $201 = $194 + $198 | 0;
  $202 = $194 - $198 | 0;
  $204 = HEAP32[$$1404407 + 8 >> 2] | 0;
  $206 = HEAP32[$$1404407 + 24 >> 2] | 0;
  $207 = $204 - $206 | 0;
  $208 = $207 * 2260 | 0;
  $209 = $207 * 11363 | 0;
  $211 = $209 + ($206 * 20995 | 0) | 0;
  $213 = $208 + ($204 * 7373 | 0) | 0;
  $215 = $209 + (Math_imul($204, -4926) | 0) | 0;
  $217 = $208 + (Math_imul($206, -4176) | 0) | 0;
  $218 = $211 + $199 | 0;
  $219 = $199 - $211 | 0;
  $220 = $213 + $201 | 0;
  $221 = $201 - $213 | 0;
  $222 = $215 + $202 | 0;
  $223 = $202 - $215 | 0;
  $224 = $217 + $200 | 0;
  $225 = $200 - $217 | 0;
  $227 = HEAP32[$$1404407 + 4 >> 2] | 0;
  $229 = HEAP32[$$1404407 + 12 >> 2] | 0;
  $231 = HEAP32[$$1404407 + 20 >> 2] | 0;
  $233 = HEAP32[$$1404407 + 28 >> 2] | 0;
  $234 = $231 + $227 | 0;
  $236 = ($229 + $227 | 0) * 11086 | 0;
  $237 = $234 * 10217 | 0;
  $239 = ($233 + $227 | 0) * 8956 | 0;
  $241 = ($227 - $233 | 0) * 7350 | 0;
  $242 = $234 * 5461 | 0;
  $244 = ($227 - $229 | 0) * 3363 | 0;
  $248 = $236 + (Math_imul($227, -18730) | 0) + $237 + $239 | 0;
  $252 = $244 + (Math_imul($227, -15038) | 0) + $242 + $241 | 0;
  $254 = ($231 + $229 | 0) * 1136 | 0;
  $260 = ($231 - $229 | 0) * 11529 | 0;
  $265 = $233 + $229 | 0;
  $266 = Math_imul($265, -5461) | 0;
  $269 = $236 + ($229 * 589 | 0) + $254 + $266 | 0;
  $273 = Math_imul($265, -10217) | 0;
  $279 = $244 + ($229 * 16154 | 0) + $260 + $273 | 0;
  $281 = Math_imul($233 + $231 | 0, -11086) | 0;
  $282 = $254 + (Math_imul($231, -9222) | 0) + $237 + $281 | 0;
  $283 = $266 + ($233 * 8728 | 0) + $239 + $281 | 0;
  $285 = ($233 - $231 | 0) * 3363 | 0;
  $286 = $273 + ($233 * 25733 | 0) + $241 + $285 | 0;
  $287 = $260 + (Math_imul($231, -6278) | 0) + $242 + $285 | 0;
  HEAP8[$191 >> 0] = HEAP8[$188 + (($248 + $218 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 15 >> 0] = HEAP8[$188 + (($218 - $248 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 1 >> 0] = HEAP8[$188 + (($269 + $220 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 14 >> 0] = HEAP8[$188 + (($220 - $269 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 2 >> 0] = HEAP8[$188 + (($282 + $222 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 13 >> 0] = HEAP8[$188 + (($222 - $282 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 3 >> 0] = HEAP8[$188 + (($283 + $224 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 12 >> 0] = HEAP8[$188 + (($224 - $283 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 4 >> 0] = HEAP8[$188 + (($286 + $225 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 11 >> 0] = HEAP8[$188 + (($225 - $286 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 5 >> 0] = HEAP8[$188 + (($287 + $223 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 10 >> 0] = HEAP8[$188 + (($223 - $287 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 6 >> 0] = HEAP8[$188 + (($279 + $221 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 9 >> 0] = HEAP8[$188 + (($221 - $279 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 7 >> 0] = HEAP8[$188 + (($252 + $219 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 8 >> 0] = HEAP8[$188 + (($219 - $252 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1408 = $$1408 + 1 | 0;
  if (($$1408 | 0) == 16) break; else $$1404407 = $$1404407 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function _finish_pass1($0) {
 $0 = $0 | 0;
 var $$0$lcssa$i$i = 0, $$0$lcssa$i34$i = 0, $$0124$i$i = 0, $$01623$i$i$i = 0, $$01724$i$i$i = 0, $$01822$i$i$i = 0, $$01921$i$i$i = 0, $$01923$i$i$i = 0, $$02022$i$i$i = 0, $$024$i$i$i = 0, $$025$i$i$i = 0, $$036$i = 0, $$05$i$i = 0, $$072$i$i = 0, $$083$lcssa$i$i = 0, $$083123$i$i = 0, $$087$lcssa$i$i = 0, $$087122$i$i = 0, $$091$lcssa$i$i = 0, $$091121$i$i = 0, $$095100$i$i = 0, $$096120$i$i = 0, $$097108$i$i = 0, $$09899$i$i = 0, $$1$i$i$i = 0, $$1112$i$i = 0, $$118$i$i$i = 0, $$184111$i$i = 0, $$188110$i$i = 0, $$192109$i$i = 0, $$2104$i$i = 0, $$285103$i$i = 0, $$289102$i$i = 0, $$293101$i$i = 0, $$3$i$i = 0, $$386$i$i = 0, $$390$i$i = 0, $$394$i$i = 0, $$sink11 = 0, $$sink12 = 0, $1 = 0, $100 = 0, $102 = 0, $103 = 0, $12 = 0, $120 = 0, $144 = 0, $2 = 0, $22 = 0, $26 = 0, $30 = 0, $31 = 0, $35 = 0, $36 = 0, $39 = 0, $42 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $60 = 0, $61 = 0, $64 = 0, $68 = 0, $7 = 0, $70 = 0, $72 = 0, $74 = 0, $78 = 0, $80 = 0, $82 = 0, $84 = 0, $86 = 0, $88 = 0, $90 = 0, $95 = 0, $97 = 0, $spec$select20$i$i$i = 0, label = 0;
 $1 = $0 + 484 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $5 = $0 + 136 | 0;
 HEAP32[$5 >> 2] = HEAP32[$2 + 16 >> 2];
 $7 = HEAP32[$2 + 20 >> 2] | 0;
 $12 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, $7 << 5) | 0;
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 31;
 HEAP32[$12 + 8 >> 2] = 0;
 HEAP32[$12 + 12 >> 2] = 63;
 HEAP32[$12 + 16 >> 2] = 0;
 HEAP32[$12 + 20 >> 2] = 31;
 _update_box($0, $12);
 L1 : do if (($7 | 0) > 1) {
  $$05$i$i = 1;
  while (1) {
   if (($$05$i$i << 1 | 0) > ($7 | 0)) {
    $$01623$i$i$i = 0;
    $$01822$i$i$i = 0;
    $$01921$i$i$i = $12;
    $$024$i$i$i = 0;
    while (1) {
     $30 = HEAP32[$$01921$i$i$i + 24 >> 2] | 0;
     $31 = ($30 | 0) > ($$01623$i$i$i | 0);
     $spec$select20$i$i$i = $31 ? $$01921$i$i$i : $$024$i$i$i;
     $$01822$i$i$i = $$01822$i$i$i + 1 | 0;
     if (($$01822$i$i$i | 0) == ($$05$i$i | 0)) {
      $$072$i$i = $spec$select20$i$i$i;
      break;
     } else {
      $$01623$i$i$i = $31 ? $30 : $$01623$i$i$i;
      $$01921$i$i$i = $$01921$i$i$i + 32 | 0;
      $$024$i$i$i = $spec$select20$i$i$i;
     }
    }
   } else {
    $$01724$i$i$i = 0;
    $$01923$i$i$i = 0;
    $$02022$i$i$i = $12;
    $$025$i$i$i = 0;
    while (1) {
     $22 = HEAP32[$$02022$i$i$i + 28 >> 2] | 0;
     if (($22 | 0) > ($$01724$i$i$i | 0)) {
      $26 = (HEAP32[$$02022$i$i$i + 24 >> 2] | 0) > 0;
      $$1$i$i$i = $26 ? $$02022$i$i$i : $$025$i$i$i;
      $$118$i$i$i = $26 ? $22 : $$01724$i$i$i;
     } else {
      $$1$i$i$i = $$025$i$i$i;
      $$118$i$i$i = $$01724$i$i$i;
     }
     $$01923$i$i$i = $$01923$i$i$i + 1 | 0;
     if (($$01923$i$i$i | 0) == ($$05$i$i | 0)) {
      $$072$i$i = $$1$i$i$i;
      break;
     } else {
      $$01724$i$i$i = $$118$i$i$i;
      $$02022$i$i$i = $$02022$i$i$i + 32 | 0;
      $$025$i$i$i = $$1$i$i$i;
     }
    }
   }
   if (!$$072$i$i) {
    $$0$lcssa$i$i = $$05$i$i;
    break L1;
   }
   $35 = $12 + ($$05$i$i << 5) | 0;
   $36 = $$072$i$i + 4 | 0;
   HEAP32[$12 + ($$05$i$i << 5) + 4 >> 2] = HEAP32[$36 >> 2];
   $39 = $$072$i$i + 12 | 0;
   HEAP32[$12 + ($$05$i$i << 5) + 12 >> 2] = HEAP32[$39 >> 2];
   $42 = $$072$i$i + 20 | 0;
   HEAP32[$12 + ($$05$i$i << 5) + 20 >> 2] = HEAP32[$42 >> 2];
   HEAP32[$35 >> 2] = HEAP32[$$072$i$i >> 2];
   $46 = $$072$i$i + 8 | 0;
   $48 = $12 + ($$05$i$i << 5) + 8 | 0;
   HEAP32[$48 >> 2] = HEAP32[$46 >> 2];
   $49 = $$072$i$i + 16 | 0;
   $51 = $12 + ($$05$i$i << 5) + 16 | 0;
   HEAP32[$51 >> 2] = HEAP32[$49 >> 2];
   $52 = HEAP32[$36 >> 2] | 0;
   $53 = HEAP32[$$072$i$i >> 2] | 0;
   $55 = $52 - $53 << 4;
   $56 = HEAP32[$39 >> 2] | 0;
   $57 = HEAP32[$46 >> 2] | 0;
   $59 = ($56 - $57 | 0) * 12 | 0;
   $60 = HEAP32[$42 >> 2] | 0;
   $61 = HEAP32[$49 >> 2] | 0;
   $64 = ($55 | 0) > ($59 | 0);
   switch ((($60 - $61 << 3 | 0) > (($64 ? $55 : $59) | 0) ? 2 : ($64 ^ 1) & 1) & 3) {
   case 0:
    {
     $68 = ($53 + $52 | 0) / 2 | 0;
     HEAP32[$36 >> 2] = $68;
     $$sink11 = $35;
     $$sink12 = $68;
     label = 15;
     break;
    }
   case 1:
    {
     $70 = ($57 + $56 | 0) / 2 | 0;
     HEAP32[$39 >> 2] = $70;
     $$sink11 = $48;
     $$sink12 = $70;
     label = 15;
     break;
    }
   case 2:
    {
     $72 = ($61 + $60 | 0) / 2 | 0;
     HEAP32[$42 >> 2] = $72;
     $$sink11 = $51;
     $$sink12 = $72;
     label = 15;
     break;
    }
   default:
    {}
   }
   if ((label | 0) == 15) {
    label = 0;
    HEAP32[$$sink11 >> 2] = $$sink12 + 1;
   }
   _update_box($0, $$072$i$i);
   _update_box($0, $35);
   $74 = $$05$i$i + 1 | 0;
   if (($74 | 0) < ($7 | 0)) $$05$i$i = $74; else {
    $$0$lcssa$i$i = $74;
    break L1;
   }
  }
 } else $$0$lcssa$i$i = 1; while (0);
 $$036$i = 0;
 do {
  $78 = HEAP32[(HEAP32[$1 >> 2] | 0) + 24 >> 2] | 0;
  $80 = HEAP32[$12 + ($$036$i << 5) >> 2] | 0;
  $82 = HEAP32[$12 + ($$036$i << 5) + 4 >> 2] | 0;
  $84 = HEAP32[$12 + ($$036$i << 5) + 8 >> 2] | 0;
  $86 = HEAP32[$12 + ($$036$i << 5) + 12 >> 2] | 0;
  $88 = HEAP32[$12 + ($$036$i << 5) + 16 >> 2] | 0;
  $90 = HEAP32[$12 + ($$036$i << 5) + 20 >> 2] | 0;
  if (($80 | 0) > ($82 | 0) | ($84 | 0) > ($86 | 0) | ($88 | 0) > ($90 | 0)) {
   $$0$lcssa$i34$i = 0;
   $$083$lcssa$i$i = 0;
   $$087$lcssa$i$i = 0;
   $$091$lcssa$i$i = 0;
  } else {
   $$0124$i$i = 0;
   $$083123$i$i = 0;
   $$087122$i$i = 0;
   $$091121$i$i = 0;
   $$096120$i$i = $80;
   while (1) {
    $95 = HEAP32[$78 + ($$096120$i$i << 2) >> 2] | 0;
    $97 = $$096120$i$i << 3 | 4;
    $$097108$i$i = $84;
    $$1112$i$i = $$0124$i$i;
    $$184111$i$i = $$083123$i$i;
    $$188110$i$i = $$087122$i$i;
    $$192109$i$i = $$091121$i$i;
    while (1) {
     $100 = $$097108$i$i << 2 | 2;
     $$095100$i$i = $95 + ($$097108$i$i << 6) + ($88 << 1) | 0;
     $$09899$i$i = $88;
     $$2104$i$i = $$1112$i$i;
     $$285103$i$i = $$184111$i$i;
     $$289102$i$i = $$188110$i$i;
     $$293101$i$i = $$192109$i$i;
     while (1) {
      $102 = HEAP16[$$095100$i$i >> 1] | 0;
      $103 = $102 & 65535;
      if (!($102 << 16 >> 16)) {
       $$3$i$i = $$2104$i$i;
       $$386$i$i = $$285103$i$i;
       $$390$i$i = $$289102$i$i;
       $$394$i$i = $$293101$i$i;
      } else {
       $$3$i$i = (Math_imul($$09899$i$i << 3 | 4, $103) | 0) + $$2104$i$i | 0;
       $$386$i$i = (Math_imul($100, $103) | 0) + $$285103$i$i | 0;
       $$390$i$i = (Math_imul($97, $103) | 0) + $$289102$i$i | 0;
       $$394$i$i = $$293101$i$i + $103 | 0;
      }
      if (($$09899$i$i | 0) < ($90 | 0)) {
       $$095100$i$i = $$095100$i$i + 2 | 0;
       $$09899$i$i = $$09899$i$i + 1 | 0;
       $$2104$i$i = $$3$i$i;
       $$285103$i$i = $$386$i$i;
       $$289102$i$i = $$390$i$i;
       $$293101$i$i = $$394$i$i;
      } else break;
     }
     if (($$097108$i$i | 0) < ($86 | 0)) {
      $$097108$i$i = $$097108$i$i + 1 | 0;
      $$1112$i$i = $$3$i$i;
      $$184111$i$i = $$386$i$i;
      $$188110$i$i = $$390$i$i;
      $$192109$i$i = $$394$i$i;
     } else break;
    }
    if (($$096120$i$i | 0) < ($82 | 0)) {
     $$0124$i$i = $$3$i$i;
     $$083123$i$i = $$386$i$i;
     $$087122$i$i = $$390$i$i;
     $$091121$i$i = $$394$i$i;
     $$096120$i$i = $$096120$i$i + 1 | 0;
    } else {
     $$0$lcssa$i34$i = $$3$i$i;
     $$083$lcssa$i$i = $$386$i$i;
     $$087$lcssa$i$i = $$390$i$i;
     $$091$lcssa$i$i = $$394$i$i;
     break;
    }
   }
  }
  $120 = $$091$lcssa$i$i >> 1;
  HEAP8[(HEAP32[HEAP32[$5 >> 2] >> 2] | 0) + $$036$i >> 0] = ($$087$lcssa$i$i + $120 | 0) / ($$091$lcssa$i$i | 0) | 0;
  HEAP8[(HEAP32[(HEAP32[$5 >> 2] | 0) + 4 >> 2] | 0) + $$036$i >> 0] = ($$083$lcssa$i$i + $120 | 0) / ($$091$lcssa$i$i | 0) | 0;
  HEAP8[(HEAP32[(HEAP32[$5 >> 2] | 0) + 8 >> 2] | 0) + $$036$i >> 0] = ($$0$lcssa$i34$i + $120 | 0) / ($$091$lcssa$i$i | 0) | 0;
  $$036$i = $$036$i + 1 | 0;
 } while (($$036$i | 0) < ($$0$lcssa$i$i | 0));
 HEAP32[$0 + 132 >> 2] = $$0$lcssa$i$i;
 $144 = HEAP32[$0 >> 2] | 0;
 HEAP32[$144 + 20 >> 2] = 98;
 HEAP32[$144 + 24 >> 2] = $$0$lcssa$i$i;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
 HEAP32[$2 + 28 >> 2] = 1;
 return;
}

function _get_matrix_code($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0212 = 0, $$0213 = 0, $$0217 = 0, $$0225 = 0, $$0228 = 0, $$0230 = 0, $$1214 = 0, $$1218 = 0, $$2215 = 0, $$2219 = 0, $$3216 = 0, $$3220 = 0, $$4221 = 0, $$5222 = 0, $$6223 = 0, $$7224 = 0, $107 = 0, $11 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $125 = 0, $126 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $138 = 0, $14 = 0, $149 = 0, $150 = 0, $151 = 0, $154 = 0, $160 = 0, $161 = 0, $164 = 0, $173 = 0, $174 = 0, $178 = 0, $188 = 0, $189 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $21 = 0, $25 = 0, $26 = 0, $30 = 0, $44 = 0, $55 = 0, $57 = 0, $58 = 0, $65 = 0, $67 = 0, $68 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $86 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $97 = 0, $or$cond7249 = 0, $spec$select232 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $7 = sp + 24 | 0;
 $8 = sp;
 $9 = sp + 16 | 0;
 L1 : do if (($1 + -3 | 0) >>> 0 > 5) {
  HEAP32[$2 >> 2] = -1;
  HEAP32[$3 >> 2] = 0;
  HEAPF64[$4 >> 3] = -1.0;
  $$0212 = -1;
 } else {
  HEAP32[$8 >> 2] = 0;
  $11 = $1 + -1 | 0;
  $12 = Math_imul($11, $1) | 0;
  HEAP32[$8 + 4 >> 2] = $12;
  $14 = Math_imul($1, $1) | 0;
  HEAP32[$8 + 8 >> 2] = $14 + -1;
  HEAP32[$8 + 12 >> 2] = $11;
  $$0217 = 0;
  $$0228 = 0;
  $$0230 = -1;
  while (1) {
   if (($$0217 | 0) == 4) break;
   $21 = HEAP8[$0 + (HEAP32[$8 + ($$0217 << 2) >> 2] | 0) >> 0] | 0;
   $$0217 = $$0217 + 1 | 0;
   $$0228 = ($21 & 255) > ($$0228 & 255) ? $21 : $$0228;
   $$0230 = ($21 & 255) < ($$0230 & 255) ? $21 : $$0230;
  }
  $25 = $$0228 & 255;
  $26 = $$0230 & 255;
  if (($25 - $26 | 0) < 30) {
   HEAP32[$2 >> 2] = -1;
   HEAP32[$3 >> 2] = 0;
   HEAPF64[$4 >> 3] = -1.0;
   $$0212 = -2;
   break;
  }
  $30 = ($25 + $26 | 0) >>> 1;
  $$1218 = 0;
  while (1) {
   if (($$1218 | 0) == 4) break;
   HEAP8[$7 + $$1218 >> 0] = $30 >>> 0 > (HEAPU8[$0 + (HEAP32[$8 + ($$1218 << 2) >> 2] | 0) >> 0] | 0) >>> 0 & 1;
   $$1218 = $$1218 + 1 | 0;
  }
  $$2219 = 0;
  while (1) {
   if ($$2219 >>> 0 >= 4) {
    label = 18;
    break;
   }
   $44 = $$2219 + 1 | 0;
   if (((HEAP8[$7 + $$2219 >> 0] | 0) == 1 ? (HEAP8[$7 + ($44 & 3) >> 0] | 0) == 1 : 0) ? (HEAP8[$7 + ($$2219 + 2 & 3) >> 0] | 0) == 0 : 0) {
    label = 17;
    break;
   }
   $$2219 = $44;
  }
  if ((label | 0) == 17) HEAP32[$3 >> 2] = $$2219; else if ((label | 0) == 18 ? ($$2219 | 0) == 4 : 0) {
   HEAP32[$2 >> 2] = -1;
   HEAP32[$3 >> 2] = 0;
   HEAPF64[$4 >> 3] = -1.0;
   $$0212 = -3;
   break;
  }
  $$0225 = 255;
  $$3220 = 0;
  while (1) {
   if (($$3220 | 0) == ($14 | 0)) break;
   $55 = $0 + $$3220 | 0;
   $57 = HEAPU8[$55 >> 0] | 0;
   $58 = $57 - $30 | 0;
   $spec$select232 = ($58 | 0) < 0 ? 0 - $58 | 0 : $58;
   HEAP8[$55 >> 0] = $30 >>> 0 > $57 >>> 0 & 1;
   $$0225 = ($spec$select232 | 0) < ($$0225 | 0) ? $spec$select232 : $$0225;
   $$3220 = $$3220 + 1 | 0;
  }
  $65 = HEAP32[$3 >> 2] | 0;
  L31 : do switch ($65 | 0) {
  case 0:
   {
    $$0213 = $65;
    $194 = 0;
    $195 = 0;
    while (1) {
     if (($$0213 | 0) >= ($1 | 0)) {
      $149 = $194;
      $173 = $195;
      break L31;
     }
     $67 = ($$0213 | 0) == ($11 | 0);
     $68 = Math_imul($$0213, $1) | 0;
     $$4221 = 0;
     $73 = $194;
     $74 = $195;
     while (1) {
      if (($$4221 | 0) == ($1 | 0)) break;
      if (($$4221 | $$0213 | 0) != 0 ? !($67 & (($$4221 | 0) == 0 | ($$4221 | 0) == ($11 | 0))) : 0) {
       $75 = _bitshift64Shl($73 | 0, $74 | 0, 1) | 0;
       $76 = getTempRet0() | 0;
       $196 = $75 | (HEAP8[$0 + ($$4221 + $68) >> 0] | 0) != 0;
       $197 = $76;
      } else {
       $196 = $73;
       $197 = $74;
      }
      $$4221 = $$4221 + 1 | 0;
      $73 = $196;
      $74 = $197;
     }
     $$0213 = $$0213 + 1 | 0;
     $194 = $73;
     $195 = $74;
    }
    break;
   }
  case 1:
   {
    $$5222 = 0;
    $192 = 0;
    $193 = 0;
    while (1) {
     if (($$5222 | 0) >= ($1 | 0)) {
      $149 = $192;
      $173 = $193;
      break L31;
     }
     $86 = ($$5222 | 0) == 0;
     $87 = ($$5222 | 0) == ($11 | 0);
     $$1214 = $11;
     $91 = $192;
     $92 = $193;
     while (1) {
      if (($$1214 | 0) <= -1) break;
      $89 = ($$1214 | 0) == ($11 | 0);
      if (!($86 & $89) ? !($87 & ($89 | ($$1214 | 0) == 0)) : 0) {
       $93 = _bitshift64Shl($91 | 0, $92 | 0, 1) | 0;
       $94 = getTempRet0() | 0;
       $97 = $0 + ((Math_imul($$1214, $1) | 0) + $$5222) | 0;
       $198 = $93 | (HEAP8[$97 >> 0] | 0) != 0;
       $199 = $94;
      } else {
       $198 = $91;
       $199 = $92;
      }
      $$1214 = $$1214 + -1 | 0;
      $91 = $198;
      $92 = $199;
     }
     $$5222 = $$5222 + 1 | 0;
     $192 = $91;
     $193 = $92;
    }
    break;
   }
  case 2:
   {
    $$2215 = $11;
    $190 = 0;
    $191 = 0;
    while (1) {
     if (($$2215 | 0) <= -1) {
      $149 = $190;
      $173 = $191;
      break L31;
     }
     $or$cond7249 = ($$2215 | 0) == ($11 | 0) | ($$2215 | 0) == 0;
     $107 = Math_imul($$2215, $1) | 0;
     $$6223 = $11;
     $112 = $190;
     $113 = $191;
     while (1) {
      if (($$6223 | 0) <= -1) break;
      if ($or$cond7249 & ($$6223 | 0) == ($11 | 0) | ($$6223 | $$2215 | 0) == 0) {
       $200 = $112;
       $201 = $113;
      } else {
       $114 = _bitshift64Shl($112 | 0, $113 | 0, 1) | 0;
       $115 = getTempRet0() | 0;
       $200 = $114 | (HEAP8[$0 + ($$6223 + $107) >> 0] | 0) != 0;
       $201 = $115;
      }
      $$6223 = $$6223 + -1 | 0;
      $112 = $200;
      $113 = $201;
     }
     $$2215 = $$2215 + -1 | 0;
     $190 = $112;
     $191 = $113;
    }
    break;
   }
  case 3:
   {
    $$7224 = $11;
    $188 = 0;
    $189 = 0;
    while (1) {
     if (($$7224 | 0) <= -1) {
      $149 = $188;
      $173 = $189;
      break L31;
     }
     $125 = ($$7224 | 0) == ($11 | 0);
     $126 = ($$7224 | 0) == 0;
     $$3216 = 0;
     $132 = $188;
     $133 = $189;
     while (1) {
      if (($$3216 | 0) >= ($1 | 0)) break;
      if ($125 & ($$3216 | 0) == 0 | ($$3216 | $$7224 | 0) == 0 | $126 & ($$3216 | 0) == ($11 | 0)) {
       $202 = $132;
       $203 = $133;
      } else {
       $134 = _bitshift64Shl($132 | 0, $133 | 0, 1) | 0;
       $135 = getTempRet0() | 0;
       $138 = $0 + ((Math_imul($$3216, $1) | 0) + $$7224) | 0;
       $202 = $134 | (HEAP8[$138 >> 0] | 0) != 0;
       $203 = $135;
      }
      $$3216 = $$3216 + 1 | 0;
      $132 = $202;
      $133 = $203;
     }
     $$7224 = $$7224 + -1 | 0;
     $188 = $132;
     $189 = $133;
    }
    break;
   }
  default:
   {
    $149 = 0;
    $173 = 0;
   }
  } while (0);
  HEAPF64[$4 >> 3] = ($$0225 | 0) > 30 ? 1.0 : +($$0225 | 0) / 30.0;
  switch ($5 | 0) {
  case 259:
   {
    $150 = HEAP8[240 + $149 >> 0] | 0;
    $151 = $150 << 24 >> 24;
    $154 = $9;
    HEAP32[$154 >> 2] = $151;
    HEAP32[$154 + 4 >> 2] = (($151 | 0) < 0) << 31 >> 31;
    if ($150 << 24 >> 24 < 0) {
     HEAP32[$2 >> 2] = -1;
     HEAPF64[$4 >> 3] = -1.0;
     $$0212 = -4;
     break L1;
    }
    break;
   }
  case 515:
   {
    $160 = HEAP8[112 + $149 >> 0] | 0;
    $161 = $160 << 24 >> 24;
    $164 = $9;
    HEAP32[$164 >> 2] = $161;
    HEAP32[$164 + 4 >> 2] = (($161 | 0) < 0) << 31 >> 31;
    if ($6 | 0) HEAP32[$6 >> 2] = HEAPU8[176 + $149 >> 0];
    if ($160 << 24 >> 24 < 0) {
     HEAP32[$2 >> 2] = -1;
     HEAPF64[$4 >> 3] = -1.0;
     $$0212 = -4;
     break L1;
    }
    break;
   }
  case 772:
  case 1028:
  case 1029:
  case 1285:
   {
    $174 = _decode_bch($5, $149, $173, 0, $9) | 0;
    if (($174 | 0) < 0) {
     HEAP32[$2 >> 2] = -1;
     HEAPF64[$4 >> 3] = -1.0;
     $$0212 = -4;
     break L1;
    }
    if (($6 | 0) != 0 & ($174 | 0) != 0) HEAP32[$6 >> 2] = $174;
    break;
   }
  default:
   {
    $178 = $9;
    HEAP32[$178 >> 2] = $149;
    HEAP32[$178 + 4 >> 2] = $173;
   }
  }
  HEAP32[$2 >> 2] = HEAP32[$9 >> 2];
  $$0212 = 0;
 } while (0);
 STACKTOP = sp;
 return $$0212 | 0;
}

function _kpmMergeRefDataSet($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0181 = 0, $$0182 = 0, $$0185 = 0, $$0191 = 0, $$0193 = 0, $$1 = 0, $$1183 = 0, $$1186 = 0, $$1192 = 0, $$1194 = 0, $$2184 = 0, $$2187 = 0, $$2195 = 0, $$3 = 0, $$3188 = 0, $$4 = 0, $$4189 = 0, $$5 = 0, $$5190 = 0, $$pre$phiZ2D = 0, $$pre205 = 0, $103 = 0, $11 = 0, $113 = 0, $118 = 0, $121 = 0, $129 = 0, $131 = 0, $14 = 0, $142 = 0, $143 = 0, $146 = 0, $148 = 0, $15 = 0, $156 = 0, $158 = 0, $162 = 0, $163 = 0, $164 = 0, $167 = 0, $17 = 0, $171 = 0, $176 = 0, $18 = 0, $20 = 0, $33 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $58 = 0, $6 = 0, $60 = 0, $64 = 0, $65 = 0, $66 = 0, $74 = 0, $83 = 0, $85 = 0, $89 = 0, $96 = 0, $98 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 if (($0 | 0) != 0 & ($1 | 0) != 0) {
  $4 = HEAP32[$0 >> 2] | 0;
  do if (!$4) {
   $6 = _malloc(16) | 0;
   HEAP32[$0 >> 2] = $6;
   if (!$6) {
    _arLog(0, 3, 45930, $vararg_buffer1);
    _exit(1);
   } else {
    HEAP32[$6 + 4 >> 2] = 0;
    HEAP32[$6 >> 2] = 0;
    HEAP32[$6 + 12 >> 2] = 0;
    HEAP32[$6 + 8 >> 2] = 0;
    $14 = $6;
    $176 = $6;
    break;
   }
  } else {
   $14 = $4;
   $176 = $4;
  } while (0);
  $11 = HEAP32[$1 >> 2] | 0;
  if (!$11) $$0 = 0; else {
   $15 = HEAP32[$14 + 4 >> 2] | 0;
   $17 = HEAP32[$11 + 4 >> 2] | 0;
   $18 = $17 + $15 | 0;
   $20 = _malloc($18 * 132 | 0) | 0;
   if (!$20) {
    _arLog(0, 3, 45930, $vararg_buffer3);
    _exit(1);
   }
   $$0185 = 0;
   while (1) {
    if (($$0185 | 0) >= ($15 | 0)) break;
    _memcpy($20 + ($$0185 * 132 | 0) | 0, (HEAP32[$14 >> 2] | 0) + ($$0185 * 132 | 0) | 0, 132) | 0;
    $$0185 = $$0185 + 1 | 0;
   }
   $$1186 = 0;
   while (1) {
    if (($$1186 | 0) >= ($17 | 0)) break;
    _memcpy($20 + (($$1186 + $15 | 0) * 132 | 0) | 0, (HEAP32[$11 >> 2] | 0) + ($$1186 * 132 | 0) | 0, 132) | 0;
    $$1186 = $$1186 + 1 | 0;
   }
   $33 = HEAP32[$14 >> 2] | 0;
   if (!$33) $35 = $176; else {
    _free($33);
    $35 = HEAP32[$0 >> 2] | 0;
   }
   HEAP32[$35 >> 2] = $20;
   $36 = HEAP32[$0 >> 2] | 0;
   HEAP32[$36 + 4 >> 2] = $18;
   $39 = HEAP32[$36 + 12 >> 2] | 0;
   $40 = HEAP32[$1 >> 2] | 0;
   $42 = HEAP32[$40 + 12 >> 2] | 0;
   $43 = $40 + 8 | 0;
   $44 = $36 + 8 | 0;
   $$0191 = 0;
   $$2187 = 0;
   while (1) {
    if (($$2187 | 0) >= ($42 | 0)) break;
    $$0182 = 0;
    while (1) {
     if (($$0182 | 0) >= ($39 | 0)) {
      $$1192 = $$0191;
      break;
     }
     if ((HEAP32[(HEAP32[$43 >> 2] | 0) + ($$2187 * 12 | 0) + 8 >> 2] | 0) == (HEAP32[(HEAP32[$44 >> 2] | 0) + ($$0182 * 12 | 0) + 8 >> 2] | 0)) {
      label = 23;
      break;
     } else $$0182 = $$0182 + 1 | 0;
    }
    if ((label | 0) == 23) {
     label = 0;
     $$1192 = $$0191 + 1 | 0;
    }
    $$0191 = $$1192;
    $$2187 = $$2187 + 1 | 0;
   }
   $58 = $42 + $39 - $$0191 | 0;
   $60 = _malloc($58 * 12 | 0) | 0;
   if (!$60) {
    _arLog(0, 3, 45930, $vararg_buffer5);
    _exit(1);
   }
   $$3188 = 0;
   while (1) {
    if (($$3188 | 0) >= ($39 | 0)) break;
    $64 = (HEAP32[$0 >> 2] | 0) + 8 | 0;
    $65 = HEAP32[$64 >> 2] | 0;
    $66 = $65 + ($$3188 * 12 | 0) + 8 | 0;
    HEAP32[$60 + ($$3188 * 12 | 0) + 8 >> 2] = HEAP32[$66 >> 2];
    $$0193 = HEAP32[$65 + ($$3188 * 12 | 0) + 4 >> 2] | 0;
    $$1183 = 0;
    while (1) {
     if (($$1183 | 0) >= ($42 | 0)) break;
     $74 = HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] | 0;
     if ((HEAP32[$74 + ($$1183 * 12 | 0) + 8 >> 2] | 0) == (HEAP32[$66 >> 2] | 0)) $$1194 = (HEAP32[$74 + ($$1183 * 12 | 0) + 4 >> 2] | 0) + $$0193 | 0; else $$1194 = $$0193;
     $$0193 = $$1194;
     $$1183 = $$1183 + 1 | 0;
    }
    $83 = $60 + ($$3188 * 12 | 0) | 0;
    $85 = _malloc($$0193 * 12 | 0) | 0;
    HEAP32[$83 >> 2] = $85;
    if (!$85) {
     label = 36;
     break;
    }
    $89 = HEAP32[(HEAP32[$64 >> 2] | 0) + ($$3188 * 12 | 0) + 4 >> 2] | 0;
    $$2184 = 0;
    while (1) {
     if (($$2184 | 0) >= ($89 | 0)) break;
     $96 = (HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] | 0) + ($$3188 * 12 | 0) >> 2] | 0) + ($$2184 * 12 | 0) | 0;
     $98 = (HEAP32[$83 >> 2] | 0) + ($$2184 * 12 | 0) | 0;
     HEAP32[$98 >> 2] = HEAP32[$96 >> 2];
     HEAP32[$98 + 4 >> 2] = HEAP32[$96 + 4 >> 2];
     HEAP32[$98 + 8 >> 2] = HEAP32[$96 + 8 >> 2];
     $$2184 = $$2184 + 1 | 0;
    }
    $$3 = 0;
    while (1) {
     if (($$3 | 0) >= ($42 | 0)) break;
     $103 = HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] | 0;
     if ((HEAP32[$103 + ($$3 * 12 | 0) + 8 >> 2] | 0) == (HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] | 0) + ($$3188 * 12 | 0) + 8 >> 2] | 0)) {
      label = 43;
      break;
     }
     $$3 = $$3 + 1 | 0;
    }
    L56 : do if ((label | 0) == 43) {
     label = 0;
     $$0181 = 0;
     $113 = $103;
     while (1) {
      if (($$0181 | 0) >= (HEAP32[$113 + ($$3 * 12 | 0) + 4 >> 2] | 0)) break L56;
      $118 = (HEAP32[$113 + ($$3 * 12 | 0) >> 2] | 0) + ($$0181 * 12 | 0) | 0;
      $121 = (HEAP32[$83 >> 2] | 0) + (($$0181 + $89 | 0) * 12 | 0) | 0;
      HEAP32[$121 >> 2] = HEAP32[$118 >> 2];
      HEAP32[$121 + 4 >> 2] = HEAP32[$118 + 4 >> 2];
      HEAP32[$121 + 8 >> 2] = HEAP32[$118 + 8 >> 2];
      $$0181 = $$0181 + 1 | 0;
      $113 = HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] | 0;
     }
    } while (0);
    HEAP32[$60 + ($$3188 * 12 | 0) + 4 >> 2] = $$0193;
    $$3188 = $$3188 + 1 | 0;
   }
   if ((label | 0) == 36) {
    _arLog(0, 3, 45930, $vararg_buffer7);
    _exit(1);
   }
   $$1 = 0;
   $$4189 = 0;
   while (1) {
    if (($$4189 | 0) >= ($42 | 0)) break;
    $129 = HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] | 0;
    $131 = HEAP32[$129 + ($$4189 * 12 | 0) + 8 >> 2] | 0;
    $$4 = 0;
    while (1) {
     if (($$4 | 0) >= ($39 | 0)) {
      label = 53;
      break;
     }
     if (($131 | 0) == (HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] | 0) + ($$4 * 12 | 0) + 8 >> 2] | 0)) {
      label = 52;
      break;
     } else $$4 = $$4 + 1 | 0;
    }
    if ((label | 0) == 52) {
     label = 0;
     $$2195 = $$1 + 1 | 0;
    } else if ((label | 0) == 53) {
     label = 0;
     $142 = $$4189 + $39 - $$1 | 0;
     $143 = $60 + ($142 * 12 | 0) | 0;
     HEAP32[$60 + ($142 * 12 | 0) + 8 >> 2] = $131;
     $146 = HEAP32[$129 + ($$4189 * 12 | 0) + 4 >> 2] | 0;
     $148 = _malloc($146 * 12 | 0) | 0;
     HEAP32[$143 >> 2] = $148;
     if (!$148) {
      label = 55;
      break;
     }
     $$5 = 0;
     while (1) {
      if (($$5 | 0) >= ($146 | 0)) break;
      $156 = (HEAP32[(HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] | 0) + ($$4189 * 12 | 0) >> 2] | 0) + ($$5 * 12 | 0) | 0;
      $158 = (HEAP32[$143 >> 2] | 0) + ($$5 * 12 | 0) | 0;
      HEAP32[$158 >> 2] = HEAP32[$156 >> 2];
      HEAP32[$158 + 4 >> 2] = HEAP32[$156 + 4 >> 2];
      HEAP32[$158 + 8 >> 2] = HEAP32[$156 + 8 >> 2];
      $$5 = $$5 + 1 | 0;
     }
     HEAP32[$60 + ($142 * 12 | 0) + 4 >> 2] = $146;
     $$2195 = $$1;
    }
    $$1 = $$2195;
    $$4189 = $$4189 + 1 | 0;
   }
   if ((label | 0) == 55) {
    _arLog(0, 3, 45930, $vararg_buffer9);
    _exit(1);
   }
   $162 = HEAP32[$0 >> 2] | 0;
   $163 = $162 + 8 | 0;
   $164 = HEAP32[$163 >> 2] | 0;
   if (!$164) $$pre$phiZ2D = $163; else {
    $$5190 = 0;
    $167 = $162;
    $171 = $164;
    while (1) {
     if (($$5190 | 0) >= (HEAP32[$167 + 12 >> 2] | 0)) break;
     _free(HEAP32[$171 + ($$5190 * 12 | 0) >> 2] | 0);
     $$pre205 = HEAP32[$0 >> 2] | 0;
     $$5190 = $$5190 + 1 | 0;
     $167 = $$pre205;
     $171 = HEAP32[$$pre205 + 8 >> 2] | 0;
    }
    _free($171);
    $$pre$phiZ2D = (HEAP32[$0 >> 2] | 0) + 8 | 0;
   }
   HEAP32[$$pre$phiZ2D >> 2] = $60;
   HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] = $58;
   _kpmDeleteRefDataSet($1) | 0;
   $$0 = 0;
  }
 } else {
  _arLog(0, 3, 26204, $vararg_buffer);
  $$0 = -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _arMultiReadConfigFile($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0151 = 0, $$0152 = 0, $$0154 = 0, $$1 = 0, $$1$ph = 0, $$2 = 0, $$sink204 = 0, $$sink205 = 0, $10 = 0, $114 = 0, $12 = 0, $125 = 0, $15 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $37 = 0, $4 = 0, $41 = 0, $5 = 0, $51 = 0, $52 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $7 = 0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $86 = 0.0, $90 = 0.0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer17 = 0, $vararg_buffer21 = 0, $vararg_buffer24 = 0, $vararg_buffer28 = 0, $vararg_buffer31 = 0, $vararg_buffer35 = 0, $vararg_buffer41 = 0, $vararg_buffer45 = 0, $vararg_buffer49 = 0, $vararg_buffer5 = 0, $vararg_buffer55 = 0, $vararg_buffer59 = 0, $vararg_buffer8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2528 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2528);
 $vararg_buffer59 = sp + 2512 | 0;
 $vararg_buffer55 = sp + 2504 | 0;
 $vararg_buffer49 = sp + 2488 | 0;
 $vararg_buffer45 = sp + 2480 | 0;
 $vararg_buffer41 = sp + 2472 | 0;
 $vararg_buffer35 = sp + 2456 | 0;
 $vararg_buffer31 = sp + 2448 | 0;
 $vararg_buffer28 = sp + 2440 | 0;
 $vararg_buffer24 = sp + 2432 | 0;
 $vararg_buffer21 = sp + 2424 | 0;
 $vararg_buffer17 = sp + 2416 | 0;
 $vararg_buffer13 = sp + 2408 | 0;
 $vararg_buffer11 = sp + 2400 | 0;
 $vararg_buffer8 = sp + 2392 | 0;
 $vararg_buffer5 = sp + 2384 | 0;
 $vararg_buffer1 = sp + 2376 | 0;
 $vararg_buffer = sp + 2368 | 0;
 $2 = sp + 2304 | 0;
 $3 = sp + 2048 | 0;
 $4 = sp;
 $5 = sp + 2524 | 0;
 $6 = sp + 2520 | 0;
 $7 = sp + 2516 | 0;
 $8 = _fopen($0, 25925) | 0;
 do if (!$8) {
  HEAP32[$vararg_buffer >> 2] = $0;
  _arLog(0, 3, 24935, $vararg_buffer);
  $10 = ___errno_location() | 0;
  $12 = _strerror(HEAP32[$10 >> 2] | 0) | 0;
  HEAP32[$vararg_buffer1 >> 2] = 67447;
  HEAP32[$vararg_buffer1 + 4 >> 2] = $12;
  _arLog(0, 3, 25953, $vararg_buffer1);
  $$0154 = 0;
 } else {
  _get_buff($3, $8);
  HEAP32[$vararg_buffer5 >> 2] = $6;
  if ((_sscanf($3, 25959, $vararg_buffer5) | 0) != 1) {
   HEAP32[$vararg_buffer8 >> 2] = $0;
   _arLog(0, 3, 24988, $vararg_buffer8);
   _fclose($8) | 0;
   $$0154 = 0;
   break;
  }
  $15 = HEAP32[$6 >> 2] | 0;
  $17 = _malloc($15 * 320 | 0) | 0;
  if (!$17) {
   _arLog(0, 3, 45930, $vararg_buffer11);
   _exit(1);
  }
  $19 = ($1 | 0) == 0;
  $20 = $2 + 8 | 0;
  $21 = $2 + 16 | 0;
  $22 = $2 + 24 | 0;
  $23 = $2 + 32 | 0;
  $24 = $2 + 40 | 0;
  $25 = $2 + 48 | 0;
  $26 = $2 + 56 | 0;
  $$0151 = 0;
  $$0152 = 0;
  $28 = $15;
  L10 : while (1) {
   if (($$0151 | 0) >= ($28 | 0)) {
    label = 31;
    break;
   }
   _get_buff($3, $8);
   $29 = $17 + ($$0151 * 320 | 0) | 0;
   $30 = $17 + ($$0151 * 320 | 0) + 312 | 0;
   HEAP32[$vararg_buffer13 >> 2] = $30;
   HEAP32[$vararg_buffer13 + 4 >> 2] = $5;
   if ((_sscanf($3, 25089, $vararg_buffer13) | 0) != 1) {
    if ($19) {
     label = 11;
     break;
    }
    if (!(_arUtilGetDirectoryNameFromPath($4, $0, 2048, 1) | 0)) {
     label = 13;
     break;
    }
    _strncat($4, $3, 2047 - (_strlen($4) | 0) | 0) | 0;
    $37 = _arPattLoad($1, $4) | 0;
    HEAP32[$29 >> 2] = $37;
    if (($37 | 0) < 0) {
     label = 15;
     break;
    } else {
     $$sink204 = 1;
     $$sink205 = 0;
    }
   } else {
    $41 = HEAP32[$30 >> 2] | 0;
    HEAP32[$29 >> 2] = ($41 & -32768 | 0) == 0 & 0 == 0 ? $41 & 32767 : 0;
    $$sink204 = 2;
    $$sink205 = 1;
   }
   HEAP32[$17 + ($$0151 * 320 | 0) + 4 >> 2] = $$sink205;
   $51 = $$0152 | $$sink204;
   _get_buff($3, $8);
   $52 = $17 + ($$0151 * 320 | 0) + 8 | 0;
   HEAP32[$vararg_buffer28 >> 2] = $52;
   if ((_sscanf($3, 25385, $vararg_buffer28) | 0) != 1) {
    label = 18;
    break;
   }
   _get_buff($3, $8);
   $56 = $17 + ($$0151 * 320 | 0) + 16 | 0;
   $57 = $17 + ($$0151 * 320 | 0) + 24 | 0;
   $59 = $17 + ($$0151 * 320 | 0) + 40 | 0;
   HEAP32[$vararg_buffer35 >> 2] = $56;
   HEAP32[$vararg_buffer35 + 4 >> 2] = $57;
   HEAP32[$vararg_buffer35 + 8 >> 2] = $17 + ($$0151 * 320 | 0) + 32;
   HEAP32[$vararg_buffer35 + 12 >> 2] = $59;
   if ((_sscanf($3, 25494, $vararg_buffer35) | 0) == 4) $$1$ph = 1; else {
    HEAP32[$vararg_buffer41 >> 2] = $vararg_buffer5;
    HEAP32[$vararg_buffer41 + 4 >> 2] = $7;
    if ((_sscanf($3, 25510, $vararg_buffer41) | 0) != 2) {
     label = 23;
     break;
    }
    $$1$ph = 0;
   }
   $$1 = $$1$ph;
   do {
    _get_buff($3, $8);
    HEAP32[$vararg_buffer49 >> 2] = $17 + ($$0151 * 320 | 0) + 16 + ($$1 << 5);
    HEAP32[$vararg_buffer49 + 4 >> 2] = $17 + ($$0151 * 320 | 0) + 16 + ($$1 << 5) + 8;
    HEAP32[$vararg_buffer49 + 8 >> 2] = $17 + ($$0151 * 320 | 0) + 16 + ($$1 << 5) + 16;
    HEAP32[$vararg_buffer49 + 12 >> 2] = $17 + ($$0151 * 320 | 0) + 16 + ($$1 << 5) + 24;
    if ((_sscanf($3, 25494, $vararg_buffer49) | 0) != 4) {
     label = 25;
     break L10;
    }
    $$1 = $$1 + 1 | 0;
   } while ($$1 >>> 0 < 3);
   _arUtilMatInv($56, $17 + ($$0151 * 320 | 0) + 112 | 0) | 0;
   $75 = +HEAPF64[$52 >> 3];
   $76 = $75 * -.5;
   HEAPF64[$2 >> 3] = $76;
   $77 = $75 * .5;
   HEAPF64[$20 >> 3] = $77;
   HEAPF64[$21 >> 3] = $77;
   HEAPF64[$22 >> 3] = $77;
   HEAPF64[$23 >> 3] = $77;
   HEAPF64[$24 >> 3] = $76;
   HEAPF64[$25 >> 3] = $76;
   HEAPF64[$26 >> 3] = $76;
   $78 = $17 + ($$0151 * 320 | 0) + 48 | 0;
   $79 = $17 + ($$0151 * 320 | 0) + 56 | 0;
   $80 = $17 + ($$0151 * 320 | 0) + 72 | 0;
   $81 = $17 + ($$0151 * 320 | 0) + 80 | 0;
   $82 = $17 + ($$0151 * 320 | 0) + 88 | 0;
   $83 = $17 + ($$0151 * 320 | 0) + 104 | 0;
   $$2 = 0;
   while (1) {
    if (($$2 | 0) == 4) break;
    $86 = +HEAPF64[$2 + ($$2 << 4) >> 3];
    $90 = +HEAPF64[$2 + ($$2 << 4) + 8 >> 3];
    HEAPF64[$17 + ($$0151 * 320 | 0) + 208 + ($$2 * 24 | 0) >> 3] = +HEAPF64[$59 >> 3] + (+HEAPF64[$56 >> 3] * $86 + +HEAPF64[$57 >> 3] * $90);
    HEAPF64[$17 + ($$0151 * 320 | 0) + 208 + ($$2 * 24 | 0) + 8 >> 3] = +HEAPF64[$80 >> 3] + ($86 * +HEAPF64[$78 >> 3] + $90 * +HEAPF64[$79 >> 3]);
    HEAPF64[$17 + ($$0151 * 320 | 0) + 208 + ($$2 * 24 | 0) + 16 >> 3] = +HEAPF64[$83 >> 3] + ($86 * +HEAPF64[$81 >> 3] + $90 * +HEAPF64[$82 >> 3]);
    $$2 = $$2 + 1 | 0;
   }
   $$0151 = $$0151 + 1 | 0;
   $$0152 = $51;
   $28 = HEAP32[$6 >> 2] | 0;
  }
  if ((label | 0) == 11) {
   HEAP32[$vararg_buffer17 >> 2] = $0;
   HEAP32[$vararg_buffer17 + 4 >> 2] = $3;
   _arLog(0, 3, 25096, $vararg_buffer17);
  } else if ((label | 0) == 13) {
   HEAP32[$vararg_buffer21 >> 2] = $0;
   _arLog(0, 3, 25224, $vararg_buffer21);
  } else if ((label | 0) == 15) {
   HEAP32[$vararg_buffer24 >> 2] = $0;
   HEAP32[$vararg_buffer24 + 4 >> 2] = $4;
   _arLog(0, 3, 25308, $vararg_buffer24);
  } else if ((label | 0) == 18) {
   HEAP32[$vararg_buffer31 >> 2] = $0;
   HEAP32[$vararg_buffer31 + 4 >> 2] = $$0151 + 1;
   _arLog(0, 3, 25389, $vararg_buffer31);
  } else if ((label | 0) == 23) {
   HEAP32[$vararg_buffer45 >> 2] = $0;
   HEAP32[$vararg_buffer45 + 4 >> 2] = $$0151 + 1;
   _arLog(0, 3, 25516, $vararg_buffer45);
  } else if ((label | 0) == 25) {
   HEAP32[$vararg_buffer55 >> 2] = $0;
   HEAP32[$vararg_buffer55 + 4 >> 2] = $$0151 + 1;
   _arLog(0, 3, 25516, $vararg_buffer55);
  } else if ((label | 0) == 31) {
   _fclose($8) | 0;
   $114 = _malloc(136) | 0;
   if (!$114) {
    _arLog(0, 3, 45930, $vararg_buffer59);
    _exit(1);
   }
   HEAP32[$114 >> 2] = $17;
   HEAP32[$114 + 4 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$114 + 128 >> 2] = 0;
   HEAP32[$114 + 104 >> 2] = 0;
   do if (($$0152 & 3 | 0) != 3) {
    $125 = $114 + 108 | 0;
    if (!($$0152 & 1)) {
     HEAP32[$125 >> 2] = 1;
     break;
    } else {
     HEAP32[$125 >> 2] = 0;
     break;
    }
   } else HEAP32[$114 + 108 >> 2] = 2; while (0);
   HEAPF64[$114 + 112 >> 3] = .5;
   HEAPF64[$114 + 120 >> 3] = .5;
   $$0154 = $114;
   break;
  }
  _fclose($8) | 0;
  _free($17);
  $$0154 = 0;
 } while (0);
 STACKTOP = sp;
 return $$0154 | 0;
}

function _jinit_1pass_quantizer($0) {
 $0 = $0 | 0;
 var $$0$lcssa$lcssa$i$i = 0, $$0107$i = 0, $$014$i = 0, $$058$lcssa$us$i$ph$us$i = 0, $$058$lcssa$us$i$ph87$i = 0, $$05866$us$us$i$us$i = 0, $$05866$us$us$i$us$i$be = 0, $$05866$us71$i$i = 0, $$05866$us71$i$i$be = 0, $$05981$i$i = 0, $$06086$us$i$i = 0, $$063$lcssa$i$i = 0, $$063$us$i$i = 0, $$08195$us$i = 0, $$08290$us$us$i = 0, $$083106$i = 0, $$08489$us$us$i = 0, $$087$us$i$i = 0, $$16180$i$i = 0, $$2$lcssa$lcssa$i$i = 0, $$2$lcssa$us$i$ph$us$i = 0, $$2$lcssa$us$i$ph86$i = 0, $$26264$us$us$i$us$i = 0, $$26264$us$us$i$us$i$be = 0, $$26264$us73$i$i = 0, $$26264$us73$i$i$be = 0, $$265$us$us$i$us$i = 0, $$265$us$us$i$us$i$be = 0, $$265$us72$i$i = 0, $$265$us72$i$i$be = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $103 = 0, $104 = 0, $110 = 0, $119 = 0, $125 = 0, $129 = 0, $13 = 0, $135 = 0, $140 = 0, $18 = 0, $19 = 0, $21 = 0, $26 = 0, $27 = 0, $28 = 0, $30 = 0, $34 = 0, $38 = 0, $4 = 0, $5 = 0, $51 = 0, $52 = 0, $54 = 0, $55 = 0, $57 = 0, $60 = 0, $61 = 0, $63 = 0, $64 = 0, $66 = 0, $71 = 0, $93 = 0, $94 = 0, $97 = 0, $smax$i$i = 0, label = 0, $$083106$i$looptemp = 0;
 $1 = $0 + 4 | 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 88) | 0;
 $5 = $0 + 484 | 0;
 HEAP32[$5 >> 2] = $4;
 HEAP32[$4 >> 2] = 133;
 HEAP32[$4 + 8 >> 2] = 186;
 HEAP32[$4 + 12 >> 2] = 187;
 HEAP32[$4 + 68 >> 2] = 0;
 HEAP32[$4 + 52 >> 2] = 0;
 $10 = $0 + 120 | 0;
 if ((HEAP32[$10 >> 2] | 0) > 4) {
  $13 = HEAP32[$0 >> 2] | 0;
  HEAP32[$13 + 20 >> 2] = 57;
  HEAP32[$13 + 24 >> 2] = 4;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $18 = $0 + 96 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 if (($19 | 0) > 256) {
  $21 = HEAP32[$0 >> 2] | 0;
  HEAP32[$21 + 20 >> 2] = 59;
  HEAP32[$21 + 24 >> 2] = 256;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  $34 = HEAP32[$18 >> 2] | 0;
 } else $34 = $19;
 $26 = HEAP32[$5 >> 2] | 0;
 $27 = $26 + 32 | 0;
 $28 = HEAP32[$10 >> 2] | 0;
 if (($28 | 0) > 1) {
  $$063$us$i$i = 1;
  while (1) {
   $30 = $$063$us$i$i + 1 | 0;
   $$06086$us$i$i = 1;
   $$087$us$i$i = $30;
   do {
    $$087$us$i$i = Math_imul($$087$us$i$i, $30) | 0;
    $$06086$us$i$i = $$06086$us$i$i + 1 | 0;
   } while (($$06086$us$i$i | 0) != ($28 | 0));
   if (($$087$us$i$i | 0) > ($34 | 0)) {
    $$0$lcssa$lcssa$i$i = $$087$us$i$i;
    $$063$lcssa$i$i = $$063$us$i$i;
    break;
   } else $$063$us$i$i = $30;
  }
 } else {
  $smax$i$i = ($34 | 0) > 1 ? $34 : 1;
  $$0$lcssa$lcssa$i$i = $smax$i$i + 1 | 0;
  $$063$lcssa$i$i = $smax$i$i;
 }
 if ($$063$lcssa$i$i >>> 0 < 2) {
  $38 = HEAP32[$0 >> 2] | 0;
  HEAP32[$38 + 20 >> 2] = 58;
  HEAP32[$38 + 24 >> 2] = $$0$lcssa$lcssa$i$i;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 L19 : do if (($28 | 0) > 0) {
  $$05981$i$i = 1;
  $$16180$i$i = 0;
  do {
   HEAP32[$26 + 32 + ($$16180$i$i << 2) >> 2] = $$063$lcssa$i$i;
   $$05981$i$i = Math_imul($$05981$i$i, $$063$lcssa$i$i) | 0;
   $$16180$i$i = $$16180$i$i + 1 | 0;
  } while (($$16180$i$i | 0) != ($28 | 0));
  if ((HEAP32[$0 + 44 >> 2] | 0) == 2) {
   $$05866$us$us$i$us$i = 0;
   $$26264$us$us$i$us$i = 0;
   $$265$us$us$i$us$i = $$05981$i$i;
   while (1) {
    $51 = $26 + 32 + (HEAP32[17004 + ($$26264$us$us$i$us$i << 2) >> 2] << 2) | 0;
    $52 = HEAP32[$51 >> 2] | 0;
    $54 = $52 + 1 | 0;
    $55 = Math_imul(($$265$us$us$i$us$i | 0) / ($52 | 0) | 0, $54) | 0;
    if (($55 | 0) <= ($34 | 0)) {
     HEAP32[$51 >> 2] = $54;
     $57 = $$26264$us$us$i$us$i + 1 | 0;
     if (($57 | 0) < ($28 | 0)) {
      $$05866$us$us$i$us$i$be = 1;
      $$26264$us$us$i$us$i$be = $57;
      $$265$us$us$i$us$i$be = $55;
     } else {
      $$058$lcssa$us$i$ph$us$i = 1;
      $$2$lcssa$us$i$ph$us$i = $55;
      label = 22;
     }
    } else {
     $$058$lcssa$us$i$ph$us$i = $$05866$us$us$i$us$i;
     $$2$lcssa$us$i$ph$us$i = $$265$us$us$i$us$i;
     label = 22;
    }
    if ((label | 0) == 22) {
     label = 0;
     if (!$$058$lcssa$us$i$ph$us$i) {
      $$2$lcssa$lcssa$i$i = $$2$lcssa$us$i$ph$us$i;
      break L19;
     } else {
      $$05866$us$us$i$us$i$be = 0;
      $$26264$us$us$i$us$i$be = 0;
      $$265$us$us$i$us$i$be = $$2$lcssa$us$i$ph$us$i;
     }
    }
    $$05866$us$us$i$us$i = $$05866$us$us$i$us$i$be;
    $$26264$us$us$i$us$i = $$26264$us$us$i$us$i$be;
    $$265$us$us$i$us$i = $$265$us$us$i$us$i$be;
   }
  } else {
   $$05866$us71$i$i = 0;
   $$26264$us73$i$i = 0;
   $$265$us72$i$i = $$05981$i$i;
   while (1) {
    $60 = $26 + 32 + ($$26264$us73$i$i << 2) | 0;
    $61 = HEAP32[$60 >> 2] | 0;
    $63 = $61 + 1 | 0;
    $64 = Math_imul(($$265$us72$i$i | 0) / ($61 | 0) | 0, $63) | 0;
    if (($64 | 0) <= ($34 | 0)) {
     HEAP32[$60 >> 2] = $63;
     $66 = $$26264$us73$i$i + 1 | 0;
     if (($66 | 0) < ($28 | 0)) {
      $$05866$us71$i$i$be = 1;
      $$26264$us73$i$i$be = $66;
      $$265$us72$i$i$be = $64;
     } else {
      $$058$lcssa$us$i$ph87$i = 1;
      $$2$lcssa$us$i$ph86$i = $64;
      label = 26;
     }
    } else {
     $$058$lcssa$us$i$ph87$i = $$05866$us71$i$i;
     $$2$lcssa$us$i$ph86$i = $$265$us72$i$i;
     label = 26;
    }
    if ((label | 0) == 26) {
     label = 0;
     if (!$$058$lcssa$us$i$ph87$i) {
      $$2$lcssa$lcssa$i$i = $$2$lcssa$us$i$ph86$i;
      break L19;
     } else {
      $$05866$us71$i$i$be = 0;
      $$26264$us73$i$i$be = 0;
      $$265$us72$i$i$be = $$2$lcssa$us$i$ph86$i;
     }
    }
    $$05866$us71$i$i = $$05866$us71$i$i$be;
    $$26264$us73$i$i = $$26264$us73$i$i$be;
    $$265$us72$i$i = $$265$us72$i$i$be;
   }
  }
 } else $$2$lcssa$lcssa$i$i = 1; while (0);
 $71 = HEAP32[$0 >> 2] | 0;
 if ((HEAP32[$10 >> 2] | 0) == 3) {
  HEAP32[$71 + 24 >> 2] = $$2$lcssa$lcssa$i$i;
  HEAP32[$71 + 28 >> 2] = HEAP32[$27 >> 2];
  HEAP32[$71 + 32 >> 2] = HEAP32[$26 + 36 >> 2];
  HEAP32[$71 + 36 >> 2] = HEAP32[$26 + 40 >> 2];
  HEAP32[$71 + 20 >> 2] = 96;
  FUNCTION_TABLE_vii[HEAP32[$71 + 4 >> 2] & 255]($0, 1);
 } else {
  HEAP32[$71 + 20 >> 2] = 97;
  HEAP32[$71 + 24 >> 2] = $$2$lcssa$lcssa$i$i;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
 }
 $93 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 15]($0, 1, $$2$lcssa$lcssa$i$i, HEAP32[$10 >> 2] | 0) | 0;
 $94 = HEAP32[$10 >> 2] | 0;
 if (($94 | 0) > 0) {
  $$0107$i = 0;
  $$083106$i = $$2$lcssa$lcssa$i$i;
  $140 = $94;
  while (1) {
   $97 = HEAP32[$26 + 32 + ($$0107$i << 2) >> 2] | 0;
   $$083106$i$looptemp = $$083106$i;
   $$083106$i = ($$083106$i | 0) / ($97 | 0) | 0;
   if (($97 | 0) > 0 ? ($100 = $97 + -1 | 0, $101 = ($100 | 0) / 2 | 0, $103 = $93 + ($$0107$i << 2) | 0, ($$083106$i | 0) > 0) : 0) {
    $$08195$us$i = 0;
    do {
     $104 = Math_imul($$08195$us$i, $$083106$i) | 0;
     if (($104 | 0) < ($$2$lcssa$lcssa$i$i | 0)) {
      $110 = ((($$08195$us$i * 255 | 0) + $101 | 0) / ($100 | 0) | 0) & 255;
      $$08290$us$us$i = $104;
      do {
       $$08489$us$us$i = 0;
       do {
        HEAP8[(HEAP32[$103 >> 2] | 0) + ($$08489$us$us$i + $$08290$us$us$i) >> 0] = $110;
        $$08489$us$us$i = $$08489$us$us$i + 1 | 0;
       } while (($$08489$us$us$i | 0) != ($$083106$i | 0));
       $$08290$us$us$i = $$08290$us$us$i + $$083106$i$looptemp | 0;
      } while (($$08290$us$us$i | 0) < ($$2$lcssa$lcssa$i$i | 0));
     }
     $$08195$us$i = $$08195$us$i + 1 | 0;
    } while (($$08195$us$i | 0) != ($97 | 0));
    $119 = HEAP32[$10 >> 2] | 0;
   } else $119 = $140;
   $$0107$i = $$0107$i + 1 | 0;
   if (($$0107$i | 0) >= ($119 | 0)) break; else $140 = $119;
  }
 }
 HEAP32[$26 + 16 >> 2] = $93;
 HEAP32[$26 + 20 >> 2] = $$2$lcssa$lcssa$i$i;
 _create_colorindex($0);
 if ((HEAP32[$0 + 88 >> 2] | 0) != 2) return;
 $125 = HEAP32[$5 >> 2] | 0;
 $129 = (HEAP32[$0 + 112 >> 2] << 1) + 4 | 0;
 if ((HEAP32[$10 >> 2] | 0) <= 0) return;
 $$014$i = 0;
 do {
  $135 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 63]($0, 1, $129) | 0;
  HEAP32[$125 + 68 + ($$014$i << 2) >> 2] = $135;
  $$014$i = $$014$i + 1 | 0;
 } while (($$014$i | 0) < (HEAP32[$10 >> 2] | 0));
 return;
}

function __ZN6vision26PreemptiveRobustHomographyIfEEbPT_PKS1_S4_iS4_iRNSt3__26vectorIS1_NS5_9allocatorIS1_EEEERNS6_IiNS7_IiEEEERNS6_INS5_4pairIS1_iEENS7_ISF_EEEES1_iii($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = +$9;
 $10 = $10 | 0;
 $11 = $11 | 0;
 $12 = $12 | 0;
 var $$0 = 0, $$0156 = 0, $$0157 = 0, $$0158 = 0, $$0159 = 0, $$0160 = 0, $$0161 = 0, $$0162 = 0.0, $$0163 = 0, $$0165 = 0, $$0166 = 0, $$1 = 0.0, $$1164 = 0, $$1167 = 0, $106 = 0, $110 = 0, $113 = 0, $116 = 0, $119 = 0, $13 = 0, $131 = 0.0, $133 = 0, $14 = 0, $141 = 0, $147 = 0, $148 = 0, $154 = 0, $159 = 0, $162 = 0.0, $163 = 0, $164 = 0, $173 = 0.0, $178 = 0, $27 = 0, $32 = 0, $36 = 0, $39 = 0, $43 = 0, $49 = 0, $54 = 0, $58 = 0, $70 = 0, $75 = 0, $79 = 0, $81 = 0.0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $90 = 0, $93 = 0, $96 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $13 = sp + 8 | 0;
 $14 = sp;
 if ((HEAP32[$6 + 4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) >> 2 >>> 0 < ($10 * 9 | 0) >>> 0) {
  $27 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 35532) | 0, 35590) | 0, 39072) | 0, 119) | 0, 39079) | 0, 35684) | 0;
  __ZNKSt3__28ios_base6getlocEv($13, $27 + (HEAP32[(HEAP32[$27 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $32 = __ZNKSt3__26locale9use_facetERNS0_2idE($13, 66512) | 0;
  $36 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 28 >> 2] & 127]($32, 10) | 0;
  __ZNSt3__26localeD2Ev($13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($27, $36) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($27) | 0;
  _abort();
 }
 $39 = HEAP32[$7 >> 2] | 0;
 $43 = $39;
 if ((HEAP32[$7 + 4 >> 2] | 0) - $39 >> 2 >>> 0 < $3 >>> 0) {
  $49 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 35734) | 0, 35590) | 0, 39072) | 0, 120) | 0, 39079) | 0, 35784) | 0;
  __ZNKSt3__28ios_base6getlocEv($13, $49 + (HEAP32[(HEAP32[$49 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $54 = __ZNKSt3__26locale9use_facetERNS0_2idE($13, 66512) | 0;
  $58 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$54 >> 2] | 0) + 28 >> 2] & 127]($54, 10) | 0;
  __ZNSt3__26localeD2Ev($13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($49, $58) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($49) | 0;
  _abort();
 }
 if ((HEAP32[$8 + 4 >> 2] | 0) - (HEAP32[$8 >> 2] | 0) >> 3 >>> 0 < $10 >>> 0) {
  $70 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 35826) | 0, 35590) | 0, 39072) | 0, 121) | 0, 39079) | 0, 35888) | 0;
  __ZNKSt3__28ios_base6getlocEv($13, $70 + (HEAP32[(HEAP32[$70 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $75 = __ZNKSt3__26locale9use_facetERNS0_2idE($13, 66512) | 0;
  $79 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$75 >> 2] | 0) + 28 >> 2] & 127]($75, 10) | 0;
  __ZNSt3__26localeD2Ev($13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($70, $79) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($70) | 0;
  _abort();
 }
 if (($3 | 0) >= 4) {
  HEAP32[$14 >> 2] = 1234;
  $81 = +__ZN6vision3sqrIfEET_S1_($9);
  $82 = __ZN6vision4min2IiEET_S1_S1_($12, $3) | 0;
  __ZN6vision16SequentialVectorIiEEvPT_iS1_($43, $3, 0);
  __ZN6vision12ArrayShuffleIiEEvPT_iiRi($43, $3, $3, $14);
  $83 = $43 + 4 | 0;
  $84 = $43 + 8 | 0;
  $85 = $43 + 12 | 0;
  $86 = ($5 | 0) > 0;
  $$0161 = 0;
  $$0166 = 0;
  while (1) {
   if (!(($$0166 | 0) < ($10 | 0) & ($$0161 | 0) < ($11 | 0))) break;
   __ZN6vision12ArrayShuffleIiEEvPT_iiRi($43, $3, 4, $14);
   $90 = HEAP32[$43 >> 2] << 1;
   $93 = HEAP32[$83 >> 2] << 1;
   $96 = HEAP32[$84 >> 2] << 1;
   $99 = HEAP32[$85 >> 2] << 1;
   do if (__ZN6vision40Homography4PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_S3_S3_($1 + ($90 << 2) | 0, $1 + ($93 << 2) | 0, $1 + ($96 << 2) | 0, $1 + ($99 << 2) | 0, $2 + ($90 << 2) | 0, $2 + ($93 << 2) | 0, $2 + ($96 << 2) | 0, $2 + ($99 << 2) | 0) | 0 ? ($106 = $$0166 * 9 | 0, $110 = HEAP32[$43 >> 2] << 1, $113 = HEAP32[$83 >> 2] << 1, $116 = HEAP32[$84 >> 2] << 1, $119 = HEAP32[$85 >> 2] << 1, __ZN6vision22SolveHomography4PointsIfEEbPT_PKS1_S4_S4_S4_S4_S4_S4_S4_((HEAP32[$6 >> 2] | 0) + ($106 << 2) | 0, $1 + ($110 << 2) | 0, $1 + ($113 << 2) | 0, $1 + ($116 << 2) | 0, $1 + ($119 << 2) | 0, $2 + ($110 << 2) | 0, $2 + ($113 << 2) | 0, $2 + ($116 << 2) | 0, $2 + ($119 << 2) | 0) | 0) : 0) {
    if ($86 ? !(__ZN6vision39HomographyPointsGeometricallyConsistentIfEEbPKT_S3_i((HEAP32[$6 >> 2] | 0) + ($106 << 2) | 0, $4, $5) | 0) : 0) {
     $$1167 = $$0166;
     break;
    }
    $$1167 = $$0166 + 1 | 0;
   } else $$1167 = $$0166; while (0);
   $$0161 = $$0161 + 1 | 0;
   $$0166 = $$1167;
  }
  $131 = 1.0 / $81;
  if ($$0166) {
   $133 = HEAP32[$8 >> 2] | 0;
   $$0160 = 0;
   while (1) {
    if (($$0160 | 0) >= ($$0166 | 0)) break;
    HEAPF32[$133 + ($$0160 << 3) >> 2] = 0.0;
    HEAP32[$133 + ($$0160 << 3) + 4 >> 2] = $$0160;
    $$0160 = $$0160 + 1 | 0;
   }
   $$0159 = 0;
   $$0165 = $$0166;
   while (1) {
    if (!(($$0165 | 0) > 2 & ($$0159 | 0) < ($3 | 0))) break;
    $147 = (__ZN6vision4min2IiEET_S1_S1_($82, $3 - $$0159 | 0) | 0) + $$0159 | 0;
    $$0158 = 0;
    $148 = HEAP32[$8 >> 2] | 0;
    while (1) {
     if (($$0158 | 0) == ($$0165 | 0)) break;
     $154 = (HEAP32[$6 >> 2] | 0) + ((HEAP32[$148 + ($$0158 << 3) + 4 >> 2] | 0) * 9 << 2) | 0;
     $$0156 = $$0159;
     $178 = $148;
     while (1) {
      if (($$0156 | 0) >= ($147 | 0)) break;
      $159 = HEAP32[$43 + ($$0156 << 2) >> 2] << 1;
      $162 = +__ZN6vision32CauchyProjectiveReprojectionCostIfEET_PKS1_S3_S3_S1_($154, $1 + ($159 << 2) | 0, $2 + ($159 << 2) | 0, $131);
      $163 = HEAP32[$8 >> 2] | 0;
      $164 = $163 + ($$0158 << 3) | 0;
      HEAPF32[$164 >> 2] = $162 + +HEAPF32[$164 >> 2];
      $$0156 = $$0156 + 1 | 0;
      $178 = $163;
     }
     $$0158 = $$0158 + 1 | 0;
     $148 = $178;
    }
    __ZN6vision10FastMedianIfiEENSt3__24pairIT_T0_EEPS5_i($13, $148, $$0165);
    $$0159 = $147;
    $$0165 = $$0165 >> 1;
   }
   $141 = HEAP32[$8 >> 2] | 0;
   $$0 = 1;
   $$0162 = +HEAPF32[$141 >> 2];
   $$0163 = HEAP32[$141 + 4 >> 2] | 0;
   while (1) {
    if (($$0 | 0) >= ($$0165 | 0)) break;
    $173 = +HEAPF32[$141 + ($$0 << 3) >> 2];
    if ($173 < $$0162) {
     $$1 = $173;
     $$1164 = HEAP32[$141 + ($$0 << 3) + 4 >> 2] | 0;
    } else {
     $$1 = $$0162;
     $$1164 = $$0163;
    }
    $$0 = $$0 + 1 | 0;
    $$0162 = $$1;
    $$0163 = $$1164;
   }
   __ZN6vision11CopyVector9IfEEvPT_PKS1_($0, (HEAP32[$6 >> 2] | 0) + ($$0163 * 9 << 2) | 0);
   __ZN6vision19NormalizeHomographyIfEEvPT_($0);
   $$0157 = 1;
  } else $$0157 = 0;
 } else $$0157 = 0;
 STACKTOP = sp;
 return $$0157 | 0;
}

function _jpeg_idct_16x8($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0360370 = 0, $$0362369 = 0, $$0364368 = 0, $$0371 = 0, $$1367 = 0, $$2366 = 0, $$sink = 0, $$sink373 = 0, $100 = 0, $101 = 0, $103 = 0, $106 = 0, $107 = 0, $109 = 0, $11 = 0, $113 = 0, $115 = 0, $117 = 0, $121 = 0, $123 = 0, $13 = 0, $149 = 0, $152 = 0, $155 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $165 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $172 = 0, $174 = 0, $176 = 0, $178 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $188 = 0, $190 = 0, $192 = 0, $194 = 0, $195 = 0, $197 = 0, $198 = 0, $200 = 0, $202 = 0, $203 = 0, $205 = 0, $209 = 0, $213 = 0, $215 = 0, $221 = 0, $226 = 0, $227 = 0, $230 = 0, $234 = 0, $240 = 0, $242 = 0, $243 = 0, $244 = 0, $246 = 0, $247 = 0, $248 = 0, $35 = 0, $5 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $58 = 0, $61 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $83 = 0, $89 = 0, $95 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0360370 = $5;
 $$0362369 = HEAP32[$1 + 84 >> 2] | 0;
 $$0364368 = $2;
 $$0371 = 8;
 while (1) {
  $11 = HEAP16[$$0364368 + 16 >> 1] | 0;
  $13 = HEAP16[$$0364368 + 32 >> 1] | 0;
  if (!(($11 | $13) << 16 >> 16)) if (((((HEAP16[$$0364368 + 48 >> 1] | 0) == 0 ? (HEAP16[$$0364368 + 64 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0364368 + 80 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0364368 + 96 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0364368 + 112 >> 1] | 0) == 0 : 0) {
   $35 = Math_imul(HEAP16[$$0364368 >> 1] << 2, HEAP32[$$0362369 >> 2] | 0) | 0;
   HEAP32[$$0360370 >> 2] = $35;
   HEAP32[$$0360370 + 32 >> 2] = $35;
   HEAP32[$$0360370 + 64 >> 2] = $35;
   HEAP32[$$0360370 + 96 >> 2] = $35;
   HEAP32[$$0360370 + 128 >> 2] = $35;
   HEAP32[$$0360370 + 160 >> 2] = $35;
   HEAP32[$$0360370 + 192 >> 2] = $35;
   $$sink = $35;
   $$sink373 = 56;
  } else {
   $58 = 0;
   label = 9;
  } else {
   $58 = $13;
   label = 9;
  }
  if ((label | 0) == 9) {
   label = 0;
   $53 = Math_imul(HEAP16[$$0364368 + 64 >> 1] << 13, HEAP32[$$0362369 + 128 >> 2] | 0) | 0;
   $54 = Math_imul(HEAP16[$$0364368 >> 1] << 13, HEAP32[$$0362369 >> 2] | 0) | 0 | 1024;
   $55 = $53 + $54 | 0;
   $56 = $54 - $53 | 0;
   $61 = Math_imul(HEAP32[$$0362369 + 64 >> 2] | 0, $58 << 16 >> 16) | 0;
   $67 = Math_imul(HEAP32[$$0362369 + 192 >> 2] | 0, HEAP16[$$0364368 + 96 >> 1] | 0) | 0;
   $69 = ($67 + $61 | 0) * 4433 | 0;
   $71 = $69 + ($61 * 6270 | 0) | 0;
   $73 = $69 + (Math_imul($67, -15137) | 0) | 0;
   $74 = $71 + $55 | 0;
   $75 = $55 - $71 | 0;
   $76 = $73 + $56 | 0;
   $77 = $56 - $73 | 0;
   $83 = Math_imul(HEAP32[$$0362369 + 224 >> 2] | 0, HEAP16[$$0364368 + 112 >> 1] | 0) | 0;
   $89 = Math_imul(HEAP32[$$0362369 + 160 >> 2] | 0, HEAP16[$$0364368 + 80 >> 1] | 0) | 0;
   $95 = Math_imul(HEAP32[$$0362369 + 96 >> 2] | 0, HEAP16[$$0364368 + 48 >> 1] | 0) | 0;
   $99 = Math_imul(HEAP32[$$0362369 + 32 >> 2] | 0, $11 << 16 >> 16) | 0;
   $100 = $95 + $83 | 0;
   $101 = $99 + $89 | 0;
   $103 = ($101 + $100 | 0) * 9633 | 0;
   $106 = $103 + (Math_imul($100, -16069) | 0) | 0;
   $107 = $103 + (Math_imul($101, -3196) | 0) | 0;
   $109 = Math_imul($99 + $83 | 0, -7373) | 0;
   $113 = $109 + ($83 * 2446 | 0) + $106 | 0;
   $115 = $109 + ($99 * 12299 | 0) + $107 | 0;
   $117 = Math_imul($95 + $89 | 0, -20995) | 0;
   $121 = $117 + ($89 * 16819 | 0) + $107 | 0;
   $123 = $117 + ($95 * 25172 | 0) + $106 | 0;
   HEAP32[$$0360370 >> 2] = $115 + $74 >> 11;
   HEAP32[$$0360370 + 224 >> 2] = $74 - $115 >> 11;
   HEAP32[$$0360370 + 32 >> 2] = $123 + $76 >> 11;
   HEAP32[$$0360370 + 192 >> 2] = $76 - $123 >> 11;
   HEAP32[$$0360370 + 64 >> 2] = $121 + $77 >> 11;
   HEAP32[$$0360370 + 160 >> 2] = $77 - $121 >> 11;
   HEAP32[$$0360370 + 96 >> 2] = $113 + $75 >> 11;
   $$sink = $75 - $113 >> 11;
   $$sink373 = 32;
  }
  HEAP32[$$0360370 + ($$sink373 << 2) >> 2] = $$sink;
  if ($$0371 >>> 0 > 1) {
   $$0360370 = $$0360370 + 4 | 0;
   $$0362369 = $$0362369 + 4 | 0;
   $$0364368 = $$0364368 + 2 | 0;
   $$0371 = $$0371 + -1 | 0;
  } else break;
 }
 $149 = $7 + -384 | 0;
 $$1367 = 0;
 $$2366 = $5;
 while (1) {
  $152 = (HEAP32[$3 + ($$1367 << 2) >> 2] | 0) + $4 | 0;
  $155 = (HEAP32[$$2366 >> 2] << 13) + 134348800 | 0;
  $157 = HEAP32[$$2366 + 16 >> 2] | 0;
  $158 = $157 * 10703 | 0;
  $159 = $157 * 4433 | 0;
  $160 = $155 + $158 | 0;
  $161 = $155 - $158 | 0;
  $162 = $155 + $159 | 0;
  $163 = $155 - $159 | 0;
  $165 = HEAP32[$$2366 + 8 >> 2] | 0;
  $167 = HEAP32[$$2366 + 24 >> 2] | 0;
  $168 = $165 - $167 | 0;
  $169 = $168 * 2260 | 0;
  $170 = $168 * 11363 | 0;
  $172 = $170 + ($167 * 20995 | 0) | 0;
  $174 = $169 + ($165 * 7373 | 0) | 0;
  $176 = $170 + (Math_imul($165, -4926) | 0) | 0;
  $178 = $169 + (Math_imul($167, -4176) | 0) | 0;
  $179 = $172 + $160 | 0;
  $180 = $160 - $172 | 0;
  $181 = $174 + $162 | 0;
  $182 = $162 - $174 | 0;
  $183 = $176 + $163 | 0;
  $184 = $163 - $176 | 0;
  $185 = $178 + $161 | 0;
  $186 = $161 - $178 | 0;
  $188 = HEAP32[$$2366 + 4 >> 2] | 0;
  $190 = HEAP32[$$2366 + 12 >> 2] | 0;
  $192 = HEAP32[$$2366 + 20 >> 2] | 0;
  $194 = HEAP32[$$2366 + 28 >> 2] | 0;
  $195 = $192 + $188 | 0;
  $197 = ($190 + $188 | 0) * 11086 | 0;
  $198 = $195 * 10217 | 0;
  $200 = ($194 + $188 | 0) * 8956 | 0;
  $202 = ($188 - $194 | 0) * 7350 | 0;
  $203 = $195 * 5461 | 0;
  $205 = ($188 - $190 | 0) * 3363 | 0;
  $209 = $197 + (Math_imul($188, -18730) | 0) + $198 + $200 | 0;
  $213 = $205 + (Math_imul($188, -15038) | 0) + $203 + $202 | 0;
  $215 = ($192 + $190 | 0) * 1136 | 0;
  $221 = ($192 - $190 | 0) * 11529 | 0;
  $226 = $194 + $190 | 0;
  $227 = Math_imul($226, -5461) | 0;
  $230 = $197 + ($190 * 589 | 0) + $215 + $227 | 0;
  $234 = Math_imul($226, -10217) | 0;
  $240 = $205 + ($190 * 16154 | 0) + $221 + $234 | 0;
  $242 = Math_imul($194 + $192 | 0, -11086) | 0;
  $243 = $215 + (Math_imul($192, -9222) | 0) + $198 + $242 | 0;
  $244 = $227 + ($194 * 8728 | 0) + $200 + $242 | 0;
  $246 = ($194 - $192 | 0) * 3363 | 0;
  $247 = $234 + ($194 * 25733 | 0) + $202 + $246 | 0;
  $248 = $221 + (Math_imul($192, -6278) | 0) + $203 + $246 | 0;
  HEAP8[$152 >> 0] = HEAP8[$149 + (($209 + $179 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 15 >> 0] = HEAP8[$149 + (($179 - $209 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 1 >> 0] = HEAP8[$149 + (($230 + $181 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 14 >> 0] = HEAP8[$149 + (($181 - $230 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 2 >> 0] = HEAP8[$149 + (($243 + $183 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 13 >> 0] = HEAP8[$149 + (($183 - $243 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 3 >> 0] = HEAP8[$149 + (($244 + $185 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 12 >> 0] = HEAP8[$149 + (($185 - $244 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 4 >> 0] = HEAP8[$149 + (($247 + $186 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 11 >> 0] = HEAP8[$149 + (($186 - $247 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 5 >> 0] = HEAP8[$149 + (($248 + $184 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 10 >> 0] = HEAP8[$149 + (($184 - $248 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 6 >> 0] = HEAP8[$149 + (($240 + $182 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 9 >> 0] = HEAP8[$149 + (($182 - $240 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 7 >> 0] = HEAP8[$149 + (($213 + $180 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$152 + 8 >> 0] = HEAP8[$149 + (($180 - $213 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1367 = $$1367 + 1 | 0;
  if (($$1367 | 0) == 8) break; else $$2366 = $$2366 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN46EmscriptenBindingInitializer_constant_bindingsC2Ev($this) {
 $this = $this | 0;
 var $ref$tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $ref$tmp = sp;
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(39245, 26);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39251, 67);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39260, 68);
 __ZN10emscripten8functionIiJiNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_(39269, 44);
 __ZN10emscripten8functionIiJiNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_(39280, 45);
 __ZN10emscripten8functionIiJiNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_(39296, 46);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(39310, 47);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39328, 69);
 __ZN10emscripten8functionIiJNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_(39348, 70);
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(39360, 27);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(39377, 48);
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(39397, 28);
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(39415, 29);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(39437, 49);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(39460, 50);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39489, 71);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39502, 72);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39515, 73);
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(39531, 30);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(39550, 51);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(39560, 52);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(39573, 53);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39586, 74);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39599, 75);
 __ZN10emscripten8functionIvJiEJEEEvPKcPFT_DpT0_EDpT1_(39618, 183);
 __ZN10emscripten8functionIiJEJEEEvPKcPFT_DpT0_EDpT1_(39630, 1);
 __ZN10emscripten8functionIvJidEJEEEvPKcPFT_DpT0_EDpT1_(39642, 1);
 __ZN10emscripten8functionIdJiEJEEEvPKcPFT_DpT0_EDpT1_(39665, 1);
 __ZN10emscripten8functionIvJidEJEEEvPKcPFT_DpT0_EDpT1_(39688, 2);
 __ZN10emscripten8functionIdJiEJEEEvPKcPFT_DpT0_EDpT1_(39710, 2);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(39732, 126);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39749, 76);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(39766, 127);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39779, 77);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(39792, 128);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39816, 78);
 __ZN10emscripten8functionIvJifEJEEEvPKcPFT_DpT0_EDpT1_(39840, 3);
 __ZN10emscripten8functionIdJiEJEEEvPKcPFT_DpT0_EDpT1_(39853, 3);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(39866, 129);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39884, 79);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(39902, 130);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39918, 80);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(39934, 131);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(39951, 81);
 __ZN10emscripten8constantIiEEvPKcRKT_(39968, 16896);
 __ZN10emscripten8constantIiEEvPKcRKT_(39997, 16900);
 __ZN10emscripten8constantIiEEvPKcRKT_(40025, 16904);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40058, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(40075, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40091, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40113, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(40138, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(40163, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 100;
 __ZN10emscripten8constantIiEEvPKcRKT_(40188, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40215, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(40241, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40267, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40294, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(40321, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(40347, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(40372, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 4;
 __ZN10emscripten8constantIiEEvPKcRKT_(40410, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40447, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40481, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(40505, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(40531, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(40558, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 5;
 __ZN10emscripten8constantIiEEvPKcRKT_(40592, $ref$tmp);
 HEAPF64[$ref$tmp >> 3] = .5;
 __ZN10emscripten8constantIdEEvPKcRKT_(40610, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40631, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(40650, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(40668, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(40686, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 4;
 __ZN10emscripten8constantIiEEvPKcRKT_(40705, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(40727, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 515;
 __ZN10emscripten8constantIiEEvPKcRKT_(40746, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 259;
 __ZN10emscripten8constantIiEEvPKcRKT_(40775, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 4;
 __ZN10emscripten8constantIiEEvPKcRKT_(40803, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 772;
 __ZN10emscripten8constantIiEEvPKcRKT_(40822, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1028;
 __ZN10emscripten8constantIiEEvPKcRKT_(40852, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40882, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(40913, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(40949, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(40983, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(41021, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(41054, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(41101, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(41143, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 4;
 __ZN10emscripten8constantIiEEvPKcRKT_(41186, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 5;
 __ZN10emscripten8constantIiEEvPKcRKT_(41238, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 6;
 __ZN10emscripten8constantIiEEvPKcRKT_(41289, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 7;
 __ZN10emscripten8constantIiEEvPKcRKT_(41334, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 8;
 __ZN10emscripten8constantIiEEvPKcRKT_(41373, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 9;
 __ZN10emscripten8constantIiEEvPKcRKT_(41418, $ref$tmp);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseFunctionTypeEv($0) {
 $0 = $0 | 0;
 var $$7 = 0, $$8 = 0, $$9 = 0, $$byval_copy5 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 $$byval_copy5 = sp + 64 | 0;
 $1 = sp + 28 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 56 | 0;
 $4 = sp + 48 | 0;
 $5 = sp + 40 | 0;
 $6 = sp + 32 | 0;
 $7 = sp;
 $8 = sp + 72 | 0;
 $9 = sp + 16 | 0;
 $10 = sp + 8 | 0;
 $11 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCVQualifiersEv($0) | 0;
 HEAP32[$1 >> 2] = $11;
 HEAP32[$2 >> 2] = 0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 56311);
 HEAP32[$$byval_copy5 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 do if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy5) | 0)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 56323);
  HEAP32[$$byval_copy5 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy5) | 0) {
   $16 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$$byval_copy5 >> 2] = $16;
   if (!$16) {
    $$9 = 0;
    break;
   }
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
    $19 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12NoexceptSpecEJRPNS0_4NodeEEEES9_DpOT0_($0, $$byval_copy5) | 0;
    HEAP32[$2 >> 2] = $19;
    label = 14;
    break;
   } else {
    $$9 = 0;
    break;
   }
  }
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 56326);
  HEAP32[$$byval_copy5 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy5) | 0) {
   $21 = $0 + 8 | 0;
   $22 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($21) | 0;
   while (1) {
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
     label = 12;
     break;
    }
    $25 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
    HEAP32[$$byval_copy5 >> 2] = $25;
    if (!$25) {
     label = 13;
     break;
    }
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($21, $$byval_copy5);
   }
   if ((label | 0) == 12) {
    __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($$byval_copy5, $0, $22);
    $27 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20DynamicExceptionSpecEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0, $$byval_copy5) | 0;
    HEAP32[$2 >> 2] = $27;
    label = 14;
    break;
   } else if ((label | 0) == 13) {
    $$9 = 0;
    break;
   }
  } else label = 14;
 } else {
  $13 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA9_KcEEEPNS0_4NodeEDpOT0_($0, 56314) | 0;
  HEAP32[$2 >> 2] = $13;
  label = 14;
 } while (0);
 if ((label | 0) == 14) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($6, 56329);
  HEAP32[$$byval_copy5 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy5) | 0;
  if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 70) | 0) {
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 89) | 0;
   $29 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   $30 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($29) | 0;
   HEAP32[$7 >> 2] = $30;
   if (!$30) $$8 = 0; else {
    HEAP8[$8 >> 0] = 0;
    $32 = $0 + 8 | 0;
    $33 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($32) | 0;
    while (1) {
     if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
      label = 27;
      break;
     }
     if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 118) | 0)) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($9, 56332);
      HEAP32[$$byval_copy5 >> 2] = HEAP32[$9 >> 2];
      HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
      if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy5) | 0) {
       label = 21;
       break;
      }
      __ZN12_GLOBAL__N_110StringViewC2EPKc($10, 56335);
      HEAP32[$$byval_copy5 >> 2] = HEAP32[$10 >> 2];
      HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
      if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy5) | 0) {
       label = 23;
       break;
      }
      $38 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($29) | 0;
      HEAP32[$$byval_copy5 >> 2] = $38;
      if (!$38) {
       label = 26;
       break;
      }
      __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($32, $$byval_copy5);
     }
    }
    if ((label | 0) == 21) {
     HEAP8[$8 >> 0] = 1;
     label = 27;
    } else if ((label | 0) == 23) {
     HEAP8[$8 >> 0] = 2;
     label = 27;
    } else if ((label | 0) == 26) $$7 = 0;
    if ((label | 0) == 27) {
     __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($$byval_copy5, $0, $33);
     $$7 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12FunctionTypeEJRPNS0_4NodeERNS0_9NodeArrayERNS0_10QualifiersERNS0_15FunctionRefQualESA_EEES9_DpOT0_($0, $7, $$byval_copy5, $1, $8, $2) | 0;
    }
    $$8 = $$7;
   }
   $$9 = $$8;
  } else $$9 = 0;
 }
 STACKTOP = sp;
 return $$9 | 0;
}

function __ZN6vision18binomial_4th_orderEPfPtPKhmm($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0254 = 0, $$0255 = 0, $$0256 = 0, $$0257 = 0, $$0258 = 0, $$0259 = 0, $$0260 = 0, $$0275 = 0, $$0280 = 0, $$0281 = 0, $$0283 = 0, $$0284 = 0, $$1 = 0, $$1261 = 0, $$1266 = 0, $$1276 = 0, $$1282 = 0, $$1285 = 0, $$2 = 0, $$2262 = 0, $$2267 = 0, $$2272 = 0, $$2277 = 0, $$2286 = 0, $$3263 = 0, $$3268 = 0, $$3273 = 0, $$3278 = 0, $$3287 = 0, $$4269 = 0, $$4274 = 0, $$4279 = 0, $$4288 = 0, $100 = 0, $12 = 0, $121 = 0, $143 = 0, $164 = 0, $17 = 0, $184 = 0, $185 = 0, $186 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $21 = 0, $227 = 0, $228 = 0, $239 = 0, $256 = 0, $28 = 0, $33 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $54 = 0, $66 = 0, $79 = 0, $83 = 0, $86 = 0, $88 = 0, $scevgep = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 if ($3 >>> 0 <= 4) {
  $12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 31119) | 0, 31153) | 0, 39072) | 0, 55) | 0, 39079) | 0, 31248) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 127]($17, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  _abort();
 }
 if ($4 >>> 0 <= 4) {
  $28 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 31267) | 0, 31153) | 0, 39072) | 0, 56) | 0, 39079) | 0, 31248) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $28 + (HEAP32[(HEAP32[$28 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $33 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $37 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$33 >> 2] | 0) + 28 >> 2] & 127]($33, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($28, $37) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($28) | 0;
  _abort();
 }
 $38 = $3 + -1 | 0;
 $39 = $3 + -2 | 0;
 $40 = $3 + -3 | 0;
 $41 = $3 + -4 | 0;
 $$0281 = $1;
 $$0283 = 0;
 while (1) {
  if (($$0283 | 0) == ($4 | 0)) break;
  $46 = $2 + (Math_imul($$0283, $3) | 0) | 0;
  $48 = HEAPU8[$46 >> 0] | 0;
  $49 = $46 + 1 | 0;
  $54 = $46 + 2 | 0;
  HEAP16[$$0281 >> 1] = ($48 * 7 | 0) + (HEAPU8[$54 >> 0] | 0) + ((HEAPU8[$49 >> 0] | 0) + $48 << 2);
  $66 = HEAPU8[$46 >> 0] | 0;
  HEAP16[$$0281 + 2 >> 1] = ((HEAPU8[$49 >> 0] | 0) * 6 | 0) + $66 + (HEAPU8[$46 + 3 >> 0] | 0) + ((HEAPU8[$54 >> 0] | 0) + $66 << 2);
  $$0280 = 2;
  $$1282 = $$0281 + 4 | 0;
  while (1) {
   if (($$0280 | 0) == ($39 | 0)) break;
   $121 = $$0280 + 1 | 0;
   HEAP16[$$1282 >> 1] = ((HEAPU8[$46 + $$0280 >> 0] | 0) * 6 | 0) + (HEAPU8[$46 + ($$0280 + -2) >> 0] | 0) + ((HEAPU8[$46 + $121 >> 0] | 0) + (HEAPU8[$46 + ($$0280 + -1) >> 0] | 0) << 2) + (HEAPU8[$46 + ($$0280 + 2) >> 0] | 0);
   $$0280 = $121;
   $$1282 = $$1282 + 2 | 0;
  }
  $scevgep = $$0281 + ($39 << 1) | 0;
  $79 = $46 + $39 | 0;
  $83 = $46 + $40 | 0;
  $86 = $46 + $38 | 0;
  $88 = HEAPU8[$86 >> 0] | 0;
  HEAP16[$scevgep >> 1] = ((HEAPU8[$79 >> 0] | 0) * 6 | 0) + $88 + (HEAPU8[$46 + $41 >> 0] | 0) + ($88 + (HEAPU8[$83 >> 0] | 0) << 2);
  $100 = HEAPU8[$86 >> 0] | 0;
  HEAP16[$scevgep + 2 >> 1] = ($100 * 7 | 0) + (HEAPU8[$83 >> 0] | 0) + ((HEAPU8[$79 >> 0] | 0) + $100 << 2);
  $$0281 = $$0281 + ($3 << 1) | 0;
  $$0283 = $$0283 + 1 | 0;
 }
 $42 = $4 + -2 | 0;
 $43 = $1 + ($3 << 1) | 0;
 $44 = $43 + ($3 << 1) | 0;
 $$0258 = 0;
 $$0259 = $44;
 $$0260 = $43;
 $$0275 = $1;
 $$0284 = $0;
 while (1) {
  if (($$0258 | 0) == ($3 | 0)) break;
  $143 = HEAPU16[$$0275 >> 1] | 0;
  HEAPF32[$$0284 >> 2] = +(($143 * 7 | 0) + ((HEAPU16[$$0260 >> 1] | 0) + $143 << 2) + (HEAPU16[$$0259 >> 1] | 0) | 0) * .00390625;
  $$0258 = $$0258 + 1 | 0;
  $$0259 = $$0259 + 2 | 0;
  $$0260 = $$0260 + 2 | 0;
  $$0275 = $$0275 + 2 | 0;
  $$0284 = $$0284 + 4 | 0;
 }
 $$0257 = 0;
 $$1 = $44 + ($3 << 1) | 0;
 $$1261 = $44;
 $$1266 = $43;
 $$1276 = $1;
 $$1285 = $0 + ($3 << 2) | 0;
 while (1) {
  if (($$0257 | 0) == ($3 | 0)) break;
  $164 = HEAPU16[$$1276 >> 1] | 0;
  HEAPF32[$$1285 >> 2] = +(((HEAPU16[$$1266 >> 1] | 0) * 6 | 0) + $164 + ((HEAPU16[$$1261 >> 1] | 0) + $164 << 2) + (HEAPU16[$$1 >> 1] | 0) | 0) * .00390625;
  $$0257 = $$0257 + 1 | 0;
  $$1 = $$1 + 2 | 0;
  $$1261 = $$1261 + 2 | 0;
  $$1266 = $$1266 + 2 | 0;
  $$1276 = $$1276 + 2 | 0;
  $$1285 = $$1285 + 4 | 0;
 }
 $$0256 = 2;
 while (1) {
  if (($$0256 | 0) == ($42 | 0)) break;
  $192 = $1 + ((Math_imul($$0256 + -2 | 0, $3) | 0) << 1) | 0;
  $193 = $192 + ($3 << 1) | 0;
  $194 = $193 + ($3 << 1) | 0;
  $195 = $194 + ($3 << 1) | 0;
  $$0255 = 0;
  $$2 = $195 + ($3 << 1) | 0;
  $$2262 = $195;
  $$2267 = $194;
  $$2272 = $193;
  $$2277 = $192;
  $$2286 = $0 + ((Math_imul($$0256, $3) | 0) << 2) | 0;
  while (1) {
   if (($$0255 | 0) == ($3 | 0)) break;
   HEAPF32[$$2286 >> 2] = +(((HEAPU16[$$2267 >> 1] | 0) * 6 | 0) + (HEAPU16[$$2277 >> 1] | 0) + ((HEAPU16[$$2262 >> 1] | 0) + (HEAPU16[$$2272 >> 1] | 0) << 2) + (HEAPU16[$$2 >> 1] | 0) | 0) * .00390625;
   $$0255 = $$0255 + 1 | 0;
   $$2 = $$2 + 2 | 0;
   $$2262 = $$2262 + 2 | 0;
   $$2267 = $$2267 + 2 | 0;
   $$2272 = $$2272 + 2 | 0;
   $$2277 = $$2277 + 2 | 0;
   $$2286 = $$2286 + 4 | 0;
  }
  $$0256 = $$0256 + 1 | 0;
 }
 $184 = $1 + ((Math_imul($4 + -4 | 0, $3) | 0) << 1) | 0;
 $185 = $184 + ($3 << 1) | 0;
 $186 = $185 + ($3 << 1) | 0;
 $$0254 = 0;
 $$3263 = $186 + ($3 << 1) | 0;
 $$3268 = $186;
 $$3273 = $185;
 $$3278 = $184;
 $$3287 = $0 + ((Math_imul($42, $3) | 0) << 2) | 0;
 while (1) {
  if (($$0254 | 0) == ($3 | 0)) break;
  $239 = HEAPU16[$$3263 >> 1] | 0;
  HEAPF32[$$3287 >> 2] = +(((HEAPU16[$$3268 >> 1] | 0) * 6 | 0) + (HEAPU16[$$3278 >> 1] | 0) + ($239 + (HEAPU16[$$3273 >> 1] | 0) << 2) + $239 | 0) * .00390625;
  $$0254 = $$0254 + 1 | 0;
  $$3263 = $$3263 + 2 | 0;
  $$3268 = $$3268 + 2 | 0;
  $$3273 = $$3273 + 2 | 0;
  $$3278 = $$3278 + 2 | 0;
  $$3287 = $$3287 + 4 | 0;
 }
 $227 = $1 + ((Math_imul($4 + -3 | 0, $3) | 0) << 1) | 0;
 $228 = $227 + ($3 << 1) | 0;
 $$0 = 0;
 $$4269 = $228 + ($3 << 1) | 0;
 $$4274 = $228;
 $$4279 = $227;
 $$4288 = $0 + ((Math_imul($4 + -1 | 0, $3) | 0) << 2) | 0;
 while (1) {
  if (($$0 | 0) == ($3 | 0)) break;
  $256 = HEAPU16[$$4269 >> 1] | 0;
  HEAPF32[$$4288 >> 2] = +(($256 * 6 | 0) + (HEAPU16[$$4279 >> 1] | 0) + ($256 + (HEAPU16[$$4274 >> 1] | 0) << 2) + $256 | 0) * .00390625;
  $$0 = $$0 + 1 | 0;
  $$4269 = $$4269 + 2 | 0;
  $$4274 = $$4274 + 2 | 0;
  $$4279 = $$4279 + 2 | 0;
  $$4288 = $$4288 + 4 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedNameEv($0) {
 $0 = $0 | 0;
 var $$10 = 0, $$4 = 0, $$8 = 0, $$byval_copy2 = 0, $$pre$phi24Z2D = 0, $1 = 0, $11 = 0, $13 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $24 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, $42 = 0, $44 = 0, $45 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 32 | 0;
 $1 = sp + 8 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 16 | 0;
 $4 = sp;
 HEAP32[$1 >> 2] = 0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 53691);
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 L1 : do if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy2) | 0) {
  $6 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
  $7 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedTypeEv($6) | 0;
  HEAP32[$1 >> 2] = $7;
  if (!$7) $$10 = 0; else {
   do if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 == 73) {
    $11 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($6, 0) | 0;
    HEAP32[$$byval_copy2 >> 2] = $11;
    if (!$11) {
     $$10 = 0;
     break L1;
    } else {
     $13 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $1, $$byval_copy2) | 0;
     HEAP32[$1 >> 2] = $13;
     break;
    }
   } while (0);
   while (1) {
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) break;
    $15 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseSimpleIdEv($6) | 0;
    HEAP32[$$byval_copy2 >> 2] = $15;
    if (!$15) {
     label = 35;
     break;
    }
    $17 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13QualifiedNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $1, $$byval_copy2) | 0;
    HEAP32[$1 >> 2] = $17;
   }
   if ((label | 0) == 35) {
    $$10 = 0;
    break;
   }
   $18 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E23parseBaseUnresolvedNameEv($6) | 0;
   HEAP32[$$byval_copy2 >> 2] = $18;
   if (!$18) $$4 = 0; else $$4 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13QualifiedNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $1, $$byval_copy2) | 0;
   $$10 = $$4;
  }
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 52665);
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  $21 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy2) | 0;
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 53695);
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy2) | 0)) {
   $24 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E23parseBaseUnresolvedNameEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$1 >> 2] = $24;
   if (($24 | 0) == 0 | $21 ^ 1) {
    $$10 = $24;
    break;
   }
   $26 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19GlobalQualifiedNameEJRPNS0_4NodeEEEES9_DpOT0_($0, $1) | 0;
   HEAP32[$1 >> 2] = $26;
   $$10 = $26;
   break;
  }
  L25 : do if ((((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24) + -48 | 0) >>> 0 >= 10) {
   $37 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   $38 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedTypeEv($37) | 0;
   HEAP32[$1 >> 2] = $38;
   if (!$38) {
    $$10 = 0;
    break L1;
   }
   if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 == 73) {
    $42 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($37, 0) | 0;
    HEAP32[$$byval_copy2 >> 2] = $42;
    if (!$42) {
     $$10 = 0;
     break L1;
    } else {
     $44 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $1, $$byval_copy2) | 0;
     HEAP32[$1 >> 2] = $44;
     $$pre$phi24Z2D = $37;
     break;
    }
   } else $$pre$phi24Z2D = $37;
  } else {
   while (1) {
    $29 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
    $30 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseSimpleIdEv($29) | 0;
    HEAP32[$$byval_copy2 >> 2] = $30;
    if (!$30) break;
    do if (!(HEAP32[$1 >> 2] | 0)) if ($21) {
     $35 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19GlobalQualifiedNameEJRPNS0_4NodeEEEES9_DpOT0_($0, $$byval_copy2) | 0;
     HEAP32[$1 >> 2] = $35;
     break;
    } else {
     HEAP32[$1 >> 2] = $30;
     break;
    } else {
     $34 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13QualifiedNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $1, $$byval_copy2) | 0;
     HEAP32[$1 >> 2] = $34;
    } while (0);
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
     $$pre$phi24Z2D = $29;
     break L25;
    }
   }
   $$10 = 0;
   break L1;
  } while (0);
  $45 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E23parseBaseUnresolvedNameEv($$pre$phi24Z2D) | 0;
  HEAP32[$$byval_copy2 >> 2] = $45;
  if (!$45) $$8 = 0; else $$8 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13QualifiedNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $1, $$byval_copy2) | 0;
  $$10 = $$8;
 } while (0);
 STACKTOP = sp;
 return $$10 | 0;
}

function __ZN6vision18binomial_4th_orderEPfS0_PKfmm($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0232 = 0, $$0233 = 0, $$0234 = 0, $$0235 = 0, $$0236 = 0, $$0237 = 0, $$0238 = 0, $$0253 = 0, $$0258 = 0, $$0259 = 0, $$0261 = 0, $$0262 = 0, $$1 = 0, $$1239 = 0, $$1244 = 0, $$1254 = 0, $$1260 = 0, $$1263 = 0, $$2 = 0, $$2240 = 0, $$2245 = 0, $$2250 = 0, $$2255 = 0, $$2264 = 0, $$3241 = 0, $$3246 = 0, $$3251 = 0, $$3256 = 0, $$3265 = 0, $$4247 = 0, $$4252 = 0, $$4257 = 0, $$4266 = 0, $103 = 0, $12 = 0, $120 = 0.0, $137 = 0.0, $154 = 0, $155 = 0, $156 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $191 = 0, $192 = 0, $200 = 0.0, $21 = 0, $214 = 0.0, $28 = 0, $33 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0.0, $49 = 0, $5 = 0, $55 = 0, $61 = 0.0, $71 = 0, $74 = 0, $76 = 0, $77 = 0.0, $86 = 0.0, $scevgep = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 if ($3 >>> 0 <= 4) {
  $12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 31119) | 0, 31153) | 0, 39072) | 0, 168) | 0, 39079) | 0, 31248) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 127]($17, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  _abort();
 }
 if ($4 >>> 0 <= 4) {
  $28 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 31267) | 0, 31153) | 0, 39072) | 0, 169) | 0, 39079) | 0, 31248) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $28 + (HEAP32[(HEAP32[$28 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $33 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $37 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$33 >> 2] | 0) + 28 >> 2] & 127]($33, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($28, $37) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($28) | 0;
  _abort();
 }
 $38 = $3 + -1 | 0;
 $39 = $3 + -2 | 0;
 $40 = $3 + -3 | 0;
 $41 = $3 + -4 | 0;
 $$0259 = $1;
 $$0261 = 0;
 while (1) {
  if (($$0261 | 0) == ($4 | 0)) break;
  $46 = $2 + ((Math_imul($$0261, $3) | 0) << 2) | 0;
  $47 = +HEAPF32[$46 >> 2];
  $49 = $46 + 4 | 0;
  $55 = $46 + 8 | 0;
  HEAPF32[$$0259 >> 2] = +HEAPF32[$55 >> 2] + ($47 + ($47 * 6.0 + ($47 + +HEAPF32[$49 >> 2]) * 4.0));
  $61 = +HEAPF32[$46 >> 2];
  HEAPF32[$$0259 + 4 >> 2] = +HEAPF32[$46 + 12 >> 2] + ($61 + (+HEAPF32[$49 >> 2] * 6.0 + ($61 + +HEAPF32[$55 >> 2]) * 4.0));
  $$0258 = 2;
  $$1260 = $$0259 + 8 | 0;
  while (1) {
   if (($$0258 | 0) == ($39 | 0)) break;
   $103 = $$0258 + 1 | 0;
   HEAPF32[$$1260 >> 2] = +HEAPF32[$46 + ($$0258 + 2 << 2) >> 2] + (+HEAPF32[$46 + ($$0258 + -2 << 2) >> 2] + (+HEAPF32[$46 + ($$0258 << 2) >> 2] * 6.0 + (+HEAPF32[$46 + ($$0258 + -1 << 2) >> 2] + +HEAPF32[$46 + ($103 << 2) >> 2]) * 4.0));
   $$0258 = $103;
   $$1260 = $$1260 + 4 | 0;
  }
  $scevgep = $$0259 + ($39 << 2) | 0;
  $71 = $46 + ($39 << 2) | 0;
  $74 = $46 + ($40 << 2) | 0;
  $76 = $46 + ($38 << 2) | 0;
  $77 = +HEAPF32[$76 >> 2];
  HEAPF32[$scevgep >> 2] = $77 + (+HEAPF32[$46 + ($41 << 2) >> 2] + (+HEAPF32[$71 >> 2] * 6.0 + (+HEAPF32[$74 >> 2] + $77) * 4.0));
  $86 = +HEAPF32[$76 >> 2];
  HEAPF32[$scevgep + 4 >> 2] = $86 + (+HEAPF32[$74 >> 2] + ($86 * 6.0 + ($86 + +HEAPF32[$71 >> 2]) * 4.0));
  $$0259 = $$0259 + ($3 << 2) | 0;
  $$0261 = $$0261 + 1 | 0;
 }
 $42 = $4 + -2 | 0;
 $43 = $1 + ($3 << 2) | 0;
 $44 = $43 + ($3 << 2) | 0;
 $$0236 = 0;
 $$0237 = $44;
 $$0238 = $43;
 $$0253 = $1;
 $$0262 = $0;
 while (1) {
  if (($$0236 | 0) == ($3 | 0)) break;
  $120 = +HEAPF32[$$0253 >> 2];
  HEAPF32[$$0262 >> 2] = (+HEAPF32[$$0237 >> 2] + ($120 + ($120 * 6.0 + ($120 + +HEAPF32[$$0238 >> 2]) * 4.0))) * .00390625;
  $$0236 = $$0236 + 1 | 0;
  $$0237 = $$0237 + 4 | 0;
  $$0238 = $$0238 + 4 | 0;
  $$0253 = $$0253 + 4 | 0;
  $$0262 = $$0262 + 4 | 0;
 }
 $$0235 = 0;
 $$1 = $44 + ($3 << 2) | 0;
 $$1239 = $44;
 $$1244 = $43;
 $$1254 = $1;
 $$1263 = $0 + ($3 << 2) | 0;
 while (1) {
  if (($$0235 | 0) == ($3 | 0)) break;
  $137 = +HEAPF32[$$1254 >> 2];
  HEAPF32[$$1263 >> 2] = (+HEAPF32[$$1 >> 2] + ($137 + (+HEAPF32[$$1244 >> 2] * 6.0 + ($137 + +HEAPF32[$$1239 >> 2]) * 4.0))) * .00390625;
  $$0235 = $$0235 + 1 | 0;
  $$1 = $$1 + 4 | 0;
  $$1239 = $$1239 + 4 | 0;
  $$1244 = $$1244 + 4 | 0;
  $$1254 = $$1254 + 4 | 0;
  $$1263 = $$1263 + 4 | 0;
 }
 $$0234 = 2;
 while (1) {
  if (($$0234 | 0) == ($42 | 0)) break;
  $162 = $1 + ((Math_imul($$0234 + -2 | 0, $3) | 0) << 2) | 0;
  $163 = $162 + ($3 << 2) | 0;
  $164 = $163 + ($3 << 2) | 0;
  $165 = $164 + ($3 << 2) | 0;
  $$0233 = 0;
  $$2 = $165 + ($3 << 2) | 0;
  $$2240 = $165;
  $$2245 = $164;
  $$2250 = $163;
  $$2255 = $162;
  $$2264 = $0 + ((Math_imul($$0234, $3) | 0) << 2) | 0;
  while (1) {
   if (($$0233 | 0) == ($3 | 0)) break;
   HEAPF32[$$2264 >> 2] = (+HEAPF32[$$2 >> 2] + (+HEAPF32[$$2255 >> 2] + (+HEAPF32[$$2245 >> 2] * 6.0 + (+HEAPF32[$$2250 >> 2] + +HEAPF32[$$2240 >> 2]) * 4.0))) * .00390625;
   $$0233 = $$0233 + 1 | 0;
   $$2 = $$2 + 4 | 0;
   $$2240 = $$2240 + 4 | 0;
   $$2245 = $$2245 + 4 | 0;
   $$2250 = $$2250 + 4 | 0;
   $$2255 = $$2255 + 4 | 0;
   $$2264 = $$2264 + 4 | 0;
  }
  $$0234 = $$0234 + 1 | 0;
 }
 $154 = $1 + ((Math_imul($4 + -4 | 0, $3) | 0) << 2) | 0;
 $155 = $154 + ($3 << 2) | 0;
 $156 = $155 + ($3 << 2) | 0;
 $$0232 = 0;
 $$3241 = $156 + ($3 << 2) | 0;
 $$3246 = $156;
 $$3251 = $155;
 $$3256 = $154;
 $$3265 = $0 + ((Math_imul($42, $3) | 0) << 2) | 0;
 while (1) {
  if (($$0232 | 0) == ($3 | 0)) break;
  $200 = +HEAPF32[$$3241 >> 2];
  HEAPF32[$$3265 >> 2] = ($200 + (+HEAPF32[$$3256 >> 2] + (+HEAPF32[$$3246 >> 2] * 6.0 + (+HEAPF32[$$3251 >> 2] + $200) * 4.0))) * .00390625;
  $$0232 = $$0232 + 1 | 0;
  $$3241 = $$3241 + 4 | 0;
  $$3246 = $$3246 + 4 | 0;
  $$3251 = $$3251 + 4 | 0;
  $$3256 = $$3256 + 4 | 0;
  $$3265 = $$3265 + 4 | 0;
 }
 $191 = $1 + ((Math_imul($4 + -3 | 0, $3) | 0) << 2) | 0;
 $192 = $191 + ($3 << 2) | 0;
 $$0 = 0;
 $$4247 = $192 + ($3 << 2) | 0;
 $$4252 = $192;
 $$4257 = $191;
 $$4266 = $0 + ((Math_imul($4 + -1 | 0, $3) | 0) << 2) | 0;
 while (1) {
  if (($$0 | 0) == ($3 | 0)) break;
  $214 = +HEAPF32[$$4247 >> 2];
  HEAPF32[$$4266 >> 2] = ($214 + (+HEAPF32[$$4257 >> 2] + ($214 * 6.0 + (+HEAPF32[$$4252 >> 2] + $214) * 4.0))) * .00390625;
  $$0 = $$0 + 1 | 0;
  $$4247 = $$4247 + 4 | 0;
  $$4252 = $$4252 + 4 | 0;
  $$4257 = $$4257 + 4 | 0;
  $$4266 = $$4266 + 4 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i116 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i122 = 0, $$0101 = 0, $$0105 = 0, $$0111 = 0, $$0112 = 0, $$0112140 = 0, $$092 = 0, $$093 = 0, $$094$off0 = 0, $$095 = 0, $$096 = 0, $$097 = 0, $$098 = 0, $$1102 = 0, $$1106 = 0, $$199 = 0, $$2$off0 = 0, $$2100 = 0, $$2103 = 0, $$2103$be = 0, $$2107 = 0, $$3 = 0, $$3104 = 0, $$3108 = 0, $$5 = 0, $$5110 = 0, $$6 = 0, $$7 = 0, $$sroa$0129$0 = 0, $109 = 0, $11 = 0, $114 = 0, $119 = 0, $120 = 0, $126 = 0, $13 = 0, $132 = 0, $138 = 0, $139 = 0, $140 = 0, $156 = 0, $162 = 0, $175 = 0, $18 = 0, $24 = 0, $29 = 0, $32 = 0, $44 = 0, $47 = 0, $60 = 0, $61 = 0, $64 = 0, $67 = 0, $7 = 0, $80 = 0, $82 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $7 = sp;
 $11 = ($3 - $2 | 0) / 12 | 0;
 if ($11 >>> 0 > 100) {
  $13 = _malloc($11) | 0;
  if (!$13) __ZSt17__throw_bad_allocv(); else {
   $$0111 = $13;
   $$sroa$0129$0 = $13;
  }
 } else {
  $$0111 = $7;
  $$sroa$0129$0 = 0;
 }
 $$0101 = 0;
 $$0105 = $11;
 $$097 = $2;
 $$098 = $$0111;
 while (1) {
  if (($$097 | 0) == ($3 | 0)) break;
  $18 = HEAP8[$$097 + 8 + 3 >> 0] | 0;
  if ($18 << 24 >> 24 < 0) $24 = HEAP32[$$097 + 4 >> 2] | 0; else $24 = $18 & 255;
  if (!$24) {
   HEAP8[$$098 >> 0] = 2;
   $$1102 = $$0101 + 1 | 0;
   $$1106 = $$0105 + -1 | 0;
  } else {
   HEAP8[$$098 >> 0] = 1;
   $$1102 = $$0101;
   $$1106 = $$0105;
  }
  $$0101 = $$1102;
  $$0105 = $$1106;
  $$097 = $$097 + 12 | 0;
  $$098 = $$098 + 1 | 0;
 }
 $$096 = 0;
 $$2103 = $$0101;
 $$2107 = $$0105;
 while (1) {
  $29 = HEAP32[$0 >> 2] | 0;
  do if ($29) {
   $32 = HEAP32[$29 + 12 >> 2] | 0;
   if (($32 | 0) == (HEAP32[$29 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] & 127]($29) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$32 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $60 = 1;
    break;
   } else {
    $60 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } else $60 = 1; while (0);
  $44 = HEAP32[$1 >> 2] | 0;
  if ($44) {
   $47 = HEAP32[$44 + 12 >> 2] | 0;
   if (($47 | 0) == (HEAP32[$44 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$44 >> 2] | 0) + 36 >> 2] & 127]($44) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$47 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $61 = 1;
    $80 = 0;
   } else {
    $61 = 0;
    $80 = $44;
   }
  } else {
   $61 = 1;
   $80 = 0;
  }
  $64 = HEAP32[$0 >> 2] | 0;
  if (!(($$2107 | 0) != 0 & ($60 ^ $61))) break;
  $95 = HEAP32[$64 + 12 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$64 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$64 >> 2] | 0) + 36 >> 2] & 127]($64) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$95 >> 2] | 0) | 0;
  if ($6) $$095 = $$0$i$i; else $$095 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 127]($4, $$0$i$i) | 0;
  $109 = $$096 + 1 | 0;
  $$093 = $2;
  $$094$off0 = 0;
  $$199 = $$0111;
  $$3104 = $$2103;
  $$3108 = $$2107;
  while (1) {
   if (($$093 | 0) == ($3 | 0)) break;
   do if ((HEAP8[$$199 >> 0] | 0) == 1) {
    $114 = $$093 + 8 + 3 | 0;
    if ((HEAP8[$114 >> 0] | 0) < 0) $119 = HEAP32[$$093 >> 2] | 0; else $119 = $$093;
    $120 = HEAP32[$119 + ($$096 << 2) >> 2] | 0;
    if ($6) $$092 = $120; else $$092 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 127]($4, $120) | 0;
    if (($$095 | 0) != ($$092 | 0)) {
     HEAP8[$$199 >> 0] = 0;
     $$2$off0 = $$094$off0;
     $$5 = $$3104;
     $$5110 = $$3108 + -1 | 0;
     break;
    }
    $126 = HEAP8[$114 >> 0] | 0;
    if ($126 << 24 >> 24 < 0) $132 = HEAP32[$$093 + 4 >> 2] | 0; else $132 = $126 & 255;
    if (($132 | 0) == ($109 | 0)) {
     HEAP8[$$199 >> 0] = 2;
     $$2$off0 = 1;
     $$5 = $$3104 + 1 | 0;
     $$5110 = $$3108 + -1 | 0;
    } else {
     $$2$off0 = 1;
     $$5 = $$3104;
     $$5110 = $$3108;
    }
   } else {
    $$2$off0 = $$094$off0;
    $$5 = $$3104;
    $$5110 = $$3108;
   } while (0);
   $$093 = $$093 + 12 | 0;
   $$094$off0 = $$2$off0;
   $$199 = $$199 + 1 | 0;
   $$3104 = $$5;
   $$3108 = $$5110;
  }
  L67 : do if ($$094$off0) {
   $138 = HEAP32[$0 >> 2] | 0;
   $139 = $138 + 12 | 0;
   $140 = HEAP32[$139 >> 2] | 0;
   if (($140 | 0) == (HEAP32[$138 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$138 >> 2] | 0) + 40 >> 2] & 127]($138) | 0; else {
    HEAP32[$139 >> 2] = $140 + 4;
    __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$140 >> 2] | 0) | 0;
   }
   if (($$3104 + $$3108 | 0) >>> 0 > 1) {
    $$0 = $2;
    $$2100 = $$0111;
    $$6 = $$3104;
    while (1) {
     if (($$0 | 0) == ($3 | 0)) {
      $$2103$be = $$6;
      break L67;
     }
     if ((HEAP8[$$2100 >> 0] | 0) == 2) {
      $156 = HEAP8[$$0 + 8 + 3 >> 0] | 0;
      if ($156 << 24 >> 24 < 0) $162 = HEAP32[$$0 + 4 >> 2] | 0; else $162 = $156 & 255;
      if (($162 | 0) != ($109 | 0)) {
       HEAP8[$$2100 >> 0] = 0;
       $$7 = $$6 + -1 | 0;
      } else $$7 = $$6;
     } else $$7 = $$6;
     $$0 = $$0 + 12 | 0;
     $$2100 = $$2100 + 1 | 0;
     $$6 = $$7;
    }
   } else $$2103$be = $$3104;
  } else $$2103$be = $$3104; while (0);
  $$096 = $109;
  $$2103 = $$2103$be;
  $$2107 = $$3108;
 }
 do if ($64) {
  $67 = HEAP32[$64 + 12 >> 2] | 0;
  if (($67 | 0) == (HEAP32[$64 + 16 >> 2] | 0)) $$0$i$i$i$i116 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$64 >> 2] | 0) + 36 >> 2] & 127]($64) | 0; else $$0$i$i$i$i116 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$67 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i116, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$0 >> 2] = 0;
   $175 = 1;
   break;
  } else {
   $175 = (HEAP32[$0 >> 2] | 0) == 0;
   break;
  }
 } else $175 = 1; while (0);
 do if ($80) {
  $82 = HEAP32[$80 + 12 >> 2] | 0;
  if (($82 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i2$i$i122 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i2$i$i122 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$82 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i122, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($175) break; else {
   label = 79;
   break;
  } else {
   HEAP32[$1 >> 2] = 0;
   label = 41;
   break;
  }
 } else label = 41; while (0);
 if ((label | 0) == 41 ? $175 : 0) label = 79;
 if ((label | 0) == 79) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$0112 = $2;
 $$3 = $$0111;
 while (1) {
  if (($$0112 | 0) == ($3 | 0)) {
   label = 84;
   break;
  }
  if ((HEAP8[$$3 >> 0] | 0) == 2) {
   $$0112140 = $$0112;
   break;
  }
  $$0112 = $$0112 + 12 | 0;
  $$3 = $$3 + 1 | 0;
 }
 if ((label | 0) == 84) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$0112140 = $3;
 }
 _free($$sroa$0129$0);
 STACKTOP = sp;
 return $$0112140 | 0;
}

function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i112 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i118 = 0, $$0101 = 0, $$0107 = 0, $$0108 = 0, $$0108136 = 0, $$088 = 0, $$089 = 0, $$090$off0 = 0, $$091 = 0, $$092 = 0, $$093 = 0, $$094 = 0, $$097 = 0, $$1102 = 0, $$195 = 0, $$198 = 0, $$2$off0 = 0, $$2103 = 0, $$296 = 0, $$299 = 0, $$299$be = 0, $$3 = 0, $$3100 = 0, $$3104 = 0, $$5 = 0, $$5106 = 0, $$6 = 0, $$7 = 0, $$sroa$0125$0 = 0, $104 = 0, $109 = 0, $11 = 0, $113 = 0, $118 = 0, $119 = 0, $125 = 0, $13 = 0, $131 = 0, $137 = 0, $138 = 0, $139 = 0, $154 = 0, $160 = 0, $17 = 0, $173 = 0, $23 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $59 = 0, $60 = 0, $63 = 0, $66 = 0, $7 = 0, $79 = 0, $81 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $7 = sp;
 $11 = ($3 - $2 | 0) / 12 | 0;
 if ($11 >>> 0 > 100) {
  $13 = _malloc($11) | 0;
  if (!$13) __ZSt17__throw_bad_allocv(); else {
   $$0107 = $13;
   $$sroa$0125$0 = $13;
  }
 } else {
  $$0107 = $7;
  $$sroa$0125$0 = 0;
 }
 $$0101 = $11;
 $$093 = $2;
 $$094 = $$0107;
 $$097 = 0;
 while (1) {
  if (($$093 | 0) == ($3 | 0)) break;
  $17 = HEAP8[$$093 + 11 >> 0] | 0;
  if ($17 << 24 >> 24 < 0) $23 = HEAP32[$$093 + 4 >> 2] | 0; else $23 = $17 & 255;
  if (!$23) {
   HEAP8[$$094 >> 0] = 2;
   $$1102 = $$0101 + -1 | 0;
   $$198 = $$097 + 1 | 0;
  } else {
   HEAP8[$$094 >> 0] = 1;
   $$1102 = $$0101;
   $$198 = $$097;
  }
  $$0101 = $$1102;
  $$093 = $$093 + 12 | 0;
  $$094 = $$094 + 1 | 0;
  $$097 = $$198;
 }
 $$092 = 0;
 $$2103 = $$0101;
 $$299 = $$097;
 while (1) {
  $28 = HEAP32[$0 >> 2] | 0;
  do if ($28) {
   $31 = HEAP32[$28 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$31 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $59 = 1;
    break;
   } else {
    $59 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } else $59 = 1; while (0);
  $43 = HEAP32[$1 >> 2] | 0;
  if ($43) {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$46 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $60 = 1;
    $79 = 0;
   } else {
    $60 = 0;
    $79 = $43;
   }
  } else {
   $60 = 1;
   $79 = 0;
  }
  $63 = HEAP32[$0 >> 2] | 0;
  if (!(($$2103 | 0) != 0 & ($59 ^ $60))) break;
  $94 = HEAP32[$63 + 12 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$63 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$63 >> 2] | 0) + 36 >> 2] & 127]($63) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$94 >> 0] | 0) | 0;
  $104 = $$0$i$i & 255;
  if ($6) $$091 = $104; else $$091 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 127]($4, $104) | 0;
  $109 = $$092 + 1 | 0;
  $$089 = $2;
  $$090$off0 = 0;
  $$195 = $$0107;
  $$3100 = $$299;
  $$3104 = $$2103;
  while (1) {
   if (($$089 | 0) == ($3 | 0)) break;
   do if ((HEAP8[$$195 >> 0] | 0) == 1) {
    $113 = $$089 + 11 | 0;
    if ((HEAP8[$113 >> 0] | 0) < 0) $118 = HEAP32[$$089 >> 2] | 0; else $118 = $$089;
    $119 = HEAP8[$118 + $$092 >> 0] | 0;
    if ($6) $$088 = $119; else $$088 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 127]($4, $119) | 0;
    if ($$091 << 24 >> 24 != $$088 << 24 >> 24) {
     HEAP8[$$195 >> 0] = 0;
     $$2$off0 = $$090$off0;
     $$5 = $$3100;
     $$5106 = $$3104 + -1 | 0;
     break;
    }
    $125 = HEAP8[$113 >> 0] | 0;
    if ($125 << 24 >> 24 < 0) $131 = HEAP32[$$089 + 4 >> 2] | 0; else $131 = $125 & 255;
    if (($131 | 0) == ($109 | 0)) {
     HEAP8[$$195 >> 0] = 2;
     $$2$off0 = 1;
     $$5 = $$3100 + 1 | 0;
     $$5106 = $$3104 + -1 | 0;
    } else {
     $$2$off0 = 1;
     $$5 = $$3100;
     $$5106 = $$3104;
    }
   } else {
    $$2$off0 = $$090$off0;
    $$5 = $$3100;
    $$5106 = $$3104;
   } while (0);
   $$089 = $$089 + 12 | 0;
   $$090$off0 = $$2$off0;
   $$195 = $$195 + 1 | 0;
   $$3100 = $$5;
   $$3104 = $$5106;
  }
  L67 : do if ($$090$off0) {
   $137 = HEAP32[$0 >> 2] | 0;
   $138 = $137 + 12 | 0;
   $139 = HEAP32[$138 >> 2] | 0;
   if (($139 | 0) == (HEAP32[$137 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$137 >> 2] | 0) + 40 >> 2] & 127]($137) | 0; else {
    HEAP32[$138 >> 2] = $139 + 1;
    __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$139 >> 0] | 0) | 0;
   }
   if (($$3100 + $$3104 | 0) >>> 0 > 1) {
    $$0 = $2;
    $$296 = $$0107;
    $$6 = $$3100;
    while (1) {
     if (($$0 | 0) == ($3 | 0)) {
      $$299$be = $$6;
      break L67;
     }
     if ((HEAP8[$$296 >> 0] | 0) == 2) {
      $154 = HEAP8[$$0 + 11 >> 0] | 0;
      if ($154 << 24 >> 24 < 0) $160 = HEAP32[$$0 + 4 >> 2] | 0; else $160 = $154 & 255;
      if (($160 | 0) != ($109 | 0)) {
       HEAP8[$$296 >> 0] = 0;
       $$7 = $$6 + -1 | 0;
      } else $$7 = $$6;
     } else $$7 = $$6;
     $$0 = $$0 + 12 | 0;
     $$296 = $$296 + 1 | 0;
     $$6 = $$7;
    }
   } else $$299$be = $$3100;
  } else $$299$be = $$3100; while (0);
  $$092 = $109;
  $$2103 = $$3104;
  $$299 = $$299$be;
 }
 do if ($63) {
  $66 = HEAP32[$63 + 12 >> 2] | 0;
  if (($66 | 0) == (HEAP32[$63 + 16 >> 2] | 0)) $$0$i$i$i$i112 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$63 >> 2] | 0) + 36 >> 2] & 127]($63) | 0; else $$0$i$i$i$i112 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$66 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i112, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$0 >> 2] = 0;
   $173 = 1;
   break;
  } else {
   $173 = (HEAP32[$0 >> 2] | 0) == 0;
   break;
  }
 } else $173 = 1; while (0);
 do if ($79) {
  $81 = HEAP32[$79 + 12 >> 2] | 0;
  if (($81 | 0) == (HEAP32[$79 + 16 >> 2] | 0)) $$0$i$i2$i$i118 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$79 >> 2] | 0) + 36 >> 2] & 127]($79) | 0; else $$0$i$i2$i$i118 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i118, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($173) break; else {
   label = 79;
   break;
  } else {
   HEAP32[$1 >> 2] = 0;
   label = 41;
   break;
  }
 } else label = 41; while (0);
 if ((label | 0) == 41 ? $173 : 0) label = 79;
 if ((label | 0) == 79) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$0108 = $2;
 $$3 = $$0107;
 while (1) {
  if (($$0108 | 0) == ($3 | 0)) {
   label = 84;
   break;
  }
  if ((HEAP8[$$3 >> 0] | 0) == 2) {
   $$0108136 = $$0108;
   break;
  }
  $$0108 = $$0108 + 12 | 0;
  $$3 = $$3 + 1 | 0;
 }
 if ((label | 0) == 84) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$0108136 = $3;
 }
 _free($$sroa$0125$0);
 STACKTOP = sp;
 return $$0108136 | 0;
}

function _jpeg_idct_15x15($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0352372 = 0, $$0354371 = 0, $$0355370 = 0, $$0373 = 0, $$1353368 = 0, $$1369 = 0, $$neg356 = 0, $$neg362 = 0, $101 = 0, $104 = 0, $107 = 0, $109 = 0, $111 = 0, $115 = 0, $119 = 0, $15 = 0, $167 = 0, $170 = 0, $173 = 0, $175 = 0, $177 = 0, $179 = 0, $182 = 0, $183 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $190 = 0, $192 = 0, $195 = 0, $196 = 0, $198 = 0, $201 = 0, $202 = 0, $203 = 0, $205 = 0, $207 = 0, $209 = 0, $21 = 0, $210 = 0, $212 = 0, $214 = 0, $217 = 0, $219 = 0, $220 = 0, $222 = 0, $224 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $231 = 0, $234 = 0, $237 = 0, $239 = 0, $241 = 0, $245 = 0, $249 = 0, $27 = 0, $33 = 0, $36 = 0, $37 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $46 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $61 = 0, $63 = 0, $64 = 0, $7 = 0, $70 = 0, $76 = 0, $83 = 0, $89 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(480);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0352372 = $5;
 $$0354371 = HEAP32[$1 + 84 >> 2] | 0;
 $$0355370 = $2;
 $$0373 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0355370 >> 1] << 13, HEAP32[$$0354371 >> 2] | 0) | 0 | 1024;
  $21 = Math_imul(HEAP32[$$0354371 + 64 >> 2] | 0, HEAP16[$$0355370 + 32 >> 1] | 0) | 0;
  $27 = Math_imul(HEAP32[$$0354371 + 128 >> 2] | 0, HEAP16[$$0355370 + 64 >> 1] | 0) | 0;
  $33 = Math_imul(HEAP32[$$0354371 + 192 >> 2] | 0, HEAP16[$$0355370 + 96 >> 1] | 0) | 0;
  $36 = (Math_imul($33, -3580) | 0) + $15 | 0;
  $37 = ($33 * 9373 | 0) + $15 | 0;
  $39 = (Math_imul($33, -11586) | 0) + $15 | 0;
  $40 = $21 - $27 | 0;
  $41 = $27 + $21 | 0;
  $42 = $41 * 10958 | 0;
  $43 = $40 * 374 | 0;
  $44 = $21 * 11795 | 0;
  $46 = $43 + $42 + $37 | 0;
  $49 = $44 - $42 + $43 + $36 | 0;
  $50 = $41 * 4482 | 0;
  $$neg362 = Math_imul($40, -3271) | 0;
  $52 = $37 - $50 + $$neg362 | 0;
  $55 = $50 - $44 + $$neg362 + $36 | 0;
  $56 = $41 * 6476 | 0;
  $57 = $40 * 2896 | 0;
  $59 = $57 + $56 + $36 | 0;
  $61 = $37 - $56 + $57 | 0;
  $63 = $39 + ($40 * 5792 | 0) | 0;
  $64 = (Math_imul($40, -11584) | 0) + $39 | 0;
  $70 = Math_imul(HEAP32[$$0354371 + 32 >> 2] | 0, HEAP16[$$0355370 + 16 >> 1] | 0) | 0;
  $76 = Math_imul(HEAP32[$$0354371 + 96 >> 2] | 0, HEAP16[$$0355370 + 48 >> 1] | 0) | 0;
  $83 = Math_imul((HEAP16[$$0355370 + 80 >> 1] | 0) * 10033 | 0, HEAP32[$$0354371 + 160 >> 2] | 0) | 0;
  $89 = Math_imul(HEAP32[$$0354371 + 224 >> 2] | 0, HEAP16[$$0355370 + 112 >> 1] | 0) | 0;
  $90 = $76 - $89 | 0;
  $92 = ($90 + $70 | 0) * 6810 | 0;
  $94 = $92 + ($70 * 4209 | 0) | 0;
  $96 = $92 + (Math_imul($90, -17828) | 0) | 0;
  $97 = Math_imul($76, -6810) | 0;
  $98 = Math_imul($76, -11018) | 0;
  $99 = $70 - $89 | 0;
  $101 = ($99 * 11522 | 0) + $83 | 0;
  $104 = ($89 * 20131 | 0) - $98 + $101 | 0;
  $107 = $97 + (Math_imul($70, -9113) | 0) + $101 | 0;
  $109 = ($99 * 10033 | 0) - $83 | 0;
  $111 = ($89 + $70 | 0) * 4712 | 0;
  $115 = $97 + ($70 * 3897 | 0) - $83 + $111 | 0;
  $119 = $83 + $98 + (Math_imul($89, -7121) | 0) + $111 | 0;
  HEAP32[$$0352372 >> 2] = $104 + $46 >> 11;
  HEAP32[$$0352372 + 448 >> 2] = $46 - $104 >> 11;
  HEAP32[$$0352372 + 32 >> 2] = $94 + $59 >> 11;
  HEAP32[$$0352372 + 416 >> 2] = $59 - $94 >> 11;
  HEAP32[$$0352372 + 64 >> 2] = $109 + $63 >> 11;
  HEAP32[$$0352372 + 384 >> 2] = $63 - $109 >> 11;
  HEAP32[$$0352372 + 96 >> 2] = $115 + $49 >> 11;
  HEAP32[$$0352372 + 352 >> 2] = $49 - $115 >> 11;
  HEAP32[$$0352372 + 128 >> 2] = $96 + $61 >> 11;
  HEAP32[$$0352372 + 320 >> 2] = $61 - $96 >> 11;
  HEAP32[$$0352372 + 160 >> 2] = $119 + $52 >> 11;
  HEAP32[$$0352372 + 288 >> 2] = $52 - $119 >> 11;
  HEAP32[$$0352372 + 192 >> 2] = $107 + $55 >> 11;
  HEAP32[$$0352372 + 256 >> 2] = $55 - $107 >> 11;
  HEAP32[$$0352372 + 224 >> 2] = $64 >> 11;
  $$0373 = $$0373 + 1 | 0;
  if (($$0373 | 0) == 8) break; else {
   $$0352372 = $$0352372 + 4 | 0;
   $$0354371 = $$0354371 + 4 | 0;
   $$0355370 = $$0355370 + 2 | 0;
  }
 }
 $167 = $7 + -384 | 0;
 $$1353368 = $5;
 $$1369 = 0;
 while (1) {
  $170 = (HEAP32[$3 + ($$1369 << 2) >> 2] | 0) + $4 | 0;
  $173 = (HEAP32[$$1353368 >> 2] << 13) + 134348800 | 0;
  $175 = HEAP32[$$1353368 + 8 >> 2] | 0;
  $177 = HEAP32[$$1353368 + 16 >> 2] | 0;
  $179 = HEAP32[$$1353368 + 24 >> 2] | 0;
  $182 = (Math_imul($179, -3580) | 0) + $173 | 0;
  $183 = ($179 * 9373 | 0) + $173 | 0;
  $185 = (Math_imul($179, -11586) | 0) + $173 | 0;
  $186 = $175 - $177 | 0;
  $187 = $177 + $175 | 0;
  $188 = $187 * 10958 | 0;
  $189 = $186 * 374 | 0;
  $190 = $175 * 11795 | 0;
  $192 = $189 + $188 + $183 | 0;
  $195 = $190 - $188 + $189 + $182 | 0;
  $196 = $187 * 4482 | 0;
  $$neg356 = Math_imul($186, -3271) | 0;
  $198 = $183 - $196 + $$neg356 | 0;
  $201 = $196 - $190 + $$neg356 + $182 | 0;
  $202 = $187 * 6476 | 0;
  $203 = $186 * 2896 | 0;
  $205 = $203 + $202 + $182 | 0;
  $207 = $183 - $202 + $203 | 0;
  $209 = $185 + ($186 * 5792 | 0) | 0;
  $210 = (Math_imul($186, -11584) | 0) + $185 | 0;
  $212 = HEAP32[$$1353368 + 4 >> 2] | 0;
  $214 = HEAP32[$$1353368 + 12 >> 2] | 0;
  $217 = (HEAP32[$$1353368 + 20 >> 2] | 0) * 10033 | 0;
  $219 = HEAP32[$$1353368 + 28 >> 2] | 0;
  $220 = $214 - $219 | 0;
  $222 = ($220 + $212 | 0) * 6810 | 0;
  $224 = $222 + ($212 * 4209 | 0) | 0;
  $226 = $222 + (Math_imul($220, -17828) | 0) | 0;
  $227 = Math_imul($214, -6810) | 0;
  $228 = Math_imul($214, -11018) | 0;
  $229 = $212 - $219 | 0;
  $231 = ($229 * 11522 | 0) + $217 | 0;
  $234 = ($219 * 20131 | 0) - $228 + $231 | 0;
  $237 = $227 + (Math_imul($212, -9113) | 0) + $231 | 0;
  $239 = ($229 * 10033 | 0) - $217 | 0;
  $241 = ($219 + $212 | 0) * 4712 | 0;
  $245 = $227 + ($212 * 3897 | 0) - $217 + $241 | 0;
  $249 = $217 + $228 + (Math_imul($219, -7121) | 0) + $241 | 0;
  HEAP8[$170 >> 0] = HEAP8[$167 + (($234 + $192 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$170 + 14 >> 0] = HEAP8[$167 + (($192 - $234 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$170 + 1 >> 0] = HEAP8[$167 + (($224 + $205 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$170 + 13 >> 0] = HEAP8[$167 + (($205 - $224 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$170 + 2 >> 0] = HEAP8[$167 + (($239 + $209 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$170 + 12 >> 0] = HEAP8[$167 + (($209 - $239 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$170 + 3 >> 0] = HEAP8[$167 + (($245 + $195 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$170 + 11 >> 0] = HEAP8[$167 + (($195 - $245 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$170 + 4 >> 0] = HEAP8[$167 + (($226 + $207 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$170 + 10 >> 0] = HEAP8[$167 + (($207 - $226 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$170 + 5 >> 0] = HEAP8[$167 + (($249 + $198 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$170 + 9 >> 0] = HEAP8[$167 + (($198 - $249 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$170 + 6 >> 0] = HEAP8[$167 + (($237 + $201 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$170 + 8 >> 0] = HEAP8[$167 + (($201 - $237 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$170 + 7 >> 0] = HEAP8[$167 + ($210 >>> 18 & 1023) >> 0] | 0;
  $$1369 = $$1369 + 1 | 0;
  if (($$1369 | 0) == 15) break; else $$1353368 = $$1353368 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function _icpGetInitXw2Xc_from_PlanarData($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0204 = 0, $$1 = 0, $101 = 0, $102 = 0, $108 = 0, $110 = 0, $112 = 0, $116 = 0, $118 = 0, $120 = 0.0, $121 = 0, $125 = 0.0, $128 = 0.0, $129 = 0.0, $130 = 0, $133 = 0.0, $137 = 0.0, $140 = 0.0, $141 = 0.0, $143 = 0.0, $144 = 0, $149 = 0.0, $150 = 0, $157 = 0.0, $158 = 0, $162 = 0.0, $164 = 0.0, $17 = 0, $170 = 0.0, $176 = 0.0, $184 = 0.0, $192 = 0.0, $193 = 0.0, $195 = 0.0, $196 = 0.0, $198 = 0.0, $200 = 0.0, $202 = 0.0, $204 = 0.0, $208 = 0.0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0.0, $38 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $46 = 0, $48 = 0, $5 = 0, $61 = 0, $88 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 $vararg_buffer11 = sp + 120 | 0;
 $vararg_buffer9 = sp + 112 | 0;
 $vararg_buffer7 = sp + 104 | 0;
 $vararg_buffer5 = sp + 96 | 0;
 $vararg_buffer3 = sp + 88 | 0;
 $vararg_buffer1 = sp + 80 | 0;
 $vararg_buffer = sp + 72 | 0;
 $5 = sp;
 L1 : do if (($3 | 0) >= 4) {
  $$0 = 0;
  while (1) {
   if (($$0 | 0) >= ($3 | 0)) break;
   if (+HEAPF64[$2 + ($$0 * 24 | 0) + 16 >> 3] != 0.0) {
    $$0204 = -1;
    break L1;
   } else $$0 = $$0 + 1 | 0;
  }
  if ((((((((!(+HEAPF64[$0 >> 3] == 0.0) ? !(+HEAPF64[$0 + 32 >> 3] != 0.0) : 0) ? ($17 = $0 + 40 | 0, !(+HEAPF64[$17 >> 3] == 0.0)) : 0) ? !(+HEAPF64[$0 + 64 >> 3] != 0.0) : 0) ? !(+HEAPF64[$0 + 72 >> 3] != 0.0) : 0) ? !(+HEAPF64[$0 + 80 >> 3] != 1.0) : 0) ? !(+HEAPF64[$0 + 24 >> 3] != 0.0) : 0) ? !(+HEAPF64[$0 + 56 >> 3] != 0.0) : 0) ? !(+HEAPF64[$0 + 88 >> 3] != 0.0) : 0) {
   $38 = $3 << 1;
   $39 = _arMatrixAlloc($38, 8) | 0;
   if (!$39) {
    _arLog(0, 3, 24753, $vararg_buffer);
    $$0204 = -1;
    break;
   }
   $41 = _arMatrixAlloc($38, 1) | 0;
   if (!$41) {
    _arMatrixFree($39) | 0;
    _arLog(0, 3, 24779, $vararg_buffer1);
    $$0204 = -1;
    break;
   }
   $$1 = 0;
   while (1) {
    if (($$1 | 0) == ($3 | 0)) break;
    $43 = $2 + ($$1 * 24 | 0) | 0;
    $45 = HEAP32[$39 >> 2] | 0;
    $46 = $$1 << 4;
    HEAPF64[$45 + ($46 << 3) >> 3] = +HEAPF64[$43 >> 3];
    $48 = $2 + ($$1 * 24 | 0) + 8 | 0;
    HEAPF64[$45 + (($46 | 1) << 3) >> 3] = +HEAPF64[$48 >> 3];
    HEAPF64[$45 + (($46 | 2) << 3) >> 3] = 1.0;
    HEAPF64[$45 + (($46 | 3) << 3) >> 3] = 0.0;
    HEAPF64[$45 + (($46 | 4) << 3) >> 3] = 0.0;
    HEAPF64[$45 + (($46 | 5) << 3) >> 3] = 0.0;
    $61 = $1 + ($$1 << 4) | 0;
    HEAPF64[$45 + (($46 | 6) << 3) >> 3] = -(+HEAPF64[$43 >> 3] * +HEAPF64[$61 >> 3]);
    HEAPF64[$45 + (($46 | 7) << 3) >> 3] = -(+HEAPF64[$48 >> 3] * +HEAPF64[$61 >> 3]);
    HEAPF64[$45 + (($46 | 8) << 3) >> 3] = 0.0;
    HEAPF64[$45 + (($46 | 9) << 3) >> 3] = 0.0;
    HEAPF64[$45 + (($46 | 10) << 3) >> 3] = 0.0;
    HEAPF64[$45 + (($46 | 11) << 3) >> 3] = +HEAPF64[$43 >> 3];
    HEAPF64[$45 + (($46 | 12) << 3) >> 3] = +HEAPF64[$48 >> 3];
    HEAPF64[$45 + (($46 | 13) << 3) >> 3] = 1.0;
    $88 = $1 + ($$1 << 4) + 8 | 0;
    HEAPF64[$45 + (($46 | 14) << 3) >> 3] = -(+HEAPF64[$43 >> 3] * +HEAPF64[$88 >> 3]);
    HEAPF64[$45 + (($46 | 15) << 3) >> 3] = -(+HEAPF64[$48 >> 3] * +HEAPF64[$88 >> 3]);
    $101 = HEAP32[$41 >> 2] | 0;
    $102 = $$1 << 1;
    HEAPF64[$101 + ($102 << 3) >> 3] = +HEAPF64[$61 >> 3];
    HEAPF64[$101 + (($102 | 1) << 3) >> 3] = +HEAPF64[$88 >> 3];
    $$1 = $$1 + 1 | 0;
   }
   $108 = _arMatrixAllocTrans($39) | 0;
   if (!$108) {
    _arMatrixFree($39) | 0;
    _arMatrixFree($41) | 0;
    _arLog(0, 3, 24805, $vararg_buffer3);
    $$0204 = -1;
    break;
   }
   $110 = _arMatrixAllocMul($108, $39) | 0;
   if (!$110) {
    _arMatrixFree($39) | 0;
    _arMatrixFree($41) | 0;
    _arMatrixFree($108) | 0;
    _arLog(0, 3, 24831, $vararg_buffer5);
    $$0204 = -1;
    break;
   }
   $112 = _arMatrixAllocMul($108, $41) | 0;
   if (!$112) {
    _arMatrixFree($39) | 0;
    _arMatrixFree($41) | 0;
    _arMatrixFree($108) | 0;
    _arMatrixFree($110) | 0;
    _arLog(0, 3, 24857, $vararg_buffer7);
    $$0204 = -1;
    break;
   }
   if ((_arMatrixSelfInv($110) | 0) < 0) {
    _arMatrixFree($39) | 0;
    _arMatrixFree($41) | 0;
    _arMatrixFree($108) | 0;
    _arMatrixFree($110) | 0;
    _arMatrixFree($112) | 0;
    _arLog(0, 3, 24883, $vararg_buffer9);
    $$0204 = -1;
    break;
   }
   $116 = _arMatrixAllocMul($110, $112) | 0;
   if (!$116) {
    _arMatrixFree($39) | 0;
    _arMatrixFree($41) | 0;
    _arMatrixFree($108) | 0;
    _arMatrixFree($110) | 0;
    _arMatrixFree($112) | 0;
    _arLog(0, 3, 24909, $vararg_buffer11);
    $$0204 = -1;
    break;
   } else {
    $118 = HEAP32[$116 >> 2] | 0;
    $120 = +HEAPF64[$118 + 48 >> 3];
    $121 = $5 + 16 | 0;
    $125 = +HEAPF64[$0 + 48 >> 3];
    $128 = +HEAPF64[$17 >> 3];
    $129 = (+HEAPF64[$118 + 24 >> 3] - $120 * $125) / $128;
    $130 = $5 + 8 | 0;
    $133 = +HEAPF64[$0 + 16 >> 3];
    $137 = +HEAPF64[$0 + 8 >> 3];
    $140 = +HEAPF64[$0 >> 3];
    $141 = (+HEAPF64[$118 >> 3] - $120 * $133 - $129 * $137) / $140;
    $143 = +HEAPF64[$118 + 56 >> 3];
    $144 = $5 + 40 | 0;
    $149 = (+HEAPF64[$118 + 32 >> 3] - $125 * $143) / $128;
    $150 = $5 + 32 | 0;
    $157 = (+HEAPF64[$118 + 8 >> 3] - $133 * $143 - $137 * $149) / $140;
    $158 = $5 + 24 | 0;
    $162 = (+HEAPF64[$118 + 40 >> 3] - $125) / $128;
    $164 = +HEAPF64[$118 + 16 >> 3];
    _arMatrixFree($39) | 0;
    _arMatrixFree($41) | 0;
    _arMatrixFree($108) | 0;
    _arMatrixFree($110) | 0;
    _arMatrixFree($112) | 0;
    _arMatrixFree($116) | 0;
    $170 = +Math_sqrt(+($120 * $120 + ($129 * $129 + $141 * $141)));
    $176 = +Math_sqrt(+($143 * $143 + ($149 * $149 + $157 * $157)));
    HEAPF64[$5 >> 3] = $141 / $170;
    HEAPF64[$130 >> 3] = $129 / $170;
    HEAPF64[$121 >> 3] = $120 / $170;
    HEAPF64[$158 >> 3] = $157 / $176;
    HEAPF64[$150 >> 3] = $149 / $176;
    HEAPF64[$144 >> 3] = $143 / $176;
    $184 = ($170 + $176) * .5;
    _check_rotation($5);
    $192 = +HEAPF64[$130 >> 3];
    $193 = +HEAPF64[$144 >> 3];
    $195 = +HEAPF64[$121 >> 3];
    $196 = +HEAPF64[$150 >> 3];
    $198 = $192 * $193 - $195 * $196;
    $200 = +HEAPF64[$158 >> 3];
    $202 = +HEAPF64[$5 >> 3];
    $204 = $195 * $200 - $193 * $202;
    $208 = $196 * $202 - $192 * $200;
    $215 = +Math_sqrt(+($208 * $208 + ($198 * $198 + $204 * $204)));
    $216 = $198 / $215;
    HEAPF64[$5 + 48 >> 3] = $216;
    $217 = $204 / $215;
    HEAPF64[$5 + 56 >> 3] = $217;
    $218 = $208 / $215;
    HEAPF64[$5 + 64 >> 3] = $218;
    HEAPF64[$4 >> 3] = $202;
    HEAPF64[$4 + 32 >> 3] = $192;
    HEAPF64[$4 + 64 >> 3] = $195;
    HEAPF64[$4 + 8 >> 3] = $200;
    HEAPF64[$4 + 40 >> 3] = $196;
    HEAPF64[$4 + 72 >> 3] = $193;
    HEAPF64[$4 + 16 >> 3] = $216;
    HEAPF64[$4 + 48 >> 3] = $217;
    HEAPF64[$4 + 80 >> 3] = $218;
    HEAPF64[$4 + 24 >> 3] = ($164 - $133 - $137 * $162) / $140 / $184;
    HEAPF64[$4 + 56 >> 3] = $162 / $184;
    HEAPF64[$4 + 88 >> 3] = 1.0 / $184;
    $$0204 = 0;
    break;
   }
  } else $$0204 = -1;
 } else $$0204 = -1; while (0);
 STACKTOP = sp;
 return $$0204 | 0;
}

function __ZN6vision12FindFeaturesINS_14FREAKExtractorELi96EEEvPNS_8KeyframeIXT0_EEEPKNS_25GaussianScaleSpacePyramidEPNS_25DoGScaleInvariantDetectorEPT_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $104 = 0, $112 = 0, $113 = 0, $12 = 0, $126 = 0, $17 = 0, $21 = 0, $28 = 0, $33 = 0, $37 = 0, $38 = 0, $4 = 0, $48 = 0, $5 = 0, $53 = 0, $57 = 0, $58 = 0, $60 = 0, $68 = 0, $73 = 0, $77 = 0, $78 = 0, $80 = 0, $88 = 0, $93 = 0, $97 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $4 = sp + 20 | 0;
 $5 = sp;
 if (!$1) {
  $12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37660) | 0, 34139) | 0, 39072) | 0, 212) | 0, 39079) | 0, 37760) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 127]($17, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  _abort();
 }
 if (!$2) {
  $28 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 34218) | 0, 34139) | 0, 39072) | 0, 213) | 0, 39079) | 0, 34250) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $28 + (HEAP32[(HEAP32[$28 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $33 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $37 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$33 >> 2] | 0) + 28 >> 2] & 127]($33, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($28, $37) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($28) | 0;
  _abort();
 }
 $38 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 if ((HEAP32[$38 + 4 >> 2] | 0) == (HEAP32[$38 >> 2] | 0)) {
  $48 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 34267) | 0, 34139) | 0, 39072) | 0, 214) | 0, 39079) | 0, 34319) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $48 + (HEAP32[(HEAP32[$48 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $53 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $57 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$53 >> 2] | 0) + 28 >> 2] & 127]($53, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($48, $57) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($48) | 0;
  _abort();
 }
 $58 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 $60 = __ZNK6vision5Image5widthEv(HEAP32[$58 >> 2] | 0) | 0;
 if (($60 | 0) != (__ZNK6vision25DoGScaleInvariantDetector5widthEv($2) | 0)) {
  $68 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 34336) | 0, 34139) | 0, 39072) | 0, 215) | 0, 39079) | 0, 34409) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $68 + (HEAP32[(HEAP32[$68 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $73 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $77 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$73 >> 2] | 0) + 28 >> 2] & 127]($73, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($68, $77) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($68) | 0;
  _abort();
 }
 $78 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 $80 = __ZNK6vision5Image6heightEv(HEAP32[$78 >> 2] | 0) | 0;
 if (($80 | 0) != (__ZNK6vision25DoGScaleInvariantDetector6heightEv($2) | 0)) {
  $88 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 34444) | 0, 34139) | 0, 39072) | 0, 216) | 0, 39079) | 0, 34409) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $88 + (HEAP32[(HEAP32[$88 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $93 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $97 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$93 >> 2] | 0) + 28 >> 2] & 127]($93, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($88, $97) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($88) | 0;
  _abort();
 }
 __ZN6vision25DoGScaleInvariantDetector6detectEPKNS_25GaussianScaleSpacePyramidE($2, $1);
 $98 = __ZNK6vision25DoGScaleInvariantDetector8featuresEv($2) | 0;
 __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEEC2Em($4, ((HEAP32[$98 + 4 >> 2] | 0) - (HEAP32[$98 >> 2] | 0) | 0) / 36 | 0);
 $$0 = 0;
 while (1) {
  $104 = __ZNK6vision25DoGScaleInvariantDetector8featuresEv($2) | 0;
  if ($$0 >>> 0 >= (((HEAP32[$104 + 4 >> 2] | 0) - (HEAP32[$104 >> 2] | 0) | 0) / 36 | 0) >>> 0) break;
  $112 = __ZNK6vision25DoGScaleInvariantDetector8featuresEv($2) | 0;
  $113 = HEAP32[$112 >> 2] | 0;
  __ZN6vision12FeaturePointC2Effffb($5, +HEAPF32[$113 + ($$0 * 36 | 0) >> 2], +HEAPF32[$113 + ($$0 * 36 | 0) + 4 >> 2], +HEAPF32[$113 + ($$0 * 36 | 0) + 8 >> 2], +HEAPF32[$113 + ($$0 * 36 | 0) + 28 >> 2], +HEAPF32[$113 + ($$0 * 36 | 0) + 24 >> 2] > 0.0);
  $126 = (HEAP32[$4 >> 2] | 0) + ($$0 * 20 | 0) | 0;
  HEAP32[$126 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$126 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$126 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$126 + 12 >> 2] = HEAP32[$5 + 12 >> 2];
  HEAP8[$126 + 16 >> 0] = HEAP8[$5 + 16 >> 0] | 0;
  __ZN6vision12FeaturePointD2Ev($5);
  $$0 = $$0 + 1 | 0;
 }
 __ZN6vision14FREAKExtractor7extractERNS_18BinaryFeatureStoreEPKNS_25GaussianScaleSpacePyramidERKNSt3__26vectorINS_12FeaturePointENS6_9allocatorIS8_EEEE($3, __ZN6vision8KeyframeILi96EE5storeEv($0) | 0, $1, $4);
 __ZNSt3__213__vector_baseIN6vision12FeaturePointENS_9allocatorIS2_EEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZN6vision18BinomialPyramid32f5buildERKNS_5ImageE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $101 = 0, $103 = 0, $105 = 0, $111 = 0, $114 = 0, $117 = 0, $120 = 0, $123 = 0, $126 = 0, $129 = 0, $134 = 0, $136 = 0, $140 = 0, $142 = 0, $15 = 0, $19 = 0, $2 = 0, $27 = 0, $32 = 0, $36 = 0, $37 = 0, $43 = 0, $45 = 0, $54 = 0, $59 = 0, $63 = 0, $64 = 0, $73 = 0, $78 = 0, $82 = 0, $83 = 0, $92 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 if ((__ZNK6vision5Image4typeEv($1) | 0) != 1) {
  $10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 31302) | 0, 31153) | 0, 39072) | 0, 330) | 0, 39079) | 0, 31353) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $10 + (HEAP32[(HEAP32[$10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$15 >> 2] | 0) + 28 >> 2] & 127]($15, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($10, $19) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($10) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image8channelsEv($1) | 0) != 1) {
  $27 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 31377) | 0, 31153) | 0, 39072) | 0, 331) | 0, 39079) | 0, 31422) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $27 + (HEAP32[(HEAP32[$27 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $32 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $36 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 28 >> 2] & 127]($32, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($27, $36) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($27) | 0;
  _abort();
 }
 $37 = $0 + 4 | 0;
 $43 = $0 + 16 | 0;
 $45 = $0 + 20 | 0;
 if (((HEAP32[$0 + 8 >> 2] | 0) - (HEAP32[$37 >> 2] | 0) >> 5 | 0) != (Math_imul(HEAP32[$45 >> 2] | 0, HEAP32[$43 >> 2] | 0) | 0)) {
  $54 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 31448) | 0, 31153) | 0, 39072) | 0, 333) | 0, 39079) | 0, 31522) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $54 + (HEAP32[(HEAP32[$54 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $59 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $63 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$59 >> 2] | 0) + 28 >> 2] & 127]($59, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($54, $63) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($54) | 0;
  _abort();
 }
 $64 = __ZNK6vision5Image5widthEv($1) | 0;
 if (($64 | 0) != (__ZNK6vision5Image5widthEv(HEAP32[$37 >> 2] | 0) | 0)) {
  $73 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 31557) | 0, 31153) | 0, 39072) | 0, 334) | 0, 39079) | 0, 31617) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $73 + (HEAP32[(HEAP32[$73 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $78 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $82 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$78 >> 2] | 0) + 28 >> 2] & 127]($78, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($73, $82) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($73) | 0;
  _abort();
 }
 $83 = __ZNK6vision5Image6heightEv($1) | 0;
 if (($83 | 0) != (__ZNK6vision5Image6heightEv(HEAP32[$37 >> 2] | 0) | 0)) {
  $92 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 31649) | 0, 31153) | 0, 39072) | 0, 335) | 0, 39079) | 0, 31617) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $92 + (HEAP32[(HEAP32[$92 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $97 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $101 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$97 >> 2] | 0) + 28 >> 2] & 127]($97, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($92, $101) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($92) | 0;
  _abort();
 }
 __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_($0, HEAP32[$37 >> 2] | 0, $1);
 $103 = HEAP32[$37 >> 2] | 0;
 __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_($0, $103 + 32 | 0, $103);
 $105 = HEAP32[$37 >> 2] | 0;
 __ZN6vision18BinomialPyramid32f18apply_filter_twiceERNS_5ImageERKS1_($0, $105 + 64 | 0, $105 + 32 | 0);
 $$0 = 1;
 while (1) {
  if ($$0 >>> 0 >= (HEAP32[$43 >> 2] | 0) >>> 0) break;
  $111 = Math_imul(HEAP32[$45 >> 2] | 0, $$0) | 0;
  $114 = __ZN6vision5Image3getEv((HEAP32[$37 >> 2] | 0) + ($111 << 5) | 0) | 0;
  $117 = (Math_imul(HEAP32[$45 >> 2] | 0, $$0) | 0) + -1 | 0;
  $120 = __ZN6vision5Image3getEv((HEAP32[$37 >> 2] | 0) + ($117 << 5) | 0) | 0;
  $123 = (Math_imul(HEAP32[$45 >> 2] | 0, $$0) | 0) + -1 | 0;
  $126 = __ZNK6vision5Image5widthEv((HEAP32[$37 >> 2] | 0) + ($123 << 5) | 0) | 0;
  $129 = (Math_imul(HEAP32[$45 >> 2] | 0, $$0) | 0) + -1 | 0;
  __ZN6vision19downsample_bilinearEPfPKfmm($114, $120, $126, __ZNK6vision5Image6heightEv((HEAP32[$37 >> 2] | 0) + ($129 << 5) | 0) | 0);
  $134 = Math_imul(HEAP32[$45 >> 2] | 0, $$0) | 0;
  $136 = HEAP32[$37 >> 2] | 0;
  __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_($0, $136 + ($134 + 1 << 5) | 0, $136 + ($134 << 5) | 0);
  $140 = Math_imul(HEAP32[$45 >> 2] | 0, $$0) | 0;
  $142 = HEAP32[$37 >> 2] | 0;
  __ZN6vision18BinomialPyramid32f18apply_filter_twiceERNS_5ImageERKS1_($0, $142 + ($140 + 2 << 5) | 0, $142 + ($140 + 1 << 5) | 0);
  $$0 = $$0 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function _get_global_id_code($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0177 = 0, $$0178 = 0, $$0178$off = 0, $$0182 = 0, $$0189 = 0, $$0202 = 0, $$0204 = 0, $$1 = 0, $$10 = 0, $$10199 = 0, $$11 = 0, $$11200 = 0, $$1179 = 0, $$1183 = 0, $$1190 = 0, $$12 = 0, $$2 = 0, $$2180 = 0, $$2180$off = 0, $$2191 = 0, $$3 = 0, $$3181 = 0, $$3185 = 0, $$3192 = 0, $$4 = 0, $$4186 = 0, $$4186$off = 0, $$4193 = 0, $$5 = 0, $$5187 = 0, $$5194 = 0, $$6 = 0, $$6188 = 0, $$6188$off = 0, $$6195 = 0, $$7 = 0, $$7196 = 0, $$8 = 0, $$8197 = 0, $$9 = 0, $$9198 = 0, $109 = 0, $113 = 0, $118 = 0, $119 = 0, $120 = 0, $123 = 0, $133 = 0, $137 = 0, $144 = 0.0, $145 = 0, $148 = 0, $15 = 0, $153 = 0, $154 = 0, $19 = 0, $20 = 0, $24 = 0, $38 = 0, $49 = 0, $5 = 0, $50 = 0, $53 = 0, $6 = 0, $63 = 0, $67 = 0, $7 = 0, $71 = 0, $72 = 0, $73 = 0, $78 = 0, $8 = 0, $85 = 0, $89 = 0, $97 = 0, $or$cond229245 = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(160);
 $5 = sp + 152 | 0;
 $6 = sp + 128 | 0;
 $7 = sp + 144 | 0;
 $8 = sp;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 182;
 HEAP32[$6 + 8 >> 2] = 195;
 HEAP32[$6 + 12 >> 2] = 13;
 $$0182 = 0;
 $$0202 = 0;
 $$0204 = -1;
 while (1) {
  if (($$0182 | 0) == 4) break;
  $15 = HEAP8[$0 + (HEAP32[$6 + ($$0182 << 2) >> 2] | 0) >> 0] | 0;
  $$0182 = $$0182 + 1 | 0;
  $$0202 = ($15 & 255) > ($$0202 & 255) ? $15 : $$0202;
  $$0204 = ($15 & 255) < ($$0204 & 255) ? $15 : $$0204;
 }
 $19 = $$0202 & 255;
 $20 = $$0204 & 255;
 L5 : do if (($19 - $20 | 0) >= 30) {
  $24 = ($19 + $20 | 0) >>> 1;
  $$1183 = 0;
  while (1) {
   if (($$1183 | 0) == 4) break;
   HEAP8[$5 + $$1183 >> 0] = $24 >>> 0 > (HEAPU8[$0 + (HEAP32[$6 + ($$1183 << 2) >> 2] | 0) >> 0] | 0) >>> 0 & 1;
   $$1183 = $$1183 + 1 | 0;
  }
  $trunc = 0;
  while (1) {
   if ($trunc >>> 0 >= 4) break;
   $38 = $trunc + 1 | 0;
   if (((HEAP8[$5 + $trunc >> 0] | 0) == 1 ? (HEAP8[$5 + ($38 & 3) >> 0] | 0) == 1 : 0) ? (HEAP8[$5 + ($trunc + 2 & 3) >> 0] | 0) == 0 : 0) break;
   $trunc = $38;
  }
  L20 : do switch ($trunc & 2147483647 | 0) {
  case 4:
   {
    HEAP32[$2 >> 2] = 0;
    HEAPF64[$3 >> 3] = -1.0;
    $$0177 = -3;
    break L5;
    break;
   }
  case 0:
   {
    $$0 = 119;
    $$0178 = 0;
    $$0189 = 255;
    while (1) {
     if (($$0178 | 0) == 14) {
      $$12 = $$0189;
      label = 57;
      break L20;
     }
     $$0178$off = $$0178 + -3 | 0;
     $49 = ($$0178 & 2147483646 | 0) == 12;
     $50 = $$0178 * 14 | 0;
     $$1 = $$0;
     $$1190 = $$0189;
     $$3185 = 0;
     while (1) {
      if (($$3185 | 0) == 14) break;
      if ((($$3185 + -3 | $$0178$off) >>> 0 >= 8 ? ($53 = $$3185 & 2147483646, (($$3185 | $$0178) & 2147483646 | 0) != 0) : 0) ? !($49 & (($53 | 0) == 0 | ($53 | 0) == 12)) : 0) {
       $63 = (HEAPU8[$0 + ($$3185 + $50) >> 0] | 0) - $24 | 0;
       HEAP8[$8 + $$1 >> 0] = $63 >>> 31;
       $67 = ($63 | 0) > -1 ? $63 : 0 - $63 | 0;
       $$2 = $$1 + -1 | 0;
       $$2191 = ($67 | 0) < ($$1190 | 0) ? $67 : $$1190;
      } else {
       $$2 = $$1;
       $$2191 = $$1190;
      }
      $$1 = $$2;
      $$1190 = $$2191;
      $$3185 = $$3185 + 1 | 0;
     }
     $$0 = $$1;
     $$0178 = $$0178 + 1 | 0;
     $$0189 = $$1190;
    }
    break;
   }
  case 1:
   {
    $$3 = 119;
    $$3192 = 255;
    $$4186 = 0;
    while (1) {
     if (($$4186 | 0) == 14) {
      $$12 = $$3192;
      label = 57;
      break L20;
     }
     $$4186$off = $$4186 + -3 | 0;
     $71 = $$4186 & 2147483646;
     $72 = ($71 | 0) == 0;
     $73 = ($71 | 0) == 12;
     $$1179 = 13;
     $$4 = $$3;
     $$4193 = $$3192;
     while (1) {
      if (($$1179 | 0) <= -1) break;
      if ((($$1179 + -3 | $$4186$off) >>> 0 >= 8 ? ($78 = ($$1179 & -2 | 0) == 12, !($72 & $78)) : 0) ? !($73 & ($$1179 >>> 0 < 2 | $78)) : 0) {
       $85 = (HEAPU8[$0 + (($$1179 * 14 | 0) + $$4186) >> 0] | 0) - $24 | 0;
       HEAP8[$8 + $$4 >> 0] = $85 >>> 31;
       $89 = ($85 | 0) > -1 ? $85 : 0 - $85 | 0;
       $$5 = $$4 + -1 | 0;
       $$5194 = ($89 | 0) < ($$4193 | 0) ? $89 : $$4193;
      } else {
       $$5 = $$4;
       $$5194 = $$4193;
      }
      $$1179 = $$1179 + -1 | 0;
      $$4 = $$5;
      $$4193 = $$5194;
     }
     $$3 = $$4;
     $$3192 = $$4193;
     $$4186 = $$4186 + 1 | 0;
    }
    break;
   }
  case 2:
   {
    $$2180 = 13;
    $$6 = 119;
    $$6195 = 255;
    while (1) {
     if (($$2180 | 0) <= -1) {
      $$12 = $$6195;
      label = 57;
      break L20;
     }
     $$2180$off = $$2180 + -3 | 0;
     $or$cond229245 = $$2180 >>> 0 < 2 | ($$2180 & -2 | 0) == 12;
     $97 = $$2180 * 14 | 0;
     $$5187 = 13;
     $$7 = $$6;
     $$7196 = $$6195;
     while (1) {
      if (($$5187 | 0) <= -1) break;
      if (($$5187 + -3 | $$2180$off) >>> 0 >= 8 ? !(($$5187 | $$2180) >>> 0 < 2 | $or$cond229245 & ($$5187 & -2 | 0) == 12) : 0) {
       $109 = (HEAPU8[$0 + ($$5187 + $97) >> 0] | 0) - $24 | 0;
       HEAP8[$8 + $$7 >> 0] = $109 >>> 31;
       $113 = ($109 | 0) > -1 ? $109 : 0 - $109 | 0;
       $$8 = $$7 + -1 | 0;
       $$8197 = ($113 | 0) < ($$7196 | 0) ? $113 : $$7196;
      } else {
       $$8 = $$7;
       $$8197 = $$7196;
      }
      $$5187 = $$5187 + -1 | 0;
      $$7 = $$8;
      $$7196 = $$8197;
     }
     $$2180 = $$2180 + -1 | 0;
     $$6 = $$7;
     $$6195 = $$7196;
    }
    break;
   }
  case 3:
   {
    $$6188 = 13;
    $$9 = 119;
    $$9198 = 255;
    while (1) {
     if (($$6188 | 0) <= -1) {
      $$12 = $$9198;
      label = 57;
      break L20;
     }
     $$6188$off = $$6188 + -3 | 0;
     $118 = $$6188 & -2;
     $119 = ($118 | 0) == 12;
     $120 = ($118 | 0) == 0;
     $$10 = $$9;
     $$10199 = $$9198;
     $$3181 = 0;
     while (1) {
      if (($$3181 | 0) == 14) break;
      if ((($$3181 + -3 | $$6188$off) >>> 0 >= 8 ? ($123 = $$3181 & 2147483646, !($119 & ($123 | 0) == 0)) : 0) ? !(($123 | $118 | 0) == 0 | $120 & ($123 | 0) == 12) : 0) {
       $133 = (HEAPU8[$0 + (($$3181 * 14 | 0) + $$6188) >> 0] | 0) - $24 | 0;
       HEAP8[$8 + $$10 >> 0] = $133 >>> 31;
       $137 = ($133 | 0) > -1 ? $133 : 0 - $133 | 0;
       $$11 = $$10 + -1 | 0;
       $$11200 = ($137 | 0) < ($$10199 | 0) ? $137 : $$10199;
      } else {
       $$11 = $$10;
       $$11200 = $$10199;
      }
      $$10 = $$11;
      $$10199 = $$11200;
      $$3181 = $$3181 + 1 | 0;
     }
     $$6188 = $$6188 + -1 | 0;
     $$9 = $$10;
     $$9198 = $$10199;
    }
    break;
   }
  default:
   {
    HEAP32[$2 >> 2] = $trunc;
    $144 = 1.0;
   }
  } while (0);
  if ((label | 0) == 57) {
   HEAP32[$2 >> 2] = $trunc;
   $144 = ($$12 | 0) > 30 ? 1.0 : +($$12 | 0) / 30.0;
  }
  HEAPF64[$3 >> 3] = $144;
  $145 = _decode_bch(2830, 0, 0, $8, $7) | 0;
  if (($145 | 0) < 0) $$0177 = -4; else {
   if ($4 | 0) HEAP32[$4 >> 2] = $145;
   $148 = $7;
   $153 = HEAP32[$148 + 4 >> 2] | 0;
   $154 = $1;
   HEAP32[$154 >> 2] = HEAP32[$148 >> 2];
   HEAP32[$154 + 4 >> 2] = $153;
   $$0177 = 0;
  }
 } else {
  HEAP32[$2 >> 2] = 0;
  HEAPF64[$3 >> 3] = -1.0;
  $$0177 = -2;
 } while (0);
 STACKTOP = sp;
 return $$0177 | 0;
}

function _jpeg_idct_3x6($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $104 = 0, $105 = 0, $106 = 0, $112 = 0, $118 = 0, $124 = 0, $126 = 0, $129 = 0, $132 = 0, $135 = 0, $15 = 0, $159 = 0, $166 = 0, $167 = 0, $169 = 0, $176 = 0, $177 = 0, $178 = 0, $184 = 0, $190 = 0, $196 = 0, $198 = 0, $201 = 0, $204 = 0, $207 = 0, $209 = 0, $213 = 0, $218 = 0, $22 = 0, $223 = 0, $225 = 0, $228 = 0, $23 = 0, $230 = 0, $231 = 0, $233 = 0, $25 = 0, $252 = 0, $255 = 0, $257 = 0, $258 = 0, $261 = 0, $281 = 0, $284 = 0, $286 = 0, $287 = 0, $290 = 0, $310 = 0, $313 = 0, $315 = 0, $317 = 0, $318 = 0, $32 = 0, $321 = 0, $33 = 0, $34 = 0, $341 = 0, $344 = 0, $346 = 0, $348 = 0, $349 = 0, $352 = 0, $372 = 0, $375 = 0, $377 = 0, $379 = 0, $380 = 0, $383 = 0, $40 = 0, $46 = 0, $5 = 0, $52 = 0, $54 = 0, $57 = 0, $60 = 0, $63 = 0, $7 = 0, $70 = 0, $81 = 0, $87 = 0, $9 = 0, $94 = 0, $95 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $9 = HEAP32[$1 + 84 >> 2] | 0;
 $15 = Math_imul(HEAP16[$2 >> 1] << 13, HEAP32[$9 >> 2] | 0) | 0 | 1024;
 $22 = Math_imul((HEAP16[$2 + 64 >> 1] | 0) * 5793 | 0, HEAP32[$9 + 128 >> 2] | 0) | 0;
 $23 = $22 + $15 | 0;
 $25 = (Math_imul($22, -2) | 0) + $15 >> 11;
 $32 = Math_imul((HEAP16[$2 + 32 >> 1] | 0) * 10033 | 0, HEAP32[$9 + 64 >> 2] | 0) | 0;
 $33 = $32 + $23 | 0;
 $34 = $23 - $32 | 0;
 $40 = Math_imul(HEAP32[$9 + 32 >> 2] | 0, HEAP16[$2 + 16 >> 1] | 0) | 0;
 $46 = Math_imul(HEAP32[$9 + 96 >> 2] | 0, HEAP16[$2 + 48 >> 1] | 0) | 0;
 $52 = Math_imul(HEAP32[$9 + 160 >> 2] | 0, HEAP16[$2 + 80 >> 1] | 0) | 0;
 $54 = ($52 + $40 | 0) * 2998 | 0;
 $57 = $54 + ($46 + $40 << 13) | 0;
 $60 = $54 + ($52 - $46 << 13) | 0;
 $63 = $40 - $46 - $52 << 2;
 HEAP32[$5 >> 2] = $57 + $33 >> 11;
 HEAP32[$5 + 60 >> 2] = $33 - $57 >> 11;
 $70 = $5 + 12 | 0;
 HEAP32[$70 >> 2] = $63 + $25;
 HEAP32[$5 + 48 >> 2] = $25 - $63;
 HEAP32[$5 + 24 >> 2] = $60 + $34 >> 11;
 HEAP32[$5 + 36 >> 2] = $34 - $60 >> 11;
 $81 = $5 + 4 | 0;
 $87 = Math_imul(HEAP16[$2 + 2 >> 1] << 13, HEAP32[$9 + 4 >> 2] | 0) | 0 | 1024;
 $94 = Math_imul((HEAP16[$2 + 66 >> 1] | 0) * 5793 | 0, HEAP32[$9 + 132 >> 2] | 0) | 0;
 $95 = $94 + $87 | 0;
 $97 = (Math_imul($94, -2) | 0) + $87 >> 11;
 $104 = Math_imul((HEAP16[$2 + 34 >> 1] | 0) * 10033 | 0, HEAP32[$9 + 68 >> 2] | 0) | 0;
 $105 = $104 + $95 | 0;
 $106 = $95 - $104 | 0;
 $112 = Math_imul(HEAP32[$9 + 36 >> 2] | 0, HEAP16[$2 + 18 >> 1] | 0) | 0;
 $118 = Math_imul(HEAP32[$9 + 100 >> 2] | 0, HEAP16[$2 + 50 >> 1] | 0) | 0;
 $124 = Math_imul(HEAP32[$9 + 164 >> 2] | 0, HEAP16[$2 + 82 >> 1] | 0) | 0;
 $126 = ($124 + $112 | 0) * 2998 | 0;
 $129 = $126 + ($118 + $112 << 13) | 0;
 $132 = $126 + ($124 - $118 << 13) | 0;
 $135 = $112 - $118 - $124 << 2;
 HEAP32[$81 >> 2] = $129 + $105 >> 11;
 HEAP32[$5 + 64 >> 2] = $105 - $129 >> 11;
 HEAP32[$5 + 16 >> 2] = $135 + $97;
 HEAP32[$5 + 52 >> 2] = $97 - $135;
 HEAP32[$5 + 28 >> 2] = $132 + $106 >> 11;
 HEAP32[$5 + 40 >> 2] = $106 - $132 >> 11;
 $159 = Math_imul(HEAP16[$2 + 4 >> 1] << 13, HEAP32[$9 + 8 >> 2] | 0) | 0 | 1024;
 $166 = Math_imul((HEAP16[$2 + 68 >> 1] | 0) * 5793 | 0, HEAP32[$9 + 136 >> 2] | 0) | 0;
 $167 = $166 + $159 | 0;
 $169 = (Math_imul($166, -2) | 0) + $159 >> 11;
 $176 = Math_imul((HEAP16[$2 + 36 >> 1] | 0) * 10033 | 0, HEAP32[$9 + 72 >> 2] | 0) | 0;
 $177 = $176 + $167 | 0;
 $178 = $167 - $176 | 0;
 $184 = Math_imul(HEAP32[$9 + 40 >> 2] | 0, HEAP16[$2 + 20 >> 1] | 0) | 0;
 $190 = Math_imul(HEAP32[$9 + 104 >> 2] | 0, HEAP16[$2 + 52 >> 1] | 0) | 0;
 $196 = Math_imul(HEAP32[$9 + 168 >> 2] | 0, HEAP16[$2 + 84 >> 1] | 0) | 0;
 $198 = ($196 + $184 | 0) * 2998 | 0;
 $201 = $198 + ($190 + $184 << 13) | 0;
 $204 = $198 + ($196 - $190 << 13) | 0;
 $207 = $184 - $190 - $196 << 2;
 $209 = $201 + $177 >> 11;
 HEAP32[$5 + 8 >> 2] = $209;
 HEAP32[$5 + 68 >> 2] = $177 - $201 >> 11;
 $213 = $207 + $169 | 0;
 HEAP32[$5 + 20 >> 2] = $213;
 HEAP32[$5 + 56 >> 2] = $169 - $207;
 $218 = $204 + $178 >> 11;
 HEAP32[$5 + 32 >> 2] = $218;
 HEAP32[$5 + 44 >> 2] = $178 - $204 >> 11;
 $223 = $7 + -384 | 0;
 $225 = (HEAP32[$3 >> 2] | 0) + $4 | 0;
 $228 = (HEAP32[$5 >> 2] << 13) + 134348800 | 0;
 $230 = $228 + ($209 * 5793 | 0) | 0;
 $231 = (Math_imul($209, -11586) | 0) + $228 | 0;
 $233 = (HEAP32[$81 >> 2] | 0) * 10033 | 0;
 HEAP8[$225 >> 0] = HEAP8[$223 + (($230 + $233 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$225 + 2 >> 0] = HEAP8[$223 + (($230 - $233 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$225 + 1 >> 0] = HEAP8[$223 + ($231 >>> 18 & 1023) >> 0] | 0;
 $252 = (HEAP32[$3 + 4 >> 2] | 0) + $4 | 0;
 $255 = (HEAP32[$70 >> 2] << 13) + 134348800 | 0;
 $257 = $255 + ($213 * 5793 | 0) | 0;
 $258 = (Math_imul($213, -11586) | 0) + $255 | 0;
 $261 = (HEAP32[$5 + 16 >> 2] | 0) * 10033 | 0;
 HEAP8[$252 >> 0] = HEAP8[$223 + (($257 + $261 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$252 + 2 >> 0] = HEAP8[$223 + (($257 - $261 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$252 + 1 >> 0] = HEAP8[$223 + ($258 >>> 18 & 1023) >> 0] | 0;
 $281 = (HEAP32[$3 + 8 >> 2] | 0) + $4 | 0;
 $284 = (HEAP32[$5 + 24 >> 2] << 13) + 134348800 | 0;
 $286 = $284 + ($218 * 5793 | 0) | 0;
 $287 = (Math_imul($218, -11586) | 0) + $284 | 0;
 $290 = (HEAP32[$5 + 28 >> 2] | 0) * 10033 | 0;
 HEAP8[$281 >> 0] = HEAP8[$223 + (($286 + $290 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$281 + 2 >> 0] = HEAP8[$223 + (($286 - $290 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$281 + 1 >> 0] = HEAP8[$223 + ($287 >>> 18 & 1023) >> 0] | 0;
 $310 = (HEAP32[$3 + 12 >> 2] | 0) + $4 | 0;
 $313 = (HEAP32[$5 + 36 >> 2] << 13) + 134348800 | 0;
 $315 = HEAP32[$5 + 44 >> 2] | 0;
 $317 = $313 + ($315 * 5793 | 0) | 0;
 $318 = (Math_imul($315, -11586) | 0) + $313 | 0;
 $321 = (HEAP32[$5 + 40 >> 2] | 0) * 10033 | 0;
 HEAP8[$310 >> 0] = HEAP8[$223 + (($317 + $321 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$310 + 2 >> 0] = HEAP8[$223 + (($317 - $321 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$310 + 1 >> 0] = HEAP8[$223 + ($318 >>> 18 & 1023) >> 0] | 0;
 $341 = (HEAP32[$3 + 16 >> 2] | 0) + $4 | 0;
 $344 = (HEAP32[$5 + 48 >> 2] << 13) + 134348800 | 0;
 $346 = HEAP32[$5 + 56 >> 2] | 0;
 $348 = $344 + ($346 * 5793 | 0) | 0;
 $349 = (Math_imul($346, -11586) | 0) + $344 | 0;
 $352 = (HEAP32[$5 + 52 >> 2] | 0) * 10033 | 0;
 HEAP8[$341 >> 0] = HEAP8[$223 + (($348 + $352 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$341 + 2 >> 0] = HEAP8[$223 + (($348 - $352 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$341 + 1 >> 0] = HEAP8[$223 + ($349 >>> 18 & 1023) >> 0] | 0;
 $372 = (HEAP32[$3 + 20 >> 2] | 0) + $4 | 0;
 $375 = (HEAP32[$5 + 60 >> 2] << 13) + 134348800 | 0;
 $377 = HEAP32[$5 + 68 >> 2] | 0;
 $379 = $375 + ($377 * 5793 | 0) | 0;
 $380 = (Math_imul($377, -11586) | 0) + $375 | 0;
 $383 = (HEAP32[$5 + 64 >> 2] | 0) * 10033 | 0;
 HEAP8[$372 >> 0] = HEAP8[$223 + (($379 + $383 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$372 + 2 >> 0] = HEAP8[$223 + (($379 - $383 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$372 + 1 >> 0] = HEAP8[$223 + ($380 >>> 18 & 1023) >> 0] | 0;
 STACKTOP = sp;
 return;
}

function _update_box($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$0200513 = 0, $$0204522 = 0, $$0211517 = 0, $$0218 = 0, $$0219 = 0, $$0220 = 0, $$0221 = 0, $$0222 = 0, $$0223 = 0, $$0224512 = 0, $$0252 = 0, $$1201471 = 0, $$1205480 = 0, $$1212475 = 0, $$1225470 = 0, $$1246 = 0, $$2202429 = 0, $$2206433 = 0, $$2213438 = 0, $$2226428 = 0, $$2244 = 0, $$3203387 = 0, $$3207391 = 0, $$3214396 = 0, $$3227386 = 0, $$4208349 = 0, $$4215344 = 0, $$4228354 = 0, $$4345 = 0, $$5209308 = 0, $$5216303 = 0, $$5229312 = 0, $$5304 = 0, $$6210251 = 0, $$6217245 = 0, $$6230242 = 0, $$6243 = 0, $10 = 0, $108 = 0, $11 = 0, $110 = 0, $112 = 0, $117 = 0, $12 = 0, $123 = 0, $13 = 0, $135 = 0, $14 = 0, $15 = 0, $16 = 0, $21 = 0, $36 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 $5 = HEAP32[(HEAP32[$0 + 484 >> 2] | 0) + 24 >> 2] | 0;
 $6 = HEAP32[$1 >> 2] | 0;
 $7 = $1 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $1 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $1 + 12 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 $13 = $1 + 16 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 $15 = $1 + 20 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 L1 : do if (($8 | 0) <= ($6 | 0) | ($10 | 0) > ($12 | 0) | ($14 | 0) > ($16 | 0)) $$0223 = $6; else {
  $$0204522 = $6;
  L3 : while (1) {
   $21 = HEAP32[$5 + ($$0204522 << 2) >> 2] | 0;
   $$0211517 = $10;
   while (1) {
    $$0200513 = $21 + ($$0211517 << 6) + ($14 << 1) | 0;
    $$0224512 = $14;
    while (1) {
     if (HEAP16[$$0200513 >> 1] | 0) break L3;
     if (($$0224512 | 0) < ($16 | 0)) {
      $$0200513 = $$0200513 + 2 | 0;
      $$0224512 = $$0224512 + 1 | 0;
     } else break;
    }
    if (($$0211517 | 0) < ($12 | 0)) $$0211517 = $$0211517 + 1 | 0; else break;
   }
   if (($$0204522 | 0) < ($8 | 0)) $$0204522 = $$0204522 + 1 | 0; else {
    $$0223 = $6;
    break L1;
   }
  }
  HEAP32[$1 >> 2] = $$0204522;
  $$0223 = $$0204522;
 } while (0);
 L14 : do if (($8 | 0) <= ($$0223 | 0) | ($10 | 0) > ($12 | 0) | ($14 | 0) > ($16 | 0)) $$0222 = $8; else {
  $$1205480 = $8;
  L16 : while (1) {
   $36 = HEAP32[$5 + ($$1205480 << 2) >> 2] | 0;
   $$1212475 = $10;
   while (1) {
    $$1201471 = $36 + ($$1212475 << 6) + ($14 << 1) | 0;
    $$1225470 = $14;
    while (1) {
     if (HEAP16[$$1201471 >> 1] | 0) break L16;
     if (($$1225470 | 0) < ($16 | 0)) {
      $$1201471 = $$1201471 + 2 | 0;
      $$1225470 = $$1225470 + 1 | 0;
     } else break;
    }
    if (($$1212475 | 0) < ($12 | 0)) $$1212475 = $$1212475 + 1 | 0; else break;
   }
   if (($$1205480 | 0) > ($$0223 | 0)) $$1205480 = $$1205480 + -1 | 0; else {
    $$0222 = $8;
    break L14;
   }
  }
  HEAP32[$7 >> 2] = $$1205480;
  $$0222 = $$1205480;
 } while (0);
 L27 : do if (($12 | 0) <= ($10 | 0) | ($$0222 | 0) < ($$0223 | 0) | ($14 | 0) > ($16 | 0)) $$0221 = $10; else {
  $$2213438 = $10;
  L29 : while (1) {
   $$2206433 = $$0223;
   while (1) {
    $$2202429 = (HEAP32[$5 + ($$2206433 << 2) >> 2] | 0) + ($$2213438 << 6) + ($14 << 1) | 0;
    $$2226428 = $14;
    while (1) {
     if (HEAP16[$$2202429 >> 1] | 0) break L29;
     if (($$2226428 | 0) < ($16 | 0)) {
      $$2202429 = $$2202429 + 2 | 0;
      $$2226428 = $$2226428 + 1 | 0;
     } else break;
    }
    if (($$2206433 | 0) < ($$0222 | 0)) $$2206433 = $$2206433 + 1 | 0; else break;
   }
   if (($$2213438 | 0) < ($12 | 0)) $$2213438 = $$2213438 + 1 | 0; else {
    $$0221 = $10;
    break L27;
   }
  }
  HEAP32[$9 >> 2] = $$2213438;
  $$0221 = $$2213438;
 } while (0);
 L40 : do if (($12 | 0) <= ($$0221 | 0) | ($$0222 | 0) < ($$0223 | 0) | ($14 | 0) > ($16 | 0)) $$0220 = $12; else {
  $$3214396 = $12;
  L42 : while (1) {
   $$3207391 = $$0223;
   while (1) {
    $$3203387 = (HEAP32[$5 + ($$3207391 << 2) >> 2] | 0) + ($$3214396 << 6) + ($14 << 1) | 0;
    $$3227386 = $14;
    while (1) {
     if (HEAP16[$$3203387 >> 1] | 0) break L42;
     if (($$3227386 | 0) < ($16 | 0)) {
      $$3203387 = $$3203387 + 2 | 0;
      $$3227386 = $$3227386 + 1 | 0;
     } else break;
    }
    if (($$3207391 | 0) < ($$0222 | 0)) $$3207391 = $$3207391 + 1 | 0; else break;
   }
   if (($$3214396 | 0) > ($$0221 | 0)) $$3214396 = $$3214396 + -1 | 0; else {
    $$0220 = $12;
    break L40;
   }
  }
  HEAP32[$11 >> 2] = $$3214396;
  $$0220 = $$3214396;
 } while (0);
 L53 : do if (($16 | 0) <= ($14 | 0) | ($$0222 | 0) < ($$0223 | 0) | ($$0220 | 0) < ($$0221 | 0)) $$0219 = $14; else {
  $$4228354 = $14;
  L55 : while (1) {
   $$4208349 = $$0223;
   while (1) {
    $$4215344 = $$0221;
    $$4345 = (HEAP32[$5 + ($$4208349 << 2) >> 2] | 0) + ($$0221 << 6) + ($$4228354 << 1) | 0;
    while (1) {
     if (HEAP16[$$4345 >> 1] | 0) break L55;
     if (($$4215344 | 0) < ($$0220 | 0)) {
      $$4215344 = $$4215344 + 1 | 0;
      $$4345 = $$4345 + 64 | 0;
     } else break;
    }
    if (($$4208349 | 0) < ($$0222 | 0)) $$4208349 = $$4208349 + 1 | 0; else break;
   }
   if (($$4228354 | 0) < ($16 | 0)) $$4228354 = $$4228354 + 1 | 0; else {
    $$0219 = $14;
    break L53;
   }
  }
  HEAP32[$13 >> 2] = $$4228354;
  $$0219 = $$4228354;
 } while (0);
 L66 : do if (($16 | 0) <= ($$0219 | 0) | ($$0222 | 0) < ($$0223 | 0) | ($$0220 | 0) < ($$0221 | 0)) $$0218 = $16; else {
  $$5229312 = $16;
  L68 : while (1) {
   $$5209308 = $$0223;
   while (1) {
    $$5216303 = $$0221;
    $$5304 = (HEAP32[$5 + ($$5209308 << 2) >> 2] | 0) + ($$0221 << 6) + ($$5229312 << 1) | 0;
    while (1) {
     if (HEAP16[$$5304 >> 1] | 0) break L68;
     if (($$5216303 | 0) < ($$0220 | 0)) {
      $$5216303 = $$5216303 + 1 | 0;
      $$5304 = $$5304 + 64 | 0;
     } else break;
    }
    if (($$5209308 | 0) < ($$0222 | 0)) $$5209308 = $$5209308 + 1 | 0; else break;
   }
   if (($$5229312 | 0) > ($$0219 | 0)) $$5229312 = $$5229312 + -1 | 0; else {
    $$0218 = $16;
    break L66;
   }
  }
  HEAP32[$15 >> 2] = $$5229312;
  $$0218 = $$5229312;
 } while (0);
 $108 = $$0222 - $$0223 << 4;
 $110 = ($$0220 - $$0221 | 0) * 12 | 0;
 $112 = $$0218 - $$0219 << 3;
 $117 = (Math_imul($110, $110) | 0) + (Math_imul($108, $108) | 0) + (Math_imul($112, $112) | 0) | 0;
 HEAP32[$1 + 24 >> 2] = $117;
 if (($$0222 | 0) < ($$0223 | 0) | ($$0220 | 0) < ($$0221 | 0) | ($$0218 | 0) < ($$0219 | 0)) {
  $$0$lcssa = 0;
  $135 = $1 + 28 | 0;
  HEAP32[$135 >> 2] = $$0$lcssa;
  return;
 }
 $$0252 = 0;
 $$6210251 = $$0223;
 while (1) {
  $123 = HEAP32[$5 + ($$6210251 << 2) >> 2] | 0;
  $$1246 = $$0252;
  $$6217245 = $$0221;
  while (1) {
   $$2244 = $$1246;
   $$6230242 = $$0219;
   $$6243 = $123 + ($$6217245 << 6) + ($$0219 << 1) | 0;
   while (1) {
    $$2244 = $$2244 + ((HEAP16[$$6243 >> 1] | 0) != 0 & 1) | 0;
    if (($$6230242 | 0) >= ($$0218 | 0)) break; else {
     $$6230242 = $$6230242 + 1 | 0;
     $$6243 = $$6243 + 2 | 0;
    }
   }
   if (($$6217245 | 0) < ($$0220 | 0)) {
    $$1246 = $$2244;
    $$6217245 = $$6217245 + 1 | 0;
   } else break;
  }
  if (($$6210251 | 0) < ($$0222 | 0)) {
   $$0252 = $$2244;
   $$6210251 = $$6210251 + 1 | 0;
  } else {
   $$0$lcssa = $$2244;
   break;
  }
 }
 $135 = $1 + 28 | 0;
 HEAP32[$135 >> 2] = $$0$lcssa;
 return;
}

function _jpeg_idct_13x13($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0330339 = 0, $$0332338 = 0, $$0333337 = 0, $$0340 = 0, $$1331335 = 0, $$1336 = 0, $101 = 0, $107 = 0, $110 = 0, $115 = 0, $116 = 0, $117 = 0, $123 = 0, $125 = 0, $129 = 0, $15 = 0, $171 = 0, $174 = 0, $177 = 0, $179 = 0, $181 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $188 = 0, $191 = 0, $194 = 0, $195 = 0, $197 = 0, $200 = 0, $203 = 0, $204 = 0, $206 = 0, $209 = 0, $21 = 0, $212 = 0, $217 = 0, $219 = 0, $221 = 0, $223 = 0, $225 = 0, $227 = 0, $228 = 0, $229 = 0, $233 = 0, $235 = 0, $241 = 0, $244 = 0, $249 = 0, $250 = 0, $251 = 0, $257 = 0, $259 = 0, $263 = 0, $27 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $41 = 0, $44 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $56 = 0, $59 = 0, $62 = 0, $7 = 0, $71 = 0, $77 = 0, $83 = 0, $89 = 0, $91 = 0, $93 = 0, $94 = 0, $95 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(416);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0330339 = $5;
 $$0332338 = HEAP32[$1 + 84 >> 2] | 0;
 $$0333337 = $2;
 $$0340 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0333337 >> 1] << 13, HEAP32[$$0332338 >> 2] | 0) | 0 | 1024;
  $21 = Math_imul(HEAP32[$$0332338 + 64 >> 2] | 0, HEAP16[$$0333337 + 32 >> 1] | 0) | 0;
  $27 = Math_imul(HEAP32[$$0332338 + 128 >> 2] | 0, HEAP16[$$0333337 + 64 >> 1] | 0) | 0;
  $33 = Math_imul(HEAP32[$$0332338 + 192 >> 2] | 0, HEAP16[$$0333337 + 96 >> 1] | 0) | 0;
  $34 = $33 + $27 | 0;
  $35 = $27 - $33 | 0;
  $36 = $34 * 9465 | 0;
  $38 = ($35 * 793 | 0) + $15 | 0;
  $41 = $36 + ($21 * 11249 | 0) + $38 | 0;
  $44 = ($21 * 4108 | 0) - $36 + $38 | 0;
  $45 = $34 * 2592 | 0;
  $47 = ($35 * 3989 | 0) + $15 | 0;
  $50 = ($21 * 8672 | 0) - $45 + $47 | 0;
  $53 = $45 + (Math_imul($21, -10258) | 0) + $47 | 0;
  $54 = $34 * 3570 | 0;
  $56 = $15 + (Math_imul($35, -7678) | 0) | 0;
  $59 = (Math_imul($21, -1396) | 0) - $54 + $56 | 0;
  $62 = $54 + (Math_imul($21, -6581) | 0) + $56 | 0;
  $71 = Math_imul(HEAP32[$$0332338 + 32 >> 2] | 0, HEAP16[$$0333337 + 16 >> 1] | 0) | 0;
  $77 = Math_imul(HEAP32[$$0332338 + 96 >> 2] | 0, HEAP16[$$0333337 + 48 >> 1] | 0) | 0;
  $83 = Math_imul(HEAP32[$$0332338 + 160 >> 2] | 0, HEAP16[$$0333337 + 80 >> 1] | 0) | 0;
  $89 = Math_imul(HEAP32[$$0332338 + 224 >> 2] | 0, HEAP16[$$0333337 + 112 >> 1] | 0) | 0;
  $91 = ($77 + $71 | 0) * 10832 | 0;
  $93 = ($83 + $71 | 0) * 9534 | 0;
  $94 = $89 + $71 | 0;
  $95 = $94 * 7682 | 0;
  $99 = $91 + (Math_imul($71, -16549) | 0) + $93 + $95 | 0;
  $101 = Math_imul($83 + $77 | 0, -2773) | 0;
  $107 = Math_imul($89 + $77 | 0, -9534) | 0;
  $110 = $91 + ($77 * 6859 | 0) + $101 + $107 | 0;
  $115 = Math_imul($89 + $83 | 0, -5384) | 0;
  $116 = $101 + (Math_imul($83, -12879) | 0) + $93 + $115 | 0;
  $117 = $107 + ($89 * 18068 | 0) + $95 + $115 | 0;
  $123 = ($94 * 2773 | 0) + (($83 - $77 | 0) * 7682 | 0) | 0;
  $125 = $123 + ($71 * 2611 | 0) + (Math_imul($77, -3818) | 0) | 0;
  $129 = $123 + ($83 * 3150 | 0) + (Math_imul($89, -14273) | 0) | 0;
  HEAP32[$$0330339 >> 2] = $99 + $41 >> 11;
  HEAP32[$$0330339 + 384 >> 2] = $41 - $99 >> 11;
  HEAP32[$$0330339 + 32 >> 2] = $110 + $50 >> 11;
  HEAP32[$$0330339 + 352 >> 2] = $50 - $110 >> 11;
  HEAP32[$$0330339 + 64 >> 2] = $116 + $44 >> 11;
  HEAP32[$$0330339 + 320 >> 2] = $44 - $116 >> 11;
  HEAP32[$$0330339 + 96 >> 2] = $117 + $59 >> 11;
  HEAP32[$$0330339 + 288 >> 2] = $59 - $117 >> 11;
  HEAP32[$$0330339 + 128 >> 2] = $125 + $62 >> 11;
  HEAP32[$$0330339 + 256 >> 2] = $62 - $125 >> 11;
  HEAP32[$$0330339 + 160 >> 2] = $129 + $53 >> 11;
  HEAP32[$$0330339 + 224 >> 2] = $53 - $129 >> 11;
  HEAP32[$$0330339 + 192 >> 2] = (($35 - $21 | 0) * 11585 | 0) + $15 >> 11;
  $$0340 = $$0340 + 1 | 0;
  if (($$0340 | 0) == 8) break; else {
   $$0330339 = $$0330339 + 4 | 0;
   $$0332338 = $$0332338 + 4 | 0;
   $$0333337 = $$0333337 + 2 | 0;
  }
 }
 $171 = $7 + -384 | 0;
 $$1331335 = $5;
 $$1336 = 0;
 while (1) {
  $174 = (HEAP32[$3 + ($$1336 << 2) >> 2] | 0) + $4 | 0;
  $177 = (HEAP32[$$1331335 >> 2] << 13) + 134348800 | 0;
  $179 = HEAP32[$$1331335 + 8 >> 2] | 0;
  $181 = HEAP32[$$1331335 + 16 >> 2] | 0;
  $183 = HEAP32[$$1331335 + 24 >> 2] | 0;
  $184 = $183 + $181 | 0;
  $185 = $181 - $183 | 0;
  $186 = $184 * 9465 | 0;
  $188 = ($185 * 793 | 0) + $177 | 0;
  $191 = $186 + ($179 * 11249 | 0) + $188 | 0;
  $194 = ($179 * 4108 | 0) - $186 + $188 | 0;
  $195 = $184 * 2592 | 0;
  $197 = ($185 * 3989 | 0) + $177 | 0;
  $200 = ($179 * 8672 | 0) - $195 + $197 | 0;
  $203 = $195 + (Math_imul($179, -10258) | 0) + $197 | 0;
  $204 = $184 * 3570 | 0;
  $206 = $177 + (Math_imul($185, -7678) | 0) | 0;
  $209 = (Math_imul($179, -1396) | 0) - $204 + $206 | 0;
  $212 = $204 + (Math_imul($179, -6581) | 0) + $206 | 0;
  $217 = HEAP32[$$1331335 + 4 >> 2] | 0;
  $219 = HEAP32[$$1331335 + 12 >> 2] | 0;
  $221 = HEAP32[$$1331335 + 20 >> 2] | 0;
  $223 = HEAP32[$$1331335 + 28 >> 2] | 0;
  $225 = ($219 + $217 | 0) * 10832 | 0;
  $227 = ($221 + $217 | 0) * 9534 | 0;
  $228 = $223 + $217 | 0;
  $229 = $228 * 7682 | 0;
  $233 = $225 + (Math_imul($217, -16549) | 0) + $227 + $229 | 0;
  $235 = Math_imul($221 + $219 | 0, -2773) | 0;
  $241 = Math_imul($223 + $219 | 0, -9534) | 0;
  $244 = $225 + ($219 * 6859 | 0) + $235 + $241 | 0;
  $249 = Math_imul($223 + $221 | 0, -5384) | 0;
  $250 = $235 + (Math_imul($221, -12879) | 0) + $227 + $249 | 0;
  $251 = $241 + ($223 * 18068 | 0) + $229 + $249 | 0;
  $257 = ($228 * 2773 | 0) + (($221 - $219 | 0) * 7682 | 0) | 0;
  $259 = $257 + ($217 * 2611 | 0) + (Math_imul($219, -3818) | 0) | 0;
  $263 = $257 + ($221 * 3150 | 0) + (Math_imul($223, -14273) | 0) | 0;
  HEAP8[$174 >> 0] = HEAP8[$171 + (($233 + $191 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$174 + 12 >> 0] = HEAP8[$171 + (($191 - $233 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$174 + 1 >> 0] = HEAP8[$171 + (($244 + $200 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$174 + 11 >> 0] = HEAP8[$171 + (($200 - $244 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$174 + 2 >> 0] = HEAP8[$171 + (($250 + $194 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$174 + 10 >> 0] = HEAP8[$171 + (($194 - $250 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$174 + 3 >> 0] = HEAP8[$171 + (($251 + $209 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$174 + 9 >> 0] = HEAP8[$171 + (($209 - $251 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$174 + 4 >> 0] = HEAP8[$171 + (($259 + $212 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$174 + 8 >> 0] = HEAP8[$171 + (($212 - $259 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$174 + 5 >> 0] = HEAP8[$171 + (($263 + $203 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$174 + 7 >> 0] = HEAP8[$171 + (($203 - $263 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$174 + 6 >> 0] = HEAP8[$171 + (((($185 - $179 | 0) * 11585 | 0) + $177 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1336 = $$1336 + 1 | 0;
  if (($$1336 | 0) == 13) break; else $$1331335 = $$1331335 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function _jpeg_idct_6x3($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $111 = 0, $118 = 0, $119 = 0, $120 = 0, $127 = 0, $143 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $159 = 0, $175 = 0, $182 = 0, $183 = 0, $184 = 0, $191 = 0, $197 = 0, $199 = 0, $201 = 0, $204 = 0, $207 = 0, $208 = 0, $210 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $218 = 0, $22 = 0, $220 = 0, $222 = 0, $225 = 0, $228 = 0, $23 = 0, $231 = 0, $24 = 0, $269 = 0, $272 = 0, $275 = 0, $276 = 0, $278 = 0, $281 = 0, $282 = 0, $283 = 0, $285 = 0, $287 = 0, $289 = 0, $292 = 0, $295 = 0, $298 = 0, $31 = 0, $337 = 0, $340 = 0, $343 = 0, $344 = 0, $346 = 0, $349 = 0, $350 = 0, $351 = 0, $353 = 0, $355 = 0, $357 = 0, $359 = 0, $362 = 0, $365 = 0, $368 = 0, $38 = 0, $41 = 0, $47 = 0, $5 = 0, $54 = 0, $55 = 0, $56 = 0, $63 = 0, $7 = 0, $79 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $9 = HEAP32[$1 + 84 >> 2] | 0;
 $15 = Math_imul(HEAP16[$2 >> 1] << 13, HEAP32[$9 >> 2] | 0) | 0 | 1024;
 $22 = Math_imul((HEAP16[$2 + 32 >> 1] | 0) * 5793 | 0, HEAP32[$9 + 64 >> 2] | 0) | 0;
 $23 = $22 + $15 | 0;
 $24 = (Math_imul($22, -2) | 0) + $15 | 0;
 $31 = Math_imul((HEAP16[$2 + 16 >> 1] | 0) * 10033 | 0, HEAP32[$9 + 32 >> 2] | 0) | 0;
 HEAP32[$5 >> 2] = $31 + $23 >> 11;
 HEAP32[$5 + 48 >> 2] = $23 - $31 >> 11;
 $38 = $5 + 24 | 0;
 HEAP32[$38 >> 2] = $24 >> 11;
 $41 = $5 + 4 | 0;
 $47 = Math_imul(HEAP16[$2 + 2 >> 1] << 13, HEAP32[$9 + 4 >> 2] | 0) | 0 | 1024;
 $54 = Math_imul((HEAP16[$2 + 34 >> 1] | 0) * 5793 | 0, HEAP32[$9 + 68 >> 2] | 0) | 0;
 $55 = $54 + $47 | 0;
 $56 = (Math_imul($54, -2) | 0) + $47 | 0;
 $63 = Math_imul((HEAP16[$2 + 18 >> 1] | 0) * 10033 | 0, HEAP32[$9 + 36 >> 2] | 0) | 0;
 HEAP32[$41 >> 2] = $63 + $55 >> 11;
 HEAP32[$5 + 52 >> 2] = $55 - $63 >> 11;
 HEAP32[$5 + 28 >> 2] = $56 >> 11;
 $79 = Math_imul(HEAP16[$2 + 4 >> 1] << 13, HEAP32[$9 + 8 >> 2] | 0) | 0 | 1024;
 $86 = Math_imul((HEAP16[$2 + 36 >> 1] | 0) * 5793 | 0, HEAP32[$9 + 72 >> 2] | 0) | 0;
 $87 = $86 + $79 | 0;
 $88 = (Math_imul($86, -2) | 0) + $79 | 0;
 $95 = Math_imul((HEAP16[$2 + 20 >> 1] | 0) * 10033 | 0, HEAP32[$9 + 40 >> 2] | 0) | 0;
 HEAP32[$5 + 8 >> 2] = $95 + $87 >> 11;
 HEAP32[$5 + 56 >> 2] = $87 - $95 >> 11;
 HEAP32[$5 + 32 >> 2] = $88 >> 11;
 $111 = Math_imul(HEAP16[$2 + 6 >> 1] << 13, HEAP32[$9 + 12 >> 2] | 0) | 0 | 1024;
 $118 = Math_imul((HEAP16[$2 + 38 >> 1] | 0) * 5793 | 0, HEAP32[$9 + 76 >> 2] | 0) | 0;
 $119 = $118 + $111 | 0;
 $120 = (Math_imul($118, -2) | 0) + $111 | 0;
 $127 = Math_imul((HEAP16[$2 + 22 >> 1] | 0) * 10033 | 0, HEAP32[$9 + 44 >> 2] | 0) | 0;
 HEAP32[$5 + 12 >> 2] = $127 + $119 >> 11;
 HEAP32[$5 + 60 >> 2] = $119 - $127 >> 11;
 HEAP32[$5 + 36 >> 2] = $120 >> 11;
 $143 = Math_imul(HEAP16[$2 + 8 >> 1] << 13, HEAP32[$9 + 16 >> 2] | 0) | 0 | 1024;
 $150 = Math_imul((HEAP16[$2 + 40 >> 1] | 0) * 5793 | 0, HEAP32[$9 + 80 >> 2] | 0) | 0;
 $151 = $150 + $143 | 0;
 $152 = (Math_imul($150, -2) | 0) + $143 | 0;
 $159 = Math_imul((HEAP16[$2 + 24 >> 1] | 0) * 10033 | 0, HEAP32[$9 + 48 >> 2] | 0) | 0;
 HEAP32[$5 + 16 >> 2] = $159 + $151 >> 11;
 HEAP32[$5 + 64 >> 2] = $151 - $159 >> 11;
 HEAP32[$5 + 40 >> 2] = $152 >> 11;
 $175 = Math_imul(HEAP16[$2 + 10 >> 1] << 13, HEAP32[$9 + 20 >> 2] | 0) | 0 | 1024;
 $182 = Math_imul((HEAP16[$2 + 42 >> 1] | 0) * 5793 | 0, HEAP32[$9 + 84 >> 2] | 0) | 0;
 $183 = $182 + $175 | 0;
 $184 = (Math_imul($182, -2) | 0) + $175 | 0;
 $191 = Math_imul((HEAP16[$2 + 26 >> 1] | 0) * 10033 | 0, HEAP32[$9 + 52 >> 2] | 0) | 0;
 HEAP32[$5 + 20 >> 2] = $191 + $183 >> 11;
 HEAP32[$5 + 68 >> 2] = $183 - $191 >> 11;
 $197 = $184 >> 11;
 HEAP32[$5 + 44 >> 2] = $197;
 $199 = $7 + -384 | 0;
 $201 = (HEAP32[$3 >> 2] | 0) + $4 | 0;
 $204 = (HEAP32[$5 >> 2] << 13) + 134348800 | 0;
 $207 = (HEAP32[$5 + 16 >> 2] | 0) * 5793 | 0;
 $208 = $204 + $207 | 0;
 $210 = $204 - $207 - $207 | 0;
 $213 = (HEAP32[$5 + 8 >> 2] | 0) * 10033 | 0;
 $214 = $208 + $213 | 0;
 $215 = $208 - $213 | 0;
 $216 = HEAP32[$41 >> 2] | 0;
 $218 = HEAP32[$5 + 12 >> 2] | 0;
 $220 = HEAP32[$5 + 20 >> 2] | 0;
 $222 = ($220 + $216 | 0) * 2998 | 0;
 $225 = $222 + ($218 + $216 << 13) | 0;
 $228 = $222 + ($220 - $218 << 13) | 0;
 $231 = $216 - $218 - $220 << 13;
 HEAP8[$201 >> 0] = HEAP8[$199 + (($225 + $214 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$201 + 5 >> 0] = HEAP8[$199 + (($214 - $225 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$201 + 1 >> 0] = HEAP8[$199 + (($231 + $210 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$201 + 4 >> 0] = HEAP8[$199 + (($210 - $231 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$201 + 2 >> 0] = HEAP8[$199 + (($228 + $215 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$201 + 3 >> 0] = HEAP8[$199 + (($215 - $228 | 0) >>> 18 & 1023) >> 0] | 0;
 $269 = (HEAP32[$3 + 4 >> 2] | 0) + $4 | 0;
 $272 = (HEAP32[$38 >> 2] << 13) + 134348800 | 0;
 $275 = (HEAP32[$5 + 40 >> 2] | 0) * 5793 | 0;
 $276 = $272 + $275 | 0;
 $278 = $272 - $275 - $275 | 0;
 $281 = (HEAP32[$5 + 32 >> 2] | 0) * 10033 | 0;
 $282 = $276 + $281 | 0;
 $283 = $276 - $281 | 0;
 $285 = HEAP32[$5 + 28 >> 2] | 0;
 $287 = HEAP32[$5 + 36 >> 2] | 0;
 $289 = ($197 + $285 | 0) * 2998 | 0;
 $292 = $289 + ($287 + $285 << 13) | 0;
 $295 = $289 + ($197 - $287 << 13) | 0;
 $298 = $285 - $287 - $197 << 13;
 HEAP8[$269 >> 0] = HEAP8[$199 + (($292 + $282 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$269 + 5 >> 0] = HEAP8[$199 + (($282 - $292 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$269 + 1 >> 0] = HEAP8[$199 + (($298 + $278 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$269 + 4 >> 0] = HEAP8[$199 + (($278 - $298 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$269 + 2 >> 0] = HEAP8[$199 + (($295 + $283 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$269 + 3 >> 0] = HEAP8[$199 + (($283 - $295 | 0) >>> 18 & 1023) >> 0] | 0;
 $337 = (HEAP32[$3 + 8 >> 2] | 0) + $4 | 0;
 $340 = (HEAP32[$5 + 48 >> 2] << 13) + 134348800 | 0;
 $343 = (HEAP32[$5 + 64 >> 2] | 0) * 5793 | 0;
 $344 = $340 + $343 | 0;
 $346 = $340 - $343 - $343 | 0;
 $349 = (HEAP32[$5 + 56 >> 2] | 0) * 10033 | 0;
 $350 = $344 + $349 | 0;
 $351 = $344 - $349 | 0;
 $353 = HEAP32[$5 + 52 >> 2] | 0;
 $355 = HEAP32[$5 + 60 >> 2] | 0;
 $357 = HEAP32[$5 + 68 >> 2] | 0;
 $359 = ($357 + $353 | 0) * 2998 | 0;
 $362 = $359 + ($355 + $353 << 13) | 0;
 $365 = $359 + ($357 - $355 << 13) | 0;
 $368 = $353 - $355 - $357 << 13;
 HEAP8[$337 >> 0] = HEAP8[$199 + (($362 + $350 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$337 + 5 >> 0] = HEAP8[$199 + (($350 - $362 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$337 + 1 >> 0] = HEAP8[$199 + (($368 + $346 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$337 + 4 >> 0] = HEAP8[$199 + (($346 - $368 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$337 + 2 >> 0] = HEAP8[$199 + (($365 + $351 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$337 + 3 >> 0] = HEAP8[$199 + (($351 - $365 | 0) >>> 18 & 1023) >> 0] | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 $12 = $12 | 0;
 $13 = $13 | 0;
 $14 = $14 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i108 = 0, $$0$i$i112 = 0, $$0$ph = 0, $$0101 = 0, $$0103 = 0, $$0106 = 0, $$07$i$i = 0, $$095 = 0, $$097 = 0, $$099 = 0, $$1 = 0, $$1102 = 0, $$1104 = 0, $$196 = 0, $$198 = 0, $$2 = 0, $$2105 = 0, $$3 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $126 = 0, $129 = 0, $130 = 0, $132 = 0, $135 = 0, $136 = 0, $138 = 0, $142 = 0, $144 = 0, $146 = 0, $147 = 0, $150 = 0, $152 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $30 = 0, $40 = 0, $41 = 0, $43 = 0, $44 = 0, $51 = 0, $52 = 0, $54 = 0, $55 = 0, $58 = 0, $61 = 0, $62 = 0, $63 = 0, $65 = 0, $69 = 0, $79 = 0, $81 = 0, $82 = 0, $83 = 0, $91 = 0, $92 = 0, $93 = 0, $99 = 0, $spec$select = 0;
 HEAP32[$2 >> 2] = $0;
 $16 = $13 + 8 + 3 | 0;
 $17 = $13 + 4 | 0;
 $19 = $12 + 8 + 3 | 0;
 $20 = $12 + 4 | 0;
 $22 = ($3 & 512 | 0) == 0;
 $23 = ($14 | 0) > 0;
 $24 = $11 + 11 | 0;
 $25 = $11 + 4 | 0;
 $$0106 = 0;
 $$099 = $4;
 while (1) {
  if (($$0106 | 0) == 4) break;
  L4 : do switch (HEAP8[$8 + $$0106 >> 0] | 0) {
  case 0:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $$2 = $$099;
    break;
   }
  case 1:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 127]($6, 32) | 0;
    $41 = HEAP32[$2 >> 2] | 0;
    HEAP32[$2 >> 2] = $41 + 4;
    HEAP32[$41 >> 2] = $40;
    $$2 = $$099;
    break;
   }
  case 3:
   {
    $43 = HEAP8[$16 >> 0] | 0;
    $44 = $43 << 24 >> 24 < 0;
    if (!(($44 ? HEAP32[$17 >> 2] | 0 : $43 & 255) | 0)) $$2 = $$099; else {
     $51 = HEAP32[($44 ? HEAP32[$13 >> 2] | 0 : $13) >> 2] | 0;
     $52 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $52 + 4;
     HEAP32[$52 >> 2] = $51;
     $$2 = $$099;
    }
    break;
   }
  case 2:
   {
    $54 = HEAP8[$19 >> 0] | 0;
    $55 = $54 << 24 >> 24 < 0;
    $58 = $55 ? HEAP32[$20 >> 2] | 0 : $54 & 255;
    if ($22 | ($58 | 0) == 0) $$2 = $$099; else {
     $61 = $55 ? HEAP32[$12 >> 2] | 0 : $12;
     $62 = $61 + ($58 << 2) | 0;
     $63 = HEAP32[$2 >> 2] | 0;
     $$0$i$i112 = $63;
     $65 = $61;
     while (1) {
      if (($65 | 0) == ($62 | 0)) break;
      HEAP32[$$0$i$i112 >> 2] = HEAP32[$65 >> 2];
      $$0$i$i112 = $$0$i$i112 + 4 | 0;
      $65 = $65 + 4 | 0;
     }
     HEAP32[$2 >> 2] = $63 + ($58 << 2);
     $$2 = $$099;
    }
    break;
   }
  case 4:
   {
    $69 = HEAP32[$2 >> 2] | 0;
    $spec$select = $7 ? $$099 + 4 | 0 : $$099;
    $$0103 = $spec$select;
    while (1) {
     if ($$0103 >>> 0 >= $5 >>> 0) break;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 12 >> 2] & 63]($6, 2048, HEAP32[$$0103 >> 2] | 0) | 0)) break;
     $$0103 = $$0103 + 4 | 0;
    }
    if ($23) {
     $$0101 = $14;
     $$1104 = $$0103;
     while (1) {
      $79 = ($$0101 | 0) > 0;
      if (!($$1104 >>> 0 > $spec$select >>> 0 & $79)) break;
      $81 = $$1104 + -4 | 0;
      $82 = HEAP32[$81 >> 2] | 0;
      $83 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $83 + 4;
      HEAP32[$83 >> 2] = $82;
      $$0101 = $$0101 + -1 | 0;
      $$1104 = $81;
     }
     if ($79) $93 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 127]($6, 48) | 0; else $93 = 0;
     $$1102 = $$0101;
     $92 = HEAP32[$2 >> 2] | 0;
     while (1) {
      $91 = $92 + 4 | 0;
      if (($$1102 | 0) <= 0) break;
      HEAP32[$92 >> 2] = $93;
      $$1102 = $$1102 + -1 | 0;
      $92 = $91;
     }
     HEAP32[$2 >> 2] = $91;
     HEAP32[$92 >> 2] = $9;
     $$2105 = $$1104;
    } else $$2105 = $$0103;
    if (($$2105 | 0) == ($spec$select | 0)) {
     $99 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 127]($6, 48) | 0;
     $100 = HEAP32[$2 >> 2] | 0;
     $101 = $100 + 4 | 0;
     HEAP32[$2 >> 2] = $101;
     HEAP32[$100 >> 2] = $99;
     $135 = $101;
    } else {
     $102 = HEAP8[$24 >> 0] | 0;
     $103 = $102 << 24 >> 24 < 0;
     if (!(($103 ? HEAP32[$25 >> 2] | 0 : $102 & 255) | 0)) $$0$ph = -1; else $$0$ph = HEAP8[($103 ? HEAP32[$11 >> 2] | 0 : $11) >> 0] | 0;
     $$0 = $$0$ph;
     $$095 = 0;
     $$097 = 0;
     $$3 = $$2105;
     while (1) {
      if (($$3 | 0) == ($spec$select | 0)) break;
      $114 = HEAP32[$2 >> 2] | 0;
      if (($$097 | 0) == ($$0 | 0)) {
       $115 = $114 + 4 | 0;
       HEAP32[$2 >> 2] = $115;
       HEAP32[$114 >> 2] = $10;
       $116 = $$095 + 1 | 0;
       $117 = HEAP8[$24 >> 0] | 0;
       $118 = $117 << 24 >> 24 < 0;
       if ($116 >>> 0 < ($118 ? HEAP32[$25 >> 2] | 0 : $117 & 255) >>> 0) {
        $126 = HEAP8[($118 ? HEAP32[$11 >> 2] | 0 : $11) + $116 >> 0] | 0;
        $$1 = $126 << 24 >> 24 == 127 ? -1 : $126 << 24 >> 24;
        $$196 = $116;
        $$198 = 0;
        $132 = $115;
       } else {
        $$1 = $$097;
        $$196 = $116;
        $$198 = 0;
        $132 = $115;
       }
      } else {
       $$1 = $$0;
       $$196 = $$095;
       $$198 = $$097;
       $132 = $114;
      }
      $129 = $$3 + -4 | 0;
      $130 = HEAP32[$129 >> 2] | 0;
      HEAP32[$2 >> 2] = $132 + 4;
      HEAP32[$132 >> 2] = $130;
      $$0 = $$1;
      $$095 = $$196;
      $$097 = $$198 + 1 | 0;
      $$3 = $129;
     }
     $135 = HEAP32[$2 >> 2] | 0;
    }
    if (($69 | 0) == ($135 | 0)) $$2 = $spec$select; else {
     $$0$i$i108 = $135;
     $$07$i$i = $69;
     while (1) {
      $136 = $$0$i$i108 + -4 | 0;
      if ($$07$i$i >>> 0 >= $136 >>> 0) {
       $$2 = $spec$select;
       break L4;
      }
      $138 = HEAP32[$$07$i$i >> 2] | 0;
      HEAP32[$$07$i$i >> 2] = HEAP32[$136 >> 2];
      HEAP32[$136 >> 2] = $138;
      $$0$i$i108 = $136;
      $$07$i$i = $$07$i$i + 4 | 0;
     }
    }
    break;
   }
  default:
   $$2 = $$099;
  } while (0);
  $$0106 = $$0106 + 1 | 0;
  $$099 = $$2;
 }
 $26 = HEAP8[$16 >> 0] | 0;
 $27 = $26 << 24 >> 24 < 0;
 $30 = $27 ? HEAP32[$17 >> 2] | 0 : $26 & 255;
 if ($30 >>> 0 > 1) {
  $142 = HEAP32[$13 >> 2] | 0;
  $144 = $27 ? $142 + 4 | 0 : $17;
  $146 = ($27 ? $142 : $13) + ($30 << 2) | 0;
  $147 = HEAP32[$2 >> 2] | 0;
  $150 = $146 - $144 | 0;
  $$0$i$i = $147;
  $152 = $144;
  while (1) {
   if (($152 | 0) == ($146 | 0)) break;
   HEAP32[$$0$i$i >> 2] = HEAP32[$152 >> 2];
   $$0$i$i = $$0$i$i + 4 | 0;
   $152 = $152 + 4 | 0;
  }
  HEAP32[$2 >> 2] = $147 + ($150 >>> 2 << 2);
 }
 switch (($3 & 176) << 24 >> 24) {
 case 32:
  {
   HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[$1 >> 2] = $0;
 }
 return;
}

function _pattern_match($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0175 = 0.0, $$0178 = 0, $$0180 = 0, $$0184 = 0, $$0186 = 0, $$0192 = 0, $$0200 = 0, $$0208 = 0, $$0210 = 0, $$1176 = 0.0, $$1179 = 0, $$1181 = 0, $$1181$in = 0, $$1185 = 0, $$1187 = 0, $$1193 = 0, $$1201 = 0, $$1209 = 0, $$1211 = 0, $$2 = 0, $$2182 = 0, $$2188 = 0, $$2202 = 0, $$2212 = 0, $$3 = 0.0, $$3183 = 0, $$3183$in = 0, $$3189 = 0, $$3195 = 0, $$3203 = 0, $$3213 = 0, $$4 = 0.0, $$4190 = 0, $$4196 = 0, $$4204 = 0, $$5 = 0.0, $$5191 = 0, $$5197 = 0, $$5205 = 0, $$6206 = 0, $$7 = 0.0, $$7199 = 0, $$7207 = 0, $10 = 0, $115 = 0.0, $116 = 0, $12 = 0, $18 = 0, $20 = 0, $25 = 0, $31 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $41 = 0, $44 = 0, $45 = 0, $61 = 0.0, $62 = 0, $65 = 0, $67 = 0, $75 = 0, $80 = 0, $86 = 0.0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $95 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 L1 : do if (($0 | 0) == 0 | ($3 | 0) < 1) {
  HEAP32[$4 >> 2] = 0;
  HEAP32[$5 >> 2] = 0;
  HEAPF64[$6 >> 3] = -1.0;
  $$2 = -1;
 } else switch ($1 | 0) {
 case 0:
  {
   $9 = Math_imul($3, $3) | 0;
   $10 = $9 * 3 | 0;
   $12 = _malloc($9 * 12 | 0) | 0;
   if (!$12) {
    _arLog(0, 3, 45930, $vararg_buffer);
    _exit(1);
   }
   $$0186 = 0;
   $$0208 = 0;
   while (1) {
    if (($$0186 | 0) == ($10 | 0)) break;
    $18 = $$0208 + (~HEAP8[$2 + $$0186 >> 0] & 255) | 0;
    $$0186 = $$0186 + 1 | 0;
    $$0208 = $18;
   }
   $20 = ($$0208 >>> 0) / ($10 >>> 0) | 0;
   $$0210 = 0;
   $$1187 = 0;
   while (1) {
    if (($$1187 | 0) == ($10 | 0)) break;
    $25 = (~HEAP8[$2 + $$1187 >> 0] & 255) - $20 | 0;
    HEAP32[$12 + ($$1187 << 2) >> 2] = $25;
    $$0210 = (Math_imul($25, $25) | 0) + $$0210 | 0;
    $$1187 = $$1187 + 1 | 0;
   }
   $31 = +Math_sqrt(+(+($$0210 | 0)));
   if ($31 / (+($3 | 0) * 1.7320508) < 15.0) {
    HEAP32[$4 >> 2] = 0;
    HEAP32[$5 >> 2] = 0;
    HEAPF64[$6 >> 3] = -1.0;
    _free($12);
    $$2 = -2;
    break L1;
   }
   $36 = HEAP32[$0 >> 2] | 0;
   $37 = $0 + 8 | 0;
   $38 = $0 + 12 | 0;
   $39 = $0 + 16 | 0;
   $$0175 = 0.0;
   $$0178 = 0;
   $$0180 = -1;
   $$0192 = -1;
   $$0200 = -1;
   while (1) {
    if (($$0178 | 0) >= ($36 | 0)) break;
    $41 = HEAP32[$37 >> 2] | 0;
    $$1181$in = $$0180;
    L23 : while (1) {
     $$1181 = $$1181$in + 1 | 0;
     switch (HEAP32[$41 + ($$1181 << 2) >> 2] | 0) {
     case 0:
      {
       $$1181$in = $$1181;
       break;
      }
     case 2:
      {
       $$3 = $$0175;
       $$3195 = $$0192;
       $$3203 = $$0200;
       break L23;
       break;
      }
     default:
      {
       label = 18;
       break L23;
      }
     }
    }
    L25 : do if ((label | 0) == 18) {
     label = 0;
     $44 = $$1181 << 2;
     $$0184 = 0;
     $$1176 = $$0175;
     $$1193 = $$0192;
     $$1201 = $$0200;
     while (1) {
      if (($$0184 | 0) == 4) {
       $$3 = $$1176;
       $$3195 = $$1193;
       $$3203 = $$1201;
       break L25;
      }
      $45 = $$0184 + $44 | 0;
      $$1211 = 0;
      $$2188 = 0;
      while (1) {
       if (($$2188 | 0) == ($10 | 0)) break;
       $$1211 = (Math_imul(HEAP32[(HEAP32[(HEAP32[$38 >> 2] | 0) + ($45 << 2) >> 2] | 0) + ($$2188 << 2) >> 2] | 0, HEAP32[$12 + ($$2188 << 2) >> 2] | 0) | 0) + $$1211 | 0;
       $$2188 = $$2188 + 1 | 0;
      }
      $61 = +($$1211 | 0) / +HEAPF64[(HEAP32[$39 >> 2] | 0) + ($45 << 3) >> 3] / $31;
      $62 = $61 > $$1176;
      $$2202 = $62 ? $$0184 : $$1201;
      $$0184 = $$0184 + 1 | 0;
      $$1176 = $62 ? $61 : $$1176;
      $$1193 = $62 ? $$1181 : $$1193;
      $$1201 = $$2202;
     }
    } while (0);
    $$0175 = $$3;
    $$0178 = $$0178 + 1 | 0;
    $$0180 = $$1181;
    $$0192 = $$3195;
    $$0200 = $$3203;
   }
   HEAP32[$5 >> 2] = $$0200;
   HEAP32[$4 >> 2] = $$0192;
   HEAPF64[$6 >> 3] = $$0175;
   _free($12);
   $$2 = 0;
   break L1;
   break;
  }
 case 1:
  {
   $65 = Math_imul($3, $3) | 0;
   $67 = _malloc($65 << 2) | 0;
   if (!$67) {
    _arLog(0, 3, 45930, $vararg_buffer1);
    _exit(1);
   }
   $$1209 = 0;
   $$3189 = 0;
   while (1) {
    if (($$3189 | 0) == ($65 | 0)) break;
    $$1209 = $$1209 + (~HEAP8[$2 + $$3189 >> 0] & 255) | 0;
    $$3189 = $$3189 + 1 | 0;
   }
   $75 = ($$1209 >>> 0) / ($65 >>> 0) | 0;
   $$2212 = 0;
   $$4190 = 0;
   while (1) {
    if (($$4190 | 0) == ($65 | 0)) break;
    $80 = (~HEAP8[$2 + $$4190 >> 0] & 255) - $75 | 0;
    HEAP32[$67 + ($$4190 << 2) >> 2] = $80;
    $$2212 = (Math_imul($80, $80) | 0) + $$2212 | 0;
    $$4190 = $$4190 + 1 | 0;
   }
   $86 = +Math_sqrt(+(+($$2212 | 0)));
   if ($86 / +($3 | 0) < 15.0) {
    HEAP32[$4 >> 2] = 0;
    HEAP32[$5 >> 2] = 0;
    HEAPF64[$6 >> 3] = -1.0;
    _free($67);
    $$2 = -2;
    break L1;
   }
   $90 = HEAP32[$0 >> 2] | 0;
   $91 = $0 + 8 | 0;
   $92 = $0 + 20 | 0;
   $93 = $0 + 24 | 0;
   $$1179 = 0;
   $$2182 = -1;
   $$4 = 0.0;
   $$4196 = -1;
   $$4204 = -1;
   while (1) {
    if (($$1179 | 0) >= ($90 | 0)) break;
    $95 = HEAP32[$91 >> 2] | 0;
    $$3183$in = $$2182;
    L54 : while (1) {
     $$3183 = $$3183$in + 1 | 0;
     switch (HEAP32[$95 + ($$3183 << 2) >> 2] | 0) {
     case 0:
      {
       $$3183$in = $$3183;
       break;
      }
     case 2:
      {
       $$7 = $$4;
       $$7199 = $$4196;
       $$7207 = $$4204;
       break L54;
       break;
      }
     default:
      {
       label = 40;
       break L54;
      }
     }
    }
    L56 : do if ((label | 0) == 40) {
     label = 0;
     $98 = $$3183 << 2;
     $$1185 = 0;
     $$5 = $$4;
     $$5197 = $$4196;
     $$5205 = $$4204;
     while (1) {
      if (($$1185 | 0) == 4) {
       $$7 = $$5;
       $$7199 = $$5197;
       $$7207 = $$5205;
       break L56;
      }
      $99 = $$1185 + $98 | 0;
      $$3213 = 0;
      $$5191 = 0;
      while (1) {
       if (($$5191 | 0) == ($65 | 0)) break;
       $$3213 = (Math_imul(HEAP32[(HEAP32[(HEAP32[$92 >> 2] | 0) + ($99 << 2) >> 2] | 0) + ($$5191 << 2) >> 2] | 0, HEAP32[$67 + ($$5191 << 2) >> 2] | 0) | 0) + $$3213 | 0;
       $$5191 = $$5191 + 1 | 0;
      }
      $115 = +($$3213 | 0) / +HEAPF64[(HEAP32[$93 >> 2] | 0) + ($99 << 3) >> 3] / $86;
      $116 = $115 > $$5;
      $$6206 = $116 ? $$1185 : $$5205;
      $$1185 = $$1185 + 1 | 0;
      $$5 = $116 ? $115 : $$5;
      $$5197 = $116 ? $$3183 : $$5197;
      $$5205 = $$6206;
     }
    } while (0);
    $$1179 = $$1179 + 1 | 0;
    $$2182 = $$3183;
    $$4 = $$7;
    $$4196 = $$7199;
    $$4204 = $$7207;
   }
   HEAP32[$5 >> 2] = $$4204;
   HEAP32[$4 >> 2] = $$4196;
   HEAPF64[$6 >> 3] = $$4;
   _free($67);
   $$2 = 0;
   break L1;
   break;
  }
 default:
  {
   $$2 = -1;
   break L1;
  }
 } while (0);
 STACKTOP = sp;
 return $$2 | 0;
}

function _jpeg_idct_14x14($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0332340 = 0, $$0334339 = 0, $$0335338 = 0, $$0341 = 0, $$1333336 = 0, $$1337 = 0, $100 = 0, $103 = 0, $106 = 0, $108 = 0, $112 = 0, $115 = 0, $118 = 0, $15 = 0, $162 = 0, $165 = 0, $168 = 0, $170 = 0, $173 = 0, $174 = 0, $176 = 0, $178 = 0, $180 = 0, $182 = 0, $184 = 0, $186 = 0, $188 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $199 = 0, $201 = 0, $203 = 0, $206 = 0, $207 = 0, $209 = 0, $21 = 0, $210 = 0, $214 = 0, $215 = 0, $218 = 0, $220 = 0, $221 = 0, $224 = 0, $227 = 0, $230 = 0, $232 = 0, $236 = 0, $239 = 0, $24 = 0, $242 = 0, $25 = 0, $27 = 0, $30 = 0, $36 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $63 = 0, $69 = 0, $7 = 0, $75 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $86 = 0, $90 = 0, $91 = 0, $94 = 0, $96 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 448 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(448);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0332340 = $5;
 $$0334339 = HEAP32[$1 + 84 >> 2] | 0;
 $$0335338 = $2;
 $$0341 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0335338 >> 1] << 13, HEAP32[$$0334339 >> 2] | 0) | 0 | 1024;
  $21 = Math_imul(HEAP32[$$0334339 + 128 >> 2] | 0, HEAP16[$$0335338 + 64 >> 1] | 0) | 0;
  $24 = ($21 * 10438 | 0) + $15 | 0;
  $25 = ($21 * 2578 | 0) + $15 | 0;
  $27 = (Math_imul($21, -7223) | 0) + $15 | 0;
  $30 = (Math_imul($21, -11586) | 0) + $15 >> 11;
  $36 = Math_imul(HEAP32[$$0334339 + 64 >> 2] | 0, HEAP16[$$0335338 + 32 >> 1] | 0) | 0;
  $42 = Math_imul(HEAP32[$$0334339 + 192 >> 2] | 0, HEAP16[$$0335338 + 96 >> 1] | 0) | 0;
  $44 = ($42 + $36 | 0) * 9058 | 0;
  $46 = $44 + ($36 * 2237 | 0) | 0;
  $48 = $44 + (Math_imul($42, -14084) | 0) | 0;
  $51 = (Math_imul($42, -11295) | 0) + ($36 * 5027 | 0) | 0;
  $52 = $46 + $24 | 0;
  $53 = $24 - $46 | 0;
  $54 = $48 + $25 | 0;
  $55 = $25 - $48 | 0;
  $56 = $51 + $27 | 0;
  $57 = $27 - $51 | 0;
  $63 = Math_imul(HEAP32[$$0334339 + 32 >> 2] | 0, HEAP16[$$0335338 + 16 >> 1] | 0) | 0;
  $69 = Math_imul(HEAP32[$$0334339 + 96 >> 2] | 0, HEAP16[$$0335338 + 48 >> 1] | 0) | 0;
  $75 = Math_imul(HEAP32[$$0334339 + 160 >> 2] | 0, HEAP16[$$0335338 + 80 >> 1] | 0) | 0;
  $81 = Math_imul(HEAP32[$$0334339 + 224 >> 2] | 0, HEAP16[$$0335338 + 112 >> 1] | 0) | 0;
  $82 = $81 << 13;
  $83 = $75 + $63 | 0;
  $85 = ($69 + $63 | 0) * 10935 | 0;
  $86 = $83 * 9810 | 0;
  $90 = $85 + (Math_imul($63, -9232) | 0) + $86 + $82 | 0;
  $91 = $83 * 6164 | 0;
  $94 = $63 - $69 | 0;
  $96 = ($94 * 3826 | 0) - $82 | 0;
  $97 = $91 + (Math_imul($63, -8693) | 0) + $96 | 0;
  $100 = (Math_imul($75 + $69 | 0, -1297) | 0) - $82 | 0;
  $103 = $85 + (Math_imul($69, -3474) | 0) + $100 | 0;
  $106 = $86 + (Math_imul($75, -19447) | 0) + $100 | 0;
  $108 = ($75 - $69 | 0) * 11512 | 0;
  $112 = $108 + (Math_imul($75, -13850) | 0) + $91 + $82 | 0;
  $115 = $108 + ($69 * 5529 | 0) + $96 | 0;
  $118 = $94 - $75 + $81 << 2;
  HEAP32[$$0332340 >> 2] = $90 + $52 >> 11;
  HEAP32[$$0332340 + 416 >> 2] = $52 - $90 >> 11;
  HEAP32[$$0332340 + 32 >> 2] = $103 + $54 >> 11;
  HEAP32[$$0332340 + 384 >> 2] = $54 - $103 >> 11;
  HEAP32[$$0332340 + 64 >> 2] = $106 + $56 >> 11;
  HEAP32[$$0332340 + 352 >> 2] = $56 - $106 >> 11;
  HEAP32[$$0332340 + 96 >> 2] = $118 + $30;
  HEAP32[$$0332340 + 320 >> 2] = $30 - $118;
  HEAP32[$$0332340 + 128 >> 2] = $112 + $57 >> 11;
  HEAP32[$$0332340 + 288 >> 2] = $57 - $112 >> 11;
  HEAP32[$$0332340 + 160 >> 2] = $115 + $55 >> 11;
  HEAP32[$$0332340 + 256 >> 2] = $55 - $115 >> 11;
  HEAP32[$$0332340 + 192 >> 2] = $97 + $53 >> 11;
  HEAP32[$$0332340 + 224 >> 2] = $53 - $97 >> 11;
  $$0341 = $$0341 + 1 | 0;
  if (($$0341 | 0) == 8) break; else {
   $$0332340 = $$0332340 + 4 | 0;
   $$0334339 = $$0334339 + 4 | 0;
   $$0335338 = $$0335338 + 2 | 0;
  }
 }
 $162 = $7 + -384 | 0;
 $$1333336 = $5;
 $$1337 = 0;
 while (1) {
  $165 = (HEAP32[$3 + ($$1337 << 2) >> 2] | 0) + $4 | 0;
  $168 = (HEAP32[$$1333336 >> 2] << 13) + 134348800 | 0;
  $170 = HEAP32[$$1333336 + 16 >> 2] | 0;
  $173 = $168 + ($170 * 10438 | 0) | 0;
  $174 = $168 + ($170 * 2578 | 0) | 0;
  $176 = $168 + (Math_imul($170, -7223) | 0) | 0;
  $178 = $168 + (Math_imul($170, -11586) | 0) | 0;
  $180 = HEAP32[$$1333336 + 8 >> 2] | 0;
  $182 = HEAP32[$$1333336 + 24 >> 2] | 0;
  $184 = ($182 + $180 | 0) * 9058 | 0;
  $186 = $184 + ($180 * 2237 | 0) | 0;
  $188 = $184 + (Math_imul($182, -14084) | 0) | 0;
  $191 = (Math_imul($182, -11295) | 0) + ($180 * 5027 | 0) | 0;
  $192 = $186 + $173 | 0;
  $193 = $173 - $186 | 0;
  $194 = $188 + $174 | 0;
  $195 = $174 - $188 | 0;
  $196 = $191 + $176 | 0;
  $197 = $176 - $191 | 0;
  $199 = HEAP32[$$1333336 + 4 >> 2] | 0;
  $201 = HEAP32[$$1333336 + 12 >> 2] | 0;
  $203 = HEAP32[$$1333336 + 20 >> 2] | 0;
  $206 = HEAP32[$$1333336 + 28 >> 2] << 13;
  $207 = $203 + $199 | 0;
  $209 = ($201 + $199 | 0) * 10935 | 0;
  $210 = $207 * 9810 | 0;
  $214 = $209 + (Math_imul($199, -9232) | 0) + $210 + $206 | 0;
  $215 = $207 * 6164 | 0;
  $218 = $199 - $201 | 0;
  $220 = ($218 * 3826 | 0) - $206 | 0;
  $221 = $215 + (Math_imul($199, -8693) | 0) + $220 | 0;
  $224 = (Math_imul($203 + $201 | 0, -1297) | 0) - $206 | 0;
  $227 = $209 + (Math_imul($201, -3474) | 0) + $224 | 0;
  $230 = $210 + (Math_imul($203, -19447) | 0) + $224 | 0;
  $232 = ($203 - $201 | 0) * 11512 | 0;
  $236 = $206 + (Math_imul($203, -13850) | 0) + $232 + $215 | 0;
  $239 = $232 + ($201 * 5529 | 0) + $220 | 0;
  $242 = ($218 - $203 << 13) + $206 | 0;
  HEAP8[$165 >> 0] = HEAP8[$162 + (($214 + $192 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 13 >> 0] = HEAP8[$162 + (($192 - $214 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 1 >> 0] = HEAP8[$162 + (($227 + $194 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 12 >> 0] = HEAP8[$162 + (($194 - $227 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 2 >> 0] = HEAP8[$162 + (($230 + $196 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 11 >> 0] = HEAP8[$162 + (($196 - $230 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 3 >> 0] = HEAP8[$162 + (($242 + $178 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 10 >> 0] = HEAP8[$162 + (($178 - $242 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 4 >> 0] = HEAP8[$162 + (($236 + $197 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 9 >> 0] = HEAP8[$162 + (($197 - $236 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 5 >> 0] = HEAP8[$162 + (($239 + $195 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 8 >> 0] = HEAP8[$162 + (($195 - $239 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 6 >> 0] = HEAP8[$162 + (($221 + $193 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 7 >> 0] = HEAP8[$162 + (($193 - $221 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1337 = $$1337 + 1 | 0;
  if (($$1337 | 0) == 14) break; else $$1333336 = $$1333336 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN6vision25DoGScaleInvariantDetector21findSubpixelLocationsEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$070 = 0, $$2 = 0, $10 = 0.0, $100 = 0, $105 = 0, $109 = 0, $11 = 0, $111 = 0, $114 = 0.0, $117 = 0.0, $133 = 0.0, $134 = 0, $137 = 0.0, $14 = 0.0, $144 = 0.0, $146 = 0, $151 = 0.0, $153 = 0, $16 = 0.0, $160 = 0.0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $41 = 0, $46 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $6 = 0, $63 = 0, $66 = 0, $67 = 0, $7 = 0, $70 = 0, $71 = 0, $73 = 0, $74 = 0, $81 = 0.0, $84 = 0.0, $87 = 0, $89 = 0, $90 = 0.0, $92 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 $2 = sp + 68 | 0;
 $3 = sp;
 $4 = sp + 56 | 0;
 $5 = sp + 44 | 0;
 $6 = sp + 40 | 0;
 $7 = sp + 36 | 0;
 $10 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$0 + 52 >> 2]);
 $11 = $0 + 56 | 0;
 $14 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$11 >> 2] + 1.0);
 $16 = $14 / +HEAPF32[$11 >> 2];
 $17 = $0 + 60 | 0;
 $18 = $0 + 64 | 0;
 $19 = $0 + 32 | 0;
 $20 = $5 + 4 | 0;
 $21 = $0 + 88 | 0;
 $22 = $4 + 4 | 0;
 $23 = $4 + 8 | 0;
 $24 = $5 + 8 | 0;
 $$0 = 0;
 $$070 = 0;
 while (1) {
  $26 = HEAP32[$17 >> 2] | 0;
  $30 = $26;
  if ($$070 >>> 0 >= (((HEAP32[$18 >> 2] | 0) - $26 | 0) / 36 | 0) >>> 0) {
   label = 3;
   break;
  }
  $31 = $30 + ($$070 * 36 | 0) | 0;
  $32 = $30 + ($$070 * 36 | 0) + 16 | 0;
  $33 = HEAP32[$32 >> 2] | 0;
  if (($33 | 0) >= (__ZNK6vision10DoGPyramid17numScalePerOctaveEv($19) | 0)) {
   label = 5;
   break;
  }
  $51 = $30 + ($$070 * 36 | 0) + 12 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  $54 = Math_imul(__ZNK6vision10DoGPyramid17numScalePerOctaveEv($19) | 0, $52) | 0;
  $56 = $54 + (HEAP32[$32 >> 2] | 0) | 0;
  $58 = $30 + ($$070 * 36 | 0) + 4 | 0;
  __ZN6vision25bilinear_downsample_pointERfS0_ffi($6, $7, +HEAPF32[$31 >> 2], +HEAPF32[$58 >> 2], HEAP32[$51 >> 2] | 0);
  $63 = ~~(+HEAPF32[$6 >> 2] + .5);
  $66 = ~~(+HEAPF32[$7 >> 2] + .5);
  $67 = __ZNK6vision10DoGPyramid6imagesEv($19) | 0;
  $70 = (HEAP32[$67 >> 2] | 0) + ($56 + -1 << 5) | 0;
  $71 = __ZNK6vision10DoGPyramid6imagesEv($19) | 0;
  $73 = (HEAP32[$71 >> 2] | 0) + ($56 << 5) | 0;
  $74 = __ZNK6vision10DoGPyramid6imagesEv($19) | 0;
  if (((__ZN6vision22ComputeSubpixelHessianEPfS0_RKNS_5ImageES3_S3_ii($3, $4, $70, $73, (HEAP32[$74 >> 2] | 0) + ($56 + 1 << 5) | 0, $63, $66) | 0 ? __ZN6vision29SolveSymmetricLinearSystem3x3IfEEbPT_PKS1_S4_($5, $3, $4) | 0 : 0) ? ($81 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$5 >> 2]), $84 = $81 + +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$20 >> 2]), !($84 > +HEAPF32[$21 >> 2])) : 0) ? ($87 = $30 + ($$070 * 36 | 0) + 32 | 0, __ZN6vision16ComputeEdgeScoreERfPKf($87, $3) | 0) : 0) {
   $89 = $30 + ($$070 * 36 | 0) + 24 | 0;
   $90 = +HEAPF32[$89 >> 2];
   $92 = (__ZNK6vision5Image3getIfEEPKT_m($73, $66) | 0) + ($63 << 2) | 0;
   if (!($90 == +HEAPF32[$92 >> 2])) {
    label = 11;
    break;
   }
   $111 = (__ZNK6vision5Image3getIfEEPKT_m($73, $66) | 0) + ($63 << 2) | 0;
   $114 = +HEAPF32[$5 >> 2];
   $117 = +HEAPF32[$20 >> 2];
   HEAPF32[$89 >> 2] = +HEAPF32[$111 >> 2] - (+HEAPF32[$4 >> 2] * $114 + +HEAPF32[$22 >> 2] * $117 + +HEAPF32[$23 >> 2] * +HEAPF32[$24 >> 2]);
   __ZN6vision23bilinear_upsample_pointERfS0_ffi($31, $58, $114 + +HEAPF32[$6 >> 2], $117 + +HEAPF32[$7 >> 2], HEAP32[$51 >> 2] | 0);
   $133 = +HEAPF32[$24 >> 2] + +(HEAP32[$32 >> 2] | 0);
   $134 = $30 + ($$070 * 36 | 0) + 20 | 0;
   HEAPF32[$134 >> 2] = $133;
   $137 = +__ZN6vision10ClipScalarIfEET_S1_S1_S1_($133, 0.0, +(__ZNK6vision10DoGPyramid17numScalePerOctaveEv($19) | 0));
   HEAPF32[$134 >> 2] = $137;
   if (((((+Math_abs(+(+HEAPF32[$87 >> 2])) < $16 ? +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$89 >> 2]) >= $10 : 0) ? ($144 = +HEAPF32[$31 >> 2], $144 >= 0.0) : 0) ? ($146 = __ZNK6vision10DoGPyramid6imagesEv($19) | 0, $144 < +((__ZNK6vision5Image5widthEv(HEAP32[$146 >> 2] | 0) | 0) >>> 0)) : 0) ? ($151 = +HEAPF32[$58 >> 2], $151 >= 0.0) : 0) ? ($153 = __ZNK6vision10DoGPyramid6imagesEv($19) | 0, $151 < +((__ZNK6vision5Image6heightEv(HEAP32[$153 >> 2] | 0) | 0) >>> 0)) : 0) {
    $160 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf($1, HEAP32[$51 >> 2] | 0, +HEAPF32[$134 >> 2]);
    HEAPF32[$30 + ($$070 * 36 | 0) + 28 >> 2] = $160;
    $162 = $$0 + 1 | 0;
    dest = (HEAP32[$17 >> 2] | 0) + ($$0 * 36 | 0) | 0;
    src = $31;
    stop = dest + 36 | 0;
    do {
     HEAP32[dest >> 2] = HEAP32[src >> 2];
     dest = dest + 4 | 0;
     src = src + 4 | 0;
    } while ((dest | 0) < (stop | 0));
    $$2 = $162;
   } else $$2 = $$0;
  } else $$2 = $$0;
  $$0 = $$2;
  $$070 = $$070 + 1 | 0;
 }
 if ((label | 0) == 3) {
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE6resizeEm($17, $$0);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 5) {
  $41 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 28320) | 0, 26748) | 0, 39072) | 0, 489) | 0, 39079) | 0, 28392) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $41 + (HEAP32[(HEAP32[$41 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $46 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $50 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$46 >> 2] | 0) + 28 >> 2] & 127]($46, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($41, $50) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($41) | 0;
  _abort();
 } else if ((label | 0) == 11) {
  $100 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 28429) | 0, 26748) | 0, 39072) | 0, 526) | 0, 39079) | 0, 28486) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $100 + (HEAP32[(HEAP32[$100 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $105 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $109 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$105 >> 2] | 0) + 28 >> 2] & 127]($105, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($100, $109) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($100) | 0;
  _abort();
 }
}

function __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 $12 = $12 | 0;
 $13 = $13 | 0;
 $14 = $14 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i106 = 0, $$0$i$i113 = 0, $$0$ph = 0, $$0101 = 0, $$0104 = 0, $$07$i$i = 0, $$093 = 0, $$095 = 0, $$097 = 0, $$099 = 0, $$1 = 0, $$1100 = 0, $$1102 = 0, $$194 = 0, $$196 = 0, $$2 = 0, $$2103 = 0, $$3 = 0, $$pn = 0, $$pn$pn = 0, $$sroa$08$0$i = 0, $$sroa$08$0$i112 = 0, $100 = 0, $101 = 0, $103 = 0, $104 = 0, $115 = 0, $117 = 0, $118 = 0, $119 = 0, $127 = 0, $130 = 0, $131 = 0, $132 = 0, $135 = 0, $137 = 0, $139 = 0, $144 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $39 = 0, $40 = 0, $42 = 0, $43 = 0, $50 = 0, $51 = 0, $53 = 0, $54 = 0, $57 = 0, $60 = 0, $61 = 0, $67 = 0, $70 = 0, $80 = 0, $82 = 0, $83 = 0, $84 = 0, $92 = 0, $94 = 0, $spec$select = 0;
 HEAP32[$2 >> 2] = $0;
 $15 = $13 + 11 | 0;
 $16 = $13 + 4 | 0;
 $17 = $12 + 11 | 0;
 $18 = $12 + 4 | 0;
 $20 = ($3 & 512 | 0) == 0;
 $21 = $6 + 8 | 0;
 $22 = ($14 | 0) > 0;
 $23 = $11 + 11 | 0;
 $24 = $11 + 4 | 0;
 $$0104 = 0;
 $$097 = $4;
 while (1) {
  if (($$0104 | 0) == 4) break;
  L4 : do switch (HEAP8[$8 + $$0104 >> 0] | 0) {
  case 0:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $$2 = $$097;
    break;
   }
  case 1:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $39 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 127]($6, 32) | 0;
    $40 = HEAP32[$2 >> 2] | 0;
    HEAP32[$2 >> 2] = $40 + 1;
    HEAP8[$40 >> 0] = $39;
    $$2 = $$097;
    break;
   }
  case 3:
   {
    $42 = HEAP8[$15 >> 0] | 0;
    $43 = $42 << 24 >> 24 < 0;
    if (!(($43 ? HEAP32[$16 >> 2] | 0 : $42 & 255) | 0)) $$2 = $$097; else {
     $50 = HEAP8[($43 ? HEAP32[$13 >> 2] | 0 : $13) >> 0] | 0;
     $51 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $51 + 1;
     HEAP8[$51 >> 0] = $50;
     $$2 = $$097;
    }
    break;
   }
  case 2:
   {
    $53 = HEAP8[$17 >> 0] | 0;
    $54 = $53 << 24 >> 24 < 0;
    $57 = $54 ? HEAP32[$18 >> 2] | 0 : $53 & 255;
    if ($20 | ($57 | 0) == 0) $$2 = $$097; else {
     $60 = $54 ? HEAP32[$12 >> 2] | 0 : $12;
     $61 = $60 + $57 | 0;
     $$0$i$i113 = HEAP32[$2 >> 2] | 0;
     $$sroa$08$0$i112 = $60;
     while (1) {
      if (($$sroa$08$0$i112 | 0) == ($61 | 0)) break;
      HEAP8[$$0$i$i113 >> 0] = HEAP8[$$sroa$08$0$i112 >> 0] | 0;
      $$0$i$i113 = $$0$i$i113 + 1 | 0;
      $$sroa$08$0$i112 = $$sroa$08$0$i112 + 1 | 0;
     }
     HEAP32[$2 >> 2] = $$0$i$i113;
     $$2 = $$097;
    }
    break;
   }
  case 4:
   {
    $67 = HEAP32[$2 >> 2] | 0;
    $spec$select = $7 ? $$097 + 1 | 0 : $$097;
    $$0101 = $spec$select;
    while (1) {
     if ($$0101 >>> 0 >= $5 >>> 0) break;
     $70 = HEAP8[$$0101 >> 0] | 0;
     if ($70 << 24 >> 24 <= -1) break;
     if (!(HEAP16[(HEAP32[$21 >> 2] | 0) + ($70 << 24 >> 24 << 1) >> 1] & 2048)) break;
     $$0101 = $$0101 + 1 | 0;
    }
    if ($22) {
     $$099 = $14;
     $$1102 = $$0101;
     while (1) {
      $80 = ($$099 | 0) > 0;
      if (!($$1102 >>> 0 > $spec$select >>> 0 & $80)) break;
      $82 = $$1102 + -1 | 0;
      $83 = HEAP8[$82 >> 0] | 0;
      $84 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $84 + 1;
      HEAP8[$84 >> 0] = $83;
      $$099 = $$099 + -1 | 0;
      $$1102 = $82;
     }
     if ($80) $94 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 127]($6, 48) | 0; else $94 = 0;
     $$1100 = $$099;
     while (1) {
      $92 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $92 + 1;
      if (($$1100 | 0) <= 0) break;
      HEAP8[$92 >> 0] = $94;
      $$1100 = $$1100 + -1 | 0;
     }
     HEAP8[$92 >> 0] = $9;
     $$2103 = $$1102;
    } else $$2103 = $$0101;
    L36 : do if (($$2103 | 0) == ($spec$select | 0)) {
     $100 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 127]($6, 48) | 0;
     $101 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $101 + 1;
     HEAP8[$101 >> 0] = $100;
    } else {
     $103 = HEAP8[$23 >> 0] | 0;
     $104 = $103 << 24 >> 24 < 0;
     if (!(($104 ? HEAP32[$24 >> 2] | 0 : $103 & 255) | 0)) $$0$ph = -1; else $$0$ph = HEAP8[($104 ? HEAP32[$11 >> 2] | 0 : $11) >> 0] | 0;
     $$0 = $$0$ph;
     $$093 = 0;
     $$095 = 0;
     $$3 = $$2103;
     while (1) {
      if (($$3 | 0) == ($spec$select | 0)) break L36;
      if (($$095 | 0) == ($$0 | 0)) {
       $115 = HEAP32[$2 >> 2] | 0;
       HEAP32[$2 >> 2] = $115 + 1;
       HEAP8[$115 >> 0] = $10;
       $117 = $$093 + 1 | 0;
       $118 = HEAP8[$23 >> 0] | 0;
       $119 = $118 << 24 >> 24 < 0;
       if ($117 >>> 0 < ($119 ? HEAP32[$24 >> 2] | 0 : $118 & 255) >>> 0) {
        $127 = HEAP8[($119 ? HEAP32[$11 >> 2] | 0 : $11) + $117 >> 0] | 0;
        $$1 = $127 << 24 >> 24 == 127 ? -1 : $127 << 24 >> 24;
        $$194 = $117;
        $$196 = 0;
       } else {
        $$1 = $$095;
        $$194 = $117;
        $$196 = 0;
       }
      } else {
       $$1 = $$0;
       $$194 = $$093;
       $$196 = $$095;
      }
      $130 = $$3 + -1 | 0;
      $131 = HEAP8[$130 >> 0] | 0;
      $132 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $132 + 1;
      HEAP8[$132 >> 0] = $131;
      $$0 = $$1;
      $$093 = $$194;
      $$095 = $$196 + 1 | 0;
      $$3 = $130;
     }
    } while (0);
    $135 = HEAP32[$2 >> 2] | 0;
    if (($67 | 0) == ($135 | 0)) $$2 = $spec$select; else {
     $$0$i$i106 = $135;
     $$07$i$i = $67;
     while (1) {
      $137 = $$0$i$i106 + -1 | 0;
      if ($$07$i$i >>> 0 >= $137 >>> 0) {
       $$2 = $spec$select;
       break L4;
      }
      $139 = HEAP8[$$07$i$i >> 0] | 0;
      HEAP8[$$07$i$i >> 0] = HEAP8[$137 >> 0] | 0;
      HEAP8[$137 >> 0] = $139;
      $$0$i$i106 = $137;
      $$07$i$i = $$07$i$i + 1 | 0;
     }
    }
    break;
   }
  default:
   $$2 = $$097;
  } while (0);
  $$0104 = $$0104 + 1 | 0;
  $$097 = $$2;
 }
 $25 = HEAP8[$15 >> 0] | 0;
 $26 = $25 << 24 >> 24 < 0;
 $29 = $26 ? HEAP32[$16 >> 2] | 0 : $25 & 255;
 if ($29 >>> 0 > 1) {
  $$pn = $26 ? HEAP32[$13 >> 2] | 0 : $13;
  $144 = $$pn + $29 | 0;
  $$0$i$i = HEAP32[$2 >> 2] | 0;
  $$pn$pn = $$pn;
  while (1) {
   $$sroa$08$0$i = $$pn$pn + 1 | 0;
   if (($$sroa$08$0$i | 0) == ($144 | 0)) break;
   HEAP8[$$0$i$i >> 0] = HEAP8[$$sroa$08$0$i >> 0] | 0;
   $$0$i$i = $$0$i$i + 1 | 0;
   $$pn$pn = $$sroa$08$0$i;
  }
  HEAP32[$2 >> 2] = $$0$i$i;
 }
 switch (($3 & 176) << 24 >> 24) {
 case 32:
  {
   HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[$1 >> 2] = $0;
 }
 return;
}

function __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i$i$i40 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i2$i$i46 = 0, $$0$i$i36 = 0, $$0$in = 0, $$023 = 0, $$023$in = 0, $$2 = 0, $107 = 0, $108 = 0, $111 = 0, $113 = 0, $123 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $151 = 0, $164 = 0, $166 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $20 = 0, $23 = 0, $37 = 0, $39 = 0, $49 = 0, $5 = 0, $52 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $76 = 0, $79 = 0, $8 = 0, $92 = 0, $94 = 0, label = 0;
 $5 = HEAP32[$0 >> 2] | 0;
 do if ($5) {
  $8 = HEAP32[$5 + 12 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$8 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$0 >> 2] = 0;
   $180 = 1;
   break;
  } else {
   $180 = (HEAP32[$0 >> 2] | 0) == 0;
   break;
  }
 } else $180 = 1; while (0);
 $20 = HEAP32[$1 >> 2] | 0;
 do if ($20) {
  $23 = HEAP32[$20 + 12 >> 2] | 0;
  if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$23 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($180) {
   $181 = $20;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  } else {
   HEAP32[$1 >> 2] = 0;
   label = 14;
   break;
  }
 } else label = 14; while (0);
 if ((label | 0) == 14) if ($180) label = 16; else {
  $181 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) {
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 6;
  $$2 = 0;
 } else if ((label | 0) == 17) {
  $37 = HEAP32[$0 >> 2] | 0;
  $39 = HEAP32[$37 + 12 >> 2] | 0;
  if (($39 | 0) == (HEAP32[$37 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$37 >> 2] | 0) + 36 >> 2] & 127]($37) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$39 >> 0] | 0) | 0;
  $49 = $$0$i$i & 255;
  if ($49 << 24 >> 24 > -1 ? ($52 = $3 + 8 | 0, HEAP16[(HEAP32[$52 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 2048) : 0) {
   $64 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 63]($3, $49, 0) | 0) << 24 >> 24;
   $65 = HEAP32[$0 >> 2] | 0;
   $66 = $65 + 12 | 0;
   $67 = HEAP32[$66 >> 2] | 0;
   if (($67 | 0) == (HEAP32[$65 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 40 >> 2] & 127]($65) | 0; else {
    HEAP32[$66 >> 2] = $67 + 1;
    __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$67 >> 0] | 0) | 0;
   }
   $$0$in = $64;
   $$023$in = $4;
   $182 = $181;
   $92 = $181;
   while (1) {
    $$0 = $$0$in + -48 | 0;
    $$023 = $$023$in + -1 | 0;
    $76 = HEAP32[$0 >> 2] | 0;
    do if ($76) {
     $79 = HEAP32[$76 + 12 >> 2] | 0;
     if (($79 | 0) == (HEAP32[$76 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 36 >> 2] & 127]($76) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$79 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$0 >> 2] = 0;
      $107 = 1;
      break;
     } else {
      $107 = (HEAP32[$0 >> 2] | 0) == 0;
      break;
     }
    } else $107 = 1; while (0);
    if ($92) {
     $94 = HEAP32[$92 + 12 >> 2] | 0;
     if (($94 | 0) == (HEAP32[$92 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$92 >> 2] | 0) + 36 >> 2] & 127]($92) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$94 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$1 >> 2] = 0;
      $108 = 1;
      $164 = 0;
      $183 = 0;
     } else {
      $108 = 0;
      $164 = $182;
      $183 = $92;
     }
    } else {
     $108 = 1;
     $164 = $182;
     $183 = 0;
    }
    $111 = HEAP32[$0 >> 2] | 0;
    if (!(($$023$in | 0) > 1 & ($107 ^ $108))) break;
    $113 = HEAP32[$111 + 12 >> 2] | 0;
    if (($113 | 0) == (HEAP32[$111 + 16 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$111 >> 2] | 0) + 36 >> 2] & 127]($111) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$113 >> 0] | 0) | 0;
    $123 = $$0$i$i36 & 255;
    if ($123 << 24 >> 24 <= -1) {
     $$2 = $$0;
     break L22;
    }
    if (!(HEAP16[(HEAP32[$52 >> 2] | 0) + ($$0$i$i36 << 24 >> 24 << 1) >> 1] & 2048)) {
     $$2 = $$0;
     break L22;
    }
    $137 = ($$0 * 10 | 0) + ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 63]($3, $123, 0) | 0) << 24 >> 24) | 0;
    $138 = HEAP32[$0 >> 2] | 0;
    $139 = $138 + 12 | 0;
    $140 = HEAP32[$139 >> 2] | 0;
    if (($140 | 0) == (HEAP32[$138 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$138 >> 2] | 0) + 40 >> 2] & 127]($138) | 0; else {
     HEAP32[$139 >> 2] = $140 + 1;
     __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$140 >> 0] | 0) | 0;
    }
    $$0$in = $137;
    $$023$in = $$023;
    $182 = $164;
    $92 = $183;
   }
   do if ($111) {
    $151 = HEAP32[$111 + 12 >> 2] | 0;
    if (($151 | 0) == (HEAP32[$111 + 16 >> 2] | 0)) $$0$i$i$i$i40 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$111 >> 2] | 0) + 36 >> 2] & 127]($111) | 0; else $$0$i$i$i$i40 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$151 >> 0] | 0) | 0;
    if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i40, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
     HEAP32[$0 >> 2] = 0;
     $184 = 1;
     break;
    } else {
     $184 = (HEAP32[$0 >> 2] | 0) == 0;
     break;
    }
   } else $184 = 1; while (0);
   do if ($164) {
    $166 = HEAP32[$164 + 12 >> 2] | 0;
    if (($166 | 0) == (HEAP32[$164 + 16 >> 2] | 0)) $$0$i$i2$i$i46 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$164 >> 2] | 0) + 36 >> 2] & 127]($164) | 0; else $$0$i$i2$i$i46 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$166 >> 0] | 0) | 0;
    if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i46, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($184) {
     $$2 = $$0;
     break L22;
    } else break; else {
     HEAP32[$1 >> 2] = 0;
     label = 63;
     break;
    }
   } else label = 63; while (0);
   if ((label | 0) == 63 ? !$184 : 0) {
    $$2 = $$0;
    break;
   }
   HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 2;
   $$2 = $$0;
   break;
  }
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 4;
  $$2 = 0;
 } while (0);
 return $$2 | 0;
}

function __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_PKff($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$070 = 0, $$071 = 0, $$072 = 0, $$073 = 0, $$076 = 0, $$2 = 0, $$275 = 0, $$278 = 0, $10 = 0, $110 = 0, $113 = 0, $118 = 0, $119 = 0, $131 = 0, $136 = 0, $140 = 0, $15 = 0.0, $22 = 0, $27 = 0, $31 = 0, $33 = 0, $34 = 0, $40 = 0, $43 = 0, $44 = 0, $48 = 0, $5 = 0, $52 = 0, $6 = 0, $60 = 0.0, $69 = 0, $7 = 0, $70 = 0, $79 = 0, $8 = 0, $84 = 0, $88 = 0, $90 = 0, $93 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $5 = sp + 40 | 0;
 $6 = sp;
 $7 = sp + 52 | 0;
 $8 = sp + 48 | 0;
 $10 = $0 + 4 | 0;
 HEAP32[$10 >> 2] = HEAP32[$0 >> 2];
 do if ((__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) != 0 ? (__ZNK6vision18BinaryFeatureStore4sizeEv($2) | 0) != 0 : 0) {
  $15 = +__ZN6vision3sqrIfEET_S1_($4);
  if (!(__ZN6vision16MatrixInverse3x3IfEEbPT_PKS1_S1_($6, $3, 0.0) | 0)) {
   $22 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 35204) | 0, 35229) | 0, 39072) | 0, 196) | 0, 39079) | 0, 35315) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $22 + (HEAP32[(HEAP32[$22 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $27 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
   $31 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$27 >> 2] | 0) + 28 >> 2] & 127]($27, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($22, $31) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($22) | 0;
   _abort();
  }
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm($0, __ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0);
  $33 = $0 + 8 | 0;
  $34 = $0 + 12 | 0;
  $$070 = 0;
  L7 : while (1) {
   if ($$070 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) >>> 0) break;
   $43 = __ZNK6vision18BinaryFeatureStore7featureEm($1, $$070) | 0;
   $44 = __ZNK6vision18BinaryFeatureStore5pointEm($1, $$070) | 0;
   __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvRT_S2_PKS1_S1_S1_($7, $8, $6, +HEAPF32[$44 >> 2], +HEAPF32[$44 + 4 >> 2]);
   $48 = $44 + 16 | 0;
   $$071 = 0;
   $$072 = -1;
   $$073 = -1;
   $$076 = 2147483647;
   while (1) {
    if ($$071 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv($2) | 0) >>> 0) break;
    $52 = __ZNK6vision18BinaryFeatureStore5pointEm($2, $$071) | 0;
    if ((HEAP8[$48 >> 0] | 0) == (HEAP8[$52 + 16 >> 0] | 0) ? ($60 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$7 >> 2] - +HEAPF32[$52 >> 2]), !($60 + +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$8 >> 2] - +HEAPF32[$52 + 4 >> 2]) > $15)) : 0) {
     $69 = __ZN6vision18HammingDistance768EPKjS1_($43, __ZNK6vision18BinaryFeatureStore7featureEm($2, $$071) | 0) | 0;
     $70 = $69 >>> 0 < $$072 >>> 0;
     $$2 = $70 ? $69 : $$072;
     $$275 = $70 ? $$072 : $69 >>> 0 < $$073 >>> 0 ? $69 : $$073;
     $$278 = $70 ? $$071 : $$076;
    } else {
     $$2 = $$072;
     $$275 = $$073;
     $$278 = $$076;
    }
    $$071 = $$071 + 1 | 0;
    $$072 = $$2;
    $$073 = $$275;
    $$076 = $$278;
   }
   do if (($$072 | 0) != -1) {
    if (($$076 | 0) == -1) {
     label = 16;
     break L7;
    }
    if (($$073 | 0) == -1) {
     __ZN6vision7match_tC2Eii($5, $$070, $$076);
     $90 = HEAP32[$10 >> 2] | 0;
     if ($90 >>> 0 < (HEAP32[$33 >> 2] | 0) >>> 0) {
      $93 = $5;
      $98 = HEAP32[$93 + 4 >> 2] | 0;
      $99 = $90;
      HEAP32[$99 >> 2] = HEAP32[$93 >> 2];
      HEAP32[$99 + 4 >> 2] = $98;
      HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $5);
     break;
    }
    if (+($$072 >>> 0) / +($$073 >>> 0) < +HEAPF32[$34 >> 2]) {
     __ZN6vision7match_tC2Eii($5, $$070, $$076);
     $110 = HEAP32[$10 >> 2] | 0;
     if ($110 >>> 0 < (HEAP32[$33 >> 2] | 0) >>> 0) {
      $113 = $5;
      $118 = HEAP32[$113 + 4 >> 2] | 0;
      $119 = $110;
      HEAP32[$119 >> 2] = HEAP32[$113 >> 2];
      HEAP32[$119 + 4 >> 2] = $118;
      HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $5);
    }
   } while (0);
   $$070 = $$070 + 1 | 0;
  }
  if ((label | 0) == 16) {
   $79 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 35348) | 0, 35229) | 0, 39072) | 0, 241) | 0, 39079) | 0, 35420) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $79 + (HEAP32[(HEAP32[$79 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $84 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
   $88 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$84 >> 2] | 0) + 28 >> 2] & 127]($84, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($79, $88) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($79) | 0;
   _abort();
  }
  $40 = (HEAP32[$10 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3;
  if ($40 >>> 0 > (__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) >>> 0) {
   $131 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 35438) | 0, 35229) | 0, 39072) | 0, 256) | 0, 39079) | 0, 35498) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $131 + (HEAP32[(HEAP32[$131 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $136 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
   $140 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$136 >> 2] | 0) + 28 >> 2] & 127]($136, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($131, $140) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($131) | 0;
   _abort();
  } else {
   $$0 = (HEAP32[$10 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3;
   break;
  }
 } else $$0 = 0; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _start_pass($0) {
 $0 = $0 | 0;
 var $$0140148 = 0, $$0152 = 0, $$1144 = 0, $$phi$trans$insert158 = 0, $$pre$phi163Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $103 = 0, $108 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $119 = 0, $127 = 0, $129 = 0, $134 = 0, $135 = 0, $139 = 0, $140 = 0, $148 = 0, $150 = 0, $155 = 0, $156 = 0, $160 = 0, $161 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $171 = 0, $2 = 0, $20 = 0, $22 = 0, $27 = 0, $28 = 0, $3 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $49 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $60 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $76 = 0, $8 = 0, $89 = 0, $9 = 0, $94 = 0, $95 = 0, dest = 0, label = 0, stop = 0;
 $2 = HEAP32[$0 + 468 >> 2] | 0;
 $3 = $0 + 224 | 0;
 $6 = $0 + 412 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = ($7 | 0) == 0;
 do if (HEAP32[$3 >> 2] | 0) {
  $9 = $0 + 416 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if ($8) if (!$10) label = 7; else label = 11; else if ((($10 | 0) >= ($7 | 0) ? ($10 | 0) <= (HEAP32[$0 + 436 >> 2] | 0) : 0) ? (HEAP32[$0 + 340 >> 2] | 0) == 1 : 0) label = 7; else label = 11;
  do if ((label | 0) == 7) {
   $20 = HEAP32[$0 + 420 >> 2] | 0;
   if ($20) {
    $22 = $20 + -1 | 0;
    if (($22 | 0) == (HEAP32[$0 + 424 >> 2] | 0)) $27 = $22; else {
     label = 11;
     break;
    }
   } else $27 = HEAP32[$0 + 424 >> 2] | 0;
   if (($27 | 0) > 13) label = 11;
  } while (0);
  if ((label | 0) == 11) {
   $28 = HEAP32[$0 >> 2] | 0;
   HEAP32[$28 + 20 >> 2] = 17;
   HEAP32[$28 + 24 >> 2] = $7;
   HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = HEAP32[$9 >> 2];
   HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] = HEAP32[$0 + 420 >> 2];
   HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] = HEAP32[$0 + 424 >> 2];
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  }
  $44 = $0 + 340 | 0;
  $45 = HEAP32[$44 >> 2] | 0;
  if (($45 | 0) > 0) {
   $47 = $0 + 160 | 0;
   $48 = $0 + 420 | 0;
   $49 = $0 + 424 | 0;
   $$0152 = 0;
   do {
    $53 = HEAP32[(HEAP32[$0 + 344 + ($$0152 << 2) >> 2] | 0) + 4 >> 2] | 0;
    $54 = HEAP32[$47 >> 2] | 0;
    $55 = HEAP32[$6 >> 2] | 0;
    if ($55) if ((HEAP32[$54 + ($53 << 8) >> 2] | 0) < 0) {
     $60 = HEAP32[$0 >> 2] | 0;
     HEAP32[$60 + 20 >> 2] = 118;
     HEAP32[$60 + 24 >> 2] = $53;
     HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, -1);
     $70 = HEAP32[$6 >> 2] | 0;
    } else $70 = $55; else $70 = 0;
    if (($70 | 0) <= (HEAP32[$9 >> 2] | 0)) {
     $$0140148 = $70;
     while (1) {
      $71 = $54 + ($53 << 8) + ($$0140148 << 2) | 0;
      $72 = HEAP32[$71 >> 2] | 0;
      if ((HEAP32[$48 >> 2] | 0) != ((($72 | 0) > 0 ? $72 : 0) | 0)) {
       $76 = HEAP32[$0 >> 2] | 0;
       HEAP32[$76 + 20 >> 2] = 118;
       HEAP32[$76 + 24 >> 2] = $53;
       HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $$0140148;
       FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, -1);
      }
      HEAP32[$71 >> 2] = HEAP32[$49 >> 2];
      if (($$0140148 | 0) < (HEAP32[$9 >> 2] | 0)) $$0140148 = $$0140148 + 1 | 0; else break;
     }
    }
    $$0152 = $$0152 + 1 | 0;
    $89 = HEAP32[$44 >> 2] | 0;
   } while (($$0152 | 0) < ($89 | 0));
   $$pre$phi163Z2D = $48;
   $171 = $89;
  } else {
   $$pre$phi163Z2D = $0 + 420 | 0;
   $171 = $45;
  }
  $94 = (HEAP32[$6 >> 2] | 0) == 0;
  $95 = $2 + 4 | 0;
  if (!(HEAP32[$$pre$phi163Z2D >> 2] | 0)) if ($94) {
   HEAP32[$95 >> 2] = 66;
   $$pre$phiZ2D = $44;
   $114 = $171;
   break;
  } else {
   HEAP32[$95 >> 2] = 67;
   $$pre$phiZ2D = $44;
   $114 = $171;
   break;
  } else if ($94) {
   HEAP32[$95 >> 2] = 68;
   $$pre$phiZ2D = $44;
   $114 = $171;
   break;
  } else {
   HEAP32[$95 >> 2] = 69;
   $$pre$phiZ2D = $44;
   $114 = $171;
   break;
  }
 } else {
  if (($8 ? (HEAP32[$0 + 420 >> 2] | 0) == 0 : 0) ? (HEAP32[$0 + 424 >> 2] | 0) == 0 : 0) {
   $103 = HEAP32[$0 + 416 >> 2] | 0;
   if (($103 | 0) < 64 ? ($103 | 0) != (HEAP32[$0 + 436 >> 2] | 0) : 0) label = 36;
  } else label = 36;
  if ((label | 0) == 36) {
   $108 = HEAP32[$0 >> 2] | 0;
   HEAP32[$108 + 20 >> 2] = 125;
   FUNCTION_TABLE_vii[HEAP32[$108 + 4 >> 2] & 255]($0, -1);
  }
  HEAP32[$2 + 4 >> 2] = 70;
  $$phi$trans$insert158 = $0 + 340 | 0;
  $$pre$phiZ2D = $$phi$trans$insert158;
  $114 = HEAP32[$$phi$trans$insert158 >> 2] | 0;
 } while (0);
 if (($114 | 0) <= 0) {
  $165 = $2 + 12 | 0;
  HEAP32[$165 >> 2] = 0;
  $166 = $2 + 16 | 0;
  HEAP32[$166 >> 2] = 0;
  $167 = $2 + 20 | 0;
  HEAP32[$167 >> 2] = -16;
  $168 = $0 + 280 | 0;
  $169 = HEAP32[$168 >> 2] | 0;
  $170 = $2 + 56 | 0;
  HEAP32[$170 >> 2] = $169;
  return;
 }
 $115 = $0 + 436 | 0;
 $116 = $0 + 420 | 0;
 $117 = $0 + 4 | 0;
 $$1144 = 0;
 do {
  $119 = HEAP32[$0 + 344 + ($$1144 << 2) >> 2] | 0;
  if (HEAP32[$3 >> 2] | 0) if (!(HEAP32[$6 >> 2] | 0)) {
   if (!(HEAP32[$116 >> 2] | 0)) label = 43;
  } else label = 50; else label = 43;
  do if ((label | 0) == 43) {
   label = 0;
   $127 = HEAP32[$119 + 20 >> 2] | 0;
   if ($127 >>> 0 > 15) {
    $129 = HEAP32[$0 >> 2] | 0;
    HEAP32[$129 + 20 >> 2] = 50;
    HEAP32[$129 + 24 >> 2] = $127;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   }
   $134 = $2 + 60 + ($127 << 2) | 0;
   $135 = HEAP32[$134 >> 2] | 0;
   if (!$135) {
    $139 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$117 >> 2] >> 2] & 63]($0, 1, 64) | 0;
    HEAP32[$134 >> 2] = $139;
    $140 = $139;
   } else $140 = $135;
   dest = $140;
   stop = dest + 64 | 0;
   do {
    HEAP8[dest >> 0] = 0;
    dest = dest + 1 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP32[$2 + 24 + ($$1144 << 2) >> 2] = 0;
   HEAP32[$2 + 40 + ($$1144 << 2) >> 2] = 0;
   if (!(HEAP32[$3 >> 2] | 0)) if (!(HEAP32[$115 >> 2] | 0)) break; else {
    label = 50;
    break;
   } else if (!(HEAP32[$6 >> 2] | 0)) break; else {
    label = 50;
    break;
   }
  } while (0);
  if ((label | 0) == 50) {
   label = 0;
   $148 = HEAP32[$119 + 24 >> 2] | 0;
   if ($148 >>> 0 > 15) {
    $150 = HEAP32[$0 >> 2] | 0;
    HEAP32[$150 + 20 >> 2] = 50;
    HEAP32[$150 + 24 >> 2] = $148;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   }
   $155 = $2 + 124 + ($148 << 2) | 0;
   $156 = HEAP32[$155 >> 2] | 0;
   if (!$156) {
    $160 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$117 >> 2] >> 2] & 63]($0, 1, 256) | 0;
    HEAP32[$155 >> 2] = $160;
    $161 = $160;
   } else $161 = $156;
   _memset($161 | 0, 0, 256) | 0;
  }
  $$1144 = $$1144 + 1 | 0;
 } while (($$1144 | 0) < (HEAP32[$$pre$phiZ2D >> 2] | 0));
 $165 = $2 + 12 | 0;
 HEAP32[$165 >> 2] = 0;
 $166 = $2 + 16 | 0;
 HEAP32[$166 >> 2] = 0;
 $167 = $2 + 20 | 0;
 HEAP32[$167 >> 2] = -16;
 $168 = $0 + 280 | 0;
 $169 = HEAP32[$168 >> 2] | 0;
 $170 = $2 + 56 | 0;
 HEAP32[$170 >> 2] = $169;
 return;
}

function __ZN6vision16PruneDoGFeaturesERNSt3__26vectorINS1_INS1_INS0_4pairIfmEENS0_9allocatorIS3_EEEENS4_IS6_EEEENS4_IS8_EEEERNS1_INS_25DoGScaleInvariantDetector12FeaturePointENS4_ISD_EEEERKSF_iiiii($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0 = 0, $$087 = 0, $$089 = 0, $$090 = 0, $$091 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$cast = 0, $$pre = 0, $$pre118 = 0, $$pre118119 = 0, $$pre118120 = 0, $$sroa$speculated = 0, $10 = 0, $101 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $109 = 0, $11 = 0, $116 = 0, $12 = 0, $120 = 0, $130 = 0, $135 = 0, $139 = 0, $145 = 0, $146 = 0, $153 = 0, $16 = 0.0, $20 = 0.0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0, $38 = 0, $40 = 0, $41 = 0, $48 = 0, $52 = 0, $53 = 0, $54 = 0, $62 = 0, $65 = 0, $68 = 0.0, $69 = 0, $70 = 0, $74 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $90 = 0, $94 = 0, $97 = 0, $storemerge = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 8 | 0;
 $$byval_copy1 = sp + 32 | 0;
 $$byval_copy = sp + 28 | 0;
 $8 = sp + 24 | 0;
 $9 = sp + 20 | 0;
 $10 = sp + 16 | 0;
 $11 = sp;
 $12 = Math_imul($4, $3) | 0;
 $16 = +Math_ceil(+(+($5 | 0) / +($3 | 0)));
 $20 = +Math_ceil(+(+($6 | 0) / +($4 | 0)));
 $22 = $1 + 4 | 0;
 HEAP32[$22 >> 2] = HEAP32[$1 >> 2];
 __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE7reserveEm($1, $7);
 $23 = $0 + 4 | 0;
 $25 = HEAP32[$0 >> 2] | 0;
 $27 = ((HEAP32[$23 >> 2] | 0) - $25 | 0) / 12 | 0;
 $$cast = $25;
 $$087 = 0;
 while (1) {
  if (($$087 | 0) == ($27 | 0)) break;
  $38 = HEAP32[$$cast + ($$087 * 12 | 0) >> 2] | 0;
  $40 = ((HEAP32[$$cast + ($$087 * 12 | 0) + 4 >> 2] | 0) - $38 | 0) / 12 | 0;
  $41 = $38;
  $$091 = 0;
  while (1) {
   if (($$091 | 0) == ($40 | 0)) break;
   HEAP32[$41 + ($$091 * 12 | 0) + 4 >> 2] = HEAP32[$41 + ($$091 * 12 | 0) >> 2];
   $$091 = $$091 + 1 | 0;
  }
  $$087 = $$087 + 1 | 0;
 }
 $28 = ($7 | 0) / ($12 | 0) | 0;
 $31 = $2 + 4 | 0;
 $32 = +(~~$16 | 0);
 $33 = +(~~$20 | 0);
 $34 = $$byval_copy2 + 4 | 0;
 $storemerge = 0;
 while (1) {
  $48 = HEAP32[$2 >> 2] | 0;
  $52 = $48;
  if ($storemerge >>> 0 >= (((HEAP32[$31 >> 2] | 0) - $48 | 0) / 36 | 0) >>> 0) break;
  $62 = ~~(+HEAPF32[$52 + ($storemerge * 36 | 0) + 4 >> 2] / $33);
  $65 = HEAP32[(HEAP32[$0 >> 2] | 0) + (~~(+HEAPF32[$52 + ($storemerge * 36 | 0) >> 2] / $32) * 12 | 0) >> 2] | 0;
  $68 = +Math_abs(+(+HEAPF32[$52 + ($storemerge * 36 | 0) + 24 >> 2]));
  HEAPF32[$$byval_copy2 >> 2] = $68;
  HEAP32[$34 >> 2] = $storemerge;
  $69 = $65 + ($62 * 12 | 0) + 4 | 0;
  $70 = HEAP32[$69 >> 2] | 0;
  if ($70 >>> 0 < (HEAP32[$65 + ($62 * 12 | 0) + 8 >> 2] | 0) >>> 0) {
   $74 = $$byval_copy2;
   $79 = HEAP32[$74 + 4 >> 2] | 0;
   $80 = $70;
   HEAP32[$80 >> 2] = HEAP32[$74 >> 2];
   HEAP32[$80 + 4 >> 2] = $79;
   HEAP32[$69 >> 2] = (HEAP32[$69 >> 2] | 0) + 8;
  } else __ZNSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($65 + ($62 * 12 | 0) | 0, $$byval_copy2);
  $storemerge = $storemerge + 1 | 0;
 }
 $53 = $1 + 8 | 0;
 $$pre = HEAP32[$0 >> 2] | 0;
 $54 = $$pre;
 $$090 = 0;
 $$pre118119 = $54;
 $153 = $54;
 $90 = $$pre;
 L17 : while (1) {
  if ($$090 >>> 0 >= (((HEAP32[$23 >> 2] | 0) - $90 | 0) / 12 | 0) >>> 0) {
   label = 16;
   break;
  }
  $$089 = 0;
  $$pre118120 = $$pre118119;
  $94 = $153;
  while (1) {
   $97 = HEAP32[$94 + ($$090 * 12 | 0) >> 2] | 0;
   $101 = $97;
   if ($$089 >>> 0 >= (((HEAP32[$94 + ($$090 * 12 | 0) + 4 >> 2] | 0) - $97 | 0) / 12 | 0) >>> 0) break;
   $104 = $101 + ($$089 * 12 | 0) | 0;
   $105 = $101 + ($$089 * 12 | 0) + 4 | 0;
   $106 = HEAP32[$105 >> 2] | 0;
   $107 = HEAP32[$104 >> 2] | 0;
   $109 = $106 - $107 >> 3;
   $$sroa$speculated = $28 >>> 0 < $109 >>> 0 ? $28 : $109;
   if (!$$sroa$speculated) $$pre118 = $$pre118120; else {
    HEAP32[$8 >> 2] = $107;
    HEAP32[$9 >> 2] = $107 + ($$sroa$speculated << 3);
    HEAP32[$10 >> 2] = $106;
    HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
    HEAP32[$$byval_copy1 >> 2] = HEAP32[$9 >> 2];
    HEAP32[$$byval_copy2 >> 2] = HEAP32[$10 >> 2];
    __ZNSt3__213__nth_elementIRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEvT0_S9_S9_T_($$byval_copy, $$byval_copy1, $$byval_copy2, $11);
    $116 = HEAP32[$104 >> 2] | 0;
    $120 = $116;
    if ($$sroa$speculated >>> 0 > (HEAP32[$105 >> 2] | 0) - $116 >> 3 >>> 0 ? !(+HEAPF32[$120 >> 2] >= +HEAPF32[$120 + ($$sroa$speculated << 3) >> 2]) : 0) {
     label = 23;
     break L17;
    }
    $$0 = 0;
    while (1) {
     if ($$0 >>> 0 >= $$sroa$speculated >>> 0) break;
     $145 = (HEAP32[$2 >> 2] | 0) + ((HEAP32[(HEAP32[$104 >> 2] | 0) + ($$0 << 3) + 4 >> 2] | 0) * 36 | 0) | 0;
     $146 = HEAP32[$22 >> 2] | 0;
     if (($146 | 0) == (HEAP32[$53 >> 2] | 0)) __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($1, $145); else {
      dest = $146;
      src = $145;
      stop = dest + 36 | 0;
      do {
       HEAP32[dest >> 2] = HEAP32[src >> 2];
       dest = dest + 4 | 0;
       src = src + 4 | 0;
      } while ((dest | 0) < (stop | 0));
      HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 36;
     }
     $$0 = $$0 + 1 | 0;
    }
    $$pre118 = HEAP32[$0 >> 2] | 0;
   }
   $$089 = $$089 + 1 | 0;
   $$pre118120 = $$pre118;
   $94 = $$pre118;
  }
  $$090 = $$090 + 1 | 0;
  $$pre118119 = $$pre118120;
  $153 = $94;
  $90 = $94;
 }
 if ((label | 0) == 16) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 23) {
  $130 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 28243) | 0, 26748) | 0, 39072) | 0, 661) | 0, 39079) | 0, 28301) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $130 + (HEAP32[(HEAP32[$130 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $135 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 66512) | 0;
  $139 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$135 >> 2] | 0) + 28 >> 2] & 127]($135, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($130, $139) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($130) | 0;
  _abort();
 }
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $110 = 0, $115 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $127 = 0, $13 = 0, $132 = 0, $14 = 0, $141 = 0, $143 = 0, $15 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 $6 = sp + 300 | 0;
 $8 = sp + 288 | 0;
 $9 = sp + 276 | 0;
 $10 = sp + 272 | 0;
 $11 = sp;
 $12 = sp + 268 | 0;
 $13 = sp + 264 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $157 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if ($31) {
   $33 = HEAP32[$31 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $132 = 0;
    $158 = 1;
    $80 = 0;
   } else {
    $132 = $157;
    $158 = 0;
    $80 = $31;
   }
  } else {
   $132 = 0;
   $158 = 1;
   $80 = 0;
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if ($45) {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($158) {
    $159 = $45;
    break;
   } else {
    $$2 = $$0;
    $141 = $45;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;
    $141 = 0;
    break;
   } else $159 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$81 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41, $14, $$1, $10, $13, HEAP32[$6 >> 2] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $141 = $159;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $157 = $132;
  $31 = $80;
 }
 $103 = HEAP8[$8 + 11 >> 0] | 0;
 if (($103 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $103 & 255) | 0 ? ($110 = HEAP32[$12 >> 2] | 0, ($110 - $11 | 0) < 160) : 0) {
  $115 = HEAP32[$13 >> 2] | 0;
  HEAP32[$12 >> 2] = $110 + 4;
  HEAP32[$110 >> 2] = $115;
 }
 $118 = __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $119 = getTempRet0() | 0;
 $120 = $5;
 HEAP32[$120 >> 2] = $118;
 HEAP32[$120 + 4 >> 2] = $119;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if ($80) {
  $127 = HEAP32[$80 + 12 >> 2] | 0;
  if (($127 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$132 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$127 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $160 = 1;
  } else $160 = 0;
 } else $160 = 1;
 do if ($141) {
  $143 = HEAP32[$141 + 12 >> 2] | 0;
  if (($143 | 0) == (HEAP32[$141 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$141 >> 2] | 0) + 36 >> 2] & 127]($141) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$143 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($160) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $160 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $111 = 0, $116 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $128 = 0, $13 = 0, $133 = 0, $14 = 0, $142 = 0, $144 = 0, $15 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 224 | 0;
 $8 = sp + 212 | 0;
 $9 = sp + 200 | 0;
 $10 = sp + 196 | 0;
 $11 = sp;
 $12 = sp + 192 | 0;
 $13 = sp + 188 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $158 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if ($31) {
   $33 = HEAP32[$31 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $133 = 0;
    $159 = 1;
    $80 = 0;
   } else {
    $133 = $158;
    $159 = 0;
    $80 = $31;
   }
  } else {
   $133 = 0;
   $159 = 1;
   $80 = 0;
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if ($45) {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($159) {
    $160 = $45;
    break;
   } else {
    $$2 = $$0;
    $142 = $45;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($159) {
    $$2 = $$0;
    $142 = 0;
    break;
   } else $160 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($$0$i$i41 & 255, $14, $$1, $10, $13, HEAP8[$6 >> 0] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $142 = $160;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $158 = $133;
  $31 = $80;
 }
 $104 = HEAP8[$8 + 11 >> 0] | 0;
 if (($104 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $104 & 255) | 0 ? ($111 = HEAP32[$12 >> 2] | 0, ($111 - $11 | 0) < 160) : 0) {
  $116 = HEAP32[$13 >> 2] | 0;
  HEAP32[$12 >> 2] = $111 + 4;
  HEAP32[$111 >> 2] = $116;
 }
 $119 = __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $120 = getTempRet0() | 0;
 $121 = $5;
 HEAP32[$121 >> 2] = $119;
 HEAP32[$121 + 4 >> 2] = $120;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if ($80) {
  $128 = HEAP32[$80 + 12 >> 2] | 0;
  if (($128 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$133 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$128 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $161 = 1;
  } else $161 = 0;
 } else $161 = 1;
 do if ($142) {
  $144 = HEAP32[$142 + 12 >> 2] | 0;
  if (($144 | 0) == (HEAP32[$142 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$142 >> 2] | 0) + 36 >> 2] & 127]($142) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$144 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($161) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $161 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $110 = 0, $115 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $127 = 0, $13 = 0, $132 = 0, $14 = 0, $141 = 0, $143 = 0, $15 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 $6 = sp + 300 | 0;
 $8 = sp + 288 | 0;
 $9 = sp + 276 | 0;
 $10 = sp + 272 | 0;
 $11 = sp;
 $12 = sp + 268 | 0;
 $13 = sp + 264 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $157 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if ($31) {
   $33 = HEAP32[$31 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $132 = 0;
    $158 = 1;
    $80 = 0;
   } else {
    $132 = $157;
    $158 = 0;
    $80 = $31;
   }
  } else {
   $132 = 0;
   $158 = 1;
   $80 = 0;
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if ($45) {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($158) {
    $159 = $45;
    break;
   } else {
    $$2 = $$0;
    $141 = $45;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;
    $141 = 0;
    break;
   } else $159 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$81 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41, $14, $$1, $10, $13, HEAP32[$6 >> 2] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $141 = $159;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $157 = $132;
  $31 = $80;
 }
 $103 = HEAP8[$8 + 11 >> 0] | 0;
 if (($103 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $103 & 255) | 0 ? ($110 = HEAP32[$12 >> 2] | 0, ($110 - $11 | 0) < 160) : 0) {
  $115 = HEAP32[$13 >> 2] | 0;
  HEAP32[$12 >> 2] = $110 + 4;
  HEAP32[$110 >> 2] = $115;
 }
 $118 = __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $119 = getTempRet0() | 0;
 $120 = $5;
 HEAP32[$120 >> 2] = $118;
 HEAP32[$120 + 4 >> 2] = $119;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if ($80) {
  $127 = HEAP32[$80 + 12 >> 2] | 0;
  if (($127 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$132 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$127 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $160 = 1;
  } else $160 = 0;
 } else $160 = 1;
 do if ($141) {
  $143 = HEAP32[$141 + 12 >> 2] | 0;
  if (($143 | 0) == (HEAP32[$141 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$141 >> 2] | 0) + 36 >> 2] & 127]($141) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$143 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($160) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $160 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $111 = 0, $116 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $128 = 0, $13 = 0, $133 = 0, $14 = 0, $142 = 0, $144 = 0, $15 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 224 | 0;
 $8 = sp + 212 | 0;
 $9 = sp + 200 | 0;
 $10 = sp + 196 | 0;
 $11 = sp;
 $12 = sp + 192 | 0;
 $13 = sp + 188 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $158 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if ($31) {
   $33 = HEAP32[$31 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $133 = 0;
    $159 = 1;
    $80 = 0;
   } else {
    $133 = $158;
    $159 = 0;
    $80 = $31;
   }
  } else {
   $133 = 0;
   $159 = 1;
   $80 = 0;
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if ($45) {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($159) {
    $160 = $45;
    break;
   } else {
    $$2 = $$0;
    $142 = $45;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($159) {
    $$2 = $$0;
    $142 = 0;
    break;
   } else $160 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($$0$i$i41 & 255, $14, $$1, $10, $13, HEAP8[$6 >> 0] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $142 = $160;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $158 = $133;
  $31 = $80;
 }
 $104 = HEAP8[$8 + 11 >> 0] | 0;
 if (($104 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $104 & 255) | 0 ? ($111 = HEAP32[$12 >> 2] | 0, ($111 - $11 | 0) < 160) : 0) {
  $116 = HEAP32[$13 >> 2] | 0;
  HEAP32[$12 >> 2] = $111 + 4;
  HEAP32[$111 >> 2] = $116;
 }
 $119 = __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $120 = getTempRet0() | 0;
 $121 = $5;
 HEAP32[$121 >> 2] = $119;
 HEAP32[$121 + 4 >> 2] = $120;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if ($80) {
  $128 = HEAP32[$80 + 12 >> 2] | 0;
  if (($128 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$133 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$128 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $161 = 1;
  } else $161 = 0;
 } else $161 = 1;
 do if ($142) {
  $144 = HEAP32[$142 + 12 >> 2] | 0;
  if (($144 | 0) == (HEAP32[$142 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$142 >> 2] | 0) + 36 >> 2] & 127]($142) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$144 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($161) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $161 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $105 = 0, $11 = 0, $114 = 0, $119 = 0, $12 = 0, $122 = 0.0, $126 = 0, $13 = 0, $131 = 0, $14 = 0, $140 = 0, $142 = 0, $15 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $46 = 0, $49 = 0, $6 = 0, $62 = 0, $66 = 0, $7 = 0, $74 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 $6 = sp + 160 | 0;
 $7 = sp + 328 | 0;
 $8 = sp + 324 | 0;
 $9 = sp + 312 | 0;
 $10 = sp + 300 | 0;
 $11 = sp + 296 | 0;
 $12 = sp;
 $13 = sp + 292 | 0;
 $14 = sp + 288 | 0;
 $15 = sp + 333 | 0;
 $16 = sp + 332 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $156 = $$pre;
 $32 = $$pre;
 L8 : while (1) {
  if ($32) {
   $34 = HEAP32[$32 + 12 >> 2] | 0;
   if (($34 | 0) == (HEAP32[$32 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] & 127]($32) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$34 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i15, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $131 = 0;
    $157 = 1;
    $81 = 0;
   } else {
    $131 = $156;
    $157 = 0;
    $81 = $32;
   }
  } else {
   $131 = 0;
   $157 = 1;
   $81 = 0;
  }
  $46 = HEAP32[$2 >> 2] | 0;
  do if ($46) {
   $49 = HEAP32[$46 + 12 >> 2] | 0;
   if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 127]($46) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$49 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i21, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($157) {
    $158 = $46;
    break;
   } else {
    $$2 = $$0;
    $140 = $46;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($157) {
    $$2 = $$0;
    $140 = 0;
    break;
   } else $158 = 0;
  }
  $62 = HEAP8[$19 >> 0] | 0;
  $66 = $62 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $62 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $66 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $66 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $74 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $74 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $74, 0);
   $78 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $78 + $66;
   $$1 = $78;
  } else $$1 = $$0;
  $80 = $81 + 12 | 0;
  $82 = HEAP32[$80 >> 2] | 0;
  $83 = $81 + 16 | 0;
  if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) $$0$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$82 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i31, $15, $16, $$1, $11, HEAP32[$7 >> 2] | 0, HEAP32[$8 >> 2] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $140 = $158;
   break;
  }
  $96 = HEAP32[$80 >> 2] | 0;
  if (($96 | 0) == (HEAP32[$83 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 40 >> 2] & 127]($81) | 0; else {
   HEAP32[$80 >> 2] = $96 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$96 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $156 = $131;
  $32 = $81;
 }
 $105 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($105 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $105 & 255) | 0) == 0) ? ($114 = HEAP32[$13 >> 2] | 0, ($114 - $12 | 0) < 160) : 0) {
  $119 = HEAP32[$14 >> 2] | 0;
  HEAP32[$13 >> 2] = $114 + 4;
  HEAP32[$114 >> 2] = $119;
 }
 $122 = +__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 HEAPF32[$5 >> 2] = $122;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if ($81) {
  $126 = HEAP32[$81 + 12 >> 2] | 0;
  if (($126 | 0) == (HEAP32[$81 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$131 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$126 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $159 = 1;
  } else $159 = 0;
 } else $159 = 1;
 do if ($140) {
  $142 = HEAP32[$140 + 12 >> 2] | 0;
  if (($142 | 0) == (HEAP32[$140 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$140 >> 2] | 0) + 36 >> 2] & 127]($140) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$142 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($159) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $159 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $105 = 0, $11 = 0, $114 = 0, $119 = 0, $12 = 0, $122 = 0.0, $126 = 0, $13 = 0, $131 = 0, $14 = 0, $140 = 0, $142 = 0, $15 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $46 = 0, $49 = 0, $6 = 0, $62 = 0, $66 = 0, $7 = 0, $74 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 $6 = sp + 160 | 0;
 $7 = sp + 328 | 0;
 $8 = sp + 324 | 0;
 $9 = sp + 312 | 0;
 $10 = sp + 300 | 0;
 $11 = sp + 296 | 0;
 $12 = sp;
 $13 = sp + 292 | 0;
 $14 = sp + 288 | 0;
 $15 = sp + 333 | 0;
 $16 = sp + 332 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $156 = $$pre;
 $32 = $$pre;
 L8 : while (1) {
  if ($32) {
   $34 = HEAP32[$32 + 12 >> 2] | 0;
   if (($34 | 0) == (HEAP32[$32 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] & 127]($32) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$34 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i15, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $131 = 0;
    $157 = 1;
    $81 = 0;
   } else {
    $131 = $156;
    $157 = 0;
    $81 = $32;
   }
  } else {
   $131 = 0;
   $157 = 1;
   $81 = 0;
  }
  $46 = HEAP32[$2 >> 2] | 0;
  do if ($46) {
   $49 = HEAP32[$46 + 12 >> 2] | 0;
   if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 127]($46) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$49 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i21, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($157) {
    $158 = $46;
    break;
   } else {
    $$2 = $$0;
    $140 = $46;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($157) {
    $$2 = $$0;
    $140 = 0;
    break;
   } else $158 = 0;
  }
  $62 = HEAP8[$19 >> 0] | 0;
  $66 = $62 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $62 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $66 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $66 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $74 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $74 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $74, 0);
   $78 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $78 + $66;
   $$1 = $78;
  } else $$1 = $$0;
  $80 = $81 + 12 | 0;
  $82 = HEAP32[$80 >> 2] | 0;
  $83 = $81 + 16 | 0;
  if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) $$0$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$82 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i31, $15, $16, $$1, $11, HEAP32[$7 >> 2] | 0, HEAP32[$8 >> 2] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $140 = $158;
   break;
  }
  $96 = HEAP32[$80 >> 2] | 0;
  if (($96 | 0) == (HEAP32[$83 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 40 >> 2] & 127]($81) | 0; else {
   HEAP32[$80 >> 2] = $96 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$96 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $156 = $131;
  $32 = $81;
 }
 $105 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($105 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $105 & 255) | 0) == 0) ? ($114 = HEAP32[$13 >> 2] | 0, ($114 - $12 | 0) < 160) : 0) {
  $119 = HEAP32[$14 >> 2] | 0;
  HEAP32[$13 >> 2] = $114 + 4;
  HEAP32[$114 >> 2] = $119;
 }
 $122 = +__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 HEAPF64[$5 >> 3] = $122;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if ($81) {
  $126 = HEAP32[$81 + 12 >> 2] | 0;
  if (($126 | 0) == (HEAP32[$81 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$131 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$126 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $159 = 1;
  } else $159 = 0;
 } else $159 = 1;
 do if ($140) {
  $142 = HEAP32[$140 + 12 >> 2] | 0;
  if (($142 | 0) == (HEAP32[$140 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$140 >> 2] | 0) + 36 >> 2] & 127]($140) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$142 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($159) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $159 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $105 = 0, $11 = 0, $114 = 0, $119 = 0, $12 = 0, $122 = 0.0, $126 = 0, $13 = 0, $131 = 0, $14 = 0, $140 = 0, $142 = 0, $15 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $46 = 0, $49 = 0, $6 = 0, $62 = 0, $66 = 0, $7 = 0, $74 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 $6 = sp + 160 | 0;
 $7 = sp + 328 | 0;
 $8 = sp + 324 | 0;
 $9 = sp + 312 | 0;
 $10 = sp + 300 | 0;
 $11 = sp + 296 | 0;
 $12 = sp;
 $13 = sp + 292 | 0;
 $14 = sp + 288 | 0;
 $15 = sp + 333 | 0;
 $16 = sp + 332 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $156 = $$pre;
 $32 = $$pre;
 L8 : while (1) {
  if ($32) {
   $34 = HEAP32[$32 + 12 >> 2] | 0;
   if (($34 | 0) == (HEAP32[$32 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] & 127]($32) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$34 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i15, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $131 = 0;
    $157 = 1;
    $81 = 0;
   } else {
    $131 = $156;
    $157 = 0;
    $81 = $32;
   }
  } else {
   $131 = 0;
   $157 = 1;
   $81 = 0;
  }
  $46 = HEAP32[$2 >> 2] | 0;
  do if ($46) {
   $49 = HEAP32[$46 + 12 >> 2] | 0;
   if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 127]($46) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$49 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i21, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($157) {
    $158 = $46;
    break;
   } else {
    $$2 = $$0;
    $140 = $46;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($157) {
    $$2 = $$0;
    $140 = 0;
    break;
   } else $158 = 0;
  }
  $62 = HEAP8[$19 >> 0] | 0;
  $66 = $62 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $62 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $66 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $66 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $74 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $74 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $74, 0);
   $78 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $78 + $66;
   $$1 = $78;
  } else $$1 = $$0;
  $80 = $81 + 12 | 0;
  $82 = HEAP32[$80 >> 2] | 0;
  $83 = $81 + 16 | 0;
  if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) $$0$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$82 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i31, $15, $16, $$1, $11, HEAP32[$7 >> 2] | 0, HEAP32[$8 >> 2] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $140 = $158;
   break;
  }
  $96 = HEAP32[$80 >> 2] | 0;
  if (($96 | 0) == (HEAP32[$83 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 40 >> 2] & 127]($81) | 0; else {
   HEAP32[$80 >> 2] = $96 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$96 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $156 = $131;
  $32 = $81;
 }
 $105 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($105 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $105 & 255) | 0) == 0) ? ($114 = HEAP32[$13 >> 2] | 0, ($114 - $12 | 0) < 160) : 0) {
  $119 = HEAP32[$14 >> 2] | 0;
  HEAP32[$13 >> 2] = $114 + 4;
  HEAP32[$114 >> 2] = $119;
 }
 $122 = +__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 HEAPF64[$5 >> 3] = $122;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if ($81) {
  $126 = HEAP32[$81 + 12 >> 2] | 0;
  if (($126 | 0) == (HEAP32[$81 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$131 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$126 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $159 = 1;
  } else $159 = 0;
 } else $159 = 1;
 do if ($140) {
  $142 = HEAP32[$140 + 12 >> 2] | 0;
  if (($142 | 0) == (HEAP32[$140 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$140 >> 2] | 0) + 36 >> 2] & 127]($140) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$142 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($159) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $159 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $106 = 0, $11 = 0, $115 = 0, $12 = 0, $120 = 0, $123 = 0.0, $127 = 0, $13 = 0, $132 = 0, $14 = 0, $141 = 0, $143 = 0, $15 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $46 = 0, $49 = 0, $6 = 0, $62 = 0, $66 = 0, $7 = 0, $74 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 160 | 0;
 $7 = sp + 231 | 0;
 $8 = sp + 230 | 0;
 $9 = sp + 216 | 0;
 $10 = sp + 204 | 0;
 $11 = sp + 200 | 0;
 $12 = sp;
 $13 = sp + 196 | 0;
 $14 = sp + 192 | 0;
 $15 = sp + 229 | 0;
 $16 = sp + 228 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $157 = $$pre;
 $32 = $$pre;
 L8 : while (1) {
  if ($32) {
   $34 = HEAP32[$32 + 12 >> 2] | 0;
   if (($34 | 0) == (HEAP32[$32 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] & 127]($32) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$34 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i15, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $132 = 0;
    $158 = 1;
    $81 = 0;
   } else {
    $132 = $157;
    $158 = 0;
    $81 = $32;
   }
  } else {
   $132 = 0;
   $158 = 1;
   $81 = 0;
  }
  $46 = HEAP32[$2 >> 2] | 0;
  do if ($46) {
   $49 = HEAP32[$46 + 12 >> 2] | 0;
   if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 127]($46) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$49 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i21, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($158) {
    $159 = $46;
    break;
   } else {
    $$2 = $$0;
    $141 = $46;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;
    $141 = 0;
    break;
   } else $159 = 0;
  }
  $62 = HEAP8[$19 >> 0] | 0;
  $66 = $62 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $62 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $66 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $66 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $74 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $74 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $74, 0);
   $78 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $78 + $66;
   $$1 = $78;
  } else $$1 = $$0;
  $80 = $81 + 12 | 0;
  $82 = HEAP32[$80 >> 2] | 0;
  $83 = $81 + 16 | 0;
  if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) $$0$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$82 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i31 & 255, $15, $16, $$1, $11, HEAP8[$7 >> 0] | 0, HEAP8[$8 >> 0] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $141 = $159;
   break;
  }
  $97 = HEAP32[$80 >> 2] | 0;
  if (($97 | 0) == (HEAP32[$83 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 40 >> 2] & 127]($81) | 0; else {
   HEAP32[$80 >> 2] = $97 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$97 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $157 = $132;
  $32 = $81;
 }
 $106 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($106 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $106 & 255) | 0) == 0) ? ($115 = HEAP32[$13 >> 2] | 0, ($115 - $12 | 0) < 160) : 0) {
  $120 = HEAP32[$14 >> 2] | 0;
  HEAP32[$13 >> 2] = $115 + 4;
  HEAP32[$115 >> 2] = $120;
 }
 $123 = +__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 HEAPF32[$5 >> 2] = $123;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if ($81) {
  $127 = HEAP32[$81 + 12 >> 2] | 0;
  if (($127 | 0) == (HEAP32[$81 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$132 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$127 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $160 = 1;
  } else $160 = 0;
 } else $160 = 1;
 do if ($141) {
  $143 = HEAP32[$141 + 12 >> 2] | 0;
  if (($143 | 0) == (HEAP32[$141 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$141 >> 2] | 0) + 36 >> 2] & 127]($141) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$143 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($160) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $160 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $106 = 0, $11 = 0, $115 = 0, $12 = 0, $120 = 0, $123 = 0.0, $127 = 0, $13 = 0, $132 = 0, $14 = 0, $141 = 0, $143 = 0, $15 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $46 = 0, $49 = 0, $6 = 0, $62 = 0, $66 = 0, $7 = 0, $74 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 160 | 0;
 $7 = sp + 231 | 0;
 $8 = sp + 230 | 0;
 $9 = sp + 216 | 0;
 $10 = sp + 204 | 0;
 $11 = sp + 200 | 0;
 $12 = sp;
 $13 = sp + 196 | 0;
 $14 = sp + 192 | 0;
 $15 = sp + 229 | 0;
 $16 = sp + 228 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $157 = $$pre;
 $32 = $$pre;
 L8 : while (1) {
  if ($32) {
   $34 = HEAP32[$32 + 12 >> 2] | 0;
   if (($34 | 0) == (HEAP32[$32 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] & 127]($32) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$34 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i15, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $132 = 0;
    $158 = 1;
    $81 = 0;
   } else {
    $132 = $157;
    $158 = 0;
    $81 = $32;
   }
  } else {
   $132 = 0;
   $158 = 1;
   $81 = 0;
  }
  $46 = HEAP32[$2 >> 2] | 0;
  do if ($46) {
   $49 = HEAP32[$46 + 12 >> 2] | 0;
   if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 127]($46) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$49 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i21, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($158) {
    $159 = $46;
    break;
   } else {
    $$2 = $$0;
    $141 = $46;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;
    $141 = 0;
    break;
   } else $159 = 0;
  }
  $62 = HEAP8[$19 >> 0] | 0;
  $66 = $62 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $62 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $66 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $66 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $74 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $74 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $74, 0);
   $78 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $78 + $66;
   $$1 = $78;
  } else $$1 = $$0;
  $80 = $81 + 12 | 0;
  $82 = HEAP32[$80 >> 2] | 0;
  $83 = $81 + 16 | 0;
  if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) $$0$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$82 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i31 & 255, $15, $16, $$1, $11, HEAP8[$7 >> 0] | 0, HEAP8[$8 >> 0] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $141 = $159;
   break;
  }
  $97 = HEAP32[$80 >> 2] | 0;
  if (($97 | 0) == (HEAP32[$83 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 40 >> 2] & 127]($81) | 0; else {
   HEAP32[$80 >> 2] = $97 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$97 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $157 = $132;
  $32 = $81;
 }
 $106 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($106 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $106 & 255) | 0) == 0) ? ($115 = HEAP32[$13 >> 2] | 0, ($115 - $12 | 0) < 160) : 0) {
  $120 = HEAP32[$14 >> 2] | 0;
  HEAP32[$13 >> 2] = $115 + 4;
  HEAP32[$115 >> 2] = $120;
 }
 $123 = +__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 HEAPF64[$5 >> 3] = $123;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if ($81) {
  $127 = HEAP32[$81 + 12 >> 2] | 0;
  if (($127 | 0) == (HEAP32[$81 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$132 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$127 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $160 = 1;
  } else $160 = 0;
 } else $160 = 1;
 do if ($141) {
  $143 = HEAP32[$141 + 12 >> 2] | 0;
  if (($143 | 0) == (HEAP32[$141 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$141 >> 2] | 0) + 36 >> 2] & 127]($141) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$143 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($160) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $160 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $106 = 0, $11 = 0, $115 = 0, $12 = 0, $120 = 0, $123 = 0.0, $127 = 0, $13 = 0, $132 = 0, $14 = 0, $141 = 0, $143 = 0, $15 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $46 = 0, $49 = 0, $6 = 0, $62 = 0, $66 = 0, $7 = 0, $74 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 160 | 0;
 $7 = sp + 231 | 0;
 $8 = sp + 230 | 0;
 $9 = sp + 216 | 0;
 $10 = sp + 204 | 0;
 $11 = sp + 200 | 0;
 $12 = sp;
 $13 = sp + 196 | 0;
 $14 = sp + 192 | 0;
 $15 = sp + 229 | 0;
 $16 = sp + 228 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $157 = $$pre;
 $32 = $$pre;
 L8 : while (1) {
  if ($32) {
   $34 = HEAP32[$32 + 12 >> 2] | 0;
   if (($34 | 0) == (HEAP32[$32 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] & 127]($32) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$34 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i15, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $132 = 0;
    $158 = 1;
    $81 = 0;
   } else {
    $132 = $157;
    $158 = 0;
    $81 = $32;
   }
  } else {
   $132 = 0;
   $158 = 1;
   $81 = 0;
  }
  $46 = HEAP32[$2 >> 2] | 0;
  do if ($46) {
   $49 = HEAP32[$46 + 12 >> 2] | 0;
   if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 127]($46) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$49 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i21, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($158) {
    $159 = $46;
    break;
   } else {
    $$2 = $$0;
    $141 = $46;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;
    $141 = 0;
    break;
   } else $159 = 0;
  }
  $62 = HEAP8[$19 >> 0] | 0;
  $66 = $62 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $62 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $66 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $66 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $74 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $74 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $74, 0);
   $78 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $78 + $66;
   $$1 = $78;
  } else $$1 = $$0;
  $80 = $81 + 12 | 0;
  $82 = HEAP32[$80 >> 2] | 0;
  $83 = $81 + 16 | 0;
  if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) $$0$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$82 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i31 & 255, $15, $16, $$1, $11, HEAP8[$7 >> 0] | 0, HEAP8[$8 >> 0] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $141 = $159;
   break;
  }
  $97 = HEAP32[$80 >> 2] | 0;
  if (($97 | 0) == (HEAP32[$83 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 40 >> 2] & 127]($81) | 0; else {
   HEAP32[$80 >> 2] = $97 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$97 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $157 = $132;
  $32 = $81;
 }
 $106 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($106 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $106 & 255) | 0) == 0) ? ($115 = HEAP32[$13 >> 2] | 0, ($115 - $12 | 0) < 160) : 0) {
  $120 = HEAP32[$14 >> 2] | 0;
  HEAP32[$13 >> 2] = $115 + 4;
  HEAP32[$115 >> 2] = $120;
 }
 $123 = +__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 HEAPF64[$5 >> 3] = $123;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if ($81) {
  $127 = HEAP32[$81 + 12 >> 2] | 0;
  if (($127 | 0) == (HEAP32[$81 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$132 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$127 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $160 = 1;
  } else $160 = 0;
 } else $160 = 1;
 do if ($141) {
  $143 = HEAP32[$141 + 12 >> 2] | 0;
  if (($143 | 0) == (HEAP32[$141 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$141 >> 2] | 0) + 36 >> 2] & 127]($141) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$143 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($160) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $160 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZN6vision14BinarykMedoidsILi96EE6assignEPKhiPKii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$021 = 0, $$1 = 0, $103 = 0, $114 = 0, $119 = 0, $123 = 0, $20 = 0, $25 = 0, $29 = 0, $36 = 0, $41 = 0, $45 = 0, $5 = 0, $52 = 0, $57 = 0, $6 = 0, $61 = 0, $68 = 0, $7 = 0, $73 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $86 = 0, $9 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 $6 = $0 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = $0 + 12 | 0;
 $9 = $0 + 16 | 0;
 if (($7 | 0) != ((HEAP32[$9 >> 2] | 0) - (HEAP32[$8 >> 2] | 0) >> 2 | 0)) {
  $20 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33662) | 0, 33707) | 0, 39072) | 0, 154) | 0, 39079) | 0, 33779) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $20 + (HEAP32[(HEAP32[$20 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $25 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $29 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$25 >> 2] | 0) + 28 >> 2] & 127]($25, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($20, $29) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($20) | 0;
  _abort();
 }
 if (($2 | 0) <= 0) {
  $36 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33824) | 0, 33707) | 0, 39072) | 0, 155) | 0, 39079) | 0, 33864) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $36 + (HEAP32[(HEAP32[$36 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $41 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $45 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$41 >> 2] | 0) + 28 >> 2] & 127]($41, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($36, $45) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($36) | 0;
  _abort();
 }
 if (($4 | 0) > ($2 | 0)) {
  $52 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33900) | 0, 33707) | 0, 39072) | 0, 156) | 0, 39079) | 0, 33951) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $52 + (HEAP32[(HEAP32[$52 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $57 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $61 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$57 >> 2] | 0) + 28 >> 2] & 127]($57, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($52, $61) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($52) | 0;
  _abort();
 }
 if (($7 | 0) > ($4 | 0)) {
  $68 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33978) | 0, 33707) | 0, 39072) | 0, 157) | 0, 39079) | 0, 34019) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $68 + (HEAP32[(HEAP32[$68 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $73 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $77 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$73 >> 2] | 0) + 28 >> 2] & 127]($73, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($68, $77) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($68) | 0;
  _abort();
 }
 $78 = $0 + 24 | 0;
 HEAP32[$5 >> 2] = -1;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEmRKi($78, $4, $5);
 $79 = $0 + 36 | 0;
 HEAP32[$5 >> 2] = -1;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEmRKi($79, $4, $5);
 $80 = $0 + 48 | 0;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm($80, $4);
 $81 = HEAP32[$80 >> 2] | 0;
 $82 = $0 + 52 | 0;
 __ZN6vision16SequentialVectorIiEEvPT_iS1_($81, (HEAP32[$82 >> 2] | 0) - $81 >> 2, 0);
 $86 = $0 + 8 | 0;
 $$0 = -1;
 $$021 = 0;
 while (1) {
  if (($$021 | 0) >= (HEAP32[$86 >> 2] | 0)) break;
  $95 = HEAP32[$80 >> 2] | 0;
  __ZN6vision12ArrayShuffleIiEEvPT_iiRi($95, (HEAP32[$82 >> 2] | 0) - $95 >> 2, HEAP32[$6 >> 2] | 0, HEAP32[$0 >> 2] | 0);
  $103 = __ZN6vision14BinarykMedoidsILi96EE6assignERNSt3__26vectorIiNS2_9allocatorIiEEEEPKhiPKiiSB_i($0, $79, $1, $2, $3, $4, HEAP32[$80 >> 2] | 0, HEAP32[$6 >> 2] | 0) | 0;
  if ($103 >>> 0 < $$0 >>> 0) {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE4swapERS3_($78, $79);
   __ZN6vision10CopyVectorIiEEvPT_PKS1_m(HEAP32[$8 >> 2] | 0, HEAP32[$80 >> 2] | 0, HEAP32[$6 >> 2] | 0);
   $$1 = $103;
  } else $$1 = $$0;
  $$0 = $$1;
  $$021 = $$021 + 1 | 0;
 }
 if ((HEAP32[$6 >> 2] | 0) == ((HEAP32[$9 >> 2] | 0) - (HEAP32[$8 >> 2] | 0) >> 2 | 0)) {
  STACKTOP = sp;
  return;
 } else {
  $114 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33662) | 0, 33707) | 0, 39072) | 0, 187) | 0, 39079) | 0, 33779) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $114 + (HEAP32[(HEAP32[$114 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $119 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $123 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$119 >> 2] | 0) + 28 >> 2] & 127]($119, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($114, $123) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($114) | 0;
  _abort();
 }
}

function _icpPointRobust($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0205 = 0, $$0207 = 0, $$0209 = 0.0, $$0211 = 0.0, $$0212 = 0, $$0213 = 0.0, $$1 = 0, $$1206 = 0, $$1208 = 0, $$2 = 0, $$3 = 0, $$pn = 0.0, $$pre = 0, $100 = 0, $106 = 0.0, $107 = 0.0, $111 = 0, $115 = 0, $119 = 0, $123 = 0, $127 = 0, $131 = 0, $135 = 0, $139 = 0, $143 = 0, $147 = 0, $151 = 0, $154 = 0, $16 = 0, $19 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $47 = 0, $5 = 0, $51 = 0.0, $55 = 0.0, $56 = 0, $6 = 0, $62 = 0.0, $67 = 0.0, $69 = 0, $7 = 0, $70 = 0.0, $73 = 0.0, $76 = 0.0, $8 = 0, $83 = 0.0, $9 = 0, $95 = 0, $97 = 0.0, $99 = 0, $spec$store$select = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(192);
 $vararg_buffer5 = sp + 184 | 0;
 $vararg_buffer3 = sp + 176 | 0;
 $vararg_buffer1 = sp + 168 | 0;
 $vararg_buffer = sp + 160 | 0;
 $5 = sp + 144 | 0;
 $6 = sp + 48 | 0;
 $7 = sp;
 $8 = $1 + 8 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 do if (($9 | 0) >= 4) {
  $16 = ~~(+HEAPF64[$0 + 128 >> 3] * +($9 | 0)) + -1 | 0;
  $spec$store$select = ($16 | 0) > 3 ? $16 : 3;
  $19 = _malloc($9 * 96 | 0) | 0;
  if (!$19) {
   _arLog(0, 3, 45947, $vararg_buffer);
   $$0212 = -1;
   break;
  }
  $22 = _malloc($9 << 4) | 0;
  if (!$22) {
   _arLog(0, 3, 45947, $vararg_buffer1);
   _free($19);
   $$0212 = -1;
   break;
  }
  $24 = $9 << 3;
  $25 = _malloc($24) | 0;
  if (!$25) {
   _arLog(0, 3, 45947, $vararg_buffer3);
   _free($19);
   _free($22);
   $$0212 = -1;
   break;
  }
  $27 = _malloc($24) | 0;
  if (!$27) {
   _arLog(0, 3, 45947, $vararg_buffer5);
   _free($19);
   _free($22);
   _free($25);
   $$0212 = -1;
   break;
  }
  $$0205 = 0;
  while (1) {
   if (($$0205 | 0) == 3) break;
   $$0207 = 0;
   while (1) {
    if (($$0207 | 0) == 4) break;
    HEAPF64[$3 + ($$0205 << 5) + ($$0207 << 3) >> 3] = +HEAPF64[$2 + ($$0205 << 5) + ($$0207 << 3) >> 3];
    $$0207 = $$0207 + 1 | 0;
   }
   $$0205 = $$0205 + 1 | 0;
  }
  $34 = $1 + 4 | 0;
  $35 = $5 + 8 | 0;
  $36 = $27 + ($spec$store$select << 3) | 0;
  $37 = $0 + 104 | 0;
  $38 = $0 + 96 | 0;
  $39 = $0 + 120 | 0;
  $40 = $0 + 112 | 0;
  $$0211 = 0.0;
  $$1208 = 0;
  L23 : while (1) {
   _arUtilMatMul($0, $3, $6) | 0;
   $$1206 = 0;
   while (1) {
    $41 = HEAP32[$8 >> 2] | 0;
    if (($$1206 | 0) >= ($41 | 0)) break;
    if ((_icpGetU_from_X_by_MatX2U($5, $6, (HEAP32[$34 >> 2] | 0) + ($$1206 * 24 | 0) | 0) | 0) < 0) {
     label = 20;
     break L23;
    }
    $47 = HEAP32[$1 >> 2] | 0;
    $51 = +HEAPF64[$47 + ($$1206 << 4) >> 3] - +HEAPF64[$5 >> 3];
    $55 = +HEAPF64[$47 + ($$1206 << 4) + 8 >> 3] - +HEAPF64[$35 >> 3];
    $56 = $$1206 << 1;
    HEAPF64[$22 + ($56 << 3) >> 3] = $51;
    HEAPF64[$22 + (($56 | 1) << 3) >> 3] = $55;
    $62 = $51 * $51 + $55 * $55;
    HEAPF64[$27 + ($$1206 << 3) >> 3] = $62;
    HEAPF64[$25 + ($$1206 << 3) >> 3] = $62;
    $$1206 = $$1206 + 1 | 0;
   }
   _qsort($27, $41, 8, 42);
   $67 = +HEAPF64[$36 >> 3] * 4.0;
   $$0213 = $67 < 16.0 ? 16.0 : $67;
   $69 = HEAP32[$8 >> 2] | 0;
   $70 = $$0213 / 6.0;
   $$0209 = 0.0;
   $$2 = 0;
   while (1) {
    if (($$2 | 0) >= ($69 | 0)) break;
    $73 = +HEAPF64[$27 + ($$2 << 3) >> 3];
    if ($73 > $$0213) $$pn = $70; else {
     $76 = 1.0 - $73 / $$0213;
     $$pn = $70 * (1.0 - $76 * ($76 * $76));
    }
    $$0209 = $$0209 + $$pn;
    $$2 = $$2 + 1 | 0;
   }
   $83 = $$0209 / +($69 | 0);
   if ($83 < +HEAPF64[$37 >> 3]) {
    label = 44;
    break;
   }
   if (($$1208 | 0 ? $83 < +HEAPF64[$39 >> 3] : 0) ? $83 / $$0211 > +HEAPF64[$40 >> 3] : 0) {
    label = 44;
    break;
   }
   if (($$1208 | 0) == (HEAP32[$38 >> 2] | 0)) {
    label = 44;
    break;
   }
   $$0 = 0;
   $$3 = 0;
   $95 = $69;
   while (1) {
    if (($$3 | 0) >= ($95 | 0)) break;
    $97 = +HEAPF64[$25 + ($$3 << 3) >> 3];
    if (!($97 <= $$0213)) {
     $$1 = $$0;
     $$pre = $95;
    } else {
     $99 = $$0 * 6 | 0;
     $100 = $19 + ($99 << 3) | 0;
     if ((_icpGetJ_U_S($100, $0, $3, (HEAP32[$34 >> 2] | 0) + ($$3 * 24 | 0) | 0) | 0) < 0) {
      label = 36;
      break L23;
     }
     $106 = 1.0 - $97 / $$0213;
     $107 = $106 * $106;
     HEAPF64[$100 >> 3] = $107 * +HEAPF64[$100 >> 3];
     $111 = $19 + (($99 | 1) << 3) | 0;
     HEAPF64[$111 >> 3] = $107 * +HEAPF64[$111 >> 3];
     $115 = $19 + ($99 + 2 << 3) | 0;
     HEAPF64[$115 >> 3] = $107 * +HEAPF64[$115 >> 3];
     $119 = $19 + ($99 + 3 << 3) | 0;
     HEAPF64[$119 >> 3] = $107 * +HEAPF64[$119 >> 3];
     $123 = $19 + ($99 + 4 << 3) | 0;
     HEAPF64[$123 >> 3] = $107 * +HEAPF64[$123 >> 3];
     $127 = $19 + ($99 + 5 << 3) | 0;
     HEAPF64[$127 >> 3] = $107 * +HEAPF64[$127 >> 3];
     $131 = $19 + ($99 + 6 << 3) | 0;
     HEAPF64[$131 >> 3] = $107 * +HEAPF64[$131 >> 3];
     $135 = $19 + ($99 + 7 << 3) | 0;
     HEAPF64[$135 >> 3] = $107 * +HEAPF64[$135 >> 3];
     $139 = $19 + ($99 + 8 << 3) | 0;
     HEAPF64[$139 >> 3] = $107 * +HEAPF64[$139 >> 3];
     $143 = $19 + ($99 + 9 << 3) | 0;
     HEAPF64[$143 >> 3] = $107 * +HEAPF64[$143 >> 3];
     $147 = $19 + ($99 + 10 << 3) | 0;
     HEAPF64[$147 >> 3] = $107 * +HEAPF64[$147 >> 3];
     $151 = $19 + ($99 + 11 << 3) | 0;
     HEAPF64[$151 >> 3] = $107 * +HEAPF64[$151 >> 3];
     $154 = $$3 << 1;
     HEAPF64[$22 + ($$0 << 3) >> 3] = $107 * +HEAPF64[$22 + ($154 << 3) >> 3];
     HEAPF64[$22 + ($$0 + 1 << 3) >> 3] = $107 * +HEAPF64[$22 + (($154 | 1) << 3) >> 3];
     $$1 = $$0 + 2 | 0;
     $$pre = HEAP32[$8 >> 2] | 0;
    }
    $$0 = $$1;
    $$3 = $$3 + 1 | 0;
    $95 = $$pre;
   }
   if (($$0 | 0) < 6) {
    label = 40;
    break;
   }
   if ((_icpGetDeltaS($7, $22, $19, $$0) | 0) < 0) {
    label = 42;
    break;
   }
   _icpUpdateMat($3, $7) | 0;
   $$0211 = $83;
   $$1208 = $$1208 + 1 | 0;
  }
  if ((label | 0) == 20) {
   _icpGetXw2XcCleanup_221($19, $22, $25, $27);
   $$0212 = -1;
   break;
  } else if ((label | 0) == 36) {
   _icpGetXw2XcCleanup_221($19, $22, $25, $27);
   $$0212 = -1;
   break;
  } else if ((label | 0) == 40) {
   _icpGetXw2XcCleanup_221($19, $22, $25, $27);
   $$0212 = -1;
   break;
  } else if ((label | 0) == 42) {
   _icpGetXw2XcCleanup_221($19, $22, $25, $27);
   $$0212 = -1;
   break;
  } else if ((label | 0) == 44) {
   HEAPF64[$4 >> 3] = $83;
   _free($19);
   _free($22);
   _free($25);
   _free($27);
   $$0212 = 0;
   break;
  }
 } else $$0212 = -1; while (0);
 STACKTOP = sp;
 return $$0212 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i22 = 0, $$0$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i28 = 0, $$0$i$i38 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $110 = 0, $111 = 0, $116 = 0, $12 = 0, $121 = 0, $130 = 0, $132 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $21 = 0, $24 = 0, $27 = 0, $31 = 0, $32 = 0, $34 = 0, $36 = 0, $48 = 0, $51 = 0, $6 = 0, $64 = 0, $68 = 0, $7 = 0, $76 = 0, $8 = 0, $80 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $96 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 $vararg_buffer = sp + 264 | 0;
 $6 = sp + 160 | 0;
 $7 = sp + 292 | 0;
 $8 = sp + 280 | 0;
 $9 = sp + 276 | 0;
 $10 = sp;
 $11 = sp + 272 | 0;
 $12 = sp + 268 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$7 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 __ZNKSt3__28ios_base6getlocEv($8, $3);
 $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 66544) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$15 >> 2] | 0) + 48 >> 2] & 15]($15, 12928, 12954, $6) | 0;
 __ZNSt3__26localeD2Ev($8);
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 $$0$i$i19 = 0;
 while (1) {
  if (($$0$i$i19 | 0) == 3) break;
  HEAP32[$8 + ($$0$i$i19 << 2) >> 2] = 0;
  $$0$i$i19 = $$0$i$i19 + 1 | 0;
 }
 $21 = $8 + 11 | 0;
 $24 = $8 + 8 | 0;
 if ((HEAP8[$21 >> 0] | 0) < 0) $27 = (HEAP32[$24 >> 2] & 2147483647) + -1 | 0; else $27 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, $27, 0);
 $31 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 HEAP32[$9 >> 2] = $31;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$12 >> 2] = 0;
 $32 = $8 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $31;
 $146 = $$pre;
 $34 = $$pre;
 L12 : while (1) {
  if ($34) {
   $36 = HEAP32[$34 + 12 >> 2] | 0;
   if (($36 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) $$0$i$i$i$i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] & 127]($34) | 0; else $$0$i$i$i$i22 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$36 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i22, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $121 = 0;
    $147 = 1;
    $83 = 0;
   } else {
    $121 = $146;
    $147 = 0;
    $83 = $34;
   }
  } else {
   $121 = 0;
   $147 = 1;
   $83 = 0;
  }
  $48 = HEAP32[$2 >> 2] | 0;
  do if ($48) {
   $51 = HEAP32[$48 + 12 >> 2] | 0;
   if (($51 | 0) == (HEAP32[$48 + 16 >> 2] | 0)) $$0$i$i2$i$i28 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$48 >> 2] | 0) + 36 >> 2] & 127]($48) | 0; else $$0$i$i2$i$i28 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$51 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i28, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($147) {
    $148 = $48;
    break;
   } else {
    $$2 = $$0;
    $130 = $48;
    break L12;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 22;
    break;
   }
  } else label = 22; while (0);
  if ((label | 0) == 22) {
   label = 0;
   if ($147) {
    $$2 = $$0;
    $130 = 0;
    break;
   } else $148 = 0;
  }
  $64 = HEAP8[$21 >> 0] | 0;
  $68 = $64 << 24 >> 24 < 0 ? HEAP32[$32 >> 2] | 0 : $64 & 255;
  if ((HEAP32[$9 >> 2] | 0) == ($$0 + $68 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, $68 << 1, 0);
   if ((HEAP8[$21 >> 0] | 0) < 0) $76 = (HEAP32[$24 >> 2] & 2147483647) + -1 | 0; else $76 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, $76, 0);
   $80 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
   HEAP32[$9 >> 2] = $80 + $68;
   $$1 = $80;
  } else $$1 = $$0;
  $82 = $83 + 12 | 0;
  $84 = HEAP32[$82 >> 2] | 0;
  $85 = $83 + 16 | 0;
  if (($84 | 0) == (HEAP32[$85 >> 2] | 0)) $$0$i$i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 36 >> 2] & 127]($83) | 0; else $$0$i$i38 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$84 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i38, 16, $$1, $9, $12, 0, $7, $10, $11, $6) | 0) {
   $$2 = $$1;
   $130 = $148;
   break;
  }
  $96 = HEAP32[$82 >> 2] | 0;
  if (($96 | 0) == (HEAP32[$85 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 40 >> 2] & 127]($83) | 0; else {
   HEAP32[$82 >> 2] = $96 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$96 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $146 = $121;
  $34 = $83;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, (HEAP32[$9 >> 2] | 0) - $$2 | 0, 0);
 $110 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 $111 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$vararg_buffer >> 2] = $5;
 if ((__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z($110, $111, 58968, $vararg_buffer) | 0) != 1) HEAP32[$4 >> 2] = 4;
 if ($83) {
  $116 = HEAP32[$83 + 12 >> 2] | 0;
  if (($116 | 0) == (HEAP32[$83 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$121 >> 2] | 0) + 36 >> 2] & 127]($83) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$116 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $149 = 1;
  } else $149 = 0;
 } else $149 = 1;
 do if ($130) {
  $132 = HEAP32[$130 + 12 >> 2] | 0;
  if (($132 | 0) == (HEAP32[$130 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$130 >> 2] | 0) + 36 >> 2] & 127]($130) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$132 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($149) break; else {
   label = 52;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 50;
   break;
  }
 } else label = 50; while (0);
 if ((label | 0) == 50 ? $149 : 0) label = 52;
 if ((label | 0) == 52) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i20 = 0, $$0$i$i17 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i26 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $111 = 0, $112 = 0, $117 = 0, $12 = 0, $122 = 0, $131 = 0, $133 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $21 = 0, $24 = 0, $27 = 0, $31 = 0, $32 = 0, $34 = 0, $36 = 0, $48 = 0, $51 = 0, $6 = 0, $64 = 0, $68 = 0, $7 = 0, $76 = 0, $8 = 0, $80 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $97 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $vararg_buffer = sp + 192 | 0;
 $6 = sp + 160 | 0;
 $7 = sp + 220 | 0;
 $8 = sp + 208 | 0;
 $9 = sp + 204 | 0;
 $10 = sp;
 $11 = sp + 200 | 0;
 $12 = sp + 196 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$7 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 __ZNKSt3__28ios_base6getlocEv($8, $3);
 $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 66512) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$15 >> 2] | 0) + 32 >> 2] & 15]($15, 12928, 12954, $6) | 0;
 __ZNSt3__26localeD2Ev($8);
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 $$0$i$i17 = 0;
 while (1) {
  if (($$0$i$i17 | 0) == 3) break;
  HEAP32[$8 + ($$0$i$i17 << 2) >> 2] = 0;
  $$0$i$i17 = $$0$i$i17 + 1 | 0;
 }
 $21 = $8 + 11 | 0;
 $24 = $8 + 8 | 0;
 if ((HEAP8[$21 >> 0] | 0) < 0) $27 = (HEAP32[$24 >> 2] & 2147483647) + -1 | 0; else $27 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, $27, 0);
 $31 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 HEAP32[$9 >> 2] = $31;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$12 >> 2] = 0;
 $32 = $8 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $31;
 $147 = $$pre;
 $34 = $$pre;
 L12 : while (1) {
  if ($34) {
   $36 = HEAP32[$34 + 12 >> 2] | 0;
   if (($36 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) $$0$i$i$i$i20 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] & 127]($34) | 0; else $$0$i$i$i$i20 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$36 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i20, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $122 = 0;
    $148 = 1;
    $83 = 0;
   } else {
    $122 = $147;
    $148 = 0;
    $83 = $34;
   }
  } else {
   $122 = 0;
   $148 = 1;
   $83 = 0;
  }
  $48 = HEAP32[$2 >> 2] | 0;
  do if ($48) {
   $51 = HEAP32[$48 + 12 >> 2] | 0;
   if (($51 | 0) == (HEAP32[$48 + 16 >> 2] | 0)) $$0$i$i2$i$i26 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$48 >> 2] | 0) + 36 >> 2] & 127]($48) | 0; else $$0$i$i2$i$i26 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$51 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i26, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($148) {
    $149 = $48;
    break;
   } else {
    $$2 = $$0;
    $131 = $48;
    break L12;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 22;
    break;
   }
  } else label = 22; while (0);
  if ((label | 0) == 22) {
   label = 0;
   if ($148) {
    $$2 = $$0;
    $131 = 0;
    break;
   } else $149 = 0;
  }
  $64 = HEAP8[$21 >> 0] | 0;
  $68 = $64 << 24 >> 24 < 0 ? HEAP32[$32 >> 2] | 0 : $64 & 255;
  if ((HEAP32[$9 >> 2] | 0) == ($$0 + $68 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, $68 << 1, 0);
   if ((HEAP8[$21 >> 0] | 0) < 0) $76 = (HEAP32[$24 >> 2] & 2147483647) + -1 | 0; else $76 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, $76, 0);
   $80 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
   HEAP32[$9 >> 2] = $80 + $68;
   $$1 = $80;
  } else $$1 = $$0;
  $82 = $83 + 12 | 0;
  $84 = HEAP32[$82 >> 2] | 0;
  $85 = $83 + 16 | 0;
  if (($84 | 0) == (HEAP32[$85 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 36 >> 2] & 127]($83) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$84 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($$0$i$i36 & 255, 16, $$1, $9, $12, 0, $7, $10, $11, $6) | 0) {
   $$2 = $$1;
   $131 = $149;
   break;
  }
  $97 = HEAP32[$82 >> 2] | 0;
  if (($97 | 0) == (HEAP32[$85 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 40 >> 2] & 127]($83) | 0; else {
   HEAP32[$82 >> 2] = $97 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$97 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $147 = $122;
  $34 = $83;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, (HEAP32[$9 >> 2] | 0) - $$2 | 0, 0);
 $111 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 $112 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$vararg_buffer >> 2] = $5;
 if ((__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z($111, $112, 58968, $vararg_buffer) | 0) != 1) HEAP32[$4 >> 2] = 4;
 if ($83) {
  $117 = HEAP32[$83 + 12 >> 2] | 0;
  if (($117 | 0) == (HEAP32[$83 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$122 >> 2] | 0) + 36 >> 2] & 127]($83) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$117 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $150 = 1;
  } else $150 = 0;
 } else $150 = 1;
 do if ($131) {
  $133 = HEAP32[$131 + 12 >> 2] | 0;
  if (($133 | 0) == (HEAP32[$131 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$131 >> 2] | 0) + 36 >> 2] & 127]($131) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$133 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($150) break; else {
   label = 52;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 50;
   break;
  }
 } else label = 50; while (0);
 if ((label | 0) == 50 ? $150 : 0) label = 52;
 if ((label | 0) == 52) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function _jpeg_idct_islow($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0285295 = 0, $$0287294 = 0, $$0289293 = 0, $$0296 = 0, $$1292 = 0, $$2291 = 0, $$sink = 0, $$sink303 = 0, $100 = 0, $101 = 0, $103 = 0, $106 = 0, $107 = 0, $109 = 0, $11 = 0, $113 = 0, $115 = 0, $117 = 0, $121 = 0, $123 = 0, $13 = 0, $149 = 0, $152 = 0, $154 = 0, $156 = 0, $158 = 0, $179 = 0, $182 = 0, $184 = 0, $186 = 0, $188 = 0, $190 = 0, $191 = 0, $193 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $201 = 0, $203 = 0, $205 = 0, $206 = 0, $207 = 0, $209 = 0, $212 = 0, $213 = 0, $215 = 0, $219 = 0, $221 = 0, $223 = 0, $227 = 0, $229 = 0, $35 = 0, $5 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $58 = 0, $61 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $83 = 0, $89 = 0, $95 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0285295 = $5;
 $$0287294 = HEAP32[$1 + 84 >> 2] | 0;
 $$0289293 = $2;
 $$0296 = 8;
 while (1) {
  $11 = HEAP16[$$0289293 + 16 >> 1] | 0;
  $13 = HEAP16[$$0289293 + 32 >> 1] | 0;
  if (!(($11 | $13) << 16 >> 16)) if (((((HEAP16[$$0289293 + 48 >> 1] | 0) == 0 ? (HEAP16[$$0289293 + 64 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0289293 + 80 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0289293 + 96 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0289293 + 112 >> 1] | 0) == 0 : 0) {
   $35 = Math_imul(HEAP16[$$0289293 >> 1] << 2, HEAP32[$$0287294 >> 2] | 0) | 0;
   HEAP32[$$0285295 >> 2] = $35;
   HEAP32[$$0285295 + 32 >> 2] = $35;
   HEAP32[$$0285295 + 64 >> 2] = $35;
   HEAP32[$$0285295 + 96 >> 2] = $35;
   HEAP32[$$0285295 + 128 >> 2] = $35;
   HEAP32[$$0285295 + 160 >> 2] = $35;
   HEAP32[$$0285295 + 192 >> 2] = $35;
   $$sink = $35;
   $$sink303 = 56;
  } else {
   $58 = 0;
   label = 9;
  } else {
   $58 = $13;
   label = 9;
  }
  if ((label | 0) == 9) {
   label = 0;
   $53 = Math_imul(HEAP16[$$0289293 + 64 >> 1] << 13, HEAP32[$$0287294 + 128 >> 2] | 0) | 0;
   $54 = Math_imul(HEAP16[$$0289293 >> 1] << 13, HEAP32[$$0287294 >> 2] | 0) | 0 | 1024;
   $55 = $53 + $54 | 0;
   $56 = $54 - $53 | 0;
   $61 = Math_imul(HEAP32[$$0287294 + 64 >> 2] | 0, $58 << 16 >> 16) | 0;
   $67 = Math_imul(HEAP32[$$0287294 + 192 >> 2] | 0, HEAP16[$$0289293 + 96 >> 1] | 0) | 0;
   $69 = ($67 + $61 | 0) * 4433 | 0;
   $71 = $69 + ($61 * 6270 | 0) | 0;
   $73 = $69 + (Math_imul($67, -15137) | 0) | 0;
   $74 = $71 + $55 | 0;
   $75 = $55 - $71 | 0;
   $76 = $73 + $56 | 0;
   $77 = $56 - $73 | 0;
   $83 = Math_imul(HEAP32[$$0287294 + 224 >> 2] | 0, HEAP16[$$0289293 + 112 >> 1] | 0) | 0;
   $89 = Math_imul(HEAP32[$$0287294 + 160 >> 2] | 0, HEAP16[$$0289293 + 80 >> 1] | 0) | 0;
   $95 = Math_imul(HEAP32[$$0287294 + 96 >> 2] | 0, HEAP16[$$0289293 + 48 >> 1] | 0) | 0;
   $99 = Math_imul(HEAP32[$$0287294 + 32 >> 2] | 0, $11 << 16 >> 16) | 0;
   $100 = $95 + $83 | 0;
   $101 = $99 + $89 | 0;
   $103 = ($101 + $100 | 0) * 9633 | 0;
   $106 = $103 + (Math_imul($100, -16069) | 0) | 0;
   $107 = $103 + (Math_imul($101, -3196) | 0) | 0;
   $109 = Math_imul($99 + $83 | 0, -7373) | 0;
   $113 = $109 + ($83 * 2446 | 0) + $106 | 0;
   $115 = $109 + ($99 * 12299 | 0) + $107 | 0;
   $117 = Math_imul($95 + $89 | 0, -20995) | 0;
   $121 = $117 + ($89 * 16819 | 0) + $107 | 0;
   $123 = $117 + ($95 * 25172 | 0) + $106 | 0;
   HEAP32[$$0285295 >> 2] = $115 + $74 >> 11;
   HEAP32[$$0285295 + 224 >> 2] = $74 - $115 >> 11;
   HEAP32[$$0285295 + 32 >> 2] = $123 + $76 >> 11;
   HEAP32[$$0285295 + 192 >> 2] = $76 - $123 >> 11;
   HEAP32[$$0285295 + 64 >> 2] = $121 + $77 >> 11;
   HEAP32[$$0285295 + 160 >> 2] = $77 - $121 >> 11;
   HEAP32[$$0285295 + 96 >> 2] = $113 + $75 >> 11;
   $$sink = $75 - $113 >> 11;
   $$sink303 = 32;
  }
  HEAP32[$$0285295 + ($$sink303 << 2) >> 2] = $$sink;
  if ($$0296 >>> 0 > 1) {
   $$0285295 = $$0285295 + 4 | 0;
   $$0287294 = $$0287294 + 4 | 0;
   $$0289293 = $$0289293 + 2 | 0;
   $$0296 = $$0296 + -1 | 0;
  } else break;
 }
 $149 = $7 + -384 | 0;
 $$1292 = 0;
 $$2291 = $5;
 while (1) {
  $152 = (HEAP32[$3 + ($$1292 << 2) >> 2] | 0) + $4 | 0;
  $154 = (HEAP32[$$2291 >> 2] | 0) + 16400 | 0;
  $156 = HEAP32[$$2291 + 4 >> 2] | 0;
  $158 = HEAP32[$$2291 + 8 >> 2] | 0;
  if (!($156 | $158)) if (((((HEAP32[$$2291 + 12 >> 2] | 0) == 0 ? (HEAP32[$$2291 + 16 >> 2] | 0) == 0 : 0) ? (HEAP32[$$2291 + 20 >> 2] | 0) == 0 : 0) ? (HEAP32[$$2291 + 24 >> 2] | 0) == 0 : 0) ? (HEAP32[$$2291 + 28 >> 2] | 0) == 0 : 0) {
   $179 = HEAP8[$149 + ($154 >>> 5 & 1023) >> 0] | 0;
   HEAP8[$152 >> 0] = $179;
   _memset($152 + 1 | 0, $179 | 0, 7) | 0;
  } else {
   $190 = 0;
   label = 19;
  } else {
   $190 = $158;
   label = 19;
  }
  if ((label | 0) == 19) {
   label = 0;
   $182 = HEAP32[$$2291 + 16 >> 2] | 0;
   $184 = $182 + $154 << 13;
   $186 = $154 - $182 << 13;
   $188 = HEAP32[$$2291 + 24 >> 2] | 0;
   $191 = ($188 + $190 | 0) * 4433 | 0;
   $193 = $191 + ($190 * 6270 | 0) | 0;
   $195 = $191 + (Math_imul($188, -15137) | 0) | 0;
   $196 = $193 + $184 | 0;
   $197 = $184 - $193 | 0;
   $198 = $195 + $186 | 0;
   $199 = $186 - $195 | 0;
   $201 = HEAP32[$$2291 + 28 >> 2] | 0;
   $203 = HEAP32[$$2291 + 20 >> 2] | 0;
   $205 = HEAP32[$$2291 + 12 >> 2] | 0;
   $206 = $205 + $201 | 0;
   $207 = $203 + $156 | 0;
   $209 = ($206 + $207 | 0) * 9633 | 0;
   $212 = $209 + (Math_imul($206, -16069) | 0) | 0;
   $213 = $209 + (Math_imul($207, -3196) | 0) | 0;
   $215 = Math_imul($201 + $156 | 0, -7373) | 0;
   $219 = $215 + ($201 * 2446 | 0) + $212 | 0;
   $221 = $215 + ($156 * 12299 | 0) + $213 | 0;
   $223 = Math_imul($205 + $203 | 0, -20995) | 0;
   $227 = $223 + ($203 * 16819 | 0) + $213 | 0;
   $229 = $223 + ($205 * 25172 | 0) + $212 | 0;
   HEAP8[$152 >> 0] = HEAP8[$149 + (($221 + $196 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[$152 + 7 >> 0] = HEAP8[$149 + (($196 - $221 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[$152 + 1 >> 0] = HEAP8[$149 + (($229 + $198 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[$152 + 6 >> 0] = HEAP8[$149 + (($198 - $229 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[$152 + 2 >> 0] = HEAP8[$149 + (($227 + $199 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[$152 + 5 >> 0] = HEAP8[$149 + (($199 - $227 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[$152 + 3 >> 0] = HEAP8[$149 + (($219 + $197 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[$152 + 4 >> 0] = HEAP8[$149 + (($197 - $219 | 0) >>> 18 & 1023) >> 0] | 0;
  }
  $$1292 = $$1292 + 1 | 0;
  if (($$1292 | 0) == 8) break; else $$2291 = $$2291 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i27 = 0, $$0$i$i$i$i41 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i33 = 0, $$0$i$i2$i$i47 = 0, $$0$i$i38 = 0, $$0$in = 0, $$025 = 0, $$025$in = 0, $$2 = 0, $102 = 0, $103 = 0, $106 = 0, $108 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $142 = 0, $155 = 0, $157 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $20 = 0, $23 = 0, $37 = 0, $39 = 0, $5 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $71 = 0, $74 = 0, $8 = 0, $87 = 0, $89 = 0, label = 0;
 $5 = HEAP32[$0 >> 2] | 0;
 do if ($5) {
  $8 = HEAP32[$5 + 12 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$8 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$0 >> 2] = 0;
   $171 = 1;
   break;
  } else {
   $171 = (HEAP32[$0 >> 2] | 0) == 0;
   break;
  }
 } else $171 = 1; while (0);
 $20 = HEAP32[$1 >> 2] | 0;
 do if ($20) {
  $23 = HEAP32[$20 + 12 >> 2] | 0;
  if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$23 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($171) {
   $172 = $20;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  } else {
   HEAP32[$1 >> 2] = 0;
   label = 14;
   break;
  }
 } else label = 14; while (0);
 if ((label | 0) == 14) if ($171) label = 16; else {
  $172 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) {
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 6;
  $$2 = 0;
 } else if ((label | 0) == 17) {
  $37 = HEAP32[$0 >> 2] | 0;
  $39 = HEAP32[$37 + 12 >> 2] | 0;
  if (($39 | 0) == (HEAP32[$37 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$37 >> 2] | 0) + 36 >> 2] & 127]($37) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$39 >> 2] | 0) | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 12 >> 2] & 63]($3, 2048, $$0$i$i) | 0)) {
   HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 4;
   $$2 = 0;
   break;
  }
  $59 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 52 >> 2] & 63]($3, $$0$i$i, 0) | 0) << 24 >> 24;
  $60 = HEAP32[$0 >> 2] | 0;
  $61 = $60 + 12 | 0;
  $62 = HEAP32[$61 >> 2] | 0;
  if (($62 | 0) == (HEAP32[$60 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$60 >> 2] | 0) + 40 >> 2] & 127]($60) | 0; else {
   HEAP32[$61 >> 2] = $62 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$62 >> 2] | 0) | 0;
  }
  $$0$in = $59;
  $$025$in = $4;
  $173 = $172;
  $87 = $172;
  while (1) {
   $$0 = $$0$in + -48 | 0;
   $$025 = $$025$in + -1 | 0;
   $71 = HEAP32[$0 >> 2] | 0;
   do if ($71) {
    $74 = HEAP32[$71 + 12 >> 2] | 0;
    if (($74 | 0) == (HEAP32[$71 + 16 >> 2] | 0)) $$0$i$i$i$i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$71 >> 2] | 0) + 36 >> 2] & 127]($71) | 0; else $$0$i$i$i$i27 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$74 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i27, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[$0 >> 2] = 0;
     $102 = 1;
     break;
    } else {
     $102 = (HEAP32[$0 >> 2] | 0) == 0;
     break;
    }
   } else $102 = 1; while (0);
   if ($87) {
    $89 = HEAP32[$87 + 12 >> 2] | 0;
    if (($89 | 0) == (HEAP32[$87 + 16 >> 2] | 0)) $$0$i$i2$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$87 >> 2] | 0) + 36 >> 2] & 127]($87) | 0; else $$0$i$i2$i$i33 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$89 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i33, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[$1 >> 2] = 0;
     $103 = 1;
     $155 = 0;
     $174 = 0;
    } else {
     $103 = 0;
     $155 = $173;
     $174 = $87;
    }
   } else {
    $103 = 1;
    $155 = $173;
    $174 = 0;
   }
   $106 = HEAP32[$0 >> 2] | 0;
   if (!(($$025$in | 0) > 1 & ($102 ^ $103))) break;
   $108 = HEAP32[$106 + 12 >> 2] | 0;
   if (($108 | 0) == (HEAP32[$106 + 16 >> 2] | 0)) $$0$i$i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$106 >> 2] | 0) + 36 >> 2] & 127]($106) | 0; else $$0$i$i38 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$108 >> 2] | 0) | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 12 >> 2] & 63]($3, 2048, $$0$i$i38) | 0)) {
    $$2 = $$0;
    break L22;
   }
   $128 = ($$0 * 10 | 0) + ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 52 >> 2] & 63]($3, $$0$i$i38, 0) | 0) << 24 >> 24) | 0;
   $129 = HEAP32[$0 >> 2] | 0;
   $130 = $129 + 12 | 0;
   $131 = HEAP32[$130 >> 2] | 0;
   if (($131 | 0) == (HEAP32[$129 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$129 >> 2] | 0) + 40 >> 2] & 127]($129) | 0; else {
    HEAP32[$130 >> 2] = $131 + 4;
    __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$131 >> 2] | 0) | 0;
   }
   $$0$in = $128;
   $$025$in = $$025;
   $173 = $155;
   $87 = $174;
  }
  do if ($106) {
   $142 = HEAP32[$106 + 12 >> 2] | 0;
   if (($142 | 0) == (HEAP32[$106 + 16 >> 2] | 0)) $$0$i$i$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$106 >> 2] | 0) + 36 >> 2] & 127]($106) | 0; else $$0$i$i$i$i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$142 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i41, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $175 = 1;
    break;
   } else {
    $175 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } else $175 = 1; while (0);
  do if ($155) {
   $157 = HEAP32[$155 + 12 >> 2] | 0;
   if (($157 | 0) == (HEAP32[$155 + 16 >> 2] | 0)) $$0$i$i2$i$i47 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$155 >> 2] | 0) + 36 >> 2] & 127]($155) | 0; else $$0$i$i2$i$i47 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$157 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i47, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($175) {
    $$2 = $$0;
    break L22;
   } else break; else {
    HEAP32[$1 >> 2] = 0;
    label = 61;
    break;
   }
  } else label = 61; while (0);
  if ((label | 0) == 61 ? !$175 : 0) {
   $$2 = $$0;
   break;
  }
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 2;
  $$2 = $$0;
 } while (0);
 return $$2 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $110 = 0, $115 = 0, $118 = 0, $12 = 0, $122 = 0, $127 = 0, $13 = 0, $136 = 0, $138 = 0, $14 = 0, $15 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 $6 = sp + 300 | 0;
 $8 = sp + 288 | 0;
 $9 = sp + 276 | 0;
 $10 = sp + 272 | 0;
 $11 = sp;
 $12 = sp + 268 | 0;
 $13 = sp + 264 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $152 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if ($31) {
   $33 = HEAP32[$31 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $127 = 0;
    $153 = 1;
    $80 = 0;
   } else {
    $127 = $152;
    $153 = 0;
    $80 = $31;
   }
  } else {
   $127 = 0;
   $153 = 1;
   $80 = 0;
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if ($45) {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($153) {
    $154 = $45;
    break;
   } else {
    $$2 = $$0;
    $136 = $45;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($153) {
    $$2 = $$0;
    $136 = 0;
    break;
   } else $154 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$81 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41, $14, $$1, $10, $13, HEAP32[$6 >> 2] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $136 = $154;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $152 = $127;
  $31 = $80;
 }
 $103 = HEAP8[$8 + 11 >> 0] | 0;
 if (($103 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $103 & 255) | 0 ? ($110 = HEAP32[$12 >> 2] | 0, ($110 - $11 | 0) < 160) : 0) {
  $115 = HEAP32[$13 >> 2] | 0;
  HEAP32[$12 >> 2] = $110 + 4;
  HEAP32[$110 >> 2] = $115;
 }
 $118 = __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP16[$5 >> 1] = $118;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if ($80) {
  $122 = HEAP32[$80 + 12 >> 2] | 0;
  if (($122 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$127 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$122 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $155 = 1;
  } else $155 = 0;
 } else $155 = 1;
 do if ($136) {
  $138 = HEAP32[$136 + 12 >> 2] | 0;
  if (($138 | 0) == (HEAP32[$136 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$136 >> 2] | 0) + 36 >> 2] & 127]($136) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$138 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($155) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $155 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $110 = 0, $115 = 0, $118 = 0, $12 = 0, $122 = 0, $127 = 0, $13 = 0, $136 = 0, $138 = 0, $14 = 0, $15 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 $6 = sp + 300 | 0;
 $8 = sp + 288 | 0;
 $9 = sp + 276 | 0;
 $10 = sp + 272 | 0;
 $11 = sp;
 $12 = sp + 268 | 0;
 $13 = sp + 264 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $152 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if ($31) {
   $33 = HEAP32[$31 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $127 = 0;
    $153 = 1;
    $80 = 0;
   } else {
    $127 = $152;
    $153 = 0;
    $80 = $31;
   }
  } else {
   $127 = 0;
   $153 = 1;
   $80 = 0;
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if ($45) {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($153) {
    $154 = $45;
    break;
   } else {
    $$2 = $$0;
    $136 = $45;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($153) {
    $$2 = $$0;
    $136 = 0;
    break;
   } else $154 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$81 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41, $14, $$1, $10, $13, HEAP32[$6 >> 2] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $136 = $154;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $152 = $127;
  $31 = $80;
 }
 $103 = HEAP8[$8 + 11 >> 0] | 0;
 if (($103 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $103 & 255) | 0 ? ($110 = HEAP32[$12 >> 2] | 0, ($110 - $11 | 0) < 160) : 0) {
  $115 = HEAP32[$13 >> 2] | 0;
  HEAP32[$12 >> 2] = $110 + 4;
  HEAP32[$110 >> 2] = $115;
 }
 $118 = __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP32[$5 >> 2] = $118;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if ($80) {
  $122 = HEAP32[$80 + 12 >> 2] | 0;
  if (($122 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$127 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$122 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $155 = 1;
  } else $155 = 0;
 } else $155 = 1;
 do if ($136) {
  $138 = HEAP32[$136 + 12 >> 2] | 0;
  if (($138 | 0) == (HEAP32[$136 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$136 >> 2] | 0) + 36 >> 2] & 127]($136) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$138 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($155) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $155 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $110 = 0, $115 = 0, $118 = 0, $12 = 0, $122 = 0, $127 = 0, $13 = 0, $136 = 0, $138 = 0, $14 = 0, $15 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 $6 = sp + 300 | 0;
 $8 = sp + 288 | 0;
 $9 = sp + 276 | 0;
 $10 = sp + 272 | 0;
 $11 = sp;
 $12 = sp + 268 | 0;
 $13 = sp + 264 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $152 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if ($31) {
   $33 = HEAP32[$31 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $127 = 0;
    $153 = 1;
    $80 = 0;
   } else {
    $127 = $152;
    $153 = 0;
    $80 = $31;
   }
  } else {
   $127 = 0;
   $153 = 1;
   $80 = 0;
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if ($45) {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($153) {
    $154 = $45;
    break;
   } else {
    $$2 = $$0;
    $136 = $45;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($153) {
    $$2 = $$0;
    $136 = 0;
    break;
   } else $154 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$81 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41, $14, $$1, $10, $13, HEAP32[$6 >> 2] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $136 = $154;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $152 = $127;
  $31 = $80;
 }
 $103 = HEAP8[$8 + 11 >> 0] | 0;
 if (($103 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $103 & 255) | 0 ? ($110 = HEAP32[$12 >> 2] | 0, ($110 - $11 | 0) < 160) : 0) {
  $115 = HEAP32[$13 >> 2] | 0;
  HEAP32[$12 >> 2] = $110 + 4;
  HEAP32[$110 >> 2] = $115;
 }
 $118 = __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP32[$5 >> 2] = $118;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if ($80) {
  $122 = HEAP32[$80 + 12 >> 2] | 0;
  if (($122 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$127 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$122 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $155 = 1;
  } else $155 = 0;
 } else $155 = 1;
 do if ($136) {
  $138 = HEAP32[$136 + 12 >> 2] | 0;
  if (($138 | 0) == (HEAP32[$136 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$136 >> 2] | 0) + 36 >> 2] & 127]($136) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$138 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($155) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $155 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $111 = 0, $116 = 0, $119 = 0, $12 = 0, $123 = 0, $128 = 0, $13 = 0, $137 = 0, $139 = 0, $14 = 0, $15 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 224 | 0;
 $8 = sp + 212 | 0;
 $9 = sp + 200 | 0;
 $10 = sp + 196 | 0;
 $11 = sp;
 $12 = sp + 192 | 0;
 $13 = sp + 188 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $153 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if ($31) {
   $33 = HEAP32[$31 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $128 = 0;
    $154 = 1;
    $80 = 0;
   } else {
    $128 = $153;
    $154 = 0;
    $80 = $31;
   }
  } else {
   $128 = 0;
   $154 = 1;
   $80 = 0;
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if ($45) {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($154) {
    $155 = $45;
    break;
   } else {
    $$2 = $$0;
    $137 = $45;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;
    $137 = 0;
    break;
   } else $155 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($$0$i$i41 & 255, $14, $$1, $10, $13, HEAP8[$6 >> 0] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $137 = $155;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $153 = $128;
  $31 = $80;
 }
 $104 = HEAP8[$8 + 11 >> 0] | 0;
 if (($104 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $104 & 255) | 0 ? ($111 = HEAP32[$12 >> 2] | 0, ($111 - $11 | 0) < 160) : 0) {
  $116 = HEAP32[$13 >> 2] | 0;
  HEAP32[$12 >> 2] = $111 + 4;
  HEAP32[$111 >> 2] = $116;
 }
 $119 = __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP16[$5 >> 1] = $119;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if ($80) {
  $123 = HEAP32[$80 + 12 >> 2] | 0;
  if (($123 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$128 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$123 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $156 = 1;
  } else $156 = 0;
 } else $156 = 1;
 do if ($137) {
  $139 = HEAP32[$137 + 12 >> 2] | 0;
  if (($139 | 0) == (HEAP32[$137 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$137 >> 2] | 0) + 36 >> 2] & 127]($137) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$139 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($156) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $156 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $111 = 0, $116 = 0, $119 = 0, $12 = 0, $123 = 0, $128 = 0, $13 = 0, $137 = 0, $139 = 0, $14 = 0, $15 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 224 | 0;
 $8 = sp + 212 | 0;
 $9 = sp + 200 | 0;
 $10 = sp + 196 | 0;
 $11 = sp;
 $12 = sp + 192 | 0;
 $13 = sp + 188 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $153 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if ($31) {
   $33 = HEAP32[$31 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $128 = 0;
    $154 = 1;
    $80 = 0;
   } else {
    $128 = $153;
    $154 = 0;
    $80 = $31;
   }
  } else {
   $128 = 0;
   $154 = 1;
   $80 = 0;
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if ($45) {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($154) {
    $155 = $45;
    break;
   } else {
    $$2 = $$0;
    $137 = $45;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;
    $137 = 0;
    break;
   } else $155 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($$0$i$i41 & 255, $14, $$1, $10, $13, HEAP8[$6 >> 0] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $137 = $155;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $153 = $128;
  $31 = $80;
 }
 $104 = HEAP8[$8 + 11 >> 0] | 0;
 if (($104 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $104 & 255) | 0 ? ($111 = HEAP32[$12 >> 2] | 0, ($111 - $11 | 0) < 160) : 0) {
  $116 = HEAP32[$13 >> 2] | 0;
  HEAP32[$12 >> 2] = $111 + 4;
  HEAP32[$111 >> 2] = $116;
 }
 $119 = __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP32[$5 >> 2] = $119;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if ($80) {
  $123 = HEAP32[$80 + 12 >> 2] | 0;
  if (($123 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$128 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$123 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $156 = 1;
  } else $156 = 0;
 } else $156 = 1;
 do if ($137) {
  $139 = HEAP32[$137 + 12 >> 2] | 0;
  if (($139 | 0) == (HEAP32[$137 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$137 >> 2] | 0) + 36 >> 2] & 127]($137) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$139 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($156) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $156 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $111 = 0, $116 = 0, $119 = 0, $12 = 0, $123 = 0, $128 = 0, $13 = 0, $137 = 0, $139 = 0, $14 = 0, $15 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 224 | 0;
 $8 = sp + 212 | 0;
 $9 = sp + 200 | 0;
 $10 = sp + 196 | 0;
 $11 = sp;
 $12 = sp + 192 | 0;
 $13 = sp + 188 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $153 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if ($31) {
   $33 = HEAP32[$31 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $128 = 0;
    $154 = 1;
    $80 = 0;
   } else {
    $128 = $153;
    $154 = 0;
    $80 = $31;
   }
  } else {
   $128 = 0;
   $154 = 1;
   $80 = 0;
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if ($45) {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($154) {
    $155 = $45;
    break;
   } else {
    $$2 = $$0;
    $137 = $45;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;
    $137 = 0;
    break;
   } else $155 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($$0$i$i41 & 255, $14, $$1, $10, $13, HEAP8[$6 >> 0] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $137 = $155;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $153 = $128;
  $31 = $80;
 }
 $104 = HEAP8[$8 + 11 >> 0] | 0;
 if (($104 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $104 & 255) | 0 ? ($111 = HEAP32[$12 >> 2] | 0, ($111 - $11 | 0) < 160) : 0) {
  $116 = HEAP32[$13 >> 2] | 0;
  HEAP32[$12 >> 2] = $111 + 4;
  HEAP32[$111 >> 2] = $116;
 }
 $119 = __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP32[$5 >> 2] = $119;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if ($80) {
  $123 = HEAP32[$80 + 12 >> 2] | 0;
  if (($123 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$128 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$123 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $156 = 1;
  } else $156 = 0;
 } else $156 = 1;
 do if ($137) {
  $139 = HEAP32[$137 + 12 >> 2] | 0;
  if (($139 | 0) == (HEAP32[$137 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$137 >> 2] | 0) + 36 >> 2] & 127]($137) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$139 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($156) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $156 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $110 = 0, $115 = 0, $118 = 0, $12 = 0, $122 = 0, $127 = 0, $13 = 0, $136 = 0, $138 = 0, $14 = 0, $15 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 $6 = sp + 300 | 0;
 $8 = sp + 288 | 0;
 $9 = sp + 276 | 0;
 $10 = sp + 272 | 0;
 $11 = sp;
 $12 = sp + 268 | 0;
 $13 = sp + 264 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $152 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if ($31) {
   $33 = HEAP32[$31 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $127 = 0;
    $153 = 1;
    $80 = 0;
   } else {
    $127 = $152;
    $153 = 0;
    $80 = $31;
   }
  } else {
   $127 = 0;
   $153 = 1;
   $80 = 0;
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if ($45) {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($153) {
    $154 = $45;
    break;
   } else {
    $$2 = $$0;
    $136 = $45;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($153) {
    $$2 = $$0;
    $136 = 0;
    break;
   } else $154 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$81 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41, $14, $$1, $10, $13, HEAP32[$6 >> 2] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $136 = $154;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $152 = $127;
  $31 = $80;
 }
 $103 = HEAP8[$8 + 11 >> 0] | 0;
 if (($103 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $103 & 255) | 0 ? ($110 = HEAP32[$12 >> 2] | 0, ($110 - $11 | 0) < 160) : 0) {
  $115 = HEAP32[$13 >> 2] | 0;
  HEAP32[$12 >> 2] = $110 + 4;
  HEAP32[$110 >> 2] = $115;
 }
 $118 = __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP32[$5 >> 2] = $118;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if ($80) {
  $122 = HEAP32[$80 + 12 >> 2] | 0;
  if (($122 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$127 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$122 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $155 = 1;
  } else $155 = 0;
 } else $155 = 1;
 do if ($136) {
  $138 = HEAP32[$136 + 12 >> 2] | 0;
  if (($138 | 0) == (HEAP32[$136 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$136 >> 2] | 0) + 36 >> 2] & 127]($136) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$138 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($155) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $155 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $111 = 0, $116 = 0, $119 = 0, $12 = 0, $123 = 0, $128 = 0, $13 = 0, $137 = 0, $139 = 0, $14 = 0, $15 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 224 | 0;
 $8 = sp + 212 | 0;
 $9 = sp + 200 | 0;
 $10 = sp + 196 | 0;
 $11 = sp;
 $12 = sp + 192 | 0;
 $13 = sp + 188 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $153 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if ($31) {
   $33 = HEAP32[$31 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $128 = 0;
    $154 = 1;
    $80 = 0;
   } else {
    $128 = $153;
    $154 = 0;
    $80 = $31;
   }
  } else {
   $128 = 0;
   $154 = 1;
   $80 = 0;
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if ($45) {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($154) {
    $155 = $45;
    break;
   } else {
    $$2 = $$0;
    $137 = $45;
    break L8;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   }
  } else label = 19; while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;
    $137 = 0;
    break;
   } else $155 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($$0$i$i41 & 255, $14, $$1, $10, $13, HEAP8[$6 >> 0] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $137 = $155;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $153 = $128;
  $31 = $80;
 }
 $104 = HEAP8[$8 + 11 >> 0] | 0;
 if (($104 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $104 & 255) | 0 ? ($111 = HEAP32[$12 >> 2] | 0, ($111 - $11 | 0) < 160) : 0) {
  $116 = HEAP32[$13 >> 2] | 0;
  HEAP32[$12 >> 2] = $111 + 4;
  HEAP32[$111 >> 2] = $116;
 }
 $119 = __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP32[$5 >> 2] = $119;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if ($80) {
  $123 = HEAP32[$80 + 12 >> 2] | 0;
  if (($123 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$128 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$123 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $156 = 1;
  } else $156 = 0;
 } else $156 = 1;
 do if ($137) {
  $139 = HEAP32[$137 + 12 >> 2] | 0;
  if (($139 | 0) == (HEAP32[$137 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$137 >> 2] | 0) + 36 >> 2] & 127]($137) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$139 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($156) break; else {
   label = 50;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  }
 } else label = 48; while (0);
 if ((label | 0) == 48 ? $156 : 0) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function _jpeg_idct_8x16($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0320328 = 0, $$0322327 = 0, $$0323326 = 0, $$0329 = 0, $$1321324 = 0, $$1325 = 0, $101 = 0, $103 = 0, $109 = 0, $114 = 0, $115 = 0, $118 = 0, $122 = 0, $128 = 0, $130 = 0, $131 = 0, $132 = 0, $134 = 0, $135 = 0, $136 = 0, $15 = 0, $188 = 0, $191 = 0, $193 = 0, $195 = 0, $197 = 0, $199 = 0, $201 = 0, $203 = 0, $205 = 0, $207 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $215 = 0, $217 = 0, $219 = 0, $22 = 0, $221 = 0, $222 = 0, $223 = 0, $225 = 0, $228 = 0, $229 = 0, $23 = 0, $231 = 0, $235 = 0, $237 = 0, $239 = 0, $24 = 0, $243 = 0, $245 = 0, $25 = 0, $26 = 0, $27 = 0, $33 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $64 = 0, $7 = 0, $70 = 0, $76 = 0, $82 = 0, $83 = 0, $85 = 0, $86 = 0, $88 = 0, $90 = 0, $91 = 0, $93 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0320328 = $5;
 $$0322327 = HEAP32[$1 + 84 >> 2] | 0;
 $$0323326 = $2;
 $$0329 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0323326 >> 1] << 13, HEAP32[$$0322327 >> 2] | 0) | 0 | 1024;
  $21 = Math_imul(HEAP32[$$0322327 + 128 >> 2] | 0, HEAP16[$$0323326 + 64 >> 1] | 0) | 0;
  $22 = $21 * 10703 | 0;
  $23 = $21 * 4433 | 0;
  $24 = $22 + $15 | 0;
  $25 = $15 - $22 | 0;
  $26 = $23 + $15 | 0;
  $27 = $15 - $23 | 0;
  $33 = Math_imul(HEAP32[$$0322327 + 64 >> 2] | 0, HEAP16[$$0323326 + 32 >> 1] | 0) | 0;
  $39 = Math_imul(HEAP32[$$0322327 + 192 >> 2] | 0, HEAP16[$$0323326 + 96 >> 1] | 0) | 0;
  $40 = $33 - $39 | 0;
  $41 = $40 * 2260 | 0;
  $42 = $40 * 11363 | 0;
  $44 = $42 + ($39 * 20995 | 0) | 0;
  $46 = $41 + ($33 * 7373 | 0) | 0;
  $48 = $42 + (Math_imul($33, -4926) | 0) | 0;
  $50 = $41 + (Math_imul($39, -4176) | 0) | 0;
  $51 = $44 + $24 | 0;
  $52 = $24 - $44 | 0;
  $53 = $46 + $26 | 0;
  $54 = $26 - $46 | 0;
  $55 = $48 + $27 | 0;
  $56 = $27 - $48 | 0;
  $57 = $50 + $25 | 0;
  $58 = $25 - $50 | 0;
  $64 = Math_imul(HEAP32[$$0322327 + 32 >> 2] | 0, HEAP16[$$0323326 + 16 >> 1] | 0) | 0;
  $70 = Math_imul(HEAP32[$$0322327 + 96 >> 2] | 0, HEAP16[$$0323326 + 48 >> 1] | 0) | 0;
  $76 = Math_imul(HEAP32[$$0322327 + 160 >> 2] | 0, HEAP16[$$0323326 + 80 >> 1] | 0) | 0;
  $82 = Math_imul(HEAP32[$$0322327 + 224 >> 2] | 0, HEAP16[$$0323326 + 112 >> 1] | 0) | 0;
  $83 = $76 + $64 | 0;
  $85 = ($70 + $64 | 0) * 11086 | 0;
  $86 = $83 * 10217 | 0;
  $88 = ($82 + $64 | 0) * 8956 | 0;
  $90 = ($64 - $82 | 0) * 7350 | 0;
  $91 = $83 * 5461 | 0;
  $93 = ($64 - $70 | 0) * 3363 | 0;
  $97 = $85 + (Math_imul($64, -18730) | 0) + $86 + $88 | 0;
  $101 = $93 + (Math_imul($64, -15038) | 0) + $91 + $90 | 0;
  $103 = ($76 + $70 | 0) * 1136 | 0;
  $109 = ($76 - $70 | 0) * 11529 | 0;
  $114 = $82 + $70 | 0;
  $115 = Math_imul($114, -5461) | 0;
  $118 = $85 + ($70 * 589 | 0) + $103 + $115 | 0;
  $122 = Math_imul($114, -10217) | 0;
  $128 = $93 + ($70 * 16154 | 0) + $109 + $122 | 0;
  $130 = Math_imul($82 + $76 | 0, -11086) | 0;
  $131 = $103 + (Math_imul($76, -9222) | 0) + $86 + $130 | 0;
  $132 = $115 + ($82 * 8728 | 0) + $88 + $130 | 0;
  $134 = ($82 - $76 | 0) * 3363 | 0;
  $135 = $122 + ($82 * 25733 | 0) + $90 + $134 | 0;
  $136 = $109 + (Math_imul($76, -6278) | 0) + $91 + $134 | 0;
  HEAP32[$$0320328 >> 2] = $97 + $51 >> 11;
  HEAP32[$$0320328 + 480 >> 2] = $51 - $97 >> 11;
  HEAP32[$$0320328 + 32 >> 2] = $118 + $53 >> 11;
  HEAP32[$$0320328 + 448 >> 2] = $53 - $118 >> 11;
  HEAP32[$$0320328 + 64 >> 2] = $131 + $55 >> 11;
  HEAP32[$$0320328 + 416 >> 2] = $55 - $131 >> 11;
  HEAP32[$$0320328 + 96 >> 2] = $132 + $57 >> 11;
  HEAP32[$$0320328 + 384 >> 2] = $57 - $132 >> 11;
  HEAP32[$$0320328 + 128 >> 2] = $135 + $58 >> 11;
  HEAP32[$$0320328 + 352 >> 2] = $58 - $135 >> 11;
  HEAP32[$$0320328 + 160 >> 2] = $136 + $56 >> 11;
  HEAP32[$$0320328 + 320 >> 2] = $56 - $136 >> 11;
  HEAP32[$$0320328 + 192 >> 2] = $128 + $54 >> 11;
  HEAP32[$$0320328 + 288 >> 2] = $54 - $128 >> 11;
  HEAP32[$$0320328 + 224 >> 2] = $101 + $52 >> 11;
  HEAP32[$$0320328 + 256 >> 2] = $52 - $101 >> 11;
  $$0329 = $$0329 + 1 | 0;
  if (($$0329 | 0) == 8) break; else {
   $$0320328 = $$0320328 + 4 | 0;
   $$0322327 = $$0322327 + 4 | 0;
   $$0323326 = $$0323326 + 2 | 0;
  }
 }
 $188 = $7 + -384 | 0;
 $$1321324 = $5;
 $$1325 = 0;
 while (1) {
  $191 = (HEAP32[$3 + ($$1325 << 2) >> 2] | 0) + $4 | 0;
  $193 = (HEAP32[$$1321324 >> 2] | 0) + 16400 | 0;
  $195 = HEAP32[$$1321324 + 16 >> 2] | 0;
  $197 = $193 + $195 << 13;
  $199 = $193 - $195 << 13;
  $201 = HEAP32[$$1321324 + 8 >> 2] | 0;
  $203 = HEAP32[$$1321324 + 24 >> 2] | 0;
  $205 = ($203 + $201 | 0) * 4433 | 0;
  $207 = $205 + ($201 * 6270 | 0) | 0;
  $209 = $205 + (Math_imul($203, -15137) | 0) | 0;
  $210 = $207 + $197 | 0;
  $211 = $197 - $207 | 0;
  $212 = $209 + $199 | 0;
  $213 = $199 - $209 | 0;
  $215 = HEAP32[$$1321324 + 28 >> 2] | 0;
  $217 = HEAP32[$$1321324 + 20 >> 2] | 0;
  $219 = HEAP32[$$1321324 + 12 >> 2] | 0;
  $221 = HEAP32[$$1321324 + 4 >> 2] | 0;
  $222 = $219 + $215 | 0;
  $223 = $221 + $217 | 0;
  $225 = ($223 + $222 | 0) * 9633 | 0;
  $228 = $225 + (Math_imul($222, -16069) | 0) | 0;
  $229 = $225 + (Math_imul($223, -3196) | 0) | 0;
  $231 = Math_imul($221 + $215 | 0, -7373) | 0;
  $235 = $231 + ($215 * 2446 | 0) + $228 | 0;
  $237 = $231 + ($221 * 12299 | 0) + $229 | 0;
  $239 = Math_imul($219 + $217 | 0, -20995) | 0;
  $243 = $239 + ($217 * 16819 | 0) + $229 | 0;
  $245 = $239 + ($219 * 25172 | 0) + $228 | 0;
  HEAP8[$191 >> 0] = HEAP8[$188 + (($237 + $210 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 7 >> 0] = HEAP8[$188 + (($210 - $237 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 1 >> 0] = HEAP8[$188 + (($245 + $212 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 6 >> 0] = HEAP8[$188 + (($212 - $245 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 2 >> 0] = HEAP8[$188 + (($243 + $213 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 5 >> 0] = HEAP8[$188 + (($213 - $243 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 3 >> 0] = HEAP8[$188 + (($235 + $211 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$191 + 4 >> 0] = HEAP8[$188 + (($211 - $235 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1325 = $$1325 + 1 | 0;
  if (($$1325 | 0) == 16) break; else $$1321324 = $$1321324 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function _jpeg_idct_4x4($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $103 = 0, $109 = 0, $111 = 0, $113 = 0, $119 = 0, $125 = 0, $128 = 0, $13 = 0, $131 = 0, $134 = 0, $135 = 0, $148 = 0, $154 = 0, $156 = 0, $158 = 0, $164 = 0, $170 = 0, $173 = 0, $176 = 0, $179 = 0, $180 = 0, $183 = 0, $187 = 0, $189 = 0, $19 = 0, $191 = 0, $193 = 0, $195 = 0, $196 = 0, $198 = 0, $200 = 0, $202 = 0, $21 = 0, $228 = 0, $23 = 0, $230 = 0, $232 = 0, $234 = 0, $236 = 0, $238 = 0, $240 = 0, $242 = 0, $244 = 0, $271 = 0, $273 = 0, $275 = 0, $277 = 0, $279 = 0, $281 = 0, $283 = 0, $285 = 0, $287 = 0, $289 = 0, $29 = 0, $316 = 0, $318 = 0, $320 = 0, $322 = 0, $324 = 0, $326 = 0, $328 = 0, $330 = 0, $332 = 0, $334 = 0, $35 = 0, $38 = 0, $41 = 0, $44 = 0, $49 = 0, $5 = 0, $54 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $7 = 0, $74 = 0, $80 = 0, $83 = 0, $86 = 0, $89 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $9 = HEAP32[$1 + 84 >> 2] | 0;
 $13 = Math_imul(HEAP32[$9 >> 2] | 0, HEAP16[$2 >> 1] | 0) | 0;
 $19 = Math_imul(HEAP32[$9 + 64 >> 2] | 0, HEAP16[$2 + 32 >> 1] | 0) | 0;
 $21 = $19 + $13 << 2;
 $23 = $13 - $19 << 2;
 $29 = Math_imul(HEAP32[$9 + 32 >> 2] | 0, HEAP16[$2 + 16 >> 1] | 0) | 0;
 $35 = Math_imul(HEAP32[$9 + 96 >> 2] | 0, HEAP16[$2 + 48 >> 1] | 0) | 0;
 $38 = (($35 + $29 | 0) * 4433 | 0) + 1024 | 0;
 $41 = $38 + ($29 * 6270 | 0) >> 11;
 $44 = $38 + (Math_imul($35, -15137) | 0) >> 11;
 HEAP32[$5 >> 2] = $41 + $21;
 HEAP32[$5 + 48 >> 2] = $21 - $41;
 $49 = $5 + 16 | 0;
 HEAP32[$49 >> 2] = $44 + $23;
 HEAP32[$5 + 32 >> 2] = $23 - $44;
 $54 = $5 + 4 | 0;
 $58 = Math_imul(HEAP32[$9 + 4 >> 2] | 0, HEAP16[$2 + 2 >> 1] | 0) | 0;
 $64 = Math_imul(HEAP32[$9 + 68 >> 2] | 0, HEAP16[$2 + 34 >> 1] | 0) | 0;
 $66 = $64 + $58 << 2;
 $68 = $58 - $64 << 2;
 $74 = Math_imul(HEAP32[$9 + 36 >> 2] | 0, HEAP16[$2 + 18 >> 1] | 0) | 0;
 $80 = Math_imul(HEAP32[$9 + 100 >> 2] | 0, HEAP16[$2 + 50 >> 1] | 0) | 0;
 $83 = (($80 + $74 | 0) * 4433 | 0) + 1024 | 0;
 $86 = $83 + ($74 * 6270 | 0) >> 11;
 $89 = $83 + (Math_imul($80, -15137) | 0) >> 11;
 HEAP32[$54 >> 2] = $86 + $66;
 HEAP32[$5 + 52 >> 2] = $66 - $86;
 HEAP32[$5 + 20 >> 2] = $89 + $68;
 HEAP32[$5 + 36 >> 2] = $68 - $89;
 $103 = Math_imul(HEAP32[$9 + 8 >> 2] | 0, HEAP16[$2 + 4 >> 1] | 0) | 0;
 $109 = Math_imul(HEAP32[$9 + 72 >> 2] | 0, HEAP16[$2 + 36 >> 1] | 0) | 0;
 $111 = $109 + $103 << 2;
 $113 = $103 - $109 << 2;
 $119 = Math_imul(HEAP32[$9 + 40 >> 2] | 0, HEAP16[$2 + 20 >> 1] | 0) | 0;
 $125 = Math_imul(HEAP32[$9 + 104 >> 2] | 0, HEAP16[$2 + 52 >> 1] | 0) | 0;
 $128 = (($125 + $119 | 0) * 4433 | 0) + 1024 | 0;
 $131 = $128 + ($119 * 6270 | 0) >> 11;
 $134 = $128 + (Math_imul($125, -15137) | 0) >> 11;
 $135 = $131 + $111 | 0;
 HEAP32[$5 + 8 >> 2] = $135;
 HEAP32[$5 + 56 >> 2] = $111 - $131;
 HEAP32[$5 + 24 >> 2] = $134 + $113;
 HEAP32[$5 + 40 >> 2] = $113 - $134;
 $148 = Math_imul(HEAP32[$9 + 12 >> 2] | 0, HEAP16[$2 + 6 >> 1] | 0) | 0;
 $154 = Math_imul(HEAP32[$9 + 76 >> 2] | 0, HEAP16[$2 + 38 >> 1] | 0) | 0;
 $156 = $154 + $148 << 2;
 $158 = $148 - $154 << 2;
 $164 = Math_imul(HEAP32[$9 + 44 >> 2] | 0, HEAP16[$2 + 22 >> 1] | 0) | 0;
 $170 = Math_imul(HEAP32[$9 + 108 >> 2] | 0, HEAP16[$2 + 54 >> 1] | 0) | 0;
 $173 = (($170 + $164 | 0) * 4433 | 0) + 1024 | 0;
 $176 = $173 + ($164 * 6270 | 0) >> 11;
 $179 = $173 + (Math_imul($170, -15137) | 0) >> 11;
 $180 = $176 + $156 | 0;
 HEAP32[$5 + 12 >> 2] = $180;
 HEAP32[$5 + 60 >> 2] = $156 - $176;
 $183 = $179 + $158 | 0;
 HEAP32[$5 + 28 >> 2] = $183;
 HEAP32[$5 + 44 >> 2] = $158 - $179;
 $187 = $7 + -384 | 0;
 $189 = (HEAP32[$3 >> 2] | 0) + $4 | 0;
 $191 = (HEAP32[$5 >> 2] | 0) + 16400 | 0;
 $193 = $191 + $135 << 13;
 $195 = $191 - $135 << 13;
 $196 = HEAP32[$54 >> 2] | 0;
 $198 = ($180 + $196 | 0) * 4433 | 0;
 $200 = $198 + ($196 * 6270 | 0) | 0;
 $202 = $198 + (Math_imul($180, -15137) | 0) | 0;
 HEAP8[$189 >> 0] = HEAP8[$187 + (($200 + $193 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$189 + 3 >> 0] = HEAP8[$187 + (($193 - $200 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$189 + 1 >> 0] = HEAP8[$187 + (($202 + $195 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$189 + 2 >> 0] = HEAP8[$187 + (($195 - $202 | 0) >>> 18 & 1023) >> 0] | 0;
 $228 = (HEAP32[$3 + 4 >> 2] | 0) + $4 | 0;
 $230 = (HEAP32[$49 >> 2] | 0) + 16400 | 0;
 $232 = HEAP32[$5 + 24 >> 2] | 0;
 $234 = $230 + $232 << 13;
 $236 = $230 - $232 << 13;
 $238 = HEAP32[$5 + 20 >> 2] | 0;
 $240 = ($183 + $238 | 0) * 4433 | 0;
 $242 = $240 + ($238 * 6270 | 0) | 0;
 $244 = $240 + (Math_imul($183, -15137) | 0) | 0;
 HEAP8[$228 >> 0] = HEAP8[$187 + (($242 + $234 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$228 + 3 >> 0] = HEAP8[$187 + (($234 - $242 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$228 + 1 >> 0] = HEAP8[$187 + (($244 + $236 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$228 + 2 >> 0] = HEAP8[$187 + (($236 - $244 | 0) >>> 18 & 1023) >> 0] | 0;
 $271 = (HEAP32[$3 + 8 >> 2] | 0) + $4 | 0;
 $273 = (HEAP32[$5 + 32 >> 2] | 0) + 16400 | 0;
 $275 = HEAP32[$5 + 40 >> 2] | 0;
 $277 = $273 + $275 << 13;
 $279 = $273 - $275 << 13;
 $281 = HEAP32[$5 + 36 >> 2] | 0;
 $283 = HEAP32[$5 + 44 >> 2] | 0;
 $285 = ($283 + $281 | 0) * 4433 | 0;
 $287 = $285 + ($281 * 6270 | 0) | 0;
 $289 = $285 + (Math_imul($283, -15137) | 0) | 0;
 HEAP8[$271 >> 0] = HEAP8[$187 + (($287 + $277 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$271 + 3 >> 0] = HEAP8[$187 + (($277 - $287 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$271 + 1 >> 0] = HEAP8[$187 + (($289 + $279 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$271 + 2 >> 0] = HEAP8[$187 + (($279 - $289 | 0) >>> 18 & 1023) >> 0] | 0;
 $316 = (HEAP32[$3 + 12 >> 2] | 0) + $4 | 0;
 $318 = (HEAP32[$5 + 48 >> 2] | 0) + 16400 | 0;
 $320 = HEAP32[$5 + 56 >> 2] | 0;
 $322 = $318 + $320 << 13;
 $324 = $318 - $320 << 13;
 $326 = HEAP32[$5 + 52 >> 2] | 0;
 $328 = HEAP32[$5 + 60 >> 2] | 0;
 $330 = ($328 + $326 | 0) * 4433 | 0;
 $332 = $330 + ($326 * 6270 | 0) | 0;
 $334 = $330 + (Math_imul($328, -15137) | 0) | 0;
 HEAP8[$316 >> 0] = HEAP8[$187 + (($332 + $322 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$316 + 3 >> 0] = HEAP8[$187 + (($322 - $332 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$316 + 1 >> 0] = HEAP8[$187 + (($334 + $324 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$316 + 2 >> 0] = HEAP8[$187 + (($324 - $334 | 0) >>> 18 & 1023) >> 0] | 0;
 STACKTOP = sp;
 return;
}

function _jpeg_idct_11x11($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0286294 = 0, $$0288293 = 0, $$0289292 = 0, $$0295 = 0, $$1287290 = 0, $$1291 = 0, $101 = 0, $105 = 0, $107 = 0, $110 = 0, $113 = 0, $119 = 0, $15 = 0, $155 = 0, $158 = 0, $161 = 0, $163 = 0, $165 = 0, $167 = 0, $171 = 0, $172 = 0, $174 = 0, $176 = 0, $178 = 0, $180 = 0, $182 = 0, $185 = 0, $186 = 0, $188 = 0, $192 = 0, $194 = 0, $196 = 0, $198 = 0, $200 = 0, $202 = 0, $203 = 0, $206 = 0, $207 = 0, $209 = 0, $21 = 0, $212 = 0, $216 = 0, $219 = 0, $223 = 0, $225 = 0, $228 = 0, $231 = 0, $237 = 0, $27 = 0, $33 = 0, $37 = 0, $38 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $51 = 0, $52 = 0, $54 = 0, $58 = 0, $60 = 0, $66 = 0, $7 = 0, $72 = 0, $78 = 0, $84 = 0, $85 = 0, $88 = 0, $89 = 0, $91 = 0, $94 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(352);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0286294 = $5;
 $$0288293 = HEAP32[$1 + 84 >> 2] | 0;
 $$0289292 = $2;
 $$0295 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0289292 >> 1] << 13, HEAP32[$$0288293 >> 2] | 0) | 0 | 1024;
  $21 = Math_imul(HEAP32[$$0288293 + 64 >> 2] | 0, HEAP16[$$0289292 + 32 >> 1] | 0) | 0;
  $27 = Math_imul(HEAP32[$$0288293 + 128 >> 2] | 0, HEAP16[$$0289292 + 64 >> 1] | 0) | 0;
  $33 = Math_imul(HEAP32[$$0288293 + 192 >> 2] | 0, HEAP16[$$0289292 + 96 >> 1] | 0) | 0;
  $37 = ($27 - $21 | 0) * 3529 | 0;
  $38 = $33 + $21 | 0;
  $40 = $38 - $27 | 0;
  $42 = ($40 * 11116 | 0) + $15 | 0;
  $44 = $42 + (($27 - $33 | 0) * 20862 | 0) | 0;
  $46 = $44 + (Math_imul($27, -14924) | 0) + $37 | 0;
  $48 = $44 + ($33 * 17333 | 0) | 0;
  $51 = $42 + $37 + (Math_imul($21, -12399) | 0) | 0;
  $52 = $42 + (Math_imul($38, -9467) | 0) | 0;
  $54 = $52 + (Math_imul($33, -6461) | 0) | 0;
  $58 = ($27 * 15929 | 0) + (Math_imul($21, -11395) | 0) + $52 | 0;
  $60 = (Math_imul($40, -11585) | 0) + $15 | 0;
  $66 = Math_imul(HEAP32[$$0288293 + 32 >> 2] | 0, HEAP16[$$0289292 + 16 >> 1] | 0) | 0;
  $72 = Math_imul(HEAP32[$$0288293 + 96 >> 2] | 0, HEAP16[$$0289292 + 48 >> 1] | 0) | 0;
  $78 = Math_imul(HEAP32[$$0288293 + 160 >> 2] | 0, HEAP16[$$0289292 + 80 >> 1] | 0) | 0;
  $84 = Math_imul(HEAP32[$$0288293 + 224 >> 2] | 0, HEAP16[$$0289292 + 112 >> 1] | 0) | 0;
  $85 = $72 + $66 | 0;
  $88 = ($78 + $85 + $84 | 0) * 3264 | 0;
  $89 = $85 * 7274 | 0;
  $91 = ($78 + $66 | 0) * 5492 | 0;
  $94 = $88 + (($84 + $66 | 0) * 3e3 | 0) | 0;
  $98 = $89 + (Math_imul($66, -7562) | 0) + $91 + $94 | 0;
  $101 = $88 + (Math_imul($78 + $72 | 0, -9527) | 0) | 0;
  $105 = $91 + (Math_imul($78, -9766) | 0) + $101 | 0;
  $107 = Math_imul($84 + $72 | 0, -14731) | 0;
  $110 = $89 + ($72 * 16984 | 0) + $107 + $101 | 0;
  $113 = $107 + ($84 * 17223 | 0) + $94 | 0;
  $119 = ($78 * 8203 | 0) + (Math_imul($72, -12019) | 0) + (Math_imul($84, -13802) | 0) + $88 | 0;
  HEAP32[$$0286294 >> 2] = $98 + $48 >> 11;
  HEAP32[$$0286294 + 320 >> 2] = $48 - $98 >> 11;
  HEAP32[$$0286294 + 32 >> 2] = $110 + $46 >> 11;
  HEAP32[$$0286294 + 288 >> 2] = $46 - $110 >> 11;
  HEAP32[$$0286294 + 64 >> 2] = $105 + $54 >> 11;
  HEAP32[$$0286294 + 256 >> 2] = $54 - $105 >> 11;
  HEAP32[$$0286294 + 96 >> 2] = $113 + $51 >> 11;
  HEAP32[$$0286294 + 224 >> 2] = $51 - $113 >> 11;
  HEAP32[$$0286294 + 128 >> 2] = $119 + $58 >> 11;
  HEAP32[$$0286294 + 192 >> 2] = $58 - $119 >> 11;
  HEAP32[$$0286294 + 160 >> 2] = $60 >> 11;
  $$0295 = $$0295 + 1 | 0;
  if (($$0295 | 0) == 8) break; else {
   $$0286294 = $$0286294 + 4 | 0;
   $$0288293 = $$0288293 + 4 | 0;
   $$0289292 = $$0289292 + 2 | 0;
  }
 }
 $155 = $7 + -384 | 0;
 $$1287290 = $5;
 $$1291 = 0;
 while (1) {
  $158 = (HEAP32[$3 + ($$1291 << 2) >> 2] | 0) + $4 | 0;
  $161 = (HEAP32[$$1287290 >> 2] << 13) + 134348800 | 0;
  $163 = HEAP32[$$1287290 + 8 >> 2] | 0;
  $165 = HEAP32[$$1287290 + 16 >> 2] | 0;
  $167 = HEAP32[$$1287290 + 24 >> 2] | 0;
  $171 = ($165 - $163 | 0) * 3529 | 0;
  $172 = $167 + $163 | 0;
  $174 = $172 - $165 | 0;
  $176 = ($174 * 11116 | 0) + $161 | 0;
  $178 = $176 + (($165 - $167 | 0) * 20862 | 0) | 0;
  $180 = $178 + (Math_imul($165, -14924) | 0) + $171 | 0;
  $182 = $178 + ($167 * 17333 | 0) | 0;
  $185 = $176 + $171 + (Math_imul($163, -12399) | 0) | 0;
  $186 = $176 + (Math_imul($172, -9467) | 0) | 0;
  $188 = $186 + (Math_imul($167, -6461) | 0) | 0;
  $192 = ($165 * 15929 | 0) + (Math_imul($163, -11395) | 0) + $186 | 0;
  $194 = (Math_imul($174, -11585) | 0) + $161 | 0;
  $196 = HEAP32[$$1287290 + 4 >> 2] | 0;
  $198 = HEAP32[$$1287290 + 12 >> 2] | 0;
  $200 = HEAP32[$$1287290 + 20 >> 2] | 0;
  $202 = HEAP32[$$1287290 + 28 >> 2] | 0;
  $203 = $198 + $196 | 0;
  $206 = ($203 + $200 + $202 | 0) * 3264 | 0;
  $207 = $203 * 7274 | 0;
  $209 = ($200 + $196 | 0) * 5492 | 0;
  $212 = $206 + (($202 + $196 | 0) * 3e3 | 0) | 0;
  $216 = $207 + (Math_imul($196, -7562) | 0) + $209 + $212 | 0;
  $219 = $206 + (Math_imul($200 + $198 | 0, -9527) | 0) | 0;
  $223 = $209 + (Math_imul($200, -9766) | 0) + $219 | 0;
  $225 = Math_imul($202 + $198 | 0, -14731) | 0;
  $228 = $207 + ($198 * 16984 | 0) + $225 + $219 | 0;
  $231 = $225 + ($202 * 17223 | 0) + $212 | 0;
  $237 = ($200 * 8203 | 0) + (Math_imul($198, -12019) | 0) + (Math_imul($202, -13802) | 0) + $206 | 0;
  HEAP8[$158 >> 0] = HEAP8[$155 + (($216 + $182 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$158 + 10 >> 0] = HEAP8[$155 + (($182 - $216 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$158 + 1 >> 0] = HEAP8[$155 + (($228 + $180 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$158 + 9 >> 0] = HEAP8[$155 + (($180 - $228 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$158 + 2 >> 0] = HEAP8[$155 + (($223 + $188 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$158 + 8 >> 0] = HEAP8[$155 + (($188 - $223 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$158 + 3 >> 0] = HEAP8[$155 + (($231 + $185 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$158 + 7 >> 0] = HEAP8[$155 + (($185 - $231 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$158 + 4 >> 0] = HEAP8[$155 + (($237 + $192 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$158 + 6 >> 0] = HEAP8[$155 + (($192 - $237 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$158 + 5 >> 0] = HEAP8[$155 + ($194 >>> 18 & 1023) >> 0] | 0;
  $$1291 = $$1291 + 1 | 0;
  if (($$1291 | 0) == 11) break; else $$1287290 = $$1287290 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN6vision5Image5allocENS_9ImageTypeEmmim($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$sink = 0, $101 = 0, $105 = 0, $14 = 0, $19 = 0, $23 = 0, $30 = 0, $35 = 0, $39 = 0, $46 = 0, $51 = 0, $55 = 0, $6 = 0, $62 = 0, $67 = 0, $7 = 0, $71 = 0, $77 = 0, $78 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $86 = 0, $87 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 16 | 0;
 $6 = sp + 8 | 0;
 $7 = sp;
 if (!$2) {
  $14 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 38353) | 0, 38386) | 0, 39072) | 0, 127) | 0, 39079) | 0, 38458) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $14 + (HEAP32[(HEAP32[$14 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $19 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 66512) | 0;
  $23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$19 >> 2] | 0) + 28 >> 2] & 127]($19, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($14, $23) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($14) | 0;
  _abort();
 }
 if (!$3) {
  $30 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 38479) | 0, 38386) | 0, 39072) | 0, 128) | 0, 39079) | 0, 38513) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $30 + (HEAP32[(HEAP32[$30 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $35 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 66512) | 0;
  $39 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$35 >> 2] | 0) + 28 >> 2] & 127]($35, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($30, $39) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($30) | 0;
  _abort();
 }
 if ($4 >>> 0 < $2 >>> 0) {
  $46 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 38535) | 0, 38386) | 0, 39072) | 0, 129) | 0, 39079) | 0, 38572) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $46 + (HEAP32[(HEAP32[$46 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $51 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 66512) | 0;
  $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$51 >> 2] | 0) + 28 >> 2] & 127]($51, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($46, $55) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($46) | 0;
  _abort();
 }
 if (!$5) {
  $62 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 38617) | 0, 38386) | 0, 39072) | 0, 130) | 0, 39079) | 0, 38653) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $62 + (HEAP32[(HEAP32[$62 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $67 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 66512) | 0;
  $71 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$67 >> 2] | 0) + 28 >> 2] & 127]($67, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($62, $71) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($62) | 0;
  _abort();
 }
 if (($4 | 0) < 0) $$sink = Math_imul(Math_imul($5, $2) | 0, __ZN6vision5Image19calculate_unit_sizeENS_9ImageTypeE($1) | 0) | 0; else $$sink = $4;
 HEAP32[$0 + 12 >> 2] = $$sink;
 $77 = Math_imul($$sink, $3) | 0;
 $78 = $0 + 20 | 0;
 if ((HEAP32[$78 >> 2] | 0) != ($77 | 0) ? ($81 = $0 + 24 | 0, $82 = __Znam($77) | 0, HEAP32[$7 >> 2] = 0, HEAP32[$$byval_copy >> 2] = HEAP32[$7 >> 2], __ZNSt3__210shared_ptrIhEC2IhEEPT_NS_9enable_ifIXsr14is_convertibleIS4_PhEE5valueENS1_5__natEE4typeE($6, $82, $$byval_copy), $83 = HEAP32[$6 >> 2] | 0, HEAP32[$6 >> 2] = HEAP32[$81 >> 2], HEAP32[$81 >> 2] = $83, $85 = $6 + 4 | 0, $86 = $0 + 28 | 0, $87 = HEAP32[$85 >> 2] | 0, HEAP32[$85 >> 2] = HEAP32[$86 >> 2], HEAP32[$86 >> 2] = $87, __ZNSt3__210shared_ptrIhED2Ev($6), (HEAP32[$81 >> 2] | 0) == 0) : 0) {
  $96 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 38687) | 0, 38386) | 0, 39072) | 0, 149) | 0, 39079) | 0, 38722) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $96 + (HEAP32[(HEAP32[$96 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $101 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 66512) | 0;
  $105 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$101 >> 2] | 0) + 28 >> 2] & 127]($101, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($96, $105) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($96) | 0;
  _abort();
 }
 HEAP32[$0 >> 2] = $1;
 HEAP32[$0 + 4 >> 2] = $2;
 HEAP32[$0 + 8 >> 2] = $3;
 HEAP32[$0 + 16 >> 2] = $5;
 HEAP32[$78 >> 2] = $77;
 STACKTOP = sp;
 return;
}

function _arParamObserv2Ideal($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0342 = 0.0, $$0343 = 0.0, $$0345 = 0, $$0346 = 0.0, $$0348 = 0.0, $$0350 = 0.0, $$0351 = 0.0, $$0352 = 0, $$0353 = 0.0, $$0355 = 0.0, $$0357 = 0.0, $$0358 = 0.0, $$0359 = 0, $$0360 = 0.0, $$0361 = 0.0, $$0362 = 0.0, $$0363 = 0, $$0364 = 0.0, $$0365 = 0.0, $$0367 = 0.0, $$1 = 0.0, $$1344 = 0.0, $$1347 = 0.0, $$1349 = 0.0, $$1354 = 0.0, $$1356 = 0.0, $$1366 = 0.0, $$1368 = 0.0, $$sink = 0.0, $10 = 0.0, $105 = 0.0, $107 = 0.0, $108 = 0, $110 = 0.0, $113 = 0.0, $117 = 0.0, $12 = 0.0, $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $138 = 0.0, $14 = 0.0, $140 = 0.0, $142 = 0.0, $146 = 0.0, $149 = 0, $157 = 0.0, $158 = 0.0, $159 = 0, $16 = 0.0, $161 = 0.0, $164 = 0.0, $168 = 0.0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $18 = 0.0, $189 = 0.0, $191 = 0.0, $193 = 0.0, $197 = 0.0, $20 = 0.0, $200 = 0, $208 = 0.0, $209 = 0.0, $210 = 0, $212 = 0.0, $215 = 0.0, $218 = 0.0, $219 = 0.0, $22 = 0.0, $220 = 0.0, $229 = 0.0, $231 = 0.0, $233 = 0.0, $237 = 0.0, $24 = 0.0, $240 = 0, $26 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $35 = 0.0, $40 = 0.0, $50 = 0.0, $56 = 0.0, $6 = 0.0, $67 = 0.0, $73 = 0.0, $8 = 0.0, $92 = 0.0, label = 0;
 switch ($5 | 0) {
 case 4:
  {
   $6 = +HEAPF64[$0 >> 3];
   $8 = +HEAPF64[$0 + 8 >> 3];
   $10 = +HEAPF64[$0 + 16 >> 3];
   $12 = +HEAPF64[$0 + 24 >> 3];
   $14 = +HEAPF64[$0 + 32 >> 3];
   $16 = +HEAPF64[$0 + 40 >> 3];
   $18 = +HEAPF64[$0 + 48 >> 3];
   $20 = +HEAPF64[$0 + 56 >> 3];
   $22 = +HEAPF64[$0 + 64 >> 3];
   $24 = ($1 - $18) / $14;
   $26 = ($2 - $20) / $16;
   $29 = $10 * 2.0;
   $30 = $12 * 6.0;
   $31 = $12 * 2.0;
   $32 = $10 * 6.0;
   $$0346 = $24;
   $$0348 = $26;
   $$0357 = $24 * $24;
   $$0358 = $26 * $26;
   $$0359 = 1;
   while (1) {
    if (!($$0358 != 0.0 | $$0357 != 0.0)) {
     $$1347 = 0.0;
     $$1349 = 0.0;
     break;
    }
    $35 = $$0358 + $$0357;
    $40 = $6 * $35 + 1.0 + $35 * ($8 * $35);
    $50 = $$0357 * 3.0;
    $56 = $$0358 * $50;
    $67 = $$0346 - ($12 * ($35 + $$0357 * 2.0) + ($$0348 * ($29 * $$0346) + $$0346 * $40) - $24) / ($30 * $$0346 + ($29 * $$0348 + ($6 * ($$0358 + $50) + 1.0 + $8 * ($$0358 * $$0358 + ($$0357 * ($$0357 * 5.0) + $56)))));
    $73 = $31 * $67;
    $92 = $$0348 - ($10 * ($$0358 * 2.0 + $35) + $$0348 * $40 + $$0348 * $73 - $26) / ($32 * $$0348 + ($6 * ($$0357 + $$0358 * 3.0) + 1.0 + $8 * ($$0358 * ($$0358 * 5.0) + ($$0357 * $$0357 + $56))) + $73);
    if (($$0359 | 0) == 4) {
     $$1347 = $67;
     $$1349 = $92;
     break;
    }
    $$0346 = $67;
    $$0348 = $92;
    $$0357 = $67 * $67;
    $$0358 = $92 * $92;
    $$0359 = $$0359 + 1 | 0;
   }
   HEAPF64[$3 >> 3] = $18 + $14 * $$1347 / $22;
   $$sink = $20 + $16 * $$1349 / $22;
   label = 22;
   break;
  }
 case 3:
  {
   $105 = +HEAPF64[$0 >> 3];
   $107 = ($1 - $105) / +HEAPF64[$0 + 24 >> 3];
   $108 = $0 + 8 | 0;
   $110 = $2 - +HEAPF64[$108 >> 3];
   $113 = +HEAPF64[$0 + 32 >> 3] / 1.0e8;
   $117 = +HEAPF64[$0 + 40 >> 3] / 1.0e8 / 1.0e5;
   $120 = $107 * $107 + $110 * $110;
   $121 = +Math_sqrt(+$120);
   $122 = $113 * 3.0;
   $123 = $117 * 5.0;
   $$0360 = $120;
   $$0363 = 1;
   $$0364 = $121;
   $$0365 = $110;
   $$0367 = $107;
   while (1) {
    if (!($$0364 != 0.0)) {
     $$1366 = 0.0;
     $$1368 = 0.0;
     break;
    }
    $138 = $$0364 - ($$0364 * (1.0 - $113 * $$0360 - $$0360 * ($117 * $$0360)) - $121) / (1.0 - $122 * $$0360 - $$0360 * ($123 * $$0360));
    $140 = $$0367 * $138 / $$0364;
    $142 = $$0365 * $138 / $$0364;
    if (($$0363 | 0) == 3) {
     $$1366 = $142;
     $$1368 = $140;
     break;
    }
    $146 = $140 * $140 + $142 * $142;
    $$0360 = $146;
    $$0363 = $$0363 + 1 | 0;
    $$0364 = +Math_sqrt(+$146);
    $$0365 = $142;
    $$0367 = $140;
   }
   $149 = $0 + 16 | 0;
   HEAPF64[$3 >> 3] = $105 + $$1368 / +HEAPF64[$149 >> 3];
   $$sink = $$1366 / +HEAPF64[$149 >> 3] + +HEAPF64[$108 >> 3];
   label = 22;
   break;
  }
 case 2:
  {
   $157 = +HEAPF64[$0 >> 3];
   $158 = $1 - $157;
   $159 = $0 + 8 | 0;
   $161 = $2 - +HEAPF64[$159 >> 3];
   $164 = +HEAPF64[$0 + 24 >> 3] / 1.0e8;
   $168 = +HEAPF64[$0 + 32 >> 3] / 1.0e8 / 1.0e5;
   $171 = $158 * $158 + $161 * $161;
   $172 = +Math_sqrt(+$171);
   $173 = $164 * 3.0;
   $174 = $168 * 5.0;
   $$0352 = 1;
   $$0353 = $161;
   $$0355 = $158;
   $$0361 = $172;
   $$0362 = $171;
   while (1) {
    if (!($$0361 != 0.0)) {
     $$1354 = 0.0;
     $$1356 = 0.0;
     break;
    }
    $189 = $$0361 - ($$0361 * (1.0 - $164 * $$0362 - $$0362 * ($168 * $$0362)) - $172) / (1.0 - $173 * $$0362 - $$0362 * ($174 * $$0362));
    $191 = $$0355 * $189 / $$0361;
    $193 = $$0353 * $189 / $$0361;
    if (($$0352 | 0) == 3) {
     $$1354 = $193;
     $$1356 = $191;
     break;
    }
    $197 = $191 * $191 + $193 * $193;
    $$0352 = $$0352 + 1 | 0;
    $$0353 = $193;
    $$0355 = $191;
    $$0361 = +Math_sqrt(+$197);
    $$0362 = $197;
   }
   $200 = $0 + 16 | 0;
   HEAPF64[$3 >> 3] = $157 + $$1356 / +HEAPF64[$200 >> 3];
   $$sink = $$1354 / +HEAPF64[$200 >> 3] + +HEAPF64[$159 >> 3];
   label = 22;
   break;
  }
 case 1:
  {
   $208 = +HEAPF64[$0 >> 3];
   $209 = $1 - $208;
   $210 = $0 + 8 | 0;
   $212 = $2 - +HEAPF64[$210 >> 3];
   $215 = +HEAPF64[$0 + 24 >> 3] / 1.0e8;
   $218 = $209 * $209 + $212 * $212;
   $219 = +Math_sqrt(+$218);
   $220 = $215 * 3.0;
   $$0 = 1;
   $$0342 = $212;
   $$0343 = $209;
   $$0350 = $219;
   $$0351 = $218;
   while (1) {
    if (!($$0350 != 0.0)) {
     $$1 = 0.0;
     $$1344 = 0.0;
     break;
    }
    $229 = $$0350 - ($$0350 * (1.0 - $215 * $$0351) - $219) / (1.0 - $220 * $$0351);
    $231 = $$0343 * $229 / $$0350;
    $233 = $$0342 * $229 / $$0350;
    if (($$0 | 0) == 3) {
     $$1 = $233;
     $$1344 = $231;
     break;
    }
    $237 = $231 * $231 + $233 * $233;
    $$0 = $$0 + 1 | 0;
    $$0342 = $233;
    $$0343 = $231;
    $$0350 = +Math_sqrt(+$237);
    $$0351 = $237;
   }
   $240 = $0 + 16 | 0;
   HEAPF64[$3 >> 3] = $208 + $$1344 / +HEAPF64[$240 >> 3];
   $$sink = $$1 / +HEAPF64[$240 >> 3] + +HEAPF64[$210 >> 3];
   label = 22;
   break;
  }
 default:
  $$0345 = -1;
 }
 if ((label | 0) == 22) {
  HEAPF64[$4 >> 3] = $$sink;
  $$0345 = 0;
 }
 return $$0345 | 0;
}

function _jpeg_idct_12x12($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0291300 = 0, $$0293299 = 0, $$0294298 = 0, $$0301 = 0, $$1292296 = 0, $$1297 = 0, $100 = 0, $102 = 0, $104 = 0, $106 = 0, $146 = 0, $149 = 0, $15 = 0, $152 = 0, $155 = 0, $156 = 0, $157 = 0, $159 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $172 = 0, $173 = 0, $174 = 0, $176 = 0, $178 = 0, $180 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $187 = 0, $189 = 0, $192 = 0, $194 = 0, $198 = 0, $202 = 0, $207 = 0, $208 = 0, $209 = 0, $211 = 0, $213 = 0, $215 = 0, $22 = 0, $23 = 0, $24 = 0, $30 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $55 = 0, $61 = 0, $67 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $78 = 0, $80 = 0, $83 = 0, $85 = 0, $89 = 0, $93 = 0, $98 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(384);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0291300 = $5;
 $$0293299 = HEAP32[$1 + 84 >> 2] | 0;
 $$0294298 = $2;
 $$0301 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0294298 >> 1] << 13, HEAP32[$$0293299 >> 2] | 0) | 0 | 1024;
  $22 = Math_imul((HEAP16[$$0294298 + 64 >> 1] | 0) * 10033 | 0, HEAP32[$$0293299 + 128 >> 2] | 0) | 0;
  $23 = $22 + $15 | 0;
  $24 = $15 - $22 | 0;
  $30 = Math_imul(HEAP32[$$0293299 + 64 >> 2] | 0, HEAP16[$$0294298 + 32 >> 1] | 0) | 0;
  $39 = Math_imul(HEAP16[$$0294298 + 96 >> 1] << 13, HEAP32[$$0293299 + 192 >> 2] | 0) | 0;
  $40 = ($30 << 13) - $39 | 0;
  $41 = $40 + $15 | 0;
  $42 = $15 - $40 | 0;
  $43 = $39 + ($30 * 11190 | 0) | 0;
  $44 = $43 + $23 | 0;
  $45 = $23 - $43 | 0;
  $47 = ($30 * 2998 | 0) - $39 | 0;
  $48 = $47 + $24 | 0;
  $49 = $24 - $47 | 0;
  $55 = Math_imul(HEAP32[$$0293299 + 32 >> 2] | 0, HEAP16[$$0294298 + 16 >> 1] | 0) | 0;
  $61 = Math_imul(HEAP32[$$0293299 + 96 >> 2] | 0, HEAP16[$$0294298 + 48 >> 1] | 0) | 0;
  $67 = Math_imul(HEAP32[$$0293299 + 160 >> 2] | 0, HEAP16[$$0294298 + 80 >> 1] | 0) | 0;
  $73 = Math_imul(HEAP32[$$0293299 + 224 >> 2] | 0, HEAP16[$$0294298 + 112 >> 1] | 0) | 0;
  $74 = $61 * 10703 | 0;
  $75 = Math_imul($61, -4433) | 0;
  $76 = $67 + $55 | 0;
  $78 = ($73 + $76 | 0) * 7053 | 0;
  $80 = $78 + ($76 * 2139 | 0) | 0;
  $83 = $74 + ($55 * 2295 | 0) + $80 | 0;
  $85 = Math_imul($73 + $67 | 0, -8565) | 0;
  $89 = (Math_imul($67, -12112) | 0) + $75 + $85 + $80 | 0;
  $93 = ($73 * 12998 | 0) - $74 + $78 + $85 | 0;
  $98 = $75 + (Math_imul($55, -5540) | 0) + (Math_imul($73, -16244) | 0) + $78 | 0;
  $99 = $55 - $73 | 0;
  $100 = $61 - $67 | 0;
  $102 = ($99 + $100 | 0) * 4433 | 0;
  $104 = $102 + ($99 * 6270 | 0) | 0;
  $106 = $102 + (Math_imul($100, -15137) | 0) | 0;
  HEAP32[$$0291300 >> 2] = $83 + $44 >> 11;
  HEAP32[$$0291300 + 352 >> 2] = $44 - $83 >> 11;
  HEAP32[$$0291300 + 32 >> 2] = $104 + $41 >> 11;
  HEAP32[$$0291300 + 320 >> 2] = $41 - $104 >> 11;
  HEAP32[$$0291300 + 64 >> 2] = $89 + $48 >> 11;
  HEAP32[$$0291300 + 288 >> 2] = $48 - $89 >> 11;
  HEAP32[$$0291300 + 96 >> 2] = $93 + $49 >> 11;
  HEAP32[$$0291300 + 256 >> 2] = $49 - $93 >> 11;
  HEAP32[$$0291300 + 128 >> 2] = $106 + $42 >> 11;
  HEAP32[$$0291300 + 224 >> 2] = $42 - $106 >> 11;
  HEAP32[$$0291300 + 160 >> 2] = $98 + $45 >> 11;
  HEAP32[$$0291300 + 192 >> 2] = $45 - $98 >> 11;
  $$0301 = $$0301 + 1 | 0;
  if (($$0301 | 0) == 8) break; else {
   $$0291300 = $$0291300 + 4 | 0;
   $$0293299 = $$0293299 + 4 | 0;
   $$0294298 = $$0294298 + 2 | 0;
  }
 }
 $146 = $7 + -384 | 0;
 $$1292296 = $5;
 $$1297 = 0;
 while (1) {
  $149 = (HEAP32[$3 + ($$1297 << 2) >> 2] | 0) + $4 | 0;
  $152 = (HEAP32[$$1292296 >> 2] << 13) + 134348800 | 0;
  $155 = (HEAP32[$$1292296 + 16 >> 2] | 0) * 10033 | 0;
  $156 = $152 + $155 | 0;
  $157 = $152 - $155 | 0;
  $159 = HEAP32[$$1292296 + 8 >> 2] | 0;
  $164 = HEAP32[$$1292296 + 24 >> 2] << 13;
  $165 = ($159 << 13) - $164 | 0;
  $166 = $165 + $152 | 0;
  $167 = $152 - $165 | 0;
  $168 = $164 + ($159 * 11190 | 0) | 0;
  $169 = $168 + $156 | 0;
  $170 = $156 - $168 | 0;
  $172 = ($159 * 2998 | 0) - $164 | 0;
  $173 = $172 + $157 | 0;
  $174 = $157 - $172 | 0;
  $176 = HEAP32[$$1292296 + 4 >> 2] | 0;
  $178 = HEAP32[$$1292296 + 12 >> 2] | 0;
  $180 = HEAP32[$$1292296 + 20 >> 2] | 0;
  $182 = HEAP32[$$1292296 + 28 >> 2] | 0;
  $183 = $178 * 10703 | 0;
  $184 = Math_imul($178, -4433) | 0;
  $185 = $180 + $176 | 0;
  $187 = ($185 + $182 | 0) * 7053 | 0;
  $189 = $187 + ($185 * 2139 | 0) | 0;
  $192 = $183 + ($176 * 2295 | 0) + $189 | 0;
  $194 = Math_imul($182 + $180 | 0, -8565) | 0;
  $198 = (Math_imul($180, -12112) | 0) + $184 + $194 + $189 | 0;
  $202 = ($182 * 12998 | 0) - $183 + $187 + $194 | 0;
  $207 = $184 + (Math_imul($176, -5540) | 0) + (Math_imul($182, -16244) | 0) + $187 | 0;
  $208 = $176 - $182 | 0;
  $209 = $178 - $180 | 0;
  $211 = ($208 + $209 | 0) * 4433 | 0;
  $213 = $211 + ($208 * 6270 | 0) | 0;
  $215 = $211 + (Math_imul($209, -15137) | 0) | 0;
  HEAP8[$149 >> 0] = HEAP8[$146 + (($192 + $169 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 11 >> 0] = HEAP8[$146 + (($169 - $192 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 1 >> 0] = HEAP8[$146 + (($213 + $166 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 10 >> 0] = HEAP8[$146 + (($166 - $213 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 2 >> 0] = HEAP8[$146 + (($198 + $173 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 9 >> 0] = HEAP8[$146 + (($173 - $198 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 3 >> 0] = HEAP8[$146 + (($202 + $174 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 8 >> 0] = HEAP8[$146 + (($174 - $202 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 4 >> 0] = HEAP8[$146 + (($215 + $167 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 7 >> 0] = HEAP8[$146 + (($167 - $215 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 5 >> 0] = HEAP8[$146 + (($207 + $170 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 6 >> 0] = HEAP8[$146 + (($170 - $207 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1297 = $$1297 + 1 | 0;
  if (($$1297 | 0) == 12) break; else $$1292296 = $$1292296 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function _start_pass_51($0) {
 $0 = $0 | 0;
 var $$08497 = 0, $$085103 = 0, $$08699 = 0, $$087102 = 0, $$088101 = 0, $$090100 = 0, $$189 = 0, $$191 = 0, $$198 = 0, $$296 = 0, $10 = 0, $103 = 0, $112 = 0, $12 = 0, $121 = 0, $132 = 0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $3 = 0, $31 = 0, $35 = 0, $38 = 0, $45 = 0, $54 = 0, $58 = 0, $60 = 0.0, $68 = 0, $77 = 0, $8 = 0, $86 = 0, $95 = 0;
 $2 = HEAP32[$0 + 472 >> 2] | 0;
 $3 = $0 + 36 | 0;
 if ((HEAP32[$3 >> 2] | 0) <= 0) return;
 $8 = $0 + 72 | 0;
 $$085103 = 0;
 $$087102 = HEAP32[$0 + 216 >> 2] | 0;
 $$088101 = 0;
 $$090100 = 0;
 while (1) {
  $10 = HEAP32[$$087102 + 36 >> 2] | 0;
  $12 = $$087102 + 40 | 0;
  L6 : do switch (($10 << 8) + (HEAP32[$12 >> 2] | 0) | 0) {
  case 257:
   {
    $$189 = 0;
    $$191 = 13;
    break;
   }
  case 514:
   {
    $$189 = 0;
    $$191 = 14;
    break;
   }
  case 771:
   {
    $$189 = 0;
    $$191 = 15;
    break;
   }
  case 1028:
   {
    $$189 = 0;
    $$191 = 16;
    break;
   }
  case 1285:
   {
    $$189 = 0;
    $$191 = 17;
    break;
   }
  case 1542:
   {
    $$189 = 0;
    $$191 = 18;
    break;
   }
  case 1799:
   {
    $$189 = 0;
    $$191 = 19;
    break;
   }
  case 2313:
   {
    $$189 = 0;
    $$191 = 20;
    break;
   }
  case 2570:
   {
    $$189 = 0;
    $$191 = 21;
    break;
   }
  case 2827:
   {
    $$189 = 0;
    $$191 = 22;
    break;
   }
  case 3084:
   {
    $$189 = 0;
    $$191 = 23;
    break;
   }
  case 3341:
   {
    $$189 = 0;
    $$191 = 24;
    break;
   }
  case 3598:
   {
    $$189 = 0;
    $$191 = 25;
    break;
   }
  case 3855:
   {
    $$189 = 0;
    $$191 = 26;
    break;
   }
  case 4112:
   {
    $$189 = 0;
    $$191 = 27;
    break;
   }
  case 4104:
   {
    $$189 = 0;
    $$191 = 28;
    break;
   }
  case 3591:
   {
    $$189 = 0;
    $$191 = 29;
    break;
   }
  case 3078:
   {
    $$189 = 0;
    $$191 = 30;
    break;
   }
  case 2565:
   {
    $$189 = 0;
    $$191 = 31;
    break;
   }
  case 2052:
   {
    $$189 = 0;
    $$191 = 32;
    break;
   }
  case 1539:
   {
    $$189 = 0;
    $$191 = 33;
    break;
   }
  case 1026:
   {
    $$189 = 0;
    $$191 = 34;
    break;
   }
  case 513:
   {
    $$189 = 0;
    $$191 = 35;
    break;
   }
  case 2064:
   {
    $$189 = 0;
    $$191 = 36;
    break;
   }
  case 1806:
   {
    $$189 = 0;
    $$191 = 37;
    break;
   }
  case 1548:
   {
    $$189 = 0;
    $$191 = 38;
    break;
   }
  case 1290:
   {
    $$189 = 0;
    $$191 = 39;
    break;
   }
  case 1032:
   {
    $$189 = 0;
    $$191 = 40;
    break;
   }
  case 774:
   {
    $$189 = 0;
    $$191 = 41;
    break;
   }
  case 516:
   {
    $$189 = 0;
    $$191 = 42;
    break;
   }
  case 258:
   {
    $$189 = 0;
    $$191 = 43;
    break;
   }
  case 2056:
   {
    $15 = HEAP32[$8 >> 2] | 0;
    switch ($15 | 0) {
    case 0:
     {
      $$189 = $15;
      $$191 = 44;
      break L6;
      break;
     }
    case 1:
     {
      $$189 = $15;
      $$191 = 45;
      break L6;
      break;
     }
    case 2:
     {
      $$189 = $15;
      $$191 = 46;
      break L6;
      break;
     }
    default:
     {
      $16 = HEAP32[$0 >> 2] | 0;
      HEAP32[$16 + 20 >> 2] = 49;
      FUNCTION_TABLE_vi[HEAP32[$16 >> 2] & 255]($0);
      $$189 = $$088101;
      $$191 = $$090100;
      break L6;
     }
    }
    break;
   }
  default:
   {
    $19 = HEAP32[$0 >> 2] | 0;
    HEAP32[$19 + 20 >> 2] = 7;
    HEAP32[$19 + 24 >> 2] = $10;
    HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = HEAP32[$12 >> 2];
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
    $$189 = $$088101;
    $$191 = $$090100;
   }
  } while (0);
  HEAP32[$2 + 4 + ($$085103 << 2) >> 2] = $$191;
  L44 : do if ((HEAP32[$$087102 + 52 >> 2] | 0 ? ($31 = $2 + 44 + ($$085103 << 2) | 0, (HEAP32[$31 >> 2] | 0) != ($$189 | 0)) : 0) ? ($35 = HEAP32[$$087102 + 80 >> 2] | 0, $35 | 0) : 0) {
   HEAP32[$31 >> 2] = $$189;
   switch ($$189 | 0) {
   case 0:
    {
     $38 = HEAP32[$$087102 + 84 >> 2] | 0;
     $$08699 = 0;
     do {
      HEAP32[$38 + ($$08699 << 2) >> 2] = HEAPU16[$35 + ($$08699 << 1) >> 1];
      $$08699 = $$08699 + 1 | 0;
     } while (($$08699 | 0) != 64);
     break;
    }
   case 1:
    {
     $45 = HEAP32[$$087102 + 84 >> 2] | 0;
     $$198 = 0;
     do {
      $54 = (Math_imul(HEAP16[5248 + ($$198 << 1) >> 1] | 0, HEAPU16[$35 + ($$198 << 1) >> 1] | 0) | 0) + 2048 >> 12;
      HEAP32[$45 + ($$198 << 2) >> 2] = $54;
      $$198 = $$198 + 1 | 0;
     } while (($$198 | 0) != 64);
     break;
    }
   case 2:
    {
     $58 = HEAP32[$$087102 + 84 >> 2] | 0;
     $$08497 = 0;
     $$296 = 0;
     while (1) {
      $60 = +HEAPF64[5376 + ($$08497 << 3) >> 3];
      HEAPF32[$58 + ($$296 << 2) >> 2] = $60 * +(HEAPU16[$35 + ($$296 << 1) >> 1] | 0) * .125;
      $68 = $$296 | 1;
      HEAPF32[$58 + ($68 << 2) >> 2] = $60 * +(HEAPU16[$35 + ($68 << 1) >> 1] | 0) * 1.387039845 * .125;
      $77 = $68 + 1 | 0;
      HEAPF32[$58 + ($77 << 2) >> 2] = $60 * +(HEAPU16[$35 + ($77 << 1) >> 1] | 0) * 1.306562965 * .125;
      $86 = $$296 | 3;
      HEAPF32[$58 + ($86 << 2) >> 2] = $60 * +(HEAPU16[$35 + ($86 << 1) >> 1] | 0) * 1.175875602 * .125;
      $95 = $86 + 1 | 0;
      HEAPF32[$58 + ($95 << 2) >> 2] = $60 * +(HEAPU16[$35 + ($95 << 1) >> 1] | 0) * .125;
      $103 = $86 + 2 | 0;
      HEAPF32[$58 + ($103 << 2) >> 2] = $60 * +(HEAPU16[$35 + ($103 << 1) >> 1] | 0) * .785694958 * .125;
      $112 = $86 + 3 | 0;
      HEAPF32[$58 + ($112 << 2) >> 2] = $60 * +(HEAPU16[$35 + ($112 << 1) >> 1] | 0) * .5411961 * .125;
      $121 = $$296 | 7;
      HEAPF32[$58 + ($121 << 2) >> 2] = $60 * +(HEAPU16[$35 + ($121 << 1) >> 1] | 0) * .275899379 * .125;
      $$08497 = $$08497 + 1 | 0;
      if (($$08497 | 0) == 8) break; else $$296 = $$296 + 8 | 0;
     }
     break;
    }
   default:
    {
     $132 = HEAP32[$0 >> 2] | 0;
     HEAP32[$132 + 20 >> 2] = 49;
     FUNCTION_TABLE_vi[HEAP32[$132 >> 2] & 255]($0);
     break L44;
    }
   }
  } while (0);
  $$085103 = $$085103 + 1 | 0;
  if (($$085103 | 0) >= (HEAP32[$3 >> 2] | 0)) break; else {
   $$087102 = $$087102 + 88 | 0;
   $$088101 = $$189;
   $$090100 = $$191;
  }
 }
 return;
}

function __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i110 = 0, $$0101 = 0, $$0102 = 0, $$0104 = 0, $$0106 = 0, $$07$i$i = 0, $$07$i$i109 = 0, $$1 = 0, $$1103 = 0, $$1105 = 0, $$1107 = 0, $$2 = 0, $$2108 = 0, $$3 = 0, $$pre$phiZ2D = 0, $101 = 0, $105 = 0, $107 = 0, $119 = 0, $120 = 0, $125 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $137 = 0, $138 = 0, $139 = 0, $144 = 0, $148 = 0, $154 = 0, $155 = 0, $18 = 0, $19 = 0, $21 = 0, $27 = 0, $32 = 0, $33 = 0, $35 = 0, $40 = 0, $41 = 0, $45 = 0, $52 = 0, $57 = 0, $58 = 0, $60 = 0, $7 = 0, $73 = 0, $75 = 0, $77 = 0, $8 = 0, $83 = 0, $88 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66544) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66552) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 255]($7, $9);
 HEAP32[$5 >> 2] = $3;
 $13 = HEAP8[$0 >> 0] | 0;
 switch ($13 << 24 >> 24) {
 case 43:
 case 45:
  {
   $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 127]($8, $13) | 0;
   $19 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $19 + 4;
   HEAP32[$19 >> 2] = $18;
   $$0104 = $0 + 1 | 0;
   break;
  }
 default:
  $$0104 = $0;
 }
 $21 = $2;
 L4 : do if (($21 - $$0104 | 0) > 1 ? (HEAP8[$$0104 >> 0] | 0) == 48 : 0) {
  $27 = $$0104 + 1 | 0;
  switch (HEAP8[$27 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    label = 4;
    break L4;
   }
  }
  $32 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 127]($8, 48) | 0;
  $33 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $33 + 4;
  HEAP32[$33 >> 2] = $32;
  $35 = $$0104 + 2 | 0;
  $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 127]($8, HEAP8[$27 >> 0] | 0) | 0;
  $41 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $41 + 4;
  HEAP32[$41 >> 2] = $40;
  $$0106 = $35;
  while (1) {
   if ($$0106 >>> 0 >= $2 >>> 0) {
    $$1105 = $35;
    $$2108 = $$0106;
    break L4;
   }
   $45 = HEAP8[$$0106 >> 0] | 0;
   if (!(_isxdigit_l($45, __ZNSt3__26__clocEv() | 0) | 0)) {
    $$1105 = $35;
    $$2108 = $$0106;
    break L4;
   }
   $$0106 = $$0106 + 1 | 0;
  }
 } else label = 4; while (0);
 L12 : do if ((label | 0) == 4) {
  $$1107 = $$0104;
  while (1) {
   if ($$1107 >>> 0 >= $2 >>> 0) {
    $$1105 = $$0104;
    $$2108 = $$1107;
    break L12;
   }
   $52 = HEAP8[$$1107 >> 0] | 0;
   if (!(_isdigit_l($52, __ZNSt3__26__clocEv() | 0) | 0)) {
    $$1105 = $$0104;
    $$2108 = $$1107;
    break L12;
   }
   $$1107 = $$1107 + 1 | 0;
  }
 } while (0);
 $57 = $7 + 11 | 0;
 $58 = HEAP8[$57 >> 0] | 0;
 $60 = $7 + 4 | 0;
 L19 : do if (($58 << 24 >> 24 < 0 ? HEAP32[$60 >> 2] | 0 : $58 & 255) | 0) {
  L22 : do if (($$1105 | 0) != ($$2108 | 0)) {
   $$0$i$i = $$2108;
   $$07$i$i = $$1105;
   while (1) {
    $75 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $75 >>> 0) break L22;
    $77 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$75 >> 0] | 0;
    HEAP8[$75 >> 0] = $77;
    $$0$i$i = $75;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $83 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 127]($9) | 0;
  $$0 = $$1105;
  $$0101 = 0;
  $$0102 = 0;
  while (1) {
   if ($$0 >>> 0 >= $$2108 >>> 0) break;
   $101 = HEAP8[((HEAP8[$57 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7) + $$0101 >> 0] | 0;
   if ($101 << 24 >> 24 > 0 & ($$0102 | 0) == ($101 << 24 >> 24 | 0)) {
    $105 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $105 + 4;
    HEAP32[$105 >> 2] = $83;
    $107 = HEAP8[$57 >> 0] | 0;
    $$1 = $$0101 + ($$0101 >>> 0 < (($107 << 24 >> 24 < 0 ? HEAP32[$60 >> 2] | 0 : $107 & 255) + -1 | 0) >>> 0 & 1) | 0;
    $$1103 = 0;
   } else {
    $$1 = $$0101;
    $$1103 = $$0102;
   }
   $119 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 127]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $120 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $120 + 4;
   HEAP32[$120 >> 2] = $119;
   $$0 = $$0 + 1 | 0;
   $$0101 = $$1;
   $$0102 = $$1103 + 1 | 0;
  }
  $88 = $3 + ($$1105 - $0 << 2) | 0;
  $89 = HEAP32[$5 >> 2] | 0;
  if (($88 | 0) == ($89 | 0)) {
   $$pre$phiZ2D = $8;
   $154 = $88;
  } else {
   $$0$i$i110 = $89;
   $$07$i$i109 = $88;
   while (1) {
    $91 = $$0$i$i110 + -4 | 0;
    if ($$07$i$i109 >>> 0 >= $91 >>> 0) {
     $$pre$phiZ2D = $8;
     $154 = $89;
     break L19;
    }
    $93 = HEAP32[$$07$i$i109 >> 2] | 0;
    HEAP32[$$07$i$i109 >> 2] = HEAP32[$91 >> 2];
    HEAP32[$91 >> 2] = $93;
    $$0$i$i110 = $91;
    $$07$i$i109 = $$07$i$i109 + 4 | 0;
   }
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 15]($8, $$1105, $$2108, HEAP32[$5 >> 2] | 0) | 0;
  $73 = (HEAP32[$5 >> 2] | 0) + ($$2108 - $$1105 << 2) | 0;
  HEAP32[$5 >> 2] = $73;
  $$pre$phiZ2D = $8;
  $154 = $73;
 } while (0);
 $$2 = $$2108;
 $155 = $154;
 while (1) {
  if ($$2 >>> 0 >= $2 >>> 0) {
   $$3 = $$2;
   $144 = $155;
   break;
  }
  $125 = HEAP8[$$2 >> 0] | 0;
  if ($125 << 24 >> 24 == 46) {
   label = 32;
   break;
  }
  $137 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 44 >> 2] & 127]($8, $125) | 0;
  $138 = HEAP32[$5 >> 2] | 0;
  $139 = $138 + 4 | 0;
  HEAP32[$5 >> 2] = $139;
  HEAP32[$138 >> 2] = $137;
  $$2 = $$2 + 1 | 0;
  $155 = $139;
 }
 if ((label | 0) == 32) {
  $130 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 12 >> 2] & 127]($9) | 0;
  $131 = HEAP32[$5 >> 2] | 0;
  $132 = $131 + 4 | 0;
  HEAP32[$5 >> 2] = $132;
  HEAP32[$131 >> 2] = $130;
  $$3 = $$2 + 1 | 0;
  $144 = $132;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 15]($8, $$3, $2, $144) | 0;
 $148 = (HEAP32[$5 >> 2] | 0) + ($21 - $$3 << 2) | 0;
 HEAP32[$5 >> 2] = $148;
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $148 : $3 + ($1 - $0 << 2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function _try_realloc_chunk($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1271 = 0, $$1271$be = 0, $$1271$ph = 0, $$1274 = 0, $$1274$be = 0, $$1274$ph = 0, $$2 = 0, $$3 = 0, $$pre$phiZ2D = 0, $101 = 0, $103 = 0, $106 = 0, $108 = 0, $11 = 0, $111 = 0, $114 = 0, $115 = 0, $116 = 0, $118 = 0, $12 = 0, $120 = 0, $121 = 0, $123 = 0, $124 = 0, $129 = 0, $130 = 0, $139 = 0, $144 = 0, $147 = 0, $148 = 0, $154 = 0, $165 = 0, $168 = 0, $175 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $6 = 0, $60 = 0, $67 = 0, $73 = 0, $75 = 0, $76 = 0, $79 = 0, $8 = 0, $81 = 0, $83 = 0, $96 = 0, $storemerge = 0, $storemerge3 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $3 & -8;
 $5 = $0 + $4 | 0;
 $6 = HEAP32[16739] | 0;
 $8 = $3 & 3;
 if (!(($8 | 0) != 1 & $6 >>> 0 <= $0 >>> 0 & $5 >>> 0 > $0 >>> 0)) _abort();
 $11 = $5 + 4 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 if (!($12 & 1)) _abort();
 if (!$8) {
  if ($1 >>> 0 < 256) {
   $$2 = 0;
   return $$2 | 0;
  }
  if ($4 >>> 0 >= ($1 + 4 | 0) >>> 0 ? ($4 - $1 | 0) >>> 0 <= HEAP32[16855] << 1 >>> 0 : 0) {
   $$2 = $0;
   return $$2 | 0;
  }
  $$2 = 0;
  return $$2 | 0;
 }
 if ($4 >>> 0 >= $1 >>> 0) {
  $24 = $4 - $1 | 0;
  if ($24 >>> 0 <= 15) {
   $$2 = $0;
   return $$2 | 0;
  }
  $26 = $0 + $1 | 0;
  HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
  HEAP32[$26 + 4 >> 2] = $24 | 3;
  HEAP32[$11 >> 2] = HEAP32[$11 >> 2] | 1;
  _dispose_chunk($26, $24);
  $$2 = $0;
  return $$2 | 0;
 }
 if ((HEAP32[16741] | 0) == ($5 | 0)) {
  $37 = (HEAP32[16738] | 0) + $4 | 0;
  $39 = $37 - $1 | 0;
  $40 = $0 + $1 | 0;
  if ($37 >>> 0 <= $1 >>> 0) {
   $$2 = 0;
   return $$2 | 0;
  }
  HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
  HEAP32[$40 + 4 >> 2] = $39 | 1;
  HEAP32[16741] = $40;
  HEAP32[16738] = $39;
  $$2 = $0;
  return $$2 | 0;
 }
 if ((HEAP32[16740] | 0) == ($5 | 0)) {
  $49 = (HEAP32[16737] | 0) + $4 | 0;
  if ($49 >>> 0 < $1 >>> 0) {
   $$2 = 0;
   return $$2 | 0;
  }
  $51 = $49 - $1 | 0;
  if ($51 >>> 0 > 15) {
   $53 = $0 + $1 | 0;
   $54 = $0 + $49 | 0;
   HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
   HEAP32[$53 + 4 >> 2] = $51 | 1;
   HEAP32[$54 >> 2] = $51;
   $60 = $54 + 4 | 0;
   HEAP32[$60 >> 2] = HEAP32[$60 >> 2] & -2;
   $storemerge = $53;
   $storemerge3 = $51;
  } else {
   HEAP32[$2 >> 2] = $3 & 1 | $49 | 2;
   $67 = $0 + $49 + 4 | 0;
   HEAP32[$67 >> 2] = HEAP32[$67 >> 2] | 1;
   $storemerge = 0;
   $storemerge3 = 0;
  }
  HEAP32[16737] = $storemerge3;
  HEAP32[16740] = $storemerge;
  $$2 = $0;
  return $$2 | 0;
 }
 if ($12 & 2 | 0) {
  $$2 = 0;
  return $$2 | 0;
 }
 $73 = ($12 & -8) + $4 | 0;
 if ($73 >>> 0 < $1 >>> 0) {
  $$2 = 0;
  return $$2 | 0;
 }
 $75 = $73 - $1 | 0;
 $76 = $12 >>> 3;
 L49 : do if ($12 >>> 0 >= 256) {
  $101 = HEAP32[$5 + 24 >> 2] | 0;
  $103 = HEAP32[$5 + 12 >> 2] | 0;
  do if (($103 | 0) == ($5 | 0)) {
   $114 = $5 + 16 | 0;
   $115 = $114 + 4 | 0;
   $116 = HEAP32[$115 >> 2] | 0;
   if (!$116) {
    $118 = HEAP32[$114 >> 2] | 0;
    if (!$118) {
     $$3 = 0;
     break;
    } else {
     $$1271$ph = $118;
     $$1274$ph = $114;
    }
   } else {
    $$1271$ph = $116;
    $$1274$ph = $115;
   }
   $$1271 = $$1271$ph;
   $$1274 = $$1274$ph;
   while (1) {
    $120 = $$1271 + 20 | 0;
    $121 = HEAP32[$120 >> 2] | 0;
    if (!$121) {
     $123 = $$1271 + 16 | 0;
     $124 = HEAP32[$123 >> 2] | 0;
     if (!$124) break; else {
      $$1271$be = $124;
      $$1274$be = $123;
     }
    } else {
     $$1271$be = $121;
     $$1274$be = $120;
    }
    $$1271 = $$1271$be;
    $$1274 = $$1274$be;
   }
   if ($6 >>> 0 > $$1274 >>> 0) _abort(); else {
    HEAP32[$$1274 >> 2] = 0;
    $$3 = $$1271;
    break;
   }
  } else {
   $106 = HEAP32[$5 + 8 >> 2] | 0;
   if ($6 >>> 0 > $106 >>> 0) _abort();
   $108 = $106 + 12 | 0;
   if ((HEAP32[$108 >> 2] | 0) != ($5 | 0)) _abort();
   $111 = $103 + 8 | 0;
   if ((HEAP32[$111 >> 2] | 0) == ($5 | 0)) {
    HEAP32[$108 >> 2] = $103;
    HEAP32[$111 >> 2] = $106;
    $$3 = $103;
    break;
   } else _abort();
  } while (0);
  if ($101 | 0) {
   $129 = HEAP32[$5 + 28 >> 2] | 0;
   $130 = 67244 + ($129 << 2) | 0;
   do if ((HEAP32[$130 >> 2] | 0) == ($5 | 0)) {
    HEAP32[$130 >> 2] = $$3;
    if (!$$3) {
     HEAP32[16736] = HEAP32[16736] & ~(1 << $129);
     break L49;
    }
   } else if ((HEAP32[16739] | 0) >>> 0 <= $101 >>> 0) {
    $139 = $101 + 16 | 0;
    HEAP32[((HEAP32[$139 >> 2] | 0) == ($5 | 0) ? $139 : $101 + 20 | 0) >> 2] = $$3;
    if (!$$3) break L49; else break;
   } else _abort(); while (0);
   $144 = HEAP32[16739] | 0;
   if ($144 >>> 0 > $$3 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $101;
   $147 = $5 + 16 | 0;
   $148 = HEAP32[$147 >> 2] | 0;
   do if ($148 | 0) if ($144 >>> 0 > $148 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $148;
    HEAP32[$148 + 24 >> 2] = $$3;
    break;
   } while (0);
   $154 = HEAP32[$147 + 4 >> 2] | 0;
   if ($154 | 0) if ((HEAP32[16739] | 0) >>> 0 > $154 >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $154;
    HEAP32[$154 + 24 >> 2] = $$3;
    break;
   }
  }
 } else {
  $79 = HEAP32[$5 + 8 >> 2] | 0;
  $81 = HEAP32[$5 + 12 >> 2] | 0;
  $83 = 66980 + ($76 << 1 << 2) | 0;
  if (($79 | 0) != ($83 | 0)) {
   if ($6 >>> 0 > $79 >>> 0) _abort();
   if ((HEAP32[$79 + 12 >> 2] | 0) != ($5 | 0)) _abort();
  }
  if (($81 | 0) == ($79 | 0)) {
   HEAP32[16735] = HEAP32[16735] & ~(1 << $76);
   break;
  }
  if (($81 | 0) != ($83 | 0)) {
   if ($6 >>> 0 > $81 >>> 0) _abort();
   $96 = $81 + 8 | 0;
   if ((HEAP32[$96 >> 2] | 0) == ($5 | 0)) $$pre$phiZ2D = $96; else _abort();
  } else $$pre$phiZ2D = $81 + 8 | 0;
  HEAP32[$79 + 12 >> 2] = $81;
  HEAP32[$$pre$phiZ2D >> 2] = $79;
 } while (0);
 if ($75 >>> 0 < 16) {
  HEAP32[$2 >> 2] = $3 & 1 | $73 | 2;
  $165 = $0 + $73 + 4 | 0;
  HEAP32[$165 >> 2] = HEAP32[$165 >> 2] | 1;
  $$2 = $0;
  return $$2 | 0;
 } else {
  $168 = $0 + $1 | 0;
  HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
  HEAP32[$168 + 4 >> 2] = $75 | 3;
  $175 = $0 + $73 + 4 | 0;
  HEAP32[$175 >> 2] = HEAP32[$175 >> 2] | 1;
  _dispose_chunk($168, $75);
  $$2 = $0;
  return $$2 | 0;
 }
 return 0;
}

function _decode_mcu_AC_first_63($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0113 = 0, $$0118140 = 0, $$0122139 = 0, $$0131138 = 0, $$0133 = 0, $$017$i = 0, $$1119 = 0, $$1123 = 0, $$1132 = 0, $$1134 = 0, $$2 = 0, $$2117$ph = 0, $$2120 = 0, $$2124 = 0, $$4$ph = 0, $$4126$ph = 0, $$5 = 0, $$5127 = 0, $$6 = 0, $$6128 = 0, $$7 = 0, $$7129 = 0, $$8 = 0, $$8130 = 0, $100 = 0, $11 = 0, $111 = 0, $117 = 0, $128 = 0, $131 = 0, $15 = 0, $16 = 0, $2 = 0, $23 = 0, $39 = 0, $4 = 0, $40 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $60 = 0, $62 = 0, $64 = 0, $66 = 0, $67 = 0, $71 = 0, $72 = 0, $76 = 0, $78 = 0, $8 = 0, $84 = 0, $88 = 0, $90 = 0, $96 = 0, $99 = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $4 = HEAP32[$0 + 468 >> 2] | 0;
 $5 = $0 + 280 | 0;
 if (HEAP32[$5 >> 2] | 0 ? ($8 = $4 + 44 | 0, (HEAP32[$8 >> 2] | 0) == 0) : 0) {
  $11 = $4 + 16 | 0;
  $15 = HEAP32[$0 + 464 >> 2] | 0;
  $16 = $15 + 24 | 0;
  HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + ((HEAP32[$11 >> 2] | 0) / 8 | 0);
  HEAP32[$11 >> 2] = 0;
  if (!(FUNCTION_TABLE_ii[HEAP32[$15 + 8 >> 2] & 127]($0) | 0)) {
   $$2 = 0;
   STACKTOP = sp;
   return $$2 | 0;
  }
  $23 = $0 + 340 | 0;
  if ((HEAP32[$23 >> 2] | 0) > 0) {
   $$017$i = 0;
   do {
    HEAP32[$4 + 24 + ($$017$i << 2) >> 2] = 0;
    $$017$i = $$017$i + 1 | 0;
   } while (($$017$i | 0) < (HEAP32[$23 >> 2] | 0));
  }
  HEAP32[$4 + 20 >> 2] = 0;
  HEAP32[$8 >> 2] = HEAP32[$5 >> 2];
  if (!(HEAP32[$0 + 440 >> 2] | 0)) HEAP32[$4 + 40 >> 2] = 0;
 }
 if (!(HEAP32[$4 + 40 >> 2] | 0)) {
  $39 = $4 + 20 | 0;
  $40 = HEAP32[$39 >> 2] | 0;
  if (!$40) {
   HEAP32[$2 + 16 >> 2] = $0;
   $44 = $0 + 24 | 0;
   $45 = HEAP32[$44 >> 2] | 0;
   HEAP32[$2 >> 2] = HEAP32[$45 >> 2];
   $49 = $2 + 4 | 0;
   HEAP32[$49 >> 2] = HEAP32[$45 + 4 >> 2];
   $50 = $4 + 12 | 0;
   $51 = HEAP32[$50 >> 2] | 0;
   $52 = $4 + 16 | 0;
   $53 = HEAP32[$52 >> 2] | 0;
   $55 = HEAP32[$0 + 416 >> 2] | 0;
   $57 = HEAP32[$0 + 424 >> 2] | 0;
   $59 = HEAP32[$0 + 432 >> 2] | 0;
   $60 = HEAP32[$1 >> 2] | 0;
   $62 = HEAP32[$4 + 64 >> 2] | 0;
   $64 = HEAP32[$0 + 412 >> 2] | 0;
   L18 : do if (($64 | 0) <= ($55 | 0)) {
    $66 = $2 + 8 | 0;
    $67 = $2 + 12 | 0;
    $$0118140 = $53;
    $$0122139 = $51;
    $$0131138 = $64;
    L20 : while (1) {
     if (($$0118140 | 0) < 8) {
      if (!(_jpeg_fill_bit_buffer($2, $$0122139, $$0118140, 0) | 0)) {
       $$2 = 0;
       label = 36;
       break;
      }
      $71 = HEAP32[$66 >> 2] | 0;
      $72 = HEAP32[$67 >> 2] | 0;
      if (($72 | 0) < 8) {
       $$0113 = 1;
       $$2120 = $72;
       $$2124 = $71;
       label = 19;
      } else {
       $$1119 = $72;
       $$1123 = $71;
       label = 17;
      }
     } else {
      $$1119 = $$0118140;
      $$1123 = $$0122139;
      label = 17;
     }
     if ((label | 0) == 17) {
      label = 0;
      $76 = $$1123 >> $$1119 + -8 & 255;
      $78 = HEAP32[$62 + 144 + ($76 << 2) >> 2] | 0;
      if (!$78) {
       $$0113 = 9;
       $$2120 = $$1119;
       $$2124 = $$1123;
       label = 19;
      } else {
       $$2117$ph = HEAPU8[$62 + 1168 + $76 >> 0] | 0;
       $$4$ph = $$1119 - $78 | 0;
       $$4126$ph = $$1123;
      }
     }
     if ((label | 0) == 19) {
      label = 0;
      $84 = _jpeg_huff_decode($2, $$2124, $$2120, $62, $$0113) | 0;
      if (($84 | 0) < 0) {
       $$2 = 0;
       label = 36;
       break;
      }
      $$2117$ph = $84;
      $$4$ph = HEAP32[$67 >> 2] | 0;
      $$4126$ph = HEAP32[$66 >> 2] | 0;
     }
     $trunc = $$2117$ph >>> 4;
     $88 = $$2117$ph & 15;
     if (!$88) {
      switch ($trunc & 268435455 | 0) {
      case 0:
       {
        $$0133 = 0;
        $$8 = $$4$ph;
        $$8130 = $$4126$ph;
        break L18;
        break;
       }
      case 15:
       break;
      default:
       {
        label = 27;
        break L20;
       }
      }
      $$1132 = $$0131138 + 15 | 0;
      $$7 = $$4$ph;
      $$7129 = $$4126$ph;
     } else {
      $90 = $trunc + $$0131138 | 0;
      if (($$4$ph | 0) < ($88 | 0)) {
       if (!(_jpeg_fill_bit_buffer($2, $$4126$ph, $$4$ph, $88) | 0)) {
        $$2 = 0;
        label = 36;
        break;
       }
       $$5 = HEAP32[$67 >> 2] | 0;
       $$5127 = HEAP32[$66 >> 2] | 0;
      } else {
       $$5 = $$4$ph;
       $$5127 = $$4126$ph;
      }
      $96 = $$5 - $88 | 0;
      $99 = HEAP32[5184 + ($88 << 2) >> 2] | 0;
      $100 = $$5127 >> $96 & $99;
      HEAP16[$60 + (HEAP32[$59 + ($90 << 2) >> 2] << 1) >> 1] = $100 - (($100 | 0) > (HEAP32[5184 + ($88 + -1 << 2) >> 2] | 0) ? 0 : $99) << $57;
      $$1132 = $90;
      $$7 = $96;
      $$7129 = $$5127;
     }
     if (($$1132 | 0) < ($55 | 0)) {
      $$0118140 = $$7;
      $$0122139 = $$7129;
      $$0131138 = $$1132 + 1 | 0;
     } else {
      $$0133 = 0;
      $$8 = $$7;
      $$8130 = $$7129;
      break L18;
     }
    }
    if ((label | 0) == 27) {
     $111 = 1 << $trunc;
     do if (($$4$ph | 0) < ($trunc | 0)) if (!(_jpeg_fill_bit_buffer($2, $$4126$ph, $$4$ph, $trunc) | 0)) {
      $$2 = 0;
      STACKTOP = sp;
      return $$2 | 0;
     } else {
      $$6 = HEAP32[$67 >> 2] | 0;
      $$6128 = HEAP32[$66 >> 2] | 0;
      break;
     } else {
      $$6 = $$4$ph;
      $$6128 = $$4126$ph;
     } while (0);
     $117 = $$6 - $trunc | 0;
     $$0133 = $111 + -1 + ($$6128 >> $117 & HEAP32[5184 + ($trunc << 2) >> 2]) | 0;
     $$8 = $117;
     $$8130 = $$6128;
     break;
    } else if ((label | 0) == 36) {
     STACKTOP = sp;
     return $$2 | 0;
    }
   } else {
    $$0133 = 0;
    $$8 = $53;
    $$8130 = $51;
   } while (0);
   $128 = HEAP32[$44 >> 2] | 0;
   HEAP32[$128 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$128 + 4 >> 2] = HEAP32[$49 >> 2];
   HEAP32[$50 >> 2] = $$8130;
   HEAP32[$52 >> 2] = $$8;
   $$1134 = $$0133;
  } else $$1134 = $40 + -1 | 0;
  HEAP32[$39 >> 2] = $$1134;
 }
 $131 = $4 + 44 | 0;
 HEAP32[$131 >> 2] = (HEAP32[$131 >> 2] | 0) + -1;
 $$2 = 1;
 STACKTOP = sp;
 return $$2 | 0;
}

function _access_virt_barray($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$$i = 0, $$$i88 = 0, $$$us$i = 0, $$$us$i81 = 0, $$05557$i91 = 0, $$05557$us$i84 = 0, $$058$i90 = 0, $$058$us$i83 = 0, $$077 = 0, $$078 = 0, $$180 = 0, $$56$i89 = 0, $$56$i92 = 0, $$56$us$i82 = 0, $$56$us$i85 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre63$i = 0, $$pre63$i74 = 0, $101 = 0, $103 = 0, $106 = 0, $108 = 0, $110 = 0, $112 = 0, $114 = 0, $117 = 0, $118 = 0, $121 = 0, $122 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $139 = 0, $14 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $17 = 0, $18 = 0, $27 = 0, $30 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $41 = 0, $42 = 0, $43 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $54 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $72 = 0, $77 = 0, $81 = 0, $82 = 0, $84 = 0, $85 = 0, $88 = 0, $90 = 0, $92 = 0, $96 = 0, $storemerge = 0, label = 0;
 $5 = $3 + $2 | 0;
 $6 = $1 + 4 | 0;
 if (($5 >>> 0 <= (HEAP32[$6 >> 2] | 0) >>> 0 ? (HEAP32[$1 + 12 >> 2] | 0) >>> 0 >= $3 >>> 0 : 0) ? (HEAP32[$1 >> 2] | 0) != 0 : 0) {} else {
  $14 = HEAP32[$0 >> 2] | 0;
  HEAP32[$14 + 20 >> 2] = 23;
  FUNCTION_TABLE_vi[HEAP32[$14 >> 2] & 255]($0);
 }
 $17 = $1 + 24 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 if ($18 >>> 0 <= $2 >>> 0 ? $5 >>> 0 <= ((HEAP32[$1 + 16 >> 2] | 0) + $18 | 0) >>> 0 : 0) {} else label = 7;
 L9 : do if ((label | 0) == 7) {
  if (!(HEAP32[$1 + 40 >> 2] | 0)) {
   $27 = HEAP32[$0 >> 2] | 0;
   HEAP32[$27 + 20 >> 2] = 71;
   FUNCTION_TABLE_vi[HEAP32[$27 >> 2] & 255]($0);
  }
  $30 = $1 + 36 | 0;
  if (HEAP32[$30 >> 2] | 0) {
   $35 = HEAP32[$1 + 8 >> 2] << 7;
   $36 = HEAP32[$17 >> 2] | 0;
   $37 = $1 + 20 | 0;
   $38 = $1 + 16 | 0;
   $39 = HEAP32[$38 >> 2] | 0;
   L16 : do if (($39 | 0) > 0 ? ($41 = $1 + 28 | 0, $42 = $1 + 48 | 0, $43 = $1 + 52 | 0, $$pre63$i = HEAP32[$37 >> 2] | 0, $$$i88 = ($$pre63$i | 0) < ($39 | 0) ? $$pre63$i : $39, $46 = (HEAP32[$41 >> 2] | 0) - $36 | 0, $48 = ($$$i88 | 0) < ($46 | 0) ? $$$i88 : $46, $50 = (HEAP32[$6 >> 2] | 0) - $36 | 0, $$56$i89 = ($48 | 0) < ($50 | 0) ? $48 : $50, ($$56$i89 | 0) >= 1) : 0) {
    $$05557$i91 = Math_imul($36, $35) | 0;
    $$058$i90 = 0;
    $$56$i92 = $$56$i89;
    while (1) {
     $54 = Math_imul($$56$i92, $35) | 0;
     FUNCTION_TABLE_viiiii[HEAP32[$43 >> 2] & 63]($0, $42, HEAP32[(HEAP32[$1 >> 2] | 0) + ($$058$i90 << 2) >> 2] | 0, $$05557$i91, $54);
     $59 = HEAP32[$37 >> 2] | 0;
     $$058$i90 = $59 + $$058$i90 | 0;
     $61 = HEAP32[$38 >> 2] | 0;
     if (($61 | 0) <= ($$058$i90 | 0)) break L16;
     $64 = $61 - $$058$i90 | 0;
     $$$i = ($59 | 0) < ($64 | 0) ? $59 : $64;
     $66 = $$058$i90 + (HEAP32[$17 >> 2] | 0) | 0;
     $68 = (HEAP32[$41 >> 2] | 0) - $66 | 0;
     $70 = ($$$i | 0) < ($68 | 0) ? $$$i : $68;
     $72 = (HEAP32[$6 >> 2] | 0) - $66 | 0;
     $$56$i92 = ($70 | 0) < ($72 | 0) ? $70 : $72;
     if (($$56$i92 | 0) < 1) break; else $$05557$i91 = $54 + $$05557$i91 | 0;
    }
   } while (0);
   HEAP32[$30 >> 2] = 0;
  }
  $$phi$trans$insert = $1 + 16 | 0;
  $$pre = HEAP32[$$phi$trans$insert >> 2] | 0;
  if ((HEAP32[$17 >> 2] | 0) >>> 0 < $2 >>> 0) $storemerge = $2; else {
   $77 = $5 - $$pre | 0;
   $storemerge = ($77 | 0) > 0 ? $77 : 0;
  }
  HEAP32[$17 >> 2] = $storemerge;
  $81 = HEAP32[$1 + 8 >> 2] << 7;
  $82 = $1 + 20 | 0;
  if (($$pre | 0) > 0 ? ($84 = $1 + 28 | 0, $85 = $1 + 48 | 0, $$pre63$i74 = HEAP32[$82 >> 2] | 0, $$$us$i81 = ($$pre63$i74 | 0) < ($$pre | 0) ? $$pre63$i74 : $$pre, $88 = (HEAP32[$84 >> 2] | 0) - $storemerge | 0, $90 = ($$$us$i81 | 0) < ($88 | 0) ? $$$us$i81 : $88, $92 = (HEAP32[$6 >> 2] | 0) - $storemerge | 0, $$56$us$i82 = ($90 | 0) < ($92 | 0) ? $90 : $92, ($$56$us$i82 | 0) >= 1) : 0) {
   $$05557$us$i84 = Math_imul($81, $storemerge) | 0;
   $$058$us$i83 = 0;
   $$56$us$i85 = $$56$us$i82;
   while (1) {
    $96 = Math_imul($$56$us$i85, $81) | 0;
    FUNCTION_TABLE_viiiii[HEAP32[$85 >> 2] & 63]($0, $85, HEAP32[(HEAP32[$1 >> 2] | 0) + ($$058$us$i83 << 2) >> 2] | 0, $$05557$us$i84, $96);
    $101 = HEAP32[$82 >> 2] | 0;
    $$058$us$i83 = $101 + $$058$us$i83 | 0;
    $103 = HEAP32[$$phi$trans$insert >> 2] | 0;
    if (($103 | 0) <= ($$058$us$i83 | 0)) break L9;
    $106 = $103 - $$058$us$i83 | 0;
    $$$us$i = ($101 | 0) < ($106 | 0) ? $101 : $106;
    $108 = $$058$us$i83 + (HEAP32[$17 >> 2] | 0) | 0;
    $110 = (HEAP32[$84 >> 2] | 0) - $108 | 0;
    $112 = ($$$us$i | 0) < ($110 | 0) ? $$$us$i : $110;
    $114 = (HEAP32[$6 >> 2] | 0) - $108 | 0;
    $$56$us$i85 = ($112 | 0) < ($114 | 0) ? $112 : $114;
    if (($$56$us$i85 | 0) < 1) break; else $$05557$us$i84 = $96 + $$05557$us$i84 | 0;
   }
  }
 } while (0);
 $117 = $1 + 28 | 0;
 $118 = HEAP32[$117 >> 2] | 0;
 do if ($118 >>> 0 < $5 >>> 0) {
  $121 = ($4 | 0) == 0;
  if ($118 >>> 0 < $2 >>> 0) if ($121) {
   $$077 = $2;
   $148 = 0;
  } else {
   $122 = HEAP32[$0 >> 2] | 0;
   HEAP32[$122 + 20 >> 2] = 23;
   FUNCTION_TABLE_vi[HEAP32[$122 >> 2] & 255]($0);
   $$078 = $2;
   label = 28;
  } else if ($121) {
   $$077 = $118;
   $148 = 0;
  } else {
   $$078 = $118;
   label = 28;
  }
  if ((label | 0) == 28) {
   HEAP32[$117 >> 2] = $5;
   $$077 = $$078;
   $148 = 1;
  }
  if (!(HEAP32[$1 + 32 >> 2] | 0)) {
   if ($148) break;
   $139 = HEAP32[$0 >> 2] | 0;
   HEAP32[$139 + 20 >> 2] = 23;
   FUNCTION_TABLE_vi[HEAP32[$139 >> 2] & 255]($0);
   break;
  }
  $130 = HEAP32[$1 + 8 >> 2] << 7;
  $131 = HEAP32[$17 >> 2] | 0;
  $132 = $$077 - $131 | 0;
  $133 = $5 - $131 | 0;
  if ($132 >>> 0 < $133 >>> 0) {
   $$180 = $132;
   do {
    _memset(HEAP32[(HEAP32[$1 >> 2] | 0) + ($$180 << 2) >> 2] | 0, 0, $130 | 0) | 0;
    $$180 = $$180 + 1 | 0;
   } while (($$180 | 0) != ($133 | 0));
  }
 } while (0);
 if (!$4) {
  $144 = HEAP32[$1 >> 2] | 0;
  $145 = HEAP32[$17 >> 2] | 0;
  $146 = $2 - $145 | 0;
  $147 = $144 + ($146 << 2) | 0;
  return $147 | 0;
 }
 HEAP32[$1 + 36 >> 2] = 1;
 $144 = HEAP32[$1 >> 2] | 0;
 $145 = HEAP32[$17 >> 2] | 0;
 $146 = $2 - $145 | 0;
 $147 = $144 + ($146 << 2) | 0;
 return $147 | 0;
}

function _access_virt_sarray($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$$i = 0, $$$i88 = 0, $$$us$i = 0, $$$us$i81 = 0, $$05557$i91 = 0, $$05557$us$i84 = 0, $$058$i90 = 0, $$058$us$i83 = 0, $$077 = 0, $$078 = 0, $$180 = 0, $$56$i89 = 0, $$56$i92 = 0, $$56$us$i82 = 0, $$56$us$i85 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre63$i = 0, $$pre63$i74 = 0, $101 = 0, $104 = 0, $106 = 0, $108 = 0, $110 = 0, $112 = 0, $115 = 0, $116 = 0, $119 = 0, $120 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $136 = 0, $14 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $17 = 0, $18 = 0, $27 = 0, $30 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $40 = 0, $41 = 0, $42 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $53 = 0, $58 = 0, $6 = 0, $60 = 0, $63 = 0, $65 = 0, $67 = 0, $69 = 0, $71 = 0, $76 = 0, $79 = 0, $80 = 0, $82 = 0, $83 = 0, $86 = 0, $88 = 0, $90 = 0, $94 = 0, $99 = 0, $storemerge = 0, label = 0;
 $5 = $3 + $2 | 0;
 $6 = $1 + 4 | 0;
 if (($5 >>> 0 <= (HEAP32[$6 >> 2] | 0) >>> 0 ? (HEAP32[$1 + 12 >> 2] | 0) >>> 0 >= $3 >>> 0 : 0) ? (HEAP32[$1 >> 2] | 0) != 0 : 0) {} else {
  $14 = HEAP32[$0 >> 2] | 0;
  HEAP32[$14 + 20 >> 2] = 23;
  FUNCTION_TABLE_vi[HEAP32[$14 >> 2] & 255]($0);
 }
 $17 = $1 + 24 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 if ($18 >>> 0 <= $2 >>> 0 ? $5 >>> 0 <= ((HEAP32[$1 + 16 >> 2] | 0) + $18 | 0) >>> 0 : 0) {} else label = 7;
 L9 : do if ((label | 0) == 7) {
  if (!(HEAP32[$1 + 40 >> 2] | 0)) {
   $27 = HEAP32[$0 >> 2] | 0;
   HEAP32[$27 + 20 >> 2] = 71;
   FUNCTION_TABLE_vi[HEAP32[$27 >> 2] & 255]($0);
  }
  $30 = $1 + 36 | 0;
  if (HEAP32[$30 >> 2] | 0) {
   $34 = HEAP32[$1 + 8 >> 2] | 0;
   $35 = HEAP32[$17 >> 2] | 0;
   $36 = $1 + 20 | 0;
   $37 = $1 + 16 | 0;
   $38 = HEAP32[$37 >> 2] | 0;
   L16 : do if (($38 | 0) > 0 ? ($40 = $1 + 28 | 0, $41 = $1 + 48 | 0, $42 = $1 + 52 | 0, $$pre63$i = HEAP32[$36 >> 2] | 0, $$$i88 = ($$pre63$i | 0) < ($38 | 0) ? $$pre63$i : $38, $45 = (HEAP32[$40 >> 2] | 0) - $35 | 0, $47 = ($$$i88 | 0) < ($45 | 0) ? $$$i88 : $45, $49 = (HEAP32[$6 >> 2] | 0) - $35 | 0, $$56$i89 = ($47 | 0) < ($49 | 0) ? $47 : $49, ($$56$i89 | 0) >= 1) : 0) {
    $$05557$i91 = Math_imul($35, $34) | 0;
    $$058$i90 = 0;
    $$56$i92 = $$56$i89;
    while (1) {
     $53 = Math_imul($$56$i92, $34) | 0;
     FUNCTION_TABLE_viiiii[HEAP32[$42 >> 2] & 63]($0, $41, HEAP32[(HEAP32[$1 >> 2] | 0) + ($$058$i90 << 2) >> 2] | 0, $$05557$i91, $53);
     $58 = HEAP32[$36 >> 2] | 0;
     $$058$i90 = $58 + $$058$i90 | 0;
     $60 = HEAP32[$37 >> 2] | 0;
     if (($60 | 0) <= ($$058$i90 | 0)) break L16;
     $63 = $60 - $$058$i90 | 0;
     $$$i = ($58 | 0) < ($63 | 0) ? $58 : $63;
     $65 = $$058$i90 + (HEAP32[$17 >> 2] | 0) | 0;
     $67 = (HEAP32[$40 >> 2] | 0) - $65 | 0;
     $69 = ($$$i | 0) < ($67 | 0) ? $$$i : $67;
     $71 = (HEAP32[$6 >> 2] | 0) - $65 | 0;
     $$56$i92 = ($69 | 0) < ($71 | 0) ? $69 : $71;
     if (($$56$i92 | 0) < 1) break; else $$05557$i91 = $53 + $$05557$i91 | 0;
    }
   } while (0);
   HEAP32[$30 >> 2] = 0;
  }
  $$phi$trans$insert = $1 + 16 | 0;
  $$pre = HEAP32[$$phi$trans$insert >> 2] | 0;
  if ((HEAP32[$17 >> 2] | 0) >>> 0 < $2 >>> 0) $storemerge = $2; else {
   $76 = $5 - $$pre | 0;
   $storemerge = ($76 | 0) > 0 ? $76 : 0;
  }
  HEAP32[$17 >> 2] = $storemerge;
  $79 = HEAP32[$1 + 8 >> 2] | 0;
  $80 = $1 + 20 | 0;
  if (($$pre | 0) > 0 ? ($82 = $1 + 28 | 0, $83 = $1 + 48 | 0, $$pre63$i74 = HEAP32[$80 >> 2] | 0, $$$us$i81 = ($$pre63$i74 | 0) < ($$pre | 0) ? $$pre63$i74 : $$pre, $86 = (HEAP32[$82 >> 2] | 0) - $storemerge | 0, $88 = ($$$us$i81 | 0) < ($86 | 0) ? $$$us$i81 : $86, $90 = (HEAP32[$6 >> 2] | 0) - $storemerge | 0, $$56$us$i82 = ($88 | 0) < ($90 | 0) ? $88 : $90, ($$56$us$i82 | 0) >= 1) : 0) {
   $$05557$us$i84 = Math_imul($79, $storemerge) | 0;
   $$058$us$i83 = 0;
   $$56$us$i85 = $$56$us$i82;
   while (1) {
    $94 = Math_imul($$56$us$i85, $79) | 0;
    FUNCTION_TABLE_viiiii[HEAP32[$83 >> 2] & 63]($0, $83, HEAP32[(HEAP32[$1 >> 2] | 0) + ($$058$us$i83 << 2) >> 2] | 0, $$05557$us$i84, $94);
    $99 = HEAP32[$80 >> 2] | 0;
    $$058$us$i83 = $99 + $$058$us$i83 | 0;
    $101 = HEAP32[$$phi$trans$insert >> 2] | 0;
    if (($101 | 0) <= ($$058$us$i83 | 0)) break L9;
    $104 = $101 - $$058$us$i83 | 0;
    $$$us$i = ($99 | 0) < ($104 | 0) ? $99 : $104;
    $106 = $$058$us$i83 + (HEAP32[$17 >> 2] | 0) | 0;
    $108 = (HEAP32[$82 >> 2] | 0) - $106 | 0;
    $110 = ($$$us$i | 0) < ($108 | 0) ? $$$us$i : $108;
    $112 = (HEAP32[$6 >> 2] | 0) - $106 | 0;
    $$56$us$i85 = ($110 | 0) < ($112 | 0) ? $110 : $112;
    if (($$56$us$i85 | 0) < 1) break; else $$05557$us$i84 = $94 + $$05557$us$i84 | 0;
   }
  }
 } while (0);
 $115 = $1 + 28 | 0;
 $116 = HEAP32[$115 >> 2] | 0;
 do if ($116 >>> 0 < $5 >>> 0) {
  $119 = ($4 | 0) == 0;
  if ($116 >>> 0 < $2 >>> 0) if ($119) {
   $$077 = $2;
   $145 = 0;
  } else {
   $120 = HEAP32[$0 >> 2] | 0;
   HEAP32[$120 + 20 >> 2] = 23;
   FUNCTION_TABLE_vi[HEAP32[$120 >> 2] & 255]($0);
   $$078 = $2;
   label = 28;
  } else if ($119) {
   $$077 = $116;
   $145 = 0;
  } else {
   $$078 = $116;
   label = 28;
  }
  if ((label | 0) == 28) {
   HEAP32[$115 >> 2] = $5;
   $$077 = $$078;
   $145 = 1;
  }
  if (!(HEAP32[$1 + 32 >> 2] | 0)) {
   if ($145) break;
   $136 = HEAP32[$0 >> 2] | 0;
   HEAP32[$136 + 20 >> 2] = 23;
   FUNCTION_TABLE_vi[HEAP32[$136 >> 2] & 255]($0);
   break;
  }
  $127 = HEAP32[$1 + 8 >> 2] | 0;
  $128 = HEAP32[$17 >> 2] | 0;
  $129 = $$077 - $128 | 0;
  $130 = $5 - $128 | 0;
  if ($129 >>> 0 < $130 >>> 0) {
   $$180 = $129;
   do {
    _memset(HEAP32[(HEAP32[$1 >> 2] | 0) + ($$180 << 2) >> 2] | 0, 0, $127 | 0) | 0;
    $$180 = $$180 + 1 | 0;
   } while (($$180 | 0) != ($130 | 0));
  }
 } while (0);
 if (!$4) {
  $141 = HEAP32[$1 >> 2] | 0;
  $142 = HEAP32[$17 >> 2] | 0;
  $143 = $2 - $142 | 0;
  $144 = $141 + ($143 << 2) | 0;
  return $144 | 0;
 }
 HEAP32[$1 + 36 >> 2] = 1;
 $141 = HEAP32[$1 >> 2] | 0;
 $142 = HEAP32[$17 >> 2] | 0;
 $143 = $2 - $142 | 0;
 $144 = $141 + ($143 << 2) | 0;
 return $144 | 0;
}

function _extractVisibleFeatures_171($cparamLT, $trans1, $surfaceSet, $candidate, $candidate2) {
 $cparamLT = $cparamLT | 0;
 $trans1 = $trans1 | 0;
 $surfaceSet = $surfaceSet | 0;
 $candidate = $candidate | 0;
 $candidate2 = $candidate2 | 0;
 var $12 = 0.0, $13 = 0.0, $18 = 0, $19 = 0.0, $21 = 0.0, $29 = 0.0, $33 = 0.0, $36 = 0, $37 = 0.0, $4 = 0, $6 = 0, $7 = 0, $9 = 0, $add119 = 0.0, $add65 = 0.0, $add92 = 0.0, $arrayidx106 = 0, $arrayidx118 = 0, $arrayidx139 = 0, $arrayidx143 = 0, $arrayidx148 = 0, $arrayidx170 = 0, $arrayidx175 = 0, $arrayidx53 = 0, $arrayidx64 = 0, $arrayidx68 = 0, $arrayidx79 = 0, $arrayidx91 = 0, $arrayidx95 = 0, $cmp33 = 0, $conv = 0.0, $conv39 = 0.0, $flag228 = 0, $flag248$sink = 0, $i$0 = 0, $j$0 = 0, $j$1 = 0, $k$0 = 0, $k$1 = 0, $l$0 = 0, $l$1 = 0, $l$2 = 0, $l$3 = 0, $l2$0 = 0, $l2$1 = 0, $l2$2 = 0, $l2$3 = 0, $num = 0, $sx = 0, $sy = 0, $trans2 = 0, $vararg_buffer = 0, $w = 0, $wpos = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 $vararg_buffer = sp + 48 | 0;
 $trans2 = sp;
 $sx = sp + 76 | 0;
 $sy = sp + 72 | 0;
 $wpos = sp + 64 | 0;
 $w = sp + 56 | 0;
 $num = $surfaceSet + 4 | 0;
 $conv = +(HEAP32[$cparamLT >> 2] | 0);
 $conv39 = +(HEAP32[$cparamLT + 4 >> 2] | 0);
 $arrayidx53 = $trans2 + 4 | 0;
 $arrayidx64 = $trans2 + 12 | 0;
 $arrayidx68 = $trans2 + 16 | 0;
 $arrayidx79 = $trans2 + 20 | 0;
 $arrayidx91 = $trans2 + 28 | 0;
 $arrayidx95 = $trans2 + 32 | 0;
 $arrayidx106 = $trans2 + 36 | 0;
 $arrayidx118 = $trans2 + 44 | 0;
 $arrayidx139 = $trans2 + 8 | 0;
 $arrayidx143 = $trans2 + 24 | 0;
 $arrayidx148 = $trans2 + 40 | 0;
 $arrayidx170 = $wpos + 4 | 0;
 $arrayidx175 = $w + 4 | 0;
 $flag228 = $candidate2 + 4812 | 0;
 $i$0 = 0;
 $l$0 = 0;
 $l2$0 = 0;
 L1 : while (1) {
  if (($i$0 | 0) >= (HEAP32[$num >> 2] | 0)) {
   label = 29;
   break;
  }
  $j$0 = 0;
  while (1) {
   if (($j$0 | 0) == 3) break;
   $k$0 = 0;
   while (1) {
    if (($k$0 | 0) == 4) break;
    HEAP32[$trans2 + ($j$0 << 4) + ($k$0 << 2) >> 2] = HEAP32[$trans1 + ($i$0 * 48 | 0) + ($j$0 << 4) + ($k$0 << 2) >> 2];
    $k$0 = $k$0 + 1 | 0;
   }
   $j$0 = $j$0 + 1 | 0;
  }
  $4 = HEAP32[(HEAP32[$surfaceSet >> 2] | 0) + ($i$0 * 112 | 0) + 4 >> 2] | 0;
  $j$1 = 0;
  $l$1 = $l$0;
  $l2$1 = $l2$0;
  while (1) {
   if (($j$1 | 0) >= (HEAP32[$4 + 4 >> 2] | 0)) break;
   $7 = $4;
   $k$1 = 0;
   $l$2 = $l$1;
   $l2$2 = $l2$1;
   while (1) {
    $6 = HEAP32[$7 >> 2] | 0;
    if (($k$1 | 0) >= (HEAP32[$6 + ($j$1 * 20 | 0) + 4 >> 2] | 0)) break;
    $9 = HEAP32[$6 + ($j$1 * 20 | 0) >> 2] | 0;
    $cmp33 = (_ar2MarkerCoord2ScreenCoord2($cparamLT, $trans2, +HEAPF32[$9 + ($k$1 * 20 | 0) + 8 >> 2], +HEAPF32[$9 + ($k$1 * 20 | 0) + 12 >> 2], $sx, $sy) | 0) < 0;
    $12 = +HEAPF32[$sx >> 2];
    do if ((!($cmp33 | $12 < 0.0) ? ($13 = +HEAPF32[$sy >> 2], !($13 >= $conv39) & (!($12 >= $conv) & !($13 < 0.0))) : 0) ? ($18 = HEAP32[(HEAP32[HEAP32[(HEAP32[$surfaceSet >> 2] | 0) + ($i$0 * 112 | 0) + 4 >> 2] >> 2] | 0) + ($j$1 * 20 | 0) >> 2] | 0, $19 = +HEAPF32[$18 + ($k$1 * 20 | 0) + 8 >> 2], $21 = +HEAPF32[$18 + ($k$1 * 20 | 0) + 12 >> 2], $add65 = +HEAPF32[$arrayidx64 >> 2] + (+HEAPF32[$trans2 >> 2] * $19 + +HEAPF32[$arrayidx53 >> 2] * $21), $add92 = +HEAPF32[$arrayidx91 >> 2] + ($19 * +HEAPF32[$arrayidx68 >> 2] + $21 * +HEAPF32[$arrayidx79 >> 2]), $add119 = +HEAPF32[$arrayidx118 >> 2] + ($19 * +HEAPF32[$arrayidx95 >> 2] + $21 * +HEAPF32[$arrayidx106 >> 2]), $29 = +Math_sqrt(+($add65 * $add65 + $add92 * $add92 + $add119 * $add119)), !(+HEAPF32[$arrayidx148 >> 2] * ($add119 / $29) + (+HEAPF32[$arrayidx139 >> 2] * ($add65 / $29) + +HEAPF32[$arrayidx143 >> 2] * ($add92 / $29)) > -.10000000149011612)) : 0) {
     HEAPF32[$wpos >> 2] = $19;
     HEAPF32[$arrayidx170 >> 2] = $21;
     _ar2GetResolution($cparamLT, $trans2, $wpos, $w) | 0;
     $33 = +HEAPF32[$arrayidx175 >> 2];
     $36 = HEAP32[HEAP32[(HEAP32[$surfaceSet >> 2] | 0) + ($i$0 * 112 | 0) + 4 >> 2] >> 2] | 0;
     $37 = +HEAPF32[$36 + ($j$1 * 20 | 0) + 12 >> 2];
     if ($33 <= $37 ? $33 >= +HEAPF32[$36 + ($j$1 * 20 | 0) + 16 >> 2] : 0) {
      if (($l$2 | 0) == 200) {
       label = 19;
       break L1;
      }
      HEAP32[$candidate + ($l$2 * 24 | 0) >> 2] = $i$0;
      HEAP32[$candidate + ($l$2 * 24 | 0) + 4 >> 2] = $j$1;
      HEAP32[$candidate + ($l$2 * 24 | 0) + 8 >> 2] = $k$1;
      HEAP32[$candidate + ($l$2 * 24 | 0) + 16 >> 2] = HEAP32[$sx >> 2];
      HEAP32[$candidate + ($l$2 * 24 | 0) + 20 >> 2] = HEAP32[$sy >> 2];
      HEAP32[$candidate + ($l$2 * 24 | 0) + 12 >> 2] = 0;
      $l$3 = $l$2 + 1 | 0;
      $l2$3 = $l2$2;
      break;
     }
     if ($33 <= $37 * 2.0 ? $33 >= +HEAPF32[$36 + ($j$1 * 20 | 0) + 16 >> 2] * .5 : 0) if (($l2$2 | 0) == 200) {
      HEAP32[$flag228 >> 2] = -1;
      $l$3 = $l$2;
      $l2$3 = 200;
      break;
     } else {
      HEAP32[$candidate2 + ($l2$2 * 24 | 0) >> 2] = $i$0;
      HEAP32[$candidate2 + ($l2$2 * 24 | 0) + 4 >> 2] = $j$1;
      HEAP32[$candidate2 + ($l2$2 * 24 | 0) + 8 >> 2] = $k$1;
      HEAP32[$candidate2 + ($l2$2 * 24 | 0) + 16 >> 2] = HEAP32[$sx >> 2];
      HEAP32[$candidate2 + ($l2$2 * 24 | 0) + 20 >> 2] = HEAP32[$sy >> 2];
      HEAP32[$candidate2 + ($l2$2 * 24 | 0) + 12 >> 2] = 0;
      $l$3 = $l$2;
      $l2$3 = $l2$2 + 1 | 0;
      break;
     } else {
      $l$3 = $l$2;
      $l2$3 = $l2$2;
     }
    } else {
     $l$3 = $l$2;
     $l2$3 = $l2$2;
    } while (0);
    $7 = HEAP32[(HEAP32[$surfaceSet >> 2] | 0) + ($i$0 * 112 | 0) + 4 >> 2] | 0;
    $k$1 = $k$1 + 1 | 0;
    $l$2 = $l$3;
    $l2$2 = $l2$3;
   }
   $4 = $7;
   $j$1 = $j$1 + 1 | 0;
   $l$1 = $l$2;
   $l2$1 = $l2$2;
  }
  $i$0 = $i$0 + 1 | 0;
  $l$0 = $l$1;
  $l2$0 = $l2$1;
 }
 if ((label | 0) == 19) {
  _arLog(0, 3, 45962, $vararg_buffer);
  $flag248$sink = $candidate + 4812 | 0;
 } else if ((label | 0) == 29) {
  HEAP32[$candidate + ($l$0 * 24 | 0) + 12 >> 2] = -1;
  $flag248$sink = $candidate2 + ($l2$0 * 24 | 0) + 12 | 0;
 }
 HEAP32[$flag248$sink >> 2] = -1;
 STACKTOP = sp;
 return;
}

function _jpeg_idct_ifast($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0269282 = 0, $$0271281 = 0, $$0273280 = 0, $$0283 = 0, $$1279 = 0, $$2278 = 0, $$sink = 0, $$sink290 = 0, $105 = 0, $11 = 0, $112 = 0, $113 = 0, $114 = 0, $13 = 0, $132 = 0, $135 = 0, $137 = 0, $139 = 0, $141 = 0, $162 = 0, $165 = 0, $166 = 0, $167 = 0, $169 = 0, $170 = 0, $171 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $181 = 0, $183 = 0, $184 = 0, $185 = 0, $187 = 0, $188 = 0, $189 = 0, $190 = 0, $196 = 0, $203 = 0, $204 = 0, $205 = 0, $34 = 0, $44 = 0, $46 = 0, $49 = 0, $5 = 0, $55 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $76 = 0, $82 = 0, $88 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0269282 = $5;
 $$0271281 = HEAP32[$1 + 84 >> 2] | 0;
 $$0273280 = $2;
 $$0283 = 8;
 while (1) {
  $11 = HEAP16[$$0273280 + 16 >> 1] | 0;
  $13 = HEAP16[$$0273280 + 32 >> 1] | 0;
  if (!(($11 | $13) << 16 >> 16)) if (((((HEAP16[$$0273280 + 48 >> 1] | 0) == 0 ? (HEAP16[$$0273280 + 64 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0273280 + 80 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0273280 + 96 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0273280 + 112 >> 1] | 0) == 0 : 0) {
   $34 = Math_imul(HEAP32[$$0271281 >> 2] | 0, HEAP16[$$0273280 >> 1] | 0) | 0;
   HEAP32[$$0269282 >> 2] = $34;
   HEAP32[$$0269282 + 32 >> 2] = $34;
   HEAP32[$$0269282 + 64 >> 2] = $34;
   HEAP32[$$0269282 + 96 >> 2] = $34;
   HEAP32[$$0269282 + 128 >> 2] = $34;
   HEAP32[$$0269282 + 160 >> 2] = $34;
   HEAP32[$$0269282 + 192 >> 2] = $34;
   $$sink = $34;
   $$sink290 = 56;
  } else {
   $46 = 0;
   label = 9;
  } else {
   $46 = $13;
   label = 9;
  }
  if ((label | 0) == 9) {
   label = 0;
   $44 = Math_imul(HEAP32[$$0271281 >> 2] | 0, HEAP16[$$0273280 >> 1] | 0) | 0;
   $49 = Math_imul(HEAP32[$$0271281 + 64 >> 2] | 0, $46 << 16 >> 16) | 0;
   $55 = Math_imul(HEAP32[$$0271281 + 128 >> 2] | 0, HEAP16[$$0273280 + 64 >> 1] | 0) | 0;
   $61 = Math_imul(HEAP32[$$0271281 + 192 >> 2] | 0, HEAP16[$$0273280 + 96 >> 1] | 0) | 0;
   $62 = $55 + $44 | 0;
   $63 = $44 - $55 | 0;
   $64 = $61 + $49 | 0;
   $68 = (($49 - $61 | 0) * 362 >> 8) - $64 | 0;
   $69 = $64 + $62 | 0;
   $70 = $62 - $64 | 0;
   $71 = $68 + $63 | 0;
   $72 = $63 - $68 | 0;
   $76 = Math_imul(HEAP32[$$0271281 + 32 >> 2] | 0, $11 << 16 >> 16) | 0;
   $82 = Math_imul(HEAP32[$$0271281 + 96 >> 2] | 0, HEAP16[$$0273280 + 48 >> 1] | 0) | 0;
   $88 = Math_imul(HEAP32[$$0271281 + 160 >> 2] | 0, HEAP16[$$0273280 + 80 >> 1] | 0) | 0;
   $94 = Math_imul(HEAP32[$$0271281 + 224 >> 2] | 0, HEAP16[$$0273280 + 112 >> 1] | 0) | 0;
   $95 = $88 + $82 | 0;
   $96 = $88 - $82 | 0;
   $97 = $94 + $76 | 0;
   $98 = $76 - $94 | 0;
   $99 = $97 + $95 | 0;
   $105 = ($98 + $96 | 0) * 473 >> 8;
   $112 = $105 - ($96 * 669 >> 8) - $99 | 0;
   $113 = (($97 - $95 | 0) * 362 >> 8) - $112 | 0;
   $114 = $105 - ($98 * 277 >> 8) - $113 | 0;
   HEAP32[$$0269282 >> 2] = $99 + $69;
   HEAP32[$$0269282 + 224 >> 2] = $69 - $99;
   HEAP32[$$0269282 + 32 >> 2] = $112 + $71;
   HEAP32[$$0269282 + 192 >> 2] = $71 - $112;
   HEAP32[$$0269282 + 64 >> 2] = $113 + $72;
   HEAP32[$$0269282 + 160 >> 2] = $72 - $113;
   HEAP32[$$0269282 + 96 >> 2] = $114 + $70;
   $$sink = $70 - $114 | 0;
   $$sink290 = 32;
  }
  HEAP32[$$0269282 + ($$sink290 << 2) >> 2] = $$sink;
  if ($$0283 >>> 0 > 1) {
   $$0269282 = $$0269282 + 4 | 0;
   $$0271281 = $$0271281 + 4 | 0;
   $$0273280 = $$0273280 + 2 | 0;
   $$0283 = $$0283 + -1 | 0;
  } else break;
 }
 $132 = $7 + -384 | 0;
 $$1279 = 0;
 $$2278 = $5;
 while (1) {
  $135 = (HEAP32[$3 + ($$1279 << 2) >> 2] | 0) + $4 | 0;
  $137 = (HEAP32[$$2278 >> 2] | 0) + 16400 | 0;
  $139 = HEAP32[$$2278 + 4 >> 2] | 0;
  $141 = HEAP32[$$2278 + 8 >> 2] | 0;
  if (!($139 | $141)) if (((((HEAP32[$$2278 + 12 >> 2] | 0) == 0 ? (HEAP32[$$2278 + 16 >> 2] | 0) == 0 : 0) ? (HEAP32[$$2278 + 20 >> 2] | 0) == 0 : 0) ? (HEAP32[$$2278 + 24 >> 2] | 0) == 0 : 0) ? (HEAP32[$$2278 + 28 >> 2] | 0) == 0 : 0) {
   $162 = HEAP8[$132 + ($137 >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 >> 0] = $162;
   _memset($135 + 1 | 0, $162 | 0, 7) | 0;
  } else {
   $171 = 0;
   label = 19;
  } else {
   $171 = $141;
   label = 19;
  }
  if ((label | 0) == 19) {
   label = 0;
   $165 = HEAP32[$$2278 + 16 >> 2] | 0;
   $166 = $165 + $137 | 0;
   $167 = $137 - $165 | 0;
   $169 = HEAP32[$$2278 + 24 >> 2] | 0;
   $170 = $169 + $171 | 0;
   $175 = (($171 - $169 | 0) * 362 >> 8) - $170 | 0;
   $176 = $170 + $166 | 0;
   $177 = $166 - $170 | 0;
   $178 = $175 + $167 | 0;
   $179 = $167 - $175 | 0;
   $181 = HEAP32[$$2278 + 20 >> 2] | 0;
   $183 = HEAP32[$$2278 + 12 >> 2] | 0;
   $184 = $183 + $181 | 0;
   $185 = $181 - $183 | 0;
   $187 = HEAP32[$$2278 + 28 >> 2] | 0;
   $188 = $187 + $139 | 0;
   $189 = $139 - $187 | 0;
   $190 = $188 + $184 | 0;
   $196 = ($189 + $185 | 0) * 473 >> 8;
   $203 = $196 - ($185 * 669 >> 8) - $190 | 0;
   $204 = (($188 - $184 | 0) * 362 >> 8) - $203 | 0;
   $205 = $196 - ($189 * 277 >> 8) - $204 | 0;
   HEAP8[$135 >> 0] = HEAP8[$132 + (($190 + $176 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 + 7 >> 0] = HEAP8[$132 + (($176 - $190 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 + 1 >> 0] = HEAP8[$132 + (($203 + $178 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 + 6 >> 0] = HEAP8[$132 + (($178 - $203 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 + 2 >> 0] = HEAP8[$132 + (($204 + $179 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 + 5 >> 0] = HEAP8[$132 + (($179 - $204 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 + 3 >> 0] = HEAP8[$132 + (($205 + $177 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 + 4 >> 0] = HEAP8[$132 + (($177 - $205 | 0) >>> 5 & 1023) >> 0] | 0;
  }
  $$1279 = $$1279 + 1 | 0;
  if (($$1279 | 0) == 8) break; else $$2278 = $$2278 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function _QRM($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0213 = 0, $$0215 = 0, $$0216 = 0, $$0219 = 0, $$0220 = 0, $$0221 = 0, $$0222 = 0, $$0223 = 0.0, $$0224 = 0.0, $$0224$be = 0.0, $$0227 = 0.0, $$0227$be = 0.0, $$0232 = 0.0, $$1 = 0, $$1214 = 0, $$1217 = 0, $$1225 = 0.0, $$1228 = 0.0, $$1231 = 0.0, $$2218 = 0, $$pre = 0, $106 = 0.0, $111 = 0, $112 = 0, $113 = 0, $115 = 0, $116 = 0.0, $118 = 0, $119 = 0.0, $12 = 0, $128 = 0.0, $130 = 0, $131 = 0.0, $136 = 0.0, $138 = 0.0, $14 = 0, $144 = 0, $145 = 0, $146 = 0.0, $147 = 0, $150 = 0.0, $151 = 0, $154 = 0, $159 = 0.0, $2 = 0, $20 = 0, $25 = 0.0, $26 = 0, $27 = 0, $30 = 0.0, $38 = 0, $4 = 0, $40 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0.0, $49 = 0.0, $50 = 0.0, $51 = 0.0, $54 = 0.0, $65 = 0.0, $70 = 0.0, $74 = 0.0, $77 = 0.0, $81 = 0.0, $83 = 0, $84 = 0.0, $85 = 0, $86 = 0, $87 = 0.0, $88 = 0.0, $91 = 0, $95 = 0.0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 do if ((!(($4 | 0) < 2 ? 1 : ($4 | 0) != (HEAP32[$0 + 8 >> 2] | 0)) ? (HEAP32[$1 + 4 >> 2] | 0) == ($4 | 0) : 0) ? ($12 = _arVecAlloc($4) | 0, ($12 | 0) != 0) : 0) {
  $14 = $4 + -1 | 0;
  HEAP32[$2 + 4 >> 2] = $14;
  HEAP32[$2 >> 2] = (HEAP32[$12 >> 2] | 0) + 8;
  if ((_arVecTridiagonalize($0, $1, $2) | 0) < 0) {
   _arVecFree($12) | 0;
   $$0220 = -1;
   break;
  }
  $20 = HEAP32[$12 >> 2] | 0;
  HEAPF64[$20 >> 3] = 0.0;
  $$0 = $14;
  while (1) {
   if (($$0 | 0) <= 0) break;
   $$0215 = $$0;
   while (1) {
    if (($$0215 | 0) <= 0) break;
    $25 = +Math_abs(+(+HEAPF64[$20 + ($$0215 << 3) >> 3]));
    $26 = HEAP32[$1 >> 2] | 0;
    $27 = $$0215 + -1 | 0;
    $30 = +Math_abs(+(+HEAPF64[$26 + ($27 << 3) >> 3]));
    if ($25 > ($30 + +Math_abs(+(+HEAPF64[$26 + ($$0215 << 3) >> 3]))) * 1.0e-06) $$0215 = $27; else break;
   }
   $$pre = $$0 + -1 | 0;
   L15 : do if (($$0215 | 0) != ($$0 | 0)) {
    $38 = $20 + ($$0 << 3) | 0;
    $40 = $20 + ($$0215 + 1 << 3) | 0;
    $$0219 = 0;
    do {
     if ($$0219 >>> 0 > 99) break L15;
     $$0219 = $$0219 + 1 | 0;
     $43 = HEAP32[$1 >> 2] | 0;
     $44 = $43 + ($$pre << 3) | 0;
     $46 = $43 + ($$0 << 3) | 0;
     $47 = +HEAPF64[$46 >> 3];
     $49 = (+HEAPF64[$44 >> 3] - $47) * .5;
     $50 = +HEAPF64[$38 >> 3];
     $51 = $50 * $50;
     $54 = +Math_sqrt(+($51 + $49 * $49));
     $$0213 = $$0215;
     $$0224 = +HEAPF64[$40 >> 3];
     $$0227 = +HEAPF64[$43 + ($$0215 << 3) >> 3] - $47 + $51 / ($49 + ($49 < 0.0 ? -$54 : $54));
     while (1) {
      if (($$0213 | 0) >= ($$0 | 0)) break;
      $65 = +Math_abs(+$$0227);
      if ($65 >= +Math_abs(+$$0224)) if ($65 > 1.0e-16) {
       $70 = -$$0224 / $$0227;
       $74 = 1.0 / +Math_sqrt(+($70 * $70 + 1.0));
       $$0223 = $74;
       $$1231 = $70 * $74;
      } else {
       $$0223 = 1.0;
       $$1231 = 0.0;
      } else {
       $77 = -$$0227 / $$0224;
       $81 = 1.0 / +Math_sqrt(+($77 * $77 + 1.0));
       $$0223 = $77 * $81;
       $$1231 = $81;
      }
      $83 = $43 + ($$0213 << 3) | 0;
      $84 = +HEAPF64[$83 >> 3];
      $85 = $$0213 + 1 | 0;
      $86 = $43 + ($85 << 3) | 0;
      $87 = +HEAPF64[$86 >> 3];
      $88 = $84 - $87;
      $91 = $20 + ($85 << 3) | 0;
      $95 = $$1231 * ($$1231 * $88 + $$0223 * 2.0 * +HEAPF64[$91 >> 3]);
      HEAPF64[$83 >> 3] = $84 - $95;
      HEAPF64[$86 >> 3] = $87 + $95;
      $99 = $20 + ($$0213 << 3) | 0;
      if (($$0213 | 0) > ($$0215 | 0)) HEAPF64[$99 >> 3] = $$0223 * +HEAPF64[$99 >> 3] - $$0224 * $$1231;
      $106 = +HEAPF64[$91 >> 3];
      HEAPF64[$91 >> 3] = $106 + $$1231 * ($$0223 * $88 - $$1231 * 2.0 * $106);
      $111 = Math_imul($$0213, $4) | 0;
      $112 = Math_imul($85, $4) | 0;
      $$0216 = 0;
      $$1225 = $$0224;
      $$1228 = $$0227;
      while (1) {
       if (($$0216 | 0) == ($4 | 0)) break;
       $113 = HEAP32[$0 >> 2] | 0;
       $115 = $113 + ($$0216 + $111 << 3) | 0;
       $116 = +HEAPF64[$115 >> 3];
       $118 = $113 + ($$0216 + $112 << 3) | 0;
       $119 = +HEAPF64[$118 >> 3];
       HEAPF64[$115 >> 3] = $$0223 * $116 - $$1231 * $119;
       HEAPF64[$118 >> 3] = $$1231 * $116 + $$0223 * $119;
       $$0216 = $$0216 + 1 | 0;
       $$1225 = $119;
       $$1228 = $116;
      }
      if (($$0213 | 0) < ($$pre | 0)) {
       $128 = +HEAPF64[$91 >> 3];
       $130 = $20 + ($$0213 + 2 << 3) | 0;
       $131 = +HEAPF64[$130 >> 3];
       HEAPF64[$130 >> 3] = $$0223 * $131;
       $$0224$be = -($$1231 * $131);
       $$0227$be = $128;
      } else {
       $$0224$be = $$1225;
       $$0227$be = $$1228;
      }
      $$0213 = $85;
      $$0224 = $$0224$be;
      $$0227 = $$0227$be;
     }
     $136 = +Math_abs(+(+HEAPF64[$38 >> 3]));
     $138 = +Math_abs(+(+HEAPF64[$44 >> 3]));
    } while ($136 > ($138 + +Math_abs(+(+HEAPF64[$46 >> 3]))) * 1.0e-06);
   } while (0);
   $$0 = $$pre;
  }
  $$1214 = 0;
  while (1) {
   if (($$1214 | 0) == ($14 | 0)) break;
   $144 = HEAP32[$1 >> 2] | 0;
   $145 = $144 + ($$1214 << 3) | 0;
   $146 = +HEAPF64[$145 >> 3];
   $147 = $$1214 + 1 | 0;
   $$0232 = $146;
   $$1 = $$1214;
   $$1217 = $147;
   while (1) {
    if (($$1217 | 0) >= ($4 | 0)) break;
    $150 = +HEAPF64[$144 + ($$1217 << 3) >> 3];
    $151 = $150 > $$0232;
    $$0232 = $151 ? $150 : $$0232;
    $$1 = $151 ? $$1217 : $$1;
    $$1217 = $$1217 + 1 | 0;
   }
   HEAPF64[$144 + ($$1 << 3) >> 3] = $146;
   HEAPF64[$145 >> 3] = $$0232;
   $154 = HEAP32[$0 >> 2] | 0;
   $$0221 = $154 + ((Math_imul($$1214, $4) | 0) << 3) | 0;
   $$0222 = $154 + ((Math_imul($$1, $4) | 0) << 3) | 0;
   $$2218 = 0;
   while (1) {
    if (($$2218 | 0) == ($4 | 0)) break;
    $159 = +HEAPF64[$$0222 >> 3];
    HEAPF64[$$0222 >> 3] = +HEAPF64[$$0221 >> 3];
    HEAPF64[$$0221 >> 3] = $159;
    $$0221 = $$0221 + 8 | 0;
    $$0222 = $$0222 + 8 | 0;
    $$2218 = $$2218 + 1 | 0;
   }
   $$1214 = $147;
  }
  _arVecFree($12) | 0;
  $$0220 = 0;
 } else $$0220 = -1; while (0);
 STACKTOP = sp;
 return $$0220 | 0;
}

function ___floatscan($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0102 = 0, $$0103 = 0, $$0104122 = 0, $$0110 = 0, $$0111 = 0.0, $$1$lcssa = 0, $$1105118 = 0, $$1123 = 0, $$2 = 0, $$2106120 = 0, $$3107 = 0, $$3121 = 0, $$4 = 0, $$4108 = 0, $$5 = 0, $$6 = 0, $$in = 0, $103 = 0, $106 = 0, $117 = 0, $119 = 0, $12 = 0, $127 = 0, $18 = 0, $19 = 0, $3 = 0, $32 = 0, $4 = 0, $42 = 0, $45 = 0, $5 = 0, $64 = 0, $73 = 0, $81 = 0, $86 = 0, $94 = 0, $trunc = 0, label = 0;
 switch ($1 | 0) {
 case 0:
  {
   $$0102 = -149;
   $$0103 = 24;
   label = 4;
   break;
  }
 case 1:
  {
   $$0102 = -1074;
   $$0103 = 53;
   label = 4;
   break;
  }
 case 2:
  {
   $$0102 = -1074;
   $$0103 = 53;
   label = 4;
   break;
  }
 default:
  $$0111 = 0.0;
 }
 L4 : do if ((label | 0) == 4) {
  $3 = $0 + 4 | 0;
  $4 = $0 + 104 | 0;
  do {
   $5 = HEAP32[$3 >> 2] | 0;
   if ($5 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $5 + 1;
    $12 = HEAPU8[$5 >> 0] | 0;
   } else $12 = ___shgetc($0) | 0;
  } while ((_isspace($12) | 0) != 0);
  L13 : do switch ($12 | 0) {
  case 43:
  case 45:
   {
    $18 = 1 - ((($12 | 0) == 45 & 1) << 1) | 0;
    $19 = HEAP32[$3 >> 2] | 0;
    if ($19 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $19 + 1;
     $$0 = HEAPU8[$19 >> 0] | 0;
     $$0110 = $18;
     break L13;
    } else {
     $$0 = ___shgetc($0) | 0;
     $$0110 = $18;
     break L13;
    }
    break;
   }
  default:
   {
    $$0 = $12;
    $$0110 = 1;
   }
  } while (0);
  $$0104122 = 0;
  $$1123 = $$0;
  while (1) {
   if (($$1123 | 32 | 0) != (HEAP8[50788 + $$0104122 >> 0] | 0)) {
    $$1$lcssa = $$1123;
    $trunc = $$0104122;
    break;
   }
   do if ($$0104122 >>> 0 < 7) {
    $32 = HEAP32[$3 >> 2] | 0;
    if ($32 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $32 + 1;
     $$2 = HEAPU8[$32 >> 0] | 0;
     break;
    } else {
     $$2 = ___shgetc($0) | 0;
     break;
    }
   } else $$2 = $$1123; while (0);
   $$0104122 = $$0104122 + 1 | 0;
   if ($$0104122 >>> 0 >= 8) {
    $$1$lcssa = $$2;
    $trunc = 8;
    break;
   } else $$1123 = $$2;
  }
  L29 : do switch ($trunc & 2147483647 | 0) {
  case 8:
   break;
  case 3:
   {
    label = 23;
    break;
   }
  default:
   {
    $42 = ($2 | 0) != 0;
    if ($42 & $trunc >>> 0 > 3) if (($trunc | 0) == 8) break L29; else {
     label = 23;
     break L29;
    }
    L34 : do if (!$trunc) {
     $$2106120 = 0;
     $$3121 = $$1$lcssa;
     while (1) {
      if (($$3121 | 32 | 0) != (HEAP8[50797 + $$2106120 >> 0] | 0)) {
       $$3107 = $$2106120;
       $$5 = $$3121;
       break L34;
      }
      do if ($$2106120 >>> 0 < 2) {
       $64 = HEAP32[$3 >> 2] | 0;
       if ($64 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
        HEAP32[$3 >> 2] = $64 + 1;
        $$4 = HEAPU8[$64 >> 0] | 0;
        break;
       } else {
        $$4 = ___shgetc($0) | 0;
        break;
       }
      } else $$4 = $$3121; while (0);
      $$2106120 = $$2106120 + 1 | 0;
      if ($$2106120 >>> 0 >= 3) {
       $$3107 = 3;
       $$5 = $$4;
       break;
      } else $$3121 = $$4;
     }
    } else {
     $$3107 = $trunc;
     $$5 = $$1$lcssa;
    } while (0);
    switch ($$3107 | 0) {
    case 3:
     {
      $73 = HEAP32[$3 >> 2] | 0;
      if ($73 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
       HEAP32[$3 >> 2] = $73 + 1;
       $81 = HEAPU8[$73 >> 0] | 0;
      } else $81 = ___shgetc($0) | 0;
      if (($81 | 0) != 40) {
       if (!(HEAP32[$4 >> 2] | 0)) {
        $$0111 = nan;
        break L4;
       }
       HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
       $$0111 = nan;
       break L4;
      }
      $$4108 = 1;
      while (1) {
       $86 = HEAP32[$3 >> 2] | 0;
       if ($86 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
        HEAP32[$3 >> 2] = $86 + 1;
        $94 = HEAPU8[$86 >> 0] | 0;
       } else $94 = ___shgetc($0) | 0;
       if (!(($94 + -48 | 0) >>> 0 < 10 | ($94 + -65 | 0) >>> 0 < 26) ? !(($94 | 0) == 95 | ($94 + -97 | 0) >>> 0 < 26) : 0) break;
       $$4108 = $$4108 + 1 | 0;
      }
      if (($94 | 0) == 41) {
       $$0111 = nan;
       break L4;
      }
      $103 = (HEAP32[$4 >> 2] | 0) == 0;
      if (!$103) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
      if (!$42) {
       $106 = ___errno_location() | 0;
       HEAP32[$106 >> 2] = 28;
       ___shlim($0, 0, 0);
       $$0111 = 0.0;
       break L4;
      }
      if (!$$4108) {
       $$0111 = nan;
       break L4;
      }
      $$in = $$4108;
      while (1) {
       $$in = $$in + -1 | 0;
       if (!$103) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
       if (!$$in) {
        $$0111 = nan;
        break L4;
       }
      }
      break;
     }
    case 0:
     {
      if (($$5 | 0) == 48) {
       $119 = HEAP32[$3 >> 2] | 0;
       if ($119 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
        HEAP32[$3 >> 2] = $119 + 1;
        $127 = HEAPU8[$119 >> 0] | 0;
       } else $127 = ___shgetc($0) | 0;
       if (($127 | 32 | 0) == 120) {
        $$0111 = +_hexfloat($0, $$0103, $$0102, $$0110, $2);
        break L4;
       }
       if (!(HEAP32[$4 >> 2] | 0)) $$6 = 48; else {
        HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
        $$6 = 48;
       }
      } else $$6 = $$5;
      $$0111 = +_decfloat($0, $$6, $$0103, $$0102, $$0110, $2);
      break L4;
      break;
     }
    default:
     {
      if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
      $117 = ___errno_location() | 0;
      HEAP32[$117 >> 2] = 28;
      ___shlim($0, 0, 0);
      $$0111 = 0.0;
      break L4;
     }
    }
   }
  } while (0);
  if ((label | 0) == 23) {
   $45 = (HEAP32[$4 >> 2] | 0) == 0;
   if (!$45) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   if (($2 | 0) != 0 & $trunc >>> 0 > 3) {
    $$1105118 = $trunc;
    do {
     if (!$45) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
     $$1105118 = $$1105118 + -1 | 0;
    } while ($$1105118 >>> 0 > 3);
   }
  }
  $$0111 = +($$0110 | 0) * inf;
 } while (0);
 return +$$0111;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv($0) {
 $0 = $0 | 0;
 var $$10 = 0, $$7 = 0, $$8 = 0, $$9 = 0, $$byval_copy = 0, $1 = 0, $10 = 0, $11 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $27 = 0, $3 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy = sp + 48 | 0;
 $1 = sp + 40 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 20 | 0;
 $4 = sp + 16 | 0;
 $5 = sp + 8 | 0;
 $6 = sp;
 switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24) {
 case 84:
 case 71:
  {
   $$10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseSpecialNameEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   break;
  }
 default:
  {
   HEAP32[$1 >> 2] = $0;
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9NameStateC2EPS5_($2, $0);
   $10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   $11 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE($10, $2) | 0;
   HEAP32[$3 >> 2] = $11;
   if (($11 | 0) != 0 ? !(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E26resolveForwardTemplateRefsERNS5_9NameStateE($0, $2) | 0) : 0) if (__ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEvENKUlvE_clEv($1) | 0) $$9 = $11; else {
    HEAP32[$4 >> 2] = 0;
    __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 56610);
    HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
    HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    do if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy) | 0) {
     $16 = $0 + 8 | 0;
     $17 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($16) | 0;
     while (1) {
      if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
       label = 11;
       break;
      }
      $19 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseTemplateArgEv($10) | 0;
      HEAP32[$$byval_copy >> 2] = $19;
      if (!$19) {
       label = 12;
       break;
      }
      __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($16, $$byval_copy);
     }
     if ((label | 0) == 11) {
      __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($$byval_copy, $0, $17);
      $21 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12EnableIfAttrEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0, $$byval_copy) | 0;
      HEAP32[$4 >> 2] = $21;
      label = 13;
      break;
     } else if ((label | 0) == 12) {
      $$8 = 0;
      break;
     }
    } else label = 13; while (0);
    if ((label | 0) == 13) {
     HEAP32[$$byval_copy >> 2] = 0;
     if (((HEAP8[$2 >> 0] | 0) == 0 ? (HEAP8[$2 + 1 >> 0] | 0) != 0 : 0) ? ($27 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($10) | 0, HEAP32[$$byval_copy >> 2] = $27, ($27 | 0) == 0) : 0) $$7 = 0; else label = 16;
     do if ((label | 0) == 16) {
      if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 118) | 0) {
       __ZN12_GLOBAL__N_116itanium_demangle9NodeArrayC2Ev($6);
       $$7 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16FunctionEncodingEJRPNS0_4NodeESA_NS0_9NodeArrayESA_RNS0_10QualifiersERNS0_15FunctionRefQualEEEES9_DpOT0_($0, $$byval_copy, $3, $6, $4, $2 + 4 | 0, $2 + 8 | 0) | 0;
       break;
      }
      $33 = $0 + 8 | 0;
      $34 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($33) | 0;
      while (1) {
       $35 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($10) | 0;
       HEAP32[$6 >> 2] = $35;
       if (!$35) {
        label = 21;
        break;
       }
       __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($33, $6);
       if (__ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEvENKUlvE_clEv($1) | 0) {
        label = 22;
        break;
       }
      }
      if ((label | 0) == 21) {
       $$7 = 0;
       break;
      } else if ((label | 0) == 22) {
       __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($6, $0, $34);
       $$7 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16FunctionEncodingEJRPNS0_4NodeESA_NS0_9NodeArrayESA_RNS0_10QualifiersERNS0_15FunctionRefQualEEEES9_DpOT0_($0, $$byval_copy, $3, $6, $4, $2 + 4 | 0, $2 + 8 | 0) | 0;
       break;
      }
     } while (0);
     $$8 = $$7;
    }
    $$9 = $$8;
   } else $$9 = 0;
   $$10 = $$9;
  }
 }
 STACKTOP = sp;
 return $$10 | 0;
}

function __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i108 = 0, $$0100 = 0, $$0102 = 0, $$0104 = 0, $$07$i$i = 0, $$07$i$i107 = 0, $$099 = 0, $$1 = 0, $$1101 = 0, $$1103 = 0, $$1105 = 0, $$2 = 0, $$2106 = 0, $$3 = 0, $$pre$phiZ2D = 0, $101 = 0, $105 = 0, $107 = 0, $119 = 0, $120 = 0, $125 = 0, $13 = 0, $130 = 0, $131 = 0, $137 = 0, $138 = 0, $148 = 0, $18 = 0, $19 = 0, $21 = 0, $27 = 0, $32 = 0, $33 = 0, $35 = 0, $40 = 0, $41 = 0, $45 = 0, $52 = 0, $57 = 0, $58 = 0, $60 = 0, $7 = 0, $75 = 0, $77 = 0, $8 = 0, $83 = 0, $88 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66528) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 255]($7, $9);
 HEAP32[$5 >> 2] = $3;
 $13 = HEAP8[$0 >> 0] | 0;
 switch ($13 << 24 >> 24) {
 case 43:
 case 45:
  {
   $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 127]($8, $13) | 0;
   $19 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $19 + 1;
   HEAP8[$19 >> 0] = $18;
   $$0102 = $0 + 1 | 0;
   break;
  }
 default:
  $$0102 = $0;
 }
 $21 = $2;
 L4 : do if (($21 - $$0102 | 0) > 1 ? (HEAP8[$$0102 >> 0] | 0) == 48 : 0) {
  $27 = $$0102 + 1 | 0;
  switch (HEAP8[$27 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    label = 4;
    break L4;
   }
  }
  $32 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 127]($8, 48) | 0;
  $33 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $33 + 1;
  HEAP8[$33 >> 0] = $32;
  $35 = $$0102 + 2 | 0;
  $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 127]($8, HEAP8[$27 >> 0] | 0) | 0;
  $41 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $41 + 1;
  HEAP8[$41 >> 0] = $40;
  $$0104 = $35;
  while (1) {
   if ($$0104 >>> 0 >= $2 >>> 0) {
    $$1103 = $35;
    $$2106 = $$0104;
    break L4;
   }
   $45 = HEAP8[$$0104 >> 0] | 0;
   if (!(_isxdigit_l($45, __ZNSt3__26__clocEv() | 0) | 0)) {
    $$1103 = $35;
    $$2106 = $$0104;
    break L4;
   }
   $$0104 = $$0104 + 1 | 0;
  }
 } else label = 4; while (0);
 L12 : do if ((label | 0) == 4) {
  $$1105 = $$0102;
  while (1) {
   if ($$1105 >>> 0 >= $2 >>> 0) {
    $$1103 = $$0102;
    $$2106 = $$1105;
    break L12;
   }
   $52 = HEAP8[$$1105 >> 0] | 0;
   if (!(_isdigit_l($52, __ZNSt3__26__clocEv() | 0) | 0)) {
    $$1103 = $$0102;
    $$2106 = $$1105;
    break L12;
   }
   $$1105 = $$1105 + 1 | 0;
  }
 } while (0);
 $57 = $7 + 11 | 0;
 $58 = HEAP8[$57 >> 0] | 0;
 $60 = $7 + 4 | 0;
 L19 : do if (($58 << 24 >> 24 < 0 ? HEAP32[$60 >> 2] | 0 : $58 & 255) | 0) {
  L22 : do if (($$1103 | 0) != ($$2106 | 0)) {
   $$0$i$i = $$2106;
   $$07$i$i = $$1103;
   while (1) {
    $75 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $75 >>> 0) break L22;
    $77 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$75 >> 0] | 0;
    HEAP8[$75 >> 0] = $77;
    $$0$i$i = $75;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $83 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 127]($9) | 0;
  $$0 = $$1103;
  $$0100 = 0;
  $$099 = 0;
  while (1) {
   if ($$0 >>> 0 >= $$2106 >>> 0) break;
   $101 = HEAP8[((HEAP8[$57 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7) + $$099 >> 0] | 0;
   if ($101 << 24 >> 24 > 0 & ($$0100 | 0) == ($101 << 24 >> 24 | 0)) {
    $105 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $105 + 1;
    HEAP8[$105 >> 0] = $83;
    $107 = HEAP8[$57 >> 0] | 0;
    $$1 = $$099 + ($$099 >>> 0 < (($107 << 24 >> 24 < 0 ? HEAP32[$60 >> 2] | 0 : $107 & 255) + -1 | 0) >>> 0 & 1) | 0;
    $$1101 = 0;
   } else {
    $$1 = $$099;
    $$1101 = $$0100;
   }
   $119 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 127]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $120 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $120 + 1;
   HEAP8[$120 >> 0] = $119;
   $$0 = $$0 + 1 | 0;
   $$0100 = $$1101 + 1 | 0;
   $$099 = $$1;
  }
  $88 = $3 + ($$1103 - $0) | 0;
  $89 = HEAP32[$5 >> 2] | 0;
  if (($88 | 0) == ($89 | 0)) $$pre$phiZ2D = $8; else {
   $$0$i$i108 = $89;
   $$07$i$i107 = $88;
   while (1) {
    $91 = $$0$i$i108 + -1 | 0;
    if ($$07$i$i107 >>> 0 >= $91 >>> 0) {
     $$pre$phiZ2D = $8;
     break L19;
    }
    $93 = HEAP8[$$07$i$i107 >> 0] | 0;
    HEAP8[$$07$i$i107 >> 0] = HEAP8[$91 >> 0] | 0;
    HEAP8[$91 >> 0] = $93;
    $$0$i$i108 = $91;
    $$07$i$i107 = $$07$i$i107 + 1 | 0;
   }
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 32 >> 2] & 15]($8, $$1103, $$2106, HEAP32[$5 >> 2] | 0) | 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + ($$2106 - $$1103);
  $$pre$phiZ2D = $8;
 } while (0);
 $$2 = $$2106;
 while (1) {
  if ($$2 >>> 0 >= $2 >>> 0) {
   $$3 = $$2;
   break;
  }
  $125 = HEAP8[$$2 >> 0] | 0;
  if ($125 << 24 >> 24 == 46) {
   label = 32;
   break;
  }
  $137 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 28 >> 2] & 127]($8, $125) | 0;
  $138 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $138 + 1;
  HEAP8[$138 >> 0] = $137;
  $$2 = $$2 + 1 | 0;
 }
 if ((label | 0) == 32) {
  $130 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 12 >> 2] & 127]($9) | 0;
  $131 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $131 + 1;
  HEAP8[$131 >> 0] = $130;
  $$3 = $$2 + 1 | 0;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 32 >> 2] & 15]($8, $$3, $2, HEAP32[$5 >> 2] | 0) | 0;
 $148 = (HEAP32[$5 >> 2] | 0) + ($21 - $$3) | 0;
 HEAP32[$5 >> 2] = $148;
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $148 : $3 + ($1 - $0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZN6vision22ComputeSubpixelHessianEPfS0_RKNS_5ImageES3_S3_ii($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $103 = 0, $107 = 0, $11 = 0, $14 = 0, $17 = 0, $25 = 0, $30 = 0, $34 = 0, $35 = 0, $39 = 0, $42 = 0, $46 = 0, $54 = 0, $59 = 0, $63 = 0, $65 = 0, $68 = 0, $7 = 0, $72 = 0, $75 = 0, $8 = 0, $83 = 0, $88 = 0, $92 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp;
 $8 = __ZNK6vision5Image5widthEv($2) | 0;
 $11 = ($8 | 0) == (__ZNK6vision5Image5widthEv($3) | 0) & 1;
 do if ((__ZNK6vision5Image5widthEv($4) | 0) == ($11 | 0)) {
  $14 = __ZNK6vision5Image6heightEv($2) | 0;
  $17 = ($14 | 0) == (__ZNK6vision5Image6heightEv($3) | 0) & 1;
  if ((__ZNK6vision5Image6heightEv($4) | 0) == ($17 | 0)) {
   __ZN6vision32ComputeSubpixelHessianSameOctaveEPfS0_RKNS_5ImageES3_S3_ii($0, $1, $2, $3, $4, $5, $6);
   break;
  } else {
   $25 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 28529) | 0, 28600) | 0, 39072) | 0, 466) | 0, 39079) | 0, 28693) | 0;
   __ZNKSt3__28ios_base6getlocEv($7, $25 + (HEAP32[(HEAP32[$25 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $30 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
   $34 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$30 >> 2] | 0) + 28 >> 2] & 127]($30, 10) | 0;
   __ZNSt3__26localeD2Ev($7);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($25, $34) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($25) | 0;
   _abort();
  }
 } else {
  $35 = __ZNK6vision5Image5widthEv($2) | 0;
  if (($35 | 0) == (__ZNK6vision5Image5widthEv($3) | 0) ? ($39 = (__ZNK6vision5Image5widthEv($3) | 0) >>> 1, ($39 | 0) == (__ZNK6vision5Image5widthEv($4) | 0)) : 0) {
   $42 = __ZNK6vision5Image6heightEv($2) | 0;
   if (($42 | 0) == (__ZNK6vision5Image6heightEv($3) | 0) ? ($46 = (__ZNK6vision5Image6heightEv($3) | 0) >>> 1, ($46 | 0) == (__ZNK6vision5Image6heightEv($4) | 0)) : 0) {
    __ZN6vision36ComputeSubpixelHessianFineOctavePairEPfS0_RKNS_5ImageES3_S3_ii($0, $1, $2, $3, $4, $5, $6);
    break;
   }
   $54 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 28725) | 0, 28600) | 0, 39072) | 0, 469) | 0, 39079) | 0, 28693) | 0;
   __ZNKSt3__28ios_base6getlocEv($7, $54 + (HEAP32[(HEAP32[$54 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $59 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
   $63 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$59 >> 2] | 0) + 28 >> 2] & 127]($59, 10) | 0;
   __ZNSt3__26localeD2Ev($7);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($54, $63) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($54) | 0;
   _abort();
  }
  $65 = (__ZNK6vision5Image5widthEv($2) | 0) >>> 1;
  if (($65 | 0) == (__ZNK6vision5Image5widthEv($3) | 0) ? ($68 = __ZNK6vision5Image5widthEv($3) | 0, ($68 | 0) == (__ZNK6vision5Image5widthEv($4) | 0)) : 0) {
   $72 = (__ZNK6vision5Image5widthEv($2) | 0) >>> 1;
   if (($72 | 0) == (__ZNK6vision5Image5widthEv($3) | 0) ? ($75 = __ZNK6vision5Image5widthEv($3) | 0, ($75 | 0) == (__ZNK6vision5Image5widthEv($4) | 0)) : 0) {
    __ZN6vision38ComputeSubpixelHessianCoarseOctavePairEPfS0_RKNS_5ImageES3_S3_ii($0, $1, $2, $3, $4, $5, $6);
    break;
   }
   $83 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 28822) | 0, 28600) | 0, 39072) | 0, 472) | 0, 39079) | 0, 28693) | 0;
   __ZNKSt3__28ios_base6getlocEv($7, $83 + (HEAP32[(HEAP32[$83 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $88 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
   $92 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$88 >> 2] | 0) + 28 >> 2] & 127]($88, 10) | 0;
   __ZNSt3__26localeD2Ev($7);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($83, $92) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($83) | 0;
   _abort();
  }
  $98 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 35204) | 0, 28600) | 0, 39072) | 0, 475) | 0, 39079) | 0, 28915) | 0;
  __ZNKSt3__28ios_base6getlocEv($7, $98 + (HEAP32[(HEAP32[$98 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $103 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 66512) | 0;
  $107 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$103 >> 2] | 0) + 28 >> 2] & 127]($103, 10) | 0;
  __ZNSt3__26localeD2Ev($7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($98, $107) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($98) | 0;
  _abort();
 } while (0);
 STACKTOP = sp;
 return 1;
}

function __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_RKNS_28BinaryHierarchicalClusteringILi96EEE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$064 = 0, $$065 = 0, $$066 = 0, $$067 = 0, $$070 = 0, $$2 = 0, $$269 = 0, $$272 = 0, $110 = 0, $115 = 0, $119 = 0, $12 = 0, $13 = 0, $19 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $34 = 0, $38 = 0, $4 = 0, $45 = 0, $58 = 0, $6 = 0, $63 = 0, $67 = 0, $69 = 0, $72 = 0, $77 = 0, $78 = 0, $89 = 0, $92 = 0, $97 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 $6 = $0 + 4 | 0;
 HEAP32[$6 >> 2] = HEAP32[$0 >> 2];
 do if ((__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) != 0 ? (__ZNK6vision18BinaryFeatureStore4sizeEv($2) | 0) != 0 : 0) {
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm($0, __ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0);
  $12 = $0 + 8 | 0;
  $13 = $0 + 12 | 0;
  $$064 = 0;
  L4 : while (1) {
   if ($$064 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) >>> 0) break;
   $22 = __ZNK6vision18BinaryFeatureStore7featureEm($1, $$064) | 0;
   __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryEPKh($3, $22) | 0;
   $23 = __ZNK6vision18BinaryFeatureStore5pointEm($1, $$064) | 0;
   $24 = __ZNK6vision28BinaryHierarchicalClusteringILi96EE12reverseIndexEv($3) | 0;
   $25 = $24 + 4 | 0;
   $26 = $23 + 16 | 0;
   $$065 = 0;
   $$066 = -1;
   $$067 = -1;
   $$070 = 2147483647;
   while (1) {
    $28 = HEAP32[$24 >> 2] | 0;
    if ($$065 >>> 0 >= (HEAP32[$25 >> 2] | 0) - $28 >> 2 >>> 0) break;
    $34 = HEAP8[$26 >> 0] | 0;
    $38 = (__ZNK6vision18BinaryFeatureStore5pointEm($2, HEAP32[$28 + ($$065 << 2) >> 2] | 0) | 0) + 16 | 0;
    do if ($34 << 24 >> 24 == (HEAP8[$38 >> 0] | 0)) {
     $45 = __ZN6vision15HammingDistanceILi96EEEjPKhS2_($22, __ZNK6vision18BinaryFeatureStore7featureEm($2, HEAP32[(HEAP32[$24 >> 2] | 0) + ($$065 << 2) >> 2] | 0) | 0) | 0;
     if ($45 >>> 0 < $$066 >>> 0) {
      $$2 = $45;
      $$269 = $$066;
      $$272 = HEAP32[(HEAP32[$24 >> 2] | 0) + ($$065 << 2) >> 2] | 0;
      break;
     } else {
      $$2 = $$066;
      $$269 = $45 >>> 0 < $$067 >>> 0 ? $45 : $$067;
      $$272 = $$070;
      break;
     }
    } else {
     $$2 = $$066;
     $$269 = $$067;
     $$272 = $$070;
    } while (0);
    $$065 = $$065 + 1 | 0;
    $$066 = $$2;
    $$067 = $$269;
    $$070 = $$272;
   }
   do if (($$066 | 0) != -1) {
    if (($$070 | 0) == -1) {
     label = 15;
     break L4;
    }
    if (($$067 | 0) == -1) {
     __ZN6vision7match_tC2Eii($4, $$064, $$070);
     $69 = HEAP32[$6 >> 2] | 0;
     if ($69 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
      $72 = $4;
      $77 = HEAP32[$72 + 4 >> 2] | 0;
      $78 = $69;
      HEAP32[$78 >> 2] = HEAP32[$72 >> 2];
      HEAP32[$78 + 4 >> 2] = $77;
      HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $4);
     break;
    }
    if (+($$066 >>> 0) / +($$067 >>> 0) < +HEAPF32[$13 >> 2]) {
     __ZN6vision7match_tC2Eii($4, $$064, $$070);
     $89 = HEAP32[$6 >> 2] | 0;
     if ($89 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
      $92 = $4;
      $97 = HEAP32[$92 + 4 >> 2] | 0;
      $98 = $89;
      HEAP32[$98 >> 2] = HEAP32[$92 >> 2];
      HEAP32[$98 + 4 >> 2] = $97;
      HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $4);
    }
   } while (0);
   $$064 = $$064 + 1 | 0;
  }
  if ((label | 0) == 15) {
   $58 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 35348) | 0, 35229) | 0, 39072) | 0, 160) | 0, 39079) | 0, 35420) | 0;
   __ZNKSt3__28ios_base6getlocEv($4, $58 + (HEAP32[(HEAP32[$58 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $63 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
   $67 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$63 >> 2] | 0) + 28 >> 2] & 127]($63, 10) | 0;
   __ZNSt3__26localeD2Ev($4);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($58, $67) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($58) | 0;
   _abort();
  }
  $19 = (HEAP32[$6 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3;
  if ($19 >>> 0 > (__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) >>> 0) {
   $110 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 35438) | 0, 35229) | 0, 39072) | 0, 175) | 0, 39079) | 0, 35498) | 0;
   __ZNKSt3__28ios_base6getlocEv($4, $110 + (HEAP32[(HEAP32[$110 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $115 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
   $119 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$115 >> 2] | 0) + 28 >> 2] & 127]($115, 10) | 0;
   __ZNSt3__26localeD2Ev($4);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($110, $119) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($110) | 0;
   _abort();
  } else {
   $$0 = (HEAP32[$6 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3;
   break;
  }
 } else $$0 = 0; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _fmod($0, $1) {
 $0 = +$0;
 $1 = +$1;
 var $$070 = 0.0, $$071$lcssa = 0, $$07194 = 0, $$073$lcssa = 0, $$073100 = 0, $$172 = 0, $$174 = 0, $$275$lcssa = 0, $$27585 = 0, $$376$lcssa = 0, $$37682 = 0, $$lcssa = 0, $101 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $116 = 0, $118 = 0, $12 = 0, $120 = 0, $124 = 0, $126 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $150 = 0, $153 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $18 = 0, $2 = 0, $20 = 0, $27 = 0.0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $41 = 0, $42 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $59 = 0, $6 = 0, $64 = 0, $65 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $82 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $97 = 0, $99 = 0, label = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $1;
 $4 = HEAP32[tempDoublePtr >> 2] | 0;
 $5 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $6 = _bitshift64Lshr($2 | 0, $3 | 0, 52) | 0;
 getTempRet0() | 0;
 $8 = $6 & 2047;
 $9 = _bitshift64Lshr($4 | 0, $5 | 0, 52) | 0;
 getTempRet0() | 0;
 $11 = $9 & 2047;
 $12 = $3 & -2147483648;
 $13 = _bitshift64Shl($4 | 0, $5 | 0, 1) | 0;
 $14 = getTempRet0() | 0;
 L1 : do if (!(($13 | 0) == 0 & ($14 | 0) == 0) ? ($18 = ___DOUBLE_BITS_273($1) | 0, $20 = (getTempRet0() | 0) & 2147483647, !(($8 | 0) == 2047 | ($20 >>> 0 > 2146435072 | ($20 | 0) == 2146435072 & $18 >>> 0 > 0))) : 0) {
  $29 = _bitshift64Shl($2 | 0, $3 | 0, 1) | 0;
  $30 = getTempRet0() | 0;
  if (!($30 >>> 0 > $14 >>> 0 | ($30 | 0) == ($14 | 0) & $29 >>> 0 > $13 >>> 0)) return +(($29 | 0) == ($13 | 0) & ($30 | 0) == ($14 | 0) ? $0 * 0.0 : $0);
  if (!$8) {
   $41 = _bitshift64Shl($2 | 0, $3 | 0, 12) | 0;
   $42 = getTempRet0() | 0;
   if (($42 | 0) > -1 | ($42 | 0) == -1 & $41 >>> 0 > 4294967295) {
    $$073100 = 0;
    $49 = $41;
    $50 = $42;
    while (1) {
     $48 = $$073100 + -1 | 0;
     $49 = _bitshift64Shl($49 | 0, $50 | 0, 1) | 0;
     $50 = getTempRet0() | 0;
     if (!(($50 | 0) > -1 | ($50 | 0) == -1 & $49 >>> 0 > 4294967295)) {
      $$073$lcssa = $48;
      break;
     } else $$073100 = $48;
    }
   } else $$073$lcssa = 0;
   $59 = _bitshift64Shl($2 | 0, $3 | 0, 1 - $$073$lcssa | 0) | 0;
   $$174 = $$073$lcssa;
   $87 = $59;
   $88 = getTempRet0() | 0;
  } else {
   $$174 = $8;
   $87 = $2;
   $88 = $3 & 1048575 | 1048576;
  }
  if (!$11) {
   $64 = _bitshift64Shl($4 | 0, $5 | 0, 12) | 0;
   $65 = getTempRet0() | 0;
   if (($65 | 0) > -1 | ($65 | 0) == -1 & $64 >>> 0 > 4294967295) {
    $$07194 = 0;
    $72 = $64;
    $73 = $65;
    while (1) {
     $71 = $$07194 + -1 | 0;
     $72 = _bitshift64Shl($72 | 0, $73 | 0, 1) | 0;
     $73 = getTempRet0() | 0;
     if (!(($73 | 0) > -1 | ($73 | 0) == -1 & $72 >>> 0 > 4294967295)) {
      $$071$lcssa = $71;
      break;
     } else $$07194 = $71;
    }
   } else $$071$lcssa = 0;
   $82 = _bitshift64Shl($4 | 0, $5 | 0, 1 - $$071$lcssa | 0) | 0;
   $$172 = $$071$lcssa;
   $89 = $82;
   $90 = getTempRet0() | 0;
  } else {
   $$172 = $11;
   $89 = $4;
   $90 = $5 & 1048575 | 1048576;
  }
  $91 = _i64Subtract($87 | 0, $88 | 0, $89 | 0, $90 | 0) | 0;
  $92 = getTempRet0() | 0;
  $97 = ($92 | 0) > -1 | ($92 | 0) == -1 & $91 >>> 0 > 4294967295;
  L25 : do if (($$174 | 0) > ($$172 | 0)) {
   $$27585 = $$174;
   $101 = $92;
   $158 = $97;
   $159 = $87;
   $160 = $88;
   $99 = $91;
   while (1) {
    if ($158) if (($99 | 0) == 0 & ($101 | 0) == 0) break; else {
     $104 = $99;
     $105 = $101;
    } else {
     $104 = $159;
     $105 = $160;
    }
    $106 = _bitshift64Shl($104 | 0, $105 | 0, 1) | 0;
    $107 = getTempRet0() | 0;
    $108 = $$27585 + -1 | 0;
    $110 = _i64Subtract($106 | 0, $107 | 0, $89 | 0, $90 | 0) | 0;
    $111 = getTempRet0() | 0;
    $116 = ($111 | 0) > -1 | ($111 | 0) == -1 & $110 >>> 0 > 4294967295;
    if (($108 | 0) > ($$172 | 0)) {
     $$27585 = $108;
     $101 = $111;
     $158 = $116;
     $159 = $106;
     $160 = $107;
     $99 = $110;
    } else {
     $$275$lcssa = $108;
     $$lcssa = $116;
     $118 = $110;
     $120 = $111;
     $156 = $106;
     $157 = $107;
     break L25;
    }
   }
   $$070 = $0 * 0.0;
   break L1;
  } else {
   $$275$lcssa = $$174;
   $$lcssa = $97;
   $118 = $91;
   $120 = $92;
   $156 = $87;
   $157 = $88;
  } while (0);
  if ($$lcssa) if (($118 | 0) == 0 & ($120 | 0) == 0) {
   $$070 = $0 * 0.0;
   break;
  } else {
   $124 = $120;
   $126 = $118;
  } else {
   $124 = $157;
   $126 = $156;
  }
  if ($124 >>> 0 < 1048576 | ($124 | 0) == 1048576 & $126 >>> 0 < 0) {
   $$37682 = $$275$lcssa;
   $130 = $126;
   $131 = $124;
   while (1) {
    $132 = _bitshift64Shl($130 | 0, $131 | 0, 1) | 0;
    $133 = getTempRet0() | 0;
    $134 = $$37682 + -1 | 0;
    if ($133 >>> 0 < 1048576 | ($133 | 0) == 1048576 & $132 >>> 0 < 0) {
     $$37682 = $134;
     $130 = $132;
     $131 = $133;
    } else {
     $$376$lcssa = $134;
     $141 = $132;
     $142 = $133;
     break;
    }
   }
  } else {
   $$376$lcssa = $$275$lcssa;
   $141 = $126;
   $142 = $124;
  }
  if (($$376$lcssa | 0) > 0) {
   $143 = _i64Add($141 | 0, $142 | 0, 0, -1048576) | 0;
   $144 = getTempRet0() | 0;
   $145 = _bitshift64Shl($$376$lcssa | 0, 0, 52) | 0;
   $153 = $144 | (getTempRet0() | 0);
   $155 = $143 | $145;
  } else {
   $150 = _bitshift64Lshr($141 | 0, $142 | 0, 1 - $$376$lcssa | 0) | 0;
   $153 = getTempRet0() | 0;
   $155 = $150;
  }
  HEAP32[tempDoublePtr >> 2] = $155;
  HEAP32[tempDoublePtr + 4 >> 2] = $153 | $12;
  $$070 = +HEAPF64[tempDoublePtr >> 3];
 } else label = 3; while (0);
 if ((label | 0) == 3) {
  $27 = $0 * $1;
  $$070 = $27 / $27;
 }
 return +$$070;
}

function _ar2GetTransMatHomography2_177($initConv, $pos2d, $pos3d, $num, $conv) {
 $initConv = $initConv | 0;
 $pos2d = $pos2d | 0;
 $pos3d = $pos3d | 0;
 $num = $num | 0;
 $conv = $conv | 0;
 var $4 = 0.0, $6 = 0.0, $add36 = 0.0, $add50 = 0.0, $add62 = 0.0, $arrayidx188 = 0, $arrayidx192 = 0, $arrayidx196 = 0, $arrayidx2 = 0, $arrayidx200 = 0, $arrayidx204 = 0, $arrayidx208 = 0, $arrayidx212 = 0, $arrayidx30 = 0, $arrayidx35 = 0, $arrayidx38 = 0, $arrayidx43 = 0, $arrayidx49 = 0, $arrayidx52 = 0, $arrayidx57 = 0, $call = 0, $call8 = 0, $conv167 = 0.0, $dH = 0, $div168 = 0.0, $div86 = 0.0, $div92 = 0.0, $div96 = 0.0, $err0$0 = 0.0, $err1$0 = 0.0, $i$0 = 0, $i$1 = 0, $j$0 = 0, $j$1 = 0, $mul180 = 0, $mul66 = 0.0, $mul78 = 0, $mul87 = 0, $retval$0 = 0.0, $sub = 0.0, $sub73 = 0.0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer1 = sp + 40 | 0;
 $vararg_buffer = sp + 32 | 0;
 $dH = sp;
 do if (($num | 0) >= 4 ? ($arrayidx2 = $initConv + 44 | 0, !(+HEAPF32[$arrayidx2 >> 2] == 0.0)) : 0) {
  $call = _malloc($num << 6) | 0;
  if (!$call) {
   _arLog(0, 3, 45947, $vararg_buffer);
   $retval$0 = -1.0;
   break;
  }
  $call8 = _malloc($num << 3) | 0;
  if (!$call8) {
   _arLog(0, 3, 45947, $vararg_buffer1);
   _free($call);
   $retval$0 = -1.0;
   break;
  }
  $j$0 = 0;
  while (1) {
   if (($j$0 | 0) == 3) break;
   $i$0 = 0;
   while (1) {
    if (($i$0 | 0) == 4) break;
    HEAPF32[$conv + ($j$0 << 4) + ($i$0 << 2) >> 2] = +HEAPF32[$initConv + ($j$0 << 4) + ($i$0 << 2) >> 2] / +HEAPF32[$arrayidx2 >> 2];
    $i$0 = $i$0 + 1 | 0;
   }
   $j$0 = $j$0 + 1 | 0;
  }
  $arrayidx30 = $conv + 4 | 0;
  $arrayidx35 = $conv + 12 | 0;
  $arrayidx38 = $conv + 16 | 0;
  $arrayidx43 = $conv + 20 | 0;
  $arrayidx49 = $conv + 28 | 0;
  $arrayidx52 = $conv + 32 | 0;
  $arrayidx57 = $conv + 36 | 0;
  $conv167 = +($num | 0);
  $mul180 = $num << 1;
  $arrayidx188 = $dH + 4 | 0;
  $arrayidx192 = $dH + 8 | 0;
  $arrayidx196 = $dH + 12 | 0;
  $arrayidx200 = $dH + 16 | 0;
  $arrayidx204 = $dH + 20 | 0;
  $arrayidx208 = $dH + 24 | 0;
  $arrayidx212 = $dH + 28 | 0;
  $err0$0 = 0.0;
  $i$1 = 0;
  L18 : while (1) {
   $err1$0 = 0.0;
   $j$1 = 0;
   while (1) {
    if (($j$1 | 0) >= ($num | 0)) break;
    $4 = +HEAPF32[$pos3d + ($j$1 * 12 | 0) >> 2];
    $6 = +HEAPF32[$pos3d + ($j$1 * 12 | 0) + 4 >> 2];
    $add36 = +HEAPF32[$arrayidx35 >> 2] + (+HEAPF32[$conv >> 2] * $4 + +HEAPF32[$arrayidx30 >> 2] * $6);
    $add50 = +HEAPF32[$arrayidx49 >> 2] + ($4 * +HEAPF32[$arrayidx38 >> 2] + $6 * +HEAPF32[$arrayidx43 >> 2]);
    $add62 = $4 * +HEAPF32[$arrayidx52 >> 2] + $6 * +HEAPF32[$arrayidx57 >> 2] + 1.0;
    if ($add62 == 0.0) {
     label = 17;
     break L18;
    }
    $mul66 = $add62 * $add62;
    $sub = +HEAPF32[$pos2d + ($j$1 << 3) >> 2] - $add36 / $add62;
    $sub73 = +HEAPF32[$pos2d + ($j$1 << 3) + 4 >> 2] - $add50 / $add62;
    $mul78 = $j$1 << 1;
    HEAPF32[$call8 + ($mul78 << 2) >> 2] = $sub;
    HEAPF32[$call8 + (($mul78 | 1) << 2) >> 2] = $sub73;
    $div86 = $4 / $add62;
    $mul87 = $j$1 << 4;
    HEAPF32[$call + ($mul87 << 2) >> 2] = $div86;
    $div92 = $6 / $add62;
    HEAPF32[$call + (($mul87 | 1) << 2) >> 2] = $div92;
    $div96 = 1.0 / $add62;
    HEAPF32[$call + (($mul87 | 2) << 2) >> 2] = $div96;
    HEAPF32[$call + (($mul87 | 3) << 2) >> 2] = 0.0;
    HEAPF32[$call + (($mul87 | 4) << 2) >> 2] = 0.0;
    HEAPF32[$call + (($mul87 | 5) << 2) >> 2] = 0.0;
    HEAPF32[$call + (($mul87 | 6) << 2) >> 2] = -($4 * $add36) / $mul66;
    HEAPF32[$call + (($mul87 | 7) << 2) >> 2] = -($6 * $add36) / $mul66;
    HEAPF32[$call + (($mul87 | 8) << 2) >> 2] = 0.0;
    HEAPF32[$call + (($mul87 | 9) << 2) >> 2] = 0.0;
    HEAPF32[$call + (($mul87 | 10) << 2) >> 2] = 0.0;
    HEAPF32[$call + (($mul87 | 11) << 2) >> 2] = $div86;
    HEAPF32[$call + (($mul87 | 12) << 2) >> 2] = $div92;
    HEAPF32[$call + (($mul87 | 13) << 2) >> 2] = $div96;
    HEAPF32[$call + (($mul87 | 14) << 2) >> 2] = -($4 * $add50) / $mul66;
    HEAPF32[$call + (($mul87 | 15) << 2) >> 2] = -($6 * $add50) / $mul66;
    $err1$0 = $err1$0 + ($sub * $sub + $sub73 * $sub73);
    $j$1 = $j$1 + 1 | 0;
   }
   $div168 = $err1$0 / $conv167;
   if ($div168 < .10000000149011612) {
    label = 26;
    break;
   }
   if (($i$1 | 0) != 0 & $div168 < 4.0) {
    if (($i$1 | 0) == 10 | $div168 / $err0$0 > .9900000095367432) {
     label = 26;
     break;
    }
   } else if (($i$1 | 0) == 10) {
    label = 26;
    break;
   }
   if ((_getDeltaS_181($dH, $call8, $call, $mul180) | 0) < 0) {
    label = 24;
    break;
   }
   HEAPF32[$conv >> 2] = +HEAPF32[$dH >> 2] + +HEAPF32[$conv >> 2];
   HEAPF32[$arrayidx30 >> 2] = +HEAPF32[$arrayidx188 >> 2] + +HEAPF32[$arrayidx30 >> 2];
   HEAPF32[$arrayidx35 >> 2] = +HEAPF32[$arrayidx192 >> 2] + +HEAPF32[$arrayidx35 >> 2];
   HEAPF32[$arrayidx38 >> 2] = +HEAPF32[$arrayidx196 >> 2] + +HEAPF32[$arrayidx38 >> 2];
   HEAPF32[$arrayidx43 >> 2] = +HEAPF32[$arrayidx200 >> 2] + +HEAPF32[$arrayidx43 >> 2];
   HEAPF32[$arrayidx49 >> 2] = +HEAPF32[$arrayidx204 >> 2] + +HEAPF32[$arrayidx49 >> 2];
   HEAPF32[$arrayidx52 >> 2] = +HEAPF32[$arrayidx208 >> 2] + +HEAPF32[$arrayidx52 >> 2];
   HEAPF32[$arrayidx57 >> 2] = +HEAPF32[$arrayidx212 >> 2] + +HEAPF32[$arrayidx57 >> 2];
   $err0$0 = $div168;
   $i$1 = $i$1 + 1 | 0;
  }
  if ((label | 0) == 17) {
   _free($call);
   _free($call8);
   $retval$0 = 1.0e8;
   break;
  } else if ((label | 0) == 24) {
   _free($call);
   _free($call8);
   $retval$0 = 1.0e8;
   break;
  } else if ((label | 0) == 26) {
   _free($call);
   _free($call8);
   $retval$0 = $div168;
   break;
  }
 } else $retval$0 = 1.0e8; while (0);
 STACKTOP = sp;
 return +$retval$0;
}

function _jpeg_idct_14x7($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0275283 = 0, $$0277282 = 0, $$0278281 = 0, $$0284 = 0, $$1276279 = 0, $$1280 = 0, $110 = 0, $113 = 0, $116 = 0, $118 = 0, $121 = 0, $122 = 0, $124 = 0, $126 = 0, $128 = 0, $130 = 0, $132 = 0, $134 = 0, $136 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $147 = 0, $149 = 0, $15 = 0, $151 = 0, $154 = 0, $155 = 0, $157 = 0, $158 = 0, $162 = 0, $163 = 0, $166 = 0, $168 = 0, $169 = 0, $172 = 0, $175 = 0, $178 = 0, $180 = 0, $184 = 0, $187 = 0, $190 = 0, $21 = 0, $27 = 0, $33 = 0, $35 = 0, $37 = 0, $41 = 0, $42 = 0, $45 = 0, $48 = 0, $5 = 0, $51 = 0, $59 = 0, $65 = 0, $7 = 0, $71 = 0, $73 = 0, $75 = 0, $79 = 0, $80 = 0, $82 = 0, $83 = 0, $86 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(224);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0275283 = $5;
 $$0277282 = HEAP32[$1 + 84 >> 2] | 0;
 $$0278281 = $2;
 $$0284 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0278281 >> 1] << 13, HEAP32[$$0277282 >> 2] | 0) | 0 | 1024;
  $21 = Math_imul(HEAP32[$$0277282 + 64 >> 2] | 0, HEAP16[$$0278281 + 32 >> 1] | 0) | 0;
  $27 = Math_imul(HEAP32[$$0277282 + 128 >> 2] | 0, HEAP16[$$0278281 + 64 >> 1] | 0) | 0;
  $33 = Math_imul(HEAP32[$$0277282 + 192 >> 2] | 0, HEAP16[$$0278281 + 96 >> 1] | 0) | 0;
  $35 = ($27 - $33 | 0) * 7223 | 0;
  $37 = ($21 - $27 | 0) * 2578 | 0;
  $41 = (Math_imul($27, -15083) | 0) + $15 + $37 + $35 | 0;
  $42 = $33 + $21 | 0;
  $45 = ($42 * 10438 | 0) + $15 | 0;
  $48 = $35 + (Math_imul($33, -637) | 0) + $45 | 0;
  $51 = $37 + (Math_imul($21, -20239) | 0) + $45 | 0;
  $59 = Math_imul(HEAP32[$$0277282 + 32 >> 2] | 0, HEAP16[$$0278281 + 16 >> 1] | 0) | 0;
  $65 = Math_imul(HEAP32[$$0277282 + 96 >> 2] | 0, HEAP16[$$0278281 + 48 >> 1] | 0) | 0;
  $71 = Math_imul(HEAP32[$$0277282 + 160 >> 2] | 0, HEAP16[$$0278281 + 80 >> 1] | 0) | 0;
  $73 = ($65 + $59 | 0) * 7663 | 0;
  $75 = ($59 - $65 | 0) * 1395 | 0;
  $79 = Math_imul($71 + $65 | 0, -11295) | 0;
  $80 = $73 + $75 + $79 | 0;
  $82 = ($71 + $59 | 0) * 5027 | 0;
  $83 = $82 + ($73 - $75) | 0;
  $86 = $82 + ($71 * 15326 | 0) + $79 | 0;
  HEAP32[$$0275283 >> 2] = $83 + $48 >> 11;
  HEAP32[$$0275283 + 192 >> 2] = $48 - $83 >> 11;
  HEAP32[$$0275283 + 32 >> 2] = $80 + $41 >> 11;
  HEAP32[$$0275283 + 160 >> 2] = $41 - $80 >> 11;
  HEAP32[$$0275283 + 64 >> 2] = $86 + $51 >> 11;
  HEAP32[$$0275283 + 128 >> 2] = $51 - $86 >> 11;
  HEAP32[$$0275283 + 96 >> 2] = (($27 - $42 | 0) * 11585 | 0) + $15 >> 11;
  $$0284 = $$0284 + 1 | 0;
  if (($$0284 | 0) == 8) break; else {
   $$0275283 = $$0275283 + 4 | 0;
   $$0277282 = $$0277282 + 4 | 0;
   $$0278281 = $$0278281 + 2 | 0;
  }
 }
 $110 = $7 + -384 | 0;
 $$1276279 = $5;
 $$1280 = 0;
 while (1) {
  $113 = (HEAP32[$3 + ($$1280 << 2) >> 2] | 0) + $4 | 0;
  $116 = (HEAP32[$$1276279 >> 2] << 13) + 134348800 | 0;
  $118 = HEAP32[$$1276279 + 16 >> 2] | 0;
  $121 = $116 + ($118 * 10438 | 0) | 0;
  $122 = $116 + ($118 * 2578 | 0) | 0;
  $124 = $116 + (Math_imul($118, -7223) | 0) | 0;
  $126 = $116 + (Math_imul($118, -11586) | 0) | 0;
  $128 = HEAP32[$$1276279 + 8 >> 2] | 0;
  $130 = HEAP32[$$1276279 + 24 >> 2] | 0;
  $132 = ($130 + $128 | 0) * 9058 | 0;
  $134 = $132 + ($128 * 2237 | 0) | 0;
  $136 = $132 + (Math_imul($130, -14084) | 0) | 0;
  $139 = (Math_imul($130, -11295) | 0) + ($128 * 5027 | 0) | 0;
  $140 = $134 + $121 | 0;
  $141 = $121 - $134 | 0;
  $142 = $136 + $122 | 0;
  $143 = $122 - $136 | 0;
  $144 = $139 + $124 | 0;
  $145 = $124 - $139 | 0;
  $147 = HEAP32[$$1276279 + 4 >> 2] | 0;
  $149 = HEAP32[$$1276279 + 12 >> 2] | 0;
  $151 = HEAP32[$$1276279 + 20 >> 2] | 0;
  $154 = HEAP32[$$1276279 + 28 >> 2] << 13;
  $155 = $151 + $147 | 0;
  $157 = ($149 + $147 | 0) * 10935 | 0;
  $158 = $155 * 9810 | 0;
  $162 = $157 + (Math_imul($147, -9232) | 0) + $158 + $154 | 0;
  $163 = $155 * 6164 | 0;
  $166 = $147 - $149 | 0;
  $168 = ($166 * 3826 | 0) - $154 | 0;
  $169 = $163 + (Math_imul($147, -8693) | 0) + $168 | 0;
  $172 = (Math_imul($151 + $149 | 0, -1297) | 0) - $154 | 0;
  $175 = $157 + (Math_imul($149, -3474) | 0) + $172 | 0;
  $178 = $158 + (Math_imul($151, -19447) | 0) + $172 | 0;
  $180 = ($151 - $149 | 0) * 11512 | 0;
  $184 = $154 + (Math_imul($151, -13850) | 0) + $180 + $163 | 0;
  $187 = $180 + ($149 * 5529 | 0) + $168 | 0;
  $190 = ($166 - $151 << 13) + $154 | 0;
  HEAP8[$113 >> 0] = HEAP8[$110 + (($162 + $140 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 13 >> 0] = HEAP8[$110 + (($140 - $162 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 1 >> 0] = HEAP8[$110 + (($175 + $142 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 12 >> 0] = HEAP8[$110 + (($142 - $175 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 2 >> 0] = HEAP8[$110 + (($178 + $144 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 11 >> 0] = HEAP8[$110 + (($144 - $178 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 3 >> 0] = HEAP8[$110 + (($190 + $126 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 10 >> 0] = HEAP8[$110 + (($126 - $190 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 4 >> 0] = HEAP8[$110 + (($184 + $145 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 9 >> 0] = HEAP8[$110 + (($145 - $184 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 5 >> 0] = HEAP8[$110 + (($187 + $143 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 8 >> 0] = HEAP8[$110 + (($143 - $187 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 6 >> 0] = HEAP8[$110 + (($169 + $141 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 7 >> 0] = HEAP8[$110 + (($141 - $169 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1280 = $$1280 + 1 | 0;
  if (($$1280 | 0) == 7) break; else $$1276279 = $$1276279 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function _decode_mcu_DC_first_62($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0100$lcssa = 0, $$0100117 = 0, $$0104$lcssa = 0, $$0104116 = 0, $$017$i = 0, $$094 = 0, $$099118 = 0, $$1101 = 0, $$1105 = 0, $$2 = 0, $$2102 = 0, $$2106 = 0, $$298$ph = 0, $$3 = 0, $$4$ph = 0, $$4108$ph = 0, $$5 = 0, $$5109 = 0, $$6 = 0, $$6110 = 0, $$in = 0, $105 = 0, $107 = 0, $11 = 0, $113 = 0, $115 = 0, $116 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $26 = 0, $3 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $60 = 0, $62 = 0, $68 = 0, $7 = 0, $72 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $85 = 0, $95 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $2 = sp + 20 | 0;
 $3 = sp;
 $5 = HEAP32[$0 + 468 >> 2] | 0;
 $7 = HEAP32[$0 + 424 >> 2] | 0;
 $8 = $0 + 280 | 0;
 if (HEAP32[$8 >> 2] | 0 ? ($11 = $5 + 44 | 0, (HEAP32[$11 >> 2] | 0) == 0) : 0) {
  $14 = $5 + 16 | 0;
  $18 = HEAP32[$0 + 464 >> 2] | 0;
  $19 = $18 + 24 | 0;
  HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + ((HEAP32[$14 >> 2] | 0) / 8 | 0);
  HEAP32[$14 >> 2] = 0;
  if (!(FUNCTION_TABLE_ii[HEAP32[$18 + 8 >> 2] & 127]($0) | 0)) {
   $$2 = 0;
   STACKTOP = sp;
   return $$2 | 0;
  }
  $26 = $0 + 340 | 0;
  if ((HEAP32[$26 >> 2] | 0) > 0) {
   $$017$i = 0;
   do {
    HEAP32[$5 + 24 + ($$017$i << 2) >> 2] = 0;
    $$017$i = $$017$i + 1 | 0;
   } while (($$017$i | 0) < (HEAP32[$26 >> 2] | 0));
  }
  HEAP32[$5 + 20 >> 2] = 0;
  HEAP32[$11 >> 2] = HEAP32[$8 >> 2];
  if (!(HEAP32[$0 + 440 >> 2] | 0)) HEAP32[$5 + 40 >> 2] = 0;
 }
 if (!(HEAP32[$5 + 40 >> 2] | 0)) {
  HEAP32[$2 + 16 >> 2] = $0;
  $43 = $0 + 24 | 0;
  $44 = HEAP32[$43 >> 2] | 0;
  $45 = HEAP32[$44 >> 2] | 0;
  HEAP32[$2 >> 2] = $45;
  $47 = HEAP32[$44 + 4 >> 2] | 0;
  $48 = $2 + 4 | 0;
  HEAP32[$48 >> 2] = $47;
  $49 = $5 + 12 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  $51 = $5 + 16 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  $53 = $5 + 20 | 0;
  HEAP32[$3 >> 2] = HEAP32[$53 >> 2];
  HEAP32[$3 + 4 >> 2] = HEAP32[$53 + 4 >> 2];
  HEAP32[$3 + 8 >> 2] = HEAP32[$53 + 8 >> 2];
  HEAP32[$3 + 12 >> 2] = HEAP32[$53 + 12 >> 2];
  HEAP32[$3 + 16 >> 2] = HEAP32[$53 + 16 >> 2];
  $54 = $0 + 368 | 0;
  do if ((HEAP32[$54 >> 2] | 0) > 0) {
   $57 = $2 + 8 | 0;
   $58 = $2 + 12 | 0;
   $$0100117 = $52;
   $$0104116 = $50;
   $$099118 = 0;
   while (1) {
    $60 = HEAP32[$1 + ($$099118 << 2) >> 2] | 0;
    $62 = HEAP32[$0 + 372 + ($$099118 << 2) >> 2] | 0;
    $68 = HEAP32[$5 + 48 + (HEAP32[(HEAP32[$0 + 344 + ($62 << 2) >> 2] | 0) + 20 >> 2] << 2) >> 2] | 0;
    if (($$0100117 | 0) < 8) {
     if (!(_jpeg_fill_bit_buffer($2, $$0104116, $$0100117, 0) | 0)) {
      $$2 = 0;
      label = 28;
      break;
     }
     $72 = HEAP32[$57 >> 2] | 0;
     $73 = HEAP32[$58 >> 2] | 0;
     if (($73 | 0) < 8) {
      $$094 = 1;
      $$2102 = $73;
      $$2106 = $72;
      label = 17;
     } else {
      $$1101 = $73;
      $$1105 = $72;
      label = 15;
     }
    } else {
     $$1101 = $$0100117;
     $$1105 = $$0104116;
     label = 15;
    }
    if ((label | 0) == 15) {
     label = 0;
     $77 = $$1105 >> $$1101 + -8 & 255;
     $79 = HEAP32[$68 + 144 + ($77 << 2) >> 2] | 0;
     if (!$79) {
      $$094 = 9;
      $$2102 = $$1101;
      $$2106 = $$1105;
      label = 17;
     } else {
      $$298$ph = HEAPU8[$68 + 1168 + $77 >> 0] | 0;
      $$4$ph = $$1101 - $79 | 0;
      $$4108$ph = $$1105;
     }
    }
    if ((label | 0) == 17) {
     label = 0;
     $85 = _jpeg_huff_decode($2, $$2106, $$2102, $68, $$094) | 0;
     if (($85 | 0) < 0) {
      $$2 = 0;
      label = 28;
      break;
     }
     $$298$ph = $85;
     $$4$ph = HEAP32[$58 >> 2] | 0;
     $$4108$ph = HEAP32[$57 >> 2] | 0;
    }
    if (!$$298$ph) {
     $$3 = 0;
     $$6 = $$4$ph;
     $$6110 = $$4108$ph;
    } else {
     if (($$4$ph | 0) < ($$298$ph | 0)) {
      if (!(_jpeg_fill_bit_buffer($2, $$4108$ph, $$4$ph, $$298$ph) | 0)) {
       $$2 = 0;
       label = 28;
       break;
      }
      $$5 = HEAP32[$58 >> 2] | 0;
      $$5109 = HEAP32[$57 >> 2] | 0;
     } else {
      $$5 = $$4$ph;
      $$5109 = $$4108$ph;
     }
     $95 = $$5 - $$298$ph | 0;
     $98 = HEAP32[5184 + ($$298$ph << 2) >> 2] | 0;
     $99 = $$5109 >> $95 & $98;
     $$3 = $99 - (($99 | 0) > (HEAP32[5184 + ($$298$ph + -1 << 2) >> 2] | 0) ? 0 : $98) | 0;
     $$6 = $95;
     $$6110 = $$5109;
    }
    $105 = $3 + 4 + ($62 << 2) | 0;
    $107 = (HEAP32[$105 >> 2] | 0) + $$3 | 0;
    HEAP32[$105 >> 2] = $107;
    HEAP16[$60 >> 1] = $107 << $7;
    $$099118 = $$099118 + 1 | 0;
    if (($$099118 | 0) >= (HEAP32[$54 >> 2] | 0)) {
     label = 25;
     break;
    } else {
     $$0100117 = $$6;
     $$0104116 = $$6110;
    }
   }
   if ((label | 0) == 25) {
    $$0100$lcssa = $$6;
    $$0104$lcssa = $$6110;
    $$in = HEAP32[$43 >> 2] | 0;
    $113 = HEAP32[$2 >> 2] | 0;
    $115 = HEAP32[$48 >> 2] | 0;
    break;
   } else if ((label | 0) == 28) {
    STACKTOP = sp;
    return $$2 | 0;
   }
  } else {
   $$0100$lcssa = $52;
   $$0104$lcssa = $50;
   $$in = $44;
   $113 = $45;
   $115 = $47;
  } while (0);
  HEAP32[$$in >> 2] = $113;
  HEAP32[$$in + 4 >> 2] = $115;
  HEAP32[$49 >> 2] = $$0104$lcssa;
  HEAP32[$51 >> 2] = $$0100$lcssa;
  HEAP32[$53 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$53 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$53 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  HEAP32[$53 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
  HEAP32[$53 + 16 >> 2] = HEAP32[$3 + 16 >> 2];
 }
 $116 = $5 + 44 | 0;
 HEAP32[$116 >> 2] = (HEAP32[$116 >> 2] | 0) + -1;
 $$2 = 1;
 STACKTOP = sp;
 return $$2 | 0;
}

function _decompress_onepass($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0101123 = 0, $$0102113$us = 0, $$0103121 = 0, $$0104115$us = 0, $$0105120 = 0, $$0106128 = 0, $$0107114 = 0, $$0107114$us = 0, $$0108112$us = 0, $$1116 = 0, $$1116$us = 0, $$2 = 0, $$pre$phiZ2D = 0, $$pre137 = 0, $$sink = 0, $10 = 0, $102 = 0, $104 = 0, $105 = 0, $11 = 0, $112 = 0, $12 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $3 = 0, $35 = 0, $37 = 0, $39 = 0, $48 = 0, $50 = 0, $51 = 0, $53 = 0, $54 = 0, $55 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $63 = 0, $64 = 0, $7 = 0, $77 = 0, $8 = 0, $80 = 0, $87 = 0, $9 = 0, $92 = 0, $93 = 0, $95 = 0, $97 = 0, $98 = 0, label = 0;
 $2 = $0 + 452 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $6 = (HEAP32[$0 + 360 >> 2] | 0) + -1 | 0;
 $7 = $0 + 332 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $8 + -1 | 0;
 $10 = $3 + 24 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 $12 = $3 + 28 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 do if (($11 | 0) < ($13 | 0)) {
  $15 = $3 + 20 | 0;
  $16 = $0 + 436 | 0;
  $17 = $0 + 468 | 0;
  $18 = $3 + 32 | 0;
  $19 = $0 + 368 | 0;
  $20 = $0 + 340 | 0;
  $21 = $0 + 472 | 0;
  $22 = $0 + 148 | 0;
  $$0106128 = $11;
  $123 = $13;
  $24 = HEAP32[$15 >> 2] | 0;
  L3 : while (1) {
   if ($24 >>> 0 > $6 >>> 0) $97 = $123; else {
    $$0101123 = $24;
    while (1) {
     if (HEAP32[$16 >> 2] | 0) _memset(HEAP32[$18 >> 2] | 0, 0, HEAP32[$19 >> 2] << 7 | 0) | 0;
     if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 4 >> 2] & 127]($0, $18) | 0)) break L3;
     $35 = HEAP32[$20 >> 2] | 0;
     if (($35 | 0) > 0) {
      $37 = $$0101123 >>> 0 < $6 >>> 0;
      $$0103121 = 0;
      $$0105120 = 0;
      $124 = $35;
      while (1) {
       $39 = HEAP32[$0 + 344 + ($$0105120 << 2) >> 2] | 0;
       L17 : do if (HEAP32[$39 + 52 >> 2] | 0) {
        $48 = HEAP32[$39 + 4 >> 2] | 0;
        $50 = HEAP32[(HEAP32[$21 >> 2] | 0) + 4 + ($48 << 2) >> 2] | 0;
        $51 = $39 + 56 | 0;
        $53 = HEAP32[($37 ? $51 : $39 + 72 | 0) >> 2] | 0;
        $54 = $39 + 40 | 0;
        $55 = HEAP32[$54 >> 2] | 0;
        $58 = Math_imul(HEAP32[$39 + 68 >> 2] | 0, $$0101123) | 0;
        $59 = $39 + 60 | 0;
        $60 = HEAP32[$59 >> 2] | 0;
        if (($60 | 0) > 0) {
         $63 = $39 + 76 | 0;
         $64 = $39 + 36 | 0;
         if (($53 | 0) <= 0) {
          $$pre137 = HEAP32[$51 >> 2] | 0;
          $$0107114 = 0;
          $$1116 = $$0103121;
          while (1) {
           $87 = $$pre137 + $$1116 | 0;
           $$0107114 = $$0107114 + 1 | 0;
           if (($$0107114 | 0) >= ($60 | 0)) {
            $$2 = $87;
            $92 = $124;
            break L17;
           } else $$1116 = $87;
          }
         }
         $$0104115$us = (HEAP32[$1 + ($48 << 2) >> 2] | 0) + ((Math_imul($55, $$0106128) | 0) << 2) | 0;
         $$0107114$us = 0;
         $$1116$us = $$0103121;
         $125 = $60;
         $126 = $55;
         while (1) {
          if ((HEAP32[$22 >> 2] | 0) >>> 0 >= $9 >>> 0 ? ($$0107114$us + $$0106128 | 0) >= (HEAP32[$63 >> 2] | 0) : 0) {
           $77 = $126;
           $80 = $125;
          } else {
           $$0102113$us = $58;
           $$0108112$us = 0;
           while (1) {
            FUNCTION_TABLE_viiiii[$50 & 63]($0, $39, HEAP32[$3 + 32 + ($$0108112$us + $$1116$us << 2) >> 2] | 0, $$0104115$us, $$0102113$us);
            $$0108112$us = $$0108112$us + 1 | 0;
            if (($$0108112$us | 0) == ($53 | 0)) break; else $$0102113$us = (HEAP32[$64 >> 2] | 0) + $$0102113$us | 0;
           }
           $77 = HEAP32[$54 >> 2] | 0;
           $80 = HEAP32[$59 >> 2] | 0;
          }
          $$1116$us = (HEAP32[$51 >> 2] | 0) + $$1116$us | 0;
          $$0107114$us = $$0107114$us + 1 | 0;
          if (($$0107114$us | 0) >= ($80 | 0)) break; else {
           $$0104115$us = $$0104115$us + ($77 << 2) | 0;
           $125 = $80;
           $126 = $77;
          }
         }
         $$2 = $$1116$us;
         $92 = HEAP32[$20 >> 2] | 0;
        } else {
         $$2 = $$0103121;
         $92 = $124;
        }
       } else {
        $$2 = (HEAP32[$39 + 64 >> 2] | 0) + $$0103121 | 0;
        $92 = $124;
       } while (0);
       $$0105120 = $$0105120 + 1 | 0;
       if (($$0105120 | 0) >= ($92 | 0)) break; else {
        $$0103121 = $$2;
        $124 = $92;
       }
      }
     }
     $93 = $$0101123 + 1 | 0;
     if ($93 >>> 0 > $6 >>> 0) break; else $$0101123 = $93;
    }
    $97 = HEAP32[$12 >> 2] | 0;
   }
   HEAP32[$15 >> 2] = 0;
   $95 = $$0106128 + 1 | 0;
   if (($95 | 0) < ($97 | 0)) {
    $$0106128 = $95;
    $123 = $97;
    $24 = 0;
   } else {
    label = 30;
    break;
   }
  }
  if ((label | 0) == 30) {
   $$pre$phiZ2D = $22;
   $104 = HEAP32[$7 >> 2] | 0;
   break;
  }
  HEAP32[$10 >> 2] = $$0106128;
  HEAP32[$15 >> 2] = $$0101123;
  $$0 = 0;
  return $$0 | 0;
 } else {
  $$pre$phiZ2D = $0 + 148 | 0;
  $104 = $8;
 } while (0);
 $98 = $0 + 156 | 0;
 HEAP32[$98 >> 2] = (HEAP32[$98 >> 2] | 0) + 1;
 $102 = (HEAP32[$$pre$phiZ2D >> 2] | 0) + 1 | 0;
 HEAP32[$$pre$phiZ2D >> 2] = $102;
 if ($102 >>> 0 >= $104 >>> 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 12 >> 2] & 255]($0);
  $$0 = 4;
  return $$0 | 0;
 }
 $105 = HEAP32[$2 >> 2] | 0;
 if ((HEAP32[$0 + 340 >> 2] | 0) > 1) $$sink = 1; else {
  $112 = HEAP32[$0 + 344 >> 2] | 0;
  $$sink = HEAP32[($102 >>> 0 < ($104 + -1 | 0) >>> 0 ? $112 + 12 | 0 : $112 + 76 | 0) >> 2] | 0;
 }
 HEAP32[$105 + 28 >> 2] = $$sink;
 HEAP32[$105 + 20 >> 2] = 0;
 HEAP32[$105 + 24 >> 2] = 0;
 $$0 = 3;
 return $$0 | 0;
}

function _jpeg_idct_7x14($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0270278 = 0, $$0272277 = 0, $$0273276 = 0, $$0279 = 0, $$1271274 = 0, $$1275 = 0, $100 = 0, $103 = 0, $106 = 0, $108 = 0, $112 = 0, $115 = 0, $118 = 0, $15 = 0, $162 = 0, $165 = 0, $168 = 0, $170 = 0, $172 = 0, $174 = 0, $176 = 0, $178 = 0, $182 = 0, $183 = 0, $186 = 0, $189 = 0, $192 = 0, $196 = 0, $198 = 0, $200 = 0, $202 = 0, $204 = 0, $208 = 0, $209 = 0, $21 = 0, $211 = 0, $212 = 0, $215 = 0, $24 = 0, $25 = 0, $27 = 0, $30 = 0, $36 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $63 = 0, $69 = 0, $7 = 0, $75 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $86 = 0, $90 = 0, $91 = 0, $94 = 0, $96 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(400);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0270278 = $5;
 $$0272277 = HEAP32[$1 + 84 >> 2] | 0;
 $$0273276 = $2;
 $$0279 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0273276 >> 1] << 13, HEAP32[$$0272277 >> 2] | 0) | 0 | 1024;
  $21 = Math_imul(HEAP32[$$0272277 + 128 >> 2] | 0, HEAP16[$$0273276 + 64 >> 1] | 0) | 0;
  $24 = ($21 * 10438 | 0) + $15 | 0;
  $25 = ($21 * 2578 | 0) + $15 | 0;
  $27 = (Math_imul($21, -7223) | 0) + $15 | 0;
  $30 = (Math_imul($21, -11586) | 0) + $15 >> 11;
  $36 = Math_imul(HEAP32[$$0272277 + 64 >> 2] | 0, HEAP16[$$0273276 + 32 >> 1] | 0) | 0;
  $42 = Math_imul(HEAP32[$$0272277 + 192 >> 2] | 0, HEAP16[$$0273276 + 96 >> 1] | 0) | 0;
  $44 = ($42 + $36 | 0) * 9058 | 0;
  $46 = $44 + ($36 * 2237 | 0) | 0;
  $48 = $44 + (Math_imul($42, -14084) | 0) | 0;
  $51 = (Math_imul($42, -11295) | 0) + ($36 * 5027 | 0) | 0;
  $52 = $46 + $24 | 0;
  $53 = $24 - $46 | 0;
  $54 = $48 + $25 | 0;
  $55 = $25 - $48 | 0;
  $56 = $51 + $27 | 0;
  $57 = $27 - $51 | 0;
  $63 = Math_imul(HEAP32[$$0272277 + 32 >> 2] | 0, HEAP16[$$0273276 + 16 >> 1] | 0) | 0;
  $69 = Math_imul(HEAP32[$$0272277 + 96 >> 2] | 0, HEAP16[$$0273276 + 48 >> 1] | 0) | 0;
  $75 = Math_imul(HEAP32[$$0272277 + 160 >> 2] | 0, HEAP16[$$0273276 + 80 >> 1] | 0) | 0;
  $81 = Math_imul(HEAP32[$$0272277 + 224 >> 2] | 0, HEAP16[$$0273276 + 112 >> 1] | 0) | 0;
  $82 = $81 << 13;
  $83 = $75 + $63 | 0;
  $85 = ($69 + $63 | 0) * 10935 | 0;
  $86 = $83 * 9810 | 0;
  $90 = $85 + (Math_imul($63, -9232) | 0) + $86 + $82 | 0;
  $91 = $83 * 6164 | 0;
  $94 = $63 - $69 | 0;
  $96 = ($94 * 3826 | 0) - $82 | 0;
  $97 = $91 + (Math_imul($63, -8693) | 0) + $96 | 0;
  $100 = (Math_imul($75 + $69 | 0, -1297) | 0) - $82 | 0;
  $103 = $85 + (Math_imul($69, -3474) | 0) + $100 | 0;
  $106 = $86 + (Math_imul($75, -19447) | 0) + $100 | 0;
  $108 = ($75 - $69 | 0) * 11512 | 0;
  $112 = $108 + (Math_imul($75, -13850) | 0) + $91 + $82 | 0;
  $115 = $108 + ($69 * 5529 | 0) + $96 | 0;
  $118 = $94 - $75 + $81 << 2;
  HEAP32[$$0270278 >> 2] = $90 + $52 >> 11;
  HEAP32[$$0270278 + 364 >> 2] = $52 - $90 >> 11;
  HEAP32[$$0270278 + 28 >> 2] = $103 + $54 >> 11;
  HEAP32[$$0270278 + 336 >> 2] = $54 - $103 >> 11;
  HEAP32[$$0270278 + 56 >> 2] = $106 + $56 >> 11;
  HEAP32[$$0270278 + 308 >> 2] = $56 - $106 >> 11;
  HEAP32[$$0270278 + 84 >> 2] = $118 + $30;
  HEAP32[$$0270278 + 280 >> 2] = $30 - $118;
  HEAP32[$$0270278 + 112 >> 2] = $112 + $57 >> 11;
  HEAP32[$$0270278 + 252 >> 2] = $57 - $112 >> 11;
  HEAP32[$$0270278 + 140 >> 2] = $115 + $55 >> 11;
  HEAP32[$$0270278 + 224 >> 2] = $55 - $115 >> 11;
  HEAP32[$$0270278 + 168 >> 2] = $97 + $53 >> 11;
  HEAP32[$$0270278 + 196 >> 2] = $53 - $97 >> 11;
  $$0279 = $$0279 + 1 | 0;
  if (($$0279 | 0) == 7) break; else {
   $$0270278 = $$0270278 + 4 | 0;
   $$0272277 = $$0272277 + 4 | 0;
   $$0273276 = $$0273276 + 2 | 0;
  }
 }
 $162 = $7 + -384 | 0;
 $$1271274 = $5;
 $$1275 = 0;
 while (1) {
  $165 = (HEAP32[$3 + ($$1275 << 2) >> 2] | 0) + $4 | 0;
  $168 = (HEAP32[$$1271274 >> 2] << 13) + 134348800 | 0;
  $170 = HEAP32[$$1271274 + 8 >> 2] | 0;
  $172 = HEAP32[$$1271274 + 16 >> 2] | 0;
  $174 = HEAP32[$$1271274 + 24 >> 2] | 0;
  $176 = ($172 - $174 | 0) * 7223 | 0;
  $178 = ($170 - $172 | 0) * 2578 | 0;
  $182 = (Math_imul($172, -15083) | 0) + $168 + $178 + $176 | 0;
  $183 = $174 + $170 | 0;
  $186 = ($183 * 10438 | 0) + $168 | 0;
  $189 = $176 + (Math_imul($174, -637) | 0) + $186 | 0;
  $192 = $178 + (Math_imul($170, -20239) | 0) + $186 | 0;
  $196 = HEAP32[$$1271274 + 4 >> 2] | 0;
  $198 = HEAP32[$$1271274 + 12 >> 2] | 0;
  $200 = HEAP32[$$1271274 + 20 >> 2] | 0;
  $202 = ($198 + $196 | 0) * 7663 | 0;
  $204 = ($196 - $198 | 0) * 1395 | 0;
  $208 = Math_imul($200 + $198 | 0, -11295) | 0;
  $209 = $202 + $204 + $208 | 0;
  $211 = ($200 + $196 | 0) * 5027 | 0;
  $212 = $202 - $204 + $211 | 0;
  $215 = $211 + ($200 * 15326 | 0) + $208 | 0;
  HEAP8[$165 >> 0] = HEAP8[$162 + (($212 + $189 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 6 >> 0] = HEAP8[$162 + (($189 - $212 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 1 >> 0] = HEAP8[$162 + (($209 + $182 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 5 >> 0] = HEAP8[$162 + (($182 - $209 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 2 >> 0] = HEAP8[$162 + (($215 + $192 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 4 >> 0] = HEAP8[$162 + (($192 - $215 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$165 + 3 >> 0] = HEAP8[$162 + (((($172 - $183 | 0) * 11585 | 0) + $168 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1275 = $$1275 + 1 | 0;
  if (($$1275 | 0) == 14) break; else $$1271274 = $$1271274 + 28 | 0;
 }
 STACKTOP = sp;
 return;
}

function _ar2SetTemplateSub($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0100 = 0, $$0102 = 0, $$0104 = 0, $$0106 = 0, $$0108 = 0, $$0109 = 0, $$0116 = 0, $$0123 = 0, $$1 = 0, $$1101 = 0, $$1103 = 0, $$1105 = 0, $$1107 = 0, $$1110 = 0, $$1117 = 0, $$1124 = 0, $$2 = 0, $$2111 = 0, $$2118 = 0, $$3 = 0, $$3112 = 0, $$3119 = 0, $$3126 = 0, $$4 = 0, $$4113 = 0, $$4120 = 0, $$4127 = 0, $$5 = 0, $$5114 = 0, $$5121 = 0, $$6 = 0, $$6115 = 0, $$6122 = 0, $10 = 0, $100 = 0, $104 = 0.0, $11 = 0, $114 = 0, $116 = 0, $131 = 0, $14 = 0, $16 = 0, $18 = 0.0, $21 = 0, $28 = 0, $35 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $45 = 0, $49 = 0.0, $6 = 0, $63 = 0, $65 = 0, $7 = 0, $74 = 0, $76 = 0, $78 = 0.0, $8 = 0, $83 = 0, $9 = 0, $90 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 $6 = sp + 60 | 0;
 $7 = sp + 56 | 0;
 $8 = sp + 52 | 0;
 $9 = sp + 48 | 0;
 $10 = sp;
 $11 = sp + 64 | 0;
 L1 : do if (!$0) {
  $74 = HEAP32[$3 >> 2] | 0;
  $76 = HEAP32[$74 + ($4 * 20 | 0) + 8 >> 2] | 0;
  HEAP32[$6 >> 2] = $76;
  $78 = +HEAPF32[$74 + ($4 * 20 | 0) + 12 >> 2];
  HEAPF32[$7 >> 2] = $78;
  if ((_ar2MarkerCoord2ScreenCoord(0, $1, (HEAP32[tempDoublePtr >> 2] = $76, +HEAPF32[tempDoublePtr >> 2]), $78, $8, $9) | 0) < 0) $$0108 = -1; else {
   $83 = ~~(+HEAPF32[$8 >> 2] + .5);
   $90 = HEAP32[$5 + 16 >> 2] | 0;
   $94 = $5 + 20 | 0;
   $95 = $5 + 8 | 0;
   $96 = $5 + 12 | 0;
   $97 = $3 + 8 | 0;
   $$1101 = 0 - $90 | 0;
   $$1105 = ~~(+HEAPF32[$9 >> 2] + .5) - ($90 << 1) | 0;
   $$3 = 0;
   $$3112 = 0;
   $$3119 = 0;
   $$3126 = HEAP32[$5 + 24 >> 2] | 0;
   while (1) {
    if (($$1101 | 0) > (HEAP32[$94 >> 2] | 0)) {
     $$6 = $$3;
     $$6115 = $$3112;
     $$6122 = $$3119;
     label = 25;
     break L1;
    }
    $100 = HEAP32[$95 >> 2] | 0;
    $104 = +($$1105 | 0);
    $$1103 = 0 - $100 | 0;
    $$1107 = $83 - ($100 << 1) | 0;
    $$4 = $$3;
    $$4113 = $$3112;
    $$4120 = $$3119;
    $$4127 = $$3126;
    while (1) {
     if (($$1103 | 0) > (HEAP32[$96 >> 2] | 0)) break;
     if ((_ar2GetImageValue(0, $1, HEAP32[(HEAP32[$2 >> 2] | 0) + (HEAP32[$97 >> 2] << 2) >> 2] | 0, +($$1107 | 0), $104, $11) | 0) < 0) {
      HEAP16[$$4127 >> 1] = 4096;
      $$5 = $$4;
      $$5114 = $$4113;
      $$5121 = $$4120;
     } else {
      $114 = HEAP8[$11 >> 0] | 0;
      HEAP16[$$4127 >> 1] = $114 & 255;
      $116 = $114 & 255;
      $$5 = $$4 + 1 | 0;
      $$5114 = (Math_imul($116, $116) | 0) + $$4113 | 0;
      $$5121 = $$4120 + $116 | 0;
     }
     $$1103 = $$1103 + 1 | 0;
     $$1107 = $$1107 + 2 | 0;
     $$4 = $$5;
     $$4113 = $$5114;
     $$4120 = $$5121;
     $$4127 = $$4127 + 2 | 0;
    }
    $$1101 = $$1101 + 1 | 0;
    $$1105 = $$1105 + 2 | 0;
    $$3 = $$4;
    $$3112 = $$4113;
    $$3119 = $$4120;
    $$3126 = $$4127;
   }
  }
 } else {
  _arUtilMatMuldff($0 + 8 | 0, $1, $10) | 0;
  $14 = HEAP32[$3 >> 2] | 0;
  $16 = HEAP32[$14 + ($4 * 20 | 0) + 8 >> 2] | 0;
  HEAP32[$6 >> 2] = $16;
  $18 = +HEAPF32[$14 + ($4 * 20 | 0) + 12 >> 2];
  HEAPF32[$7 >> 2] = $18;
  if ((_ar2MarkerCoord2ScreenCoord(0, $10, (HEAP32[tempDoublePtr >> 2] = $16, +HEAPF32[tempDoublePtr >> 2]), $18, $6, $7) | 0) >= 0 ? ($21 = $0 + 184 | 0, (_arParamIdeal2ObservLTf($21, +HEAPF32[$6 >> 2], +HEAPF32[$7 >> 2], $8, $9) | 0) >= 0) : 0) {
   $28 = ~~(+HEAPF32[$8 >> 2] + .5);
   $35 = HEAP32[$5 + 16 >> 2] | 0;
   $39 = $5 + 20 | 0;
   $40 = $5 + 8 | 0;
   $41 = $5 + 12 | 0;
   $42 = $3 + 8 | 0;
   $$0 = 0;
   $$0100 = 0 - $35 | 0;
   $$0104 = ~~(+HEAPF32[$9 >> 2] + .5) - ($35 << 1) | 0;
   $$0109 = 0;
   $$0116 = 0;
   $$0123 = HEAP32[$5 + 24 >> 2] | 0;
   while (1) {
    if (($$0100 | 0) > (HEAP32[$39 >> 2] | 0)) {
     $$6 = $$0;
     $$6115 = $$0109;
     $$6122 = $$0116;
     label = 25;
     break L1;
    }
    $45 = HEAP32[$40 >> 2] | 0;
    $49 = +($$0104 | 0);
    $$0102 = 0 - $45 | 0;
    $$0106 = $28 - ($45 << 1) | 0;
    $$1 = $$0;
    $$1110 = $$0109;
    $$1117 = $$0116;
    $$1124 = $$0123;
    while (1) {
     if (($$0102 | 0) > (HEAP32[$41 >> 2] | 0)) break;
     do if ((_arParamObserv2IdealLTf($21, +($$0106 | 0), $49, $8, $9) | 0) >= 0) if ((_ar2GetImageValue(0, $10, HEAP32[(HEAP32[$2 >> 2] | 0) + (HEAP32[$42 >> 2] << 2) >> 2] | 0, +HEAPF32[$8 >> 2], +HEAPF32[$9 >> 2], $11) | 0) < 0) {
      HEAP16[$$1124 >> 1] = 4096;
      $$2 = $$1;
      $$2111 = $$1110;
      $$2118 = $$1117;
      break;
     } else {
      $63 = HEAP8[$11 >> 0] | 0;
      HEAP16[$$1124 >> 1] = $63 & 255;
      $65 = $63 & 255;
      $$2 = $$1 + 1 | 0;
      $$2111 = (Math_imul($65, $65) | 0) + $$1110 | 0;
      $$2118 = $$1117 + $65 | 0;
      break;
     } else {
      HEAP16[$$1124 >> 1] = 4096;
      $$2 = $$1;
      $$2111 = $$1110;
      $$2118 = $$1117;
     } while (0);
     $$0102 = $$0102 + 1 | 0;
     $$0106 = $$0106 + 2 | 0;
     $$1 = $$2;
     $$1110 = $$2111;
     $$1117 = $$2118;
     $$1124 = $$1124 + 2 | 0;
    }
    $$0 = $$1;
    $$0100 = $$0100 + 1 | 0;
    $$0104 = $$0104 + 2 | 0;
    $$0109 = $$1110;
    $$0116 = $$1117;
    $$0123 = $$1124;
   }
  } else $$0108 = -1;
 } while (0);
 if ((label | 0) == 25) if (!$$6) $$0108 = -1; else {
  $131 = ~~+Math_sqrt(+(+($$6115 - ((Math_imul($$6122, $$6122) | 0) / ($$6 | 0) | 0) | 0)));
  HEAP32[$5 + 28 >> 2] = $131;
  HEAP32[$5 + 32 >> 2] = $$6122;
  HEAP32[$5 + 36 >> 2] = $$6;
  $$0108 = 0;
 }
 STACKTOP = sp;
 return $$0108 | 0;
}

function __ZNSt3__26locale5__impC2Em($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0, $5 = 0;
 HEAP32[$0 + 4 >> 2] = $1 + -1;
 HEAP32[$0 >> 2] = 23288;
 $4 = $0 + 8 | 0;
 __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEEC2Em($4, 28);
 $5 = $0 + 144 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($5, 58971, __ZNSt3__211char_traitsIcE6lengthEPKc(58971) | 0);
 HEAP32[$0 + 12 >> 2] = HEAP32[$4 >> 2];
 __ZNSt3__212_GLOBAL__N_14makeINS_7collateIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_($0, 64744);
 __ZNSt3__212_GLOBAL__N_14makeINS_7collateIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_($0, 64752);
 __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIcEEDnbjEERT_T0_T1_T2_();
 __ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_($0, 64760);
 __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_($0, 64776);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIcc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($0, 64784);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIwc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($0, 64792);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDsc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($0, 64808);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDic11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($0, 64816);
 __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_($0, 64824);
 __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_($0, 64848);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 64880);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 64888);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 64896);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 64904);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb0EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($0, 64912);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb1EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($0, 64920);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb0EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($0, 64928);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb1EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($0, 64936);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 64944);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 64952);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 64960);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 64968);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 64976);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 64992);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 65008);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 65024);
 __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_($0, 65040);
 __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_($0, 65048);
 return;
}

function _jpeg_idct_10x10($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0253266 = 0, $$0255265 = 0, $$0256264 = 0, $$0267 = 0, $$1254262 = 0, $$1263 = 0, $131 = 0, $134 = 0, $137 = 0, $139 = 0, $141 = 0, $143 = 0, $145 = 0, $147 = 0, $149 = 0, $15 = 0, $151 = 0, $153 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $161 = 0, $163 = 0, $166 = 0, $168 = 0, $169 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $176 = 0, $179 = 0, $180 = 0, $183 = 0, $186 = 0, $189 = 0, $192 = 0, $21 = 0, $23 = 0, $25 = 0, $28 = 0, $34 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $56 = 0, $62 = 0, $68 = 0, $7 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $83 = 0, $86 = 0, $87 = 0, $90 = 0, $93 = 0, $96 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(320);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0253266 = $5;
 $$0255265 = HEAP32[$1 + 84 >> 2] | 0;
 $$0256264 = $2;
 $$0267 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0256264 >> 1] << 13, HEAP32[$$0255265 >> 2] | 0) | 0 | 1024;
  $21 = Math_imul(HEAP32[$$0255265 + 128 >> 2] | 0, HEAP16[$$0256264 + 64 >> 1] | 0) | 0;
  $23 = ($21 * 9373 | 0) + $15 | 0;
  $25 = (Math_imul($21, -3580) | 0) + $15 | 0;
  $28 = (Math_imul($21, -11586) | 0) + $15 >> 11;
  $34 = Math_imul(HEAP32[$$0255265 + 64 >> 2] | 0, HEAP16[$$0256264 + 32 >> 1] | 0) | 0;
  $40 = Math_imul(HEAP32[$$0255265 + 192 >> 2] | 0, HEAP16[$$0256264 + 96 >> 1] | 0) | 0;
  $42 = ($40 + $34 | 0) * 6810 | 0;
  $44 = $42 + ($34 * 4209 | 0) | 0;
  $46 = $42 + (Math_imul($40, -17828) | 0) | 0;
  $47 = $44 + $23 | 0;
  $48 = $23 - $44 | 0;
  $49 = $46 + $25 | 0;
  $50 = $25 - $46 | 0;
  $56 = Math_imul(HEAP32[$$0255265 + 32 >> 2] | 0, HEAP16[$$0256264 + 16 >> 1] | 0) | 0;
  $62 = Math_imul(HEAP32[$$0255265 + 96 >> 2] | 0, HEAP16[$$0256264 + 48 >> 1] | 0) | 0;
  $68 = Math_imul(HEAP32[$$0255265 + 160 >> 2] | 0, HEAP16[$$0256264 + 80 >> 1] | 0) | 0;
  $74 = Math_imul(HEAP32[$$0255265 + 224 >> 2] | 0, HEAP16[$$0256264 + 112 >> 1] | 0) | 0;
  $75 = $74 + $62 | 0;
  $76 = $62 - $74 | 0;
  $77 = $76 * 2531 | 0;
  $78 = $68 << 13;
  $79 = $75 * 7791 | 0;
  $80 = $77 + $78 | 0;
  $83 = $79 + ($56 * 11443 | 0) + $80 | 0;
  $86 = ($56 * 1812 | 0) - $79 + $80 | 0;
  $87 = $75 * 4815 | 0;
  $90 = $78 - $77 - ($76 << 12) | 0;
  $93 = $56 - $68 - $76 << 2;
  $96 = ($56 * 10323 | 0) - $87 - $90 | 0;
  $99 = $90 + (($56 * 5260 | 0) - $87) | 0;
  HEAP32[$$0253266 >> 2] = $83 + $47 >> 11;
  HEAP32[$$0253266 + 288 >> 2] = $47 - $83 >> 11;
  HEAP32[$$0253266 + 32 >> 2] = $96 + $49 >> 11;
  HEAP32[$$0253266 + 256 >> 2] = $49 - $96 >> 11;
  HEAP32[$$0253266 + 64 >> 2] = $93 + $28;
  HEAP32[$$0253266 + 224 >> 2] = $28 - $93;
  HEAP32[$$0253266 + 96 >> 2] = $99 + $50 >> 11;
  HEAP32[$$0253266 + 192 >> 2] = $50 - $99 >> 11;
  HEAP32[$$0253266 + 128 >> 2] = $86 + $48 >> 11;
  HEAP32[$$0253266 + 160 >> 2] = $48 - $86 >> 11;
  $$0267 = $$0267 + 1 | 0;
  if (($$0267 | 0) == 8) break; else {
   $$0253266 = $$0253266 + 4 | 0;
   $$0255265 = $$0255265 + 4 | 0;
   $$0256264 = $$0256264 + 2 | 0;
  }
 }
 $131 = $7 + -384 | 0;
 $$1254262 = $5;
 $$1263 = 0;
 while (1) {
  $134 = (HEAP32[$3 + ($$1263 << 2) >> 2] | 0) + $4 | 0;
  $137 = (HEAP32[$$1254262 >> 2] << 13) + 134348800 | 0;
  $139 = HEAP32[$$1254262 + 16 >> 2] | 0;
  $141 = $137 + ($139 * 9373 | 0) | 0;
  $143 = $137 + (Math_imul($139, -3580) | 0) | 0;
  $145 = $137 + (Math_imul($139, -11586) | 0) | 0;
  $147 = HEAP32[$$1254262 + 8 >> 2] | 0;
  $149 = HEAP32[$$1254262 + 24 >> 2] | 0;
  $151 = ($149 + $147 | 0) * 6810 | 0;
  $153 = $151 + ($147 * 4209 | 0) | 0;
  $155 = $151 + (Math_imul($149, -17828) | 0) | 0;
  $156 = $153 + $141 | 0;
  $157 = $141 - $153 | 0;
  $158 = $155 + $143 | 0;
  $159 = $143 - $155 | 0;
  $161 = HEAP32[$$1254262 + 4 >> 2] | 0;
  $163 = HEAP32[$$1254262 + 12 >> 2] | 0;
  $166 = HEAP32[$$1254262 + 20 >> 2] << 13;
  $168 = HEAP32[$$1254262 + 28 >> 2] | 0;
  $169 = $168 + $163 | 0;
  $170 = $163 - $168 | 0;
  $171 = $170 * 2531 | 0;
  $172 = $169 * 7791 | 0;
  $173 = $171 + $166 | 0;
  $176 = $172 + ($161 * 11443 | 0) + $173 | 0;
  $179 = ($161 * 1812 | 0) - $172 + $173 | 0;
  $180 = $169 * 4815 | 0;
  $183 = $166 - $171 - ($170 << 12) | 0;
  $186 = ($161 - $170 << 13) - $166 | 0;
  $189 = ($161 * 10323 | 0) - $180 - $183 | 0;
  $192 = $183 + (($161 * 5260 | 0) - $180) | 0;
  HEAP8[$134 >> 0] = HEAP8[$131 + (($176 + $156 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$134 + 9 >> 0] = HEAP8[$131 + (($156 - $176 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$134 + 1 >> 0] = HEAP8[$131 + (($189 + $158 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$134 + 8 >> 0] = HEAP8[$131 + (($158 - $189 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$134 + 2 >> 0] = HEAP8[$131 + (($186 + $145 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$134 + 7 >> 0] = HEAP8[$131 + (($145 - $186 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$134 + 3 >> 0] = HEAP8[$131 + (($192 + $159 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$134 + 6 >> 0] = HEAP8[$131 + (($159 - $192 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$134 + 4 >> 0] = HEAP8[$131 + (($179 + $157 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$134 + 5 >> 0] = HEAP8[$131 + (($157 - $179 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1263 = $$1263 + 1 | 0;
  if (($$1263 | 0) == 10) break; else $$1254262 = $$1254262 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i$i$i = 0, $$052$i$i$i$i$i = 0, $$153$i$i$i$i$i = 0, $$pn$i$i$i$i$i = 0, $$pre$phi$i$i$i$i$iZ2D = 0, $102 = 0, $108 = 0, $11 = 0, $16 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $36 = 0, $37 = 0, $4 = 0, $41 = 0, $47 = 0, $51 = 0, $54 = 0.0, $57 = 0.0, $67 = 0, $70 = 0, $72 = 0, $73 = 0, $81 = 0, $83 = 0, $89 = 0, $90 = 0, $93 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp + 8 | 0;
 $4 = sp;
 if (($1 | 0) <= -1) {
  $11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36635) | 0, 36227) | 0, 39072) | 0, 290) | 0, 39079) | 0, 36669) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $11 + (HEAP32[(HEAP32[$11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
  $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 127]($16, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($11, $20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  _abort();
 }
 $21 = $0 + 92 | 0;
 HEAP32[$3 >> 2] = $1;
 $22 = __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE4findIjEENS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_($21, $3) | 0;
 if (!$22) {
  HEAP32[$4 >> 2] = $1;
  HEAP32[$4 + 4 >> 2] = $2;
  $25 = $0 + 96 | 0;
  $26 = HEAP32[$25 >> 2] | 0;
  $27 = ($26 | 0) == 0;
  L6 : do if (!$27) {
   $28 = $26 + -1 | 0;
   $30 = ($28 & $26 | 0) == 0;
   if (!$30) if ($26 >>> 0 > $1 >>> 0) $36 = $1; else $36 = ($1 >>> 0) % ($26 >>> 0) | 0; else $36 = $28 & $1;
   $37 = HEAP32[(HEAP32[$21 >> 2] | 0) + ($36 << 2) >> 2] | 0;
   if (!$37) {
    $$052$i$i$i$i$i = $36;
    label = 19;
   } else {
    $$pn$i$i$i$i$i = $37;
    do {
     $$pn$i$i$i$i$i = HEAP32[$$pn$i$i$i$i$i >> 2] | 0;
     if (!$$pn$i$i$i$i$i) {
      $$052$i$i$i$i$i = $36;
      label = 19;
      break L6;
     }
     $41 = HEAP32[$$pn$i$i$i$i$i + 4 >> 2] | 0;
     if (($41 | 0) != ($1 | 0)) {
      if (!$30) if ($41 >>> 0 < $26 >>> 0) $47 = $41; else $47 = ($41 >>> 0) % ($26 >>> 0) | 0; else $47 = $41 & $28;
      if (($47 | 0) != ($36 | 0)) {
       $$052$i$i$i$i$i = $36;
       label = 19;
       break L6;
      }
     }
    } while ((HEAP32[$$pn$i$i$i$i$i + 8 >> 2] | 0) != ($1 | 0));
   }
  } else {
   $$052$i$i$i$i$i = 0;
   label = 19;
  } while (0);
  if ((label | 0) == 19) {
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE21__construct_node_hashINS_4pairIjjEEJEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISK_EEEEEEmOT_DpOT0_($3, $21, $1, $4);
   $51 = $0 + 104 | 0;
   $54 = +(((HEAP32[$51 >> 2] | 0) + 1 | 0) >>> 0);
   $57 = +HEAPF32[$0 + 108 >> 2];
   do if ($27 | $57 * +($26 >>> 0) < $54) {
    $67 = $26 << 1 | ($26 >>> 0 < 3 | ($26 + -1 & $26 | 0) != 0) & 1;
    $70 = ~~+Math_ceil(+($54 / $57)) >>> 0;
    __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE6rehashEm($21, $67 >>> 0 < $70 >>> 0 ? $70 : $67);
    $72 = HEAP32[$25 >> 2] | 0;
    $73 = $72 + -1 | 0;
    if (!($73 & $72)) {
     $$0$i$i$i$i$i = $72;
     $$153$i$i$i$i$i = $73 & $1;
     break;
    }
    if ($72 >>> 0 > $1 >>> 0) {
     $$0$i$i$i$i$i = $72;
     $$153$i$i$i$i$i = $1;
    } else {
     $$0$i$i$i$i$i = $72;
     $$153$i$i$i$i$i = ($1 >>> 0) % ($72 >>> 0) | 0;
    }
   } else {
    $$0$i$i$i$i$i = $26;
    $$153$i$i$i$i$i = $$052$i$i$i$i$i;
   } while (0);
   $81 = HEAP32[(HEAP32[$21 >> 2] | 0) + ($$153$i$i$i$i$i << 2) >> 2] | 0;
   if (!$81) {
    $83 = $0 + 100 | 0;
    HEAP32[HEAP32[$3 >> 2] >> 2] = HEAP32[$83 >> 2];
    HEAP32[$83 >> 2] = HEAP32[$3 >> 2];
    HEAP32[(HEAP32[$21 >> 2] | 0) + ($$153$i$i$i$i$i << 2) >> 2] = $83;
    $89 = HEAP32[$3 >> 2] | 0;
    $90 = HEAP32[$89 >> 2] | 0;
    if (!$90) $$pre$phi$i$i$i$i$iZ2D = $3; else {
     $93 = HEAP32[$90 + 4 >> 2] | 0;
     $94 = $$0$i$i$i$i$i + -1 | 0;
     if ($94 & $$0$i$i$i$i$i) if ($93 >>> 0 < $$0$i$i$i$i$i >>> 0) $102 = $93; else $102 = ($93 >>> 0) % ($$0$i$i$i$i$i >>> 0) | 0; else $102 = $93 & $94;
     HEAP32[(HEAP32[$21 >> 2] | 0) + ($102 << 2) >> 2] = $89;
     $$pre$phi$i$i$i$i$iZ2D = $3;
    }
   } else {
    HEAP32[HEAP32[$3 >> 2] >> 2] = HEAP32[$81 >> 2];
    HEAP32[$81 >> 2] = HEAP32[$3 >> 2];
    $$pre$phi$i$i$i$i$iZ2D = $3;
   }
   HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + 1;
   HEAP32[$$pre$phi$i$i$i$i$iZ2D >> 2] = 0;
  }
 } else {
  $108 = $22 + 12 | 0;
  HEAP32[$108 >> 2] = (HEAP32[$108 >> 2] | 0) + $2;
 }
 STACKTOP = sp;
 return;
}

function _arVecTridiagonalize($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0158 = 0, $$0160 = 0, $$0164 = 0, $$0165 = 0.0, $$1 = 0, $$1$in = 0, $$1$in$ph = 0, $$1159 = 0, $$1161 = 0, $$1161$in = 0, $$1166 = 0.0, $$2 = 0, $$2162 = 0, $$3 = 0, $$3163 = 0, $$pre$phiZ2D = 0, $$sink = 0.0, $$sink171 = 0, $106 = 0, $107 = 0, $110 = 0, $114 = 0, $117 = 0, $118 = 0, $121 = 0, $124 = 0.0, $131 = 0, $17 = 0, $18 = 0, $19 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $4 = 0, $41 = 0, $46 = 0.0, $48 = 0, $57 = 0.0, $6 = 0, $65 = 0.0, $68 = 0.0, $70 = 0, $71 = 0, $73 = 0.0, $74 = 0, $85 = 0, $90 = 0, $91 = 0, $95 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp + 8 | 0;
 $4 = sp;
 $6 = HEAP32[$0 + 8 >> 2] | 0;
 L1 : do if ((($6 | 0) == (HEAP32[$0 + 4 >> 2] | 0) ? ($6 | 0) == (HEAP32[$1 + 4 >> 2] | 0) : 0) ? ($6 | 0) == ((HEAP32[$2 + 4 >> 2] | 0) + 1 | 0) : 0) {
  $17 = $6 + -2 | 0;
  $18 = $3 + 4 | 0;
  $19 = $4 + 4 | 0;
  $$0 = 0;
  while (1) {
   if (($$0 | 0) >= ($17 | 0)) break;
   $23 = (HEAP32[$0 >> 2] | 0) + ((Math_imul($$0, $6) | 0) << 3) | 0;
   HEAPF64[(HEAP32[$1 >> 2] | 0) + ($$0 << 3) >> 3] = +HEAPF64[$23 + ($$0 << 3) >> 3];
   $29 = $6 - $$0 + -1 | 0;
   HEAP32[$18 >> 2] = $29;
   $30 = $$0 + 1 | 0;
   $31 = $23 + ($30 << 3) | 0;
   HEAP32[$3 >> 2] = $31;
   $32 = +_arVecHousehold($3);
   HEAPF64[(HEAP32[$2 >> 2] | 0) + ($$0 << 3) >> 3] = $32;
   L8 : do if (!($32 == 0.0)) {
    $$0160 = $30;
    while (1) {
     if (($$0160 | 0) >= ($6 | 0)) break;
     $$0158 = $30;
     $$0165 = 0.0;
     while (1) {
      if ($$0158 >>> 0 >= $$0160 >>> 0) break;
      $41 = (HEAP32[$0 >> 2] | 0) + ((Math_imul($$0158, $6) | 0) + $$0160 << 3) | 0;
      $46 = $$0165 + +HEAPF64[$41 >> 3] * +HEAPF64[$23 + ($$0158 << 3) >> 3];
      $$0158 = $$0158 + 1 | 0;
      $$0165 = $46;
     }
     $48 = Math_imul($$0160, $6) | 0;
     $$1159 = $$0160;
     $$1166 = $$0165;
     while (1) {
      if (($$1159 | 0) >= ($6 | 0)) break;
      $57 = $$1166 + +HEAPF64[(HEAP32[$0 >> 2] | 0) + ($$1159 + $48 << 3) >> 3] * +HEAPF64[$23 + ($$1159 << 3) >> 3];
      $$1159 = $$1159 + 1 | 0;
      $$1166 = $57;
     }
     HEAPF64[(HEAP32[$1 >> 2] | 0) + ($$0160 << 3) >> 3] = $$1166;
     $$0160 = $$0160 + 1 | 0;
    }
    HEAP32[$19 >> 2] = $29;
    HEAP32[$18 >> 2] = $29;
    HEAP32[$3 >> 2] = $31;
    HEAP32[$4 >> 2] = (HEAP32[$1 >> 2] | 0) + ($30 << 3);
    $65 = +_arVecInnerproduct($3, $4) * .5;
    $$1161$in = $6;
    while (1) {
     $$1161 = $$1161$in + -1 | 0;
     if (($$1161 | 0) <= ($$0 | 0)) break L8;
     $68 = +HEAPF64[$23 + ($$1161 << 3) >> 3];
     $70 = HEAP32[$1 >> 2] | 0;
     $71 = $70 + ($$1161 << 3) | 0;
     $73 = +HEAPF64[$71 >> 3] - $65 * $68;
     HEAPF64[$71 >> 3] = $73;
     $74 = Math_imul($$1161, $6) | 0;
     $$2 = $$1161;
     while (1) {
      if (($$2 | 0) >= ($6 | 0)) break;
      $85 = (HEAP32[$0 >> 2] | 0) + ($$2 + $74 << 3) | 0;
      HEAPF64[$85 >> 3] = +HEAPF64[$85 >> 3] - ($68 * +HEAPF64[$70 + ($$2 << 3) >> 3] + $73 * +HEAPF64[$23 + ($$2 << 3) >> 3]);
      $$2 = $$2 + 1 | 0;
     }
     $$1161$in = $$1161;
    }
   } while (0);
   $$0 = $30;
  }
  if (($6 | 0) <= 1) if (($6 | 0) == 1) {
   $$pre$phiZ2D = 0;
   $107 = HEAP32[$0 >> 2] | 0;
   $110 = HEAP32[$1 >> 2] | 0;
   label = 27;
  } else $$1$in = $6; else {
   $90 = HEAP32[$0 >> 2] | 0;
   $91 = Math_imul($17, $6) | 0;
   $95 = HEAP32[$1 >> 2] | 0;
   HEAPF64[$95 + ($17 << 3) >> 3] = +HEAPF64[$90 + ($91 + $17 << 3) >> 3];
   $97 = $6 + -1 | 0;
   HEAPF64[(HEAP32[$2 >> 2] | 0) + ($17 << 3) >> 3] = +HEAPF64[$90 + ($97 + $91 << 3) >> 3];
   $$pre$phiZ2D = $97;
   $107 = $90;
   $110 = $95;
   label = 27;
  }
  if ((label | 0) == 27) {
   $106 = $107 + ((Math_imul($$pre$phiZ2D, $6) | 0) + $$pre$phiZ2D << 3) | 0;
   $$1$in$ph = $6;
   $$sink = +HEAPF64[$106 >> 3];
   $$sink171 = $110 + ($$pre$phiZ2D << 3) | 0;
   label = 28;
  }
  while (1) {
   if ((label | 0) == 28) {
    label = 0;
    HEAPF64[$$sink171 >> 3] = $$sink;
    $$1$in = $$1$in$ph;
   }
   $$1 = $$1$in + -1 | 0;
   if (($$1$in | 0) <= 0) {
    $$0164 = 0;
    break L1;
   }
   $114 = (HEAP32[$0 >> 2] | 0) + ((Math_imul($$1, $6) | 0) << 3) | 0;
   L42 : do if (($$1$in | 0) <= ($17 | 0)) {
    $117 = $6 - $$1 + -1 | 0;
    $118 = $114 + ($$1$in << 3) | 0;
    $$2162 = $$1$in;
    while (1) {
     if (($$2162 | 0) >= ($6 | 0)) break L42;
     HEAP32[$19 >> 2] = $117;
     HEAP32[$18 >> 2] = $117;
     HEAP32[$3 >> 2] = $118;
     $121 = Math_imul($$2162, $6) | 0;
     HEAP32[$4 >> 2] = (HEAP32[$0 >> 2] | 0) + ($121 + $$1$in << 3);
     $124 = +_arVecInnerproduct($3, $4);
     $$3 = $$1$in;
     while (1) {
      if (($$3 | 0) >= ($6 | 0)) break;
      $131 = (HEAP32[$0 >> 2] | 0) + ($$3 + $121 << 3) | 0;
      HEAPF64[$131 >> 3] = +HEAPF64[$131 >> 3] - $124 * +HEAPF64[$114 + ($$3 << 3) >> 3];
      $$3 = $$3 + 1 | 0;
     }
     $$2162 = $$2162 + 1 | 0;
    }
   } while (0);
   $$3163 = 0;
   while (1) {
    if (($$3163 | 0) >= ($6 | 0)) break;
    HEAPF64[$114 + ($$3163 << 3) >> 3] = 0.0;
    $$3163 = $$3163 + 1 | 0;
   }
   $$1$in$ph = $$1;
   $$sink = 1.0;
   $$sink171 = $114 + ($$1 << 3) | 0;
   label = 28;
  }
 } else $$0164 = -1; while (0);
 STACKTOP = sp;
 return $$0164 | 0;
}

function _jpeg_idct_float($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0243253 = 0, $$0245252 = 0, $$0247251 = 0, $$0254 = 0, $$1250 = 0, $$2249 = 0, $$sink = 0.0, $$sink256 = 0, $102 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0, $127 = 0, $13 = 0, $130 = 0, $132 = 0.0, $134 = 0.0, $135 = 0.0, $136 = 0.0, $138 = 0.0, $140 = 0.0, $141 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $150 = 0.0, $152 = 0.0, $153 = 0.0, $154 = 0.0, $156 = 0.0, $158 = 0.0, $159 = 0.0, $160 = 0.0, $161 = 0.0, $165 = 0.0, $170 = 0.0, $171 = 0.0, $172 = 0.0, $34 = 0.0, $44 = 0.0, $46 = 0, $49 = 0.0, $5 = 0, $55 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $75 = 0.0, $81 = 0.0, $87 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0243253 = $5;
 $$0245252 = HEAP32[$1 + 84 >> 2] | 0;
 $$0247251 = $2;
 $$0254 = 8;
 while (1) {
  $11 = HEAP16[$$0247251 + 16 >> 1] | 0;
  $13 = HEAP16[$$0247251 + 32 >> 1] | 0;
  if (!(($11 | $13) << 16 >> 16)) if (((((HEAP16[$$0247251 + 48 >> 1] | 0) == 0 ? (HEAP16[$$0247251 + 64 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0247251 + 80 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0247251 + 96 >> 1] | 0) == 0 : 0) ? (HEAP16[$$0247251 + 112 >> 1] | 0) == 0 : 0) {
   $34 = +HEAPF32[$$0245252 >> 2] * +(HEAP16[$$0247251 >> 1] | 0);
   HEAPF32[$$0243253 >> 2] = $34;
   HEAPF32[$$0243253 + 32 >> 2] = $34;
   HEAPF32[$$0243253 + 64 >> 2] = $34;
   HEAPF32[$$0243253 + 96 >> 2] = $34;
   HEAPF32[$$0243253 + 128 >> 2] = $34;
   HEAPF32[$$0243253 + 160 >> 2] = $34;
   HEAPF32[$$0243253 + 192 >> 2] = $34;
   $$sink = $34;
   $$sink256 = 56;
  } else {
   $46 = 0;
   label = 9;
  } else {
   $46 = $13;
   label = 9;
  }
  if ((label | 0) == 9) {
   label = 0;
   $44 = +HEAPF32[$$0245252 >> 2] * +(HEAP16[$$0247251 >> 1] | 0);
   $49 = +HEAPF32[$$0245252 + 64 >> 2] * +($46 << 16 >> 16);
   $55 = +HEAPF32[$$0245252 + 128 >> 2] * +(HEAP16[$$0247251 + 64 >> 1] | 0);
   $61 = +HEAPF32[$$0245252 + 192 >> 2] * +(HEAP16[$$0247251 + 96 >> 1] | 0);
   $62 = $44 + $55;
   $63 = $44 - $55;
   $64 = $49 + $61;
   $67 = ($49 - $61) * 1.4142135381698608 - $64;
   $68 = $62 + $64;
   $69 = $62 - $64;
   $70 = $63 + $67;
   $71 = $63 - $67;
   $75 = +HEAPF32[$$0245252 + 32 >> 2] * +($11 << 16 >> 16);
   $81 = +HEAPF32[$$0245252 + 96 >> 2] * +(HEAP16[$$0247251 + 48 >> 1] | 0);
   $87 = +HEAPF32[$$0245252 + 160 >> 2] * +(HEAP16[$$0247251 + 80 >> 1] | 0);
   $93 = +HEAPF32[$$0245252 + 224 >> 2] * +(HEAP16[$$0247251 + 112 >> 1] | 0);
   $94 = $81 + $87;
   $95 = $87 - $81;
   $96 = $75 + $93;
   $97 = $75 - $93;
   $98 = $94 + $96;
   $102 = ($95 + $97) * 1.8477590084075928;
   $107 = $102 - $95 * 2.613126039505005 - $98;
   $108 = ($96 - $94) * 1.4142135381698608 - $107;
   $109 = $102 - $97 * 1.0823922157287598 - $108;
   HEAPF32[$$0243253 >> 2] = $68 + $98;
   HEAPF32[$$0243253 + 224 >> 2] = $68 - $98;
   HEAPF32[$$0243253 + 32 >> 2] = $70 + $107;
   HEAPF32[$$0243253 + 192 >> 2] = $70 - $107;
   HEAPF32[$$0243253 + 64 >> 2] = $71 + $108;
   HEAPF32[$$0243253 + 160 >> 2] = $71 - $108;
   HEAPF32[$$0243253 + 96 >> 2] = $69 + $109;
   $$sink = $69 - $109;
   $$sink256 = 32;
  }
  HEAPF32[$$0243253 + ($$sink256 << 2) >> 2] = $$sink;
  if ($$0254 >>> 0 > 1) {
   $$0243253 = $$0243253 + 4 | 0;
   $$0245252 = $$0245252 + 4 | 0;
   $$0247251 = $$0247251 + 2 | 0;
   $$0254 = $$0254 + -1 | 0;
  } else break;
 }
 $127 = $7 + -384 | 0;
 $$1250 = 0;
 $$2249 = $5;
 while (1) {
  $130 = (HEAP32[$3 + ($$1250 << 2) >> 2] | 0) + $4 | 0;
  $132 = +HEAPF32[$$2249 >> 2] + 512.5;
  $134 = +HEAPF32[$$2249 + 16 >> 2];
  $135 = $132 + $134;
  $136 = $132 - $134;
  $138 = +HEAPF32[$$2249 + 8 >> 2];
  $140 = +HEAPF32[$$2249 + 24 >> 2];
  $141 = $138 + $140;
  $144 = ($138 - $140) * 1.4142135381698608 - $141;
  $145 = $135 + $141;
  $146 = $135 - $141;
  $147 = $136 + $144;
  $148 = $136 - $144;
  $150 = +HEAPF32[$$2249 + 20 >> 2];
  $152 = +HEAPF32[$$2249 + 12 >> 2];
  $153 = $150 + $152;
  $154 = $150 - $152;
  $156 = +HEAPF32[$$2249 + 4 >> 2];
  $158 = +HEAPF32[$$2249 + 28 >> 2];
  $159 = $156 + $158;
  $160 = $156 - $158;
  $161 = $153 + $159;
  $165 = ($154 + $160) * 1.8477590084075928;
  $170 = $165 - $154 * 2.613126039505005 - $161;
  $171 = ($159 - $153) * 1.4142135381698608 - $170;
  $172 = $165 - $160 * 1.0823922157287598 - $171;
  HEAP8[$130 >> 0] = HEAP8[$127 + (~~($145 + $161) & 1023) >> 0] | 0;
  HEAP8[$130 + 7 >> 0] = HEAP8[$127 + (~~($145 - $161) & 1023) >> 0] | 0;
  HEAP8[$130 + 1 >> 0] = HEAP8[$127 + (~~($147 + $170) & 1023) >> 0] | 0;
  HEAP8[$130 + 6 >> 0] = HEAP8[$127 + (~~($147 - $170) & 1023) >> 0] | 0;
  HEAP8[$130 + 2 >> 0] = HEAP8[$127 + (~~($148 + $171) & 1023) >> 0] | 0;
  HEAP8[$130 + 5 >> 0] = HEAP8[$127 + (~~($148 - $171) & 1023) >> 0] | 0;
  HEAP8[$130 + 3 >> 0] = HEAP8[$127 + (~~($146 + $172) & 1023) >> 0] | 0;
  HEAP8[$130 + 4 >> 0] = HEAP8[$127 + (~~($146 - $172) & 1023) >> 0] | 0;
  $$1250 = $$1250 + 1 | 0;
  if (($$1250 | 0) == 8) break; else $$2249 = $$2249 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function _decode_mcu_AC_first($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$035$i = 0, $$080100 = 0, $$081$lcssa = 0, $$081105 = 0, $$084 = 0, $$086$lcssa = 0, $$08696 = 0, $$1 = 0, $$185$lcssa = 0, $$18799 = 0, $$288 = 0, $$lcssa = 0, $102 = 0, $108 = 0, $111 = 0, $113 = 0, $117 = 0, $120 = 0, $121 = 0, $124 = 0, $126 = 0, $16 = 0, $19 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $4 = 0, $54 = 0, $56 = 0, $57 = 0, $61 = 0, $62 = 0, $66 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $77 = 0, $8 = 0, $80 = 0, $86 = 0, $87 = 0, $91 = 0, $92 = 0, $96 = 0, $97 = 0, $98 = 0, $spec$select = 0, dest = 0, label = 0, stop = 0;
 $3 = HEAP32[$0 + 468 >> 2] | 0;
 $4 = $0 + 280 | 0;
 if (HEAP32[$4 >> 2] | 0) {
  $7 = $3 + 56 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  if (!$8) {
   if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 + 464 >> 2] | 0) + 8 >> 2] & 127]($0) | 0)) {
    $16 = HEAP32[$0 >> 2] | 0;
    HEAP32[$16 + 20 >> 2] = 25;
    FUNCTION_TABLE_vi[HEAP32[$16 >> 2] & 255]($0);
   }
   $19 = $0 + 340 | 0;
   if ((HEAP32[$19 >> 2] | 0) > 0) {
    $22 = $0 + 224 | 0;
    $23 = $0 + 412 | 0;
    $24 = $0 + 436 | 0;
    $25 = $0 + 420 | 0;
    $$035$i = 0;
    do {
     $27 = HEAP32[$0 + 344 + ($$035$i << 2) >> 2] | 0;
     if (HEAP32[$22 >> 2] | 0) if (!(HEAP32[$23 >> 2] | 0)) {
      if (!(HEAP32[$25 >> 2] | 0)) label = 10;
     } else label = 13; else label = 10;
     do if ((label | 0) == 10) {
      label = 0;
      dest = HEAP32[$3 + 60 + (HEAP32[$27 + 20 >> 2] << 2) >> 2] | 0;
      stop = dest + 64 | 0;
      do {
       HEAP8[dest >> 0] = 0;
       dest = dest + 1 | 0;
      } while ((dest | 0) < (stop | 0));
      HEAP32[$3 + 24 + ($$035$i << 2) >> 2] = 0;
      HEAP32[$3 + 40 + ($$035$i << 2) >> 2] = 0;
      if (!(HEAP32[$22 >> 2] | 0)) if (!(HEAP32[$24 >> 2] | 0)) break; else {
       label = 13;
       break;
      } else if (!(HEAP32[$23 >> 2] | 0)) break; else {
       label = 13;
       break;
      }
     } while (0);
     if ((label | 0) == 13) {
      label = 0;
      _memset(HEAP32[$3 + 124 + (HEAP32[$27 + 24 >> 2] << 2) >> 2] | 0, 0, 256) | 0;
     }
     $$035$i = $$035$i + 1 | 0;
    } while (($$035$i | 0) < (HEAP32[$19 >> 2] | 0));
   }
   HEAP32[$3 + 12 >> 2] = 0;
   HEAP32[$3 + 16 >> 2] = 0;
   HEAP32[$3 + 20 >> 2] = -16;
   $54 = HEAP32[$4 >> 2] | 0;
   HEAP32[$7 >> 2] = $54;
   $56 = $54;
  } else $56 = $8;
  HEAP32[$7 >> 2] = $56 + -1;
 }
 $57 = $3 + 20 | 0;
 if ((HEAP32[$57 >> 2] | 0) == -1) return 1;
 $61 = HEAP32[$0 + 432 >> 2] | 0;
 $62 = HEAP32[$1 >> 2] | 0;
 $66 = HEAP32[(HEAP32[$0 + 344 >> 2] | 0) + 24 >> 2] | 0;
 $70 = $3 + 124 + ($66 << 2) | 0;
 $71 = $3 + 188 | 0;
 $72 = $0 + 416 | 0;
 $73 = $0 + 424 | 0;
 $74 = $0 + 264 + $66 | 0;
 $$084 = (HEAP32[$0 + 412 >> 2] | 0) + -1 | 0;
 L29 : while (1) {
  $77 = (HEAP32[$70 >> 2] | 0) + ($$084 * 3 | 0) | 0;
  if (_arith_decode($0, $77) | 0) {
   label = 36;
   break;
  }
  $80 = $$084 + 1 | 0;
  if (!(_arith_decode($0, $77 + 1 | 0) | 0)) {
   $$08696 = $77;
   $86 = $80;
   while (1) {
    if (($86 | 0) >= (HEAP32[$72 >> 2] | 0)) {
     label = 23;
     break L29;
    }
    $91 = $$08696 + 3 | 0;
    $92 = $86 + 1 | 0;
    if (!(_arith_decode($0, $$08696 + 4 | 0) | 0)) {
     $$08696 = $91;
     $86 = $92;
    } else {
     $$086$lcssa = $91;
     $$185$lcssa = $86;
     $$lcssa = $92;
     break;
    }
   }
  } else {
   $$086$lcssa = $77;
   $$185$lcssa = $$084;
   $$lcssa = $80;
  }
  $96 = _arith_decode($0, $71) | 0;
  $97 = $$086$lcssa + 2 | 0;
  $98 = _arith_decode($0, $97) | 0;
  if ($98) {
   if (_arith_decode($0, $97) | 0) {
    $102 = $98 << 1;
    $108 = (HEAP32[$70 >> 2] | 0) + (($$185$lcssa | 0) < (HEAPU8[$74 >> 0] | 0 | 0) ? 189 : 217) | 0;
    if (!(_arith_decode($0, $108) | 0)) {
     $$1 = $102;
     $$288 = $108;
    } else {
     $$080100 = $102;
     $$18799 = $108;
     while (1) {
      $111 = $$080100 << 1;
      if (($111 | 0) == 32768) {
       label = 30;
       break L29;
      }
      $117 = $$18799 + 1 | 0;
      if (!(_arith_decode($0, $117) | 0)) {
       $$1 = $111;
       $$288 = $117;
       break;
      } else {
       $$080100 = $111;
       $$18799 = $117;
      }
     }
    }
   } else {
    $$1 = $98;
    $$288 = $97;
   }
   $120 = $$288 + 14 | 0;
   $121 = $$1 >> 1;
   if (!$121) $$081$lcssa = $$1; else {
    $$081105 = $$1;
    $126 = $121;
    while (1) {
     $124 = (_arith_decode($0, $120) | 0) == 0;
     $spec$select = ($124 ? 0 : $126) | $$081105;
     $126 = $126 >> 1;
     if (!$126) {
      $$081$lcssa = $spec$select;
      break;
     } else $$081105 = $spec$select;
    }
   }
  } else $$081$lcssa = 0;
  HEAP16[$62 + (HEAP32[$61 + ($$lcssa << 2) >> 2] << 1) >> 1] = (($96 | 0) == 0 ? $$081$lcssa + 1 | 0 : ~$$081$lcssa) << HEAP32[$73 >> 2];
  if (($$lcssa | 0) < (HEAP32[$72 >> 2] | 0)) $$084 = $$lcssa; else {
   label = 36;
   break;
  }
 }
 if ((label | 0) == 23) {
  $87 = HEAP32[$0 >> 2] | 0;
  HEAP32[$87 + 20 >> 2] = 117;
  FUNCTION_TABLE_vii[HEAP32[$87 + 4 >> 2] & 255]($0, -1);
  HEAP32[$57 >> 2] = -1;
  return 1;
 } else if ((label | 0) == 30) {
  $113 = HEAP32[$0 >> 2] | 0;
  HEAP32[$113 + 20 >> 2] = 117;
  FUNCTION_TABLE_vii[HEAP32[$113 + 4 >> 2] & 255]($0, -1);
  HEAP32[$57 >> 2] = -1;
  return 1;
 } else if ((label | 0) == 36) return 1;
 return 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E12parseNewExprEv($0) {
 $0 = $0 | 0;
 var $$5 = 0, $$7 = 0, $$byval_copy3 = 0, $1 = 0, $10 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $26 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy3 = sp + 48 | 0;
 $1 = sp + 57 | 0;
 $2 = sp + 40 | 0;
 $3 = sp + 56 | 0;
 $4 = sp + 32 | 0;
 $5 = sp + 24 | 0;
 $6 = sp + 16 | 0;
 $7 = sp;
 $8 = sp + 8 | 0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 52665);
 HEAP32[$$byval_copy3 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy3 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy3) | 0) & 1;
 HEAP8[$1 >> 0] = $10;
 $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 == 97 & 1;
 HEAP8[$3 >> 0] = $13;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 53279);
 HEAP32[$$byval_copy3 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$$byval_copy3 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy3) | 0) ? (__ZN12_GLOBAL__N_110StringViewC2EPKc($5, 53282), HEAP32[$$byval_copy3 >> 2] = HEAP32[$5 >> 2], HEAP32[$$byval_copy3 + 4 >> 2] = HEAP32[$5 + 4 >> 2], !(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy3) | 0)) : 0) $$7 = 0; else label = 3;
 do if ((label | 0) == 3) {
  $16 = $0 + 8 | 0;
  $17 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($16) | 0;
  while (1) {
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) break;
   $20 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$$byval_copy3 >> 2] = $20;
   if (!$20) {
    label = 7;
    break;
   }
   __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($16, $$byval_copy3);
  }
  if ((label | 0) == 7) {
   $$7 = 0;
   break;
  }
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($6, $0, $17);
  $22 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
  $23 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($22) | 0;
  HEAP32[$7 >> 2] = $23;
  do if ($23) {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($8, 53285);
   HEAP32[$$byval_copy3 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$$byval_copy3 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
   if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy3) | 0)) {
    if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0)) {
     $$5 = 0;
     break;
    }
    __ZN12_GLOBAL__N_116itanium_demangle9NodeArrayC2Ev($$byval_copy3);
    $$5 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_7NewExprEJRNS0_9NodeArrayERPNS0_4NodeES8_RbSD_EEESB_DpOT0_($0, $6, $7, $$byval_copy3, $1, $3) | 0;
    break;
   }
   $26 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($16) | 0;
   while (1) {
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
     label = 15;
     break;
    }
    $28 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($22) | 0;
    HEAP32[$$byval_copy3 >> 2] = $28;
    if (!$28) {
     label = 13;
     break;
    }
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($16, $$byval_copy3);
   }
   if ((label | 0) == 13) {
    $$5 = 0;
    break;
   } else if ((label | 0) == 15) {
    __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($$byval_copy3, $0, $26);
    $$5 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_7NewExprEJRNS0_9NodeArrayERPNS0_4NodeES9_RbSD_EEESB_DpOT0_($0, $6, $7, $$byval_copy3, $1, $3) | 0;
    break;
   }
  } else $$5 = 0; while (0);
  $$7 = $$5;
 } while (0);
 STACKTOP = sp;
 return $$7 | 0;
}

function _jpeg_calc_output_dimensions($0) {
 $0 = $0 | 0;
 var $$07397 = 0, $$07397$us = 0, $$07596 = 0, $$07596$us = 0, $$083 = 0, $$17482 = 0, $$17681 = 0, $$191 = 0, $$191$us = 0, $$lcssa = 0, $$lcssa$sink = 0, $$lcssa78 = 0, $$lcssa79 = 0, $$lcssa79$us = 0, $$pre = 0, $$sink = 0, $10 = 0, $102 = 0, $105 = 0, $11 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $31 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, $44 = 0, $46 = 0, $47 = 0, $53 = 0, $54 = 0, $56 = 0, $57 = 0, $63 = 0, $64 = 0, $66 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $82 = 0, $86 = 0, $94 = 0, $98 = 0;
 $2 = HEAP32[$0 + 20 >> 2] | 0;
 if (($2 | 0) != 202) {
  $4 = HEAP32[$0 >> 2] | 0;
  HEAP32[$4 + 20 >> 2] = 21;
  HEAP32[$4 + 24 >> 2] = $2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 _jpeg_core_output_dimensions($0);
 $10 = HEAP32[$0 + 216 >> 2] | 0;
 $11 = $0 + 36 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 $13 = ($12 | 0) > 0;
 if ($13) {
  $15 = HEAP32[$0 + 324 >> 2] | 0;
  $19 = (HEAP32[$0 + 76 >> 2] | 0) == 0 ? 4 : 8;
  $21 = $0 + 320 | 0;
  $23 = HEAP32[$0 + 328 >> 2] | 0;
  if (($15 | 0) > ($19 | 0)) {
   $24 = ($23 | 0) > ($19 | 0);
   $25 = $15 << 1;
   $$07397$us = $10;
   $$07596$us = 0;
   while (1) {
    $26 = $$07397$us + 36 | 0;
    HEAP32[$26 >> 2] = $15;
    L10 : do if ($24) $$lcssa79$us = $23; else {
     $33 = HEAP32[$21 >> 2] | 0;
     $31 = HEAP32[$$07397$us + 12 >> 2] | 0;
     $$191$us = 1;
     $116 = $23;
     while (1) {
      $$191$us = $$191$us << 1;
      if (($33 | 0) % (Math_imul($$191$us, $31) | 0) | 0 | 0) {
       $$lcssa79$us = $116;
       break L10;
      }
      $27 = Math_imul($23, $$191$us) | 0;
      if (($27 | 0) > ($19 | 0)) {
       $$lcssa79$us = $27;
       break;
      } else $116 = $27;
     }
    } while (0);
    $35 = $$07397$us + 40 | 0;
    HEAP32[$35 >> 2] = $$lcssa79$us;
    $36 = $$lcssa79$us << 1;
    if (($15 | 0) <= ($36 | 0)) {
     if (($$lcssa79$us | 0) > ($25 | 0)) HEAP32[$35 >> 2] = $25;
    } else HEAP32[$26 >> 2] = $36;
    $$07596$us = $$07596$us + 1 | 0;
    if (($$07596$us | 0) >= ($12 | 0)) break; else $$07397$us = $$07397$us + 88 | 0;
   }
  } else {
   $$pre = HEAP32[$0 + 316 >> 2] | 0;
   $44 = ($23 | 0) > ($19 | 0);
   $$07397 = $10;
   $$07596 = 0;
   while (1) {
    $46 = HEAP32[$$07397 + 8 >> 2] | 0;
    $$083 = 1;
    $117 = $15;
    while (1) {
     $$083 = $$083 << 1;
     if (($$pre | 0) % (Math_imul($$083, $46) | 0) | 0 | 0) {
      $$lcssa78 = $117;
      break;
     }
     $47 = Math_imul($15, $$083) | 0;
     if (($47 | 0) > ($19 | 0)) {
      $$lcssa78 = $47;
      break;
     } else $117 = $47;
    }
    $53 = $$07397 + 36 | 0;
    HEAP32[$53 >> 2] = $$lcssa78;
    L28 : do if ($44) $$lcssa79 = $23; else {
     $54 = HEAP32[$21 >> 2] | 0;
     $56 = HEAP32[$$07397 + 12 >> 2] | 0;
     $$191 = 1;
     $118 = $23;
     while (1) {
      $$191 = $$191 << 1;
      if (($54 | 0) % (Math_imul($$191, $56) | 0) | 0 | 0) {
       $$lcssa79 = $118;
       break L28;
      }
      $57 = Math_imul($23, $$191) | 0;
      if (($57 | 0) > ($19 | 0)) {
       $$lcssa79 = $57;
       break;
      } else $118 = $57;
     }
    } while (0);
    $63 = $$07397 + 40 | 0;
    HEAP32[$63 >> 2] = $$lcssa79;
    $64 = $$lcssa79 << 1;
    if (($$lcssa78 | 0) <= ($64 | 0)) {
     $66 = $$lcssa78 << 1;
     if (($$lcssa79 | 0) > ($66 | 0)) HEAP32[$63 >> 2] = $66;
    } else HEAP32[$53 >> 2] = $64;
    $$07596 = $$07596 + 1 | 0;
    if (($$07596 | 0) >= ($12 | 0)) break; else $$07397 = $$07397 + 88 | 0;
   }
  }
  if ($13) {
   $71 = $0 + 28 | 0;
   $72 = $0 + 316 | 0;
   $73 = $0 + 428 | 0;
   $74 = $0 + 32 | 0;
   $75 = $0 + 320 | 0;
   $$17482 = $10;
   $$17681 = 0;
   while (1) {
    $82 = Math_imul(Math_imul(HEAP32[$$17482 + 8 >> 2] | 0, HEAP32[$71 >> 2] | 0) | 0, HEAP32[$$17482 + 36 >> 2] | 0) | 0;
    $86 = _jdiv_round_up($82, Math_imul(HEAP32[$73 >> 2] | 0, HEAP32[$72 >> 2] | 0) | 0) | 0;
    HEAP32[$$17482 + 44 >> 2] = $86;
    $94 = Math_imul(Math_imul(HEAP32[$$17482 + 12 >> 2] | 0, HEAP32[$74 >> 2] | 0) | 0, HEAP32[$$17482 + 40 >> 2] | 0) | 0;
    $98 = _jdiv_round_up($94, Math_imul(HEAP32[$73 >> 2] | 0, HEAP32[$75 >> 2] | 0) | 0) | 0;
    HEAP32[$$17482 + 48 >> 2] = $98;
    $$17681 = $$17681 + 1 | 0;
    $102 = HEAP32[$11 >> 2] | 0;
    if (($$17681 | 0) >= ($102 | 0)) {
     $$lcssa = $102;
     break;
    } else $$17482 = $$17482 + 88 | 0;
   }
  } else $$lcssa = $12;
 } else $$lcssa = $12;
 $105 = HEAP32[$0 + 44 >> 2] | 0;
 switch ($105 | 0) {
 case 1:
  {
   $$lcssa$sink = $105;
   break;
  }
 case 6:
 case 2:
  {
   $$lcssa$sink = 3;
   break;
  }
 case 7:
 case 3:
  {
   $$lcssa$sink = 3;
   break;
  }
 case 5:
 case 4:
  {
   $$lcssa$sink = 4;
   break;
  }
 default:
  $$lcssa$sink = $$lcssa;
 }
 HEAP32[$0 + 120 >> 2] = $$lcssa$sink;
 HEAP32[$0 + 124 >> 2] = (HEAP32[$0 + 84 >> 2] | 0) == 0 ? $$lcssa$sink : 1;
 if (!(_use_merged_upsample($0) | 0)) {
  $$sink = 1;
  $115 = $0 + 128 | 0;
  HEAP32[$115 >> 2] = $$sink;
  return;
 }
 $$sink = HEAP32[$0 + 320 >> 2] | 0;
 $115 = $0 + 128 | 0;
 HEAP32[$115 >> 2] = $$sink;
 return;
}

function __ZNK6vision4NodeILi96EE7nearestERNSt3__26vectorIPKS1_NS2_9allocatorIS5_EEEERNS2_14priority_queueINS_17PriorityQueueItemILi96EEENS3_ISC_NS6_ISC_EEEENS2_4lessISC_EEEEPKh($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$043 = 0, $$045 = 0, $$046 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $101 = 0, $102 = 0, $107 = 0, $109 = 0, $110 = 0, $14 = 0, $25 = 0, $31 = 0, $36 = 0, $37 = 0, $4 = 0, $41 = 0, $48 = 0, $5 = 0, $53 = 0, $57 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $68 = 0, $69 = 0, $7 = 0, $71 = 0, $78 = 0, $8 = 0, $85 = 0, $86 = 0, $92 = 0, $93 = 0, $96 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy1 = sp + 8 | 0;
 $$byval_copy = sp + 36 | 0;
 $4 = sp + 32 | 0;
 $5 = sp + 28 | 0;
 $6 = sp;
 $7 = sp + 16 | 0;
 $8 = $0 + 104 | 0;
 __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEEC2Em($7, (HEAP32[$0 + 108 >> 2] | 0) - (HEAP32[$8 >> 2] | 0) >> 2);
 $14 = $7 + 4 | 0;
 $$043 = -1;
 $$045 = 0;
 $$046 = -1;
 while (1) {
  if ($$045 >>> 0 >= (HEAP32[$14 >> 2] | 0) - (HEAP32[$7 >> 2] | 0) >> 3 >>> 0) break;
  $25 = __ZN6vision15HammingDistanceILi96EEEjPKhS2_((HEAP32[(HEAP32[$8 >> 2] | 0) + ($$045 << 2) >> 2] | 0) + 4 | 0, $3) | 0;
  __ZN6vision17PriorityQueueItemILi96EEC2EPKNS_4NodeILi96EEEj($$byval_copy1, HEAP32[(HEAP32[$8 >> 2] | 0) + ($$045 << 2) >> 2] | 0, $25);
  $31 = $$byval_copy1;
  $36 = HEAP32[$31 + 4 >> 2] | 0;
  $37 = (HEAP32[$7 >> 2] | 0) + ($$045 << 3) | 0;
  HEAP32[$37 >> 2] = HEAP32[$31 >> 2];
  HEAP32[$37 + 4 >> 2] = $36;
  __ZN6vision17PriorityQueueItemILi96EED2Ev($$byval_copy1);
  $41 = $25 >>> 0 < $$043 >>> 0;
  $spec$select = $41 ? $$045 : $$046;
  $$043 = $41 ? $25 : $$043;
  $$045 = $$045 + 1 | 0;
  $$046 = $spec$select;
 }
 if (($$046 | 0) == -1) {
  $48 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36137) | 0, 33262) | 0, 39072) | 0, 155) | 0, 39079) | 0, 36171) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $48 + (HEAP32[(HEAP32[$48 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $53 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 66512) | 0;
  $57 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$53 >> 2] | 0) + 28 >> 2] & 127]($53, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($48, $57) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($48) | 0;
  _abort();
 }
 $60 = HEAP32[(HEAP32[$8 >> 2] | 0) + ($$046 << 2) >> 2] | 0;
 HEAP32[$$byval_copy1 >> 2] = $60;
 $61 = $1 + 4 | 0;
 $62 = HEAP32[$61 >> 2] | 0;
 $63 = $1 + 8 | 0;
 if ($62 >>> 0 < (HEAP32[$63 >> 2] | 0) >>> 0) {
  HEAP32[$62 >> 2] = $60;
  HEAP32[$61 >> 2] = (HEAP32[$61 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($1, $$byval_copy1);
 $68 = $2 + 4 | 0;
 $69 = $2 + 8 | 0;
 $$0 = 0;
 while (1) {
  $71 = HEAP32[$7 >> 2] | 0;
  if ($$0 >>> 0 >= (HEAP32[$14 >> 2] | 0) - $71 >> 3 >>> 0) break;
  do if (($$0 | 0) != ($$046 | 0)) {
   $78 = __ZNK6vision17PriorityQueueItemILi96EE4distEv($71 + ($$0 << 3) | 0) | 0;
   if (($78 | 0) == (__ZNK6vision17PriorityQueueItemILi96EE4distEv((HEAP32[$7 >> 2] | 0) + ($$046 << 3) | 0) | 0)) {
    $85 = HEAP32[(HEAP32[$8 >> 2] | 0) + ($$0 << 2) >> 2] | 0;
    HEAP32[$$byval_copy1 >> 2] = $85;
    $86 = HEAP32[$61 >> 2] | 0;
    if ($86 >>> 0 < (HEAP32[$63 >> 2] | 0) >>> 0) {
     HEAP32[$86 >> 2] = $85;
     HEAP32[$61 >> 2] = (HEAP32[$61 >> 2] | 0) + 4;
    } else __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($1, $$byval_copy1);
    break;
   } else {
    $92 = (HEAP32[$7 >> 2] | 0) + ($$0 << 3) | 0;
    $93 = HEAP32[$68 >> 2] | 0;
    if (($93 | 0) == (HEAP32[$69 >> 2] | 0)) {
     __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($2, $92);
     $110 = HEAP32[$68 >> 2] | 0;
    } else {
     $96 = $92;
     $101 = HEAP32[$96 + 4 >> 2] | 0;
     $102 = $93;
     HEAP32[$102 >> 2] = HEAP32[$96 >> 2];
     HEAP32[$102 + 4 >> 2] = $101;
     $107 = (HEAP32[$68 >> 2] | 0) + 8 | 0;
     HEAP32[$68 >> 2] = $107;
     $110 = $107;
    }
    $109 = HEAP32[$2 >> 2] | 0;
    HEAP32[$4 >> 2] = $109;
    HEAP32[$5 >> 2] = $110;
    HEAP32[$$byval_copy >> 2] = HEAP32[$4 >> 2];
    HEAP32[$$byval_copy1 >> 2] = HEAP32[$5 >> 2];
    __ZNSt3__29__sift_upIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeE($$byval_copy, $$byval_copy1, $6, $110 - $109 >> 3);
    break;
   }
  } while (0);
  $$0 = $$0 + 1 | 0;
 }
 __ZNSt3__213__vector_baseIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEED2Ev($7);
 STACKTOP = sp;
 return;
}

function _start_input_pass_79($0) {
 $0 = $0 | 0;
 var $$030$i = 0, $$07881$i = 0, $$07982$i = 0, $$pre33$i = 0, $1 = 0, $10 = 0, $101 = 0, $105 = 0, $112 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $2 = 0, $20 = 0, $21 = 0, $27 = 0, $38 = 0, $41 = 0, $49 = 0, $5 = 0, $51 = 0, $55 = 0, $57 = 0, $60 = 0, $62 = 0, $66 = 0, $70 = 0, $75 = 0, $79 = 0, $81 = 0, $86 = 0, $90 = 0, $91 = 0, $94 = 0, $96 = 0, $97 = 0, label = 0;
 $1 = $0 + 340 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (($2 | 0) != 1) {
  if (($2 + -1 | 0) >>> 0 > 3) {
   $27 = HEAP32[$0 >> 2] | 0;
   HEAP32[$27 + 20 >> 2] = 27;
   HEAP32[$27 + 24 >> 2] = $2;
   HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = 4;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  }
  $38 = $0 + 428 | 0;
  $41 = _jdiv_round_up(HEAP32[$0 + 28 >> 2] | 0, Math_imul(HEAP32[$38 >> 2] | 0, HEAP32[$0 + 316 >> 2] | 0) | 0) | 0;
  HEAP32[$0 + 360 >> 2] = $41;
  $49 = _jdiv_round_up(HEAP32[$0 + 32 >> 2] | 0, Math_imul(HEAP32[$38 >> 2] | 0, HEAP32[$0 + 320 >> 2] | 0) | 0) | 0;
  HEAP32[$0 + 364 >> 2] = $49;
  $51 = $0 + 368 | 0;
  HEAP32[$51 >> 2] = 0;
  if ((HEAP32[$1 >> 2] | 0) <= 0) {
   $117 = $0 + 468 | 0;
   $118 = HEAP32[$117 >> 2] | 0;
   $119 = HEAP32[$118 >> 2] | 0;
   FUNCTION_TABLE_vi[$119 & 255]($0);
   $120 = $0 + 452 | 0;
   $121 = HEAP32[$120 >> 2] | 0;
   $122 = HEAP32[$121 >> 2] | 0;
   FUNCTION_TABLE_vi[$122 & 255]($0);
   $123 = HEAP32[$120 >> 2] | 0;
   $124 = $123 + 4 | 0;
   $125 = HEAP32[$124 >> 2] | 0;
   $126 = $0 + 460 | 0;
   $127 = HEAP32[$126 >> 2] | 0;
   HEAP32[$127 >> 2] = $125;
   return;
  }
  $$07982$i = 0;
  $79 = 0;
  while (1) {
   $55 = HEAP32[$0 + 344 + ($$07982$i << 2) >> 2] | 0;
   $57 = HEAP32[$55 + 8 >> 2] | 0;
   HEAP32[$55 + 56 >> 2] = $57;
   $60 = HEAP32[$55 + 12 >> 2] | 0;
   HEAP32[$55 + 60 >> 2] = $60;
   $62 = Math_imul($60, $57) | 0;
   HEAP32[$55 + 64 >> 2] = $62;
   $66 = Math_imul(HEAP32[$55 + 36 >> 2] | 0, $57) | 0;
   HEAP32[$55 + 68 >> 2] = $66;
   $70 = ((HEAP32[$55 + 28 >> 2] | 0) >>> 0) % ($57 >>> 0) | 0;
   HEAP32[$55 + 72 >> 2] = ($70 | 0) == 0 ? $57 : $70;
   $75 = ((HEAP32[$55 + 32 >> 2] | 0) >>> 0) % ($60 >>> 0) | 0;
   HEAP32[$55 + 76 >> 2] = ($75 | 0) == 0 ? $60 : $75;
   if (($62 + $79 | 0) > 10) {
    $81 = HEAP32[$0 >> 2] | 0;
    HEAP32[$81 + 20 >> 2] = 14;
    FUNCTION_TABLE_vi[HEAP32[$81 >> 2] & 255]($0);
   }
   if (($62 | 0) > 0) {
    $$07881$i = $62;
    while (1) {
     $86 = HEAP32[$51 >> 2] | 0;
     HEAP32[$51 >> 2] = $86 + 1;
     HEAP32[$0 + 372 + ($86 << 2) >> 2] = $$07982$i;
     if (($$07881$i | 0) > 1) $$07881$i = $$07881$i + -1 | 0; else break;
    }
   }
   $90 = $$07982$i + 1 | 0;
   $91 = HEAP32[$1 >> 2] | 0;
   if (($90 | 0) >= ($91 | 0)) break;
   $$07982$i = $90;
   $79 = HEAP32[$51 >> 2] | 0;
  }
  if (($91 | 0) > 0) $128 = $91; else {
   $117 = $0 + 468 | 0;
   $118 = HEAP32[$117 >> 2] | 0;
   $119 = HEAP32[$118 >> 2] | 0;
   FUNCTION_TABLE_vi[$119 & 255]($0);
   $120 = $0 + 452 | 0;
   $121 = HEAP32[$120 >> 2] | 0;
   $122 = HEAP32[$121 >> 2] | 0;
   FUNCTION_TABLE_vi[$122 & 255]($0);
   $123 = HEAP32[$120 >> 2] | 0;
   $124 = $123 + 4 | 0;
   $125 = HEAP32[$124 >> 2] | 0;
   $126 = $0 + 460 | 0;
   $127 = HEAP32[$126 >> 2] | 0;
   HEAP32[$127 >> 2] = $125;
   return;
  }
 } else {
  $5 = HEAP32[$0 + 344 >> 2] | 0;
  HEAP32[$0 + 360 >> 2] = HEAP32[$5 + 28 >> 2];
  $10 = HEAP32[$5 + 32 >> 2] | 0;
  HEAP32[$0 + 364 >> 2] = $10;
  HEAP32[$5 + 56 >> 2] = 1;
  HEAP32[$5 + 60 >> 2] = 1;
  HEAP32[$5 + 64 >> 2] = 1;
  HEAP32[$5 + 68 >> 2] = HEAP32[$5 + 36 >> 2];
  HEAP32[$5 + 72 >> 2] = 1;
  $20 = HEAP32[$5 + 12 >> 2] | 0;
  $21 = ($10 >>> 0) % ($20 >>> 0) | 0;
  HEAP32[$5 + 76 >> 2] = ($21 | 0) == 0 ? $20 : $21;
  HEAP32[$0 + 368 >> 2] = 1;
  HEAP32[$0 + 372 >> 2] = 0;
  $128 = 1;
 }
 $94 = $0 + 4 | 0;
 $$030$i = 0;
 $129 = $128;
 while (1) {
  $96 = HEAP32[$0 + 344 + ($$030$i << 2) >> 2] | 0;
  $97 = $96 + 80 | 0;
  if (!(HEAP32[$97 >> 2] | 0)) {
   $101 = HEAP32[$96 + 16 >> 2] | 0;
   $$pre33$i = $0 + 164 + ($101 << 2) | 0;
   if ($101 >>> 0 <= 3 ? (HEAP32[$$pre33$i >> 2] | 0) != 0 : 0) {} else {
    $105 = HEAP32[$0 >> 2] | 0;
    HEAP32[$105 + 20 >> 2] = 54;
    HEAP32[$105 + 24 >> 2] = $101;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   }
   $112 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$94 >> 2] >> 2] & 63]($0, 1, 132) | 0;
   _memcpy($112 | 0, HEAP32[$$pre33$i >> 2] | 0, 132) | 0;
   HEAP32[$97 >> 2] = $112;
   $116 = HEAP32[$1 >> 2] | 0;
  } else $116 = $129;
  $$030$i = $$030$i + 1 | 0;
  if (($$030$i | 0) >= ($116 | 0)) break; else $129 = $116;
 }
 $117 = $0 + 468 | 0;
 $118 = HEAP32[$117 >> 2] | 0;
 $119 = HEAP32[$118 >> 2] | 0;
 FUNCTION_TABLE_vi[$119 & 255]($0);
 $120 = $0 + 452 | 0;
 $121 = HEAP32[$120 >> 2] | 0;
 $122 = HEAP32[$121 >> 2] | 0;
 FUNCTION_TABLE_vi[$122 & 255]($0);
 $123 = HEAP32[$120 >> 2] | 0;
 $124 = $123 + 4 | 0;
 $125 = HEAP32[$124 >> 2] | 0;
 $126 = $0 + 460 | 0;
 $127 = HEAP32[$126 >> 2] | 0;
 HEAP32[$127 >> 2] = $125;
 return;
}

function __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = +$3;
 var $$sink = 0, $100 = 0, $11 = 0.0, $16 = 0, $17 = 0, $23 = 0, $26 = 0, $31 = 0, $38 = 0, $4 = 0, $43 = 0, $47 = 0, $56 = 0, $61 = 0, $65 = 0, $67 = 0, $7 = 0, $73 = 0, $78 = 0, $82 = 0, $90 = 0, $95 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 $7 = ~~+Math_floor(+(+__ZN6vision4log2IfEET_S1_($3)));
 HEAP32[$1 >> 2] = $7;
 $11 = +Math_log(+($3 / +(1 << $7 | 0)));
 $16 = ~~+__ZN6vision5roundIfEET_S1_(+HEAPF32[$0 + 28 >> 2] * $11);
 HEAP32[$2 >> 2] = $16;
 $17 = $0 + 20 | 0;
 if (((HEAP32[$17 >> 2] | 0) + -1 | 0) == ($16 | 0)) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 1;
  HEAP32[$2 >> 2] = 0;
  $100 = 0;
 } else $100 = $16;
 $23 = HEAP32[$1 >> 2] | 0;
 if (($23 | 0) >= 0) {
  $26 = HEAP32[$0 + 16 >> 2] | 0;
  if (($23 | 0) < ($26 | 0)) $67 = $100; else {
   HEAP32[$1 >> 2] = $26 + -1;
   $$sink = (HEAP32[$17 >> 2] | 0) + -1 | 0;
   label = 7;
  }
 } else {
  HEAP32[$1 >> 2] = 0;
  $$sink = 0;
  label = 7;
 }
 if ((label | 0) == 7) {
  HEAP32[$2 >> 2] = $$sink;
  $67 = $$sink;
 }
 $31 = HEAP32[$1 >> 2] | 0;
 if (($31 | 0) <= -1) {
  $38 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37937) | 0, 37972) | 0, 39072) | 0, 268) | 0, 39079) | 0, 38065) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $38 + (HEAP32[(HEAP32[$38 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $43 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $47 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$43 >> 2] | 0) + 28 >> 2] & 127]($43, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($38, $47) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($38) | 0;
  _abort();
 }
 if (($31 | 0) >= (HEAP32[$0 + 16 >> 2] | 0)) {
  $56 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 38089) | 0, 37972) | 0, 39072) | 0, 269) | 0, 39079) | 0, 38133) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $56 + (HEAP32[(HEAP32[$56 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $61 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $65 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$61 >> 2] | 0) + 28 >> 2] & 127]($61, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($56, $65) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($56) | 0;
  _abort();
 }
 if (($67 | 0) <= -1) {
  $73 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 38176) | 0, 37972) | 0, 39072) | 0, 270) | 0, 39079) | 0, 38210) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $73 + (HEAP32[(HEAP32[$73 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $78 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $82 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$78 >> 2] | 0) + 28 >> 2] & 127]($78, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($73, $82) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($73) | 0;
  _abort();
 }
 if (($67 | 0) < (HEAP32[$17 >> 2] | 0)) {
  STACKTOP = sp;
  return;
 } else {
  $90 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 38233) | 0, 37972) | 0, 39072) | 0, 271) | 0, 39079) | 0, 38284) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $90 + (HEAP32[(HEAP32[$90 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $95 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $99 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$95 >> 2] | 0) + 28 >> 2] & 127]($95, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($90, $99) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($90) | 0;
  _abort();
 }
}

function _process_data_context_main($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$04347$i = 0, $$04546$i = 0, $$048$i = 0, $$05759$i = 0, $$05860$i = 0, $$061$i = 0, $$pre$phi59Z2D = 0, $$pre$phi61Z2D = 0, $$pre$phi63Z2D = 0, $$pre$phi65Z2D = 0, $101 = 0, $103 = 0, $105 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $118 = 0, $121 = 0, $124 = 0, $126 = 0, $127 = 0, $128 = 0, $131 = 0, $138 = 0, $149 = 0, $19 = 0, $22 = 0, $32 = 0, $33 = 0, $4 = 0, $41 = 0, $48 = 0, $5 = 0, $50 = 0, $54 = 0, $57 = 0, $6 = 0, $62 = 0, $63 = 0, $66 = 0, $74 = 0, $75 = 0, $78 = 0, $90 = 0, $spec$select$i = 0, label = 0;
 $4 = $0 + 448 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $5 + 56 | 0;
 do if (!(HEAP32[$6 >> 2] | 0)) if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 + 452 >> 2] | 0) + 12 >> 2] & 127]($0, HEAP32[$5 + 60 + (HEAP32[$5 + 68 >> 2] << 2) >> 2] | 0) | 0)) return; else {
  HEAP32[$6 >> 2] = 1;
  $19 = $5 + 76 | 0;
  HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 1;
  break;
 } while (0);
 $22 = $5 + 72 | 0;
 switch (HEAP32[$22 >> 2] | 0) {
 case 2:
  {
   $32 = $5 + 48 | 0;
   $33 = $5 + 52 | 0;
   FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[$0 + 456 >> 2] | 0) + 4 >> 2] & 7]($0, HEAP32[$5 + 60 + (HEAP32[$5 + 68 >> 2] << 2) >> 2] | 0, $32, HEAP32[$33 >> 2] | 0, $1, $2, $3);
   if ((HEAP32[$32 >> 2] | 0) >>> 0 < (HEAP32[$33 >> 2] | 0) >>> 0) return;
   HEAP32[$22 >> 2] = 0;
   if ((HEAP32[$2 >> 2] | 0) >>> 0 < $3 >>> 0) {
    $$pre$phi59Z2D = $32;
    $$pre$phi61Z2D = $33;
    label = 9;
   } else return;
   break;
  }
 case 0:
  {
   $$pre$phi59Z2D = $5 + 48 | 0;
   $$pre$phi61Z2D = $5 + 52 | 0;
   label = 9;
   break;
  }
 case 1:
  {
   $$pre$phi63Z2D = $5 + 48 | 0;
   $$pre$phi65Z2D = $5 + 52 | 0;
   break;
  }
 default:
  return;
 }
 if ((label | 0) == 9) {
  HEAP32[$$pre$phi59Z2D >> 2] = 0;
  $41 = HEAP32[$0 + 328 >> 2] | 0;
  HEAP32[$$pre$phi61Z2D >> 2] = $41 + -1;
  if ((HEAP32[$5 + 76 >> 2] | 0) == (HEAP32[$0 + 332 >> 2] | 0) ? ($48 = HEAP32[$4 >> 2] | 0, $50 = HEAP32[$0 + 36 >> 2] | 0, ($50 | 0) > 0) : 0) {
   $54 = $48 + 52 | 0;
   $57 = $48 + 60 + (HEAP32[$48 + 68 >> 2] << 2) | 0;
   $$04347$i = HEAP32[$0 + 216 >> 2] | 0;
   $$048$i = 0;
   while (1) {
    $62 = Math_imul(HEAP32[$$04347$i + 40 >> 2] | 0, HEAP32[$$04347$i + 12 >> 2] | 0) | 0;
    $63 = ($62 | 0) / ($41 | 0) | 0;
    $66 = ((HEAP32[$$04347$i + 48 >> 2] | 0) >>> 0) % ($62 >>> 0) | 0;
    $spec$select$i = ($66 | 0) == 0 ? $62 : $66;
    if (!$$048$i) HEAP32[$54 >> 2] = (($spec$select$i + -1 | 0) / ($63 | 0) | 0) + 1;
    $74 = HEAP32[(HEAP32[$57 >> 2] | 0) + ($$048$i << 2) >> 2] | 0;
    $75 = $63 << 1;
    if (($63 | 0) > 0) {
     $78 = $74 + ($spec$select$i + -1 << 2) | 0;
     $$04546$i = 0;
     do {
      HEAP32[$74 + ($$04546$i + $spec$select$i << 2) >> 2] = HEAP32[$78 >> 2];
      $$04546$i = $$04546$i + 1 | 0;
     } while (($$04546$i | 0) < ($75 | 0));
    }
    $$048$i = $$048$i + 1 | 0;
    if (($$048$i | 0) == ($50 | 0)) break; else $$04347$i = $$04347$i + 88 | 0;
   }
  }
  HEAP32[$22 >> 2] = 1;
  $$pre$phi63Z2D = $$pre$phi59Z2D;
  $$pre$phi65Z2D = $$pre$phi61Z2D;
 }
 $90 = $5 + 68 | 0;
 FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[$0 + 456 >> 2] | 0) + 4 >> 2] & 7]($0, HEAP32[$5 + 60 + (HEAP32[$90 >> 2] << 2) >> 2] | 0, $$pre$phi63Z2D, HEAP32[$$pre$phi65Z2D >> 2] | 0, $1, $2, $3);
 if ((HEAP32[$$pre$phi63Z2D >> 2] | 0) >>> 0 < (HEAP32[$$pre$phi65Z2D >> 2] | 0) >>> 0) return;
 if ((HEAP32[$5 + 76 >> 2] | 0) == 1) {
  $101 = HEAP32[$4 >> 2] | 0;
  $103 = HEAP32[$0 + 328 >> 2] | 0;
  $105 = HEAP32[$0 + 36 >> 2] | 0;
  if (($105 | 0) > 0) {
   $109 = $101 + 60 | 0;
   $110 = $101 + 64 | 0;
   $111 = $103 + 1 | 0;
   $112 = $103 + 2 | 0;
   $$05860$i = HEAP32[$0 + 216 >> 2] | 0;
   $$061$i = 0;
   while (1) {
    $118 = (Math_imul(HEAP32[$$05860$i + 40 >> 2] | 0, HEAP32[$$05860$i + 12 >> 2] | 0) | 0) / ($103 | 0) | 0;
    $121 = HEAP32[(HEAP32[$109 >> 2] | 0) + ($$061$i << 2) >> 2] | 0;
    $124 = HEAP32[(HEAP32[$110 >> 2] | 0) + ($$061$i << 2) >> 2] | 0;
    if (($118 | 0) > 0) {
     $126 = Math_imul($118, $111) | 0;
     $127 = Math_imul($118, $112) | 0;
     $$05759$i = 0;
     do {
      $128 = $$05759$i + $126 | 0;
      $131 = $$05759$i - $118 | 0;
      HEAP32[$121 + ($131 << 2) >> 2] = HEAP32[$121 + ($128 << 2) >> 2];
      HEAP32[$124 + ($131 << 2) >> 2] = HEAP32[$124 + ($128 << 2) >> 2];
      $138 = $$05759$i + $127 | 0;
      HEAP32[$121 + ($138 << 2) >> 2] = HEAP32[$121 + ($$05759$i << 2) >> 2];
      HEAP32[$124 + ($138 << 2) >> 2] = HEAP32[$124 + ($$05759$i << 2) >> 2];
      $$05759$i = $$05759$i + 1 | 0;
     } while (($$05759$i | 0) != ($118 | 0));
    }
    $$061$i = $$061$i + 1 | 0;
    if (($$061$i | 0) == ($105 | 0)) {
     $149 = $103;
     break;
    } else $$05860$i = $$05860$i + 88 | 0;
   }
  } else $149 = $103;
 } else $149 = HEAP32[$0 + 328 >> 2] | 0;
 HEAP32[$90 >> 2] = HEAP32[$90 >> 2] ^ 1;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$$pre$phi63Z2D >> 2] = $149 + 1;
 HEAP32[$$pre$phi65Z2D >> 2] = $149 + 2;
 HEAP32[$22 >> 2] = 2;
 return;
}

function __ZN6vision14BinarykMedoidsILi96EE6assignERNSt3__26vectorIiNS2_9allocatorIiEEEEPKhiPKiiSB_i($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0 = 0, $$038 = 0, $$039 = 0, $$040 = 0, $$1 = 0, $20 = 0, $25 = 0, $29 = 0, $36 = 0, $41 = 0, $45 = 0, $52 = 0, $57 = 0, $61 = 0, $68 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $85 = 0, $91 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp;
 if (((HEAP32[$1 + 4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) >> 2 | 0) != ($5 | 0)) {
  $20 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33206) | 0, 33707) | 0, 39072) | 0, 198) | 0, 39079) | 0, 34039) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $20 + (HEAP32[(HEAP32[$20 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $25 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 66512) | 0;
  $29 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$25 >> 2] | 0) + 28 >> 2] & 127]($25, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($20, $29) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($20) | 0;
  _abort();
 }
 if (($3 | 0) <= 0) {
  $36 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33824) | 0, 33707) | 0, 39072) | 0, 199) | 0, 39079) | 0, 33864) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $36 + (HEAP32[(HEAP32[$36 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $41 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 66512) | 0;
  $45 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$41 >> 2] | 0) + 28 >> 2] & 127]($41, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($36, $45) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($36) | 0;
  _abort();
 }
 if (($5 | 0) > ($3 | 0)) {
  $52 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 33900) | 0, 33707) | 0, 39072) | 0, 200) | 0, 39079) | 0, 33951) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $52 + (HEAP32[(HEAP32[$52 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $57 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 66512) | 0;
  $61 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$57 >> 2] | 0) + 28 >> 2] & 127]($57, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($52, $61) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($52) | 0;
  _abort();
 }
 if (($7 | 0) <= 0) {
  $68 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 34068) | 0, 33707) | 0, 39072) | 0, 201) | 0, 39079) | 0, 34107) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $68 + (HEAP32[(HEAP32[$68 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $73 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 66512) | 0;
  $77 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$73 >> 2] | 0) + 28 >> 2] & 127]($73, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($68, $77) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($68) | 0;
  _abort();
 }
 $$0 = 0;
 $$040 = 0;
 while (1) {
  if (($$040 | 0) >= ($5 | 0)) break;
  $79 = $4 + ($$040 << 2) | 0;
  $$038 = 0;
  $$039 = -1;
  while (1) {
   if (($$038 | 0) == ($7 | 0)) break;
   $85 = $6 + ($$038 << 2) | 0;
   $91 = __ZN6vision15HammingDistanceILi96EEEjPKhS2_($2 + ((HEAP32[$79 >> 2] | 0) * 96 | 0) | 0, $2 + ((HEAP32[$4 + (HEAP32[$85 >> 2] << 2) >> 2] | 0) * 96 | 0) | 0) | 0;
   if ($91 >>> 0 < $$039 >>> 0) {
    HEAP32[(HEAP32[$1 >> 2] | 0) + ($$040 << 2) >> 2] = HEAP32[$85 >> 2];
    $$1 = $91;
   } else $$1 = $$039;
   $$038 = $$038 + 1 | 0;
   $$039 = $$1;
  }
  $$0 = $$039 + $$0 | 0;
  $$040 = $$040 + 1 | 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _jpeg_idct_9x9($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0228248 = 0, $$0230247 = 0, $$0231246 = 0, $$0249 = 0, $$1229244 = 0, $$1245 = 0, $121 = 0, $124 = 0, $127 = 0, $129 = 0, $131 = 0, $134 = 0, $135 = 0, $137 = 0, $138 = 0, $140 = 0, $141 = 0, $143 = 0, $144 = 0, $145 = 0, $147 = 0, $149 = 0, $15 = 0, $151 = 0, $153 = 0, $157 = 0, $159 = 0, $160 = 0, $162 = 0, $164 = 0, $166 = 0, $168 = 0, $170 = 0, $172 = 0, $175 = 0, $21 = 0, $27 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $40 = 0, $41 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $68 = 0, $7 = 0, $74 = 0, $76 = 0, $78 = 0, $80 = 0, $82 = 0, $84 = 0, $86 = 0, $88 = 0, $91 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0228248 = $5;
 $$0230247 = HEAP32[$1 + 84 >> 2] | 0;
 $$0231246 = $2;
 $$0249 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0231246 >> 1] << 13, HEAP32[$$0230247 >> 2] | 0) | 0 | 1024;
  $21 = Math_imul(HEAP32[$$0230247 + 64 >> 2] | 0, HEAP16[$$0231246 + 32 >> 1] | 0) | 0;
  $27 = Math_imul(HEAP32[$$0230247 + 128 >> 2] | 0, HEAP16[$$0231246 + 64 >> 1] | 0) | 0;
  $34 = Math_imul((HEAP16[$$0231246 + 96 >> 1] | 0) * 5793 | 0, HEAP32[$$0230247 + 192 >> 2] | 0) | 0;
  $35 = $34 + $15 | 0;
  $37 = $15 - $34 - $34 | 0;
  $38 = $21 - $27 | 0;
  $40 = $37 + ($38 * 5793 | 0) | 0;
  $41 = (Math_imul($38, -11586) | 0) + $37 | 0;
  $43 = ($27 + $21 | 0) * 10887 | 0;
  $44 = $21 * 8875 | 0;
  $45 = $27 * 2012 | 0;
  $47 = $43 - $45 + $35 | 0;
  $49 = $35 - $43 + $44 | 0;
  $51 = $35 - $44 + $45 | 0;
  $57 = Math_imul(HEAP32[$$0230247 + 32 >> 2] | 0, HEAP16[$$0231246 + 16 >> 1] | 0) | 0;
  $68 = Math_imul(HEAP32[$$0230247 + 160 >> 2] | 0, HEAP16[$$0231246 + 80 >> 1] | 0) | 0;
  $74 = Math_imul(HEAP32[$$0230247 + 224 >> 2] | 0, HEAP16[$$0231246 + 112 >> 1] | 0) | 0;
  $76 = Math_imul(Math_imul(HEAP16[$$0231246 + 48 >> 1] | 0, -10033) | 0, HEAP32[$$0230247 + 96 >> 2] | 0) | 0;
  $78 = ($68 + $57 | 0) * 7447 | 0;
  $80 = ($74 + $57 | 0) * 3962 | 0;
  $82 = $78 - $76 + $80 | 0;
  $84 = ($68 - $74 | 0) * 11409 | 0;
  $86 = $76 - $84 + $78 | 0;
  $88 = $84 + $76 + $80 | 0;
  $91 = ($57 - $68 - $74 | 0) * 10033 | 0;
  HEAP32[$$0228248 >> 2] = $82 + $47 >> 11;
  HEAP32[$$0228248 + 256 >> 2] = $47 - $82 >> 11;
  HEAP32[$$0228248 + 32 >> 2] = $91 + $40 >> 11;
  HEAP32[$$0228248 + 224 >> 2] = $40 - $91 >> 11;
  HEAP32[$$0228248 + 64 >> 2] = $86 + $49 >> 11;
  HEAP32[$$0228248 + 192 >> 2] = $49 - $86 >> 11;
  HEAP32[$$0228248 + 96 >> 2] = $88 + $51 >> 11;
  HEAP32[$$0228248 + 160 >> 2] = $51 - $88 >> 11;
  HEAP32[$$0228248 + 128 >> 2] = $41 >> 11;
  $$0249 = $$0249 + 1 | 0;
  if (($$0249 | 0) == 8) break; else {
   $$0228248 = $$0228248 + 4 | 0;
   $$0230247 = $$0230247 + 4 | 0;
   $$0231246 = $$0231246 + 2 | 0;
  }
 }
 $121 = $7 + -384 | 0;
 $$1229244 = $5;
 $$1245 = 0;
 while (1) {
  $124 = (HEAP32[$3 + ($$1245 << 2) >> 2] | 0) + $4 | 0;
  $127 = (HEAP32[$$1229244 >> 2] << 13) + 134348800 | 0;
  $129 = HEAP32[$$1229244 + 8 >> 2] | 0;
  $131 = HEAP32[$$1229244 + 16 >> 2] | 0;
  $134 = (HEAP32[$$1229244 + 24 >> 2] | 0) * 5793 | 0;
  $135 = $134 + $127 | 0;
  $137 = $127 - $134 - $134 | 0;
  $138 = $129 - $131 | 0;
  $140 = $137 + ($138 * 5793 | 0) | 0;
  $141 = (Math_imul($138, -11586) | 0) + $137 | 0;
  $143 = ($131 + $129 | 0) * 10887 | 0;
  $144 = $129 * 8875 | 0;
  $145 = $131 * 2012 | 0;
  $147 = $143 - $145 + $135 | 0;
  $149 = $135 - $143 + $144 | 0;
  $151 = $135 - $144 + $145 | 0;
  $153 = HEAP32[$$1229244 + 4 >> 2] | 0;
  $157 = HEAP32[$$1229244 + 20 >> 2] | 0;
  $159 = HEAP32[$$1229244 + 28 >> 2] | 0;
  $160 = Math_imul(HEAP32[$$1229244 + 12 >> 2] | 0, -10033) | 0;
  $162 = ($157 + $153 | 0) * 7447 | 0;
  $164 = ($159 + $153 | 0) * 3962 | 0;
  $166 = $162 - $160 + $164 | 0;
  $168 = ($157 - $159 | 0) * 11409 | 0;
  $170 = $160 - $168 + $162 | 0;
  $172 = $168 + $160 + $164 | 0;
  $175 = ($153 - $157 - $159 | 0) * 10033 | 0;
  HEAP8[$124 >> 0] = HEAP8[$121 + (($166 + $147 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$124 + 8 >> 0] = HEAP8[$121 + (($147 - $166 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$124 + 1 >> 0] = HEAP8[$121 + (($175 + $140 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$124 + 7 >> 0] = HEAP8[$121 + (($140 - $175 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$124 + 2 >> 0] = HEAP8[$121 + (($170 + $149 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$124 + 6 >> 0] = HEAP8[$121 + (($149 - $170 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$124 + 3 >> 0] = HEAP8[$121 + (($172 + $151 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$124 + 5 >> 0] = HEAP8[$121 + (($151 - $172 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$124 + 4 >> 0] = HEAP8[$121 + ($141 >>> 18 & 1023) >> 0] | 0;
  $$1245 = $$1245 + 1 | 0;
  if (($$1245 | 0) == 9) break; else $$1229244 = $$1229244 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i39 = 0, $$0$i$i41 = 0, $$037 = 0, $$038 = 0, $$byval_copy = 0, $$sink72 = 0, $$sink73 = 0, $$sink74 = 0, $$sroa$050$0 = 0, $$sroa$058$0 = 0, $$sroa$067$0 = 0, $10 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $29 = 0, $32 = 0, $33 = 0, $48 = 0, $49 = 0, $55 = 0, $6 = 0, $63 = 0, $7 = 0, $73 = 0, $8 = 0, $81 = 0, $89 = 0, $9 = 0, $92 = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 992 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(992);
 $$byval_copy = sp + 912 | 0;
 $vararg_buffer1 = sp + 904 | 0;
 $6 = sp + 800 | 0;
 $7 = sp + 984 | 0;
 $8 = sp + 400 | 0;
 $9 = sp + 980 | 0;
 $10 = sp + 988 | 0;
 $11 = sp + 976 | 0;
 $12 = sp + 972 | 0;
 $13 = sp + 960 | 0;
 $14 = sp + 948 | 0;
 $15 = sp + 936 | 0;
 $16 = sp + 932 | 0;
 $17 = sp;
 $18 = sp + 928 | 0;
 $19 = sp + 920 | 0;
 $20 = sp + 924 | 0;
 HEAP32[$7 >> 2] = $6;
 HEAPF64[$$byval_copy >> 3] = $5;
 $21 = _snprintf($6, 100, 60455, $$byval_copy) | 0;
 if ($21 >>> 0 > 99) {
  $23 = __ZNSt3__26__clocEv() | 0;
  HEAPF64[$vararg_buffer1 >> 3] = $5;
  $24 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $23, 60455, $vararg_buffer1) | 0;
  $25 = HEAP32[$7 >> 2] | 0;
  if (!$25) __ZSt17__throw_bad_allocv();
  $29 = _malloc($24 << 2) | 0;
  if (!$29) __ZSt17__throw_bad_allocv(); else {
   $$0 = $29;
   $$038 = $24;
   $$sroa$058$0 = $29;
   $$sroa$067$0 = $25;
  }
 } else {
  $$0 = $8;
  $$038 = $21;
  $$sroa$058$0 = 0;
  $$sroa$067$0 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv($9, $3);
 $32 = __ZNKSt3__26locale9use_facetERNS0_2idE($9, 66544) | 0;
 $33 = HEAP32[$7 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$32 >> 2] | 0) + 48 >> 2] & 15]($32, $33, $33 + $$038 | 0, $$0) | 0;
 if (!$$038) $48 = 0; else $48 = (HEAP8[HEAP32[$7 >> 2] >> 0] | 0) == 45;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$13 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 + 8 >> 2] = 0;
 $$0$i$i39 = 0;
 while (1) {
  if (($$0$i$i39 | 0) == 3) break;
  HEAP32[$14 + ($$0$i$i39 << 2) >> 2] = 0;
  $$0$i$i39 = $$0$i$i39 + 1 | 0;
 }
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 $$0$i$i41 = 0;
 while (1) {
  if (($$0$i$i41 | 0) == 3) break;
  HEAP32[$15 + ($$0$i$i41 << 2) >> 2] = 0;
  $$0$i$i41 = $$0$i$i41 + 1 | 0;
 }
 __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($2, $48, $9, $10, $11, $12, $13, $14, $15, $16);
 $49 = HEAP32[$16 >> 2] | 0;
 if (($$038 | 0) > ($49 | 0)) {
  $55 = HEAP8[$15 + 8 + 3 >> 0] | 0;
  $63 = HEAP8[$14 + 8 + 3 >> 0] | 0;
  $$sink72 = $63 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $63 & 255;
  $$sink73 = $49 + 1 + ($$038 - $49 << 1) | 0;
  $$sink74 = $55 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $55 & 255;
 } else {
  $73 = HEAP8[$15 + 8 + 3 >> 0] | 0;
  $81 = HEAP8[$14 + 8 + 3 >> 0] | 0;
  $$sink72 = $81 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $81 & 255;
  $$sink73 = $49 + 2 | 0;
  $$sink74 = $73 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $73 & 255;
 }
 $89 = $$sink73 + $$sink74 + $$sink72 | 0;
 if ($89 >>> 0 > 100) {
  $92 = _malloc($89 << 2) | 0;
  if (!$92) __ZSt17__throw_bad_allocv(); else {
   $$037 = $92;
   $$sroa$050$0 = $92;
  }
 } else {
  $$037 = $17;
  $$sroa$050$0 = 0;
 }
 __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($$037, $18, $19, HEAP32[$3 + 4 >> 2] | 0, $$0, $$0 + ($$038 << 2) | 0, $32, $48, $10, HEAP32[$11 >> 2] | 0, HEAP32[$12 >> 2] | 0, $13, $14, $15, $49);
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 $101 = HEAP32[$18 >> 2] | 0;
 $102 = HEAP32[$19 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$20 >> 2];
 $103 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $101, $102, $3, $4) | 0;
 if ($$sroa$050$0 | 0) _free($$sroa$050$0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($15);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($14);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
 __ZNSt3__26localeD2Ev($9);
 if ($$sroa$058$0 | 0) _free($$sroa$058$0);
 if ($$sroa$067$0 | 0) _free($$sroa$067$0);
 STACKTOP = sp;
 return $103 | 0;
}

function _arGetContour($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0137 = 0, $$0138 = 0, $$0140 = 0, $$0141 = 0, $$0143 = 0, $$1 = 0, $$1144 = 0, $$1144$in = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $10 = 0, $103 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $28 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $35 = 0, $39 = 0, $40 = 0, $42 = 0, $51 = 0, $53 = 0, $54 = 0, $59 = 0, $61 = 0, $62 = 0, $68 = 0, $7 = 0, $73 = 0, $74 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $91 = 0, $94 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80032 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80032);
 $vararg_buffer3 = sp + 80016 | 0;
 $vararg_buffer1 = sp + 80008 | 0;
 $vararg_buffer = sp + 8e4 | 0;
 $7 = sp + 4e4 | 0;
 $8 = sp;
 $10 = HEAP32[$5 + 8 >> 2] | 0;
 $11 = Math_imul($10, $1) | 0;
 $12 = HEAP32[$5 >> 2] | 0;
 $16 = HEAP32[$5 + 4 >> 2] | 0;
 $$0137 = $12;
 $$0140 = $0 + ($11 + $12 << 1) | 0;
 while (1) {
  if (($$0137 | 0) > ($16 | 0)) {
   label = 7;
   break;
  }
  $18 = HEAP16[$$0140 >> 1] | 0;
  if ($18 << 16 >> 16 > 0 ? (HEAP32[$3 + (($18 << 16 >> 16) + -1 << 2) >> 2] | 0) == ($4 | 0) : 0) {
   label = 6;
   break;
  }
  $$0137 = $$0137 + 1 | 0;
  $$0140 = $$0140 + 2 | 0;
 }
 do if ((label | 0) == 6) if (($$0137 | 0) != -1) {
  $28 = $6 + 24 | 0;
  HEAP32[$28 >> 2] = 1;
  $29 = $6 + 28 | 0;
  HEAP32[$29 >> 2] = $$0137;
  $30 = $6 + 40028 | 0;
  HEAP32[$30 >> 2] = $10;
  $$0143 = 5;
  $32 = $10;
  $34 = $$0137;
  $53 = 1;
  while (1) {
   $35 = $0 + ((Math_imul($32, $1) | 0) + $34 << 1) | 0;
   $$1 = 0;
   $$1144$in = $$0143 + 5 | 0;
   while (1) {
    $$1144 = ($$1144$in | 0) % 8 | 0;
    if ($$1 >>> 0 >= 8) {
     label = 13;
     break;
    }
    $39 = HEAP32[48 + ($$1144 << 2) >> 2] | 0;
    $40 = Math_imul($39, $1) | 0;
    $42 = HEAP32[80 + ($$1144 << 2) >> 2] | 0;
    if ((HEAP16[$35 + ($40 + $42 << 1) >> 1] | 0) > 0) {
     $51 = $42;
     $59 = $39;
     break;
    }
    $$1 = $$1 + 1 | 0;
    $$1144$in = $$1144 + 1 | 0;
   }
   if ((label | 0) == 13) {
    label = 0;
    if (($$1 | 0) == 8) {
     label = 15;
     break;
    }
    $51 = HEAP32[80 + ($$1144 << 2) >> 2] | 0;
    $59 = HEAP32[48 + ($$1144 << 2) >> 2] | 0;
   }
   HEAP32[$6 + 28 + ($53 << 2) >> 2] = $51 + $34;
   $54 = HEAP32[$28 >> 2] | 0;
   HEAP32[$6 + 40028 + ($54 << 2) >> 2] = $59 + (HEAP32[$6 + 40028 + ($54 + -1 << 2) >> 2] | 0);
   $61 = HEAP32[$28 >> 2] | 0;
   $62 = $6 + 28 + ($61 << 2) | 0;
   if ((HEAP32[$62 >> 2] | 0) == ($$0137 | 0) ? (HEAP32[$6 + 40028 + ($61 << 2) >> 2] | 0) == ($10 | 0) : 0) {
    label = 18;
    break;
   }
   $68 = $61 + 1 | 0;
   HEAP32[$28 >> 2] = $68;
   if (($68 | 0) == 9999) {
    label = 21;
    break;
   }
   $$0143 = $$1144;
   $32 = HEAP32[$6 + 40028 + ($61 << 2) >> 2] | 0;
   $34 = HEAP32[$62 >> 2] | 0;
   $53 = $68;
  }
  if ((label | 0) == 15) {
   _arLog(0, 3, 24224, $vararg_buffer1);
   $$0 = -1;
   break;
  } else if ((label | 0) == 18) {
   $$0138 = 0;
   $$0141 = 0;
   $$2 = 1;
   while (1) {
    if (($$2 | 0) >= ($61 | 0)) break;
    $73 = (HEAP32[$6 + 28 + ($$2 << 2) >> 2] | 0) - $$0137 | 0;
    $74 = Math_imul($73, $73) | 0;
    $77 = (HEAP32[$6 + 40028 + ($$2 << 2) >> 2] | 0) - $10 | 0;
    $79 = (Math_imul($77, $77) | 0) + $74 | 0;
    $80 = ($79 | 0) > ($$0141 | 0);
    $$0138 = $80 ? $$2 : $$0138;
    $$0141 = $80 ? $79 : $$0141;
    $$2 = $$2 + 1 | 0;
   }
   $$3 = 0;
   while (1) {
    if (($$3 | 0) >= ($$0138 | 0)) break;
    HEAP32[$7 + ($$3 << 2) >> 2] = HEAP32[$6 + 28 + ($$3 << 2) >> 2];
    HEAP32[$8 + ($$3 << 2) >> 2] = HEAP32[$6 + 40028 + ($$3 << 2) >> 2];
    $$3 = $$3 + 1 | 0;
   }
   $$4 = $$0138;
   $91 = $61;
   while (1) {
    if (($$4 | 0) >= ($91 | 0)) break;
    $94 = $$4 - $$0138 | 0;
    HEAP32[$6 + 28 + ($94 << 2) >> 2] = HEAP32[$6 + 28 + ($$4 << 2) >> 2];
    HEAP32[$6 + 40028 + ($94 << 2) >> 2] = HEAP32[$6 + 40028 + ($$4 << 2) >> 2];
    $$4 = $$4 + 1 | 0;
    $91 = HEAP32[$28 >> 2] | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0138 | 0)) break;
    $103 = $$5 - $$0138 | 0;
    HEAP32[$6 + 28 + ((HEAP32[$28 >> 2] | 0) + $103 << 2) >> 2] = HEAP32[$7 + ($$5 << 2) >> 2];
    HEAP32[$6 + 40028 + ((HEAP32[$28 >> 2] | 0) + $103 << 2) >> 2] = HEAP32[$8 + ($$5 << 2) >> 2];
    $$5 = $$5 + 1 | 0;
   }
   HEAP32[$6 + 28 + (HEAP32[$28 >> 2] << 2) >> 2] = HEAP32[$29 >> 2];
   HEAP32[$6 + 40028 + (HEAP32[$28 >> 2] << 2) >> 2] = HEAP32[$30 >> 2];
   HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
   $$0 = 0;
   break;
  } else if ((label | 0) == 21) {
   _arLog(0, 3, 24231, $vararg_buffer3);
   $$0 = -1;
   break;
  }
 } else label = 7; while (0);
 if ((label | 0) == 7) {
  _arLog(0, 3, 24217, $vararg_buffer);
  $$0 = -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision21ComputePolarGradientsEPfPKfmm($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0184 = 0, $$0185 = 0, $$0186 = 0, $$0187 = 0, $$0192 = 0, $$0196 = 0, $$0196$pn = 0, $$1 = 0, $$1$pn = 0, $$1189 = 0, $$1189$pn = 0, $$1193 = 0, $$1197 = 0, $$1197$pn = 0, $$2 = 0, $$2190 = 0, $$2194 = 0, $$2198 = 0, $$3191 = 0, $$3195 = 0, $$3199 = 0, $$pn = 0, $$pn200 = 0, $$pn201 = 0, $101 = 0.0, $105 = 0.0, $11 = 0.0, $110 = 0.0, $115 = 0, $119 = 0.0, $122 = 0.0, $126 = 0.0, $131 = 0.0, $135 = 0.0, $138 = 0.0, $140 = 0.0, $144 = 0.0, $149 = 0.0, $15 = 0.0, $150 = 0, $154 = 0.0, $157 = 0.0, $161 = 0.0, $166 = 0.0, $20 = 0.0, $22 = 0, $23 = 0.0, $26 = 0.0, $28 = 0.0, $32 = 0.0, $37 = 0.0, $39 = 0, $4 = 0, $43 = 0.0, $46 = 0.0, $5 = 0, $50 = 0.0, $55 = 0.0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $64 = 0.0, $65 = 0.0, $67 = 0.0, $71 = 0.0, $76 = 0.0, $77 = 0, $8 = 0.0, $80 = 0.0, $83 = 0.0, $87 = 0.0, $9 = 0.0, $92 = 0.0, $98 = 0.0;
 $4 = $2 + -1 | 0;
 $5 = $1 + ($2 << 2) | 0;
 $6 = $1 + 4 | 0;
 $8 = +HEAPF32[$1 >> 2];
 $9 = +HEAPF32[$6 >> 2] - $8;
 $11 = +HEAPF32[$5 >> 2] - $8;
 $15 = +Math_atan2(+$11, +$9) + 3.141592653589793;
 HEAPF32[$0 >> 2] = $15;
 $20 = +Math_sqrt(+($9 * $9 + $11 * $11));
 HEAPF32[$0 + 4 >> 2] = $20;
 $$0186 = 1;
 $$0192 = $6;
 $$pn = $5;
 $$pn201 = $0;
 while (1) {
  $$0196 = $$pn201 + 8 | 0;
  $$0187 = $$pn + 4 | 0;
  if ($$0186 >>> 0 >= $4 >>> 0) break;
  $39 = $$0192 + 4 | 0;
  $43 = +HEAPF32[$39 >> 2] - +HEAPF32[$$0192 + -4 >> 2];
  $46 = +HEAPF32[$$0187 >> 2] - +HEAPF32[$$0192 >> 2];
  $50 = +Math_atan2(+$46, +$43) + 3.141592653589793;
  HEAPF32[$$0196 >> 2] = $50;
  $55 = +Math_sqrt(+($43 * $43 + $46 * $46));
  HEAPF32[$$pn201 + 12 >> 2] = $55;
  $$0186 = $$0186 + 1 | 0;
  $$0192 = $39;
  $$pn = $$0187;
  $$pn201 = $$0196;
 }
 $22 = $3 + -1 | 0;
 $23 = +HEAPF32[$$0192 >> 2];
 $26 = $23 - +HEAPF32[$$0192 + -4 >> 2];
 $28 = +HEAPF32[$$0187 >> 2] - $23;
 $32 = +Math_atan2(+$28, +$26) + 3.141592653589793;
 HEAPF32[$$0196 >> 2] = $32;
 $37 = +Math_sqrt(+($26 * $26 + $28 * $28));
 HEAPF32[$$pn201 + 12 >> 2] = $37;
 $$0185 = 1;
 $$0196$pn = $$0196;
 $$1 = $5 + ($2 << 2) | 0;
 $$1189 = $1;
 $$1193 = $5;
 while (1) {
  $$1197 = $$0196$pn + 8 | 0;
  if ($$0185 >>> 0 >= $22 >>> 0) break;
  $77 = $$1193 + 4 | 0;
  $80 = +HEAPF32[$77 >> 2] - +HEAPF32[$$1193 >> 2];
  $83 = +HEAPF32[$$1 >> 2] - +HEAPF32[$$1189 >> 2];
  $87 = +Math_atan2(+$83, +$80) + 3.141592653589793;
  HEAPF32[$$1197 >> 2] = $87;
  $92 = +Math_sqrt(+($80 * $80 + $83 * $83));
  HEAPF32[$$0196$pn + 12 >> 2] = $92;
  $$0184 = 1;
  $$1$pn = $$1;
  $$1189$pn = $$1189;
  $$2194 = $77;
  $$2198 = $$0196$pn + 16 | 0;
  while (1) {
   $$2 = $$1$pn + 4 | 0;
   $$2190 = $$1189$pn + 4 | 0;
   if ($$0184 >>> 0 >= $4 >>> 0) break;
   $115 = $$2194 + 4 | 0;
   $119 = +HEAPF32[$115 >> 2] - +HEAPF32[$$2194 + -4 >> 2];
   $122 = +HEAPF32[$$2 >> 2] - +HEAPF32[$$2190 >> 2];
   $126 = +Math_atan2(+$122, +$119) + 3.141592653589793;
   HEAPF32[$$2198 >> 2] = $126;
   $131 = +Math_sqrt(+($119 * $119 + $122 * $122));
   HEAPF32[$$2198 + 4 >> 2] = $131;
   $$0184 = $$0184 + 1 | 0;
   $$1$pn = $$2;
   $$1189$pn = $$2190;
   $$2194 = $115;
   $$2198 = $$2198 + 8 | 0;
  }
  $98 = +HEAPF32[$$2194 >> 2] - +HEAPF32[$$2194 + -4 >> 2];
  $101 = +HEAPF32[$$2 >> 2] - +HEAPF32[$$2190 >> 2];
  $105 = +Math_atan2(+$101, +$98) + 3.141592653589793;
  HEAPF32[$$2198 >> 2] = $105;
  $110 = +Math_sqrt(+($98 * $98 + $101 * $101));
  HEAPF32[$$2198 + 4 >> 2] = $110;
  $$0185 = $$0185 + 1 | 0;
  $$0196$pn = $$2198;
  $$1 = $$1$pn + 8 | 0;
  $$1189 = $$1189$pn + 8 | 0;
  $$1193 = $$2194 + 4 | 0;
 }
 $59 = $1 + ((Math_imul($22, $2) | 0) << 2) | 0;
 $61 = $59 + (0 - $2 << 2) | 0;
 $62 = $59 + 4 | 0;
 $64 = +HEAPF32[$59 >> 2];
 $65 = +HEAPF32[$62 >> 2] - $64;
 $67 = $64 - +HEAPF32[$61 >> 2];
 $71 = +Math_atan2(+$67, +$65) + 3.141592653589793;
 HEAPF32[$$1197 >> 2] = $71;
 $76 = +Math_sqrt(+($65 * $65 + $67 * $67));
 HEAPF32[$$0196$pn + 12 >> 2] = $76;
 $$0 = 1;
 $$1197$pn = $$1197;
 $$3195 = $62;
 $$pn200 = $61;
 while (1) {
  $$3199 = $$1197$pn + 8 | 0;
  $$3191 = $$pn200 + 4 | 0;
  if ($$0 >>> 0 >= $4 >>> 0) break;
  $150 = $$3195 + 4 | 0;
  $154 = +HEAPF32[$150 >> 2] - +HEAPF32[$$3195 + -4 >> 2];
  $157 = +HEAPF32[$$3195 >> 2] - +HEAPF32[$$3191 >> 2];
  $161 = +Math_atan2(+$157, +$154) + 3.141592653589793;
  HEAPF32[$$3199 >> 2] = $161;
  $166 = +Math_sqrt(+($154 * $154 + $157 * $157));
  HEAPF32[$$1197$pn + 12 >> 2] = $166;
  $$0 = $$0 + 1 | 0;
  $$1197$pn = $$3199;
  $$3195 = $150;
  $$pn200 = $$3191;
 }
 $135 = +HEAPF32[$$3195 >> 2];
 $138 = $135 - +HEAPF32[$$3195 + -4 >> 2];
 $140 = $135 - +HEAPF32[$$3191 >> 2];
 $144 = +Math_atan2(+$140, +$138) + 3.141592653589793;
 HEAPF32[$$3199 >> 2] = $144;
 $149 = +Math_sqrt(+($138 * $138 + $140 * $140));
 HEAPF32[$$1197$pn + 12 >> 2] = $149;
 return;
}
function _arPattLoadFromBuffer($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0140 = 0, $$0141 = 0, $$0143 = 0, $$0146 = 0, $$0149 = 0, $$0150 = 0, $$0151 = 0, $$0152 = 0, $$1 = 0, $$1142 = 0, $$1144 = 0, $$1147 = 0, $$2 = 0, $$2145 = 0, $$2148 = 0, $$3 = 0, $14 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $44 = 0, $47 = 0, $51 = 0, $57 = 0, $6 = 0, $64 = 0, $67 = 0, $69 = 0, $75 = 0, $77 = 0, $79 = 0, $82 = 0.0, $87 = 0, $92 = 0, $94 = 0, $96 = 0, $99 = 0.0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 do if ($0) {
  if (!$1) {
   _arLog(0, 3, 24297, $vararg_buffer1);
   $$0 = -1;
   break;
  }
  $4 = $0 + 8 | 0;
  $6 = HEAP32[$0 + 4 >> 2] | 0;
  $$0146 = 0;
  while (1) {
   if (($$0146 | 0) >= ($6 | 0)) break;
   if (!(HEAP32[(HEAP32[$4 >> 2] | 0) + ($$0146 << 2) >> 2] | 0)) break;
   $$0146 = $$0146 + 1 | 0;
  }
  if (($$0146 | 0) != ($6 | 0)) {
   $14 = ___strdup($1) | 0;
   if (!$14) {
    _arLog(0, 3, 24342, $vararg_buffer3);
    $$0 = -1;
    break;
   }
   $17 = $0 + 28 | 0;
   $18 = $0 + 12 | 0;
   $19 = $$0146 << 2;
   $20 = $0 + 20 | 0;
   $21 = $0 + 16 | 0;
   $22 = $0 + 24 | 0;
   $$0140 = _strtok($14, 24365) | 0;
   $$0152 = 0;
   L16 : while (1) {
    if ($$0152 >>> 0 >= 4) {
     label = 36;
     break;
    }
    $24 = $$0152 + $19 | 0;
    $$0143 = 0;
    $$0149 = 0;
    $$1 = $$0140;
    while (1) {
     if ($$0149 >>> 0 >= 3) break;
     $26 = ($$0149 | 0) == 0;
     $27 = ($$0149 | 0) == 2;
     $$0150 = 0;
     $$1144 = $$0143;
     $$2 = $$1;
     $29 = HEAP32[$17 >> 2] | 0;
     while (1) {
      if (($$0150 | 0) >= ($29 | 0)) break;
      $$0151 = 0;
      $$2145 = $$1144;
      $$3 = $$2;
      $31 = $29;
      while (1) {
       if (($$0151 | 0) >= ($31 | 0)) break;
       if (!$$3) {
        label = 21;
        break L16;
       }
       $33 = _atoi($$3) | 0;
       $34 = _strtok(0, 24365) | 0;
       $35 = 255 - $33 | 0;
       $44 = (HEAP32[(HEAP32[$18 >> 2] | 0) + ($24 << 2) >> 2] | 0) + ((((Math_imul(HEAP32[$17 >> 2] | 0, $$0150) | 0) + $$0151 | 0) * 3 | 0) + $$0149 << 2) | 0;
       HEAP32[$44 >> 2] = $35;
       $47 = HEAP32[(HEAP32[$20 >> 2] | 0) + ($24 << 2) >> 2] | 0;
       $51 = $47 + ((Math_imul(HEAP32[$17 >> 2] | 0, $$0150) | 0) + $$0151 << 2) | 0;
       if (!$26) {
        HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + $35;
        if ($27) {
         $57 = $47 + ((Math_imul(HEAP32[$17 >> 2] | 0, $$0150) | 0) + $$0151 << 2) | 0;
         HEAP32[$57 >> 2] = (HEAP32[$57 >> 2] | 0) / 3 | 0;
        }
       } else HEAP32[$51 >> 2] = $35;
       $$0151 = $$0151 + 1 | 0;
       $$2145 = $35 + $$2145 | 0;
       $$3 = $34;
       $31 = HEAP32[$17 >> 2] | 0;
      }
      $$0150 = $$0150 + 1 | 0;
      $$1144 = $$2145;
      $$2 = $$3;
      $29 = $31;
     }
     $$0143 = $$1144;
     $$0149 = $$0149 + 1 | 0;
     $$1 = $$2;
    }
    $64 = HEAP32[$17 >> 2] | 0;
    $67 = ($$0143 | 0) / (Math_imul($64 * 3 | 0, $64) | 0) | 0;
    $$0141 = 0;
    $$1147 = 0;
    $69 = $64;
    while (1) {
     if ($$1147 >>> 0 >= (Math_imul($69 * 3 | 0, $69) | 0) >>> 0) break;
     $75 = (HEAP32[(HEAP32[$18 >> 2] | 0) + ($24 << 2) >> 2] | 0) + ($$1147 << 2) | 0;
     $77 = (HEAP32[$75 >> 2] | 0) - $67 | 0;
     HEAP32[$75 >> 2] = $77;
     $79 = (Math_imul($77, $77) | 0) + $$0141 | 0;
     $$0141 = $79;
     $$1147 = $$1147 + 1 | 0;
     $69 = HEAP32[$17 >> 2] | 0;
    }
    $82 = +Math_sqrt(+(+($$0141 | 0)));
    HEAPF64[(HEAP32[$21 >> 2] | 0) + ($24 << 3) >> 3] = $82 == 0.0 ? 1.0e-07 : $82;
    $$1142 = 0;
    $$2148 = 0;
    $87 = $69;
    while (1) {
     if ($$2148 >>> 0 >= (Math_imul($87, $87) | 0) >>> 0) break;
     $92 = (HEAP32[(HEAP32[$20 >> 2] | 0) + ($24 << 2) >> 2] | 0) + ($$2148 << 2) | 0;
     $94 = (HEAP32[$92 >> 2] | 0) - $67 | 0;
     HEAP32[$92 >> 2] = $94;
     $96 = (Math_imul($94, $94) | 0) + $$1142 | 0;
     $$1142 = $96;
     $$2148 = $$2148 + 1 | 0;
     $87 = HEAP32[$17 >> 2] | 0;
    }
    $99 = +Math_sqrt(+(+($$1142 | 0)));
    HEAPF64[(HEAP32[$22 >> 2] | 0) + ($24 << 3) >> 3] = $99 == 0.0 ? 1.0e-07 : $99;
    $$0140 = $$1;
    $$0152 = $$0152 + 1 | 0;
   }
   if ((label | 0) == 21) {
    _arLog(0, 3, 24370, $vararg_buffer5);
    _free($14);
    $$0 = -1;
    break;
   } else if ((label | 0) == 36) {
    _free($14);
    HEAP32[(HEAP32[$4 >> 2] | 0) + ($$0146 << 2) >> 2] = 1;
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
    $$0 = $$0146;
    break;
   }
  } else $$0 = -1;
 } else {
  _arLog(0, 3, 24272, sp);
  $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i41 = 0, $$0$i$i44 = 0, $$037 = 0, $$038 = 0, $$byval_copy = 0, $$sink75 = 0, $$sink76 = 0, $$sink77 = 0, $$sroa$053$0 = 0, $$sroa$061$0 = 0, $$sroa$070$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $28 = 0, $31 = 0, $32 = 0, $47 = 0, $48 = 0, $53 = 0, $6 = 0, $60 = 0, $69 = 0, $7 = 0, $76 = 0, $8 = 0, $84 = 0, $86 = 0, $9 = 0, $95 = 0, $96 = 0, $97 = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(416);
 $$byval_copy = sp + 336 | 0;
 $vararg_buffer1 = sp + 328 | 0;
 $6 = sp + 224 | 0;
 $7 = sp + 400 | 0;
 $8 = sp + 112 | 0;
 $9 = sp + 396 | 0;
 $10 = sp + 408 | 0;
 $11 = sp + 405 | 0;
 $12 = sp + 404 | 0;
 $13 = sp + 384 | 0;
 $14 = sp + 372 | 0;
 $15 = sp + 360 | 0;
 $16 = sp + 356 | 0;
 $17 = sp;
 $18 = sp + 352 | 0;
 $19 = sp + 344 | 0;
 $20 = sp + 348 | 0;
 HEAP32[$7 >> 2] = $6;
 HEAPF64[$$byval_copy >> 3] = $5;
 $21 = _snprintf($6, 100, 60455, $$byval_copy) | 0;
 if ($21 >>> 0 > 99) {
  $23 = __ZNSt3__26__clocEv() | 0;
  HEAPF64[$vararg_buffer1 >> 3] = $5;
  $24 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $23, 60455, $vararg_buffer1) | 0;
  $25 = HEAP32[$7 >> 2] | 0;
  if (!$25) __ZSt17__throw_bad_allocv();
  $28 = _malloc($24) | 0;
  if (!$28) __ZSt17__throw_bad_allocv(); else {
   $$0 = $28;
   $$038 = $24;
   $$sroa$061$0 = $28;
   $$sroa$070$0 = $25;
  }
 } else {
  $$0 = $8;
  $$038 = $21;
  $$sroa$061$0 = 0;
  $$sroa$070$0 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv($9, $3);
 $31 = __ZNKSt3__26locale9use_facetERNS0_2idE($9, 66512) | 0;
 $32 = HEAP32[$7 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$31 >> 2] | 0) + 32 >> 2] & 15]($31, $32, $32 + $$038 | 0, $$0) | 0;
 if (!$$038) $47 = 0; else $47 = (HEAP8[HEAP32[$7 >> 2] >> 0] | 0) == 45;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$13 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 + 8 >> 2] = 0;
 $$0$i$i41 = 0;
 while (1) {
  if (($$0$i$i41 | 0) == 3) break;
  HEAP32[$14 + ($$0$i$i41 << 2) >> 2] = 0;
  $$0$i$i41 = $$0$i$i41 + 1 | 0;
 }
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 $$0$i$i44 = 0;
 while (1) {
  if (($$0$i$i44 | 0) == 3) break;
  HEAP32[$15 + ($$0$i$i44 << 2) >> 2] = 0;
  $$0$i$i44 = $$0$i$i44 + 1 | 0;
 }
 __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($2, $47, $9, $10, $11, $12, $13, $14, $15, $16);
 $48 = HEAP32[$16 >> 2] | 0;
 if (($$038 | 0) > ($48 | 0)) {
  $53 = HEAP8[$15 + 11 >> 0] | 0;
  $60 = HEAP8[$14 + 11 >> 0] | 0;
  $$sink75 = $60 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $60 & 255;
  $$sink76 = $48 + 1 + ($$038 - $48 << 1) | 0;
  $$sink77 = $53 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $53 & 255;
 } else {
  $69 = HEAP8[$15 + 11 >> 0] | 0;
  $76 = HEAP8[$14 + 11 >> 0] | 0;
  $$sink75 = $76 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $76 & 255;
  $$sink76 = $48 + 2 | 0;
  $$sink77 = $69 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $69 & 255;
 }
 $84 = $$sink76 + $$sink77 + $$sink75 | 0;
 if ($84 >>> 0 > 100) {
  $86 = _malloc($84) | 0;
  if (!$86) __ZSt17__throw_bad_allocv(); else {
   $$037 = $86;
   $$sroa$053$0 = $86;
  }
 } else {
  $$037 = $17;
  $$sroa$053$0 = 0;
 }
 __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($$037, $18, $19, HEAP32[$3 + 4 >> 2] | 0, $$0, $$0 + $$038 | 0, $31, $47, $10, HEAP8[$11 >> 0] | 0, HEAP8[$12 >> 0] | 0, $13, $14, $15, $48);
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 $95 = HEAP32[$18 >> 2] | 0;
 $96 = HEAP32[$19 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$20 >> 2];
 $97 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $95, $96, $3, $4) | 0;
 if ($$sroa$053$0 | 0) _free($$sroa$053$0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
 __ZNSt3__26localeD2Ev($9);
 if ($$sroa$061$0 | 0) _free($$sroa$061$0);
 if ($$sroa$070$0 | 0) _free($$sroa$070$0);
 STACKTOP = sp;
 return $97 | 0;
}

function __ZNSt3__213unordered_mapIi7ARParamNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$pn$i = 0, $0 = 0, $1 = 0, $11 = 0, $16 = 0, $17 = 0, $18 = 0, $23 = 0, $3 = 0, $4 = 0, $7 = 0.0, $9 = 0, $__bc$0$i = 0, $__chash$0$i = 0, $__chash$1$i = 0, $__h$i = 0, $__nd$0$i = 0, $__nd$1$i = 0, $__value_$i$i$i = 0, $__value_$i$i$i1$i$i = 0, $__value_$i$i$i38$pre$phi$iZZZZ2D = 0, $__value_$i$i$i81$i = 0, $add32$i = 0, $cmp$i = 0, $cond3$i$i = 0, $cond3$i60$i = 0, $cond3$i89$i = 0, $conv$i = 0.0, $conv39$i = 0, $ref$tmp2 = 0, $ref$tmp5 = 0, $sub$i$i = 0, $sub$i54$i = 0, $sub$i64$i = 0, $tobool$i56$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $__h$i = sp + 4 | 0;
 $ref$tmp2 = sp;
 $ref$tmp5 = sp + 16 | 0;
 HEAP32[$ref$tmp2 >> 2] = $__k;
 $0 = HEAP32[$__k >> 2] | 0;
 $__value_$i$i$i1$i$i = $this + 4 | 0;
 $1 = HEAP32[$__value_$i$i$i1$i$i >> 2] | 0;
 $cmp$i = ($1 | 0) == 0;
 L1 : do if (!$cmp$i) {
  $sub$i54$i = $1 + -1 | 0;
  $tobool$i56$i = ($sub$i54$i & $1 | 0) == 0;
  if (!$tobool$i56$i) if ($0 >>> 0 < $1 >>> 0) $cond3$i60$i = $0; else $cond3$i60$i = ($0 >>> 0) % ($1 >>> 0) | 0; else $cond3$i60$i = $sub$i54$i & $0;
  $3 = HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i60$i << 2) >> 2] | 0;
  if (!$3) {
   $__chash$0$i = $cond3$i60$i;
   label = 16;
  } else {
   $$pn$i = $3;
   while (1) {
    $__nd$0$i = HEAP32[$$pn$i >> 2] | 0;
    if (!$__nd$0$i) {
     $__chash$0$i = $cond3$i60$i;
     label = 16;
     break L1;
    }
    $4 = HEAP32[$__nd$0$i + 4 >> 2] | 0;
    if (($4 | 0) != ($0 | 0)) {
     if (!$tobool$i56$i) if ($4 >>> 0 < $1 >>> 0) $cond3$i89$i = $4; else $cond3$i89$i = ($4 >>> 0) % ($1 >>> 0) | 0; else $cond3$i89$i = $4 & $sub$i54$i;
     if (($cond3$i89$i | 0) != ($cond3$i60$i | 0)) {
      $__chash$0$i = $cond3$i60$i;
      label = 16;
      break L1;
     }
    }
    if ((HEAP32[$__nd$0$i + 8 >> 2] | 0) == ($0 | 0)) {
     $__nd$1$i = $__nd$0$i;
     break;
    } else $$pn$i = $__nd$0$i;
   }
  }
 } else {
  $__chash$0$i = 0;
  label = 16;
 } while (0);
 if ((label | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINSC_ISR_EEEEEEmOT_DpOT0_($__h$i, $this, $0, 67437, $ref$tmp2, $ref$tmp5);
  $__value_$i$i$i81$i = $this + 12 | 0;
  $conv$i = +(((HEAP32[$__value_$i$i$i81$i >> 2] | 0) + 1 | 0) >>> 0);
  $7 = +HEAPF32[$this + 16 >> 2];
  do if ($cmp$i | $7 * +($1 >>> 0) < $conv$i) {
   $add32$i = $1 << 1 | ($1 >>> 0 < 3 | ($1 + -1 & $1 | 0) != 0) & 1;
   $conv39$i = ~~+Math_ceil(+($conv$i / $7)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm($this, $add32$i >>> 0 < $conv39$i >>> 0 ? $conv39$i : $add32$i);
   $9 = HEAP32[$__value_$i$i$i1$i$i >> 2] | 0;
   $sub$i64$i = $9 + -1 | 0;
   if (!($sub$i64$i & $9)) {
    $__bc$0$i = $9;
    $__chash$1$i = $sub$i64$i & $0;
    break;
   }
   if ($0 >>> 0 < $9 >>> 0) {
    $__bc$0$i = $9;
    $__chash$1$i = $0;
   } else {
    $__bc$0$i = $9;
    $__chash$1$i = ($0 >>> 0) % ($9 >>> 0) | 0;
   }
  } else {
   $__bc$0$i = $1;
   $__chash$1$i = $__chash$0$i;
  } while (0);
  $11 = HEAP32[(HEAP32[$this >> 2] | 0) + ($__chash$1$i << 2) >> 2] | 0;
  if (!$11) {
   $__value_$i$i$i = $this + 8 | 0;
   HEAP32[HEAP32[$__h$i >> 2] >> 2] = HEAP32[$__value_$i$i$i >> 2];
   HEAP32[$__value_$i$i$i >> 2] = HEAP32[$__h$i >> 2];
   HEAP32[(HEAP32[$this >> 2] | 0) + ($__chash$1$i << 2) >> 2] = $__value_$i$i$i;
   $16 = HEAP32[$__h$i >> 2] | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if (!$17) $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i; else {
    $18 = HEAP32[$17 + 4 >> 2] | 0;
    $sub$i$i = $__bc$0$i + -1 | 0;
    if ($sub$i$i & $__bc$0$i) if ($18 >>> 0 < $__bc$0$i >>> 0) $cond3$i$i = $18; else $cond3$i$i = ($18 >>> 0) % ($__bc$0$i >>> 0) | 0; else $cond3$i$i = $18 & $sub$i$i;
    HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i$i << 2) >> 2] = $16;
    $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i;
   }
  } else {
   HEAP32[HEAP32[$__h$i >> 2] >> 2] = HEAP32[$11 >> 2];
   HEAP32[$11 >> 2] = HEAP32[$__h$i >> 2];
   $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i;
  }
  $23 = HEAP32[$__value_$i$i$i38$pre$phi$iZZZZ2D >> 2] | 0;
  HEAP32[$__value_$i$i$i81$i >> 2] = (HEAP32[$__value_$i$i$i81$i >> 2] | 0) + 1;
  HEAP32[$__value_$i$i$i38$pre$phi$iZZZZ2D >> 2] = 0;
  $__nd$1$i = $23;
 }
 STACKTOP = sp;
 return $__nd$1$i + 16 | 0;
}

function __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$pn$i = 0, $0 = 0, $1 = 0, $11 = 0, $16 = 0, $17 = 0, $18 = 0, $23 = 0, $3 = 0, $4 = 0, $7 = 0.0, $9 = 0, $__bc$0$i = 0, $__chash$0$i = 0, $__chash$1$i = 0, $__h$i = 0, $__nd$0$i = 0, $__nd$1$i = 0, $__value_$i$i$i = 0, $__value_$i$i$i1$i$i = 0, $__value_$i$i$i38$pre$phi$iZZZZ2D = 0, $__value_$i$i$i93$i = 0, $add32$i = 0, $cmp$i = 0, $cond3$i$i = 0, $cond3$i48$i = 0, $cond3$i84$i = 0, $conv$i = 0.0, $conv39$i = 0, $ref$tmp2 = 0, $ref$tmp5 = 0, $sub$i$i = 0, $sub$i42$i = 0, $sub$i69$i = 0, $tobool$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $__h$i = sp + 4 | 0;
 $ref$tmp2 = sp;
 $ref$tmp5 = sp + 16 | 0;
 HEAP32[$ref$tmp2 >> 2] = $__k;
 $0 = HEAP32[$__k >> 2] | 0;
 $__value_$i$i$i1$i$i = $this + 4 | 0;
 $1 = HEAP32[$__value_$i$i$i1$i$i >> 2] | 0;
 $cmp$i = ($1 | 0) == 0;
 L1 : do if (!$cmp$i) {
  $sub$i$i = $1 + -1 | 0;
  $tobool$i$i = ($sub$i$i & $1 | 0) == 0;
  if (!$tobool$i$i) if ($0 >>> 0 < $1 >>> 0) $cond3$i$i = $0; else $cond3$i$i = ($0 >>> 0) % ($1 >>> 0) | 0; else $cond3$i$i = $sub$i$i & $0;
  $3 = HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i$i << 2) >> 2] | 0;
  if (!$3) {
   $__chash$0$i = $cond3$i$i;
   label = 16;
  } else {
   $$pn$i = $3;
   while (1) {
    $__nd$0$i = HEAP32[$$pn$i >> 2] | 0;
    if (!$__nd$0$i) {
     $__chash$0$i = $cond3$i$i;
     label = 16;
     break L1;
    }
    $4 = HEAP32[$__nd$0$i + 4 >> 2] | 0;
    if (($4 | 0) != ($0 | 0)) {
     if (!$tobool$i$i) if ($4 >>> 0 < $1 >>> 0) $cond3$i84$i = $4; else $cond3$i84$i = ($4 >>> 0) % ($1 >>> 0) | 0; else $cond3$i84$i = $4 & $sub$i$i;
     if (($cond3$i84$i | 0) != ($cond3$i$i | 0)) {
      $__chash$0$i = $cond3$i$i;
      label = 16;
      break L1;
     }
    }
    if ((HEAP32[$__nd$0$i + 8 >> 2] | 0) == ($0 | 0)) {
     $__nd$1$i = $__nd$0$i;
     break;
    } else $$pn$i = $__nd$0$i;
   }
  }
 } else {
  $__chash$0$i = 0;
  label = 16;
 } while (0);
 if ((label | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINSC_ISR_EEEEEEmOT_DpOT0_($__h$i, $this, $0, 67437, $ref$tmp2, $ref$tmp5);
  $__value_$i$i$i93$i = $this + 12 | 0;
  $conv$i = +(((HEAP32[$__value_$i$i$i93$i >> 2] | 0) + 1 | 0) >>> 0);
  $7 = +HEAPF32[$this + 16 >> 2];
  do if ($cmp$i | $7 * +($1 >>> 0) < $conv$i) {
   $add32$i = $1 << 1 | ($1 >>> 0 < 3 | ($1 + -1 & $1 | 0) != 0) & 1;
   $conv39$i = ~~+Math_ceil(+($conv$i / $7)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm($this, $add32$i >>> 0 < $conv39$i >>> 0 ? $conv39$i : $add32$i);
   $9 = HEAP32[$__value_$i$i$i1$i$i >> 2] | 0;
   $sub$i69$i = $9 + -1 | 0;
   if (!($sub$i69$i & $9)) {
    $__bc$0$i = $9;
    $__chash$1$i = $sub$i69$i & $0;
    break;
   }
   if ($0 >>> 0 < $9 >>> 0) {
    $__bc$0$i = $9;
    $__chash$1$i = $0;
   } else {
    $__bc$0$i = $9;
    $__chash$1$i = ($0 >>> 0) % ($9 >>> 0) | 0;
   }
  } else {
   $__bc$0$i = $1;
   $__chash$1$i = $__chash$0$i;
  } while (0);
  $11 = HEAP32[(HEAP32[$this >> 2] | 0) + ($__chash$1$i << 2) >> 2] | 0;
  if (!$11) {
   $__value_$i$i$i = $this + 8 | 0;
   HEAP32[HEAP32[$__h$i >> 2] >> 2] = HEAP32[$__value_$i$i$i >> 2];
   HEAP32[$__value_$i$i$i >> 2] = HEAP32[$__h$i >> 2];
   HEAP32[(HEAP32[$this >> 2] | 0) + ($__chash$1$i << 2) >> 2] = $__value_$i$i$i;
   $16 = HEAP32[$__h$i >> 2] | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if (!$17) $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i; else {
    $18 = HEAP32[$17 + 4 >> 2] | 0;
    $sub$i42$i = $__bc$0$i + -1 | 0;
    if ($sub$i42$i & $__bc$0$i) if ($18 >>> 0 < $__bc$0$i >>> 0) $cond3$i48$i = $18; else $cond3$i48$i = ($18 >>> 0) % ($__bc$0$i >>> 0) | 0; else $cond3$i48$i = $18 & $sub$i42$i;
    HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i48$i << 2) >> 2] = $16;
    $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i;
   }
  } else {
   HEAP32[HEAP32[$__h$i >> 2] >> 2] = HEAP32[$11 >> 2];
   HEAP32[$11 >> 2] = HEAP32[$__h$i >> 2];
   $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i;
  }
  $23 = HEAP32[$__value_$i$i$i38$pre$phi$iZZZZ2D >> 2] | 0;
  HEAP32[$__value_$i$i$i93$i >> 2] = (HEAP32[$__value_$i$i$i93$i >> 2] | 0) + 1;
  HEAP32[$__value_$i$i$i38$pre$phi$iZZZZ2D >> 2] = 0;
  $__nd$1$i = $23;
 }
 STACKTOP = sp;
 return $__nd$1$i + 16 | 0;
}

function __ZN6vision14ExtractFREAK84ERNS_18BinaryFeatureStoreEPKNS_25GaussianScaleSpacePyramidERKNSt3__26vectorINS_12FeaturePointENS5_9allocatorIS7_EEEEPKfSE_SE_SE_SE_SE_ffffffff($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = +$9;
 $10 = +$10;
 $11 = +$11;
 $12 = +$12;
 $13 = +$13;
 $14 = +$14;
 $15 = +$15;
 $16 = +$16;
 var $$0 = 0, $$036 = 0, $$1 = 0, $17 = 0, $24 = 0, $29 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $46 = 0, $51 = 0, $55 = 0, $57 = 0, $58 = 0, $59 = 0, $62 = 0, $67 = 0, $68 = 0, $76 = 0, $81 = 0, $85 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $17 = sp;
 if (!$1) {
  $24 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37660) | 0, 37691) | 0, 39072) | 0, 537) | 0, 39079) | 0, 37760) | 0;
  __ZNKSt3__28ios_base6getlocEv($17, $24 + (HEAP32[(HEAP32[$24 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $29 = __ZNKSt3__26locale9use_facetERNS0_2idE($17, 66512) | 0;
  $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$29 >> 2] | 0) + 28 >> 2] & 127]($29, 10) | 0;
  __ZNSt3__26localeD2Ev($17);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($24, $33) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($24) | 0;
  _abort();
 }
 $34 = __ZNK6vision18BinaryFeatureStore4sizeEv($0) | 0;
 $35 = $2 + 4 | 0;
 $36 = HEAP32[$35 >> 2] | 0;
 $37 = HEAP32[$2 >> 2] | 0;
 if (($34 | 0) != (($36 - $37 | 0) / 20 | 0 | 0)) {
  $46 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37776) | 0, 37691) | 0, 39072) | 0, 538) | 0, 39079) | 0, 37829) | 0;
  __ZNKSt3__28ios_base6getlocEv($17, $46 + (HEAP32[(HEAP32[$46 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $51 = __ZNKSt3__26locale9use_facetERNS0_2idE($17, 66512) | 0;
  $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$51 >> 2] | 0) + 28 >> 2] & 127]($51, 10) | 0;
  __ZNSt3__26localeD2Ev($17);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($46, $55) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($46) | 0;
  _abort();
 }
 $$0 = 0;
 $$036 = 0;
 $57 = $37;
 $58 = $36;
 while (1) {
  $59 = ($58 - $57 | 0) / 20 | 0;
  if ($$0 >>> 0 >= $59 >>> 0) break;
  $62 = __ZN6vision18BinaryFeatureStore7featureEm($0, $$036) | 0;
  if (__ZN6vision14ExtractFREAK84EPhPKNS_25GaussianScaleSpacePyramidERKNS_12FeaturePointEPKfS8_S8_S8_S8_S8_ffffffff($62, $1, (HEAP32[$2 >> 2] | 0) + ($$0 * 20 | 0) | 0, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16) | 0) {
   $67 = (HEAP32[$2 >> 2] | 0) + ($$0 * 20 | 0) | 0;
   $68 = __ZN6vision18BinaryFeatureStore5pointEm($0, $$036) | 0;
   HEAP32[$68 >> 2] = HEAP32[$67 >> 2];
   HEAP32[$68 + 4 >> 2] = HEAP32[$67 + 4 >> 2];
   HEAP32[$68 + 8 >> 2] = HEAP32[$67 + 8 >> 2];
   HEAP32[$68 + 12 >> 2] = HEAP32[$67 + 12 >> 2];
   HEAP8[$68 + 16 >> 0] = HEAP8[$67 + 16 >> 0] | 0;
   $$1 = $$036 + 1 | 0;
  } else $$1 = $$036;
  $$0 = $$0 + 1 | 0;
  $$036 = $$1;
  $57 = HEAP32[$2 >> 2] | 0;
  $58 = HEAP32[$35 >> 2] | 0;
 }
 if (($$036 | 0) == ($59 | 0)) {
  __ZN6vision18BinaryFeatureStore6resizeEm($0, $$036);
  STACKTOP = sp;
  return;
 } else {
  $76 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37866) | 0, 37691) | 0, 39072) | 0, 617) | 0, 39079) | 0, 37917) | 0;
  __ZNKSt3__28ios_base6getlocEv($17, $76 + (HEAP32[(HEAP32[$76 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $81 = __ZNKSt3__26locale9use_facetERNS0_2idE($17, 66512) | 0;
  $85 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$81 >> 2] | 0) + 28 >> 2] & 127]($81, 10) | 0;
  __ZNSt3__26localeD2Ev($17);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($76, $85) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($76) | 0;
  _abort();
 }
}

function _decode_mcu_DC_first($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$035$i = 0, $$087$lcssa = 0, $$087101 = 0, $$09198 = 0, $$093104 = 0, $$099 = 0, $$1 = 0, $$192 = 0, $$sink = 0, $110 = 0, $113 = 0, $114 = 0, $117 = 0, $119 = 0, $125 = 0, $127 = 0, $130 = 0, $16 = 0, $19 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $4 = 0, $54 = 0, $56 = 0, $57 = 0, $60 = 0, $63 = 0, $65 = 0, $67 = 0, $7 = 0, $71 = 0, $72 = 0, $74 = 0, $76 = 0, $8 = 0, $80 = 0, $82 = 0, $83 = 0, $86 = 0, $89 = 0, $91 = 0, $95 = 0, $spec$select = 0, dest = 0, label = 0, stop = 0;
 $3 = HEAP32[$0 + 468 >> 2] | 0;
 $4 = $0 + 280 | 0;
 if (HEAP32[$4 >> 2] | 0) {
  $7 = $3 + 56 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  if (!$8) {
   if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 + 464 >> 2] | 0) + 8 >> 2] & 127]($0) | 0)) {
    $16 = HEAP32[$0 >> 2] | 0;
    HEAP32[$16 + 20 >> 2] = 25;
    FUNCTION_TABLE_vi[HEAP32[$16 >> 2] & 255]($0);
   }
   $19 = $0 + 340 | 0;
   if ((HEAP32[$19 >> 2] | 0) > 0) {
    $22 = $0 + 224 | 0;
    $23 = $0 + 412 | 0;
    $24 = $0 + 436 | 0;
    $25 = $0 + 420 | 0;
    $$035$i = 0;
    do {
     $27 = HEAP32[$0 + 344 + ($$035$i << 2) >> 2] | 0;
     if (HEAP32[$22 >> 2] | 0) if (!(HEAP32[$23 >> 2] | 0)) {
      if (!(HEAP32[$25 >> 2] | 0)) label = 10;
     } else label = 13; else label = 10;
     do if ((label | 0) == 10) {
      label = 0;
      dest = HEAP32[$3 + 60 + (HEAP32[$27 + 20 >> 2] << 2) >> 2] | 0;
      stop = dest + 64 | 0;
      do {
       HEAP8[dest >> 0] = 0;
       dest = dest + 1 | 0;
      } while ((dest | 0) < (stop | 0));
      HEAP32[$3 + 24 + ($$035$i << 2) >> 2] = 0;
      HEAP32[$3 + 40 + ($$035$i << 2) >> 2] = 0;
      if (!(HEAP32[$22 >> 2] | 0)) if (!(HEAP32[$24 >> 2] | 0)) break; else {
       label = 13;
       break;
      } else if (!(HEAP32[$23 >> 2] | 0)) break; else {
       label = 13;
       break;
      }
     } while (0);
     if ((label | 0) == 13) {
      label = 0;
      _memset(HEAP32[$3 + 124 + (HEAP32[$27 + 24 >> 2] << 2) >> 2] | 0, 0, 256) | 0;
     }
     $$035$i = $$035$i + 1 | 0;
    } while (($$035$i | 0) < (HEAP32[$19 >> 2] | 0));
   }
   HEAP32[$3 + 12 >> 2] = 0;
   HEAP32[$3 + 16 >> 2] = 0;
   HEAP32[$3 + 20 >> 2] = -16;
   $54 = HEAP32[$4 >> 2] | 0;
   HEAP32[$7 >> 2] = $54;
   $56 = $54;
  } else $56 = $8;
  HEAP32[$7 >> 2] = $56 + -1;
 }
 $57 = $3 + 20 | 0;
 if ((HEAP32[$57 >> 2] | 0) == -1) return 1;
 $60 = $0 + 368 | 0;
 if ((HEAP32[$60 >> 2] | 0) <= 0) return 1;
 $63 = $0 + 424 | 0;
 $$093104 = 0;
 L32 : while (1) {
  $65 = HEAP32[$1 + ($$093104 << 2) >> 2] | 0;
  $67 = HEAP32[$0 + 372 + ($$093104 << 2) >> 2] | 0;
  $71 = HEAP32[(HEAP32[$0 + 344 + ($67 << 2) >> 2] | 0) + 20 >> 2] | 0;
  $72 = $3 + 60 + ($71 << 2) | 0;
  $74 = $3 + 40 + ($67 << 2) | 0;
  $76 = (HEAP32[$72 >> 2] | 0) + (HEAP32[$74 >> 2] | 0) | 0;
  if (!(_arith_decode($0, $76) | 0)) {
   HEAP32[$74 >> 2] = 0;
   $130 = HEAP32[$3 + 24 + ($67 << 2) >> 2] | 0;
  } else {
   $80 = _arith_decode($0, $76 + 1 | 0) | 0;
   $82 = $76 + 2 + $80 | 0;
   $83 = _arith_decode($0, $82) | 0;
   if ($83) {
    $86 = (HEAP32[$72 >> 2] | 0) + 20 | 0;
    if (!(_arith_decode($0, $86) | 0)) {
     $$1 = $83;
     $$192 = $86;
    } else {
     $$09198 = $86;
     $$099 = $83;
     while (1) {
      $89 = $$099 << 1;
      if (($89 | 0) == 32768) break L32;
      $95 = $$09198 + 1 | 0;
      if (!(_arith_decode($0, $95) | 0)) {
       $$1 = $89;
       $$192 = $95;
       break;
      } else {
       $$09198 = $95;
       $$099 = $89;
      }
     }
    }
   } else {
    $$1 = 0;
    $$192 = $82;
   }
   do if (($$1 | 0) >= (1 << (HEAPU8[$0 + 232 + $71 >> 0] | 0) >> 1 | 0)) {
    $110 = $80 << 2;
    if (($$1 | 0) > (1 << (HEAPU8[$0 + 248 + $71 >> 0] | 0) >> 1 | 0)) {
     $$sink = $110 + 12 | 0;
     break;
    } else {
     $$sink = $110 + 4 | 0;
     break;
    }
   } else $$sink = 0; while (0);
   HEAP32[$74 >> 2] = $$sink;
   $113 = $$192 + 14 | 0;
   $114 = $$1 >> 1;
   if (!$114) $$087$lcssa = $$1; else {
    $$087101 = $$1;
    $119 = $114;
    while (1) {
     $117 = (_arith_decode($0, $113) | 0) == 0;
     $spec$select = ($117 ? 0 : $119) | $$087101;
     $119 = $119 >> 1;
     if (!$119) {
      $$087$lcssa = $spec$select;
      break;
     } else $$087101 = $spec$select;
    }
   }
   $125 = $3 + 24 + ($67 << 2) | 0;
   $127 = (HEAP32[$125 >> 2] | 0) + (($80 | 0) == 0 ? $$087$lcssa + 1 | 0 : ~$$087$lcssa) | 0;
   HEAP32[$125 >> 2] = $127;
   $130 = $127;
  }
  HEAP16[$65 >> 1] = $130 << HEAP32[$63 >> 2];
  $$093104 = $$093104 + 1 | 0;
  if (($$093104 | 0) >= (HEAP32[$60 >> 2] | 0)) {
   label = 37;
   break;
  }
 }
 if ((label | 0) == 37) return 1;
 $91 = HEAP32[$0 >> 2] | 0;
 HEAP32[$91 + 20 >> 2] = 117;
 FUNCTION_TABLE_vii[HEAP32[$91 + 4 >> 2] & 255]($0, -1);
 HEAP32[$57 >> 2] = -1;
 return 1;
}

function _decode_mcu_AC_refine($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$035$i = 0, $$069$lcssa = 0, $$06980 = 0, $$070 = 0, $$071 = 0, $$172 = 0, $$lcssa = 0, $$lcssa75 = 0, $102 = 0, $103 = 0, $114 = 0, $117 = 0, $118 = 0, $122 = 0, $123 = 0, $126 = 0, $131 = 0, $16 = 0, $19 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $4 = 0, $54 = 0, $56 = 0, $57 = 0, $61 = 0, $62 = 0, $66 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $89 = 0, $93 = 0, $96 = 0, dest = 0, label = 0, stop = 0;
 $3 = HEAP32[$0 + 468 >> 2] | 0;
 $4 = $0 + 280 | 0;
 if (HEAP32[$4 >> 2] | 0) {
  $7 = $3 + 56 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  if (!$8) {
   if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 + 464 >> 2] | 0) + 8 >> 2] & 127]($0) | 0)) {
    $16 = HEAP32[$0 >> 2] | 0;
    HEAP32[$16 + 20 >> 2] = 25;
    FUNCTION_TABLE_vi[HEAP32[$16 >> 2] & 255]($0);
   }
   $19 = $0 + 340 | 0;
   if ((HEAP32[$19 >> 2] | 0) > 0) {
    $22 = $0 + 224 | 0;
    $23 = $0 + 412 | 0;
    $24 = $0 + 436 | 0;
    $25 = $0 + 420 | 0;
    $$035$i = 0;
    do {
     $27 = HEAP32[$0 + 344 + ($$035$i << 2) >> 2] | 0;
     if (HEAP32[$22 >> 2] | 0) if (!(HEAP32[$23 >> 2] | 0)) {
      if (!(HEAP32[$25 >> 2] | 0)) label = 10;
     } else label = 13; else label = 10;
     do if ((label | 0) == 10) {
      label = 0;
      dest = HEAP32[$3 + 60 + (HEAP32[$27 + 20 >> 2] << 2) >> 2] | 0;
      stop = dest + 64 | 0;
      do {
       HEAP8[dest >> 0] = 0;
       dest = dest + 1 | 0;
      } while ((dest | 0) < (stop | 0));
      HEAP32[$3 + 24 + ($$035$i << 2) >> 2] = 0;
      HEAP32[$3 + 40 + ($$035$i << 2) >> 2] = 0;
      if (!(HEAP32[$22 >> 2] | 0)) if (!(HEAP32[$24 >> 2] | 0)) break; else {
       label = 13;
       break;
      } else if (!(HEAP32[$23 >> 2] | 0)) break; else {
       label = 13;
       break;
      }
     } while (0);
     if ((label | 0) == 13) {
      label = 0;
      _memset(HEAP32[$3 + 124 + (HEAP32[$27 + 24 >> 2] << 2) >> 2] | 0, 0, 256) | 0;
     }
     $$035$i = $$035$i + 1 | 0;
    } while (($$035$i | 0) < (HEAP32[$19 >> 2] | 0));
   }
   HEAP32[$3 + 12 >> 2] = 0;
   HEAP32[$3 + 16 >> 2] = 0;
   HEAP32[$3 + 20 >> 2] = -16;
   $54 = HEAP32[$4 >> 2] | 0;
   HEAP32[$7 >> 2] = $54;
   $56 = $54;
  } else $56 = $8;
  HEAP32[$7 >> 2] = $56 + -1;
 }
 $57 = $3 + 20 | 0;
 if ((HEAP32[$57 >> 2] | 0) == -1) return 1;
 $61 = HEAP32[$0 + 432 >> 2] | 0;
 $62 = HEAP32[$1 >> 2] | 0;
 $66 = HEAP32[(HEAP32[$0 + 344 >> 2] | 0) + 24 >> 2] | 0;
 $68 = HEAP32[$0 + 424 >> 2] | 0;
 $69 = 1 << $68;
 $70 = -1 << $68;
 $71 = $0 + 416 | 0;
 $$071 = HEAP32[$71 >> 2] | 0;
 while (1) {
  if (HEAP16[$62 + (HEAP32[$61 + ($$071 << 2) >> 2] << 1) >> 1] | 0) {
   $$172 = $$071;
   break;
  }
  $$071 = $$071 + -1 | 0;
  if (!$$071) {
   $$172 = 0;
   break;
  }
 }
 $83 = $3 + 124 + ($66 << 2) | 0;
 $84 = $3 + 188 | 0;
 $85 = $69 & 65535;
 $86 = $70 & 65535;
 $$070 = (HEAP32[$0 + 412 >> 2] | 0) + -1 | 0;
 L33 : while (1) {
  $89 = (HEAP32[$83 >> 2] | 0) + ($$070 * 3 | 0) | 0;
  if (($$070 | 0) >= ($$172 | 0) ? _arith_decode($0, $89) | 0 : 0) {
   label = 38;
   break;
  }
  $93 = $$070 + 1 | 0;
  $96 = $62 + (HEAP32[$61 + ($93 << 2) >> 2] << 1) | 0;
  L38 : do if (!(HEAP16[$96 >> 1] | 0)) {
   $$06980 = $89;
   $114 = $96;
   $117 = $93;
   while (1) {
    if (_arith_decode($0, $$06980 + 1 | 0) | 0) break;
    if (($117 | 0) >= (HEAP32[$71 >> 2] | 0)) {
     label = 35;
     break L33;
    }
    $122 = $$06980 + 3 | 0;
    $123 = $117 + 1 | 0;
    $126 = $62 + (HEAP32[$61 + ($123 << 2) >> 2] << 1) | 0;
    if (!(HEAP16[$126 >> 1] | 0)) {
     $$06980 = $122;
     $114 = $126;
     $117 = $123;
    } else {
     $$069$lcssa = $122;
     $$lcssa = $126;
     $$lcssa75 = $123;
     label = 26;
     break L38;
    }
   }
   if (!(_arith_decode($0, $84) | 0)) {
    HEAP16[$114 >> 1] = $85;
    $131 = $117;
    break;
   } else {
    HEAP16[$114 >> 1] = $86;
    $131 = $117;
    break;
   }
  } else {
   $$069$lcssa = $89;
   $$lcssa = $96;
   $$lcssa75 = $93;
   label = 26;
  } while (0);
  do if ((label | 0) == 26) {
   label = 0;
   if (_arith_decode($0, $$069$lcssa + 2 | 0) | 0) {
    $102 = HEAP16[$$lcssa >> 1] | 0;
    $103 = $102 << 16 >> 16;
    if ($102 << 16 >> 16 < 0) {
     HEAP16[$$lcssa >> 1] = $70 + $103;
     $131 = $$lcssa75;
     break;
    } else {
     HEAP16[$$lcssa >> 1] = $69 + $103;
     $131 = $$lcssa75;
     break;
    }
   } else $131 = $$lcssa75;
  } while (0);
  if (($131 | 0) < (HEAP32[$71 >> 2] | 0)) $$070 = $131; else {
   label = 38;
   break;
  }
 }
 if ((label | 0) == 35) {
  $118 = HEAP32[$0 >> 2] | 0;
  HEAP32[$118 + 20 >> 2] = 117;
  FUNCTION_TABLE_vii[HEAP32[$118 + 4 >> 2] & 255]($0, -1);
  HEAP32[$57 >> 2] = -1;
  return 1;
 } else if ((label | 0) == 38) return 1;
 return 0;
}

function _extractVisibleFeaturesHomography_172($xsize, $ysize, $trans1, $surfaceSet, $candidate, $candidate2) {
 $xsize = $xsize | 0;
 $ysize = $ysize | 0;
 $trans1 = $trans1 | 0;
 $surfaceSet = $surfaceSet | 0;
 $candidate = $candidate | 0;
 $candidate2 = $candidate2 | 0;
 var $10 = 0.0, $11 = 0.0, $15 = 0, $18 = 0.0, $2 = 0, $21 = 0, $22 = 0.0, $4 = 0, $5 = 0, $7 = 0, $arrayidx56 = 0, $arrayidx61 = 0, $cmp30 = 0, $conv = 0.0, $conv36 = 0.0, $flag112 = 0, $flag132$sink = 0, $i$0 = 0, $j$0 = 0, $j$1 = 0, $k$0 = 0, $k$1 = 0, $l$0 = 0, $l$1 = 0, $l$2 = 0, $l$3 = 0, $l2$0 = 0, $l2$1 = 0, $l2$2 = 0, $l2$3 = 0, $num = 0, $sx = 0, $sy = 0, $trans2 = 0, $vararg_buffer = 0, $w = 0, $wpos = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 $vararg_buffer = sp + 48 | 0;
 $trans2 = sp;
 $sx = sp + 76 | 0;
 $sy = sp + 72 | 0;
 $wpos = sp + 64 | 0;
 $w = sp + 56 | 0;
 $num = $surfaceSet + 4 | 0;
 $conv = +($xsize | 0);
 $conv36 = +($ysize | 0);
 $arrayidx56 = $wpos + 4 | 0;
 $arrayidx61 = $w + 4 | 0;
 $flag112 = $candidate2 + 4812 | 0;
 $i$0 = 0;
 $l$0 = 0;
 $l2$0 = 0;
 L1 : while (1) {
  if (($i$0 | 0) >= (HEAP32[$num >> 2] | 0)) {
   label = 28;
   break;
  }
  $j$0 = 0;
  while (1) {
   if (($j$0 | 0) == 3) break;
   $k$0 = 0;
   while (1) {
    if (($k$0 | 0) == 4) break;
    HEAP32[$trans2 + ($j$0 << 4) + ($k$0 << 2) >> 2] = HEAP32[$trans1 + ($i$0 * 48 | 0) + ($j$0 << 4) + ($k$0 << 2) >> 2];
    $k$0 = $k$0 + 1 | 0;
   }
   $j$0 = $j$0 + 1 | 0;
  }
  $2 = HEAP32[(HEAP32[$surfaceSet >> 2] | 0) + ($i$0 * 112 | 0) + 4 >> 2] | 0;
  $j$1 = 0;
  $l$1 = $l$0;
  $l2$1 = $l2$0;
  while (1) {
   if (($j$1 | 0) >= (HEAP32[$2 + 4 >> 2] | 0)) break;
   $5 = $2;
   $k$1 = 0;
   $l$2 = $l$1;
   $l2$2 = $l2$1;
   while (1) {
    $4 = HEAP32[$5 >> 2] | 0;
    if (($k$1 | 0) >= (HEAP32[$4 + ($j$1 * 20 | 0) + 4 >> 2] | 0)) break;
    $7 = HEAP32[$4 + ($j$1 * 20 | 0) >> 2] | 0;
    $cmp30 = (_ar2MarkerCoord2ScreenCoord2(0, $trans2, +HEAPF32[$7 + ($k$1 * 20 | 0) + 8 >> 2], +HEAPF32[$7 + ($k$1 * 20 | 0) + 12 >> 2], $sx, $sy) | 0) < 0;
    $10 = +HEAPF32[$sx >> 2];
    do if (!($cmp30 | $10 < 0.0) ? ($11 = +HEAPF32[$sy >> 2], !($11 >= $conv36) & (!($10 >= $conv) & !($11 < 0.0))) : 0) {
     $15 = HEAP32[(HEAP32[HEAP32[(HEAP32[$surfaceSet >> 2] | 0) + ($i$0 * 112 | 0) + 4 >> 2] >> 2] | 0) + ($j$1 * 20 | 0) >> 2] | 0;
     HEAP32[$wpos >> 2] = HEAP32[$15 + ($k$1 * 20 | 0) + 8 >> 2];
     HEAP32[$arrayidx56 >> 2] = HEAP32[$15 + ($k$1 * 20 | 0) + 12 >> 2];
     _ar2GetResolution(0, $trans2, $wpos, $w) | 0;
     $18 = +HEAPF32[$arrayidx61 >> 2];
     $21 = HEAP32[HEAP32[(HEAP32[$surfaceSet >> 2] | 0) + ($i$0 * 112 | 0) + 4 >> 2] >> 2] | 0;
     $22 = +HEAPF32[$21 + ($j$1 * 20 | 0) + 12 >> 2];
     if ($18 <= $22 ? $18 >= +HEAPF32[$21 + ($j$1 * 20 | 0) + 16 >> 2] : 0) {
      if (($l$2 | 0) == 200) {
       label = 18;
       break L1;
      }
      HEAP32[$candidate + ($l$2 * 24 | 0) >> 2] = $i$0;
      HEAP32[$candidate + ($l$2 * 24 | 0) + 4 >> 2] = $j$1;
      HEAP32[$candidate + ($l$2 * 24 | 0) + 8 >> 2] = $k$1;
      HEAP32[$candidate + ($l$2 * 24 | 0) + 16 >> 2] = HEAP32[$sx >> 2];
      HEAP32[$candidate + ($l$2 * 24 | 0) + 20 >> 2] = HEAP32[$sy >> 2];
      HEAP32[$candidate + ($l$2 * 24 | 0) + 12 >> 2] = 0;
      $l$3 = $l$2 + 1 | 0;
      $l2$3 = $l2$2;
      break;
     }
     if ($18 <= $22 * 2.0 ? $18 >= +HEAPF32[$21 + ($j$1 * 20 | 0) + 16 >> 2] * .5 : 0) if (($l2$2 | 0) == 200) {
      HEAP32[$flag112 >> 2] = -1;
      $l$3 = $l$2;
      $l2$3 = 200;
      break;
     } else {
      HEAP32[$candidate2 + ($l2$2 * 24 | 0) >> 2] = $i$0;
      HEAP32[$candidate2 + ($l2$2 * 24 | 0) + 4 >> 2] = $j$1;
      HEAP32[$candidate2 + ($l2$2 * 24 | 0) + 8 >> 2] = $k$1;
      HEAP32[$candidate2 + ($l2$2 * 24 | 0) + 16 >> 2] = HEAP32[$sx >> 2];
      HEAP32[$candidate2 + ($l2$2 * 24 | 0) + 20 >> 2] = HEAP32[$sy >> 2];
      HEAP32[$candidate2 + ($l2$2 * 24 | 0) + 12 >> 2] = 0;
      $l$3 = $l$2;
      $l2$3 = $l2$2 + 1 | 0;
      break;
     } else {
      $l$3 = $l$2;
      $l2$3 = $l2$2;
     }
    } else {
     $l$3 = $l$2;
     $l2$3 = $l2$2;
    } while (0);
    $5 = HEAP32[(HEAP32[$surfaceSet >> 2] | 0) + ($i$0 * 112 | 0) + 4 >> 2] | 0;
    $k$1 = $k$1 + 1 | 0;
    $l$2 = $l$3;
    $l2$2 = $l2$3;
   }
   $2 = $5;
   $j$1 = $j$1 + 1 | 0;
   $l$1 = $l$2;
   $l2$1 = $l2$2;
  }
  $i$0 = $i$0 + 1 | 0;
  $l$0 = $l$1;
  $l2$0 = $l2$1;
 }
 if ((label | 0) == 18) {
  _arLog(0, 3, 45962, $vararg_buffer);
  $flag132$sink = $candidate + 4812 | 0;
 } else if ((label | 0) == 28) {
  HEAP32[$candidate + ($l$0 * 24 | 0) + 12 >> 2] = -1;
  $flag132$sink = $candidate2 + ($l2$0 * 24 | 0) + 12 | 0;
 }
 HEAP32[$flag132$sink >> 2] = -1;
 STACKTOP = sp;
 return;
}

function _jpeg_idct_12x6($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0229240 = 0, $$0231239 = 0, $$0232238 = 0, $$0241 = 0, $$1230236 = 0, $$1237 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $109 = 0, $110 = 0, $111 = 0, $113 = 0, $115 = 0, $117 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $124 = 0, $126 = 0, $129 = 0, $131 = 0, $135 = 0, $139 = 0, $144 = 0, $145 = 0, $146 = 0, $148 = 0, $15 = 0, $150 = 0, $152 = 0, $22 = 0, $23 = 0, $25 = 0, $32 = 0, $33 = 0, $34 = 0, $40 = 0, $46 = 0, $5 = 0, $52 = 0, $54 = 0, $57 = 0, $60 = 0, $63 = 0, $7 = 0, $83 = 0, $86 = 0, $89 = 0, $92 = 0, $93 = 0, $94 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(192);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0229240 = $5;
 $$0231239 = HEAP32[$1 + 84 >> 2] | 0;
 $$0232238 = $2;
 $$0241 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0232238 >> 1] << 13, HEAP32[$$0231239 >> 2] | 0) | 0 | 1024;
  $22 = Math_imul((HEAP16[$$0232238 + 64 >> 1] | 0) * 5793 | 0, HEAP32[$$0231239 + 128 >> 2] | 0) | 0;
  $23 = $22 + $15 | 0;
  $25 = (Math_imul($22, -2) | 0) + $15 >> 11;
  $32 = Math_imul((HEAP16[$$0232238 + 32 >> 1] | 0) * 10033 | 0, HEAP32[$$0231239 + 64 >> 2] | 0) | 0;
  $33 = $32 + $23 | 0;
  $34 = $23 - $32 | 0;
  $40 = Math_imul(HEAP32[$$0231239 + 32 >> 2] | 0, HEAP16[$$0232238 + 16 >> 1] | 0) | 0;
  $46 = Math_imul(HEAP32[$$0231239 + 96 >> 2] | 0, HEAP16[$$0232238 + 48 >> 1] | 0) | 0;
  $52 = Math_imul(HEAP32[$$0231239 + 160 >> 2] | 0, HEAP16[$$0232238 + 80 >> 1] | 0) | 0;
  $54 = ($52 + $40 | 0) * 2998 | 0;
  $57 = $54 + ($46 + $40 << 13) | 0;
  $60 = $54 + ($52 - $46 << 13) | 0;
  $63 = $40 - $46 - $52 << 2;
  HEAP32[$$0229240 >> 2] = $57 + $33 >> 11;
  HEAP32[$$0229240 + 160 >> 2] = $33 - $57 >> 11;
  HEAP32[$$0229240 + 32 >> 2] = $63 + $25;
  HEAP32[$$0229240 + 128 >> 2] = $25 - $63;
  HEAP32[$$0229240 + 64 >> 2] = $60 + $34 >> 11;
  HEAP32[$$0229240 + 96 >> 2] = $34 - $60 >> 11;
  $$0241 = $$0241 + 1 | 0;
  if (($$0241 | 0) == 8) break; else {
   $$0229240 = $$0229240 + 4 | 0;
   $$0231239 = $$0231239 + 4 | 0;
   $$0232238 = $$0232238 + 2 | 0;
  }
 }
 $83 = $7 + -384 | 0;
 $$1230236 = $5;
 $$1237 = 0;
 while (1) {
  $86 = (HEAP32[$3 + ($$1237 << 2) >> 2] | 0) + $4 | 0;
  $89 = (HEAP32[$$1230236 >> 2] << 13) + 134348800 | 0;
  $92 = (HEAP32[$$1230236 + 16 >> 2] | 0) * 10033 | 0;
  $93 = $89 + $92 | 0;
  $94 = $89 - $92 | 0;
  $96 = HEAP32[$$1230236 + 8 >> 2] | 0;
  $101 = HEAP32[$$1230236 + 24 >> 2] << 13;
  $102 = ($96 << 13) - $101 | 0;
  $103 = $102 + $89 | 0;
  $104 = $89 - $102 | 0;
  $105 = $101 + ($96 * 11190 | 0) | 0;
  $106 = $105 + $93 | 0;
  $107 = $93 - $105 | 0;
  $109 = ($96 * 2998 | 0) - $101 | 0;
  $110 = $109 + $94 | 0;
  $111 = $94 - $109 | 0;
  $113 = HEAP32[$$1230236 + 4 >> 2] | 0;
  $115 = HEAP32[$$1230236 + 12 >> 2] | 0;
  $117 = HEAP32[$$1230236 + 20 >> 2] | 0;
  $119 = HEAP32[$$1230236 + 28 >> 2] | 0;
  $120 = $115 * 10703 | 0;
  $121 = Math_imul($115, -4433) | 0;
  $122 = $117 + $113 | 0;
  $124 = ($122 + $119 | 0) * 7053 | 0;
  $126 = $124 + ($122 * 2139 | 0) | 0;
  $129 = $120 + ($113 * 2295 | 0) + $126 | 0;
  $131 = Math_imul($119 + $117 | 0, -8565) | 0;
  $135 = (Math_imul($117, -12112) | 0) + $121 + $131 + $126 | 0;
  $139 = ($119 * 12998 | 0) - $120 + $124 + $131 | 0;
  $144 = $121 + (Math_imul($113, -5540) | 0) + (Math_imul($119, -16244) | 0) + $124 | 0;
  $145 = $113 - $119 | 0;
  $146 = $115 - $117 | 0;
  $148 = ($145 + $146 | 0) * 4433 | 0;
  $150 = $148 + ($145 * 6270 | 0) | 0;
  $152 = $148 + (Math_imul($146, -15137) | 0) | 0;
  HEAP8[$86 >> 0] = HEAP8[$83 + (($129 + $106 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 11 >> 0] = HEAP8[$83 + (($106 - $129 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 1 >> 0] = HEAP8[$83 + (($150 + $103 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 10 >> 0] = HEAP8[$83 + (($103 - $150 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 2 >> 0] = HEAP8[$83 + (($135 + $110 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 9 >> 0] = HEAP8[$83 + (($110 - $135 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 3 >> 0] = HEAP8[$83 + (($139 + $111 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 8 >> 0] = HEAP8[$83 + (($111 - $139 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 4 >> 0] = HEAP8[$83 + (($152 + $104 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 7 >> 0] = HEAP8[$83 + (($104 - $152 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 5 >> 0] = HEAP8[$83 + (($144 + $107 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 6 >> 0] = HEAP8[$83 + (($107 - $144 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1237 = $$1237 + 1 | 0;
  if (($$1237 | 0) == 6) break; else $$1230236 = $$1230236 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function _jpeg_idct_6x12($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0225236 = 0, $$0227235 = 0, $$0228234 = 0, $$0237 = 0, $$1226232 = 0, $$1233 = 0, $100 = 0, $102 = 0, $104 = 0, $106 = 0, $146 = 0, $149 = 0, $15 = 0, $152 = 0, $155 = 0, $156 = 0, $158 = 0, $161 = 0, $162 = 0, $163 = 0, $165 = 0, $167 = 0, $169 = 0, $171 = 0, $174 = 0, $177 = 0, $180 = 0, $22 = 0, $23 = 0, $24 = 0, $30 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $55 = 0, $61 = 0, $67 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $78 = 0, $80 = 0, $83 = 0, $85 = 0, $89 = 0, $93 = 0, $98 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0225236 = $5;
 $$0227235 = HEAP32[$1 + 84 >> 2] | 0;
 $$0228234 = $2;
 $$0237 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0228234 >> 1] << 13, HEAP32[$$0227235 >> 2] | 0) | 0 | 1024;
  $22 = Math_imul((HEAP16[$$0228234 + 64 >> 1] | 0) * 10033 | 0, HEAP32[$$0227235 + 128 >> 2] | 0) | 0;
  $23 = $22 + $15 | 0;
  $24 = $15 - $22 | 0;
  $30 = Math_imul(HEAP32[$$0227235 + 64 >> 2] | 0, HEAP16[$$0228234 + 32 >> 1] | 0) | 0;
  $39 = Math_imul(HEAP16[$$0228234 + 96 >> 1] << 13, HEAP32[$$0227235 + 192 >> 2] | 0) | 0;
  $40 = ($30 << 13) - $39 | 0;
  $41 = $40 + $15 | 0;
  $42 = $15 - $40 | 0;
  $43 = $39 + ($30 * 11190 | 0) | 0;
  $44 = $43 + $23 | 0;
  $45 = $23 - $43 | 0;
  $47 = ($30 * 2998 | 0) - $39 | 0;
  $48 = $47 + $24 | 0;
  $49 = $24 - $47 | 0;
  $55 = Math_imul(HEAP32[$$0227235 + 32 >> 2] | 0, HEAP16[$$0228234 + 16 >> 1] | 0) | 0;
  $61 = Math_imul(HEAP32[$$0227235 + 96 >> 2] | 0, HEAP16[$$0228234 + 48 >> 1] | 0) | 0;
  $67 = Math_imul(HEAP32[$$0227235 + 160 >> 2] | 0, HEAP16[$$0228234 + 80 >> 1] | 0) | 0;
  $73 = Math_imul(HEAP32[$$0227235 + 224 >> 2] | 0, HEAP16[$$0228234 + 112 >> 1] | 0) | 0;
  $74 = $61 * 10703 | 0;
  $75 = Math_imul($61, -4433) | 0;
  $76 = $67 + $55 | 0;
  $78 = ($73 + $76 | 0) * 7053 | 0;
  $80 = $78 + ($76 * 2139 | 0) | 0;
  $83 = $74 + ($55 * 2295 | 0) + $80 | 0;
  $85 = Math_imul($73 + $67 | 0, -8565) | 0;
  $89 = (Math_imul($67, -12112) | 0) + $75 + $85 + $80 | 0;
  $93 = ($73 * 12998 | 0) - $74 + $78 + $85 | 0;
  $98 = $75 + (Math_imul($55, -5540) | 0) + (Math_imul($73, -16244) | 0) + $78 | 0;
  $99 = $55 - $73 | 0;
  $100 = $61 - $67 | 0;
  $102 = ($99 + $100 | 0) * 4433 | 0;
  $104 = $102 + ($99 * 6270 | 0) | 0;
  $106 = $102 + (Math_imul($100, -15137) | 0) | 0;
  HEAP32[$$0225236 >> 2] = $83 + $44 >> 11;
  HEAP32[$$0225236 + 264 >> 2] = $44 - $83 >> 11;
  HEAP32[$$0225236 + 24 >> 2] = $104 + $41 >> 11;
  HEAP32[$$0225236 + 240 >> 2] = $41 - $104 >> 11;
  HEAP32[$$0225236 + 48 >> 2] = $89 + $48 >> 11;
  HEAP32[$$0225236 + 216 >> 2] = $48 - $89 >> 11;
  HEAP32[$$0225236 + 72 >> 2] = $93 + $49 >> 11;
  HEAP32[$$0225236 + 192 >> 2] = $49 - $93 >> 11;
  HEAP32[$$0225236 + 96 >> 2] = $106 + $42 >> 11;
  HEAP32[$$0225236 + 168 >> 2] = $42 - $106 >> 11;
  HEAP32[$$0225236 + 120 >> 2] = $98 + $45 >> 11;
  HEAP32[$$0225236 + 144 >> 2] = $45 - $98 >> 11;
  $$0237 = $$0237 + 1 | 0;
  if (($$0237 | 0) == 6) break; else {
   $$0225236 = $$0225236 + 4 | 0;
   $$0227235 = $$0227235 + 4 | 0;
   $$0228234 = $$0228234 + 2 | 0;
  }
 }
 $146 = $7 + -384 | 0;
 $$1226232 = $5;
 $$1233 = 0;
 while (1) {
  $149 = (HEAP32[$3 + ($$1233 << 2) >> 2] | 0) + $4 | 0;
  $152 = (HEAP32[$$1226232 >> 2] << 13) + 134348800 | 0;
  $155 = (HEAP32[$$1226232 + 16 >> 2] | 0) * 5793 | 0;
  $156 = $152 + $155 | 0;
  $158 = $152 - $155 - $155 | 0;
  $161 = (HEAP32[$$1226232 + 8 >> 2] | 0) * 10033 | 0;
  $162 = $156 + $161 | 0;
  $163 = $156 - $161 | 0;
  $165 = HEAP32[$$1226232 + 4 >> 2] | 0;
  $167 = HEAP32[$$1226232 + 12 >> 2] | 0;
  $169 = HEAP32[$$1226232 + 20 >> 2] | 0;
  $171 = ($169 + $165 | 0) * 2998 | 0;
  $174 = $171 + ($167 + $165 << 13) | 0;
  $177 = $171 + ($169 - $167 << 13) | 0;
  $180 = $165 - $167 - $169 << 13;
  HEAP8[$149 >> 0] = HEAP8[$146 + (($174 + $162 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 5 >> 0] = HEAP8[$146 + (($162 - $174 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 1 >> 0] = HEAP8[$146 + (($180 + $158 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 4 >> 0] = HEAP8[$146 + (($158 - $180 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 2 >> 0] = HEAP8[$146 + (($177 + $163 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$149 + 3 >> 0] = HEAP8[$146 + (($163 - $177 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1233 = $$1233 + 1 | 0;
  if (($$1233 | 0) == 12) break; else $$1226232 = $$1226232 + 24 | 0;
 }
 STACKTOP = sp;
 return;
}

function _ar2ReadFeatureSet($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$067 = 0, $$068 = 0, $$069 = 0, $$070 = 0, $10 = 0, $12 = 0, $2 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $33 = 0, $5 = 0, $7 = 0, $vararg_buffer = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer19 = 0, $vararg_buffer2 = 0, $vararg_buffer21 = 0, $vararg_buffer23 = 0, $vararg_buffer25 = 0, $vararg_buffer27 = 0, $vararg_buffer29 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 640 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(640);
 $vararg_buffer29 = sp + 624 | 0;
 $vararg_buffer27 = sp + 616 | 0;
 $vararg_buffer25 = sp + 608 | 0;
 $vararg_buffer23 = sp + 600 | 0;
 $vararg_buffer21 = sp + 592 | 0;
 $vararg_buffer19 = sp + 584 | 0;
 $vararg_buffer17 = sp + 576 | 0;
 $vararg_buffer15 = sp + 568 | 0;
 $vararg_buffer13 = sp + 560 | 0;
 $vararg_buffer11 = sp + 552 | 0;
 $vararg_buffer9 = sp + 544 | 0;
 $vararg_buffer7 = sp + 536 | 0;
 $vararg_buffer5 = sp + 528 | 0;
 $vararg_buffer2 = sp + 520 | 0;
 $vararg_buffer = sp + 512 | 0;
 $2 = sp;
 HEAP32[$vararg_buffer >> 2] = $0;
 HEAP32[$vararg_buffer + 4 >> 2] = $1;
 _sprintf($2, 26699, $vararg_buffer) | 0;
 $3 = _fopen($2, 26308) | 0;
 if (!$3) {
  HEAP32[$vararg_buffer2 >> 2] = $0;
  _arLog(0, 3, 25890, $vararg_buffer2);
  $$070 = 0;
 } else {
  $5 = _malloc(8) | 0;
  if (!$5) {
   _arLog(0, 3, 45930, $vararg_buffer5);
   _exit(1);
  }
  $7 = $5 + 4 | 0;
  L7 : do if ((_fread($7, 4, 1, $3) | 0) == 1) {
   $10 = HEAP32[$7 >> 2] | 0;
   $12 = _malloc($10 * 20 | 0) | 0;
   HEAP32[$5 >> 2] = $12;
   if (!$12) {
    _arLog(0, 3, 45930, $vararg_buffer9);
    _exit(1);
   }
   $$068 = 0;
   L12 : while (1) {
    if (($$068 | 0) >= ($10 | 0)) {
     $$069 = $5;
     break L7;
    }
    if ((_fread($12 + ($$068 * 20 | 0) + 8 | 0, 4, 1, $3) | 0) != 1) {
     label = 12;
     break;
    }
    if ((_fread($12 + ($$068 * 20 | 0) + 12 | 0, 4, 1, $3) | 0) != 1) {
     label = 15;
     break;
    }
    if ((_fread($12 + ($$068 * 20 | 0) + 16 | 0, 4, 1, $3) | 0) != 1) {
     label = 17;
     break;
    }
    $24 = $12 + ($$068 * 20 | 0) + 4 | 0;
    if ((_fread($24, 4, 1, $3) | 0) != 1) {
     label = 19;
     break;
    }
    $27 = HEAP32[$24 >> 2] | 0;
    $29 = _malloc($27 * 20 | 0) | 0;
    $30 = $12 + ($$068 * 20 | 0) | 0;
    HEAP32[$30 >> 2] = $29;
    if (!$29) {
     label = 22;
     break;
    }
    $$067 = 0;
    $33 = $27;
    while (1) {
     if (($$067 | 0) >= ($33 | 0)) break;
     if ((_fread((HEAP32[$30 >> 2] | 0) + ($$067 * 20 | 0) | 0, 4, 1, $3) | 0) != 1) {
      label = 25;
      break L12;
     }
     if ((_fread((HEAP32[$30 >> 2] | 0) + ($$067 * 20 | 0) + 4 | 0, 4, 1, $3) | 0) != 1) {
      label = 27;
      break L12;
     }
     if ((_fread((HEAP32[$30 >> 2] | 0) + ($$067 * 20 | 0) + 8 | 0, 4, 1, $3) | 0) != 1) {
      label = 29;
      break L12;
     }
     if ((_fread((HEAP32[$30 >> 2] | 0) + ($$067 * 20 | 0) + 12 | 0, 4, 1, $3) | 0) != 1) {
      label = 31;
      break L12;
     }
     if ((_fread((HEAP32[$30 >> 2] | 0) + ($$067 * 20 | 0) + 16 | 0, 4, 1, $3) | 0) != 1) {
      label = 34;
      break L12;
     }
     $$067 = $$067 + 1 | 0;
     $33 = HEAP32[$24 >> 2] | 0;
    }
    $$068 = $$068 + 1 | 0;
   }
   switch (label | 0) {
   case 12:
    {
     _arLog(0, 3, 25911, $vararg_buffer11);
     break;
    }
   case 15:
    {
     _arLog(0, 3, 25911, $vararg_buffer13);
     break;
    }
   case 17:
    {
     _arLog(0, 3, 25911, $vararg_buffer15);
     break;
    }
   case 19:
    {
     _arLog(0, 3, 25911, $vararg_buffer17);
     break;
    }
   case 22:
    {
     _arLog(0, 3, 45930, $vararg_buffer19);
     _exit(1);
     break;
    }
   case 25:
    {
     _arLog(0, 3, 25911, $vararg_buffer21);
     break;
    }
   case 27:
    {
     _arLog(0, 3, 25911, $vararg_buffer23);
     break;
    }
   case 29:
    {
     _arLog(0, 3, 25911, $vararg_buffer25);
     break;
    }
   case 31:
    {
     _arLog(0, 3, 25911, $vararg_buffer27);
     break;
    }
   case 34:
    {
     _arLog(0, 3, 25911, $vararg_buffer29);
     break;
    }
   }
   $$0 = 0;
   while (1) {
    if (($$0 | 0) == ($$068 | 0)) break;
    _free(HEAP32[$12 + ($$0 * 20 | 0) >> 2] | 0);
    $$0 = $$0 + 1 | 0;
   }
   _free($12);
   label = 39;
  } else {
   _arLog(0, 3, 25911, $vararg_buffer7);
   label = 39;
  } while (0);
  if ((label | 0) == 39) {
   _free($5);
   $$069 = 0;
  }
  _fclose($3) | 0;
  $$070 = $$069;
 }
 STACKTOP = sp;
 return $$070 | 0;
}

function _getNFTMarkerInfo($id, $markerIndex) {
 $id = $id | 0;
 $markerIndex = $markerIndex | 0;
 var $12 = 0.0, $14 = 0, $15 = 0, $18 = 0, $3 = 0, $7 = 0, $8 = 0, $call44 = 0, $call7 = 0, $detectedPage = 0, $err = 0, $flag$0 = 0, $flag$1 = 0, $i$0 = 0, $id$addr = 0, $j$0 = 0, $k$0 = 0, $kpmHandle = 0, $kpmResult = 0, $kpmResultNum = 0, $retval$1 = 0, $sub = 0, $surfaceSetCount = 0, $trans = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 $vararg_buffer1 = sp + 56 | 0;
 $vararg_buffer = sp + 48 | 0;
 $id$addr = sp + 72 | 0;
 $kpmResult = sp + 76 | 0;
 $kpmResultNum = sp + 68 | 0;
 $trans = sp;
 $err = sp + 64 | 0;
 HEAP32[$id$addr >> 2] = $id;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(65260, $id$addr) | 0)) $retval$1 = HEAP32[4224] | 0; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(65260, $id$addr) | 0;
  $surfaceSetCount = $call7 + 244 | 0;
  if ((HEAP32[$surfaceSetCount >> 2] | 0) <= ($markerIndex | 0)) {
   $retval$1 = HEAP32[4226] | 0;
   break;
  }
  HEAP32[$kpmResult >> 2] = 0;
  HEAP32[$kpmResultNum >> 2] = -1;
  HEAPF32[$err >> 2] = -1.0;
  $detectedPage = $call7 + 240 | 0;
  $3 = HEAP32[$detectedPage >> 2] | 0;
  do if (($3 | 0) == -2) {
   $kpmHandle = $call7 + 232 | 0;
   _kpmMatching(HEAP32[$kpmHandle >> 2] | 0, HEAP32[$call7 + 204 >> 2] | 0) | 0;
   _kpmGetResult(HEAP32[$kpmHandle >> 2] | 0, $kpmResult, $kpmResultNum) | 0;
   $7 = HEAP32[$kpmResultNum >> 2] | 0;
   $8 = HEAP32[$kpmResult >> 2] | 0;
   $flag$0 = -1;
   $i$0 = 0;
   while (1) {
    if (($i$0 | 0) >= ($7 | 0)) break;
    do if ((HEAP32[$8 + ($i$0 * 68 | 0) + 48 >> 2] | 0) == ($markerIndex | 0) ? (HEAP32[$8 + ($i$0 * 68 | 0) + 60 >> 2] | 0) == 0 : 0) {
     if (($flag$0 | 0) == -1) $14 = HEAP32[$8 + ($i$0 * 68 | 0) + 52 >> 2] | 0; else {
      $12 = +HEAPF32[$8 + ($i$0 * 68 | 0) + 52 >> 2];
      if (!(+HEAPF32[$err >> 2] > $12)) {
       $flag$1 = $flag$0;
       break;
      }
      $14 = (HEAPF32[tempDoublePtr >> 2] = $12, HEAP32[tempDoublePtr >> 2] | 0);
     }
     HEAP32[$err >> 2] = $14;
     $flag$1 = $i$0;
    } else $flag$1 = $flag$0; while (0);
    $flag$0 = $flag$1;
    $i$0 = $i$0 + 1 | 0;
   }
   if (($flag$0 | 0) <= -1) {
    HEAP32[$detectedPage >> 2] = -2;
    label = 30;
    break;
   }
   $15 = HEAP32[$8 + 48 >> 2] | 0;
   HEAP32[$detectedPage >> 2] = $15;
   $j$0 = 0;
   while (1) {
    if (($j$0 | 0) == 3) break;
    $k$0 = 0;
    while (1) {
     if (($k$0 | 0) == 4) break;
     HEAP32[$trans + ($j$0 << 4) + ($k$0 << 2) >> 2] = HEAP32[$8 + ($flag$0 * 68 | 0) + ($j$0 << 4) + ($k$0 << 2) >> 2];
     $k$0 = $k$0 + 1 | 0;
    }
    $j$0 = $j$0 + 1 | 0;
   }
   _ar2SetInitTrans(HEAP32[$call7 + 248 + ($15 << 2) >> 2] | 0, $trans) | 0;
   $18 = HEAP32[$detectedPage >> 2] | 0;
   label = 25;
  } else {
   $18 = $3;
   label = 25;
  } while (0);
  do if ((label | 0) == 25) if (($18 | 0) > -1) {
   $call44 = _ar2TrackingMod(HEAP32[$call7 + 236 >> 2] | 0, HEAP32[$call7 + 248 + ($18 << 2) >> 2] | 0, HEAP32[$call7 + 196 >> 2] | 0, $trans, $err) | 0;
   if (($call44 | 0) < 0) {
    HEAP32[$vararg_buffer >> 2] = $call44;
    _arLog(0, 1, 41773, $vararg_buffer);
    HEAP32[$detectedPage >> 2] = -2;
    label = 30;
    break;
   }
   $sub = (HEAP32[$surfaceSetCount >> 2] | 0) + -1 | 0;
   HEAP32[$vararg_buffer1 >> 2] = HEAP32[$call7 + 248 + (HEAP32[$detectedPage >> 2] << 2) >> 2];
   HEAP32[$vararg_buffer1 + 4 >> 2] = $sub;
   _arLog(0, 1, 41792, $vararg_buffer1);
   if ((HEAP32[$detectedPage >> 2] | 0) > -1) _emscripten_asm_const_iiddddddddddddd(3, $markerIndex | 0, +(+HEAPF32[$err >> 2]), +(+HEAPF32[$trans >> 2]), +(+HEAPF32[$trans + 4 >> 2]), +(+HEAPF32[$trans + 8 >> 2]), +(+HEAPF32[$trans + 12 >> 2]), +(+HEAPF32[$trans + 16 >> 2]), +(+HEAPF32[$trans + 20 >> 2]), +(+HEAPF32[$trans + 24 >> 2]), +(+HEAPF32[$trans + 28 >> 2]), +(+HEAPF32[$trans + 32 >> 2]), +(+HEAPF32[$trans + 36 >> 2]), +(+HEAPF32[$trans + 40 >> 2]), +(+HEAPF32[$trans + 44 >> 2])) | 0; else label = 30;
  } else label = 30; while (0);
  if ((label | 0) == 30) _emscripten_asm_const_ii(4, $markerIndex | 0) | 0;
  $retval$1 = 0;
 } while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function __ZN6vision21HoughSimilarityVoting19autoAdjustXYNumBinsEPKfS2_i($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$041 = 0, $103 = 0.0, $16 = 0, $21 = 0, $25 = 0, $33 = 0, $38 = 0, $4 = 0, $42 = 0, $5 = 0, $50 = 0, $55 = 0, $59 = 0, $60 = 0.0, $61 = 0, $67 = 0.0, $7 = 0, $76 = 0, $77 = 0, $86 = 0, $89 = 0, $9 = 0, $93 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp + 12 | 0;
 $5 = sp;
 $7 = $0 + 4 | 0;
 $9 = __ZN6vision4max2IiEET_S1_S1_(HEAP32[$0 >> 2] | 0, HEAP32[$7 >> 2] | 0) | 0;
 __ZNSt3__26vectorIfNS_9allocatorIfEEEC2Em($5, $3);
 if (($3 | 0) <= 0) {
  $16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37216) | 0, 37248) | 0, 39072) | 0, 208) | 0, 39079) | 0, 37337) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $16 + (HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 127]($21, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($16, $25) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($16) | 0;
  _abort();
 }
 if ((HEAP32[$0 >> 2] | 0) <= 0) {
  $33 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37359) | 0, 37248) | 0, 39072) | 0, 209) | 0, 39079) | 0, 37401) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $33 + (HEAP32[(HEAP32[$33 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $38 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $42 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$38 >> 2] | 0) + 28 >> 2] & 127]($38, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($33, $42) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($33) | 0;
  _abort();
 }
 if ((HEAP32[$7 >> 2] | 0) <= 0) {
  $50 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37424) | 0, 37248) | 0, 39072) | 0, 210) | 0, 39079) | 0, 37467) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $50 + (HEAP32[(HEAP32[$50 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $55 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $59 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$55 >> 2] | 0) + 28 >> 2] & 127]($55, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($50, $59) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($50) | 0;
  _abort();
 }
 $60 = +($9 | 0);
 $$041 = 0;
 while (1) {
  if (($$041 | 0) == ($3 | 0)) break;
  $95 = $$041 << 2;
  $103 = +__ZN6vision12SafeDivisionIfEET_S1_S1_(+HEAPF32[$1 + ($95 << 2) + 12 >> 2], +HEAPF32[$2 + ($95 << 2) + 12 >> 2]) * $60;
  HEAPF32[(HEAP32[$5 >> 2] | 0) + ($$041 << 2) >> 2] = $103;
  $$041 = $$041 + 1 | 0;
 }
 $61 = HEAP32[$5 >> 2] | 0;
 $67 = +__ZN6vision10FastMedianIfEET_PS1_i($61, (HEAP32[$5 + 4 >> 2] | 0) - $61 >> 2) * .25;
 $76 = __ZN6vision4max2IiEET_S1_S1_(5, ~~+Math_ceil(+((+HEAPF32[$0 + 24 >> 2] - +HEAPF32[$0 + 20 >> 2]) / $67))) | 0;
 $77 = $0 + 52 | 0;
 HEAP32[$77 >> 2] = $76;
 $86 = __ZN6vision4max2IiEET_S1_S1_(5, ~~+Math_ceil(+((+HEAPF32[$0 + 32 >> 2] - +HEAPF32[$0 + 28 >> 2]) / $67))) | 0;
 HEAP32[$0 + 56 >> 2] = $86;
 $89 = Math_imul(HEAP32[$77 >> 2] | 0, $86) | 0;
 HEAP32[$0 + 84 >> 2] = $89;
 $93 = Math_imul(HEAP32[$0 + 60 >> 2] | 0, $89) | 0;
 HEAP32[$0 + 88 >> 2] = $93;
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev($5);
 STACKTOP = sp;
 return;
}

function _jpeg_core_output_dimensions($0) {
 $0 = $0 | 0;
 var $$0169170 = 0, $$0171 = 0, $$sink173 = 0, $$sink177 = 0, $100 = 0, $11 = 0, $110 = 0, $120 = 0, $130 = 0, $140 = 0, $148 = 0, $150 = 0, $156 = 0, $162 = 0, $167 = 0, $20 = 0, $3 = 0, $30 = 0, $4 = 0, $40 = 0, $5 = 0, $50 = 0, $60 = 0, $7 = 0, $70 = 0, $80 = 0, $90 = 0;
 $3 = $0 + 428 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = Math_imul($4, HEAP32[$0 + 48 >> 2] | 0) | 0;
 $7 = HEAP32[$0 + 52 >> 2] | 0;
 do if ($5 >>> 0 > $7 >>> 0) {
  if ($5 >>> 0 <= $7 << 1 >>> 0) {
   $20 = _jdiv_round_up(HEAP32[$0 + 28 >> 2] << 1, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $20;
   $$sink173 = 2;
   $$sink177 = HEAP32[$0 + 32 >> 2] << 1;
   break;
  }
  if ($5 >>> 0 <= ($7 * 3 | 0) >>> 0) {
   $30 = _jdiv_round_up((HEAP32[$0 + 28 >> 2] | 0) * 3 | 0, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $30;
   $$sink173 = 3;
   $$sink177 = (HEAP32[$0 + 32 >> 2] | 0) * 3 | 0;
   break;
  }
  if ($5 >>> 0 <= $7 << 2 >>> 0) {
   $40 = _jdiv_round_up(HEAP32[$0 + 28 >> 2] << 2, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $40;
   $$sink173 = 4;
   $$sink177 = HEAP32[$0 + 32 >> 2] << 2;
   break;
  }
  if ($5 >>> 0 <= ($7 * 5 | 0) >>> 0) {
   $50 = _jdiv_round_up((HEAP32[$0 + 28 >> 2] | 0) * 5 | 0, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $50;
   $$sink173 = 5;
   $$sink177 = (HEAP32[$0 + 32 >> 2] | 0) * 5 | 0;
   break;
  }
  if ($5 >>> 0 <= ($7 * 6 | 0) >>> 0) {
   $60 = _jdiv_round_up((HEAP32[$0 + 28 >> 2] | 0) * 6 | 0, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $60;
   $$sink173 = 6;
   $$sink177 = (HEAP32[$0 + 32 >> 2] | 0) * 6 | 0;
   break;
  }
  if ($5 >>> 0 <= ($7 * 7 | 0) >>> 0) {
   $70 = _jdiv_round_up((HEAP32[$0 + 28 >> 2] | 0) * 7 | 0, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $70;
   $$sink173 = 7;
   $$sink177 = (HEAP32[$0 + 32 >> 2] | 0) * 7 | 0;
   break;
  }
  if ($5 >>> 0 <= $7 << 3 >>> 0) {
   $80 = _jdiv_round_up(HEAP32[$0 + 28 >> 2] << 3, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $80;
   $$sink173 = 8;
   $$sink177 = HEAP32[$0 + 32 >> 2] << 3;
   break;
  }
  if ($5 >>> 0 <= ($7 * 9 | 0) >>> 0) {
   $90 = _jdiv_round_up((HEAP32[$0 + 28 >> 2] | 0) * 9 | 0, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $90;
   $$sink173 = 9;
   $$sink177 = (HEAP32[$0 + 32 >> 2] | 0) * 9 | 0;
   break;
  }
  if ($5 >>> 0 <= ($7 * 10 | 0) >>> 0) {
   $100 = _jdiv_round_up((HEAP32[$0 + 28 >> 2] | 0) * 10 | 0, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $100;
   $$sink173 = 10;
   $$sink177 = (HEAP32[$0 + 32 >> 2] | 0) * 10 | 0;
   break;
  }
  if ($5 >>> 0 <= ($7 * 11 | 0) >>> 0) {
   $110 = _jdiv_round_up((HEAP32[$0 + 28 >> 2] | 0) * 11 | 0, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $110;
   $$sink173 = 11;
   $$sink177 = (HEAP32[$0 + 32 >> 2] | 0) * 11 | 0;
   break;
  }
  if ($5 >>> 0 <= ($7 * 12 | 0) >>> 0) {
   $120 = _jdiv_round_up((HEAP32[$0 + 28 >> 2] | 0) * 12 | 0, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $120;
   $$sink173 = 12;
   $$sink177 = (HEAP32[$0 + 32 >> 2] | 0) * 12 | 0;
   break;
  }
  if ($5 >>> 0 <= ($7 * 13 | 0) >>> 0) {
   $130 = _jdiv_round_up((HEAP32[$0 + 28 >> 2] | 0) * 13 | 0, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $130;
   $$sink173 = 13;
   $$sink177 = (HEAP32[$0 + 32 >> 2] | 0) * 13 | 0;
   break;
  }
  if ($5 >>> 0 <= ($7 * 14 | 0) >>> 0) {
   $140 = _jdiv_round_up((HEAP32[$0 + 28 >> 2] | 0) * 14 | 0, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $140;
   $$sink173 = 14;
   $$sink177 = (HEAP32[$0 + 32 >> 2] | 0) * 14 | 0;
   break;
  }
  $148 = HEAP32[$0 + 28 >> 2] | 0;
  if ($5 >>> 0 > ($7 * 15 | 0) >>> 0) {
   $156 = _jdiv_round_up($148 << 4, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $156;
   $$sink173 = 16;
   $$sink177 = HEAP32[$0 + 32 >> 2] << 4;
   break;
  } else {
   $150 = _jdiv_round_up($148 * 15 | 0, $4) | 0;
   HEAP32[$0 + 112 >> 2] = $150;
   $$sink173 = 15;
   $$sink177 = (HEAP32[$0 + 32 >> 2] | 0) * 15 | 0;
   break;
  }
 } else {
  $11 = _jdiv_round_up(HEAP32[$0 + 28 >> 2] | 0, $4) | 0;
  HEAP32[$0 + 112 >> 2] = $11;
  $$sink173 = 1;
  $$sink177 = HEAP32[$0 + 32 >> 2] | 0;
 } while (0);
 $162 = _jdiv_round_up($$sink177, HEAP32[$3 >> 2] | 0) | 0;
 HEAP32[$0 + 116 >> 2] = $162;
 HEAP32[$0 + 324 >> 2] = $$sink173;
 HEAP32[$0 + 328 >> 2] = $$sink173;
 $167 = HEAP32[$0 + 36 >> 2] | 0;
 if (($167 | 0) <= 0) return;
 $$0169170 = 0;
 $$0171 = HEAP32[$0 + 216 >> 2] | 0;
 while (1) {
  HEAP32[$$0171 + 36 >> 2] = $$sink173;
  HEAP32[$$0171 + 40 >> 2] = $$sink173;
  $$0169170 = $$0169170 + 1 | 0;
  if (($$0169170 | 0) >= ($167 | 0)) break; else $$0171 = $$0171 + 88 | 0;
 }
 return;
}

function __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i$add$i$i = 0, $$0$i$i$idx$i$i = 0, $$024 = 0, $$byval_copy3 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $10 = 0, $11 = 0, $16 = 0, $19 = 0, $21 = 0, $24 = 0, $28 = 0, $37 = 0, $38 = 0, $4 = 0, $41 = 0, $42 = 0, $43 = 0, $45 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $55 = 0, $56 = 0, $6 = 0, $60 = 0, $65 = 0, $66 = 0, $7 = 0, $70 = 0, $77 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy5 = sp + 8 | 0;
 $$byval_copy4 = sp + 56 | 0;
 $$byval_copy3 = sp + 52 | 0;
 $4 = sp + 44 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 28 | 0;
 $7 = sp;
 $8 = sp + 48 | 0;
 $9 = sp + 40 | 0;
 $10 = sp + 32 | 0;
 $11 = sp + 16 | 0;
 if (__ZNK6vision4NodeILi96EE4leafEv($2) | 0) {
  HEAP32[$8 >> 2] = HEAP32[$0 + 76 >> 2];
  $16 = __ZNK6vision4NodeILi96EE12reverseIndexEv($2) | 0;
  HEAP32[$9 >> 2] = HEAP32[$16 >> 2];
  $19 = (__ZNK6vision4NodeILi96EE12reverseIndexEv($2) | 0) + 4 | 0;
  HEAP32[$10 >> 2] = HEAP32[$19 >> 2];
  HEAP32[$$byval_copy3 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$$byval_copy4 >> 2] = HEAP32[$9 >> 2];
  HEAP32[$$byval_copy5 >> 2] = HEAP32[$10 >> 2];
  __ZNSt3__26vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPKiEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPiEEE4typeES8_SA_SA_($0 + 72 | 0, $$byval_copy3, $$byval_copy4, $$byval_copy5) | 0;
 } else {
  HEAP32[$11 >> 2] = 0;
  $21 = $11 + 4 | 0;
  HEAP32[$21 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  __ZNK6vision4NodeILi96EE7nearestERNSt3__26vectorIPKS1_NS2_9allocatorIS5_EEEERNS2_14priority_queueINS_17PriorityQueueItemILi96EEENS3_ISC_NS6_ISC_EEEENS2_4lessISC_EEEEPKh($2, $11, $1, $3);
  $$024 = 0;
  while (1) {
   $24 = HEAP32[$11 >> 2] | 0;
   if ($$024 >>> 0 >= (HEAP32[$21 >> 2] | 0) - $24 >> 2 >>> 0) break;
   __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh($0, $1, HEAP32[$24 + ($$024 << 2) >> 2] | 0, $3);
   $$024 = $$024 + 1 | 0;
  }
  $28 = $0 + 100 | 0;
  if ((HEAP32[$28 >> 2] | 0) < (HEAP32[$0 + 104 >> 2] | 0) ? ($37 = HEAP32[$1 >> 2] | 0, $38 = $1 + 4 | 0, ($37 | 0) != (HEAP32[$38 >> 2] | 0)) : 0) {
   $41 = __ZNK6vision17PriorityQueueItemILi96EE4nodeEv($37) | 0;
   $42 = HEAP32[$1 >> 2] | 0;
   $43 = HEAP32[$38 >> 2] | 0;
   $45 = $43 - $42 | 0;
   if (($45 | 0) > 8) {
    $48 = $42;
    $49 = $43 + -8 | 0;
    $50 = $48;
    $52 = HEAP32[$50 >> 2] | 0;
    $55 = HEAP32[$50 + 4 >> 2] | 0;
    $56 = $$byval_copy5;
    HEAP32[$56 >> 2] = $52;
    HEAP32[$56 + 4 >> 2] = $55;
    $60 = $49;
    $65 = HEAP32[$60 + 4 >> 2] | 0;
    $66 = $48;
    HEAP32[$66 >> 2] = HEAP32[$60 >> 2];
    HEAP32[$66 + 4 >> 2] = $65;
    $70 = $49;
    HEAP32[$70 >> 2] = $52;
    HEAP32[$70 + 4 >> 2] = $55;
    __ZN6vision17PriorityQueueItemILi96EED2Ev($$byval_copy5);
    HEAP32[$4 >> 2] = $42;
    HEAP32[$5 >> 2] = $49;
    HEAP32[$6 >> 2] = $42;
    HEAP32[$$byval_copy3 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$$byval_copy4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$$byval_copy5 >> 2] = HEAP32[$6 >> 2];
    __ZNSt3__211__sift_downIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_($$byval_copy3, $$byval_copy4, $7, ($45 >>> 3) + -1 | 0, $$byval_copy5);
    $77 = HEAP32[$38 >> 2] | 0;
   } else $77 = $43;
   $$0$i$i$idx$i$i = 0;
   while (1) {
    if (($$0$i$i$idx$i$i | 0) == -1) break;
    $$0$i$i$add$i$i = $$0$i$i$idx$i$i + -1 | 0;
    __ZN6vision17PriorityQueueItemILi96EED2Ev($77 + ($$0$i$i$add$i$i << 3) | 0);
    $$0$i$i$idx$i$i = $$0$i$i$add$i$i;
   }
   HEAP32[$38 >> 2] = $77 + -8;
   HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
   __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh($0, $1, $41, $3);
  }
  __ZNSt3__213__vector_baseIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEED2Ev($11);
 }
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseSubstitutionEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$18 = 0, $$2 = 0, $1 = 0, $26 = 0, $30 = 0, $32 = 0, $36 = 0, $38 = 0, $4 = 0, $41 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 L1 : do if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 83) | 0) {
  $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24;
  if (!(_islower($4) | 0)) {
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) {
    $30 = $0 + 148 | 0;
    if (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE5emptyEv($30) | 0) {
     $$2 = 0;
     break;
    }
    $32 = __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EEixEm($30, 0) | 0;
    $$2 = HEAP32[$32 >> 2] | 0;
    break;
   }
   HEAP32[$1 >> 2] = 0;
   if ((!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10parseSeqIdEPm($0, $1) | 0) ? ($36 = (HEAP32[$1 >> 2] | 0) + 1 | 0, HEAP32[$1 >> 2] = $36, __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) : 0) ? ($38 = $0 + 148 | 0, $36 >>> 0 < (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($38) | 0) >>> 0) : 0) {
    $41 = __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EEixEm($38, $36) | 0;
    $$18 = HEAP32[$41 >> 2] | 0;
   } else $$18 = 0;
   $$2 = $$18;
   break;
  }
  switch ($4 | 0) {
  case 97:
   {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
    HEAP32[$1 >> 2] = 0;
    $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SpecialSubstitutionEJNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0, $1) | 0;
    break;
   }
  case 98:
   {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
    HEAP32[$1 >> 2] = 1;
    $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SpecialSubstitutionEJNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0, $1) | 0;
    break;
   }
  case 115:
   {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
    HEAP32[$1 >> 2] = 2;
    $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SpecialSubstitutionEJNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0, $1) | 0;
    break;
   }
  case 105:
   {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
    HEAP32[$1 >> 2] = 3;
    $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SpecialSubstitutionEJNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0, $1) | 0;
    break;
   }
  case 111:
   {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
    HEAP32[$1 >> 2] = 4;
    $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SpecialSubstitutionEJNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0, $1) | 0;
    break;
   }
  case 100:
   {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
    HEAP32[$1 >> 2] = 5;
    $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SpecialSubstitutionEJNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0, $1) | 0;
    break;
   }
  default:
   {
    $$2 = 0;
    break L1;
   }
  }
  $26 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E12parseAbiTagsEPNS0_4NodeE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0, $$0) | 0;
  HEAP32[$1 >> 2] = $26;
  if (($26 | 0) == ($$0 | 0)) $$1 = $$0; else {
   __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($0 + 148 | 0, $1);
   $$1 = $26;
  }
  $$2 = $$1;
 } else $$2 = 0; while (0);
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E5parseEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$2 = 0, $$4 = 0, $$byval_copy2 = 0, $1 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $24 = 0, $3 = 0, $35 = 0, $37 = 0, $4 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 32 | 0;
 $1 = sp + 24 | 0;
 $2 = sp;
 $3 = sp + 16 | 0;
 $4 = sp + 8 | 0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($1, 51394);
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 do if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy2) | 0) {
  $7 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
  HEAP32[$$byval_copy2 >> 2] = $7;
  if (!$7) $$0 = 0; else {
   if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 == 46) {
    $12 = $0 + 4 | 0;
    __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($2, HEAP32[$0 >> 2] | 0, HEAP32[$12 >> 2] | 0);
    $14 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9DotSuffixEJRPNS0_4NodeENS_10StringViewEEEES9_DpOT0_($0, $$byval_copy2, $2) | 0;
    HEAP32[$$byval_copy2 >> 2] = $14;
    HEAP32[$0 >> 2] = HEAP32[$12 >> 2];
    $18 = $14;
   } else $18 = $7;
   $17 = (__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0) | 0) == 0;
   $$0 = $17 ? $18 : 0;
  }
  $$4 = $$0;
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 51397);
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy2) | 0)) {
   $35 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   $37 = (__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0) | 0) == 0;
   $$4 = $37 ? $35 : 0;
   break;
  }
  $21 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
  HEAP32[$2 >> 2] = $21;
  if ((($21 | 0) != 0 ? (__ZN12_GLOBAL__N_110StringViewC2EPKc($4, 51402), HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2], HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$4 + 4 >> 2], __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy2) | 0) : 0) ? ($24 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0, __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($$byval_copy2, $0, 0), !($24 & (__ZNK12_GLOBAL__N_110StringView5emptyEv($$byval_copy2) | 0))) : 0) {
   if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 == 46) HEAP32[$0 >> 2] = HEAP32[$0 + 4 >> 2];
   if (!(__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0) | 0)) $$2 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA34_KcRPNS0_4NodeEEEESC_DpOT0_($0, 51416, $2) | 0; else $$2 = 0;
  } else $$2 = 0;
  $$4 = $$2;
 } while (0);
 STACKTOP = sp;
 return $$4 | 0;
}

function _jpeg_idct_7x7($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0197205 = 0, $$0199204 = 0, $$0200203 = 0, $$0206 = 0, $$1198201 = 0, $$1202 = 0, $110 = 0, $113 = 0, $116 = 0, $118 = 0, $120 = 0, $122 = 0, $124 = 0, $126 = 0, $130 = 0, $131 = 0, $134 = 0, $137 = 0, $140 = 0, $144 = 0, $146 = 0, $148 = 0, $15 = 0, $150 = 0, $152 = 0, $156 = 0, $157 = 0, $159 = 0, $160 = 0, $163 = 0, $21 = 0, $27 = 0, $33 = 0, $35 = 0, $37 = 0, $41 = 0, $42 = 0, $45 = 0, $48 = 0, $5 = 0, $51 = 0, $59 = 0, $65 = 0, $7 = 0, $71 = 0, $73 = 0, $75 = 0, $79 = 0, $80 = 0, $82 = 0, $83 = 0, $86 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0197205 = $5;
 $$0199204 = HEAP32[$1 + 84 >> 2] | 0;
 $$0200203 = $2;
 $$0206 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0200203 >> 1] << 13, HEAP32[$$0199204 >> 2] | 0) | 0 | 1024;
  $21 = Math_imul(HEAP32[$$0199204 + 64 >> 2] | 0, HEAP16[$$0200203 + 32 >> 1] | 0) | 0;
  $27 = Math_imul(HEAP32[$$0199204 + 128 >> 2] | 0, HEAP16[$$0200203 + 64 >> 1] | 0) | 0;
  $33 = Math_imul(HEAP32[$$0199204 + 192 >> 2] | 0, HEAP16[$$0200203 + 96 >> 1] | 0) | 0;
  $35 = ($27 - $33 | 0) * 7223 | 0;
  $37 = ($21 - $27 | 0) * 2578 | 0;
  $41 = (Math_imul($27, -15083) | 0) + $15 + $37 + $35 | 0;
  $42 = $33 + $21 | 0;
  $45 = ($42 * 10438 | 0) + $15 | 0;
  $48 = $35 + (Math_imul($33, -637) | 0) + $45 | 0;
  $51 = $37 + (Math_imul($21, -20239) | 0) + $45 | 0;
  $59 = Math_imul(HEAP32[$$0199204 + 32 >> 2] | 0, HEAP16[$$0200203 + 16 >> 1] | 0) | 0;
  $65 = Math_imul(HEAP32[$$0199204 + 96 >> 2] | 0, HEAP16[$$0200203 + 48 >> 1] | 0) | 0;
  $71 = Math_imul(HEAP32[$$0199204 + 160 >> 2] | 0, HEAP16[$$0200203 + 80 >> 1] | 0) | 0;
  $73 = ($65 + $59 | 0) * 7663 | 0;
  $75 = ($59 - $65 | 0) * 1395 | 0;
  $79 = Math_imul($71 + $65 | 0, -11295) | 0;
  $80 = $73 + $75 + $79 | 0;
  $82 = ($71 + $59 | 0) * 5027 | 0;
  $83 = $82 + ($73 - $75) | 0;
  $86 = $82 + ($71 * 15326 | 0) + $79 | 0;
  HEAP32[$$0197205 >> 2] = $83 + $48 >> 11;
  HEAP32[$$0197205 + 168 >> 2] = $48 - $83 >> 11;
  HEAP32[$$0197205 + 28 >> 2] = $80 + $41 >> 11;
  HEAP32[$$0197205 + 140 >> 2] = $41 - $80 >> 11;
  HEAP32[$$0197205 + 56 >> 2] = $86 + $51 >> 11;
  HEAP32[$$0197205 + 112 >> 2] = $51 - $86 >> 11;
  HEAP32[$$0197205 + 84 >> 2] = (($27 - $42 | 0) * 11585 | 0) + $15 >> 11;
  $$0206 = $$0206 + 1 | 0;
  if (($$0206 | 0) == 7) break; else {
   $$0197205 = $$0197205 + 4 | 0;
   $$0199204 = $$0199204 + 4 | 0;
   $$0200203 = $$0200203 + 2 | 0;
  }
 }
 $110 = $7 + -384 | 0;
 $$1198201 = $5;
 $$1202 = 0;
 while (1) {
  $113 = (HEAP32[$3 + ($$1202 << 2) >> 2] | 0) + $4 | 0;
  $116 = (HEAP32[$$1198201 >> 2] << 13) + 134348800 | 0;
  $118 = HEAP32[$$1198201 + 8 >> 2] | 0;
  $120 = HEAP32[$$1198201 + 16 >> 2] | 0;
  $122 = HEAP32[$$1198201 + 24 >> 2] | 0;
  $124 = ($120 - $122 | 0) * 7223 | 0;
  $126 = ($118 - $120 | 0) * 2578 | 0;
  $130 = (Math_imul($120, -15083) | 0) + $116 + $126 + $124 | 0;
  $131 = $122 + $118 | 0;
  $134 = ($131 * 10438 | 0) + $116 | 0;
  $137 = $124 + (Math_imul($122, -637) | 0) + $134 | 0;
  $140 = $126 + (Math_imul($118, -20239) | 0) + $134 | 0;
  $144 = HEAP32[$$1198201 + 4 >> 2] | 0;
  $146 = HEAP32[$$1198201 + 12 >> 2] | 0;
  $148 = HEAP32[$$1198201 + 20 >> 2] | 0;
  $150 = ($146 + $144 | 0) * 7663 | 0;
  $152 = ($144 - $146 | 0) * 1395 | 0;
  $156 = Math_imul($148 + $146 | 0, -11295) | 0;
  $157 = $150 + $152 + $156 | 0;
  $159 = ($148 + $144 | 0) * 5027 | 0;
  $160 = $150 - $152 + $159 | 0;
  $163 = $159 + ($148 * 15326 | 0) + $156 | 0;
  HEAP8[$113 >> 0] = HEAP8[$110 + (($160 + $137 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 6 >> 0] = HEAP8[$110 + (($137 - $160 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 1 >> 0] = HEAP8[$110 + (($157 + $130 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 5 >> 0] = HEAP8[$110 + (($130 - $157 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 2 >> 0] = HEAP8[$110 + (($163 + $140 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 4 >> 0] = HEAP8[$110 + (($140 - $163 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$113 + 3 >> 0] = HEAP8[$110 + (((($120 - $131 | 0) * 11585 | 0) + $116 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1202 = $$1202 + 1 | 0;
  if (($$1202 | 0) == 7) break; else $$1198201 = $$1198201 + 28 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN6vision25DoGScaleInvariantDetector13pruneFeaturesEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $12 = 0, $15 = 0, $17 = 0, $2 = 0, $26 = 0, $3 = 0, $31 = 0, $35 = 0, $4 = 0, $42 = 0, $51 = 0, $56 = 0, $60 = 0, $77 = 0, $82 = 0, $86 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp + 12 | 0;
 $2 = sp;
 $3 = $0 + 60 | 0;
 $4 = $0 + 64 | 0;
 $9 = $0 + 84 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 do if ((((HEAP32[$4 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0) / 36 | 0) >>> 0 > $10 >>> 0) {
  $12 = $0 + 16 | 0;
  $15 = HEAP32[$12 >> 2] | 0;
  $17 = ((HEAP32[$0 + 20 >> 2] | 0) - $15 | 0) / 12 | 0;
  if (($17 | 0) != (HEAP32[$0 + 8 >> 2] | 0)) {
   $26 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 28011) | 0, 26748) | 0, 39072) | 0, 454) | 0, 39079) | 0, 28066) | 0;
   __ZNKSt3__28ios_base6getlocEv($1, $26 + (HEAP32[(HEAP32[$26 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $31 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 66512) | 0;
   $35 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$31 >> 2] | 0) + 28 >> 2] & 127]($31, 10) | 0;
   __ZNSt3__26localeD2Ev($1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($26, $35) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($26) | 0;
   _abort();
  }
  $42 = ((HEAP32[$15 + 4 >> 2] | 0) - (HEAP32[$15 >> 2] | 0) | 0) / 12 | 0;
  if (($42 | 0) != (HEAP32[$0 + 12 >> 2] | 0)) {
   $51 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 28092) | 0, 26748) | 0, 39072) | 0, 455) | 0, 39079) | 0, 28066) | 0;
   __ZNKSt3__28ios_base6getlocEv($1, $51 + (HEAP32[(HEAP32[$51 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $56 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 66512) | 0;
   $60 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$56 >> 2] | 0) + 28 >> 2] & 127]($56, 10) | 0;
   __ZNSt3__26localeD2Ev($1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($51, $60) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($51) | 0;
   _abort();
  }
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZN6vision16PruneDoGFeaturesERNSt3__26vectorINS1_INS1_INS0_4pairIfmEENS0_9allocatorIS3_EEEENS4_IS6_EEEENS4_IS8_EEEERNS1_INS_25DoGScaleInvariantDetector12FeaturePointENS4_ISD_EEEERKSF_iiiii($12, $2, $3, $17, $42, HEAP32[$0 >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0, $10);
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE4swapERS6_($3, $2);
  if ((((HEAP32[$4 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0) / 36 | 0) >>> 0 > (HEAP32[$9 >> 2] | 0) >>> 0) {
   $77 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 28150) | 0, 26748) | 0, 39072) | 0, 469) | 0, 39079) | 0, 28219) | 0;
   __ZNKSt3__28ios_base6getlocEv($1, $77 + (HEAP32[(HEAP32[$77 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $82 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 66512) | 0;
   $86 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$82 >> 2] | 0) + 28 >> 2] & 127]($82, 10) | 0;
   __ZNSt3__26localeD2Ev($1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($77, $86) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($77) | 0;
   _abort();
  } else {
   __ZNSt3__213__vector_baseIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEED2Ev($2);
   break;
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function _arDetectMarker2($0, $1, $2, $3, $4, $5, $6, $7, $8) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = +$6;
 $7 = $7 | 0;
 $8 = $8 | 0;
 var $$0 = 0, $$0127 = 0, $$0128 = 0, $$0131 = 0, $$0132 = 0, $$0133 = 0, $$0134 = 0, $$1 = 0, $$1$in = 0, $$1129 = 0, $$2 = 0, $$2130 = 0, $$3 = 0, $$ph = 0, $$pre136 = 0, $102 = 0, $105 = 0, $108 = 0, $113 = 0, $116 = 0, $122 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $24 = 0, $52 = 0, $57 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $67 = 0, $71 = 0.0, $76 = 0.0, $78 = 0.0, $79 = 0, $80 = 0, $81 = 0, $9 = 0, $91 = 0, $96 = 0, $99 = 0, label = 0;
 $9 = ($3 | 0) == 1;
 if ($9) {
  $$0 = ($0 | 0) / 2 | 0;
  $$0132 = ($1 | 0) / 2 | 0;
  $$0133 = ($4 | 0) / 4 | 0;
  $$0134 = ($5 | 0) / 4 | 0;
 } else {
  $$0 = $0;
  $$0132 = $1;
  $$0133 = $4;
  $$0134 = $5;
 }
 HEAP32[$8 >> 2] = 0;
 $14 = $2 + 8 | 0;
 $15 = $$0 + -2 | 0;
 $16 = $$0132 + -2 | 0;
 $17 = $2 + 1179664 | 0;
 $$0128 = 0;
 while (1) {
  if (($$0128 | 0) >= (HEAP32[$14 >> 2] | 0)) {
   label = 5;
   break;
  }
  $20 = $2 + 12 + ($$0128 << 2) | 0;
  $21 = HEAP32[$20 >> 2] | 0;
  if (((((((!(($21 | 0) < ($$0134 | 0) | ($21 | 0) > ($$0133 | 0)) ? ($24 = $2 + 131084 + ($$0128 << 4) | 0, (HEAP32[$24 >> 2] | 0) != 1) : 0) ? (HEAP32[$2 + 131084 + ($$0128 << 4) + 4 >> 2] | 0) != ($15 | 0) : 0) ? (HEAP32[$2 + 131084 + ($$0128 << 4) + 8 >> 2] | 0) != 1 : 0) ? (HEAP32[$2 + 131084 + ($$0128 << 4) + 12 >> 2] | 0) != ($16 | 0) : 0) ? (_arGetContour(HEAP32[$2 >> 2] | 0, $$0, 0, $17, $$0128 + 1 | 0, $24, $7 + ((HEAP32[$8 >> 2] | 0) * 80048 | 0) | 0) | 0) >= 0 : 0) ? (_check_square(HEAP32[$20 >> 2] | 0, $7 + ((HEAP32[$8 >> 2] | 0) * 80048 | 0) | 0, $6) | 0) >= 0 : 0) ? (HEAP32[$7 + ((HEAP32[$8 >> 2] | 0) * 80048 | 0) >> 2] = HEAP32[$20 >> 2], $52 = HEAP32[$8 >> 2] | 0, HEAPF64[$7 + ($52 * 80048 | 0) + 8 >> 3] = +HEAPF64[$2 + 655376 + ($$0128 << 4) >> 3], HEAPF64[$7 + ($52 * 80048 | 0) + 16 >> 3] = +HEAPF64[$2 + 655376 + ($$0128 << 4) + 8 >> 3], $57 = $52 + 1 | 0, HEAP32[$8 >> 2] = $57, ($57 | 0) == 60) : 0) {
   $$ph = 60;
   break;
  }
  $$0128 = $$0128 + 1 | 0;
 }
 if ((label | 0) == 5) $$ph = HEAP32[$8 >> 2] | 0;
 $$1129 = 0;
 $61 = $$ph;
 while (1) {
  if (($$1129 | 0) >= ($61 | 0)) break;
  $62 = $$1129 + 1 | 0;
  $63 = $7 + ($$1129 * 80048 | 0) + 8 | 0;
  $64 = $7 + ($$1129 * 80048 | 0) + 16 | 0;
  $65 = $7 + ($$1129 * 80048 | 0) | 0;
  $$0127 = $62;
  $67 = $61;
  while (1) {
   if (($$0127 | 0) >= ($67 | 0)) break;
   $71 = +HEAPF64[$63 >> 3] - +HEAPF64[$7 + ($$0127 * 80048 | 0) + 8 >> 3];
   $76 = +HEAPF64[$64 >> 3] - +HEAPF64[$7 + ($$0127 * 80048 | 0) + 16 >> 3];
   $78 = $71 * $71 + $76 * $76;
   $79 = HEAP32[$65 >> 2] | 0;
   $80 = $7 + ($$0127 * 80048 | 0) | 0;
   $81 = HEAP32[$80 >> 2] | 0;
   if (($79 | 0) > ($81 | 0)) {
    if ($78 < +(($79 | 0) / 4 | 0 | 0)) HEAP32[$80 >> 2] = 0;
   } else if ($78 < +(($81 | 0) / 4 | 0 | 0)) HEAP32[$65 >> 2] = 0;
   $$0127 = $$0127 + 1 | 0;
   $67 = HEAP32[$8 >> 2] | 0;
  }
  $$1129 = $62;
  $61 = $67;
 }
 $$2130 = 0;
 $91 = $61;
 while (1) {
  if (($$2130 | 0) >= ($91 | 0)) break;
  if (!(HEAP32[$7 + ($$2130 * 80048 | 0) >> 2] | 0)) {
   $$1$in = $$2130;
   $96 = $91;
   while (1) {
    $$1 = $$1$in + 1 | 0;
    if (($$1 | 0) >= ($96 | 0)) break;
    _memcpy($7 + ($$1$in * 80048 | 0) | 0, $7 + ($$1 * 80048 | 0) | 0, 80048) | 0;
    $$1$in = $$1;
    $96 = HEAP32[$8 >> 2] | 0;
   }
   $99 = $96 + -1 | 0;
   HEAP32[$8 >> 2] = $99;
   $122 = $99;
  } else $122 = $91;
  $$2130 = $$2130 + 1 | 0;
  $91 = $122;
 }
 L44 : do if ($9) {
  $$0131 = $7;
  $$3 = 0;
  $102 = $91;
  while (1) {
   if (($$3 | 0) >= ($102 | 0)) break L44;
   HEAP32[$$0131 >> 2] = HEAP32[$$0131 >> 2] << 2;
   $105 = $$0131 + 8 | 0;
   HEAPF64[$105 >> 3] = +HEAPF64[$105 >> 3] * 2.0;
   $108 = $$0131 + 16 | 0;
   HEAPF64[$108 >> 3] = +HEAPF64[$108 >> 3] * 2.0;
   $$pre136 = HEAP32[$$0131 + 24 >> 2] | 0;
   $$2 = 0;
   while (1) {
    if (($$2 | 0) >= ($$pre136 | 0)) break;
    $113 = $$0131 + 28 + ($$2 << 2) | 0;
    HEAP32[$113 >> 2] = HEAP32[$113 >> 2] << 1;
    $116 = $$0131 + 40028 + ($$2 << 2) | 0;
    HEAP32[$116 >> 2] = HEAP32[$116 >> 2] << 1;
    $$2 = $$2 + 1 | 0;
   }
   $$0131 = $$0131 + 80048 | 0;
   $$3 = $$3 + 1 | 0;
   $102 = HEAP32[$8 >> 2] | 0;
  }
 } while (0);
 return 0;
}

function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i26 = 0, $$0$i$i28 = 0, $$byval_copy = 0, $$sink46 = 0, $$sink47 = 0, $$sink48 = 0, $$sroa$040$0 = 0, $10 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $30 = 0, $42 = 0, $43 = 0, $44 = 0, $47 = 0, $48 = 0, $54 = 0, $6 = 0, $62 = 0, $7 = 0, $72 = 0, $8 = 0, $80 = 0, $88 = 0, $9 = 0, $91 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(480);
 $$byval_copy = sp + 464 | 0;
 $6 = sp + 460 | 0;
 $7 = sp + 468 | 0;
 $8 = sp + 456 | 0;
 $9 = sp + 452 | 0;
 $10 = sp + 440 | 0;
 $11 = sp + 428 | 0;
 $12 = sp + 416 | 0;
 $13 = sp + 412 | 0;
 $14 = sp;
 $15 = sp + 408 | 0;
 $16 = sp + 404 | 0;
 $17 = sp + 400 | 0;
 __ZNKSt3__28ios_base6getlocEv($6, $3);
 $18 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66544) | 0;
 $20 = $5 + 8 + 3 | 0;
 $21 = HEAP8[$20 >> 0] | 0;
 $22 = $21 << 24 >> 24 < 0;
 $23 = $5 + 4 | 0;
 if (!(($22 ? HEAP32[$23 >> 2] | 0 : $21 & 255) | 0)) $42 = 0; else {
  $30 = HEAP32[($22 ? HEAP32[$5 >> 2] | 0 : $5) >> 2] | 0;
  $42 = ($30 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$18 >> 2] | 0) + 44 >> 2] & 127]($18, 45) | 0);
 };
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 $$0$i$i26 = 0;
 while (1) {
  if (($$0$i$i26 | 0) == 3) break;
  HEAP32[$11 + ($$0$i$i26 << 2) >> 2] = 0;
  $$0$i$i26 = $$0$i$i26 + 1 | 0;
 }
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 $$0$i$i28 = 0;
 while (1) {
  if (($$0$i$i28 | 0) == 3) break;
  HEAP32[$12 + ($$0$i$i28 << 2) >> 2] = 0;
  $$0$i$i28 = $$0$i$i28 + 1 | 0;
 }
 __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($2, $42, $6, $7, $8, $9, $10, $11, $12, $13);
 $43 = HEAP8[$20 >> 0] | 0;
 $44 = $43 << 24 >> 24 < 0;
 $47 = $44 ? HEAP32[$23 >> 2] | 0 : $43 & 255;
 $48 = HEAP32[$13 >> 2] | 0;
 if (($47 | 0) > ($48 | 0)) {
  $54 = HEAP8[$12 + 8 + 3 >> 0] | 0;
  $62 = HEAP8[$11 + 8 + 3 >> 0] | 0;
  $$sink46 = $62 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $62 & 255;
  $$sink47 = $48 + 1 + ($47 - $48 << 1) | 0;
  $$sink48 = $54 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $54 & 255;
 } else {
  $72 = HEAP8[$12 + 8 + 3 >> 0] | 0;
  $80 = HEAP8[$11 + 8 + 3 >> 0] | 0;
  $$sink46 = $80 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $80 & 255;
  $$sink47 = $48 + 2 | 0;
  $$sink48 = $72 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $72 & 255;
 }
 $88 = $$sink47 + $$sink48 + $$sink46 | 0;
 if ($88 >>> 0 > 100) {
  $91 = _malloc($88 << 2) | 0;
  if (!$91) __ZSt17__throw_bad_allocv(); else {
   $$0 = $91;
   $$sroa$040$0 = $91;
  }
 } else {
  $$0 = $14;
  $$sroa$040$0 = 0;
 }
 $97 = $44 ? HEAP32[$5 >> 2] | 0 : $5;
 __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($$0, $15, $16, HEAP32[$3 + 4 >> 2] | 0, $97, $97 + ($47 << 2) | 0, $18, $42, $7, HEAP32[$8 >> 2] | 0, HEAP32[$9 >> 2] | 0, $10, $11, $12, $48);
 HEAP32[$17 >> 2] = HEAP32[$1 >> 2];
 $102 = HEAP32[$15 >> 2] | 0;
 $103 = HEAP32[$16 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$17 >> 2];
 $104 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$0, $102, $103, $3, $4) | 0;
 if ($$sroa$040$0 | 0) _free($$sroa$040$0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($12);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__26localeD2Ev($6);
 STACKTOP = sp;
 return $104 | 0;
}

function _examine_app0($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$pre$phi107Z2D = 0, $100 = 0, $102 = 0, $106 = 0, $125 = 0, $127 = 0, $133 = 0, $139 = 0, $145 = 0, $155 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $38 = 0, $39 = 0, $4 = 0, $48 = 0, $49 = 0, $50 = 0, $61 = 0, $64 = 0, $66 = 0, $69 = 0, $72 = 0, $75 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $86 = 0, $98 = 0, label = 0;
 $4 = $3 + $2 | 0;
 if ($2 >>> 0 > 13) {
  if ((HEAP8[$1 >> 0] | 0) == 74) if ((((HEAP8[$1 + 1 >> 0] | 0) == 70 ? (HEAP8[$1 + 2 >> 0] | 0) == 73 : 0) ? (HEAP8[$1 + 3 >> 0] | 0) == 70 : 0) ? (HEAP8[$1 + 4 >> 0] | 0) == 0 : 0) {
   HEAP32[$0 + 284 >> 2] = 1;
   $22 = HEAP8[$1 + 5 >> 0] | 0;
   $23 = $0 + 288 | 0;
   HEAP8[$23 >> 0] = $22;
   $25 = HEAP8[$1 + 6 >> 0] | 0;
   $26 = $0 + 289 | 0;
   HEAP8[$26 >> 0] = $25;
   $28 = HEAP8[$1 + 7 >> 0] | 0;
   $29 = $0 + 290 | 0;
   HEAP8[$29 >> 0] = $28;
   $38 = (HEAPU8[$1 + 8 >> 0] << 8 | HEAPU8[$1 + 9 >> 0]) & 65535;
   $39 = $0 + 292 | 0;
   HEAP16[$39 >> 1] = $38;
   $48 = (HEAPU8[$1 + 10 >> 0] << 8 | HEAPU8[$1 + 11 >> 0]) & 65535;
   $49 = $0 + 294 | 0;
   HEAP16[$49 >> 1] = $48;
   if (($22 + -1 & 255) < 2) {
    $$pre$phi107Z2D = $0;
    $64 = $22;
    $66 = $25;
    $69 = $38;
    $72 = $48;
    $75 = $28;
   } else {
    $50 = HEAP32[$0 >> 2] | 0;
    HEAP32[$50 + 20 >> 2] = 122;
    HEAP32[$50 + 24 >> 2] = $22 & 255;
    HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = HEAPU8[$26 >> 0];
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, -1);
    $$pre$phi107Z2D = $0;
    $64 = HEAP8[$23 >> 0] | 0;
    $66 = HEAP8[$26 >> 0] | 0;
    $69 = HEAP16[$39 >> 1] | 0;
    $72 = HEAP16[$49 >> 1] | 0;
    $75 = HEAP8[$29 >> 0] | 0;
   }
   $61 = HEAP32[$0 >> 2] | 0;
   HEAP32[$61 + 24 >> 2] = $64 & 255;
   HEAP32[$61 + 28 >> 2] = $66 & 255;
   HEAP32[$61 + 32 >> 2] = $69 & 65535;
   HEAP32[$61 + 36 >> 2] = $72 & 65535;
   HEAP32[$61 + 40 >> 2] = $75 & 255;
   HEAP32[$61 + 20 >> 2] = 89;
   FUNCTION_TABLE_vii[HEAP32[$61 + 4 >> 2] & 255]($$pre$phi107Z2D, 1);
   $80 = $1 + 12 | 0;
   $81 = HEAP8[$80 >> 0] | 0;
   $82 = $1 + 13 | 0;
   $83 = HEAP8[$82 >> 0] | 0;
   if (!(($83 | $81) << 24 >> 24)) {
    $100 = $81;
    $102 = $83;
   } else {
    $86 = HEAP32[$0 >> 2] | 0;
    HEAP32[$86 + 20 >> 2] = 92;
    HEAP32[$86 + 24 >> 2] = HEAPU8[$80 >> 0];
    HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = HEAPU8[$82 >> 0];
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($$pre$phi107Z2D, 1);
    $100 = HEAP8[$80 >> 0] | 0;
    $102 = HEAP8[$82 >> 0] | 0;
   }
   $98 = $4 + -14 | 0;
   if (($98 | 0) == (Math_imul(($100 & 255) * 3 | 0, $102 & 255) | 0)) return;
   $106 = HEAP32[$0 >> 2] | 0;
   HEAP32[$106 + 20 >> 2] = 90;
   HEAP32[$106 + 24 >> 2] = $98;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($$pre$phi107Z2D, 1);
   return;
  } else label = 16;
 } else if ($2 >>> 0 > 5 ? (HEAP8[$1 >> 0] | 0) == 74 : 0) label = 16;
 if (((((label | 0) == 16 ? (HEAP8[$1 + 1 >> 0] | 0) == 70 : 0) ? (HEAP8[$1 + 2 >> 0] | 0) == 88 : 0) ? (HEAP8[$1 + 3 >> 0] | 0) == 88 : 0) ? (HEAP8[$1 + 4 >> 0] | 0) == 0 : 0) {
  $125 = $1 + 5 | 0;
  switch (HEAP8[$125 >> 0] | 0) {
  case 16:
   {
    $127 = HEAP32[$0 >> 2] | 0;
    HEAP32[$127 + 20 >> 2] = 110;
    HEAP32[$127 + 24 >> 2] = $4;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
    return;
   }
  case 17:
   {
    $133 = HEAP32[$0 >> 2] | 0;
    HEAP32[$133 + 20 >> 2] = 111;
    HEAP32[$133 + 24 >> 2] = $4;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
    return;
   }
  case 19:
   {
    $139 = HEAP32[$0 >> 2] | 0;
    HEAP32[$139 + 20 >> 2] = 112;
    HEAP32[$139 + 24 >> 2] = $4;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
    return;
   }
  default:
   {
    $145 = HEAP32[$0 >> 2] | 0;
    HEAP32[$145 + 20 >> 2] = 91;
    HEAP32[$145 + 24 >> 2] = HEAPU8[$125 >> 0];
    HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $4;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
    return;
   }
  }
 }
 $155 = HEAP32[$0 >> 2] | 0;
 HEAP32[$155 + 20 >> 2] = 79;
 HEAP32[$155 + 24 >> 2] = $4;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
 return;
}

function ___get_locale($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$093$lcssa = 0, $$093118 = 0, $$094114 = 0, $$1 = 0, $$1100111 = 0, $$195112 = 0, $$2122 = 0, $$2123 = 0, $$2124 = 0, $$4 = 0, $11 = 0, $15 = 0, $2 = 0, $23 = 0, $3 = 0, $40 = 0, $48 = 0, $54 = 0, $58 = 0, $6 = 0, $62 = 0, $63 = 0, $64 = 0, $68 = 0, $70 = 0, $72 = 0, $76 = 0, $78 = 0, $82 = 0, $87 = 0, $93 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(272);
 $2 = sp;
 $3 = sp + 256 | 0;
 do if (!(HEAP8[$1 >> 0] | 0)) {
  $6 = _getenv(50801) | 0;
  if ($6 | 0 ? HEAP8[$6 >> 0] | 0 : 0) {
   $$1 = $6;
   break;
  }
  $11 = _getenv(12464 + ($0 * 12 | 0) | 0) | 0;
  if ($11 | 0 ? HEAP8[$11 >> 0] | 0 : 0) {
   $$1 = $11;
   break;
  }
  $15 = _getenv(50808) | 0;
  if ($15 | 0 ? HEAP8[$15 >> 0] | 0 : 0) {
   $$1 = $15;
   break;
  }
  $$1 = 50813;
 } else $$1 = $1; while (0);
 $$093118 = 0;
 L13 : while (1) {
  switch (HEAP8[$$1 + $$093118 >> 0] | 0) {
  case 47:
  case 0:
   {
    $$093$lcssa = $$093118;
    break L13;
    break;
   }
  default:
   {}
  }
  $$093118 = $$093118 + 1 | 0;
  if ($$093118 >>> 0 >= 15) {
   $$093$lcssa = 15;
   break;
  }
 }
 $23 = HEAP8[$$1 >> 0] | 0;
 if ($23 << 24 >> 24 != 46 ? (HEAP8[$$1 + $$093$lcssa >> 0] | 0) == 0 : 0) if ($23 << 24 >> 24 == 67) {
  $$2122 = $$1;
  label = 15;
 } else {
  $$2123 = $$1;
  label = 16;
 } else {
  $$2122 = 50813;
  label = 15;
 }
 if ((label | 0) == 15) if (!(HEAP8[$$2122 + 1 >> 0] | 0)) {
  $$2124 = $$2122;
  label = 18;
 } else {
  $$2123 = $$2122;
  label = 16;
 }
 L22 : do if ((label | 0) == 16) if ((_strcmp($$2123, 50813) | 0) != 0 ? (_strcmp($$2123, 50821) | 0) != 0 : 0) {
  $40 = HEAP32[16351] | 0;
  if ($40 | 0) {
   $$094114 = $40;
   do {
    if (!(_strcmp($$2123, $$094114 + 8 | 0) | 0)) {
     $$0 = $$094114;
     break L22;
    }
    $$094114 = HEAP32[$$094114 + 24 >> 2] | 0;
   } while (($$094114 | 0) != 0);
  }
  ___lock(65408);
  $48 = HEAP32[16351] | 0;
  L32 : do if ($48 | 0) {
   $$195112 = $48;
   while (1) {
    if (!(_strcmp($$2123, $$195112 + 8 | 0) | 0)) break;
    $54 = HEAP32[$$195112 + 24 >> 2] | 0;
    if (!$54) break L32; else $$195112 = $54;
   }
   ___unlock(65408);
   $$0 = $$195112;
   break L22;
  } while (0);
  L39 : do if (((HEAP32[16329] | 0) == 0 ? ($58 = _getenv(50827) | 0, ($58 | 0) != 0) : 0) ? (HEAP8[$58 >> 0] | 0) != 0 : 0) {
   $62 = 254 - $$093$lcssa | 0;
   $63 = $$093$lcssa + 1 | 0;
   $$1100111 = $58;
   while (1) {
    $64 = ___strchrnul($$1100111, 58) | 0;
    $68 = HEAP8[$64 >> 0] | 0;
    $70 = $64 - $$1100111 + (($68 << 24 >> 24 != 0) << 31 >> 31) | 0;
    if ($70 >>> 0 < $62 >>> 0) {
     _memcpy($2 | 0, $$1100111 | 0, $70 | 0) | 0;
     $72 = $2 + $70 | 0;
     HEAP8[$72 >> 0] = 47;
     _memcpy($72 + 1 | 0, $$2123 | 0, $$093$lcssa | 0) | 0;
     HEAP8[$2 + ($63 + $70) >> 0] = 0;
     $76 = ___map_file($2 | 0, $3 | 0) | 0;
     if ($76 | 0) break;
     $87 = HEAP8[$64 >> 0] | 0;
    } else $87 = $68;
    $$1100111 = $64 + ($87 << 24 >> 24 != 0 & 1) | 0;
    if (!(HEAP8[$$1100111 >> 0] | 0)) {
     label = 41;
     break L39;
    }
   }
   $78 = _malloc(28) | 0;
   if (!$78) {
    ___munmap($76, HEAP32[$3 >> 2] | 0) | 0;
    label = 41;
    break;
   } else {
    HEAP32[$78 >> 2] = $76;
    HEAP32[$78 + 4 >> 2] = HEAP32[$3 >> 2];
    $82 = $78 + 8 | 0;
    _memcpy($82 | 0, $$2123 | 0, $$093$lcssa | 0) | 0;
    HEAP8[$82 + $$093$lcssa >> 0] = 0;
    HEAP32[$78 + 24 >> 2] = HEAP32[16351];
    HEAP32[16351] = $78;
    $$4 = $78;
    break;
   }
  } else label = 41; while (0);
  if ((label | 0) == 41) {
   $93 = _malloc(28) | 0;
   if (!$93) $$4 = $93; else {
    HEAP32[$93 >> 2] = HEAP32[4258];
    HEAP32[$93 + 4 >> 2] = HEAP32[4259];
    $98 = $93 + 8 | 0;
    _memcpy($98 | 0, $$2123 | 0, $$093$lcssa | 0) | 0;
    HEAP8[$98 + $$093$lcssa >> 0] = 0;
    HEAP32[$93 + 24 >> 2] = HEAP32[16351];
    HEAP32[16351] = $93;
    $$4 = $93;
   }
  }
  ___unlock(65408);
  $$0 = ($0 | 0) == 0 & ($$4 | 0) == 0 ? 17032 : $$4;
 } else {
  $$2124 = $$2123;
  label = 18;
 } while (0);
 do if ((label | 0) == 18) {
  if (($0 | 0) == 0 ? (HEAP8[$$2124 + 1 >> 0] | 0) == 46 : 0) {
   $$0 = 17032;
   break;
  }
  $$0 = 0;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i78 = 0, $$07$i$i = 0, $$07$i$i77 = 0, $$072 = 0, $$073 = 0, $$075 = 0, $$1 = 0, $$174 = 0, $$176 = 0, $$pre$phiZ2D = 0, $103 = 0, $104 = 0, $112 = 0, $13 = 0, $14 = 0, $16 = 0, $25 = 0, $27 = 0, $28 = 0, $33 = 0, $34 = 0, $42 = 0, $47 = 0, $48 = 0, $55 = 0, $56 = 0, $59 = 0, $61 = 0, $67 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $75 = 0, $77 = 0, $8 = 0, $85 = 0, $89 = 0, $9 = 0, $91 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66544) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66552) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 255]($7, $9);
 $13 = $7 + 11 | 0;
 $14 = HEAP8[$13 >> 0] | 0;
 $16 = $7 + 4 | 0;
 if (($14 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $14 & 255) | 0) {
  HEAP32[$5 >> 2] = $3;
  $28 = HEAP8[$0 >> 0] | 0;
  switch ($28 << 24 >> 24) {
  case 43:
  case 45:
   {
    $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 127]($8, $28) | 0;
    $34 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $34 + 4;
    HEAP32[$34 >> 2] = $33;
    $$075 = $0 + 1 | 0;
    break;
   }
  default:
   $$075 = $0;
  }
  L7 : do if (($2 - $$075 | 0) > 1 ? (HEAP8[$$075 >> 0] | 0) == 48 : 0) {
   $42 = $$075 + 1 | 0;
   switch (HEAP8[$42 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     $$176 = $$075;
     break L7;
    }
   }
   $47 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 127]($8, 48) | 0;
   $48 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $48 + 4;
   HEAP32[$48 >> 2] = $47;
   $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 127]($8, HEAP8[$42 >> 0] | 0) | 0;
   $56 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $56 + 4;
   HEAP32[$56 >> 2] = $55;
   $$176 = $$075 + 2 | 0;
  } else $$176 = $$075; while (0);
  L12 : do if (($$176 | 0) != ($2 | 0)) {
   $$0$i$i = $2;
   $$07$i$i = $$176;
   while (1) {
    $59 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $59 >>> 0) break L12;
    $61 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$59 >> 0] | 0;
    HEAP8[$59 >> 0] = $61;
    $$0$i$i = $59;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $67 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 127]($9) | 0;
  $$0 = $$176;
  $$072 = 0;
  $$073 = 0;
  while (1) {
   if ($$0 >>> 0 >= $2 >>> 0) break;
   $85 = HEAP8[((HEAP8[$13 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7) + $$072 >> 0] | 0;
   if ($85 << 24 >> 24 != 0 & ($$073 | 0) == ($85 << 24 >> 24 | 0)) {
    $89 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $89 + 4;
    HEAP32[$89 >> 2] = $67;
    $91 = HEAP8[$13 >> 0] | 0;
    $$1 = $$072 + ($$072 >>> 0 < (($91 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $91 & 255) + -1 | 0) >>> 0 & 1) | 0;
    $$174 = 0;
   } else {
    $$1 = $$072;
    $$174 = $$073;
   }
   $103 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 127]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $104 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $104 + 4;
   HEAP32[$104 >> 2] = $103;
   $$0 = $$0 + 1 | 0;
   $$072 = $$1;
   $$073 = $$174 + 1 | 0;
  }
  $70 = $0;
  $72 = $3 + ($$176 - $70 << 2) | 0;
  $73 = HEAP32[$5 >> 2] | 0;
  if (($72 | 0) == ($73 | 0)) {
   $$pre$phiZ2D = $70;
   $112 = $72;
  } else {
   $$0$i$i78 = $73;
   $$07$i$i77 = $72;
   while (1) {
    $75 = $$0$i$i78 + -4 | 0;
    if ($$07$i$i77 >>> 0 >= $75 >>> 0) break;
    $77 = HEAP32[$$07$i$i77 >> 2] | 0;
    HEAP32[$$07$i$i77 >> 2] = HEAP32[$75 >> 2];
    HEAP32[$75 >> 2] = $77;
    $$0$i$i78 = $75;
    $$07$i$i77 = $$07$i$i77 + 4 | 0;
   }
   $$pre$phiZ2D = $70;
   $112 = HEAP32[$5 >> 2] | 0;
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 15]($8, $0, $2, $3) | 0;
  $25 = $0;
  $27 = $3 + ($2 - $25 << 2) | 0;
  HEAP32[$5 >> 2] = $27;
  $$pre$phiZ2D = $25;
  $112 = $27;
 }
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $112 : $3 + ($1 - $$pre$phiZ2D << 2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i76 = 0, $$07$i$i = 0, $$07$i$i75 = 0, $$070 = 0, $$071 = 0, $$073 = 0, $$1 = 0, $$172 = 0, $$174 = 0, $$pre$phiZ2D = 0, $103 = 0, $104 = 0, $112 = 0, $13 = 0, $14 = 0, $16 = 0, $25 = 0, $27 = 0, $28 = 0, $33 = 0, $34 = 0, $42 = 0, $47 = 0, $48 = 0, $55 = 0, $56 = 0, $59 = 0, $61 = 0, $67 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $75 = 0, $77 = 0, $8 = 0, $85 = 0, $89 = 0, $9 = 0, $91 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66528) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 255]($7, $9);
 $13 = $7 + 11 | 0;
 $14 = HEAP8[$13 >> 0] | 0;
 $16 = $7 + 4 | 0;
 if (($14 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $14 & 255) | 0) {
  HEAP32[$5 >> 2] = $3;
  $28 = HEAP8[$0 >> 0] | 0;
  switch ($28 << 24 >> 24) {
  case 43:
  case 45:
   {
    $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 127]($8, $28) | 0;
    $34 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $34 + 1;
    HEAP8[$34 >> 0] = $33;
    $$073 = $0 + 1 | 0;
    break;
   }
  default:
   $$073 = $0;
  }
  L7 : do if (($2 - $$073 | 0) > 1 ? (HEAP8[$$073 >> 0] | 0) == 48 : 0) {
   $42 = $$073 + 1 | 0;
   switch (HEAP8[$42 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     $$174 = $$073;
     break L7;
    }
   }
   $47 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 127]($8, 48) | 0;
   $48 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $48 + 1;
   HEAP8[$48 >> 0] = $47;
   $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 127]($8, HEAP8[$42 >> 0] | 0) | 0;
   $56 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $56 + 1;
   HEAP8[$56 >> 0] = $55;
   $$174 = $$073 + 2 | 0;
  } else $$174 = $$073; while (0);
  L12 : do if (($$174 | 0) != ($2 | 0)) {
   $$0$i$i = $2;
   $$07$i$i = $$174;
   while (1) {
    $59 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $59 >>> 0) break L12;
    $61 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$59 >> 0] | 0;
    HEAP8[$59 >> 0] = $61;
    $$0$i$i = $59;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $67 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 127]($9) | 0;
  $$0 = $$174;
  $$070 = 0;
  $$071 = 0;
  while (1) {
   if ($$0 >>> 0 >= $2 >>> 0) break;
   $85 = HEAP8[((HEAP8[$13 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7) + $$070 >> 0] | 0;
   if ($85 << 24 >> 24 != 0 & ($$071 | 0) == ($85 << 24 >> 24 | 0)) {
    $89 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $89 + 1;
    HEAP8[$89 >> 0] = $67;
    $91 = HEAP8[$13 >> 0] | 0;
    $$1 = $$070 + ($$070 >>> 0 < (($91 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $91 & 255) + -1 | 0) >>> 0 & 1) | 0;
    $$172 = 0;
   } else {
    $$1 = $$070;
    $$172 = $$071;
   }
   $103 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 127]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $104 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $104 + 1;
   HEAP8[$104 >> 0] = $103;
   $$0 = $$0 + 1 | 0;
   $$070 = $$1;
   $$071 = $$172 + 1 | 0;
  }
  $70 = $0;
  $72 = $3 + ($$174 - $70) | 0;
  $73 = HEAP32[$5 >> 2] | 0;
  if (($72 | 0) == ($73 | 0)) {
   $$pre$phiZ2D = $70;
   $112 = $72;
  } else {
   $$0$i$i76 = $73;
   $$07$i$i75 = $72;
   while (1) {
    $75 = $$0$i$i76 + -1 | 0;
    if ($$07$i$i75 >>> 0 >= $75 >>> 0) break;
    $77 = HEAP8[$$07$i$i75 >> 0] | 0;
    HEAP8[$$07$i$i75 >> 0] = HEAP8[$75 >> 0] | 0;
    HEAP8[$75 >> 0] = $77;
    $$0$i$i76 = $75;
    $$07$i$i75 = $$07$i$i75 + 1 | 0;
   }
   $$pre$phiZ2D = $70;
   $112 = HEAP32[$5 >> 2] | 0;
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 32 >> 2] & 15]($8, $0, $2, $3) | 0;
  $25 = $0;
  $27 = $3 + ($2 - $25) | 0;
  HEAP32[$5 >> 2] = $27;
  $$pre$phiZ2D = $25;
  $112 = $27;
 }
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $112 : $3 + ($1 - $$pre$phiZ2D) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$0$lcssa$i = 0, $$025 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $$sroa$027$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $17 = 0, $20 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $33 = 0, $39 = 0, $40 = 0, $42 = 0, $45 = 0, $59 = 0, $62 = 0, $7 = 0, $74 = 0, $77 = 0, $8 = 0, $9 = 0, $91 = 0, $95 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(592);
 $$byval_copy = sp + 512 | 0;
 $vararg_buffer = sp + 552 | 0;
 $7 = sp + 112 | 0;
 $8 = sp + 568 | 0;
 $9 = sp + 564 | 0;
 $10 = sp + 560 | 0;
 $11 = sp + 576 | 0;
 $12 = sp + 556 | 0;
 $13 = sp;
 HEAP32[$8 >> 2] = $7;
 HEAP32[$8 + 4 >> 2] = 214;
 __ZNKSt3__28ios_base6getlocEv($10, $4);
 $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 66544) | 0;
 HEAP8[$11 >> 0] = 0;
 HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
 $20 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 if (__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($1, $$byval_copy, $3, $10, $20, $5, $11, $17, $8, $9, $7 + 400 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 48 >> 2] & 15]($17, 60349, 60359, $$byval_copy) | 0;
  $25 = HEAP32[$9 >> 2] | 0;
  $26 = HEAP32[$8 >> 2] | 0;
  $27 = $25 - $26 | 0;
  $29 = $26;
  $30 = $25;
  if (($27 | 0) > 392) {
   $33 = _malloc(($27 >>> 2) + 2 | 0) | 0;
   if (!$33) __ZSt17__throw_bad_allocv(); else {
    $$025 = $33;
    $$sroa$027$0 = $33;
   }
  } else {
   $$025 = $13;
   $$sroa$027$0 = 0;
  }
  if (!(HEAP8[$11 >> 0] | 0)) $$1 = $$025; else {
   HEAP8[$$025 >> 0] = 45;
   $$1 = $$025 + 1 | 0;
  }
  $39 = $$byval_copy + 40 | 0;
  $40 = $$byval_copy;
  $$0 = $29;
  $$2 = $$1;
  $42 = $30;
  while (1) {
   if ($$0 >>> 0 >= $42 >>> 0) break;
   $45 = HEAP32[$$0 >> 2] | 0;
   $$0$i = $$byval_copy;
   while (1) {
    if (($$0$i | 0) == ($39 | 0)) {
     $$0$lcssa$i = $39;
     break;
    }
    if ((HEAP32[$$0$i >> 2] | 0) == ($45 | 0)) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $$0$i = $$0$i + 4 | 0;
   }
   HEAP8[$$2 >> 0] = HEAP8[60349 + ($$0$lcssa$i - $40 >> 2) >> 0] | 0;
   $$0 = $$0 + 4 | 0;
   $$2 = $$2 + 1 | 0;
   $42 = HEAP32[$9 >> 2] | 0;
  }
  HEAP8[$$2 >> 0] = 0;
  HEAP32[$vararg_buffer >> 2] = $6;
  if ((_sscanf($13, 60250, $vararg_buffer) | 0) != 1) __ZNSt3__221__throw_runtime_errorEPKc(0);
  if ($$sroa$027$0 | 0) _free($$sroa$027$0);
 }
 $59 = HEAP32[$1 >> 2] | 0;
 do if ($59) {
  $62 = HEAP32[$59 + 12 >> 2] | 0;
  if (($62 | 0) == (HEAP32[$59 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$59 >> 2] | 0) + 36 >> 2] & 127]($59) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$62 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $95 = 1;
   break;
  } else {
   $95 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } else $95 = 1; while (0);
 $74 = HEAP32[$2 >> 2] | 0;
 do if ($74) {
  $77 = HEAP32[$74 + 12 >> 2] | 0;
  if (($77 | 0) == (HEAP32[$74 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$74 >> 2] | 0) + 36 >> 2] & 127]($74) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$77 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($95) break; else {
   label = 34;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 32;
   break;
  }
 } else label = 32; while (0);
 if ((label | 0) == 32 ? $95 : 0) label = 34;
 if ((label | 0) == 34) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__26localeD2Ev($10);
 $91 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($91 | 0) FUNCTION_TABLE_vi[HEAP32[$8 + 4 >> 2] & 255]($91);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i26 = 0, $$0$i$i29 = 0, $$byval_copy = 0, $$sink47 = 0, $$sink48 = 0, $$sink49 = 0, $$sroa$041$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $29 = 0, $41 = 0, $42 = 0, $43 = 0, $46 = 0, $47 = 0, $52 = 0, $59 = 0, $6 = 0, $68 = 0, $7 = 0, $75 = 0, $8 = 0, $83 = 0, $85 = 0, $9 = 0, $91 = 0, $96 = 0, $97 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 $$byval_copy = sp + 156 | 0;
 $6 = sp + 152 | 0;
 $7 = sp + 164 | 0;
 $8 = sp + 161 | 0;
 $9 = sp + 160 | 0;
 $10 = sp + 140 | 0;
 $11 = sp + 128 | 0;
 $12 = sp + 116 | 0;
 $13 = sp + 112 | 0;
 $14 = sp;
 $15 = sp + 108 | 0;
 $16 = sp + 104 | 0;
 $17 = sp + 100 | 0;
 __ZNKSt3__28ios_base6getlocEv($6, $3);
 $18 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 66512) | 0;
 $19 = $5 + 11 | 0;
 $20 = HEAP8[$19 >> 0] | 0;
 $21 = $20 << 24 >> 24 < 0;
 $22 = $5 + 4 | 0;
 if (!(($21 ? HEAP32[$22 >> 2] | 0 : $20 & 255) | 0)) $41 = 0; else {
  $29 = HEAP8[($21 ? HEAP32[$5 >> 2] | 0 : $5) >> 0] | 0;
  $41 = $29 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$18 >> 2] | 0) + 28 >> 2] & 127]($18, 45) | 0) << 24 >> 24;
 };
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 $$0$i$i26 = 0;
 while (1) {
  if (($$0$i$i26 | 0) == 3) break;
  HEAP32[$11 + ($$0$i$i26 << 2) >> 2] = 0;
  $$0$i$i26 = $$0$i$i26 + 1 | 0;
 }
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 $$0$i$i29 = 0;
 while (1) {
  if (($$0$i$i29 | 0) == 3) break;
  HEAP32[$12 + ($$0$i$i29 << 2) >> 2] = 0;
  $$0$i$i29 = $$0$i$i29 + 1 | 0;
 }
 __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($2, $41, $6, $7, $8, $9, $10, $11, $12, $13);
 $42 = HEAP8[$19 >> 0] | 0;
 $43 = $42 << 24 >> 24 < 0;
 $46 = $43 ? HEAP32[$22 >> 2] | 0 : $42 & 255;
 $47 = HEAP32[$13 >> 2] | 0;
 if (($46 | 0) > ($47 | 0)) {
  $52 = HEAP8[$12 + 11 >> 0] | 0;
  $59 = HEAP8[$11 + 11 >> 0] | 0;
  $$sink47 = $59 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $59 & 255;
  $$sink48 = $47 + 1 + ($46 - $47 << 1) | 0;
  $$sink49 = $52 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $52 & 255;
 } else {
  $68 = HEAP8[$12 + 11 >> 0] | 0;
  $75 = HEAP8[$11 + 11 >> 0] | 0;
  $$sink47 = $75 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $75 & 255;
  $$sink48 = $47 + 2 | 0;
  $$sink49 = $68 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $68 & 255;
 }
 $83 = $$sink48 + $$sink49 + $$sink47 | 0;
 if ($83 >>> 0 > 100) {
  $85 = _malloc($83) | 0;
  if (!$85) __ZSt17__throw_bad_allocv(); else {
   $$0 = $85;
   $$sroa$041$0 = $85;
  }
 } else {
  $$0 = $14;
  $$sroa$041$0 = 0;
 }
 $91 = $43 ? HEAP32[$5 >> 2] | 0 : $5;
 __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($$0, $15, $16, HEAP32[$3 + 4 >> 2] | 0, $91, $91 + $46 | 0, $18, $41, $7, HEAP8[$8 >> 0] | 0, HEAP8[$9 >> 0] | 0, $10, $11, $12, $47);
 HEAP32[$17 >> 2] = HEAP32[$1 >> 2];
 $96 = HEAP32[$15 >> 2] | 0;
 $97 = HEAP32[$16 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$17 >> 2];
 $98 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$0, $96, $97, $3, $4) | 0;
 if ($$sroa$041$0 | 0) _free($$sroa$041$0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__26localeD2Ev($6);
 STACKTOP = sp;
 return $98 | 0;
}

function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$0$lcssa$i = 0, $$025 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $$sroa$028$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $17 = 0, $20 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $32 = 0, $38 = 0, $39 = 0, $41 = 0, $44 = 0, $57 = 0, $60 = 0, $7 = 0, $72 = 0, $75 = 0, $8 = 0, $89 = 0, $9 = 0, $93 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $$byval_copy = sp + 240 | 0;
 $vararg_buffer = sp + 216 | 0;
 $7 = sp + 112 | 0;
 $8 = sp + 232 | 0;
 $9 = sp + 228 | 0;
 $10 = sp + 224 | 0;
 $11 = sp + 250 | 0;
 $12 = sp + 220 | 0;
 $13 = sp;
 HEAP32[$8 >> 2] = $7;
 HEAP32[$8 + 4 >> 2] = 214;
 __ZNKSt3__28ios_base6getlocEv($10, $4);
 $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 66512) | 0;
 HEAP8[$11 >> 0] = 0;
 HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
 $20 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 if (__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($1, $$byval_copy, $3, $10, $20, $5, $11, $17, $8, $9, $7 + 100 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 32 >> 2] & 15]($17, 60239, 60249, $$byval_copy) | 0;
  $25 = HEAP32[$9 >> 2] | 0;
  $26 = HEAP32[$8 >> 2] | 0;
  $27 = $25 - $26 | 0;
  $29 = $26;
  $30 = $25;
  if (($27 | 0) > 98) {
   $32 = _malloc($27 + 2 | 0) | 0;
   if (!$32) __ZSt17__throw_bad_allocv(); else {
    $$025 = $32;
    $$sroa$028$0 = $32;
   }
  } else {
   $$025 = $13;
   $$sroa$028$0 = 0;
  }
  if (!(HEAP8[$11 >> 0] | 0)) $$1 = $$025; else {
   HEAP8[$$025 >> 0] = 45;
   $$1 = $$025 + 1 | 0;
  }
  $38 = $$byval_copy + 10 | 0;
  $39 = $$byval_copy;
  $$0 = $29;
  $$2 = $$1;
  $41 = $30;
  while (1) {
   if ($$0 >>> 0 >= $41 >>> 0) break;
   $44 = HEAP8[$$0 >> 0] | 0;
   $$0$i = $$byval_copy;
   while (1) {
    if (($$0$i | 0) == ($38 | 0)) {
     $$0$lcssa$i = $38;
     break;
    }
    if ((HEAP8[$$0$i >> 0] | 0) == $44 << 24 >> 24) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $$0$i = $$0$i + 1 | 0;
   }
   HEAP8[$$2 >> 0] = HEAP8[60239 + ($$0$lcssa$i - $39) >> 0] | 0;
   $$0 = $$0 + 1 | 0;
   $$2 = $$2 + 1 | 0;
   $41 = HEAP32[$9 >> 2] | 0;
  }
  HEAP8[$$2 >> 0] = 0;
  HEAP32[$vararg_buffer >> 2] = $6;
  if ((_sscanf($13, 60250, $vararg_buffer) | 0) != 1) __ZNSt3__221__throw_runtime_errorEPKc(0);
  if ($$sroa$028$0 | 0) _free($$sroa$028$0);
 }
 $57 = HEAP32[$1 >> 2] | 0;
 do if ($57) {
  $60 = HEAP32[$57 + 12 >> 2] | 0;
  if (($60 | 0) == (HEAP32[$57 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$57 >> 2] | 0) + 36 >> 2] & 127]($57) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$60 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $93 = 1;
   break;
  } else {
   $93 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } else $93 = 1; while (0);
 $72 = HEAP32[$2 >> 2] | 0;
 do if ($72) {
  $75 = HEAP32[$72 + 12 >> 2] | 0;
  if (($75 | 0) == (HEAP32[$72 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 36 >> 2] & 127]($72) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$75 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($93) break; else {
   label = 34;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 32;
   break;
  }
 } else label = 32; while (0);
 if ((label | 0) == 32 ? $93 : 0) label = 34;
 if ((label | 0) == 34) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__26localeD2Ev($10);
 $89 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($89 | 0) FUNCTION_TABLE_vi[HEAP32[$8 + 4 >> 2] & 255]($89);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function _pass2_fs_dither($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0184212 = 0, $$0185211 = 0, $$0186210 = 0, $$0187209 = 0, $$0188208 = 0, $$0189$lcssa = 0, $$0189207 = 0, $$0190$lcssa = 0, $$0190206 = 0, $$0191$lcssa = 0, $$0191205 = 0, $$0192204 = 0, $$0193217 = 0, $$0194 = 0, $$0195 = 0, $$0196 = 0, $$0197 = 0, $$0199 = 0, $$0213 = 0, $$1$lcssa = 0, $$1198202 = 0, $$1200201 = 0, $$1203 = 0, $102 = 0, $106 = 0, $11 = 0, $110 = 0, $13 = 0, $15 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $30 = 0, $32 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $7 = 0, $80 = 0, $83 = 0, $86 = 0, $87 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $96 = 0, $97 = 0, $storemerge = 0, $$1203$looptemp = 0;
 $5 = HEAP32[$0 + 484 >> 2] | 0;
 $7 = HEAP32[$5 + 24 >> 2] | 0;
 $9 = HEAP32[$0 + 112 >> 2] | 0;
 $11 = HEAP32[$0 + 336 >> 2] | 0;
 $13 = HEAP32[$5 + 40 >> 2] | 0;
 $15 = HEAP32[$0 + 136 >> 2] | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 $18 = HEAP32[$15 + 4 >> 2] | 0;
 $20 = HEAP32[$15 + 8 >> 2] | 0;
 if (($3 | 0) <= 0) return;
 $22 = $5 + 36 | 0;
 $23 = $5 + 32 | 0;
 $24 = ($9 | 0) == 0;
 $25 = $9 + -1 | 0;
 $26 = $25 * 3 | 0;
 $28 = ($9 * 3 | 0) + 3 | 0;
 $$0193217 = 0;
 do {
  $30 = HEAP32[$1 + ($$0193217 << 2) >> 2] | 0;
  $32 = HEAP32[$2 + ($$0193217 << 2) >> 2] | 0;
  if (!(HEAP32[$22 >> 2] | 0)) {
   $$0194 = 3;
   $$0195 = 1;
   $$0196 = HEAP32[$23 >> 2] | 0;
   $$0197 = $32;
   $$0199 = $30;
   $storemerge = 1;
  } else {
   $$0194 = -3;
   $$0195 = -1;
   $$0196 = (HEAP32[$23 >> 2] | 0) + ($28 << 1) | 0;
   $$0197 = $32 + $25 | 0;
   $$0199 = $30 + $26 | 0;
   $storemerge = 0;
  }
  HEAP32[$22 >> 2] = $storemerge;
  if ($24) {
   $$0189$lcssa = 0;
   $$0190$lcssa = 0;
   $$0191$lcssa = 0;
   $$1$lcssa = $$0196;
  } else {
   $40 = $$0194 + 1 | 0;
   $41 = $$0194 + 2 | 0;
   $42 = Math_imul($9, $$0194) | 0;
   $$0184212 = 0;
   $$0185211 = 0;
   $$0186210 = 0;
   $$0187209 = 0;
   $$0188208 = 0;
   $$0189207 = 0;
   $$0190206 = 0;
   $$0191205 = 0;
   $$0192204 = $9;
   $$0213 = 0;
   $$1198202 = $$0197;
   $$1200201 = $$0199;
   $$1203 = $$0196;
   while (1) {
    $$1203$looptemp = $$1203;
    $$1203 = $$1203 + ($$0194 << 1) | 0;
    $80 = HEAPU8[$11 + ((HEAP32[$13 + ($$0213 + 8 + (HEAP16[$$1203 >> 1] | 0) >> 4 << 2) >> 2] | 0) + (HEAPU8[$$1200201 >> 0] | 0)) >> 0] | 0;
    $83 = HEAPU8[$11 + ((HEAP32[$13 + ($$0184212 + 8 + (HEAP16[$$1203$looptemp + ($40 << 1) >> 1] | 0) >> 4 << 2) >> 2] | 0) + (HEAPU8[$$1200201 + 1 >> 0] | 0)) >> 0] | 0;
    $86 = HEAPU8[$11 + ((HEAP32[$13 + ($$0185211 + 8 + (HEAP16[$$1203$looptemp + ($41 << 1) >> 1] | 0) >> 4 << 2) >> 2] | 0) + (HEAPU8[$$1200201 + 2 >> 0] | 0)) >> 0] | 0;
    $87 = $80 >>> 3;
    $90 = $83 >>> 2;
    $91 = $86 >>> 3;
    $92 = (HEAP32[$7 + ($87 << 2) >> 2] | 0) + ($90 << 6) + ($91 << 1) | 0;
    $93 = HEAP16[$92 >> 1] | 0;
    if (!($93 << 16 >> 16)) {
     _fill_inverse_cmap($0, $87, $90, $91);
     $96 = HEAP16[$92 >> 1] | 0;
    } else $96 = $93;
    $97 = ($96 & 65535) + -1 | 0;
    HEAP8[$$1198202 >> 0] = $97;
    $102 = $80 - (HEAPU8[$16 + $97 >> 0] | 0) | 0;
    $106 = $83 - (HEAPU8[$18 + $97 >> 0] | 0) | 0;
    $110 = $86 - (HEAPU8[$20 + $97 >> 0] | 0) | 0;
    HEAP16[$$1203$looptemp >> 1] = ($102 * 3 | 0) + $$0189207;
    $$0189207 = ($102 * 5 | 0) + $$0186210 | 0;
    HEAP16[$$1203$looptemp + 2 >> 1] = ($106 * 3 | 0) + $$0190206;
    $$0190206 = ($106 * 5 | 0) + $$0187209 | 0;
    HEAP16[$$1203$looptemp + 4 >> 1] = ($110 * 3 | 0) + $$0191205;
    $$0191205 = ($110 * 5 | 0) + $$0188208 | 0;
    $$0192204 = $$0192204 + -1 | 0;
    if (!$$0192204) break; else {
     $$0184212 = $106 * 7 | 0;
     $$0185211 = $110 * 7 | 0;
     $$0186210 = $102;
     $$0187209 = $106;
     $$0188208 = $110;
     $$0213 = $102 * 7 | 0;
     $$1198202 = $$1198202 + $$0195 | 0;
     $$1200201 = $$1200201 + $$0194 | 0;
    }
   }
   $$0189$lcssa = $$0189207;
   $$0190$lcssa = $$0190206;
   $$0191$lcssa = $$0191205;
   $$1$lcssa = $$0196 + ($42 << 1) | 0;
  }
  HEAP16[$$1$lcssa >> 1] = $$0189$lcssa;
  HEAP16[$$1$lcssa + 2 >> 1] = $$0190$lcssa;
  HEAP16[$$1$lcssa + 4 >> 1] = $$0191$lcssa;
  $$0193217 = $$0193217 + 1 | 0;
 } while (($$0193217 | 0) != ($3 | 0));
 return;
}

function _jpeg_idct_5x10($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0196207 = 0, $$0198206 = 0, $$0199205 = 0, $$0208 = 0, $$1197203 = 0, $$1204 = 0, $131 = 0, $134 = 0, $137 = 0, $139 = 0, $141 = 0, $143 = 0, $144 = 0, $146 = 0, $147 = 0, $148 = 0, $15 = 0, $150 = 0, $152 = 0, $154 = 0, $156 = 0, $158 = 0, $160 = 0, $21 = 0, $23 = 0, $25 = 0, $28 = 0, $34 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $56 = 0, $62 = 0, $68 = 0, $7 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $83 = 0, $86 = 0, $87 = 0, $90 = 0, $93 = 0, $96 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0196207 = $5;
 $$0198206 = HEAP32[$1 + 84 >> 2] | 0;
 $$0199205 = $2;
 $$0208 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0199205 >> 1] << 13, HEAP32[$$0198206 >> 2] | 0) | 0 | 1024;
  $21 = Math_imul(HEAP32[$$0198206 + 128 >> 2] | 0, HEAP16[$$0199205 + 64 >> 1] | 0) | 0;
  $23 = ($21 * 9373 | 0) + $15 | 0;
  $25 = (Math_imul($21, -3580) | 0) + $15 | 0;
  $28 = (Math_imul($21, -11586) | 0) + $15 >> 11;
  $34 = Math_imul(HEAP32[$$0198206 + 64 >> 2] | 0, HEAP16[$$0199205 + 32 >> 1] | 0) | 0;
  $40 = Math_imul(HEAP32[$$0198206 + 192 >> 2] | 0, HEAP16[$$0199205 + 96 >> 1] | 0) | 0;
  $42 = ($40 + $34 | 0) * 6810 | 0;
  $44 = $42 + ($34 * 4209 | 0) | 0;
  $46 = $42 + (Math_imul($40, -17828) | 0) | 0;
  $47 = $44 + $23 | 0;
  $48 = $23 - $44 | 0;
  $49 = $46 + $25 | 0;
  $50 = $25 - $46 | 0;
  $56 = Math_imul(HEAP32[$$0198206 + 32 >> 2] | 0, HEAP16[$$0199205 + 16 >> 1] | 0) | 0;
  $62 = Math_imul(HEAP32[$$0198206 + 96 >> 2] | 0, HEAP16[$$0199205 + 48 >> 1] | 0) | 0;
  $68 = Math_imul(HEAP32[$$0198206 + 160 >> 2] | 0, HEAP16[$$0199205 + 80 >> 1] | 0) | 0;
  $74 = Math_imul(HEAP32[$$0198206 + 224 >> 2] | 0, HEAP16[$$0199205 + 112 >> 1] | 0) | 0;
  $75 = $74 + $62 | 0;
  $76 = $62 - $74 | 0;
  $77 = $76 * 2531 | 0;
  $78 = $68 << 13;
  $79 = $75 * 7791 | 0;
  $80 = $77 + $78 | 0;
  $83 = $79 + ($56 * 11443 | 0) + $80 | 0;
  $86 = ($56 * 1812 | 0) - $79 + $80 | 0;
  $87 = $75 * 4815 | 0;
  $90 = $78 - $77 - ($76 << 12) | 0;
  $93 = $56 - $68 - $76 << 2;
  $96 = ($56 * 10323 | 0) - $87 - $90 | 0;
  $99 = $90 + (($56 * 5260 | 0) - $87) | 0;
  HEAP32[$$0196207 >> 2] = $83 + $47 >> 11;
  HEAP32[$$0196207 + 180 >> 2] = $47 - $83 >> 11;
  HEAP32[$$0196207 + 20 >> 2] = $96 + $49 >> 11;
  HEAP32[$$0196207 + 160 >> 2] = $49 - $96 >> 11;
  HEAP32[$$0196207 + 40 >> 2] = $93 + $28;
  HEAP32[$$0196207 + 140 >> 2] = $28 - $93;
  HEAP32[$$0196207 + 60 >> 2] = $99 + $50 >> 11;
  HEAP32[$$0196207 + 120 >> 2] = $50 - $99 >> 11;
  HEAP32[$$0196207 + 80 >> 2] = $86 + $48 >> 11;
  HEAP32[$$0196207 + 100 >> 2] = $48 - $86 >> 11;
  $$0208 = $$0208 + 1 | 0;
  if (($$0208 | 0) == 5) break; else {
   $$0196207 = $$0196207 + 4 | 0;
   $$0198206 = $$0198206 + 4 | 0;
   $$0199205 = $$0199205 + 2 | 0;
  }
 }
 $131 = $7 + -384 | 0;
 $$1197203 = $5;
 $$1204 = 0;
 while (1) {
  $134 = (HEAP32[$3 + ($$1204 << 2) >> 2] | 0) + $4 | 0;
  $137 = (HEAP32[$$1197203 >> 2] << 13) + 134348800 | 0;
  $139 = HEAP32[$$1197203 + 8 >> 2] | 0;
  $141 = HEAP32[$$1197203 + 16 >> 2] | 0;
  $143 = ($141 + $139 | 0) * 6476 | 0;
  $144 = $139 - $141 | 0;
  $146 = ($144 * 2896 | 0) + $137 | 0;
  $147 = $146 + $143 | 0;
  $148 = $146 - $143 | 0;
  $150 = (Math_imul($144, -11584) | 0) + $137 | 0;
  $152 = HEAP32[$$1197203 + 4 >> 2] | 0;
  $154 = HEAP32[$$1197203 + 12 >> 2] | 0;
  $156 = ($154 + $152 | 0) * 6810 | 0;
  $158 = $156 + ($152 * 4209 | 0) | 0;
  $160 = $156 + (Math_imul($154, -17828) | 0) | 0;
  HEAP8[$134 >> 0] = HEAP8[$131 + (($158 + $147 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$134 + 4 >> 0] = HEAP8[$131 + (($147 - $158 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$134 + 1 >> 0] = HEAP8[$131 + (($160 + $148 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$134 + 3 >> 0] = HEAP8[$131 + (($148 - $160 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$134 + 2 >> 0] = HEAP8[$131 + ($150 >>> 18 & 1023) >> 0] | 0;
  $$1204 = $$1204 + 1 | 0;
  if (($$1204 | 0) == 10) break; else $$1197203 = $$1197203 + 20 | 0;
 }
 STACKTOP = sp;
 return;
}

function _jpeg_idct_10x5($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0196205 = 0, $$0198204 = 0, $$0199203 = 0, $$0206 = 0, $$1197201 = 0, $$1202 = 0, $100 = 0, $102 = 0, $104 = 0, $107 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $117 = 0, $120 = 0, $121 = 0, $124 = 0, $127 = 0, $130 = 0, $133 = 0, $15 = 0, $21 = 0, $27 = 0, $29 = 0, $30 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $42 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $7 = 0, $72 = 0, $75 = 0, $78 = 0, $80 = 0, $82 = 0, $84 = 0, $86 = 0, $88 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(160);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0196205 = $5;
 $$0198204 = HEAP32[$1 + 84 >> 2] | 0;
 $$0199203 = $2;
 $$0206 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0199203 >> 1] << 13, HEAP32[$$0198204 >> 2] | 0) | 0 | 1024;
  $21 = Math_imul(HEAP32[$$0198204 + 64 >> 2] | 0, HEAP16[$$0199203 + 32 >> 1] | 0) | 0;
  $27 = Math_imul(HEAP32[$$0198204 + 128 >> 2] | 0, HEAP16[$$0199203 + 64 >> 1] | 0) | 0;
  $29 = ($27 + $21 | 0) * 6476 | 0;
  $30 = $21 - $27 | 0;
  $32 = ($30 * 2896 | 0) + $15 | 0;
  $33 = $32 + $29 | 0;
  $34 = $32 - $29 | 0;
  $36 = (Math_imul($30, -11584) | 0) + $15 | 0;
  $42 = Math_imul(HEAP32[$$0198204 + 32 >> 2] | 0, HEAP16[$$0199203 + 16 >> 1] | 0) | 0;
  $48 = Math_imul(HEAP32[$$0198204 + 96 >> 2] | 0, HEAP16[$$0199203 + 48 >> 1] | 0) | 0;
  $50 = ($48 + $42 | 0) * 6810 | 0;
  $52 = $50 + ($42 * 4209 | 0) | 0;
  $54 = $50 + (Math_imul($48, -17828) | 0) | 0;
  HEAP32[$$0196205 >> 2] = $52 + $33 >> 11;
  HEAP32[$$0196205 + 128 >> 2] = $33 - $52 >> 11;
  HEAP32[$$0196205 + 32 >> 2] = $54 + $34 >> 11;
  HEAP32[$$0196205 + 96 >> 2] = $34 - $54 >> 11;
  HEAP32[$$0196205 + 64 >> 2] = $36 >> 11;
  $$0206 = $$0206 + 1 | 0;
  if (($$0206 | 0) == 8) break; else {
   $$0196205 = $$0196205 + 4 | 0;
   $$0198204 = $$0198204 + 4 | 0;
   $$0199203 = $$0199203 + 2 | 0;
  }
 }
 $72 = $7 + -384 | 0;
 $$1197201 = $5;
 $$1202 = 0;
 while (1) {
  $75 = (HEAP32[$3 + ($$1202 << 2) >> 2] | 0) + $4 | 0;
  $78 = (HEAP32[$$1197201 >> 2] << 13) + 134348800 | 0;
  $80 = HEAP32[$$1197201 + 16 >> 2] | 0;
  $82 = $78 + ($80 * 9373 | 0) | 0;
  $84 = $78 + (Math_imul($80, -3580) | 0) | 0;
  $86 = $78 + (Math_imul($80, -11586) | 0) | 0;
  $88 = HEAP32[$$1197201 + 8 >> 2] | 0;
  $90 = HEAP32[$$1197201 + 24 >> 2] | 0;
  $92 = ($90 + $88 | 0) * 6810 | 0;
  $94 = $92 + ($88 * 4209 | 0) | 0;
  $96 = $92 + (Math_imul($90, -17828) | 0) | 0;
  $97 = $94 + $82 | 0;
  $98 = $82 - $94 | 0;
  $99 = $96 + $84 | 0;
  $100 = $84 - $96 | 0;
  $102 = HEAP32[$$1197201 + 4 >> 2] | 0;
  $104 = HEAP32[$$1197201 + 12 >> 2] | 0;
  $107 = HEAP32[$$1197201 + 20 >> 2] << 13;
  $109 = HEAP32[$$1197201 + 28 >> 2] | 0;
  $110 = $109 + $104 | 0;
  $111 = $104 - $109 | 0;
  $112 = $111 * 2531 | 0;
  $113 = $110 * 7791 | 0;
  $114 = $112 + $107 | 0;
  $117 = $113 + ($102 * 11443 | 0) + $114 | 0;
  $120 = ($102 * 1812 | 0) - $113 + $114 | 0;
  $121 = $110 * 4815 | 0;
  $124 = $107 - $112 - ($111 << 12) | 0;
  $127 = ($102 - $111 << 13) - $107 | 0;
  $130 = ($102 * 10323 | 0) - $121 - $124 | 0;
  $133 = $124 + (($102 * 5260 | 0) - $121) | 0;
  HEAP8[$75 >> 0] = HEAP8[$72 + (($117 + $97 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$75 + 9 >> 0] = HEAP8[$72 + (($97 - $117 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$75 + 1 >> 0] = HEAP8[$72 + (($130 + $99 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$75 + 8 >> 0] = HEAP8[$72 + (($99 - $130 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$75 + 2 >> 0] = HEAP8[$72 + (($127 + $86 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$75 + 7 >> 0] = HEAP8[$72 + (($86 - $127 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$75 + 3 >> 0] = HEAP8[$72 + (($133 + $100 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$75 + 6 >> 0] = HEAP8[$72 + (($100 - $133 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$75 + 4 >> 0] = HEAP8[$72 + (($120 + $98 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$75 + 5 >> 0] = HEAP8[$72 + (($98 - $120 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1202 = $$1202 + 1 | 0;
  if (($$1202 | 0) == 5) break; else $$1197201 = $$1197201 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$055 = 0, $$056 = 0, $$057 = 0, $$058 = 0, $$061 = 0, $$2 = 0, $$260 = 0, $$263 = 0, $11 = 0, $12 = 0, $18 = 0, $21 = 0, $23 = 0, $27 = 0, $29 = 0, $3 = 0, $33 = 0, $34 = 0, $38 = 0, $41 = 0, $46 = 0, $47 = 0, $5 = 0, $58 = 0, $61 = 0, $66 = 0, $67 = 0, $79 = 0, $84 = 0, $88 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $5 = $0 + 4 | 0;
 HEAP32[$5 >> 2] = HEAP32[$0 >> 2];
 do if ((__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) != 0 ? (__ZNK6vision18BinaryFeatureStore4sizeEv($2) | 0) != 0 : 0) {
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm($0, __ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0);
  $11 = $0 + 8 | 0;
  $12 = $0 + 12 | 0;
  $$055 = 0;
  while (1) {
   if ($$055 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) >>> 0) break;
   $21 = __ZNK6vision18BinaryFeatureStore7featureEm($1, $$055) | 0;
   $23 = (__ZNK6vision18BinaryFeatureStore5pointEm($1, $$055) | 0) + 16 | 0;
   $$056 = 0;
   $$057 = -1;
   $$058 = 2147483647;
   $$061 = -1;
   while (1) {
    if ($$056 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv($2) | 0) >>> 0) break;
    $27 = HEAP8[$23 >> 0] | 0;
    $29 = (__ZNK6vision18BinaryFeatureStore5pointEm($2, $$056) | 0) + 16 | 0;
    if ($27 << 24 >> 24 == (HEAP8[$29 >> 0] | 0)) {
     $33 = __ZN6vision15HammingDistanceILi96EEEjPKhS2_($21, __ZNK6vision18BinaryFeatureStore7featureEm($2, $$056) | 0) | 0;
     $34 = $33 >>> 0 < $$057 >>> 0;
     $$2 = $34 ? $33 : $$057;
     $$260 = $34 ? $$056 : $$058;
     $$263 = $34 ? $$057 : $33 >>> 0 < $$061 >>> 0 ? $33 : $$061;
    } else {
     $$2 = $$057;
     $$260 = $$058;
     $$263 = $$061;
    }
    $$056 = $$056 + 1 | 0;
    $$057 = $$2;
    $$058 = $$260;
    $$061 = $$263;
   }
   do if (($$057 | 0) != -1) {
    if (($$061 | 0) == -1) {
     __ZN6vision7match_tC2Eii($3, $$055, $$058);
     $38 = HEAP32[$5 >> 2] | 0;
     if ($38 >>> 0 < (HEAP32[$11 >> 2] | 0) >>> 0) {
      $41 = $3;
      $46 = HEAP32[$41 + 4 >> 2] | 0;
      $47 = $38;
      HEAP32[$47 >> 2] = HEAP32[$41 >> 2];
      HEAP32[$47 + 4 >> 2] = $46;
      HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $3);
     break;
    }
    if (+($$057 >>> 0) / +($$061 >>> 0) < +HEAPF32[$12 >> 2]) {
     __ZN6vision7match_tC2Eii($3, $$055, $$058);
     $58 = HEAP32[$5 >> 2] | 0;
     if ($58 >>> 0 < (HEAP32[$11 >> 2] | 0) >>> 0) {
      $61 = $3;
      $66 = HEAP32[$61 + 4 >> 2] | 0;
      $67 = $58;
      HEAP32[$67 >> 2] = HEAP32[$61 >> 2];
      HEAP32[$67 + 4 >> 2] = $66;
      HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $3);
    }
   } while (0);
   $$055 = $$055 + 1 | 0;
  }
  $18 = (HEAP32[$5 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3;
  if ($18 >>> 0 > (__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) >>> 0) {
   $79 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 35438) | 0, 35229) | 0, 39072) | 0, 112) | 0, 39079) | 0, 35498) | 0;
   __ZNKSt3__28ios_base6getlocEv($3, $79 + (HEAP32[(HEAP32[$79 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $84 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
   $88 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$84 >> 2] | 0) + 28 >> 2] & 127]($84, 10) | 0;
   __ZNSt3__26localeD2Ev($3);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($79, $88) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($79) | 0;
   _abort();
  } else {
   $$0 = (HEAP32[$5 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3;
   break;
  }
 } else $$0 = 0; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$081 = 0, $$084 = 0, $$085$off0 = 0, $$1 = 0, $$182 = 0, $$186$off0 = 0, $$2 = 0, $$28392 = 0, $$28393 = 0, $13 = 0, $19 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $47 = 0, $49 = 0, $61 = 0, $62 = 0, $63 = 0, $66 = 0, $69 = 0, $72 = 0, $79 = 0, $80 = 0, $89 = 0, label = 0;
 L1 : do if (!(__ZL8is_equalPKSt9type_infoS1_b($0, HEAP32[$1 + 8 >> 2] | 0, $4) | 0)) {
  if (!(__ZL8is_equalPKSt9type_infoS1_b($0, HEAP32[$1 >> 2] | 0, $4) | 0)) {
   $61 = HEAP32[$0 + 12 >> 2] | 0;
   $62 = $0 + 16 + ($61 << 3) | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0 + 16 | 0, $1, $2, $3, $4);
   $63 = $0 + 24 | 0;
   if (($61 | 0) <= 1) break;
   $66 = HEAP32[$0 + 8 >> 2] | 0;
   if (($66 & 2 | 0) == 0 ? ($69 = $1 + 36 | 0, (HEAP32[$69 >> 2] | 0) != 1) : 0) {
    if (!($66 & 1)) {
     $89 = $1 + 54 | 0;
     $$2 = $63;
     while (1) {
      if (HEAP8[$89 >> 0] | 0) break L1;
      if ((HEAP32[$69 >> 2] | 0) == 1) break L1;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$2, $1, $2, $3, $4);
      $$2 = $$2 + 8 | 0;
      if ($$2 >>> 0 >= $62 >>> 0) break L1;
     }
    }
    $79 = $1 + 24 | 0;
    $80 = $1 + 54 | 0;
    $$1 = $63;
    while (1) {
     if (HEAP8[$80 >> 0] | 0) break L1;
     if ((HEAP32[$69 >> 2] | 0) == 1 ? (HEAP32[$79 >> 2] | 0) == 1 : 0) break L1;
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$1, $1, $2, $3, $4);
     $$1 = $$1 + 8 | 0;
     if ($$1 >>> 0 >= $62 >>> 0) break L1;
    }
   }
   $72 = $1 + 54 | 0;
   $$0 = $63;
   while (1) {
    if (HEAP8[$72 >> 0] | 0) break L1;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$0, $1, $2, $3, $4);
    $$0 = $$0 + 8 | 0;
    if ($$0 >>> 0 >= $62 >>> 0) break L1;
   }
  }
  if ((HEAP32[$1 + 16 >> 2] | 0) != ($2 | 0) ? ($13 = $1 + 20 | 0, (HEAP32[$13 >> 2] | 0) != ($2 | 0)) : 0) {
   HEAP32[$1 + 32 >> 2] = $3;
   $19 = $1 + 44 | 0;
   if ((HEAP32[$19 >> 2] | 0) != 4) {
    $25 = $0 + 16 + (HEAP32[$0 + 12 >> 2] << 3) | 0;
    $26 = $1 + 52 | 0;
    $27 = $1 + 53 | 0;
    $28 = $1 + 54 | 0;
    $29 = $0 + 8 | 0;
    $30 = $1 + 24 | 0;
    $$081 = 0;
    $$084 = $0 + 16 | 0;
    $$085$off0 = 0;
    L33 : while (1) {
     if ($$084 >>> 0 >= $25 >>> 0) {
      label = 18;
      break;
     }
     HEAP8[$26 >> 0] = 0;
     HEAP8[$27 >> 0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($$084, $1, $2, $2, 1, $4);
     if (HEAP8[$28 >> 0] | 0) {
      label = 18;
      break;
     }
     do if (HEAP8[$27 >> 0] | 0) {
      if (!(HEAP8[$26 >> 0] | 0)) if (!(HEAP32[$29 >> 2] & 1)) {
       $$28393 = $$081;
       label = 19;
       break L33;
      } else {
       $$182 = $$081;
       $$186$off0 = 1;
       break;
      }
      if ((HEAP32[$30 >> 2] | 0) == 1) {
       $$28393 = 1;
       label = 19;
       break L33;
      }
      if (!(HEAP32[$29 >> 2] & 2)) {
       $$28393 = 1;
       label = 19;
       break L33;
      } else {
       $$182 = 1;
       $$186$off0 = 1;
      }
     } else {
      $$182 = $$081;
      $$186$off0 = $$085$off0;
     } while (0);
     $$081 = $$182;
     $$084 = $$084 + 8 | 0;
     $$085$off0 = $$186$off0;
    }
    if ((label | 0) == 18) if ($$085$off0) {
     $$28393 = $$081;
     label = 19;
    } else {
     $$28392 = $$081;
     $47 = 4;
    }
    if ((label | 0) == 19) {
     $$28392 = $$28393;
     $47 = 3;
    }
    HEAP32[$19 >> 2] = $47;
    if ($$28392 & 1) break;
   }
   HEAP32[$13 >> 2] = $2;
   $49 = $1 + 40 | 0;
   HEAP32[$49 >> 2] = (HEAP32[$49 >> 2] | 0) + 1;
   if ((HEAP32[$1 + 36 >> 2] | 0) != 1) break;
   if ((HEAP32[$1 + 24 >> 2] | 0) != 2) break;
   HEAP8[$1 + 54 >> 0] = 1;
   break;
  }
  if (($3 | 0) == 1) HEAP32[$1 + 32 >> 2] = 1;
 } else __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, $1, $2, $3); while (0);
 return;
}

function _jpeg_consume_input($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$pre$phiZ2D = 0, $$sink22 = 0, $$sink24 = 0, $1 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $3 = 0, $42 = 0, $43 = 0, $50 = 0, $61 = 0, $62 = 0, $72 = 0, $93 = 0;
 $1 = $0 + 20 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 switch ($2 | 0) {
 case 200:
  {
   $3 = $0 + 460 | 0;
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3 >> 2] | 0) + 4 >> 2] & 255]($0);
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 + 24 >> 2] | 0) + 8 >> 2] & 255]($0);
   HEAP32[$1 >> 2] = 201;
   $$pre$phiZ2D = $3;
   break;
  }
 case 201:
  {
   $$pre$phiZ2D = $0 + 460 | 0;
   break;
  }
 case 210:
 case 208:
 case 207:
 case 206:
 case 205:
 case 204:
 case 203:
  {
   $$0 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$0 + 460 >> 2] >> 2] & 127]($0) | 0;
   return $$0 | 0;
  }
 case 202:
  {
   $$0 = 1;
   return $$0 | 0;
  }
 default:
  {
   $93 = HEAP32[$0 >> 2] | 0;
   HEAP32[$93 + 20 >> 2] = 21;
   HEAP32[$93 + 24 >> 2] = $2;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   $$0 = 0;
   return $$0 | 0;
  }
 }
 $13 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$$pre$phiZ2D >> 2] >> 2] & 127]($0) | 0;
 if (($13 | 0) != 1) {
  $$0 = $13;
  return $$0 | 0;
 }
 $16 = HEAP32[$0 + 36 >> 2] | 0;
 L13 : do switch ($16 | 0) {
 case 1:
  {
   $$sink22 = $16;
   $$sink24 = $16;
   break;
  }
 case 3:
  {
   $18 = HEAP32[$0 + 216 >> 2] | 0;
   $19 = HEAP32[$18 >> 2] | 0;
   $21 = HEAP32[$18 + 88 >> 2] | 0;
   $23 = HEAP32[$18 + 176 >> 2] | 0;
   $24 = ($19 | 0) == 1;
   if (!($24 & ($21 | 0) == 2 & ($23 | 0) == 3)) if (!($24 & ($21 | 0) == 34 & ($23 | 0) == 35)) if (!(($19 | 0) == 82 & ($21 | 0) == 71 & ($23 | 0) == 66)) if (!(($19 | 0) == 114 & ($21 | 0) == 103 & ($23 | 0) == 98)) if (!(HEAP32[$0 + 284 >> 2] | 0)) {
    if (!(HEAP32[$0 + 296 >> 2] | 0)) {
     $50 = HEAP32[$0 >> 2] | 0;
     HEAP32[$50 + 24 >> 2] = $19;
     HEAP32[$50 + 28 >> 2] = $21;
     HEAP32[$50 + 32 >> 2] = $23;
     HEAP32[$50 + 20 >> 2] = 113;
     FUNCTION_TABLE_vii[HEAP32[$50 + 4 >> 2] & 255]($0, 1);
     $$sink22 = 2;
     $$sink24 = 3;
     break L13;
    }
    $42 = HEAP8[$0 + 300 >> 0] | 0;
    switch ($42 << 24 >> 24) {
    case 0:
     {
      $$sink22 = 2;
      $$sink24 = 2;
      break L13;
      break;
     }
    case 1:
     {
      $$sink22 = 2;
      $$sink24 = 3;
      break L13;
      break;
     }
    default:
     {
      $43 = HEAP32[$0 >> 2] | 0;
      HEAP32[$43 + 20 >> 2] = 116;
      HEAP32[$43 + 24 >> 2] = $42 & 255;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, -1);
      $$sink22 = 2;
      $$sink24 = 3;
      break L13;
     }
    }
   } else {
    $$sink22 = 2;
    $$sink24 = 3;
   } else {
    $$sink22 = 2;
    $$sink24 = 6;
   } else {
    $$sink22 = 2;
    $$sink24 = 2;
   } else {
    $$sink22 = 2;
    $$sink24 = 7;
   } else {
    $$sink22 = 2;
    $$sink24 = 3;
   }
   break;
  }
 case 4:
  {
   if (!(HEAP32[$0 + 296 >> 2] | 0)) {
    $$sink22 = 4;
    $$sink24 = 4;
   } else {
    $61 = HEAP8[$0 + 300 >> 0] | 0;
    switch ($61 << 24 >> 24) {
    case 0:
     {
      $$sink22 = 4;
      $$sink24 = 4;
      break L13;
      break;
     }
    case 2:
     {
      $$sink22 = 4;
      $$sink24 = 5;
      break L13;
      break;
     }
    default:
     {
      $62 = HEAP32[$0 >> 2] | 0;
      HEAP32[$62 + 20 >> 2] = 116;
      HEAP32[$62 + 24 >> 2] = $61 & 255;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, -1);
      $$sink22 = 4;
      $$sink24 = 5;
      break L13;
     }
    }
   }
   break;
  }
 default:
  {
   $$sink22 = 0;
   $$sink24 = 0;
  }
 } while (0);
 HEAP32[$0 + 40 >> 2] = $$sink24;
 HEAP32[$0 + 44 >> 2] = $$sink22;
 $72 = HEAP32[$0 + 428 >> 2] | 0;
 HEAP32[$0 + 48 >> 2] = $72;
 HEAP32[$0 + 52 >> 2] = $72;
 HEAPF64[$0 + 56 >> 3] = 1.0;
 HEAP32[$0 + 64 >> 2] = 0;
 HEAP32[$0 + 68 >> 2] = 0;
 HEAP32[$0 + 72 >> 2] = 0;
 HEAP32[$0 + 76 >> 2] = 1;
 HEAP32[$0 + 80 >> 2] = 1;
 HEAP32[$0 + 84 >> 2] = 0;
 HEAP32[$0 + 88 >> 2] = 2;
 HEAP32[$0 + 92 >> 2] = 1;
 HEAP32[$0 + 96 >> 2] = 256;
 HEAP32[$0 + 136 >> 2] = 0;
 HEAP32[$0 + 100 >> 2] = 0;
 HEAP32[$0 + 104 >> 2] = 0;
 HEAP32[$0 + 108 >> 2] = 0;
 HEAP32[$1 >> 2] = 202;
 $$0 = 1;
 return $$0 | 0;
}

function _consume_data($0) {
 $0 = $0 | 0;
 var $$071 = 0, $$072100 = 0, $$07386$us = 0, $$07483$us = 0, $$075105 = 0, $$07691 = 0, $$07896 = 0, $$084$us = 0, $$177$lcssa = 0, $$17785$us = 0, $$192 = 0, $$282$us = 0, $$sink = 0, $1 = 0, $10 = 0, $100 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $42 = 0, $44 = 0, $45 = 0, $47 = 0, $50 = 0, $60 = 0, $7 = 0, $70 = 0, $71 = 0, $73 = 0, $75 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $82 = 0, $88 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 $2 = $0 + 452 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 340 | 0;
 if ((HEAP32[$4 >> 2] | 0) > 0) {
  $7 = $0 + 4 | 0;
  $8 = $0 + 148 | 0;
  $$075105 = 0;
  do {
   $10 = HEAP32[$0 + 344 + ($$075105 << 2) >> 2] | 0;
   $20 = HEAP32[$10 + 12 >> 2] | 0;
   $21 = Math_imul($20, HEAP32[$8 >> 2] | 0) | 0;
   $22 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 32 >> 2] & 31]($0, HEAP32[$3 + 72 + (HEAP32[$10 + 4 >> 2] << 2) >> 2] | 0, $21, $20, 1) | 0;
   HEAP32[$1 + ($$075105 << 2) >> 2] = $22;
   $$075105 = $$075105 + 1 | 0;
  } while (($$075105 | 0) < (HEAP32[$4 >> 2] | 0));
 }
 $27 = $3 + 24 | 0;
 $28 = HEAP32[$27 >> 2] | 0;
 $29 = $3 + 28 | 0;
 $30 = HEAP32[$29 >> 2] | 0;
 L6 : do if (($28 | 0) < ($30 | 0)) {
  $32 = $3 + 20 | 0;
  $33 = $0 + 360 | 0;
  $34 = $0 + 468 | 0;
  $35 = $3 + 32 | 0;
  $$072100 = $28;
  $37 = HEAP32[$32 >> 2] | 0;
  $38 = HEAP32[$33 >> 2] | 0;
  $99 = $30;
  L8 : while (1) {
   if ($37 >>> 0 < $38 >>> 0) {
    $$07896 = $37;
    while (1) {
     $39 = HEAP32[$4 >> 2] | 0;
     if (($39 | 0) > 0) {
      $$07691 = 0;
      $$192 = 0;
      while (1) {
       $42 = HEAP32[$0 + 344 + ($$192 << 2) >> 2] | 0;
       $44 = HEAP32[$42 + 56 >> 2] | 0;
       $45 = Math_imul($44, $$07896) | 0;
       $47 = HEAP32[$42 + 60 >> 2] | 0;
       if (($47 | 0) > 0 ? ($50 = HEAP32[$1 + ($$192 << 2) >> 2] | 0, ($44 | 0) > 0) : 0) {
        $$07386$us = 0;
        $$17785$us = $$07691;
        while (1) {
         $$07483$us = 0;
         $$084$us = (HEAP32[$50 + ($$07386$us + $$072100 << 2) >> 2] | 0) + ($45 << 7) | 0;
         $$282$us = $$17785$us;
         while (1) {
          HEAP32[$3 + 32 + ($$282$us << 2) >> 2] = $$084$us;
          $$07483$us = $$07483$us + 1 | 0;
          if (($$07483$us | 0) == ($44 | 0)) break; else {
           $$084$us = $$084$us + 128 | 0;
           $$282$us = $$282$us + 1 | 0;
          }
         }
         $60 = $44 + $$17785$us | 0;
         $$07386$us = $$07386$us + 1 | 0;
         if (($$07386$us | 0) >= ($47 | 0)) {
          $$177$lcssa = $60;
          break;
         } else $$17785$us = $60;
        }
       } else $$177$lcssa = $$07691;
       $$192 = $$192 + 1 | 0;
       if (($$192 | 0) >= ($39 | 0)) break; else $$07691 = $$177$lcssa;
      }
     }
     if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$34 >> 2] | 0) + 4 >> 2] & 127]($0, $35) | 0)) break L8;
     $70 = $$07896 + 1 | 0;
     $71 = HEAP32[$33 >> 2] | 0;
     if ($70 >>> 0 < $71 >>> 0) $$07896 = $70; else break;
    }
    $100 = $71;
    $75 = HEAP32[$29 >> 2] | 0;
   } else {
    $100 = $38;
    $75 = $99;
   }
   HEAP32[$32 >> 2] = 0;
   $73 = $$072100 + 1 | 0;
   if (($73 | 0) < ($75 | 0)) {
    $$072100 = $73;
    $37 = 0;
    $38 = $100;
    $99 = $75;
   } else break L6;
  }
  HEAP32[$27 >> 2] = $$072100;
  HEAP32[$32 >> 2] = $$07896;
  $$071 = 0;
  STACKTOP = sp;
  return $$071 | 0;
 } while (0);
 $76 = $0 + 148 | 0;
 $78 = (HEAP32[$76 >> 2] | 0) + 1 | 0;
 HEAP32[$76 >> 2] = $78;
 $80 = HEAP32[$0 + 332 >> 2] | 0;
 if ($78 >>> 0 >= $80 >>> 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 12 >> 2] & 255]($0);
  $$071 = 4;
  STACKTOP = sp;
  return $$071 | 0;
 }
 $82 = HEAP32[$2 >> 2] | 0;
 if ((HEAP32[$4 >> 2] | 0) > 1) $$sink = 1; else {
  $88 = HEAP32[$0 + 344 >> 2] | 0;
  $$sink = HEAP32[($78 >>> 0 < ($80 + -1 | 0) >>> 0 ? $88 + 12 | 0 : $88 + 76 | 0) >> 2] | 0;
 }
 HEAP32[$82 + 28 >> 2] = $$sink;
 HEAP32[$82 + 20 >> 2] = 0;
 HEAP32[$82 + 24 >> 2] = 0;
 $$071 = 3;
 STACKTOP = sp;
 return $$071 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBracedExprEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$7 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp + 8 | 0;
 $2 = sp + 4 | 0;
 $3 = sp;
 L1 : do if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 == 100) switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 | 0) {
 case 105:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
   $10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   $11 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseSourceNameEPNS5_9NameStateE($10) | 0;
   HEAP32[$1 >> 2] = $11;
   if (!$11) $$1 = 0; else {
    $13 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBracedExprEv($10) | 0;
    HEAP32[$2 >> 2] = $13;
    if (!$13) $$0 = 0; else {
     HEAP8[$3 >> 0] = 0;
     $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10BracedExprEJRPNS0_4NodeESA_bEEES9_DpOT0_($0, $1, $2, $3) | 0;
    }
    $$1 = $$0;
   }
   $$7 = $$1;
   break L1;
   break;
  }
 case 120:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
   $18 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   $19 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($18) | 0;
   HEAP32[$1 >> 2] = $19;
   if (!$19) $$3 = 0; else {
    $21 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBracedExprEv($18) | 0;
    HEAP32[$2 >> 2] = $21;
    if (!$21) $$2 = 0; else {
     HEAP8[$3 >> 0] = 1;
     $$2 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10BracedExprEJRPNS0_4NodeESA_bEEES9_DpOT0_($0, $1, $2, $3) | 0;
    }
    $$3 = $$2;
   }
   $$7 = $$3;
   break L1;
   break;
  }
 case 88:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
   $26 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   $27 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($26) | 0;
   HEAP32[$1 >> 2] = $27;
   if (!$27) $$6 = 0; else {
    $29 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($26) | 0;
    HEAP32[$2 >> 2] = $29;
    if (!$29) $$5 = 0; else {
     $31 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBracedExprEv($26) | 0;
     HEAP32[$3 >> 2] = $31;
     if (!$31) $$4 = 0; else $$4 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15BracedRangeExprEJRPNS0_4NodeESA_SA_EEES9_DpOT0_($0, $1, $2, $3) | 0;
     $$5 = $$4;
    }
    $$6 = $$5;
   }
   $$7 = $$6;
   break L1;
   break;
  }
 default:
  {
   label = 20;
   break L1;
  }
 } else label = 20; while (0);
 if ((label | 0) == 20) $$7 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
 STACKTOP = sp;
 return $$7 | 0;
}

function _jinit_master_decompress($0) {
 $0 = $0 | 0;
 var $$0$i = 0, $$018$i$i = 0, $$pre$phi$iZ2D = 0, $$pre$phi96$iZ2D = 0, $1 = 0, $104 = 0, $11 = 0, $114 = 0, $127 = 0, $133 = 0, $18 = 0, $19 = 0, $30 = 0, $33 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $53 = 0, $56 = 0, $9 = 0, $96 = 0, label = 0;
 $1 = $0 + 4 | 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 28) | 0;
 HEAP32[$0 + 444 >> 2] = $4;
 HEAP32[$4 >> 2] = 184;
 HEAP32[$4 + 4 >> 2] = 185;
 HEAP32[$4 + 8 >> 2] = 0;
 $9 = HEAP32[$0 + 212 >> 2] | 0;
 if (($9 | 0) != 8) {
  $11 = HEAP32[$0 >> 2] | 0;
  HEAP32[$11 + 20 >> 2] = 16;
  HEAP32[$11 + 24 >> 2] = $9;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 _jpeg_calc_output_dimensions($0);
 $18 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1280) | 0;
 _memset($18 | 0, 0, 512) | 0;
 $19 = $18 + 512 | 0;
 HEAP32[$0 + 336 >> 2] = $19;
 $$018$i$i = 0;
 do {
  HEAP8[$19 + $$018$i$i >> 0] = $$018$i$i;
  $$018$i$i = $$018$i$i + 1 | 0;
 } while (($$018$i$i | 0) != 256);
 _memset($18 + 768 | 0, -1, 512) | 0;
 if (((HEAP32[$0 + 116 >> 2] | 0) != 0 ? (HEAP32[$0 + 112 >> 2] | 0) != 0 : 0) ? ($30 = $0 + 120 | 0, (HEAP32[$30 >> 2] | 0) >= 1) : 0) $$pre$phi$iZ2D = $30; else {
  $33 = HEAP32[$0 >> 2] | 0;
  HEAP32[$33 + 20 >> 2] = 33;
  FUNCTION_TABLE_vi[HEAP32[$33 >> 2] & 255]($0);
  $$pre$phi$iZ2D = $0 + 120 | 0;
 }
 $36 = $4 + 12 | 0;
 HEAP32[$36 >> 2] = 0;
 $37 = _use_merged_upsample($0) | 0;
 $38 = $4 + 16 | 0;
 HEAP32[$38 >> 2] = $37;
 $39 = $4 + 20 | 0;
 HEAP32[$39 >> 2] = 0;
 $40 = $4 + 24 | 0;
 HEAP32[$40 >> 2] = 0;
 do if (!(HEAP32[$0 + 84 >> 2] | 0)) {
  HEAP32[$0 + 100 >> 2] = 0;
  HEAP32[$0 + 104 >> 2] = 0;
  HEAP32[$0 + 108 >> 2] = 0;
  $$pre$phi96$iZ2D = $0 + 68 | 0;
 } else {
  if (!(HEAP32[$0 + 64 >> 2] | 0)) {
   HEAP32[$0 + 100 >> 2] = 0;
   HEAP32[$0 + 104 >> 2] = 0;
   HEAP32[$0 + 108 >> 2] = 0;
  }
  $53 = $0 + 68 | 0;
  if (HEAP32[$53 >> 2] | 0) {
   $56 = HEAP32[$0 >> 2] | 0;
   HEAP32[$56 + 20 >> 2] = 48;
   FUNCTION_TABLE_vi[HEAP32[$56 >> 2] & 255]($0);
  }
  do if ((HEAP32[$$pre$phi$iZ2D >> 2] | 0) == 3) {
   if (HEAP32[$0 + 136 >> 2] | 0) {
    HEAP32[$0 + 104 >> 2] = 1;
    break;
   }
   if (!(HEAP32[$0 + 92 >> 2] | 0)) {
    HEAP32[$0 + 100 >> 2] = 1;
    break;
   } else {
    HEAP32[$0 + 108 >> 2] = 1;
    break;
   }
  } else {
   HEAP32[$0 + 100 >> 2] = 1;
   HEAP32[$0 + 104 >> 2] = 0;
   HEAP32[$0 + 108 >> 2] = 0;
   HEAP32[$0 + 136 >> 2] = 0;
  } while (0);
  if (HEAP32[$0 + 100 >> 2] | 0) {
   _jinit_1pass_quantizer($0);
   HEAP32[$39 >> 2] = HEAP32[$0 + 484 >> 2];
  }
  if ((HEAP32[$0 + 108 >> 2] | 0) == 0 ? (HEAP32[$0 + 104 >> 2] | 0) == 0 : 0) {
   $$pre$phi96$iZ2D = $53;
   break;
  }
  _jinit_2pass_quantizer($0);
  HEAP32[$40 >> 2] = HEAP32[$0 + 484 >> 2];
  $$pre$phi96$iZ2D = $53;
 } while (0);
 if (!(HEAP32[$$pre$phi96$iZ2D >> 2] | 0)) {
  if (!(HEAP32[$38 >> 2] | 0)) {
   _jinit_color_deconverter($0);
   _jinit_upsampler($0);
  } else _jinit_merged_upsampler($0);
  _jinit_d_post_controller($0, HEAP32[$0 + 108 >> 2] | 0);
 }
 _jinit_inverse_dct($0);
 if (!(HEAP32[$0 + 228 >> 2] | 0)) _jinit_huff_decoder($0); else _jinit_arith_decoder($0);
 $96 = $0 + 460 | 0;
 if (!(HEAP32[(HEAP32[$96 >> 2] | 0) + 16 >> 2] | 0)) $104 = (HEAP32[$0 + 64 >> 2] | 0) != 0 & 1; else $104 = 1;
 _jinit_d_coef_controller($0, $104);
 if (!(HEAP32[$$pre$phi96$iZ2D >> 2] | 0)) _jinit_d_main_controller($0, 0);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 24 >> 2] & 255]($0);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$96 >> 2] | 0) + 8 >> 2] & 255]($0);
 $114 = HEAP32[$0 + 8 >> 2] | 0;
 if (!$114) return;
 if (HEAP32[$0 + 64 >> 2] | 0) return;
 if (!(HEAP32[(HEAP32[$96 >> 2] | 0) + 16 >> 2] | 0)) return;
 $127 = HEAP32[$0 + 36 >> 2] | 0;
 $$0$i = (HEAP32[$0 + 224 >> 2] | 0) == 0 ? $127 : ($127 * 3 | 0) + 2 | 0;
 HEAP32[$114 + 4 >> 2] = 0;
 $133 = Math_imul($$0$i, HEAP32[$0 + 332 >> 2] | 0) | 0;
 HEAP32[$114 + 8 >> 2] = $133;
 HEAP32[$114 + 12 >> 2] = 0;
 HEAP32[$114 + 16 >> 2] = (HEAP32[$0 + 108 >> 2] | 0) == 0 ? 2 : 3;
 HEAP32[$36 >> 2] = (HEAP32[$36 >> 2] | 0) + 1;
 return;
}

function _h2v2_merged_upsample($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0158$lcssa = 0, $$0158169 = 0, $$0159$lcssa = 0, $$0159168 = 0, $$0160$lcssa = 0, $$0160167 = 0, $$0161$lcssa = 0, $$0161166 = 0, $$0162$lcssa = 0, $$0162165 = 0, $$0163$lcssa = 0, $$0163164 = 0, $$0170 = 0, $103 = 0, $11 = 0, $119 = 0, $122 = 0, $124 = 0, $126 = 0, $13 = 0, $132 = 0, $134 = 0, $136 = 0, $149 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $22 = 0, $26 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $42 = 0, $45 = 0, $47 = 0, $5 = 0, $53 = 0, $55 = 0, $58 = 0, $7 = 0, $73 = 0, $88 = 0, $9 = 0, $scevgep = 0, $scevgep184 = 0;
 $5 = HEAP32[$0 + 476 >> 2] | 0;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $9 = HEAP32[$5 + 16 >> 2] | 0;
 $11 = HEAP32[$5 + 20 >> 2] | 0;
 $13 = HEAP32[$5 + 24 >> 2] | 0;
 $15 = HEAP32[$5 + 28 >> 2] | 0;
 $16 = HEAP32[$1 >> 2] | 0;
 $17 = $2 << 1;
 $19 = HEAP32[$16 + ($17 << 2) >> 2] | 0;
 $22 = HEAP32[$16 + (($17 | 1) << 2) >> 2] | 0;
 $26 = HEAP32[(HEAP32[$1 + 4 >> 2] | 0) + ($2 << 2) >> 2] | 0;
 $30 = HEAP32[(HEAP32[$1 + 8 >> 2] | 0) + ($2 << 2) >> 2] | 0;
 $31 = HEAP32[$3 >> 2] | 0;
 $33 = HEAP32[$3 + 4 >> 2] | 0;
 $34 = $0 + 112 | 0;
 $35 = HEAP32[$34 >> 2] | 0;
 $36 = $35 >>> 1;
 if (!$36) {
  $$0158$lcssa = $30;
  $$0159$lcssa = $26;
  $$0160$lcssa = $22;
  $$0161$lcssa = $19;
  $$0162$lcssa = $33;
  $$0163$lcssa = $31;
  $119 = $35;
 } else {
  $scevgep = $26 + $36 | 0;
  $38 = $35 & -2;
  $39 = $36 * 6 | 0;
  $scevgep184 = $22 + $38 | 0;
  $$0158169 = $30;
  $$0159168 = $26;
  $$0160167 = $22;
  $$0161166 = $19;
  $$0162165 = $33;
  $$0163164 = $31;
  $$0170 = $36;
  while (1) {
   $42 = HEAPU8[$$0159168 >> 0] | 0;
   $45 = HEAPU8[$$0158169 >> 0] | 0;
   $47 = HEAP32[$9 + ($45 << 2) >> 2] | 0;
   $53 = (HEAP32[$13 + ($45 << 2) >> 2] | 0) + (HEAP32[$15 + ($42 << 2) >> 2] | 0) >> 16;
   $55 = HEAP32[$11 + ($42 << 2) >> 2] | 0;
   $58 = HEAPU8[$$0161166 >> 0] | 0;
   HEAP8[$$0163164 >> 0] = HEAP8[$7 + ($47 + $58) >> 0] | 0;
   HEAP8[$$0163164 + 1 >> 0] = HEAP8[$7 + ($53 + $58) >> 0] | 0;
   HEAP8[$$0163164 + 2 >> 0] = HEAP8[$7 + ($55 + $58) >> 0] | 0;
   $73 = HEAPU8[$$0161166 + 1 >> 0] | 0;
   HEAP8[$$0163164 + 3 >> 0] = HEAP8[$7 + ($47 + $73) >> 0] | 0;
   HEAP8[$$0163164 + 4 >> 0] = HEAP8[$7 + ($53 + $73) >> 0] | 0;
   HEAP8[$$0163164 + 5 >> 0] = HEAP8[$7 + ($55 + $73) >> 0] | 0;
   $88 = HEAPU8[$$0160167 >> 0] | 0;
   HEAP8[$$0162165 >> 0] = HEAP8[$7 + ($47 + $88) >> 0] | 0;
   HEAP8[$$0162165 + 1 >> 0] = HEAP8[$7 + ($53 + $88) >> 0] | 0;
   HEAP8[$$0162165 + 2 >> 0] = HEAP8[$7 + ($55 + $88) >> 0] | 0;
   $103 = HEAPU8[$$0160167 + 1 >> 0] | 0;
   HEAP8[$$0162165 + 3 >> 0] = HEAP8[$7 + ($47 + $103) >> 0] | 0;
   HEAP8[$$0162165 + 4 >> 0] = HEAP8[$7 + ($53 + $103) >> 0] | 0;
   HEAP8[$$0162165 + 5 >> 0] = HEAP8[$7 + ($55 + $103) >> 0] | 0;
   $$0170 = $$0170 + -1 | 0;
   if (!$$0170) break; else {
    $$0158169 = $$0158169 + 1 | 0;
    $$0159168 = $$0159168 + 1 | 0;
    $$0160167 = $$0160167 + 2 | 0;
    $$0161166 = $$0161166 + 2 | 0;
    $$0162165 = $$0162165 + 6 | 0;
    $$0163164 = $$0163164 + 6 | 0;
   }
  }
  $$0158$lcssa = $30 + $36 | 0;
  $$0159$lcssa = $scevgep;
  $$0160$lcssa = $scevgep184;
  $$0161$lcssa = $19 + $38 | 0;
  $$0162$lcssa = $33 + $39 | 0;
  $$0163$lcssa = $31 + $39 | 0;
  $119 = HEAP32[$34 >> 2] | 0;
 }
 if (!($119 & 1)) return;
 $122 = HEAPU8[$$0159$lcssa >> 0] | 0;
 $124 = HEAPU8[$$0158$lcssa >> 0] | 0;
 $126 = HEAP32[$9 + ($124 << 2) >> 2] | 0;
 $132 = (HEAP32[$13 + ($124 << 2) >> 2] | 0) + (HEAP32[$15 + ($122 << 2) >> 2] | 0) >> 16;
 $134 = HEAP32[$11 + ($122 << 2) >> 2] | 0;
 $136 = HEAPU8[$$0161$lcssa >> 0] | 0;
 HEAP8[$$0163$lcssa >> 0] = HEAP8[$7 + ($126 + $136) >> 0] | 0;
 HEAP8[$$0163$lcssa + 1 >> 0] = HEAP8[$7 + ($132 + $136) >> 0] | 0;
 HEAP8[$$0163$lcssa + 2 >> 0] = HEAP8[$7 + ($134 + $136) >> 0] | 0;
 $149 = HEAPU8[$$0160$lcssa >> 0] | 0;
 HEAP8[$$0162$lcssa >> 0] = HEAP8[$7 + ($126 + $149) >> 0] | 0;
 HEAP8[$$0162$lcssa + 1 >> 0] = HEAP8[$7 + ($132 + $149) >> 0] | 0;
 HEAP8[$$0162$lcssa + 2 >> 0] = HEAP8[$7 + ($134 + $149) >> 0] | 0;
 return;
}

function _arParamLoad($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $$05254 = 0, $$053 = 0, $$056 = 0, $$059 = 0, $$1 = 0, $$pre$phi64Z2D = 0, $10 = 0, $12 = 0, $14 = 0, $17 = 0, $19 = 0, $21 = 0, $22 = 0, $25 = 0, $28 = 0, $3 = 0, $30 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0, $44 = 0, $51 = 0, $52 = 0, $61 = 0.0, $8 = 0, $vararg_buffer = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer18 = 0, $vararg_buffer2 = 0, $vararg_buffer6 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $vararg_buffer18 = sp + 248 | 0;
 $vararg_buffer15 = sp + 240 | 0;
 $vararg_buffer13 = sp + 232 | 0;
 $vararg_buffer9 = sp + 224 | 0;
 $vararg_buffer6 = sp + 216 | 0;
 $vararg_buffer2 = sp + 208 | 0;
 $vararg_buffer = sp + 200 | 0;
 $3 = sp;
 $4 = sp + 16 | 0;
 do if (($0 | 0) != 0 & ($1 | 0) > 0 & ($2 | 0) != 0) {
  $8 = _fopen($0, 26308) | 0;
  if (!$8) {
   $10 = ___errno_location() | 0;
   HEAP32[$vararg_buffer >> 2] = HEAP32[$10 >> 2];
   HEAP32[$vararg_buffer + 4 >> 2] = $0;
   _arLog(0, 3, 24431, $vararg_buffer);
   $12 = ___errno_location() | 0;
   $14 = _strerror(HEAP32[$12 >> 2] | 0) | 0;
   HEAP32[$vararg_buffer2 >> 2] = 67447;
   HEAP32[$vararg_buffer2 + 4 >> 2] = $14;
   _arLog(0, 3, 25953, $vararg_buffer2);
   $$056 = -1;
   break;
  }
  _fseek($8, 0, 2) | 0;
  L6 : do if (!(_ferror($8) | 0)) {
   $22 = _ftell($8) | 0;
   _rewind($8);
   $$053 = 0;
   while (1) {
    if ($$053 >>> 0 >= 4) {
     label = 9;
     break;
    }
    $25 = HEAP32[1712 + ($$053 << 3) + 4 >> 2] | 0;
    $28 = $$053 + 1 | 0;
    if (!(($22 | 0) % ($25 | 0) | 0)) {
     $$05254 = $28;
     $30 = $25;
     break;
    } else $$053 = $28;
   }
   do if ((label | 0) == 9) if (($$053 | 0) == 4) {
    _arLog(0, 3, 24545, $vararg_buffer13);
    $$059 = -1;
    break L6;
   } else {
    $$05254 = 0;
    $30 = HEAP32[1712 + (0 << 3) + 4 >> 2] | 0;
    break;
   } while (0);
   if ((_fread($4, $30, 1, $8) | 0) != 1) {
    $33 = ___errno_location() | 0;
    HEAP32[$vararg_buffer15 >> 2] = HEAP32[$33 >> 2];
    _arLog(0, 3, 24625, $vararg_buffer15);
    $35 = ___errno_location() | 0;
    $37 = _strerror(HEAP32[$35 >> 2] | 0) | 0;
    HEAP32[$vararg_buffer18 >> 2] = 67447;
    HEAP32[$vararg_buffer18 + 4 >> 2] = $37;
    _arLog(0, 3, 25953, $vararg_buffer18);
    $$059 = -1;
    break;
   }
   $38 = $4 + 176 | 0;
   HEAP32[$38 >> 2] = $$05254;
   _byteswap($4);
   $39 = ($$05254 | 0) == 1;
   $40 = $4 + 120 | 0;
   if ($39) {
    $41 = +HEAPF64[$40 >> 3];
    $42 = $4 + 128 | 0;
    HEAPF64[$40 >> 3] = +HEAPF64[$42 >> 3];
    HEAPF64[$42 >> 3] = $41;
    $$pre$phi64Z2D = $42;
   } else $$pre$phi64Z2D = $4 + 128 | 0;
   _memcpy($2 | 0, $4 | 0, 184) | 0;
   HEAP32[$3 >> 2] = $varargs;
   $44 = $2 + 176 | 0;
   $$1 = 1;
   while (1) {
    if (($$1 | 0) >= ($1 | 0)) {
     $$059 = 0;
     break L6;
    }
    $51 = (HEAP32[$3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    $52 = HEAP32[$51 >> 2] | 0;
    HEAP32[$3 >> 2] = $51 + 4;
    HEAP32[$52 + 176 >> 2] = HEAP32[$44 >> 2];
    if ((_fread($4, HEAP32[1712 + ((HEAP32[$44 >> 2] | 0) + -1 << 3) + 4 >> 2] | 0, 1, $8) | 0) != 1) {
     $$059 = -1;
     break L6;
    }
    HEAP32[$38 >> 2] = $$05254;
    _byteswap($4);
    if ($39) {
     $61 = +HEAPF64[$40 >> 3];
     HEAPF64[$40 >> 3] = +HEAPF64[$$pre$phi64Z2D >> 3];
     HEAPF64[$$pre$phi64Z2D >> 3] = $61;
    }
    _memcpy($52 | 0, $4 | 0, 184) | 0;
    $$1 = $$1 + 1 | 0;
   }
  } else {
   $17 = ___errno_location() | 0;
   HEAP32[$vararg_buffer6 >> 2] = HEAP32[$17 >> 2];
   _arLog(0, 3, 24500, $vararg_buffer6);
   $19 = ___errno_location() | 0;
   $21 = _strerror(HEAP32[$19 >> 2] | 0) | 0;
   HEAP32[$vararg_buffer9 >> 2] = 67447;
   HEAP32[$vararg_buffer9 + 4 >> 2] = $21;
   _arLog(0, 3, 25953, $vararg_buffer9);
   $$059 = -1;
  } while (0);
  _fclose($8) | 0;
  $$056 = $$059;
 } else $$056 = -1; while (0);
 STACKTOP = sp;
 return $$056 | 0;
}

function _ar2GetTransMat_175($icpHandle, $initConv, $pos2d, $pos3d, $num, $conv, $robustMode) {
 $icpHandle = $icpHandle | 0;
 $initConv = $initConv | 0;
 $pos2d = $pos2d | 0;
 $pos3d = $pos3d | 0;
 $num = $num | 0;
 $conv = $conv | 0;
 $robustMode = $robustMode | 0;
 var $call = 0, $call3 = 0, $conv143 = 0.0, $conv148 = 0.0, $conv15 = 0.0, $conv153 = 0.0, $data = 0, $div = 0.0, $div17 = 0.0, $div19 = 0.0, $dx$0 = 0.0, $dy$0 = 0.0, $dz$0 = 0.0, $err = 0, $i$0 = 0, $i$1 = 0, $i$2 = 0, $i$3 = 0, $initMat = 0, $j$0 = 0, $j$1 = 0, $mat = 0, $worldCoord = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(224);
 $data = sp + 212 | 0;
 $initMat = sp + 96 | 0;
 $mat = sp;
 $err = sp + 192 | 0;
 $call = _malloc($num << 4) | 0;
 HEAP32[$data >> 2] = $call;
 if (!$call) {
  _arLog(0, 3, 45930, sp + 200 | 0);
  _exit(1);
 }
 $call3 = _malloc($num * 24 | 0) | 0;
 $worldCoord = $data + 4 | 0;
 HEAP32[$worldCoord >> 2] = $call3;
 if (!$call3) {
  _arLog(0, 3, 45930, sp + 208 | 0);
  _exit(1);
 }
 $dx$0 = 0.0;
 $dy$0 = 0.0;
 $dz$0 = 0.0;
 $i$0 = 0;
 while (1) {
  if (($i$0 | 0) >= ($num | 0)) break;
  $dx$0 = $dx$0 + +HEAPF32[$pos3d + ($i$0 * 12 | 0) >> 2];
  $dy$0 = $dy$0 + +HEAPF32[$pos3d + ($i$0 * 12 | 0) + 4 >> 2];
  $dz$0 = $dz$0 + +HEAPF32[$pos3d + ($i$0 * 12 | 0) + 8 >> 2];
  $i$0 = $i$0 + 1 | 0;
 }
 $conv15 = +($num | 0);
 $div = $dx$0 / $conv15;
 $div17 = $dy$0 / $conv15;
 $div19 = $dz$0 / $conv15;
 $i$1 = 0;
 while (1) {
  if (($i$1 | 0) >= ($num | 0)) break;
  HEAPF64[$call + ($i$1 << 4) >> 3] = +HEAPF32[$pos2d + ($i$1 << 3) >> 2];
  HEAPF64[$call + ($i$1 << 4) + 8 >> 3] = +HEAPF32[$pos2d + ($i$1 << 3) + 4 >> 2];
  HEAPF64[$call3 + ($i$1 * 24 | 0) >> 3] = +HEAPF32[$pos3d + ($i$1 * 12 | 0) >> 2] - $div;
  HEAPF64[$call3 + ($i$1 * 24 | 0) + 8 >> 3] = +HEAPF32[$pos3d + ($i$1 * 12 | 0) + 4 >> 2] - $div17;
  HEAPF64[$call3 + ($i$1 * 24 | 0) + 16 >> 3] = +HEAPF32[$pos3d + ($i$1 * 12 | 0) + 8 >> 2] - $div19;
  $i$1 = $i$1 + 1 | 0;
 }
 HEAP32[$data + 8 >> 2] = $num;
 $j$0 = 0;
 while (1) {
  if (($j$0 | 0) == 3) break;
  $i$2 = 0;
  while (1) {
   if (($i$2 | 0) == 3) break;
   HEAPF64[$initMat + ($j$0 << 5) + ($i$2 << 3) >> 3] = +HEAPF32[$initConv + ($j$0 << 4) + ($i$2 << 2) >> 2];
   $i$2 = $i$2 + 1 | 0;
  }
  $j$0 = $j$0 + 1 | 0;
 }
 HEAPF64[$initMat + 24 >> 3] = +HEAPF32[$initConv + 12 >> 2] + ($div * +HEAPF32[$initConv >> 2] + $div17 * +HEAPF32[$initConv + 4 >> 2] + $div19 * +HEAPF32[$initConv + 8 >> 2]);
 HEAPF64[$initMat + 56 >> 3] = +HEAPF32[$initConv + 28 >> 2] + ($div * +HEAPF32[$initConv + 16 >> 2] + $div17 * +HEAPF32[$initConv + 20 >> 2] + $div19 * +HEAPF32[$initConv + 24 >> 2]);
 HEAPF64[$initMat + 88 >> 3] = +HEAPF32[$initConv + 44 >> 2] + ($div * +HEAPF32[$initConv + 32 >> 2] + $div17 * +HEAPF32[$initConv + 36 >> 2] + $div19 * +HEAPF32[$initConv + 40 >> 2]);
 if (!$robustMode) {
  if ((_icpPoint($icpHandle, $data, $initMat, $mat, $err) | 0) < 0) HEAPF64[$err >> 3] = 1.0e8;
 } else if ((_icpPointRobust($icpHandle, $data, $initMat, $mat, $err) | 0) < 0) HEAPF64[$err >> 3] = 1.0e8;
 _free(HEAP32[$data >> 2] | 0);
 _free(HEAP32[$worldCoord >> 2] | 0);
 $j$1 = 0;
 while (1) {
  if (($j$1 | 0) == 3) break;
  $i$3 = 0;
  while (1) {
   if (($i$3 | 0) == 3) break;
   HEAPF32[$conv + ($j$1 << 4) + ($i$3 << 2) >> 2] = +HEAPF64[$mat + ($j$1 << 5) + ($i$3 << 3) >> 3];
   $i$3 = $i$3 + 1 | 0;
  }
  $j$1 = $j$1 + 1 | 0;
 }
 $conv143 = $div;
 $conv148 = $div17;
 $conv153 = $div19;
 HEAPF32[$conv + 12 >> 2] = +HEAPF64[$mat + 24 >> 3] - +HEAPF64[$mat >> 3] * $conv143 - +HEAPF64[$mat + 8 >> 3] * $conv148 - +HEAPF64[$mat + 16 >> 3] * $conv153;
 HEAPF32[$conv + 28 >> 2] = +HEAPF64[$mat + 56 >> 3] - +HEAPF64[$mat + 32 >> 3] * $conv143 - +HEAPF64[$mat + 40 >> 3] * $conv148 - +HEAPF64[$mat + 48 >> 3] * $conv153;
 HEAPF32[$conv + 44 >> 2] = +HEAPF64[$mat + 88 >> 3] - +HEAPF64[$mat + 64 >> 3] * $conv143 - +HEAPF64[$mat + 72 >> 3] * $conv148 - +HEAPF64[$mat + 80 >> 3] * $conv153;
 STACKTOP = sp;
 return +(+HEAPF64[$err >> 3]);
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseUnnamedTypeNameEPNS5_9NameStateE($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$byval_copy2 = 0, $1 = 0, $12 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 40 | 0;
 $1 = sp + 32 | 0;
 $2 = sp + 24 | 0;
 $3 = sp;
 $4 = sp + 8 | 0;
 $5 = sp + 16 | 0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($1, 55241);
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy2) | 0)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 55244);
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy2) | 0) {
   __ZN12_GLOBAL__N_116itanium_demangle9NodeArrayC2Ev($3);
   __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($4, $0 + 362 | 0, 1);
   __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 55247);
   HEAP32[$$byval_copy2 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   do if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy2) | 0)) {
    $12 = $0 + 8 | 0;
    $13 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($12) | 0;
    while (1) {
     $15 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
     HEAP32[$$byval_copy2 >> 2] = $15;
     if (!$15) {
      label = 11;
      break;
     }
     __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($12, $$byval_copy2);
     if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
      label = 10;
      break;
     }
    }
    if ((label | 0) == 10) {
     __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($3, $0, $13);
     label = 12;
     break;
    } else if ((label | 0) == 11) {
     $$4 = 0;
     break;
    }
   } else label = 12; while (0);
   if ((label | 0) == 12) {
    __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($$byval_copy2, $0, 0);
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15ClosureTypeNameEJRNS0_9NodeArrayERNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0, $3, $$byval_copy2) | 0; else $$3 = 0;
    $$4 = $$3;
   }
   __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($4);
   $$5 = $$4;
  } else $$5 = 0;
 } else {
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($$byval_copy2, $0, 0);
  if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15UnnamedTypeNameEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0, $$byval_copy2) | 0; else $$0 = 0;
  $$5 = $$0;
 }
 STACKTOP = sp;
 return $$5 | 0;
}

function _ar2Tracking2dSub($handle, $surfaceSet, $candidate, $dataPtr, $mfImage, $templ, $result) {
 $handle = $handle | 0;
 $surfaceSet = $surfaceSet | 0;
 $candidate = $candidate | 0;
 $dataPtr = $dataPtr | 0;
 $mfImage = $mfImage | 0;
 $templ = $templ | 0;
 $result = $result | 0;
 var $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $18 = 0, $2 = 0, $24 = 0, $3 = 0, $37 = 0, $40 = 0, $44 = 0, $7 = 0, $arraydecay = 0, $arraydecay40 = 0, $arraydecay67$pre$phiZ2D = 0, $bx = 0, $by = 0, $call = 0, $conv = 0.0, $cparamLT = 0, $mx = 0, $my = 0, $retval$0 = 0, $search = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $search = sp;
 $bx = sp + 28 | 0;
 $by = sp + 24 | 0;
 $0 = HEAP32[$candidate >> 2] | 0;
 $1 = HEAP32[$candidate + 4 >> 2] | 0;
 $2 = HEAP32[$candidate + 8 >> 2] | 0;
 $3 = HEAP32[$templ >> 2] | 0;
 if (!$3) {
  $call = _ar2GenTemplate(HEAP32[$handle + 28 >> 2] | 0, HEAP32[$handle + 32 >> 2] | 0) | 0;
  HEAP32[$templ >> 2] = $call;
  $11 = $call;
 } else $11 = $3;
 $cparamLT = $handle + 12 | 0;
 $arraydecay = $handle + 48 + ($0 * 48 | 0) | 0;
 $7 = HEAP32[$surfaceSet >> 2] | 0;
 if ((_ar2SetTemplateSub(HEAP32[$cparamLT >> 2] | 0, $arraydecay, HEAP32[$7 + ($0 * 112 | 0) >> 2] | 0, (HEAP32[HEAP32[$7 + ($0 * 112 | 0) + 4 >> 2] >> 2] | 0) + ($1 * 20 | 0) | 0, $2, $11) | 0) >= 0 ? ($12 = HEAP32[$templ >> 2] | 0, $13 = HEAP32[$12 + 28 >> 2] | 0, $conv = +(Math_imul($13, $13) | 0), !(+(Math_imul((HEAP32[$12 + 16 >> 2] | 0) + 1 + (HEAP32[$12 + 20 >> 2] | 0) | 0, (HEAP32[$12 + 8 >> 2] | 0) + 1 + (HEAP32[$12 + 12 >> 2] | 0) | 0) | 0) * 5.0 * 5.0 > $conv)) : 0) {
  $18 = HEAP32[$surfaceSet + 152 >> 2] | 0;
  do if (($18 | 0) != 1) {
   $24 = HEAP32[$cparamLT >> 2] | 0;
   $arraydecay40 = $handle + 528 + ($0 * 48 | 0) | 0;
   if (($18 | 0) == 2) {
    _ar2GetSearchPoint($24, $arraydecay, $arraydecay40, 0, (HEAP32[(HEAP32[HEAP32[(HEAP32[$surfaceSet >> 2] | 0) + ($0 * 112 | 0) + 4 >> 2] >> 2] | 0) + ($1 * 20 | 0) >> 2] | 0) + ($2 * 20 | 0) | 0, $search);
    $arraydecay67$pre$phiZ2D = $search;
    break;
   } else {
    _ar2GetSearchPoint($24, $arraydecay, $arraydecay40, $handle + 1008 + ($0 * 48 | 0) | 0, (HEAP32[(HEAP32[HEAP32[(HEAP32[$surfaceSet >> 2] | 0) + ($0 * 112 | 0) + 4 >> 2] >> 2] | 0) + ($1 * 20 | 0) >> 2] | 0) + ($2 * 20 | 0) | 0, $search);
    $arraydecay67$pre$phiZ2D = $search;
    break;
   }
  } else {
   _ar2GetSearchPoint(HEAP32[$cparamLT >> 2] | 0, $arraydecay, 0, 0, (HEAP32[(HEAP32[HEAP32[(HEAP32[$surfaceSet >> 2] | 0) + ($0 * 112 | 0) + 4 >> 2] >> 2] | 0) + ($1 * 20 | 0) >> 2] | 0) + ($2 * 20 | 0) | 0, $search);
   $arraydecay67$pre$phiZ2D = $search;
  } while (0);
  $37 = HEAP32[$handle + 24 >> 2] | 0;
  if ((_ar2GetBestMatching($dataPtr, $mfImage, HEAP32[$handle + 4 >> 2] | 0, HEAP32[$handle + 8 >> 2] | 0, HEAP32[$handle + 20 >> 2] | 0, HEAP32[$templ >> 2] | 0, $37, $37, $arraydecay67$pre$phiZ2D, $bx, $by, $result) | 0) >= 0) {
   HEAPF32[$result + 4 >> 2] = +(HEAP32[$bx >> 2] | 0);
   HEAPF32[$result + 8 >> 2] = +(HEAP32[$by >> 2] | 0);
   $40 = HEAP32[$surfaceSet >> 2] | 0;
   $44 = HEAP32[(HEAP32[HEAP32[$40 + ($0 * 112 | 0) + 4 >> 2] >> 2] | 0) + ($1 * 20 | 0) >> 2] | 0;
   $mx = $44 + ($2 * 20 | 0) + 8 | 0;
   $my = $44 + ($2 * 20 | 0) + 12 | 0;
   HEAPF32[$result + 12 >> 2] = +HEAPF32[$40 + ($0 * 112 | 0) + 24 >> 2] + (+HEAPF32[$40 + ($0 * 112 | 0) + 12 >> 2] * +HEAPF32[$mx >> 2] + +HEAPF32[$40 + ($0 * 112 | 0) + 16 >> 2] * +HEAPF32[$my >> 2]);
   HEAPF32[$result + 16 >> 2] = +HEAPF32[$40 + ($0 * 112 | 0) + 40 >> 2] + (+HEAPF32[$40 + ($0 * 112 | 0) + 28 >> 2] * +HEAPF32[$mx >> 2] + +HEAPF32[$40 + ($0 * 112 | 0) + 32 >> 2] * +HEAPF32[$my >> 2]);
   HEAPF32[$result + 20 >> 2] = +HEAPF32[$40 + ($0 * 112 | 0) + 56 >> 2] + (+HEAPF32[$40 + ($0 * 112 | 0) + 44 >> 2] * +HEAPF32[$mx >> 2] + +HEAPF32[$40 + ($0 * 112 | 0) + 48 >> 2] * +HEAPF32[$my >> 2]);
   $retval$0 = 0;
  } else $retval$0 = -1;
 } else $retval$0 = -1;
 STACKTOP = sp;
 return $retval$0 | 0;
}

function _minvf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0130 = 0.0, $$0131 = 0, $$0133 = 0, $$0135 = 0, $$0138 = 0, $$0142 = 0, $$0145 = 0, $$1132 = 0, $$1136 = 0, $$1139 = 0, $$1143 = 0, $$1146 = 0, $$2 = 0, $$2137 = 0, $$2140 = 0, $$2144 = 0, $$2147 = 0, $$3 = 0, $$3141 = 0, $$4 = 0, $13 = 0, $15 = 0.0, $16 = 0, $21 = 0, $22 = 0, $23 = 0, $27 = 0, $3 = 0, $32 = 0.0, $33 = 0, $40 = 0, $41 = 0.0, $42 = 0, $56 = 0, $65 = 0, $indvars$iv = 0, $indvars$iv154 = 0, $scevgep = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2e3 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2e3);
 $3 = sp;
 L1 : do if (($1 | 0) > 500) $$0 = 0; else {
  switch ($1 | 0) {
  case 0:
   {
    $$0 = 0;
    break L1;
    break;
   }
  case 1:
   {
    HEAPF32[$0 >> 2] = 1.0 / +HEAPF32[$0 >> 2];
    $$0 = $0;
    break L1;
    break;
   }
  default:
   {}
  }
  $$0135 = 0;
  while (1) {
   if (($$0135 | 0) >= ($1 | 0)) break;
   HEAP32[$3 + ($$0135 << 2) >> 2] = $$0135;
   $$0135 = $$0135 + 1 | 0;
  }
  $scevgep = $0 + ($1 + -1 << 2) | 0;
  $$1136 = 0;
  $indvars$iv = $scevgep;
  while (1) {
   if (($$1136 | 0) >= ($1 | 0)) break;
   $13 = $0 + ((Math_imul($$1136, $2) | 0) << 2) | 0;
   $$0130 = 0.0;
   $$0131 = $13;
   $$0133 = -1;
   $$0142 = $$1136;
   while (1) {
    if (($$0142 | 0) == ($1 | 0)) break;
    $15 = +Math_abs(+(+HEAPF32[$$0131 >> 2]));
    $16 = $$0130 < $15;
    $$0130 = $16 ? $15 : $$0130;
    $$0131 = $$0131 + ($2 << 2) | 0;
    $$0133 = $16 ? $$0142 : $$0133;
    $$0142 = $$0142 + 1 | 0;
   }
   if (($$0133 | 0) == -1 | $$0130 <= 1.000000013351432e-10) {
    $$0 = 0;
    break L1;
   }
   $21 = $3 + ($$0133 << 2) | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   $23 = $3 + ($$1136 << 2) | 0;
   HEAP32[$21 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$23 >> 2] = $22;
   $$0138 = 0;
   $$0145 = $13;
   $$1132 = $0 + ((Math_imul($$0133, $2) | 0) << 2) | 0;
   while (1) {
    if (($$0138 | 0) == ($1 | 0)) break;
    $27 = HEAP32[$$1132 >> 2] | 0;
    HEAP32[$$1132 >> 2] = HEAP32[$$0145 >> 2];
    HEAP32[$$0145 >> 2] = $27;
    $$0138 = $$0138 + 1 | 0;
    $$0145 = $$0145 + 4 | 0;
    $$1132 = $$1132 + 4 | 0;
   }
   $32 = +HEAPF32[$13 >> 2];
   $$1139 = 1;
   $$2 = $13;
   while (1) {
    if (($$1139 | 0) == ($1 | 0)) break;
    $33 = $$2 + 4 | 0;
    HEAPF32[$$2 >> 2] = +HEAPF32[$33 >> 2] / $32;
    $$1139 = $$1139 + 1 | 0;
    $$2 = $33;
   }
   HEAPF32[$indvars$iv >> 2] = 1.0 / $32;
   $$1143 = 0;
   $indvars$iv154 = $scevgep;
   while (1) {
    if (($$1143 | 0) == ($1 | 0)) break;
    if (($$1143 | 0) != ($$1136 | 0)) {
     $40 = $0 + ((Math_imul($$1143, $2) | 0) << 2) | 0;
     $41 = +HEAPF32[$40 >> 2];
     $$1146 = $13;
     $$2140 = 1;
     $$3 = $40;
     while (1) {
      if (($$2140 | 0) == ($1 | 0)) break;
      $42 = $$3 + 4 | 0;
      HEAPF32[$$3 >> 2] = +HEAPF32[$42 >> 2] - $41 * +HEAPF32[$$1146 >> 2];
      $$1146 = $$1146 + 4 | 0;
      $$2140 = $$2140 + 1 | 0;
      $$3 = $42;
     }
     HEAPF32[$indvars$iv154 >> 2] = -($41 * +HEAPF32[$indvars$iv >> 2]);
    }
    $$1143 = $$1143 + 1 | 0;
    $indvars$iv154 = $indvars$iv154 + ($2 << 2) | 0;
   }
   $$1136 = $$1136 + 1 | 0;
   $indvars$iv = $indvars$iv + ($2 << 2) | 0;
  }
  $$2137 = 0;
  while (1) {
   if (($$2137 | 0) >= ($1 | 0)) {
    $$0 = $0;
    break L1;
   }
   $$3141 = $$2137;
   while (1) {
    $56 = $3 + ($$3141 << 2) | 0;
    if (($$3141 | 0) >= ($1 | 0)) break;
    if ((HEAP32[$56 >> 2] | 0) == ($$2137 | 0)) break;
    $$3141 = $$3141 + 1 | 0;
   }
   HEAP32[$56 >> 2] = HEAP32[$3 + ($$2137 << 2) >> 2];
   $$2144 = 0;
   $$2147 = $0 + ($$2137 << 2) | 0;
   $$4 = $0 + ($$3141 << 2) | 0;
   while (1) {
    if (($$2144 | 0) >= ($1 | 0)) break;
    $65 = HEAP32[$$4 >> 2] | 0;
    HEAP32[$$4 >> 2] = HEAP32[$$2147 >> 2];
    HEAP32[$$2147 >> 2] = $65;
    $$2144 = $$2144 + 1 | 0;
    $$2147 = $$2147 + ($2 << 2) | 0;
    $$4 = $$4 + ($2 << 2) | 0;
   }
   $$2137 = $$2137 + 1 | 0;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEEixERSD_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$053$i = 0, $$054$i = 0, $$1$i = 0, $$155$i = 0, $$pn$i = 0, $$pre$phi$iZ2D = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $28 = 0, $3 = 0, $32 = 0, $35 = 0.0, $38 = 0.0, $4 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $6 = 0, $62 = 0, $64 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $75 = 0, $8 = 0, $83 = 0, $87 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 4 | 0;
 $3 = sp;
 $4 = sp + 16 | 0;
 HEAP32[$3 >> 2] = $1;
 $5 = HEAP32[$1 >> 2] | 0;
 $6 = $0 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = ($7 | 0) == 0;
 L1 : do if (!$8) {
  $9 = $7 + -1 | 0;
  $11 = ($9 & $7 | 0) == 0;
  if (!$11) if ($5 >>> 0 < $7 >>> 0) $17 = $5; else $17 = ($5 >>> 0) % ($7 >>> 0) | 0; else $17 = $9 & $5;
  $18 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($17 << 2) >> 2] | 0;
  if (!$18) {
   $$054$i = $17;
   label = 16;
  } else {
   $$pn$i = $18;
   while (1) {
    $$053$i = HEAP32[$$pn$i >> 2] | 0;
    if (!$$053$i) {
     $$054$i = $17;
     label = 16;
     break L1;
    }
    $22 = HEAP32[$$053$i + 4 >> 2] | 0;
    if (($22 | 0) != ($5 | 0)) {
     if (!$11) if ($22 >>> 0 < $7 >>> 0) $28 = $22; else $28 = ($22 >>> 0) % ($7 >>> 0) | 0; else $28 = $22 & $9;
     if (($28 | 0) != ($17 | 0)) {
      $$054$i = $17;
      label = 16;
      break L1;
     }
    }
    if ((HEAP32[$$053$i + 8 >> 2] | 0) == ($5 | 0)) {
     $$1$i = $$053$i;
     break;
    } else $$pn$i = $$053$i;
   }
  }
 } else {
  $$054$i = 0;
  label = 16;
 } while (0);
 if ((label | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS6_ISW_EEEEEEmOT_DpOT0_($2, $0, $5, 67436, $3, $4);
  $32 = $0 + 12 | 0;
  $35 = +(((HEAP32[$32 >> 2] | 0) + 1 | 0) >>> 0);
  $38 = +HEAPF32[$0 + 16 >> 2];
  do if ($8 | $38 * +($7 >>> 0) < $35) {
   $48 = $7 << 1 | ($7 >>> 0 < 3 | ($7 + -1 & $7 | 0) != 0) & 1;
   $51 = ~~+Math_ceil(+($35 / $38)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE6rehashEm($0, $48 >>> 0 < $51 >>> 0 ? $51 : $48);
   $53 = HEAP32[$6 >> 2] | 0;
   $54 = $53 + -1 | 0;
   if (!($54 & $53)) {
    $$0$i = $53;
    $$155$i = $54 & $5;
    break;
   }
   if ($5 >>> 0 < $53 >>> 0) {
    $$0$i = $53;
    $$155$i = $5;
   } else {
    $$0$i = $53;
    $$155$i = ($5 >>> 0) % ($53 >>> 0) | 0;
   }
  } else {
   $$0$i = $7;
   $$155$i = $$054$i;
  } while (0);
  $62 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($$155$i << 2) >> 2] | 0;
  if (!$62) {
   $64 = $0 + 8 | 0;
   HEAP32[HEAP32[$2 >> 2] >> 2] = HEAP32[$64 >> 2];
   HEAP32[$64 >> 2] = HEAP32[$2 >> 2];
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$155$i << 2) >> 2] = $64;
   $70 = HEAP32[$2 >> 2] | 0;
   $71 = HEAP32[$70 >> 2] | 0;
   if (!$71) $$pre$phi$iZ2D = $2; else {
    $74 = HEAP32[$71 + 4 >> 2] | 0;
    $75 = $$0$i + -1 | 0;
    if ($75 & $$0$i) if ($74 >>> 0 < $$0$i >>> 0) $83 = $74; else $83 = ($74 >>> 0) % ($$0$i >>> 0) | 0; else $83 = $74 & $75;
    HEAP32[(HEAP32[$0 >> 2] | 0) + ($83 << 2) >> 2] = $70;
    $$pre$phi$iZ2D = $2;
   }
  } else {
   HEAP32[HEAP32[$2 >> 2] >> 2] = HEAP32[$62 >> 2];
   HEAP32[$62 >> 2] = HEAP32[$2 >> 2];
   $$pre$phi$iZ2D = $2;
  }
  $87 = HEAP32[$$pre$phi$iZ2D >> 2] | 0;
  HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 1;
  HEAP32[$$pre$phi$iZ2D >> 2] = 0;
  $$1$i = $87;
 }
 STACKTOP = sp;
 return $$1$i + 12 | 0;
}

function __ZNSt3__213unordered_mapIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS5_EEEEEixERSC_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$053$i = 0, $$054$i = 0, $$1$i = 0, $$155$i = 0, $$pn$i = 0, $$pre$phi$iZ2D = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $28 = 0, $3 = 0, $32 = 0, $35 = 0.0, $38 = 0.0, $4 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $6 = 0, $62 = 0, $64 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $75 = 0, $8 = 0, $83 = 0, $87 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 4 | 0;
 $3 = sp;
 $4 = sp + 16 | 0;
 HEAP32[$3 >> 2] = $1;
 $5 = HEAP32[$1 >> 2] | 0;
 $6 = $0 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = ($7 | 0) == 0;
 L1 : do if (!$8) {
  $9 = $7 + -1 | 0;
  $11 = ($9 & $7 | 0) == 0;
  if (!$11) if ($5 >>> 0 < $7 >>> 0) $17 = $5; else $17 = ($5 >>> 0) % ($7 >>> 0) | 0; else $17 = $9 & $5;
  $18 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($17 << 2) >> 2] | 0;
  if (!$18) {
   $$054$i = $17;
   label = 16;
  } else {
   $$pn$i = $18;
   while (1) {
    $$053$i = HEAP32[$$pn$i >> 2] | 0;
    if (!$$053$i) {
     $$054$i = $17;
     label = 16;
     break L1;
    }
    $22 = HEAP32[$$053$i + 4 >> 2] | 0;
    if (($22 | 0) != ($5 | 0)) {
     if (!$11) if ($22 >>> 0 < $7 >>> 0) $28 = $22; else $28 = ($22 >>> 0) % ($7 >>> 0) | 0; else $28 = $22 & $9;
     if (($28 | 0) != ($17 | 0)) {
      $$054$i = $17;
      label = 16;
      break L1;
     }
    }
    if ((HEAP32[$$053$i + 8 >> 2] | 0) == ($5 | 0)) {
     $$1$i = $$053$i;
     break;
    } else $$pn$i = $$053$i;
   }
  }
 } else {
  $$054$i = 0;
  label = 16;
 } while (0);
 if ((label | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_($2, $0, $5, 67436, $3, $4);
  $32 = $0 + 12 | 0;
  $35 = +(((HEAP32[$32 >> 2] | 0) + 1 | 0) >>> 0);
  $38 = +HEAPF32[$0 + 16 >> 2];
  do if ($8 | $38 * +($7 >>> 0) < $35) {
   $48 = $7 << 1 | ($7 >>> 0 < 3 | ($7 + -1 & $7 | 0) != 0) & 1;
   $51 = ~~+Math_ceil(+($35 / $38)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE6rehashEm($0, $48 >>> 0 < $51 >>> 0 ? $51 : $48);
   $53 = HEAP32[$6 >> 2] | 0;
   $54 = $53 + -1 | 0;
   if (!($54 & $53)) {
    $$0$i = $53;
    $$155$i = $54 & $5;
    break;
   }
   if ($5 >>> 0 < $53 >>> 0) {
    $$0$i = $53;
    $$155$i = $5;
   } else {
    $$0$i = $53;
    $$155$i = ($5 >>> 0) % ($53 >>> 0) | 0;
   }
  } else {
   $$0$i = $7;
   $$155$i = $$054$i;
  } while (0);
  $62 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($$155$i << 2) >> 2] | 0;
  if (!$62) {
   $64 = $0 + 8 | 0;
   HEAP32[HEAP32[$2 >> 2] >> 2] = HEAP32[$64 >> 2];
   HEAP32[$64 >> 2] = HEAP32[$2 >> 2];
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$155$i << 2) >> 2] = $64;
   $70 = HEAP32[$2 >> 2] | 0;
   $71 = HEAP32[$70 >> 2] | 0;
   if (!$71) $$pre$phi$iZ2D = $2; else {
    $74 = HEAP32[$71 + 4 >> 2] | 0;
    $75 = $$0$i + -1 | 0;
    if ($75 & $$0$i) if ($74 >>> 0 < $$0$i >>> 0) $83 = $74; else $83 = ($74 >>> 0) % ($$0$i >>> 0) | 0; else $83 = $74 & $75;
    HEAP32[(HEAP32[$0 >> 2] | 0) + ($83 << 2) >> 2] = $70;
    $$pre$phi$iZ2D = $2;
   }
  } else {
   HEAP32[HEAP32[$2 >> 2] >> 2] = HEAP32[$62 >> 2];
   HEAP32[$62 >> 2] = HEAP32[$2 >> 2];
   $$pre$phi$iZ2D = $2;
  }
  $87 = HEAP32[$$pre$phi$iZ2D >> 2] | 0;
  HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 1;
  HEAP32[$$pre$phi$iZ2D >> 2] = 0;
  $$1$i = $87;
 }
 STACKTOP = sp;
 return $$1$i + 12 | 0;
}

function _minv($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0128 = 0.0, $$0129 = 0, $$0131 = 0, $$0133 = 0, $$0136 = 0, $$0140 = 0, $$0143 = 0, $$1130 = 0, $$1134 = 0, $$1137 = 0, $$1141 = 0, $$1144 = 0, $$2 = 0, $$2135 = 0, $$2138 = 0, $$2142 = 0, $$2145 = 0, $$3 = 0, $$3139 = 0, $$4 = 0, $13 = 0, $15 = 0.0, $16 = 0, $21 = 0, $22 = 0, $23 = 0, $27 = 0.0, $3 = 0, $32 = 0.0, $33 = 0, $40 = 0, $41 = 0.0, $42 = 0, $56 = 0, $65 = 0.0, $indvars$iv = 0, $indvars$iv152 = 0, $scevgep = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2e3 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2e3);
 $3 = sp;
 L1 : do if (($1 | 0) > 500) $$0 = 0; else {
  switch ($1 | 0) {
  case 0:
   {
    $$0 = 0;
    break L1;
    break;
   }
  case 1:
   {
    HEAPF64[$0 >> 3] = 1.0 / +HEAPF64[$0 >> 3];
    $$0 = $0;
    break L1;
    break;
   }
  default:
   {}
  }
  $$0133 = 0;
  while (1) {
   if (($$0133 | 0) >= ($1 | 0)) break;
   HEAP32[$3 + ($$0133 << 2) >> 2] = $$0133;
   $$0133 = $$0133 + 1 | 0;
  }
  $scevgep = $0 + ($1 + -1 << 3) | 0;
  $$1134 = 0;
  $indvars$iv = $scevgep;
  while (1) {
   if (($$1134 | 0) >= ($1 | 0)) break;
   $13 = $0 + ((Math_imul($$1134, $2) | 0) << 3) | 0;
   $$0128 = 0.0;
   $$0129 = $13;
   $$0131 = -1;
   $$0140 = $$1134;
   while (1) {
    if (($$0140 | 0) == ($1 | 0)) break;
    $15 = +Math_abs(+(+HEAPF64[$$0129 >> 3]));
    $16 = $$0128 < $15;
    $$0128 = $16 ? $15 : $$0128;
    $$0129 = $$0129 + ($2 << 3) | 0;
    $$0131 = $16 ? $$0140 : $$0131;
    $$0140 = $$0140 + 1 | 0;
   }
   if (($$0131 | 0) == -1 | $$0128 <= 1.0e-10) {
    $$0 = 0;
    break L1;
   }
   $21 = $3 + ($$0131 << 2) | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   $23 = $3 + ($$1134 << 2) | 0;
   HEAP32[$21 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$23 >> 2] = $22;
   $$0136 = 0;
   $$0143 = $13;
   $$1130 = $0 + ((Math_imul($$0131, $2) | 0) << 3) | 0;
   while (1) {
    if (($$0136 | 0) == ($1 | 0)) break;
    $27 = +HEAPF64[$$1130 >> 3];
    HEAPF64[$$1130 >> 3] = +HEAPF64[$$0143 >> 3];
    HEAPF64[$$0143 >> 3] = $27;
    $$0136 = $$0136 + 1 | 0;
    $$0143 = $$0143 + 8 | 0;
    $$1130 = $$1130 + 8 | 0;
   }
   $32 = +HEAPF64[$13 >> 3];
   $$1137 = 1;
   $$2 = $13;
   while (1) {
    if (($$1137 | 0) == ($1 | 0)) break;
    $33 = $$2 + 8 | 0;
    HEAPF64[$$2 >> 3] = +HEAPF64[$33 >> 3] / $32;
    $$1137 = $$1137 + 1 | 0;
    $$2 = $33;
   }
   HEAPF64[$indvars$iv >> 3] = 1.0 / $32;
   $$1141 = 0;
   $indvars$iv152 = $scevgep;
   while (1) {
    if (($$1141 | 0) == ($1 | 0)) break;
    if (($$1141 | 0) != ($$1134 | 0)) {
     $40 = $0 + ((Math_imul($$1141, $2) | 0) << 3) | 0;
     $41 = +HEAPF64[$40 >> 3];
     $$1144 = $13;
     $$2138 = 1;
     $$3 = $40;
     while (1) {
      if (($$2138 | 0) == ($1 | 0)) break;
      $42 = $$3 + 8 | 0;
      HEAPF64[$$3 >> 3] = +HEAPF64[$42 >> 3] - $41 * +HEAPF64[$$1144 >> 3];
      $$1144 = $$1144 + 8 | 0;
      $$2138 = $$2138 + 1 | 0;
      $$3 = $42;
     }
     HEAPF64[$indvars$iv152 >> 3] = -($41 * +HEAPF64[$indvars$iv >> 3]);
    }
    $$1141 = $$1141 + 1 | 0;
    $indvars$iv152 = $indvars$iv152 + ($2 << 3) | 0;
   }
   $$1134 = $$1134 + 1 | 0;
   $indvars$iv = $indvars$iv + ($2 << 3) | 0;
  }
  $$2135 = 0;
  while (1) {
   if (($$2135 | 0) >= ($1 | 0)) {
    $$0 = $0;
    break L1;
   }
   $$3139 = $$2135;
   while (1) {
    $56 = $3 + ($$3139 << 2) | 0;
    if (($$3139 | 0) >= ($1 | 0)) break;
    if ((HEAP32[$56 >> 2] | 0) == ($$2135 | 0)) break;
    $$3139 = $$3139 + 1 | 0;
   }
   HEAP32[$56 >> 2] = HEAP32[$3 + ($$2135 << 2) >> 2];
   $$2142 = 0;
   $$2145 = $0 + ($$2135 << 3) | 0;
   $$4 = $0 + ($$3139 << 3) | 0;
   while (1) {
    if (($$2142 | 0) >= ($1 | 0)) break;
    $65 = +HEAPF64[$$4 >> 3];
    HEAPF64[$$4 >> 3] = +HEAPF64[$$2145 >> 3];
    HEAPF64[$$2145 >> 3] = $65;
    $$2142 = $$2142 + 1 | 0;
    $$2145 = $$2145 + ($2 << 3) | 0;
    $$4 = $$4 + ($2 << 3) | 0;
   }
   $$2135 = $$2135 + 1 | 0;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseVectorTypeEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$byval_copy = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $18 = 0, $2 = 0, $22 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 16 | 0;
 $1 = sp + 8 | 0;
 $2 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($1, 55972);
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 do if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy) | 0) {
  if (((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) + -49 & 255) < 9) {
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($$byval_copy, $0, 0);
   do if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) {
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 112) | 0) {
     $$1 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15PixelVectorTypeEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0, $$byval_copy) | 0;
     break;
    }
    $10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
    HEAP32[$2 >> 2] = $10;
    if (!$10) $$0 = 0; else $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10VectorTypeEJRPNS0_4NodeERNS_10StringViewEEEES9_DpOT0_($0, $2, $$byval_copy) | 0;
    $$1 = $$0;
   } else $$1 = 0; while (0);
   $$5 = $$1;
   break;
  }
  if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) {
   $22 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$$byval_copy >> 2] = $22;
   if (!$22) $$4 = 0; else {
    __ZN12_GLOBAL__N_110StringViewC2Ev($2);
    $$4 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10VectorTypeEJRPNS0_4NodeENS_10StringViewEEEES9_DpOT0_($0, $$byval_copy, $2) | 0;
   }
   $$5 = $$4;
   break;
  }
  $14 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
  $15 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($14) | 0;
  HEAP32[$$byval_copy >> 2] = $15;
  if (($15 | 0) != 0 ? __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0 : 0) {
   $18 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($14) | 0;
   HEAP32[$2 >> 2] = $18;
   if (!$18) $$2 = 0; else $$2 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10VectorTypeEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $2, $$byval_copy) | 0;
   $$3 = $$2;
  } else $$3 = 0;
  $$5 = $$3;
 } else $$5 = 0; while (0);
 STACKTOP = sp;
 return $$5 | 0;
}

function _ar2ReadImageSetOld($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$089 = 0, $$091 = 0, $$1 = 0, $$190 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$7 = 0, $1 = 0, $12 = 0, $17 = 0, $3 = 0, $51 = 0, $57 = 0, $6 = 0, $60 = 0, $67 = 0, $68 = 0, $75 = 0, $9 = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $1 = _malloc(8) | 0;
 if (!$1) {
  _arLog(0, 3, 45930, sp);
  _exit(1);
 }
 $3 = $1 + 4 | 0;
 L4 : do if ((_fread($3, 4, 1, $0) | 0) == 1 ? ($6 = HEAP32[$3 >> 2] | 0, ($6 | 0) >= 1) : 0) {
  $9 = _malloc($6 << 2) | 0;
  HEAP32[$1 >> 2] = $9;
  if (!$9) {
   _arLog(0, 3, 45930, $vararg_buffer3);
   _exit(1);
  }
  $$089 = 0;
  while (1) {
   if (($$089 | 0) >= ($6 | 0)) break;
   $12 = _malloc(16) | 0;
   HEAP32[$9 + ($$089 << 2) >> 2] = $12;
   if (!$12) {
    label = 12;
    break;
   } else $$089 = $$089 + 1 | 0;
  }
  if ((label | 0) == 12) {
   _arLog(0, 3, 45930, $vararg_buffer5);
   _exit(1);
  }
  $$190 = 0;
  while (1) {
   if (($$190 | 0) >= ($6 | 0)) {
    label = 44;
    break;
   }
   $17 = $9 + ($$190 << 2) | 0;
   if ((_fread((HEAP32[$17 >> 2] | 0) + 4 | 0, 4, 1, $0) | 0) != 1) {
    label = 15;
    break;
   }
   if ((_fread((HEAP32[$17 >> 2] | 0) + 8 | 0, 4, 1, $0) | 0) != 1) {
    label = 22;
    break;
   }
   if ((_fread((HEAP32[$17 >> 2] | 0) + 12 | 0, 4, 1, $0) | 0) != 1) {
    label = 29;
    break;
   }
   $51 = HEAP32[$17 >> 2] | 0;
   $57 = _malloc(Math_imul(HEAP32[$51 + 8 >> 2] | 0, HEAP32[$51 + 4 >> 2] | 0) | 0) | 0;
   HEAP32[HEAP32[$17 >> 2] >> 2] = $57;
   if (!$57) {
    label = 36;
    break;
   }
   $60 = HEAP32[$17 >> 2] | 0;
   $67 = _fread(HEAP32[$60 >> 2] | 0, 1, Math_imul(HEAP32[$60 + 8 >> 2] | 0, HEAP32[$60 + 4 >> 2] | 0) | 0, $0) | 0;
   $68 = HEAP32[$17 >> 2] | 0;
   $75 = $$190 + 1 | 0;
   if (($67 | 0) == (Math_imul(HEAP32[$68 + 8 >> 2] | 0, HEAP32[$68 + 4 >> 2] | 0) | 0)) $$190 = $75; else {
    label = 38;
    break;
   }
  }
  L23 : do if ((label | 0) == 15) {
   $$0 = 0;
   while (1) {
    if (($$0 | 0) == ($$190 | 0)) break;
    _free(HEAP32[HEAP32[$9 + ($$0 << 2) >> 2] >> 2] | 0);
    $$0 = $$0 + 1 | 0;
   }
   $$1 = 0;
   while (1) {
    if (($$1 | 0) == ($6 | 0)) break L23;
    _free(HEAP32[$9 + ($$1 << 2) >> 2] | 0);
    $$1 = $$1 + 1 | 0;
   }
  } else if ((label | 0) == 22) {
   $$2 = 0;
   while (1) {
    if (($$2 | 0) == ($$190 | 0)) break;
    _free(HEAP32[HEAP32[$9 + ($$2 << 2) >> 2] >> 2] | 0);
    $$2 = $$2 + 1 | 0;
   }
   $$3 = 0;
   while (1) {
    if (($$3 | 0) == ($6 | 0)) break L23;
    _free(HEAP32[$9 + ($$3 << 2) >> 2] | 0);
    $$3 = $$3 + 1 | 0;
   }
  } else if ((label | 0) == 29) {
   $$4 = 0;
   while (1) {
    if (($$4 | 0) == ($$190 | 0)) break;
    _free(HEAP32[HEAP32[$9 + ($$4 << 2) >> 2] >> 2] | 0);
    $$4 = $$4 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) == ($6 | 0)) break L23;
    _free(HEAP32[$9 + ($$5 << 2) >> 2] | 0);
    $$5 = $$5 + 1 | 0;
   }
  } else if ((label | 0) == 36) {
   _arLog(0, 3, 45930, $vararg_buffer7);
   _exit(1);
  } else if ((label | 0) == 38) {
   $$6 = 0;
   while (1) {
    if (($$6 | 0) == ($75 | 0)) break;
    _free(HEAP32[HEAP32[$9 + ($$6 << 2) >> 2] >> 2] | 0);
    $$6 = $$6 + 1 | 0;
   }
   $$7 = 0;
   while (1) {
    if (($$7 | 0) == ($6 | 0)) break L23;
    _free(HEAP32[$9 + ($$7 << 2) >> 2] | 0);
    $$7 = $$7 + 1 | 0;
   }
  } else if ((label | 0) == 44) {
   _fclose($0) | 0;
   $$091 = $1;
   break L4;
  } while (0);
  _free($9);
  label = 46;
 } else label = 5; while (0);
 if ((label | 0) == 5) {
  _arLog(0, 3, 25715, $vararg_buffer1);
  label = 46;
 }
 if ((label | 0) == 46) {
  _free($1);
  _fclose($0) | 0;
  $$091 = 0;
 }
 STACKTOP = sp;
 return $$091 | 0;
}

function _arParamDecompMat($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0117 = 0, $$1 = 0, $$1118 = 0, $$2 = 0, $$2119 = 0, $$3 = 0, $$3120 = 0, $101 = 0.0, $102 = 0.0, $113 = 0.0, $117 = 0.0, $131 = 0, $22 = 0.0, $24 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0, $32 = 0.0, $33 = 0, $35 = 0.0, $36 = 0, $41 = 0, $43 = 0.0, $45 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0, $52 = 0.0, $55 = 0.0, $58 = 0.0, $59 = 0.0, $60 = 0, $62 = 0, $65 = 0, $68 = 0, $72 = 0.0, $74 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0, $82 = 0.0, $83 = 0, $89 = 0.0, $95 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $3 = sp;
 L1 : do if (!(+HEAPF64[$0 + 88 >> 3] >= 0.0)) {
  $$1 = 0;
  while (1) {
   if (($$1 | 0) == 3) break L1;
   $$1118 = 0;
   while (1) {
    if (($$1118 | 0) == 4) break;
    HEAPF64[$3 + ($$1 << 5) + ($$1118 << 3) >> 3] = -+HEAPF64[$0 + ($$1 << 5) + ($$1118 << 3) >> 3];
    $$1118 = $$1118 + 1 | 0;
   }
   $$1 = $$1 + 1 | 0;
  }
 } else {
  $$0 = 0;
  while (1) {
   if (($$0 | 0) == 3) break L1;
   $$0117 = 0;
   while (1) {
    if (($$0117 | 0) == 4) break;
    HEAPF64[$3 + ($$0 << 5) + ($$0117 << 3) >> 3] = +HEAPF64[$0 + ($$0 << 5) + ($$0117 << 3) >> 3];
    $$0117 = $$0117 + 1 | 0;
   }
   $$0 = $$0 + 1 | 0;
  }
 } while (0);
 $$2 = 0;
 while (1) {
  if (($$2 | 0) == 3) break;
  $$2119 = 0;
  while (1) {
   if (($$2119 | 0) == 4) break;
   HEAPF64[$1 + ($$2 << 5) + ($$2119 << 3) >> 3] = 0.0;
   $$2119 = $$2119 + 1 | 0;
  }
  $$2 = $$2 + 1 | 0;
 }
 $22 = +HEAPF64[$3 + 64 >> 3];
 $24 = +HEAPF64[$3 + 72 >> 3];
 $26 = +HEAPF64[$3 + 80 >> 3];
 $27 = +_norm($22, $24, $26);
 $28 = $1 + 80 | 0;
 HEAPF64[$28 >> 3] = $27;
 $29 = $22 / $27;
 $30 = $2 + 64 | 0;
 HEAPF64[$30 >> 3] = $29;
 $32 = $24 / +HEAPF64[$28 >> 3];
 $33 = $2 + 72 | 0;
 HEAPF64[$33 >> 3] = $32;
 $35 = $26 / +HEAPF64[$28 >> 3];
 $36 = $2 + 80 | 0;
 HEAPF64[$36 >> 3] = $35;
 $41 = $2 + 88 | 0;
 HEAPF64[$41 >> 3] = +HEAPF64[$3 + 88 >> 3] / +HEAPF64[$28 >> 3];
 $43 = +HEAPF64[$3 + 32 >> 3];
 $45 = +HEAPF64[$3 + 40 >> 3];
 $47 = +HEAPF64[$3 + 48 >> 3];
 $48 = +_dot($29, $32, $35, $43, $45, $47);
 $49 = $1 + 48 | 0;
 HEAPF64[$49 >> 3] = $48;
 $52 = $43 - $48 * +HEAPF64[$30 >> 3];
 $55 = $45 - $48 * +HEAPF64[$33 >> 3];
 $58 = $47 - $48 * +HEAPF64[$36 >> 3];
 $59 = +_norm($52, $55, $58);
 $60 = $1 + 40 | 0;
 HEAPF64[$60 >> 3] = $59;
 $62 = $2 + 32 | 0;
 HEAPF64[$62 >> 3] = $52 / $59;
 $65 = $2 + 40 | 0;
 HEAPF64[$65 >> 3] = $55 / +HEAPF64[$60 >> 3];
 $68 = $2 + 48 | 0;
 HEAPF64[$68 >> 3] = $58 / +HEAPF64[$60 >> 3];
 $72 = +HEAPF64[$3 >> 3];
 $74 = +HEAPF64[$3 + 8 >> 3];
 $76 = +HEAPF64[$3 + 16 >> 3];
 $77 = +_dot(+HEAPF64[$30 >> 3], +HEAPF64[$33 >> 3], +HEAPF64[$36 >> 3], $72, $74, $76);
 $78 = $1 + 16 | 0;
 HEAPF64[$78 >> 3] = $77;
 $82 = +_dot(+HEAPF64[$62 >> 3], +HEAPF64[$65 >> 3], +HEAPF64[$68 >> 3], $72, $74, $76);
 $83 = $1 + 8 | 0;
 HEAPF64[$83 >> 3] = $82;
 $89 = $72 - $82 * +HEAPF64[$62 >> 3] - $77 * +HEAPF64[$30 >> 3];
 $95 = $74 - $82 * +HEAPF64[$65 >> 3] - $77 * +HEAPF64[$33 >> 3];
 $101 = $76 - $82 * +HEAPF64[$68 >> 3] - $77 * +HEAPF64[$36 >> 3];
 $102 = +_norm($89, $95, $101);
 HEAPF64[$1 >> 3] = $102;
 HEAPF64[$2 >> 3] = $89 / $102;
 HEAPF64[$2 + 8 >> 3] = $95 / +HEAPF64[$1 >> 3];
 HEAPF64[$2 + 16 >> 3] = $101 / +HEAPF64[$1 >> 3];
 $113 = +HEAPF64[$41 >> 3];
 $117 = (+HEAPF64[$3 + 56 >> 3] - +HEAPF64[$49 >> 3] * $113) / +HEAPF64[$60 >> 3];
 HEAPF64[$2 + 56 >> 3] = $117;
 HEAPF64[$2 + 24 >> 3] = (+HEAPF64[$3 + 24 >> 3] - $117 * +HEAPF64[$83 >> 3] - $113 * +HEAPF64[$78 >> 3]) / +HEAPF64[$1 >> 3];
 $$3 = 0;
 while (1) {
  if (($$3 | 0) == 3) break;
  $$3120 = 0;
  while (1) {
   if (($$3120 | 0) == 3) break;
   $131 = $1 + ($$3 << 5) + ($$3120 << 3) | 0;
   HEAPF64[$131 >> 3] = +HEAPF64[$131 >> 3] / +HEAPF64[$28 >> 3];
   $$3120 = $$3120 + 1 | 0;
  }
  $$3 = $$3 + 1 | 0;
 }
 STACKTOP = sp;
 return 0;
}

function __ZNSt3__213unordered_mapIiNS_6vectorIiNS_9allocatorIiEEEENS_4hashIiEENS_8equal_toIiEENS2_INS_4pairIKiS4_EEEEEixERSA_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$053$i = 0, $$054$i = 0, $$1$i = 0, $$155$i = 0, $$pn$i = 0, $$pre$phi$iZ2D = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $28 = 0, $3 = 0, $32 = 0, $35 = 0.0, $38 = 0.0, $4 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $6 = 0, $62 = 0, $64 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $75 = 0, $8 = 0, $83 = 0, $87 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 4 | 0;
 $3 = sp;
 $4 = sp + 16 | 0;
 HEAP32[$3 >> 2] = $1;
 $5 = HEAP32[$1 >> 2] | 0;
 $6 = $0 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = ($7 | 0) == 0;
 L1 : do if (!$8) {
  $9 = $7 + -1 | 0;
  $11 = ($9 & $7 | 0) == 0;
  if (!$11) if ($5 >>> 0 < $7 >>> 0) $17 = $5; else $17 = ($5 >>> 0) % ($7 >>> 0) | 0; else $17 = $9 & $5;
  $18 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($17 << 2) >> 2] | 0;
  if (!$18) {
   $$054$i = $17;
   label = 16;
  } else {
   $$pn$i = $18;
   while (1) {
    $$053$i = HEAP32[$$pn$i >> 2] | 0;
    if (!$$053$i) {
     $$054$i = $17;
     label = 16;
     break L1;
    }
    $22 = HEAP32[$$053$i + 4 >> 2] | 0;
    if (($22 | 0) != ($5 | 0)) {
     if (!$11) if ($22 >>> 0 < $7 >>> 0) $28 = $22; else $28 = ($22 >>> 0) % ($7 >>> 0) | 0; else $28 = $22 & $9;
     if (($28 | 0) != ($17 | 0)) {
      $$054$i = $17;
      label = 16;
      break L1;
     }
    }
    if ((HEAP32[$$053$i + 8 >> 2] | 0) == ($5 | 0)) {
     $$1$i = $$053$i;
     break;
    } else $$pn$i = $$053$i;
   }
  }
 } else {
  $$054$i = 0;
  label = 16;
 } while (0);
 if ((label | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_($2, $0, $5, 67436, $3, $4);
  $32 = $0 + 12 | 0;
  $35 = +(((HEAP32[$32 >> 2] | 0) + 1 | 0) >>> 0);
  $38 = +HEAPF32[$0 + 16 >> 2];
  do if ($8 | $38 * +($7 >>> 0) < $35) {
   $48 = $7 << 1 | ($7 >>> 0 < 3 | ($7 + -1 & $7 | 0) != 0) & 1;
   $51 = ~~+Math_ceil(+($35 / $38)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE6rehashEm($0, $48 >>> 0 < $51 >>> 0 ? $51 : $48);
   $53 = HEAP32[$6 >> 2] | 0;
   $54 = $53 + -1 | 0;
   if (!($54 & $53)) {
    $$0$i = $53;
    $$155$i = $54 & $5;
    break;
   }
   if ($5 >>> 0 < $53 >>> 0) {
    $$0$i = $53;
    $$155$i = $5;
   } else {
    $$0$i = $53;
    $$155$i = ($5 >>> 0) % ($53 >>> 0) | 0;
   }
  } else {
   $$0$i = $7;
   $$155$i = $$054$i;
  } while (0);
  $62 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($$155$i << 2) >> 2] | 0;
  if (!$62) {
   $64 = $0 + 8 | 0;
   HEAP32[HEAP32[$2 >> 2] >> 2] = HEAP32[$64 >> 2];
   HEAP32[$64 >> 2] = HEAP32[$2 >> 2];
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$155$i << 2) >> 2] = $64;
   $70 = HEAP32[$2 >> 2] | 0;
   $71 = HEAP32[$70 >> 2] | 0;
   if (!$71) $$pre$phi$iZ2D = $2; else {
    $74 = HEAP32[$71 + 4 >> 2] | 0;
    $75 = $$0$i + -1 | 0;
    if ($75 & $$0$i) if ($74 >>> 0 < $$0$i >>> 0) $83 = $74; else $83 = ($74 >>> 0) % ($$0$i >>> 0) | 0; else $83 = $74 & $75;
    HEAP32[(HEAP32[$0 >> 2] | 0) + ($83 << 2) >> 2] = $70;
    $$pre$phi$iZ2D = $2;
   }
  } else {
   HEAP32[HEAP32[$2 >> 2] >> 2] = HEAP32[$62 >> 2];
   HEAP32[$62 >> 2] = HEAP32[$2 >> 2];
   $$pre$phi$iZ2D = $2;
  }
  $87 = HEAP32[$$pre$phi$iZ2D >> 2] | 0;
  HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 1;
  HEAP32[$$pre$phi$iZ2D >> 2] = 0;
  $$1$i = $87;
 }
 STACKTOP = sp;
 return $$1$i + 12 | 0;
}

function __ZN6vision10DoGPyramid7computeEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$017 = 0, $12 = 0, $17 = 0, $2 = 0, $21 = 0, $29 = 0, $34 = 0, $38 = 0, $46 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $63 = 0, $64 = 0, $65 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 if ((HEAP32[$0 + 4 >> 2] | 0) == (HEAP32[$0 >> 2] | 0)) {
  $12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 26907) | 0, 26748) | 0, 39072) | 0, 72) | 0, 39079) | 0, 26949) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 127]($17, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  _abort();
 }
 if ((__ZNK6vision25GaussianScaleSpacePyramid10numOctavesEv($1) | 0) <= 0) {
  $29 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 26990) | 0, 26748) | 0, 39072) | 0, 73) | 0, 39079) | 0, 27039) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $29 + (HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $34 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $38 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$34 >> 2] | 0) + 28 >> 2] & 127]($34, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($29, $38) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($29) | 0;
  _abort();
 }
 if ($1 | 0 ? ___dynamic_cast($1, 13184, 13192, 0) | 0 : 0) {
  $56 = $0 + 12 | 0;
  $57 = $0 + 16 | 0;
  $$017 = 0;
  while (1) {
   if ($$017 >>> 0 >= (HEAP32[$56 >> 2] | 0) >>> 0) break;
   $$0 = 0;
   while (1) {
    if ($$0 >>> 0 >= (HEAP32[$57 >> 2] | 0) >>> 0) break;
    $63 = __ZN6vision10DoGPyramid3getEmm($0, $$017, $$0) | 0;
    $64 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm($1, $$017, $$0) | 0;
    $65 = $$0 + 1 | 0;
    __ZN6vision10DoGPyramid25difference_image_binomialERNS_5ImageERKS1_S4_(0, $63, $64, __ZNK6vision25GaussianScaleSpacePyramid3getEmm($1, $$017, $65) | 0);
    $$0 = $65;
   }
   $$017 = $$017 + 1 | 0;
  }
  STACKTOP = sp;
  return;
 }
 $46 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 27075) | 0, 26748) | 0, 39072) | 0, 74) | 0, 39079) | 0, 27147) | 0;
 __ZNKSt3__28ios_base6getlocEv($2, $46 + (HEAP32[(HEAP32[$46 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $51 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
 $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$51 >> 2] | 0) + 28 >> 2] & 127]($51, 10) | 0;
 __ZNSt3__26localeD2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($46, $55) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($46) | 0;
 _abort();
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $11 = 0, $12 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $22 = 0, $27 = 0, $28 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp + 4 | 0;
 $3 = sp;
 __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 76) | 0;
 switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24) {
 case 78:
  {
   $$4 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0, $1) | 0;
   break;
  }
 case 90:
  {
   $$4 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E14parseLocalNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0, $1) | 0;
   break;
  }
 case 83:
  {
   if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 == 116) label = 13; else {
    $11 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
    $12 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseSubstitutionEv($11) | 0;
    HEAP32[$2 >> 2] = $12;
    if (($12 | 0) != 0 ? (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 == 73 : 0) {
     $16 = ($1 | 0) != 0;
     $17 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($11, $16) | 0;
     HEAP32[$3 >> 2] = $17;
     if (!$17) $$0 = 0; else {
      if ($16) HEAP8[$1 + 1 >> 0] = 1;
      $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $2, $3) | 0;
     }
     $$1 = $$0;
    } else $$1 = 0;
    $$4 = $$1;
   }
   break;
  }
 default:
  label = 13;
 }
 if ((label | 0) == 13) {
  $21 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
  $22 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseUnscopedNameEPNS5_9NameStateE($21, $1) | 0;
  HEAP32[$2 >> 2] = $22;
  if ($22) if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 == 73) {
   __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($0 + 148 | 0, $2);
   $27 = ($1 | 0) != 0;
   $28 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($21, $27) | 0;
   HEAP32[$3 >> 2] = $28;
   if (!$28) $$2 = 0; else {
    if ($27) HEAP8[$1 + 1 >> 0] = 1;
    $$2 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $2, $3) | 0;
   }
   $$3 = $$2;
  } else $$3 = $22; else $$3 = 0;
  $$4 = $$3;
 }
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$8 = 0, $$pre$phiZ2D = 0, $$sink = 0, $10 = 0, $104 = 0, $106 = 0, $11 = 0, $110 = 0, $113 = 0, $134 = 0, $24 = 0, $25 = 0, $27 = 0, $29 = 0, $30 = 0, $42 = 0, $48 = 0, $57 = 0, $59 = 0, $66 = 0, $75 = 0, $85 = 0, $87 = 0, $89 = 0, $95 = 0, $98 = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 if ($7 & 4) {
  $10 = HEAP32[$2 >> 2] | 0;
  $11 = $1;
  if (((($11 - $10 | 0) > 2 ? (HEAP8[$10 >> 0] | 0) == -17 : 0) ? (HEAP8[$10 + 1 >> 0] | 0) == -69 : 0) ? (HEAP8[$10 + 2 >> 0] | 0) == -65 : 0) {
   HEAP32[$2 >> 2] = $10 + 3;
   $$pre$phiZ2D = $11;
  } else $$pre$phiZ2D = $11;
 } else $$pre$phiZ2D = $1;
 $24 = $4;
 L9 : while (1) {
  $25 = HEAP32[$2 >> 2] | 0;
  if ($25 >>> 0 >= $1 >>> 0) {
   $$8 = 0;
   break;
  }
  $27 = HEAP32[$5 >> 2] | 0;
  if ($27 >>> 0 >= $4 >>> 0) {
   $$8 = 1;
   break;
  }
  $29 = HEAP8[$25 >> 0] | 0;
  $30 = $29 & 255;
  if ($30 >>> 0 > $6 >>> 0) {
   $$8 = 2;
   break;
  }
  do if ($29 << 24 >> 24 > -1) {
   HEAP16[$27 >> 1] = $29 & 255;
   $$sink = $25 + 1 | 0;
  } else {
   if (($29 & 255) < 194) {
    $$8 = 2;
    break L9;
   }
   if (($29 & 255) < 224) {
    if (($$pre$phiZ2D - $25 | 0) < 2) {
     $$8 = 1;
     break L9;
    }
    $42 = HEAPU8[$25 + 1 >> 0] | 0;
    if (($42 & 192 | 0) != 128) {
     $$8 = 2;
     break L9;
    }
    $48 = $42 & 63 | $30 << 6 & 1984;
    if ($48 >>> 0 > $6 >>> 0) {
     $$8 = 2;
     break L9;
    }
    HEAP16[$27 >> 1] = $48;
    $$sink = $25 + 2 | 0;
    break;
   }
   if (($29 & 255) < 240) {
    if (($$pre$phiZ2D - $25 | 0) < 3) {
     $$8 = 1;
     break L9;
    }
    $57 = HEAP8[$25 + 1 >> 0] | 0;
    $59 = HEAP8[$25 + 2 >> 0] | 0;
    switch ($29 << 24 >> 24) {
    case -32:
     {
      if (($57 & -32) << 24 >> 24 != -96) {
       $$8 = 2;
       break L9;
      }
      break;
     }
    case -19:
     {
      if (($57 & -32) << 24 >> 24 != -128) {
       $$8 = 2;
       break L9;
      }
      break;
     }
    default:
     if (($57 & -64) << 24 >> 24 != -128) {
      $$8 = 2;
      break L9;
     }
    }
    $66 = $59 & 255;
    if (($66 & 192 | 0) != 128) {
     $$8 = 2;
     break L9;
    }
    $75 = ($57 & 63) << 6 | $30 << 12 | $66 & 63;
    if (($75 & 65535) >>> 0 > $6 >>> 0) {
     $$8 = 2;
     break L9;
    }
    HEAP16[$27 >> 1] = $75;
    $$sink = $25 + 3 | 0;
    break;
   }
   if (($29 & 255) >= 245) {
    $$8 = 2;
    break L9;
   }
   if (($$pre$phiZ2D - $25 | 0) < 4) {
    $$8 = 1;
    break L9;
   }
   $85 = HEAP8[$25 + 1 >> 0] | 0;
   $87 = HEAP8[$25 + 2 >> 0] | 0;
   $89 = HEAP8[$25 + 3 >> 0] | 0;
   switch ($29 << 24 >> 24) {
   case -16:
    {
     if (($85 + 112 & 255) >= 48) {
      $$8 = 2;
      break L9;
     }
     break;
    }
   case -12:
    {
     if (($85 & -16) << 24 >> 24 != -128) {
      $$8 = 2;
      break L9;
     }
     break;
    }
   default:
    if (($85 & -64) << 24 >> 24 != -128) {
     $$8 = 2;
     break L9;
    }
   }
   $95 = $87 & 255;
   if (($95 & 192 | 0) != 128) {
    $$8 = 2;
    break L9;
   }
   $98 = $89 & 255;
   if (($98 & 192 | 0) != 128) {
    $$8 = 2;
    break L9;
   }
   if (($24 - $27 | 0) < 4) {
    $$8 = 1;
    break L9;
   }
   $104 = $30 & 7;
   $106 = $85 & 255;
   $110 = $95 << 6;
   $113 = $98 & 63;
   if (($106 << 12 & 258048 | $104 << 18 | $110 & 4032 | $113) >>> 0 > $6 >>> 0) {
    $$8 = 2;
    break L9;
   }
   HEAP16[$27 >> 1] = $106 << 2 & 60 | $95 >>> 4 & 3 | (($106 >>> 4 & 3 | $104 << 2) << 6) + 16320 | 55296;
   $134 = $27 + 2 | 0;
   HEAP32[$5 >> 2] = $134;
   HEAP16[$134 >> 1] = $113 | $110 & 960 | 56320;
   $$sink = (HEAP32[$2 >> 2] | 0) + 4 | 0;
  } while (0);
  HEAP32[$2 >> 2] = $$sink;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2;
 }
 return $$8 | 0;
}

function __ZN6vision11PartialSortIfiEENSt3__24pairIT_T0_EEPS5_ii($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$040 = 0, $$042 = 0, $$044 = 0, $$1 = 0, $$145 = 0, $$2 = 0, $$246 = 0, $11 = 0, $16 = 0, $20 = 0, $27 = 0, $32 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0.0, $43 = 0, $44 = 0, $45 = 0.0, $52 = 0, $53 = 0.0, $61 = 0, $62 = 0, $63 = 0, $70 = 0, $75 = 0, $76 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 if (($2 | 0) <= 0) {
  $11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37491) | 0, 37520) | 0, 39072) | 0, 82) | 0, 39079) | 0, 37593) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $11 + (HEAP32[(HEAP32[$11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 127]($16, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($11, $20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  _abort();
 }
 if (($3 | 0) <= 0) {
  $27 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37612) | 0, 37520) | 0, 39072) | 0, 83) | 0, 39079) | 0, 37641) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $27 + (HEAP32[(HEAP32[$27 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $32 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 66512) | 0;
  $36 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 28 >> 2] & 127]($32, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($27, $36) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($27) | 0;
  _abort();
 }
 $37 = $3 + -1 | 0;
 $39 = $1 + ($37 << 3) | 0;
 $40 = $1 + ($37 << 3) + 4 | 0;
 $$040 = $2 + -1 | 0;
 $$042 = 0;
 while (1) {
  if (($$042 | 0) >= ($$040 | 0)) break;
  $42 = +HEAPF32[$39 >> 2];
  $43 = HEAP32[$40 >> 2] | 0;
  $$0 = $$042;
  $$044 = $$040;
  while (1) {
   $$1 = $$0;
   while (1) {
    $44 = $1 + ($$1 << 3) | 0;
    $45 = +HEAPF32[$44 >> 2];
    if (!($45 < $42)) {
     if ($42 < $45) break;
     if ((HEAP32[$1 + ($$1 << 3) + 4 >> 2] | 0) >= ($43 | 0)) break;
    }
    $$1 = $$1 + 1 | 0;
   }
   $$145 = $$044;
   while (1) {
    $52 = $1 + ($$145 << 3) | 0;
    $53 = +HEAPF32[$52 >> 2];
    if (!($42 < $53)) {
     if ($53 < $42) break;
     if (($43 | 0) >= (HEAP32[$1 + ($$145 << 3) + 4 >> 2] | 0)) break;
    }
    $$145 = $$145 + -1 | 0;
   }
   if (($$1 | 0) > ($$145 | 0)) {
    $$2 = $$1;
    $$246 = $$145;
   } else {
    HEAPF32[$44 >> 2] = $53;
    HEAPF32[$52 >> 2] = $45;
    $61 = $1 + ($$1 << 3) + 4 | 0;
    $62 = $1 + ($$145 << 3) + 4 | 0;
    $63 = HEAP32[$61 >> 2] | 0;
    HEAP32[$61 >> 2] = HEAP32[$62 >> 2];
    HEAP32[$62 >> 2] = $63;
    $$2 = $$1 + 1 | 0;
    $$246 = $$145 + -1 | 0;
   }
   if (($$2 | 0) > ($$246 | 0)) break; else {
    $$0 = $$2;
    $$044 = $$246;
   }
  }
  $$040 = ($$2 | 0) < ($3 | 0) ? $$040 : $$246;
  $$042 = ($$246 | 0) < ($37 | 0) ? $$2 : $$042;
 }
 $70 = $39;
 $75 = HEAP32[$70 + 4 >> 2] | 0;
 $76 = $0;
 HEAP32[$76 >> 2] = HEAP32[$70 >> 2];
 HEAP32[$76 + 4 >> 2] = $75;
 STACKTOP = sp;
 return;
}

function _ar2ReadImageSet($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$079 = 0, $$080 = 0, $$1 = 0, $1 = 0, $10 = 0, $13 = 0, $15 = 0, $16 = 0, $18 = 0, $20 = 0, $30 = 0, $4 = 0, $43 = 0, $50 = 0, $53 = 0, $6 = 0, $8 = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer12 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer19 = 0, $vararg_buffer23 = 0, $vararg_buffer4 = 0, $vararg_buffer8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $vararg_buffer23 = sp + 72 | 0;
 $vararg_buffer19 = sp + 64 | 0;
 $vararg_buffer17 = sp + 56 | 0;
 $vararg_buffer15 = sp + 48 | 0;
 $vararg_buffer12 = sp + 40 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer8 = sp + 24 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $1 = sp + 80 | 0;
 $4 = _malloc((_strlen($0) | 0) + 6 | 0) | 0;
 if (!$4) {
  _arLog(0, 3, 45930, sp);
  _exit(1);
 }
 HEAP32[$vararg_buffer1 >> 2] = $0;
 HEAP32[$vararg_buffer1 + 4 >> 2] = 25661;
 _sprintf($4, 25656, $vararg_buffer1) | 0;
 $6 = _fopen($4, 26308) | 0;
 _free($4);
 L4 : do if (!$6) {
  HEAP32[$vararg_buffer4 >> 2] = $0;
  HEAP32[$vararg_buffer4 + 4 >> 2] = 25661;
  _arLog(0, 3, 25667, $vararg_buffer4);
  $$0 = 0;
 } else {
  $8 = _malloc(8) | 0;
  if (!$8) {
   _arLog(0, 3, 45930, $vararg_buffer8);
   _exit(1);
  }
  $10 = $8 + 4 | 0;
  if ((_fread($10, 4, 1, $6) | 0) == 1 ? ($13 = HEAP32[$10 >> 2] | 0, ($13 | 0) >= 1) : 0) {
   HEAP32[$vararg_buffer12 >> 2] = $13;
   _arLog(0, 1, 25740, $vararg_buffer12);
   $15 = $13 << 2;
   $16 = _malloc($15) | 0;
   HEAP32[$8 >> 2] = $16;
   if (!$16) {
    _arLog(0, 3, 45930, $vararg_buffer15);
    _exit(1);
   }
   $18 = _malloc(16) | 0;
   HEAP32[$16 >> 2] = $18;
   if (!$18) {
    _arLog(0, 3, 45930, $vararg_buffer17);
    _exit(1);
   }
   $20 = _ar2ReadJpegImage2($6) | 0;
   if (!$20) {
    HEAP32[$vararg_buffer19 >> 2] = $0;
    HEAP32[$vararg_buffer19 + 4 >> 2] = 25661;
    _arLog(0, 2, 25770, $vararg_buffer19);
    _free(HEAP32[$16 >> 2] | 0);
    _free($16);
    _free($8);
    _rewind($6);
    $$0 = _ar2ReadImageSetOld($6) | 0;
    break;
   }
   if ((HEAP32[$20 + 4 >> 2] | 0) != 1) {
    HEAP32[$vararg_buffer23 >> 2] = $0;
    HEAP32[$vararg_buffer23 + 4 >> 2] = 25661;
    _arLog(0, 2, 25770, $vararg_buffer23);
    _free(HEAP32[$16 >> 2] | 0);
    _free($16);
    _free($8);
    _free($20);
    _fclose($6) | 0;
    $$0 = 0;
    break;
   }
   $30 = HEAP32[$16 >> 2] | 0;
   HEAP32[$30 + 4 >> 2] = HEAP32[$20 + 8 >> 2];
   HEAP32[$30 + 8 >> 2] = HEAP32[$20 + 12 >> 2];
   HEAP32[$30 + 12 >> 2] = HEAP32[$20 + 16 >> 2];
   HEAP32[$30 >> 2] = HEAP32[$20 >> 2];
   _free($20);
   _fseek($6, 4 - $15 | 0, 2) | 0;
   $$079 = 1;
   while (1) {
    if (($$079 | 0) >= ($13 | 0)) {
     label = 29;
     break;
    }
    if ((_fread($1, 4, 1, $6) | 0) != 1) {
     label = 21;
     break;
    }
    $50 = _ar2GenImageLayer2(HEAP32[$16 >> 2] | 0, +HEAPF32[$1 >> 2]) | 0;
    HEAP32[$16 + ($$079 << 2) >> 2] = $50;
    if (!$50) {
     label = 25;
     break;
    }
    $$079 = $$079 + 1 | 0;
   }
   L30 : do if ((label | 0) == 21) {
    $$080 = 0;
    while (1) {
     if (($$080 | 0) == ($$079 | 0)) break L30;
     $43 = $16 + ($$080 << 2) | 0;
     _free(HEAP32[HEAP32[$43 >> 2] >> 2] | 0);
     _free(HEAP32[$43 >> 2] | 0);
     $$080 = $$080 + 1 | 0;
    }
   } else if ((label | 0) == 25) {
    $$1 = 0;
    while (1) {
     if (($$1 | 0) == ($$079 | 0)) break L30;
     $53 = $16 + ($$1 << 2) | 0;
     _free(HEAP32[HEAP32[$53 >> 2] >> 2] | 0);
     _free(HEAP32[$53 >> 2] | 0);
     $$1 = $$1 + 1 | 0;
    }
   } else if ((label | 0) == 29) {
    _fclose($6) | 0;
    $$0 = $8;
    break L4;
   } while (0);
   _free($16);
  } else _arLog(0, 3, 25715, $vararg_buffer10);
  _free($8);
  _fclose($6) | 0;
  $$0 = 0;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseQualifiedTypeEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$byval_copy = 0, $1 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy = sp + 48 | 0;
 $1 = sp + 40 | 0;
 $2 = sp + 32 | 0;
 $3 = sp;
 $4 = sp + 20 | 0;
 $5 = sp + 8 | 0;
 if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 85) | 0) {
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseBareSourceNameEv($1, $0);
  do if (__ZNK12_GLOBAL__N_110StringView5emptyEv($1) | 0) $$3 = 0; else {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 56126);
   HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
   if (!(__ZNK12_GLOBAL__N_110StringView10startsWithES0_($1, $$byval_copy) | 0)) {
    $18 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseQualifiedTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
    HEAP32[$$byval_copy >> 2] = $18;
    if (!$18) $$2 = 0; else $$2 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_17VendorExtQualTypeEJRPNS0_4NodeERNS_10StringViewEEEES9_DpOT0_($0, $$byval_copy, $1) | 0;
    $$3 = $$2;
    break;
   }
   __ZNK12_GLOBAL__N_110StringView9dropFrontEm($$byval_copy, $1, 9);
   __ZN12_GLOBAL__N_110StringViewC2Ev($3);
   __ZN12_GLOBAL__N_114SwapAndRestoreIPKcEC2ERS2_S2_($4, $0, __ZNK12_GLOBAL__N_110StringView5beginEv($$byval_copy) | 0);
   __ZN12_GLOBAL__N_114SwapAndRestoreIPKcEC2ERS2_S2_($5, $0 + 4 | 0, __ZNK12_GLOBAL__N_110StringView3endEv($$byval_copy) | 0);
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseBareSourceNameEv($3, $0);
   __ZN12_GLOBAL__N_114SwapAndRestoreIPKcED2Ev($5);
   __ZN12_GLOBAL__N_114SwapAndRestoreIPKcED2Ev($4);
   if (__ZNK12_GLOBAL__N_110StringView5emptyEv($3) | 0) $$1 = 0; else {
    $14 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseQualifiedTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
    HEAP32[$4 >> 2] = $14;
    if (!$14) $$0 = 0; else $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13ObjCProtoNameEJRPNS0_4NodeERNS_10StringViewEEEES9_DpOT0_($0, $4, $3) | 0;
    $$1 = $$0;
   }
   $$3 = $$1;
  } while (0);
  $$5 = $$3;
 } else {
  $21 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCVQualifiersEv($0) | 0;
  HEAP32[$$byval_copy >> 2] = $21;
  $23 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
  HEAP32[$1 >> 2] = $23;
  if ($23) if (!$21) $$4 = $23; else {
   $26 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8QualTypeEJRPNS0_4NodeERNS0_10QualifiersEEEES9_DpOT0_($0, $1, $$byval_copy) | 0;
   HEAP32[$1 >> 2] = $26;
   $$4 = $26;
  } else $$4 = 0;
  $$5 = $$4;
 }
 STACKTOP = sp;
 return $$5 | 0;
}

function _start_pass_1_quant($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$014$i = 0, $$02425$i$i = 0, $$026$i$i = 0, $$02831$i = 0, $$02932$i = 0, $$036 = 0, $$1$i = 0, $$phi$trans$insert = 0, $$pre$phi40Z2D = 0, $$pre$phiZ2D = 0, $100 = 0, $15 = 0, $16 = 0, $2 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $37 = 0, $40 = 0, $44 = 0, $46 = 0, $51 = 0, $52 = 0, $59 = 0, $65 = 0, $71 = 0, $74 = 0, $75 = 0, $78 = 0, $82 = 0, $85 = 0, $89 = 0, $91 = 0, $97 = 0, label = 0;
 $2 = $0 + 484 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 HEAP32[$0 + 136 >> 2] = HEAP32[$3 + 16 >> 2];
 HEAP32[$0 + 132 >> 2] = HEAP32[$3 + 20 >> 2];
 switch (HEAP32[$0 + 88 >> 2] | 0) {
 case 0:
  {
   $15 = $3 + 4 | 0;
   if ((HEAP32[$0 + 120 >> 2] | 0) == 3) {
    HEAP32[$15 >> 2] = 22;
    return;
   } else {
    HEAP32[$15 >> 2] = 23;
    return;
   }
   break;
  }
 case 1:
  {
   $16 = $0 + 120 | 0;
   HEAP32[$3 + 4 >> 2] = (HEAP32[$16 >> 2] | 0) == 3 ? 24 : 25;
   HEAP32[$3 + 48 >> 2] = 0;
   if (!(HEAP32[$3 + 28 >> 2] | 0)) _create_colorindex($0);
   if (HEAP32[$3 + 52 >> 2] | 0) return;
   $27 = HEAP32[$2 >> 2] | 0;
   $28 = HEAP32[$16 >> 2] | 0;
   if (($28 | 0) <= 0) return;
   $30 = $0 + 4 | 0;
   $$02932$i = 0;
   $100 = $28;
   while (1) {
    $32 = HEAP32[$27 + 32 + ($$02932$i << 2) >> 2] | 0;
    L22 : do if ($$02932$i) {
     $$02831$i = 0;
     while (1) {
      if (($32 | 0) == (HEAP32[$27 + 32 + ($$02831$i << 2) >> 2] | 0)) break;
      $37 = $$02831$i + 1 | 0;
      if ($37 >>> 0 < $$02932$i >>> 0) $$02831$i = $37; else {
       label = 15;
       break L22;
      }
     }
     $40 = HEAP32[$27 + 52 + ($$02831$i << 2) >> 2] | 0;
     if ($40) {
      $$1$i = $40;
      $65 = $100;
     } else label = 15;
    } else label = 15; while (0);
    if ((label | 0) == 15) {
     label = 0;
     $44 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$30 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
     $46 = ($32 << 9) + -512 | 0;
     $$026$i$i = 0;
     do {
      $$02425$i$i = 0;
      do {
       $51 = 255 - ((HEAPU8[5440 + ($$026$i$i << 4) + $$02425$i$i >> 0] | 0) << 1) | 0;
       $52 = $51 * 255 | 0;
       if (($51 | 0) < 0) $59 = 0 - ((0 - $52 | 0) / ($46 | 0) | 0) | 0; else $59 = ($52 | 0) / ($46 | 0) | 0;
       HEAP32[$44 + ($$026$i$i << 6) + ($$02425$i$i << 2) >> 2] = $59;
       $$02425$i$i = $$02425$i$i + 1 | 0;
      } while (($$02425$i$i | 0) != 16);
      $$026$i$i = $$026$i$i + 1 | 0;
     } while (($$026$i$i | 0) != 16);
     $$1$i = $44;
     $65 = HEAP32[$16 >> 2] | 0;
    }
    HEAP32[$27 + 52 + ($$02932$i << 2) >> 2] = $$1$i;
    $$02932$i = $$02932$i + 1 | 0;
    if (($$02932$i | 0) >= ($65 | 0)) break; else $100 = $65;
   }
   return;
  }
 case 2:
  {
   HEAP32[$3 + 4 >> 2] = 26;
   HEAP32[$3 + 84 >> 2] = 0;
   if (!(HEAP32[$3 + 68 >> 2] | 0)) {
    $71 = $0 + 112 | 0;
    $74 = (HEAP32[$71 >> 2] << 1) + 4 | 0;
    $75 = $0 + 120 | 0;
    if ((HEAP32[$75 >> 2] | 0) <= 0) return;
    $78 = $0 + 4 | 0;
    $$014$i = 0;
    do {
     $82 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$78 >> 2] | 0) + 4 >> 2] & 63]($0, 1, $74) | 0;
     HEAP32[$3 + 68 + ($$014$i << 2) >> 2] = $82;
     $$014$i = $$014$i + 1 | 0;
     $85 = HEAP32[$75 >> 2] | 0;
    } while (($$014$i | 0) < ($85 | 0));
    $$pre$phi40Z2D = $75;
    $$pre$phiZ2D = $71;
    $91 = $85;
   } else {
    $$phi$trans$insert = $0 + 120 | 0;
    $$pre$phi40Z2D = $$phi$trans$insert;
    $$pre$phiZ2D = $0 + 112 | 0;
    $91 = HEAP32[$$phi$trans$insert >> 2] | 0;
   }
   $89 = (HEAP32[$$pre$phiZ2D >> 2] << 1) + 4 | 0;
   if (($91 | 0) <= 0) return;
   $$036 = 0;
   do {
    _memset(HEAP32[$3 + 68 + ($$036 << 2) >> 2] | 0, 0, $89 | 0) | 0;
    $$036 = $$036 + 1 | 0;
   } while (($$036 | 0) < (HEAP32[$$pre$phi40Z2D >> 2] | 0));
   return;
  }
 default:
  {
   $97 = HEAP32[$0 >> 2] | 0;
   HEAP32[$97 + 20 >> 2] = 49;
   FUNCTION_TABLE_vi[HEAP32[$97 >> 2] & 255]($0);
   return;
  }
 }
}

function _ar2ReadMarkerSet($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$056 = 0, $$057 = 0, $$058 = 0, $12 = 0, $15 = 0, $18 = 0, $21 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $44 = 0, $5 = 0, $6 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer15 = 0, $vararg_buffer2 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1088);
 $vararg_buffer15 = sp + 1072 | 0;
 $vararg_buffer12 = sp + 1064 | 0;
 $vararg_buffer9 = sp + 1056 | 0;
 $vararg_buffer7 = sp + 1048 | 0;
 $vararg_buffer4 = sp + 1040 | 0;
 $vararg_buffer2 = sp + 1032 | 0;
 $vararg_buffer = sp + 1024 | 0;
 $3 = sp + 768 | 0;
 $4 = sp + 512 | 0;
 $5 = sp;
 HEAP32[$vararg_buffer >> 2] = $0;
 HEAP32[$vararg_buffer + 4 >> 2] = $1;
 _sprintf($5, 26699, $vararg_buffer) | 0;
 $6 = _fopen($5, 25925) | 0;
 if (!$6) $$058 = 0; else {
  $8 = _malloc(8) | 0;
  if (!$8) {
   _arLog(0, 3, 45930, $vararg_buffer2);
   _exit(1);
  }
  L6 : do if (_get_buff_345($3, $6) | 0) {
   $12 = $8 + 4 | 0;
   HEAP32[$vararg_buffer4 >> 2] = $12;
   if ((_sscanf($3, 25959, $vararg_buffer4) | 0) != 1) {
    _free($8);
    $$057 = 0;
    break;
   }
   $15 = HEAP32[$12 >> 2] | 0;
   if (($15 | 0) < 1) {
    _free($8);
    $$057 = 0;
    break;
   }
   $18 = _malloc($15 * 56 | 0) | 0;
   HEAP32[$8 >> 2] = $18;
   if (!$18) {
    _arLog(0, 3, 45930, $vararg_buffer7);
    _exit(1);
   }
   $$056 = 0;
   $21 = $15;
   L18 : while (1) {
    if (($$056 | 0) >= ($21 | 0)) {
     $$057 = $8;
     break L6;
    }
    if (!(_get_buff_345($3, $6) | 0)) {
     label = 15;
     break;
    }
    HEAP32[$vararg_buffer9 >> 2] = $4;
    if ((_sscanf($3, 25986, $vararg_buffer9) | 0) != 1) {
     label = 17;
     break;
    }
    $28 = _arPattLoad($2, $4) | 0;
    $29 = HEAP32[$8 >> 2] | 0;
    HEAP32[$29 + ($$056 * 56 | 0) + 4 >> 2] = $28;
    if (($28 | 0) < 0) {
     label = 19;
     break;
    }
    if (!(_get_buff_345($3, $6) | 0)) {
     label = 21;
     break;
    }
    HEAP32[$vararg_buffer12 >> 2] = (HEAP32[$8 >> 2] | 0) + ($$056 * 56 | 0);
    if ((_sscanf($3, 25887, $vararg_buffer12) | 0) != 1) {
     label = 24;
     break;
    }
    $$0 = 0;
    while (1) {
     if ($$0 >>> 0 >= 3) break;
     if (!(_get_buff_345($3, $6) | 0)) {
      label = 27;
      break L18;
     }
     $44 = HEAP32[$8 >> 2] | 0;
     HEAP32[$vararg_buffer15 >> 2] = $44 + ($$056 * 56 | 0) + 8 + ($$0 << 4);
     HEAP32[$vararg_buffer15 + 4 >> 2] = $44 + ($$056 * 56 | 0) + 8 + ($$0 << 4) + 4;
     HEAP32[$vararg_buffer15 + 8 >> 2] = $44 + ($$056 * 56 | 0) + 8 + ($$0 << 4) + 8;
     HEAP32[$vararg_buffer15 + 12 >> 2] = $44 + ($$056 * 56 | 0) + 8 + ($$0 << 4) + 12;
     if ((_sscanf($3, 26152, $vararg_buffer15) | 0) == 4) $$0 = $$0 + 1 | 0; else {
      label = 29;
      break L18;
     }
    }
    $$056 = $$056 + 1 | 0;
    $21 = HEAP32[$12 >> 2] | 0;
   }
   if ((label | 0) == 15) {
    _free(HEAP32[$8 >> 2] | 0);
    _free($8);
    $$057 = 0;
    break;
   } else if ((label | 0) == 17) {
    _free(HEAP32[$8 >> 2] | 0);
    _free($8);
    $$057 = 0;
    break;
   } else if ((label | 0) == 19) {
    _free($29);
    _free($8);
    $$057 = 0;
    break;
   } else if ((label | 0) == 21) {
    _free(HEAP32[$8 >> 2] | 0);
    _free($8);
    $$057 = 0;
    break;
   } else if ((label | 0) == 24) {
    _free(HEAP32[$8 >> 2] | 0);
    _free($8);
    $$057 = 0;
    break;
   } else if ((label | 0) == 27) {
    _free(HEAP32[$8 >> 2] | 0);
    _free($8);
    $$057 = 0;
    break;
   } else if ((label | 0) == 29) {
    _free(HEAP32[$8 >> 2] | 0);
    _free($8);
    $$057 = 0;
    break;
   }
  } else {
   _free($8);
   $$057 = 0;
  } while (0);
  _fclose($6) | 0;
  $$058 = $$057;
 }
 STACKTOP = sp;
 return $$058 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseUnqualifiedNameEPNS5_9NameStateE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$118 = 0, $$11823 = 0, $$2 = 0, $$byval_copy = 0, $$pre$phi26Z2D = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 8 | 0;
 $2 = sp;
 $3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0;
 do if ($3 << 24 >> 24 != 85) {
  if (($3 + -49 & 255) < 9) {
   $$118 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseSourceNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   label = 12;
   break;
  }
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 55180);
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy) | 0)) {
   $$118 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseOperatorNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0, $1) | 0;
   label = 12;
   break;
  }
  $11 = $0 + 8 | 0;
  $12 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($11) | 0;
  while (1) {
   $13 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
   $14 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseSourceNameEPNS5_9NameStateE($13) | 0;
   HEAP32[$$byval_copy >> 2] = $14;
   if (!$14) {
    label = 10;
    break;
   }
   __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($11, $$byval_copy);
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
    label = 9;
    break;
   }
  }
  if ((label | 0) == 9) {
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($$byval_copy, $0, $12);
   $$11823 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_21StructuredBindingNameEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0, $$byval_copy) | 0;
   $$pre$phi26Z2D = $13;
   label = 14;
   break;
  } else if ((label | 0) == 10) {
   $$2 = 0;
   break;
  }
 } else {
  $$118 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseUnnamedTypeNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
  label = 12;
 } while (0);
 if ((label | 0) == 12) if (!$$118) $$2 = 0; else {
  $$11823 = $$118;
  $$pre$phi26Z2D = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
  label = 14;
 }
 if ((label | 0) == 14) $$2 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E12parseAbiTagsEPNS0_4NodeE($$pre$phi26Z2D, $$11823) | 0;
 STACKTOP = sp;
 return $$2 | 0;
}

function _kpmLoadRefDataSet($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$071 = 0, $$1 = 0, $11 = 0, $13 = 0, $16 = 0, $19 = 0, $22 = 0, $3 = 0, $44 = 0, $47 = 0, $51 = 0, $52 = 0, $55 = 0, $6 = 0, $64 = 0, $66 = 0, $68 = 0, $75 = 0, $77 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $vararg_buffer13 = sp + 56 | 0;
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $3 = sp + 60 | 0;
 HEAP8[$3 >> 0] = HEAP8[26308] | 0;
 HEAP8[$3 + 1 >> 0] = HEAP8[26309] | 0;
 HEAP8[$3 + 2 >> 0] = HEAP8[26310] | 0;
 L1 : do if (($0 | 0) != 0 & ($2 | 0) != 0) {
  $6 = _kpmFopen($0, $1, $3) | 0;
  if (!$6) {
   $8 = ($1 | 0) != 0;
   HEAP32[$vararg_buffer1 >> 2] = $0;
   HEAP32[$vararg_buffer1 + 4 >> 2] = $8 ? 53642 : 67447;
   HEAP32[$vararg_buffer1 + 8 >> 2] = $8 ? $1 : 67447;
   _arLog(0, 3, 26362, $vararg_buffer1);
   $$0 = -1;
   break;
  }
  $11 = _calloc(1, 16) | 0;
  if (!$11) {
   _arLog(0, 3, 45930, $vararg_buffer5);
   _exit(1);
  }
  $13 = $11 + 4 | 0;
  L9 : do if ((_fread($13, 4, 1, $6) | 0) == 1 ? ($16 = HEAP32[$13 >> 2] | 0, ($16 | 0) >= 1) : 0) {
   $19 = _malloc($16 * 132 | 0) | 0;
   HEAP32[$11 >> 2] = $19;
   if (!$19) {
    _arLog(0, 3, 45930, $vararg_buffer7);
    _exit(1);
   }
   $$071 = 0;
   $22 = $16;
   while (1) {
    if (($$071 | 0) >= ($22 | 0)) break;
    if ((_fread((HEAP32[$11 >> 2] | 0) + ($$071 * 132 | 0) | 0, 8, 1, $6) | 0) != 1) break L9;
    if ((_fread((HEAP32[$11 >> 2] | 0) + ($$071 * 132 | 0) + 8 | 0, 8, 1, $6) | 0) != 1) break L9;
    if ((_fread((HEAP32[$11 >> 2] | 0) + ($$071 * 132 | 0) + 16 | 0, 108, 1, $6) | 0) != 1) break L9;
    if ((_fread((HEAP32[$11 >> 2] | 0) + ($$071 * 132 | 0) + 124 | 0, 4, 1, $6) | 0) != 1) break L9;
    if ((_fread((HEAP32[$11 >> 2] | 0) + ($$071 * 132 | 0) + 128 | 0, 4, 1, $6) | 0) != 1) break L9;
    $$071 = $$071 + 1 | 0;
    $22 = HEAP32[$13 >> 2] | 0;
   }
   $44 = $11 + 12 | 0;
   if ((_fread($44, 4, 1, $6) | 0) == 1) {
    $47 = HEAP32[$44 >> 2] | 0;
    if (($47 | 0) < 1) {
     HEAP32[$11 + 8 >> 2] = 0;
     break;
    }
    $51 = _malloc($47 * 12 | 0) | 0;
    $52 = $11 + 8 | 0;
    HEAP32[$52 >> 2] = $51;
    if (!$51) {
     _arLog(0, 3, 45930, $vararg_buffer9);
     _exit(1);
    }
    $$1 = 0;
    $55 = $47;
    while (1) {
     if (($$1 | 0) >= ($55 | 0)) {
      label = 32;
      break;
     }
     if ((_fread((HEAP32[$52 >> 2] | 0) + ($$1 * 12 | 0) + 8 | 0, 4, 1, $6) | 0) != 1) break L9;
     if ((_fread((HEAP32[$52 >> 2] | 0) + ($$1 * 12 | 0) + 4 | 0, 4, 1, $6) | 0) != 1) break L9;
     $64 = HEAP32[$52 >> 2] | 0;
     $66 = HEAP32[$64 + ($$1 * 12 | 0) + 4 >> 2] | 0;
     $68 = _malloc($66 * 12 | 0) | 0;
     HEAP32[$64 + ($$1 * 12 | 0) >> 2] = $68;
     if (!$68) {
      label = 29;
      break;
     }
     if ((_fread($68, 12, $66, $6) | 0) != ($66 | 0)) break L9;
     $$1 = $$1 + 1 | 0;
     $55 = HEAP32[$44 >> 2] | 0;
    }
    if ((label | 0) == 29) {
     _arLog(0, 3, 45930, $vararg_buffer11);
     _exit(1);
    } else if ((label | 0) == 32) {
     HEAP32[$2 >> 2] = $11;
     _fclose($6) | 0;
     $$0 = 0;
     break L1;
    }
   }
  } while (0);
  _arLog(0, 3, 26429, $vararg_buffer13);
  $75 = HEAP32[$11 + 8 >> 2] | 0;
  if ($75 | 0) _free($75);
  $77 = HEAP32[$11 >> 2] | 0;
  if ($77 | 0) _free($77);
  _free($11);
  _fclose($6) | 0;
  $$0 = -1;
 } else {
  _arLog(0, 3, 26311, $vararg_buffer);
  $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseTemplateArgEv($0) {
 $0 = $0 | 0;
 var $$5 = 0, $1 = 0, $12 = 0, $13 = 0, $16 = 0, $24 = 0, $26 = 0, $7 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 L1 : do switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 | 0) {
 case 88:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $7 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   if (!$7) $$5 = 0; else {
    $9 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0;
    STACKTOP = sp;
    return ($9 ? $7 : 0) | 0;
   }
   break;
  }
 case 74:
  {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
   $12 = $0 + 8 | 0;
   $13 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($12) | 0;
   while (1) {
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
     label = 9;
     break;
    }
    $16 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseTemplateArgEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
    HEAP32[$1 >> 2] = $16;
    if (!$16) {
     label = 8;
     break;
    }
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($12, $1);
   }
   if ((label | 0) == 8) {
    $$5 = 0;
    break L1;
   } else if ((label | 0) == 9) {
    __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($1, $0, $13);
    $$5 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20TemplateArgumentPackEJRNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0, $1) | 0;
    break L1;
   }
   break;
  }
 case 76:
  {
   if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0) << 24 >> 24 != 90) {
    $$5 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseExprPrimaryEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
    break L1;
   }
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
   $24 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   if (!$24) $$5 = 0; else {
    $26 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0;
    $$5 = $26 ? $24 : 0;
   }
   break;
  }
 default:
  $$5 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
 } while (0);
 STACKTOP = sp;
 return $$5 | 0;
}

function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $26 = 0, $37 = 0, $39 = 0, $40 = 0, $45 = 0, $48 = 0, $62 = 0, $7 = 0, $77 = 0, $8 = 0, $81 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(432);
 $$byval_copy = sp + 424 | 0;
 $7 = sp;
 $8 = sp + 416 | 0;
 $9 = sp + 408 | 0;
 $10 = sp + 400 | 0;
 $11 = sp + 428 | 0;
 $12 = sp + 404 | 0;
 HEAP32[$8 >> 2] = $7;
 HEAP32[$8 + 4 >> 2] = 214;
 __ZNKSt3__28ios_base6getlocEv($10, $4);
 $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 66544) | 0;
 HEAP8[$11 >> 0] = 0;
 $17 = HEAP32[$2 >> 2] | 0;
 HEAP32[$12 >> 2] = $17;
 $19 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 $21 = $17;
 if (__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($1, $$byval_copy, $3, $10, $19, $5, $11, $16, $8, $9, $7 + 400 | 0) | 0) {
  $23 = $6 + 8 + 3 | 0;
  if ((HEAP8[$23 >> 0] | 0) < 0) {
   $26 = HEAP32[$6 >> 2] | 0;
   HEAP32[$$byval_copy >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($26, $$byval_copy);
   HEAP32[$6 + 4 >> 2] = 0;
  } else {
   HEAP32[$$byval_copy >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($6, $$byval_copy);
   HEAP8[$23 >> 0] = 0;
  }
  if (HEAP8[$11 >> 0] | 0) __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($6, FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 44 >> 2] & 127]($16, 45) | 0);
  $37 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 44 >> 2] & 127]($16, 48) | 0;
  $39 = HEAP32[$9 >> 2] | 0;
  $40 = $39 + -4 | 0;
  $$0 = HEAP32[$8 >> 2] | 0;
  while (1) {
   if ($$0 >>> 0 >= $40 >>> 0) break;
   if ((HEAP32[$$0 >> 2] | 0) != ($37 | 0)) break;
   $$0 = $$0 + 4 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_($6, $$0, $39) | 0;
 }
 $45 = HEAP32[$1 >> 2] | 0;
 do if ($45) {
  $48 = HEAP32[$45 + 12 >> 2] | 0;
  if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $81 = 1;
   break;
  } else {
   $81 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } else $81 = 1; while (0);
 do if ($17) {
  $62 = HEAP32[$21 + 12 >> 2] | 0;
  if (($62 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$17 >> 2] | 0) + 36 >> 2] & 127]($21) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$62 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($81) break; else {
   label = 27;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 25;
   break;
  }
 } else label = 25; while (0);
 if ((label | 0) == 25 ? $81 : 0) label = 27;
 if ((label | 0) == 27) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__26localeD2Ev($10);
 $77 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($77 | 0) FUNCTION_TABLE_vi[HEAP32[$8 + 4 >> 2] & 255]($77);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $22 = 0, $25 = 0, $36 = 0, $38 = 0, $39 = 0, $44 = 0, $47 = 0, $61 = 0, $7 = 0, $76 = 0, $8 = 0, $80 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 $$byval_copy = sp + 120 | 0;
 $7 = sp;
 $8 = sp + 112 | 0;
 $9 = sp + 108 | 0;
 $10 = sp + 100 | 0;
 $11 = sp + 124 | 0;
 $12 = sp + 104 | 0;
 HEAP32[$8 >> 2] = $7;
 HEAP32[$8 + 4 >> 2] = 214;
 __ZNKSt3__28ios_base6getlocEv($10, $4);
 $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 66512) | 0;
 HEAP8[$11 >> 0] = 0;
 $17 = HEAP32[$2 >> 2] | 0;
 HEAP32[$12 >> 2] = $17;
 $19 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 $21 = $17;
 if (__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($1, $$byval_copy, $3, $10, $19, $5, $11, $16, $8, $9, $7 + 100 | 0) | 0) {
  $22 = $6 + 11 | 0;
  if ((HEAP8[$22 >> 0] | 0) < 0) {
   $25 = HEAP32[$6 >> 2] | 0;
   HEAP8[$$byval_copy >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($25, $$byval_copy);
   HEAP32[$6 + 4 >> 2] = 0;
  } else {
   HEAP8[$$byval_copy >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $$byval_copy);
   HEAP8[$22 >> 0] = 0;
  }
  if (HEAP8[$11 >> 0] | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($6, FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 127]($16, 45) | 0);
  $36 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 127]($16, 48) | 0;
  $38 = HEAP32[$9 >> 2] | 0;
  $39 = $38 + -1 | 0;
  $$0 = HEAP32[$8 >> 2] | 0;
  while (1) {
   if ($$0 >>> 0 >= $39 >>> 0) break;
   if ((HEAP8[$$0 >> 0] | 0) != $36 << 24 >> 24) break;
   $$0 = $$0 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_($6, $$0, $38) | 0;
 }
 $44 = HEAP32[$1 >> 2] | 0;
 do if ($44) {
  $47 = HEAP32[$44 + 12 >> 2] | 0;
  if (($47 | 0) == (HEAP32[$44 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$44 >> 2] | 0) + 36 >> 2] & 127]($44) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$47 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $80 = 1;
   break;
  } else {
   $80 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } else $80 = 1; while (0);
 do if ($17) {
  $61 = HEAP32[$21 + 12 >> 2] | 0;
  if (($61 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$17 >> 2] | 0) + 36 >> 2] & 127]($21) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$61 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($80) break; else {
   label = 27;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 25;
   break;
  }
 } else label = 25; while (0);
 if ((label | 0) == 25 ? $80 : 0) label = 27;
 if ((label | 0) == 27) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__26localeD2Ev($10);
 $76 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($76 | 0) FUNCTION_TABLE_vi[HEAP32[$8 + 4 >> 2] & 255]($76);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i7 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i13 = 0, $100 = 0, $101 = 0, $21 = 0, $24 = 0, $36 = 0, $38 = 0, $5 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $67 = 0, $70 = 0, $83 = 0, $85 = 0, $9 = 0, $99 = 0, label = 0;
 $5 = $4 + 8 | 0;
 L1 : while (1) {
  $6 = HEAP32[$1 >> 2] | 0;
  do if ($6) {
   $9 = HEAP32[$6 + 12 >> 2] | 0;
   if (($9 | 0) == (HEAP32[$6 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 36 >> 2] & 127]($6) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$9 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $99 = 1;
    break;
   } else {
    $99 = (HEAP32[$1 >> 2] | 0) == 0;
    break;
   }
  } else $99 = 1; while (0);
  $21 = HEAP32[$2 >> 2] | 0;
  do if ($21) {
   $24 = HEAP32[$21 + 12 >> 2] | 0;
   if (($24 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 127]($21) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$24 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($99) {
    $100 = $21;
    break;
   } else {
    $83 = $21;
    break L1;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 15;
    break;
   }
  } else label = 15; while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($99) {
    $83 = 0;
    break;
   } else $100 = 0;
  }
  $36 = HEAP32[$1 >> 2] | 0;
  $38 = HEAP32[$36 + 12 >> 2] | 0;
  if (($38 | 0) == (HEAP32[$36 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$36 >> 2] | 0) + 36 >> 2] & 127]($36) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$38 >> 0] | 0) | 0;
  if (($$0$i$i & 255) << 24 >> 24 <= -1) {
   $83 = $100;
   break;
  }
  if (!(HEAP16[(HEAP32[$5 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
   $83 = $100;
   break;
  }
  $56 = HEAP32[$1 >> 2] | 0;
  $57 = $56 + 12 | 0;
  $58 = HEAP32[$57 >> 2] | 0;
  if (($58 | 0) == (HEAP32[$56 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 40 >> 2] & 127]($56) | 0; else {
   HEAP32[$57 >> 2] = $58 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$58 >> 0] | 0) | 0;
  }
 }
 $67 = HEAP32[$1 >> 2] | 0;
 do if ($67) {
  $70 = HEAP32[$67 + 12 >> 2] | 0;
  if (($70 | 0) == (HEAP32[$67 + 16 >> 2] | 0)) $$0$i$i$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$67 >> 2] | 0) + 36 >> 2] & 127]($67) | 0; else $$0$i$i$i$i7 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$70 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i7, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $101 = 1;
   break;
  } else {
   $101 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } else $101 = 1; while (0);
 do if ($83) {
  $85 = HEAP32[$83 + 12 >> 2] | 0;
  if (($85 | 0) == (HEAP32[$83 + 16 >> 2] | 0)) $$0$i$i2$i$i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 36 >> 2] & 127]($83) | 0; else $$0$i$i2$i$i13 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$85 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i13, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($101) break; else {
   label = 41;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 39;
   break;
  }
 } else label = 39; while (0);
 if ((label | 0) == 39 ? $101 : 0) label = 41;
 if ((label | 0) == 41) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 2;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i8 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i14 = 0, $100 = 0, $101 = 0, $20 = 0, $23 = 0, $37 = 0, $39 = 0, $5 = 0, $57 = 0, $58 = 0, $59 = 0, $68 = 0, $71 = 0, $8 = 0, $84 = 0, $86 = 0, label = 0;
 $5 = HEAP32[$1 >> 2] | 0;
 do if ($5) {
  $8 = HEAP32[$5 + 12 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$8 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $100 = 1;
   break;
  } else {
   $100 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } else $100 = 1; while (0);
 $20 = HEAP32[$2 >> 2] | 0;
 do if ($20) {
  $23 = HEAP32[$20 + 12 >> 2] | 0;
  if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$23 >> 0] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($100) {
   $84 = $20;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 14;
   break;
  }
 } else label = 14; while (0);
 if ((label | 0) == 14) if ($100) label = 16; else {
  $84 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 6; else if ((label | 0) == 17) {
  $37 = HEAP32[$1 >> 2] | 0;
  $39 = HEAP32[$37 + 12 >> 2] | 0;
  if (($39 | 0) == (HEAP32[$37 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$37 >> 2] | 0) + 36 >> 2] & 127]($37) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$39 >> 0] | 0) | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, $$0$i$i & 255, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 4;
   break;
  }
  $57 = HEAP32[$1 >> 2] | 0;
  $58 = $57 + 12 | 0;
  $59 = HEAP32[$58 >> 2] | 0;
  if (($59 | 0) == (HEAP32[$57 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$57 >> 2] | 0) + 40 >> 2] & 127]($57) | 0; else {
   HEAP32[$58 >> 2] = $59 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$59 >> 0] | 0) | 0;
  }
  $68 = HEAP32[$1 >> 2] | 0;
  do if ($68) {
   $71 = HEAP32[$68 + 12 >> 2] | 0;
   if (($71 | 0) == (HEAP32[$68 + 16 >> 2] | 0)) $$0$i$i$i$i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$68 >> 2] | 0) + 36 >> 2] & 127]($68) | 0; else $$0$i$i$i$i8 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$71 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i8, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $101 = 1;
    break;
   } else {
    $101 = (HEAP32[$1 >> 2] | 0) == 0;
    break;
   }
  } else $101 = 1; while (0);
  do if ($84) {
   $86 = HEAP32[$84 + 12 >> 2] | 0;
   if (($86 | 0) == (HEAP32[$84 + 16 >> 2] | 0)) $$0$i$i2$i$i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$84 >> 2] | 0) + 36 >> 2] & 127]($84) | 0; else $$0$i$i2$i$i14 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$86 >> 0] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i14, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) if ($101) break L22; else break; else {
    HEAP32[$2 >> 2] = 0;
    label = 38;
    break;
   }
  } else label = 38; while (0);
  if ((label | 0) == 38 ? !$101 : 0) break;
  HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 2;
 } while (0);
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i8 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i14 = 0, $100 = 0, $20 = 0, $23 = 0, $37 = 0, $39 = 0, $5 = 0, $56 = 0, $57 = 0, $58 = 0, $67 = 0, $70 = 0, $8 = 0, $83 = 0, $85 = 0, $99 = 0, label = 0;
 $5 = HEAP32[$1 >> 2] | 0;
 do if ($5) {
  $8 = HEAP32[$5 + 12 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$8 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $99 = 1;
   break;
  } else {
   $99 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } else $99 = 1; while (0);
 $20 = HEAP32[$2 >> 2] | 0;
 do if ($20) {
  $23 = HEAP32[$20 + 12 >> 2] | 0;
  if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$23 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($99) {
   $83 = $20;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 14;
   break;
  }
 } else label = 14; while (0);
 if ((label | 0) == 14) if ($99) label = 16; else {
  $83 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 6; else if ((label | 0) == 17) {
  $37 = HEAP32[$1 >> 2] | 0;
  $39 = HEAP32[$37 + 12 >> 2] | 0;
  if (($39 | 0) == (HEAP32[$37 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$37 >> 2] | 0) + 36 >> 2] & 127]($37) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$39 >> 2] | 0) | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, $$0$i$i, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 4;
   break;
  }
  $56 = HEAP32[$1 >> 2] | 0;
  $57 = $56 + 12 | 0;
  $58 = HEAP32[$57 >> 2] | 0;
  if (($58 | 0) == (HEAP32[$56 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 40 >> 2] & 127]($56) | 0; else {
   HEAP32[$57 >> 2] = $58 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$58 >> 2] | 0) | 0;
  }
  $67 = HEAP32[$1 >> 2] | 0;
  do if ($67) {
   $70 = HEAP32[$67 + 12 >> 2] | 0;
   if (($70 | 0) == (HEAP32[$67 + 16 >> 2] | 0)) $$0$i$i$i$i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$67 >> 2] | 0) + 36 >> 2] & 127]($67) | 0; else $$0$i$i$i$i8 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$70 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i8, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $100 = 1;
    break;
   } else {
    $100 = (HEAP32[$1 >> 2] | 0) == 0;
    break;
   }
  } else $100 = 1; while (0);
  do if ($83) {
   $85 = HEAP32[$83 + 12 >> 2] | 0;
   if (($85 | 0) == (HEAP32[$83 + 16 >> 2] | 0)) $$0$i$i2$i$i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 36 >> 2] & 127]($83) | 0; else $$0$i$i2$i$i14 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$85 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i14, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($100) break L22; else break; else {
    HEAP32[$2 >> 2] = 0;
    label = 38;
    break;
   }
  } else label = 38; while (0);
  if ((label | 0) == 38 ? !$100 : 0) break;
  HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 2;
 } while (0);
 return;
}

function __ZN6vision25DoGScaleInvariantDetector23findFeatureOrientationsEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$025 = 0, $$026 = 0, $13 = 0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $36 = 0, $4 = 0, $45 = 0.0, $5 = 0, $53 = 0.0, $54 = 0.0, $6 = 0, $62 = 0.0, $64 = 0, $79 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $2 = sp + 48 | 0;
 $3 = sp + 44 | 0;
 $4 = sp + 40 | 0;
 $5 = sp + 36 | 0;
 $6 = sp;
 L1 : do if (!(HEAP8[$0 + 28 >> 0] | 0)) {
  $13 = HEAP32[$0 + 60 >> 2] | 0;
  $15 = ((HEAP32[$0 + 64 >> 2] | 0) - $13 | 0) / 36 | 0;
  $16 = $13;
  $$026 = 0;
  while (1) {
   if (($$026 | 0) == ($15 | 0)) break L1;
   HEAPF32[$16 + ($$026 * 36 | 0) + 8 >> 2] = 0.0;
   $$026 = $$026 + 1 | 0;
  }
 } else {
  $19 = $0 + 72 | 0;
  $21 = $0 + 76 | 0;
  HEAP32[$21 >> 2] = HEAP32[$19 >> 2];
  $22 = $0 + 60 | 0;
  $23 = $0 + 64 | 0;
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE7reserveEm($19, (HEAP32[$23 >> 2] | 0) - (HEAP32[$22 >> 2] | 0) | 0);
  $27 = $0 + 92 | 0;
  __ZN6vision21OrientationAssignment16computeGradientsEPKNS_25GaussianScaleSpacePyramidE($27, $1);
  $28 = $0 + 144 | 0;
  $29 = $6 + 8 | 0;
  $30 = $0 + 80 | 0;
  $$025 = 0;
  while (1) {
   $32 = HEAP32[$22 >> 2] | 0;
   $36 = $32;
   if ($$025 >>> 0 >= (((HEAP32[$23 >> 2] | 0) - $32 | 0) / 36 | 0) >>> 0) break;
   __ZN6vision25bilinear_downsample_pointERfS0_S0_fffi($3, $4, $5, +HEAPF32[$36 + ($$025 * 36 | 0) >> 2], +HEAPF32[$36 + ($$025 * 36 | 0) + 4 >> 2], +HEAPF32[$36 + ($$025 * 36 | 0) + 28 >> 2], HEAP32[$36 + ($$025 * 36 | 0) + 12 >> 2] | 0);
   $45 = +HEAPF32[$3 >> 2];
   $53 = +__ZN6vision10ClipScalarIfEET_S1_S1_S1_($45, 0.0, +(((__ZNK6vision5Image5widthEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm($1, HEAP32[(HEAP32[$22 >> 2] | 0) + ($$025 * 36 | 0) + 12 >> 2] | 0, 0) | 0) | 0) + -1 | 0) >>> 0));
   HEAPF32[$3 >> 2] = $53;
   $54 = +HEAPF32[$4 >> 2];
   $62 = +__ZN6vision10ClipScalarIfEET_S1_S1_S1_($54, 0.0, +(((__ZNK6vision5Image6heightEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm($1, HEAP32[(HEAP32[$22 >> 2] | 0) + ($$025 * 36 | 0) + 12 >> 2] | 0, 0) | 0) | 0) + -1 | 0) >>> 0));
   HEAPF32[$4 >> 2] = $62;
   $64 = HEAP32[$22 >> 2] | 0;
   __ZN6vision21OrientationAssignment7computeEPfRiiifff($27, HEAP32[$28 >> 2] | 0, $2, HEAP32[$64 + ($$025 * 36 | 0) + 12 >> 2] | 0, HEAP32[$64 + ($$025 * 36 | 0) + 16 >> 2] | 0, +HEAPF32[$3 >> 2], $62, +HEAPF32[$5 >> 2]);
   $$0 = 0;
   while (1) {
    if (($$0 | 0) >= (HEAP32[$2 >> 2] | 0)) break;
    dest = $6;
    src = (HEAP32[$22 >> 2] | 0) + ($$025 * 36 | 0) | 0;
    stop = dest + 36 | 0;
    do {
     HEAP32[dest >> 2] = HEAP32[src >> 2];
     dest = dest + 4 | 0;
     src = src + 4 | 0;
    } while ((dest | 0) < (stop | 0));
    HEAP32[$29 >> 2] = HEAP32[(HEAP32[$28 >> 2] | 0) + ($$0 << 2) >> 2];
    $79 = HEAP32[$21 >> 2] | 0;
    if (($79 | 0) == (HEAP32[$30 >> 2] | 0)) __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($19, $6); else {
     dest = $79;
     src = $6;
     stop = dest + 36 | 0;
     do {
      HEAP32[dest >> 2] = HEAP32[src >> 2];
      dest = dest + 4 | 0;
      src = src + 4 | 0;
     } while ((dest | 0) < (stop | 0));
     HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 36;
    }
    $$0 = $$0 + 1 | 0;
   }
   $$025 = $$025 + 1 | 0;
  }
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE4swapERS6_($22, $19);
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$4 = 0, $$pre80 = 0, $100 = 0, $109 = 0, $114 = 0, $117 = 0, $129 = 0, $134 = 0, $137 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $32 = 0, $43 = 0, $46 = 0, $58 = 0, $63 = 0, $69 = 0, $71 = 0, $77 = 0, $87 = 0, $91 = 0, label = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 $$pre80 = $4;
 if ($7 & 2) if (($$pre80 - $3 | 0) < 3) $$4 = 1; else {
  HEAP32[$5 >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = -17;
  $14 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $14 + 1;
  HEAP8[$14 >> 0] = -69;
  $16 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $16 + 1;
  HEAP8[$16 >> 0] = -65;
  label = 4;
 } else label = 4;
 L4 : do if ((label | 0) == 4) {
  $18 = $1;
  $20 = HEAP32[$2 >> 2] | 0;
  while (1) {
   if ($20 >>> 0 >= $1 >>> 0) {
    $$4 = 0;
    break L4;
   }
   $21 = HEAP16[$20 >> 1] | 0;
   $22 = $21 & 65535;
   if ($22 >>> 0 > $6 >>> 0) {
    $$4 = 2;
    break L4;
   }
   do if (($21 & 65535) < 128) {
    $25 = HEAP32[$5 >> 2] | 0;
    if (($$pre80 - $25 | 0) < 1) {
     $$4 = 1;
     break L4;
    }
    HEAP32[$5 >> 2] = $25 + 1;
    HEAP8[$25 >> 0] = $21;
   } else {
    if (($21 & 65535) < 2048) {
     $32 = HEAP32[$5 >> 2] | 0;
     if (($$pre80 - $32 | 0) < 2) {
      $$4 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $32 + 1;
     HEAP8[$32 >> 0] = $22 >>> 6 | 192;
     $43 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $43 + 1;
     HEAP8[$43 >> 0] = $22 & 63 | 128;
     break;
    }
    if (($21 & 65535) < 55296) {
     $46 = HEAP32[$5 >> 2] | 0;
     if (($$pre80 - $46 | 0) < 3) {
      $$4 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $46 + 1;
     HEAP8[$46 >> 0] = $22 >>> 12 | 224;
     $58 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $58 + 1;
     HEAP8[$58 >> 0] = $22 >>> 6 & 63 | 128;
     $63 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $63 + 1;
     HEAP8[$63 >> 0] = $22 & 63 | 128;
     break;
    }
    if (($21 & 65535) >= 56320) {
     if (($21 & 65535) < 57344) {
      $$4 = 2;
      break L4;
     }
     $117 = HEAP32[$5 >> 2] | 0;
     if (($$pre80 - $117 | 0) < 3) {
      $$4 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $117 + 1;
     HEAP8[$117 >> 0] = $22 >>> 12 | 224;
     $129 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $129 + 1;
     HEAP8[$129 >> 0] = $22 >>> 6 & 63 | 128;
     $134 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $134 + 1;
     HEAP8[$134 >> 0] = $22 & 63 | 128;
     break;
    }
    if (($18 - $20 | 0) < 4) {
     $$4 = 1;
     break L4;
    }
    $69 = $20 + 2 | 0;
    $71 = HEAPU16[$69 >> 1] | 0;
    if (($71 & 64512 | 0) != 56320) {
     $$4 = 2;
     break L4;
    }
    if (($$pre80 - (HEAP32[$5 >> 2] | 0) | 0) < 4) {
     $$4 = 1;
     break L4;
    }
    $77 = $22 & 960;
    if ((($77 << 10) + 65536 | $22 << 10 & 64512 | $71 & 1023) >>> 0 > $6 >>> 0) {
     $$4 = 2;
     break L4;
    }
    HEAP32[$2 >> 2] = $69;
    $87 = ($77 >>> 6) + 1 | 0;
    $91 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $91 + 1;
    HEAP8[$91 >> 0] = $87 >>> 2 | 240;
    $100 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $100 + 1;
    HEAP8[$100 >> 0] = $22 >>> 2 & 15 | $87 << 4 & 48 | 128;
    $109 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $109 + 1;
    HEAP8[$109 >> 0] = $22 << 4 & 48 | $71 >>> 6 & 15 | 128;
    $114 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $114 + 1;
    HEAP8[$114 >> 0] = $71 & 63 | 128;
   } while (0);
   $137 = (HEAP32[$2 >> 2] | 0) + 2 | 0;
   HEAP32[$2 >> 2] = $137;
   $20 = $137;
  }
 } while (0);
 return $$4 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i7 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i13 = 0, $20 = 0, $23 = 0, $35 = 0, $37 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $62 = 0, $65 = 0, $78 = 0, $8 = 0, $80 = 0, $94 = 0, $95 = 0, $96 = 0, label = 0;
 L1 : while (1) {
  $5 = HEAP32[$1 >> 2] | 0;
  do if ($5) {
   $8 = HEAP32[$5 + 12 >> 2] | 0;
   if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$8 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $94 = 1;
    break;
   } else {
    $94 = (HEAP32[$1 >> 2] | 0) == 0;
    break;
   }
  } else $94 = 1; while (0);
  $20 = HEAP32[$2 >> 2] | 0;
  do if ($20) {
   $23 = HEAP32[$20 + 12 >> 2] | 0;
   if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$23 >> 2] | 0) | 0;
   if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($94) {
    $95 = $20;
    break;
   } else {
    $78 = $20;
    break L1;
   } else {
    HEAP32[$2 >> 2] = 0;
    label = 15;
    break;
   }
  } else label = 15; while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($94) {
    $78 = 0;
    break;
   } else $95 = 0;
  }
  $35 = HEAP32[$1 >> 2] | 0;
  $37 = HEAP32[$35 + 12 >> 2] | 0;
  if (($37 | 0) == (HEAP32[$35 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] & 127]($35) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$37 >> 2] | 0) | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, $$0$i$i) | 0)) {
   $78 = $95;
   break;
  }
  $51 = HEAP32[$1 >> 2] | 0;
  $52 = $51 + 12 | 0;
  $53 = HEAP32[$52 >> 2] | 0;
  if (($53 | 0) == (HEAP32[$51 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$51 >> 2] | 0) + 40 >> 2] & 127]($51) | 0; else {
   HEAP32[$52 >> 2] = $53 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$53 >> 2] | 0) | 0;
  }
 }
 $62 = HEAP32[$1 >> 2] | 0;
 do if ($62) {
  $65 = HEAP32[$62 + 12 >> 2] | 0;
  if (($65 | 0) == (HEAP32[$62 + 16 >> 2] | 0)) $$0$i$i$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$62 >> 2] | 0) + 36 >> 2] & 127]($62) | 0; else $$0$i$i$i$i7 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$65 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i7, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $96 = 1;
   break;
  } else {
   $96 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } else $96 = 1; while (0);
 do if ($78) {
  $80 = HEAP32[$78 + 12 >> 2] | 0;
  if (($80 | 0) == (HEAP32[$78 + 16 >> 2] | 0)) $$0$i$i2$i$i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$78 >> 2] | 0) + 36 >> 2] & 127]($78) | 0; else $$0$i$i2$i$i13 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$80 >> 2] | 0) | 0;
  if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i13, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) if ($96) break; else {
   label = 40;
   break;
  } else {
   HEAP32[$2 >> 2] = 0;
   label = 38;
   break;
  }
 } else label = 38; while (0);
 if ((label | 0) == 38 ? $96 : 0) label = 40;
 if ((label | 0) == 40) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 2;
 return;
}

function _arith_decode($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0$ph = 0, $$062 = 0, $$lcssa65 = 0, $$pre$phi72Z2D = 0, $10 = 0, $11 = 0, $12 = 0, $16 = 0, $17 = 0, $24 = 0, $29 = 0, $3 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $4 = 0, $42 = 0, $47 = 0, $49 = 0, $5 = 0, $54 = 0, $55 = 0, $57 = 0, $60 = 0, $63 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $76 = 0, $8 = 0, $84 = 0, $9 = 0, $90 = 0, $91 = 0;
 $3 = HEAP32[$0 + 468 >> 2] | 0;
 $4 = $3 + 16 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $7 = $3 + 20 | 0;
 if (($5 | 0) < 32768) {
  $8 = $0 + 440 | 0;
  $9 = $0 + 24 | 0;
  $10 = $3 + 12 | 0;
  $12 = HEAP32[$7 >> 2] | 0;
  while (1) {
   $11 = $12 + -1 | 0;
   HEAP32[$7 >> 2] = $11;
   if (($12 | 0) < 1) {
    if (!(HEAP32[$8 >> 2] | 0)) {
     $16 = HEAP32[$9 >> 2] | 0;
     $17 = $16 + 4 | 0;
     if ((HEAP32[$17 >> 2] | 0) == 0 ? (FUNCTION_TABLE_ii[HEAP32[$16 + 12 >> 2] & 127]($0) | 0) == 0 : 0) {
      $24 = HEAP32[$0 >> 2] | 0;
      HEAP32[$24 + 20 >> 2] = 25;
      FUNCTION_TABLE_vi[HEAP32[$24 >> 2] & 255]($0);
     }
     HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + -1;
     $29 = HEAP32[$16 >> 2] | 0;
     HEAP32[$16 >> 2] = $29 + 1;
     $31 = HEAP8[$29 >> 0] | 0;
     $32 = $31 & 255;
     L13 : do if ($31 << 24 >> 24 == -1) {
      L15 : while (1) {
       $34 = HEAP32[$9 >> 2] | 0;
       $35 = $34 + 4 | 0;
       if ((HEAP32[$35 >> 2] | 0) == 0 ? (FUNCTION_TABLE_ii[HEAP32[$34 + 12 >> 2] & 127]($0) | 0) == 0 : 0) {
        $42 = HEAP32[$0 >> 2] | 0;
        HEAP32[$42 + 20 >> 2] = 25;
        FUNCTION_TABLE_vi[HEAP32[$42 >> 2] & 255]($0);
       }
       HEAP32[$35 >> 2] = (HEAP32[$35 >> 2] | 0) + -1;
       $47 = HEAP32[$34 >> 2] | 0;
       HEAP32[$34 >> 2] = $47 + 1;
       $49 = HEAP8[$47 >> 0] | 0;
       switch ($49 << 24 >> 24) {
       case 0:
        {
         $$0$ph = 255;
         break L13;
         break;
        }
       case -1:
        break;
       default:
        break L15;
       }
      }
      HEAP32[$8 >> 2] = $49 & 255;
      $$0$ph = 0;
     } else $$0$ph = $32; while (0);
     $$0 = $$0$ph;
     $55 = HEAP32[$7 >> 2] | 0;
    } else {
     $$0 = 0;
     $55 = $11;
    }
    HEAP32[$10 >> 2] = HEAP32[$10 >> 2] << 8 | $$0;
    $54 = $55 + 8 | 0;
    HEAP32[$7 >> 2] = $54;
    if (($55 | 0) < -8) {
     $57 = $55 + 9 | 0;
     HEAP32[$7 >> 2] = $57;
     if (!$57) {
      HEAP32[$4 >> 2] = 32768;
      $91 = 0;
     } else $91 = $57;
    } else $91 = $54;
   } else $91 = $11;
   $60 = HEAP32[$4 >> 2] << 1;
   HEAP32[$4 >> 2] = $60;
   if (($60 | 0) < 32768) $12 = $91; else {
    $$lcssa65 = $60;
    $$pre$phi72Z2D = $10;
    $71 = $91;
    break;
   }
  }
 } else {
  $$lcssa65 = $5;
  $$pre$phi72Z2D = $3 + 12 | 0;
  $71 = HEAP32[$7 >> 2] | 0;
 }
 $63 = HEAPU8[$1 >> 0] | 0;
 $66 = HEAP32[3872 + (($63 & 127) << 2) >> 2] | 0;
 $67 = $66 >> 8;
 $68 = $66 >> 16;
 $69 = $$lcssa65 - $68 | 0;
 HEAP32[$4 >> 2] = $69;
 $70 = $69 << $71;
 $72 = HEAP32[$$pre$phi72Z2D >> 2] | 0;
 if (($72 | 0) >= ($70 | 0)) {
  HEAP32[$$pre$phi72Z2D >> 2] = $72 - $70;
  HEAP32[$4 >> 2] = $68;
  $76 = $63 & 128;
  if (($69 | 0) < ($68 | 0)) {
   HEAP8[$1 >> 0] = $76 ^ $67;
   $$062 = $63;
   $90 = $$062 >> 7;
   return $90 | 0;
  } else {
   HEAP8[$1 >> 0] = $76 ^ $66;
   $$062 = $63 ^ 128;
   $90 = $$062 >> 7;
   return $90 | 0;
  }
 }
 if (($69 | 0) >= 32768) {
  $$062 = $63;
  $90 = $$062 >> 7;
  return $90 | 0;
 }
 $84 = $63 & 128;
 if (($69 | 0) < ($68 | 0)) {
  HEAP8[$1 >> 0] = $84 ^ $66;
  $$062 = $63 ^ 128;
  $90 = $$062 >> 7;
  return $90 | 0;
 } else {
  HEAP8[$1 >> 0] = $84 ^ $67;
  $$062 = $63;
  $90 = $$062 >> 7;
  return $90 | 0;
 }
 return 0;
}

function _get_interesting_appn($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$066 = 0, $$070 = 0, $$071 = 0, $$07278 = 0, $$1 = 0, $$167 = 0, $$2 = 0, $$2$lcssa = 0, $$268 = 0, $$268$lcssa = 0, $$26877 = 0, $$26880 = 0, $$276 = 0, $$279 = 0, $$3 = 0, $$369 = 0, $1 = 0, $103 = 0, $12 = 0, $13 = 0, $16 = 0, $2 = 0, $26 = 0, $27 = 0, $3 = 0, $31 = 0, $4 = 0, $42 = 0, $44 = 0, $5 = 0, $75 = 0, $83 = 0, $85 = 0, $87 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 $2 = $0 + 24 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $3 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 do if (!$5) if (!(FUNCTION_TABLE_ii[HEAP32[$3 + 12 >> 2] & 127]($0) | 0)) {
  $$070 = 0;
  STACKTOP = sp;
  return $$070 | 0;
 } else {
  $$0 = HEAP32[$4 >> 2] | 0;
  break;
 } else $$0 = $5; while (0);
 $$066 = HEAP32[$3 >> 2] | 0;
 $12 = $$0 + -1 | 0;
 $13 = $$066 + 1 | 0;
 $16 = HEAPU8[$$066 >> 0] << 8;
 do if (!$12) if (!(FUNCTION_TABLE_ii[HEAP32[$3 + 12 >> 2] & 127]($0) | 0)) {
  $$070 = 0;
  STACKTOP = sp;
  return $$070 | 0;
 } else {
  $$1 = HEAP32[$4 >> 2] | 0;
  $$167 = HEAP32[$3 >> 2] | 0;
  break;
 } else {
  $$1 = $12;
  $$167 = $13;
 } while (0);
 $26 = $16 | HEAPU8[$$167 >> 0];
 $27 = $26 + -2 | 0;
 $$071 = $26 >>> 0 > 15 ? 14 : $26 >>> 0 > 2 ? $27 : 0;
 $$276 = $$1 + -1 | 0;
 $$26877 = $$167 + 1 | 0;
 L13 : do if (!$$071) {
  $$2$lcssa = $$276;
  $$268$lcssa = $$26877;
 } else {
  $31 = $3 + 12 | 0;
  $$07278 = 0;
  $$26880 = $$26877;
  $$279 = $$276;
  while (1) {
   if (!$$279) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$31 >> 2] & 127]($0) | 0)) {
     $$070 = 0;
     break;
    }
    $$3 = HEAP32[$4 >> 2] | 0;
    $$369 = HEAP32[$3 >> 2] | 0;
   } else {
    $$3 = $$279;
    $$369 = $$26880;
   }
   HEAP8[$1 + $$07278 >> 0] = HEAP8[$$369 >> 0] | 0;
   $$07278 = $$07278 + 1 | 0;
   $$2 = $$3 + -1 | 0;
   $$268 = $$369 + 1 | 0;
   if ($$07278 >>> 0 >= $$071 >>> 0) {
    $$2$lcssa = $$2;
    $$268$lcssa = $$268;
    break L13;
   } else {
    $$26880 = $$268;
    $$279 = $$2;
   }
  }
  STACKTOP = sp;
  return $$070 | 0;
 } while (0);
 $42 = $27 - $$071 | 0;
 $44 = HEAP32[$0 + 440 >> 2] | 0;
 L23 : do switch ($44 | 0) {
 case 224:
  {
   _examine_app0($0, $1, $$071, $42);
   break;
  }
 case 238:
  {
   if (((($$071 >>> 0 > 11 & (HEAP8[$1 >> 0] | 0) == 65 ? (HEAP8[$1 + 1 >> 0] | 0) == 100 : 0) ? (HEAP8[$1 + 2 >> 0] | 0) == 111 : 0) ? (HEAP8[$1 + 3 >> 0] | 0) == 98 : 0) ? (HEAP8[$1 + 4 >> 0] | 0) == 101 : 0) {
    $75 = HEAPU8[$1 + 7 >> 0] << 8 | HEAPU8[$1 + 8 >> 0];
    $83 = HEAPU8[$1 + 9 >> 0] << 8 | HEAPU8[$1 + 10 >> 0];
    $85 = HEAP8[$1 + 11 >> 0] | 0;
    $87 = HEAP32[$0 >> 2] | 0;
    HEAP32[$87 + 24 >> 2] = HEAPU8[$1 + 5 >> 0] << 8 | HEAPU8[$1 + 6 >> 0];
    HEAP32[$87 + 28 >> 2] = $75;
    HEAP32[$87 + 32 >> 2] = $83;
    HEAP32[$87 + 36 >> 2] = $85 & 255;
    HEAP32[$87 + 20 >> 2] = 78;
    FUNCTION_TABLE_vii[HEAP32[$87 + 4 >> 2] & 255]($0, 1);
    HEAP32[$0 + 296 >> 2] = 1;
    HEAP8[$0 + 300 >> 0] = $85;
    break L23;
   }
   $97 = HEAP32[$0 >> 2] | 0;
   HEAP32[$97 + 20 >> 2] = 80;
   HEAP32[$97 + 24 >> 2] = $27;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 1);
   break;
  }
 default:
  {
   $103 = HEAP32[$0 >> 2] | 0;
   HEAP32[$103 + 20 >> 2] = 70;
   HEAP32[$103 + 24 >> 2] = $44;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  }
 } while (0);
 HEAP32[$3 >> 2] = $$268$lcssa;
 HEAP32[$4 >> 2] = $$2$lcssa;
 if (($42 | 0) <= 0) {
  $$070 = 1;
  STACKTOP = sp;
  return $$070 | 0;
 }
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 255]($0, $42);
 $$070 = 1;
 STACKTOP = sp;
 return $$070 | 0;
}

function __ZN6vision20VisualDatabaseFacade30addFreakFeaturesAndDescriptorsERKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEERKNS2_IhNS4_IhEEEERKNS2_INS_7Point3dIfEENS4_ISE_EEEEmmi($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $18 = 0, $19 = 0, $26 = 0, $32 = 0, $33 = 0, $39 = 0, $45 = 0, $49 = 0, $51 = 0, $57 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 24 | 0;
 $7 = sp + 12 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 8 | 0;
 $10 = sp;
 HEAP32[$7 >> 2] = $6;
 $11 = __Znwm(148) | 0;
 __ZN6vision8KeyframeILi96EEC2Ev($11);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$9 >> 2];
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE($8, $11, $$byval_copy);
 __ZN6vision8KeyframeILi96EE8setWidthEi(HEAP32[$8 >> 2] | 0, $4);
 __ZN6vision8KeyframeILi96EE9setHeightEi(HEAP32[$8 >> 2] | 0, $5);
 __ZN6vision18BinaryFeatureStore21setNumBytesPerFeatureEi(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$8 >> 2] | 0) | 0, 96);
 $18 = __ZN6vision18BinaryFeatureStore6pointsEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$8 >> 2] | 0) | 0) | 0;
 $19 = $1 + 4 | 0;
 __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6resizeEm($18, ((HEAP32[$19 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0) / 20 | 0);
 $26 = __ZN6vision18BinaryFeatureStore6pointsEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$8 >> 2] | 0) | 0) | 0;
 if (($26 | 0) != ($1 | 0)) __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($26, HEAP32[$1 >> 2] | 0, HEAP32[$19 >> 2] | 0);
 $32 = __ZN6vision18BinaryFeatureStore8featuresEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$8 >> 2] | 0) | 0) | 0;
 $33 = $2 + 4 | 0;
 __ZNSt3__26vectorIhNS_9allocatorIhEEE6resizeEm($32, (HEAP32[$33 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0);
 $39 = __ZN6vision18BinaryFeatureStore8featuresEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$8 >> 2] | 0) | 0) | 0;
 if (($39 | 0) != ($2 | 0)) __ZNSt3__26vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($39, HEAP32[$2 >> 2] | 0, HEAP32[$33 >> 2] | 0);
 __ZN6vision8KeyframeILi96EE10buildIndexEv(HEAP32[$8 >> 2] | 0);
 $45 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
 HEAP32[$10 >> 2] = HEAP32[$8 >> 2];
 $49 = HEAP32[$8 + 4 >> 2] | 0;
 HEAP32[$10 + 4 >> 2] = $49;
 if ($49 | 0) {
  $51 = $49 + 4 | 0;
  HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + 1;
 }
 __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE11addKeyframeENSt3__210shared_ptrINS_8KeyframeILi96EEEEEi($45, $10, HEAP32[$7 >> 2] | 0);
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev($10);
 $57 = __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEEixERSD_((HEAP32[$0 >> 2] | 0) + 4 | 0, $7) | 0;
 if (($57 | 0) != ($3 | 0)) __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($57, HEAP32[$3 >> 2] | 0, HEAP32[$3 + 4 >> 2] | 0);
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev($8);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0 = 0, $$069 = 0, $$070 = 0, $$070$lcssa = 0, $$077 = 0, $$079 = 0, $$171 = 0, $$173 = 0, $$178 = 0, $$2 = 0, $$2$lcssa = 0, $$375$ph = 0, $$476 = 0, $$5$ph85 = 0, $14 = 0, $15 = 0, $18 = 0, $23 = 0, $24 = 0, $35 = 0, $36 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $48 = 0, $51 = 0, $55 = 0, $56 = 0, $64 = 0, $66 = 0, $67 = 0, $75 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp;
 $9 = sp + 8 | 0;
 $$070 = $2;
 while (1) {
  if (($$070 | 0) == ($3 | 0)) {
   $$070$lcssa = $3;
   break;
  }
  if (!(HEAP32[$$070 >> 2] | 0)) {
   $$070$lcssa = $$070;
   break;
  }
  $$070 = $$070 + 4 | 0;
 }
 HEAP32[$7 >> 2] = $5;
 HEAP32[$4 >> 2] = $2;
 $14 = $6;
 $15 = $0 + 8 | 0;
 $$077 = $2;
 $$079 = $5;
 $$171 = $$070$lcssa;
 L6 : while (1) {
  if (($$079 | 0) == ($6 | 0) | ($$077 | 0) == ($3 | 0)) {
   $75 = $$077;
   label = 36;
   break;
  }
  $18 = $1;
  $23 = HEAP32[$18 + 4 >> 2] | 0;
  $24 = $8;
  HEAP32[$24 >> 2] = HEAP32[$18 >> 2];
  HEAP32[$24 + 4 >> 2] = $23;
  $35 = ___uselocale(HEAP32[$15 >> 2] | 0) | 0;
  $36 = _wcsnrtombs($$079, $4, $$171 - $$077 >> 2, $14 - $$079 | 0, $1) | 0;
  if ($35 | 0) ___uselocale($35) | 0;
  switch ($36 | 0) {
  case -1:
   {
    label = 10;
    break L6;
    break;
   }
  case 0:
   {
    $$375$ph = 1;
    label = 33;
    break L6;
    break;
   }
  default:
   {}
  }
  $51 = (HEAP32[$7 >> 2] | 0) + $36 | 0;
  HEAP32[$7 >> 2] = $51;
  if (($51 | 0) == ($6 | 0)) {
   label = 34;
   break;
  }
  if (($$171 | 0) == ($3 | 0)) {
   $$5$ph85 = $3;
   $77 = $51;
   $78 = HEAP32[$4 >> 2] | 0;
  } else {
   $55 = ___uselocale(HEAP32[$15 >> 2] | 0) | 0;
   $56 = _wcrtomb($9, 0, $1) | 0;
   if ($55 | 0) ___uselocale($55) | 0;
   if (($56 | 0) == -1) {
    $$173 = 2;
    label = 32;
    break;
   }
   if ($56 >>> 0 > ($14 - (HEAP32[$7 >> 2] | 0) | 0) >>> 0) {
    $$173 = 1;
    label = 32;
    break;
   }
   $$0 = $9;
   $$069 = $56;
   while (1) {
    if (!$$069) break;
    $66 = HEAP8[$$0 >> 0] | 0;
    $67 = HEAP32[$7 >> 2] | 0;
    HEAP32[$7 >> 2] = $67 + 1;
    HEAP8[$67 >> 0] = $66;
    $$0 = $$0 + 1 | 0;
    $$069 = $$069 + -1 | 0;
   }
   $64 = (HEAP32[$4 >> 2] | 0) + 4 | 0;
   HEAP32[$4 >> 2] = $64;
   $$2 = $64;
   while (1) {
    if (($$2 | 0) == ($3 | 0)) {
     $$2$lcssa = $3;
     break;
    }
    if (!(HEAP32[$$2 >> 2] | 0)) {
     $$2$lcssa = $$2;
     break;
    }
    $$2 = $$2 + 4 | 0;
   }
   $$5$ph85 = $$2$lcssa;
   $77 = HEAP32[$7 >> 2] | 0;
   $78 = $64;
  }
  $$077 = $78;
  $$079 = $77;
  $$171 = $$5$ph85;
 }
 if ((label | 0) == 10) {
  HEAP32[$7 >> 2] = $$079;
  $$178 = $$077;
  $43 = $$079;
  while (1) {
   if (($$178 | 0) == (HEAP32[$4 >> 2] | 0)) break;
   $40 = HEAP32[$$178 >> 2] | 0;
   $42 = ___uselocale(HEAP32[$15 >> 2] | 0) | 0;
   $44 = _wcrtomb($43, $40, $8) | 0;
   if ($42 | 0) ___uselocale($42) | 0;
   if (($44 | 0) == -1) break;
   $48 = (HEAP32[$7 >> 2] | 0) + $44 | 0;
   HEAP32[$7 >> 2] = $48;
   $$178 = $$178 + 4 | 0;
   $43 = $48;
  }
  HEAP32[$4 >> 2] = $$178;
  $$375$ph = 2;
  label = 33;
 } else if ((label | 0) == 32) {
  $$375$ph = $$173;
  label = 33;
 } else if ((label | 0) == 34) {
  $75 = HEAP32[$4 >> 2] | 0;
  label = 36;
 }
 if ((label | 0) == 33) $$476 = $$375$ph; else if ((label | 0) == 36) $$476 = ($75 | 0) != ($3 | 0) & 1;
 STACKTOP = sp;
 return $$476 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$070 = 0, $$070$lcssa = 0, $$074 = 0, $$077 = 0, $$1 = 0, $$172$ph = 0, $$175 = 0, $$2 = 0, $$2$lcssa = 0, $$273 = 0, $$4$ph = 0, $$pre = 0, $$sink = 0, $13 = 0, $14 = 0, $17 = 0, $22 = 0, $23 = 0, $34 = 0, $35 = 0, $38 = 0, $44 = 0, $45 = 0, $53 = 0, $57 = 0, $58 = 0, $64 = 0, $70 = 0, $72 = 0, $73 = 0, $8 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp;
 $$070 = $2;
 while (1) {
  if (($$070 | 0) == ($3 | 0)) {
   $$070$lcssa = $3;
   break;
  }
  if (!(HEAP8[$$070 >> 0] | 0)) {
   $$070$lcssa = $$070;
   break;
  }
  $$070 = $$070 + 1 | 0;
 }
 HEAP32[$7 >> 2] = $5;
 HEAP32[$4 >> 2] = $2;
 $13 = $6;
 $14 = $0 + 8 | 0;
 $$074 = $2;
 $$077 = $5;
 $$1 = $$070$lcssa;
 while (1) {
  if (($$077 | 0) == ($6 | 0) | ($$074 | 0) == ($3 | 0)) {
   $70 = $$074;
   label = 33;
   break;
  }
  $17 = $1;
  $22 = HEAP32[$17 + 4 >> 2] | 0;
  $23 = $8;
  HEAP32[$23 >> 2] = HEAP32[$17 >> 2];
  HEAP32[$23 + 4 >> 2] = $22;
  $34 = ___uselocale(HEAP32[$14 >> 2] | 0) | 0;
  $35 = _mbsnrtowcs($$077, $4, $$1 - $$074 | 0, $13 - $$077 >> 2, $1) | 0;
  if ($34 | 0) ___uselocale($34) | 0;
  if (($35 | 0) == -1) {
   label = 10;
   break;
  }
  $53 = (HEAP32[$7 >> 2] | 0) + ($35 << 2) | 0;
  HEAP32[$7 >> 2] = $53;
  if (($53 | 0) == ($6 | 0)) {
   label = 30;
   break;
  }
  $$pre = HEAP32[$4 >> 2] | 0;
  if (($$1 | 0) == ($3 | 0)) {
   $$4$ph = $3;
   $72 = $53;
   $73 = $$pre;
  } else {
   $57 = ___uselocale(HEAP32[$14 >> 2] | 0) | 0;
   $58 = _mbrtowc($53, $$pre, 1, $1) | 0;
   if ($57 | 0) ___uselocale($57) | 0;
   if ($58 | 0) {
    $$172$ph = 2;
    label = 29;
    break;
   }
   HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 4;
   $64 = (HEAP32[$4 >> 2] | 0) + 1 | 0;
   HEAP32[$4 >> 2] = $64;
   $$2 = $64;
   while (1) {
    if (($$2 | 0) == ($3 | 0)) {
     $$2$lcssa = $3;
     break;
    }
    if (!(HEAP8[$$2 >> 0] | 0)) {
     $$2$lcssa = $$2;
     break;
    }
    $$2 = $$2 + 1 | 0;
   }
   $$4$ph = $$2$lcssa;
   $72 = HEAP32[$7 >> 2] | 0;
   $73 = $64;
  }
  $$074 = $73;
  $$077 = $72;
  $$1 = $$4$ph;
 }
 do if ((label | 0) == 10) {
  $38 = $$1;
  $$175 = $$074;
  $storemerge = $$077;
  L29 : while (1) {
   HEAP32[$7 >> 2] = $storemerge;
   if (($$175 | 0) == (HEAP32[$4 >> 2] | 0)) {
    label = 19;
    break;
   }
   $44 = ___uselocale(HEAP32[$14 >> 2] | 0) | 0;
   $45 = _mbrtowc($storemerge, $$175, $38 - $$175 | 0, $8) | 0;
   if ($44 | 0) ___uselocale($44) | 0;
   switch ($45 | 0) {
   case -1:
    {
     label = 15;
     break L29;
     break;
    }
   case -2:
    {
     label = 16;
     break L29;
     break;
    }
   case 0:
    {
     $$sink = 1;
     break;
    }
   default:
    $$sink = $45;
   }
   $$175 = $$175 + $$sink | 0;
   $storemerge = (HEAP32[$7 >> 2] | 0) + 4 | 0;
  }
  if ((label | 0) == 15) {
   HEAP32[$4 >> 2] = $$175;
   $$172$ph = 2;
   label = 29;
   break;
  } else if ((label | 0) == 16) {
   HEAP32[$4 >> 2] = $$175;
   $$172$ph = 1;
   label = 29;
   break;
  } else if ((label | 0) == 19) {
   HEAP32[$4 >> 2] = $$175;
   $$172$ph = ($$175 | 0) != ($3 | 0) & 1;
   label = 29;
   break;
  }
 } else if ((label | 0) == 30) {
  $70 = HEAP32[$4 >> 2] | 0;
  label = 33;
 } while (0);
 if ((label | 0) == 29) $$273 = $$172$ph; else if ((label | 0) == 33) $$273 = ($70 | 0) != ($3 | 0) & 1;
 STACKTOP = sp;
 return $$273 | 0;
}

function __ZNK12_GLOBAL__N_116itanium_demangle8FoldExpr9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phi22Z2D = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $23 = 0, $27 = 0, $3 = 0, $32 = 0, $33 = 0, $37 = 0, $38 = 0, $4 = 0, $43 = 0, $44 = 0, $48 = 0, $5 = 0, $51 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $tmpcast18$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $tmpcast18$byval_copy = sp + 56 | 0;
 $2 = sp + 32 | 0;
 $3 = sp + 24 | 0;
 $4 = sp + 48 | 0;
 $5 = sp + 16 | 0;
 $6 = sp + 8 | 0;
 $7 = sp + 40 | 0;
 $8 = sp;
 HEAP32[$2 >> 2] = $1;
 HEAP32[$2 + 4 >> 2] = $0;
 __ZN12_GLOBAL__N_112OutputStreampLEc($1, 40);
 if (!(HEAP8[$0 + 24 >> 0] | 0)) {
  __ZZNK12_GLOBAL__N_116itanium_demangle8FoldExpr9printLeftERNS_12OutputStreamEENKUlvE_clEv($2);
  __ZN12_GLOBAL__N_112OutputStreampLEc($1, 32);
  $37 = $0 + 16 | 0;
  $38 = $37;
  $43 = HEAP32[$38 + 4 >> 2] | 0;
  $44 = $6;
  HEAP32[$44 >> 2] = HEAP32[$38 >> 2];
  HEAP32[$44 + 4 >> 2] = $43;
  HEAP32[$tmpcast18$byval_copy >> 2] = HEAP32[$6 >> 2];
  HEAP32[$tmpcast18$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast18$byval_copy);
  __ZN12_GLOBAL__N_110StringViewC2EPKc($7, 54862);
  HEAP32[$tmpcast18$byval_copy >> 2] = HEAP32[$7 >> 2];
  HEAP32[$tmpcast18$byval_copy + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast18$byval_copy);
  $48 = $0 + 12 | 0;
  if (HEAP32[$48 >> 2] | 0) {
   __ZN12_GLOBAL__N_112OutputStreampLEc($1, 32);
   $51 = $37;
   $56 = HEAP32[$51 + 4 >> 2] | 0;
   $57 = $8;
   HEAP32[$57 >> 2] = HEAP32[$51 >> 2];
   HEAP32[$57 + 4 >> 2] = $56;
   HEAP32[$tmpcast18$byval_copy >> 2] = HEAP32[$8 >> 2];
   HEAP32[$tmpcast18$byval_copy + 4 >> 2] = HEAP32[$8 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast18$byval_copy);
   __ZN12_GLOBAL__N_112OutputStreampLEc($1, 32);
   __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$48 >> 2] | 0, $1);
  }
 } else {
  $14 = HEAP32[$0 + 12 >> 2] | 0;
  if (!$14) $$pre$phi22Z2D = $0 + 16 | 0; else {
   __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($14, $1);
   __ZN12_GLOBAL__N_112OutputStreampLEc($1, 32);
   $16 = $0 + 16 | 0;
   $17 = $16;
   $22 = HEAP32[$17 + 4 >> 2] | 0;
   $23 = $3;
   HEAP32[$23 >> 2] = HEAP32[$17 >> 2];
   HEAP32[$23 + 4 >> 2] = $22;
   HEAP32[$tmpcast18$byval_copy >> 2] = HEAP32[$3 >> 2];
   HEAP32[$tmpcast18$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast18$byval_copy);
   __ZN12_GLOBAL__N_112OutputStreampLEc($1, 32);
   $$pre$phi22Z2D = $16;
  }
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 54857);
  HEAP32[$tmpcast18$byval_copy >> 2] = HEAP32[$4 >> 2];
  HEAP32[$tmpcast18$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast18$byval_copy);
  $27 = $$pre$phi22Z2D;
  $32 = HEAP32[$27 + 4 >> 2] | 0;
  $33 = $5;
  HEAP32[$33 >> 2] = HEAP32[$27 >> 2];
  HEAP32[$33 + 4 >> 2] = $32;
  HEAP32[$tmpcast18$byval_copy >> 2] = HEAP32[$5 >> 2];
  HEAP32[$tmpcast18$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast18$byval_copy);
  __ZN12_GLOBAL__N_112OutputStreampLEc($1, 32);
  __ZZNK12_GLOBAL__N_116itanium_demangle8FoldExpr9printLeftERNS_12OutputStreamEENKUlvE_clEv($2);
 }
 __ZN12_GLOBAL__N_112OutputStreampLEc($1, 41);
 STACKTOP = sp;
 return;
}

function __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryEPKh($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i$add$i$i = 0, $$0$i$i$idx$i$i = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $14 = 0, $19 = 0, $2 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $39 = 0, $4 = 0, $41 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $54 = 0, $55 = 0, $59 = 0, $6 = 0, $66 = 0, $67 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 8 | 0;
 $$byval_copy1 = sp + 32 | 0;
 $$byval_copy = sp + 28 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 20 | 0;
 $4 = sp + 16 | 0;
 $5 = sp;
 $6 = $0 + 8 | 0;
 if (!(HEAP32[$6 >> 2] | 0)) {
  $14 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36082) | 0, 33262) | 0, 39072) | 0, 405) | 0, 39079) | 0, 36117) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $14 + (HEAP32[(HEAP32[$14 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $19 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 66512) | 0;
  $23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$19 >> 2] | 0) + 28 >> 2] & 127]($19, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($14, $23) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($14) | 0;
  _abort();
 }
 HEAP32[$0 + 100 >> 2] = 0;
 $25 = $0 + 72 | 0;
 $27 = $0 + 76 | 0;
 HEAP32[$27 >> 2] = HEAP32[$25 >> 2];
 $28 = $0 + 84 | 0;
 $29 = $0 + 88 | 0;
 $32 = HEAP32[$29 >> 2] | 0;
 while (1) {
  $30 = HEAP32[$28 >> 2] | 0;
  $33 = $30;
  if (($30 | 0) == ($32 | 0)) break;
  $35 = $32 - $33 | 0;
  if (($35 | 0) > 8) {
   $38 = $32 + -8 | 0;
   $39 = $30;
   $41 = HEAP32[$39 >> 2] | 0;
   $44 = HEAP32[$39 + 4 >> 2] | 0;
   $45 = $$byval_copy2;
   HEAP32[$45 >> 2] = $41;
   HEAP32[$45 + 4 >> 2] = $44;
   $49 = $38;
   $54 = HEAP32[$49 + 4 >> 2] | 0;
   $55 = $30;
   HEAP32[$55 >> 2] = HEAP32[$49 >> 2];
   HEAP32[$55 + 4 >> 2] = $54;
   $59 = $38;
   HEAP32[$59 >> 2] = $41;
   HEAP32[$59 + 4 >> 2] = $44;
   __ZN6vision17PriorityQueueItemILi96EED2Ev($$byval_copy2);
   HEAP32[$2 >> 2] = $33;
   HEAP32[$3 >> 2] = $38;
   HEAP32[$4 >> 2] = $33;
   HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
   __ZNSt3__211__sift_downIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_($$byval_copy, $$byval_copy1, $5, ($35 >>> 3) + -1 | 0, $$byval_copy2);
   $66 = HEAP32[$29 >> 2] | 0;
  } else $66 = $32;
  $$0$i$i$idx$i$i = 0;
  while (1) {
   if (($$0$i$i$idx$i$i | 0) == -1) break;
   $$0$i$i$add$i$i = $$0$i$i$idx$i$i + -1 | 0;
   __ZN6vision17PriorityQueueItemILi96EED2Ev($66 + ($$0$i$i$add$i$i << 3) | 0);
   $$0$i$i$idx$i$i = $$0$i$i$add$i$i;
  }
  $67 = $66 + -8 | 0;
  HEAP32[$29 >> 2] = $67;
  $32 = $67;
 }
 __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh($0, $28, HEAP32[$6 >> 2] | 0, $1);
 STACKTOP = sp;
 return (HEAP32[$27 >> 2] | 0) - (HEAP32[$25 >> 2] | 0) >> 2 | 0;
}

function __ZNK6vision21HoughSimilarityVoting17mapCorrespondenceERfS1_S1_S1_ffffffff($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 $6 = +$6;
 $7 = +$7;
 $8 = +$8;
 $9 = +$9;
 $10 = +$10;
 $11 = +$11;
 $12 = +$12;
 var $$sink = 0.0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $23 = 0.0, $24 = 0.0, $31 = 0, $36 = 0, $40 = 0, $47 = 0, $52 = 0, $56 = 0, $57 = 0.0, $60 = 0.0, $64 = 0.0, $67 = 0.0, $71 = 0.0, $74 = 0.0, $79 = 0, $82 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $13 = sp + 16 | 0;
 $14 = sp;
 $15 = $7 - $11;
 HEAPF32[$3 >> 2] = $15;
 $16 = $15;
 if (!($16 <= -3.141592653589793)) if ($16 > 3.141592653589793) {
  $$sink = $16 + -6.283185307179586;
  label = 5;
 } else $24 = $15; else {
  $$sink = $16 + 6.283185307179586;
  label = 5;
 }
 if ((label | 0) == 5) {
  HEAPF32[$3 >> 2] = $$sink;
  $24 = $$sink;
 }
 $23 = $24;
 if (!($23 > -3.141592653589793)) {
  $31 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36444) | 0, 36227) | 0, 39072) | 0, 468) | 0, 39079) | 0, 36479) | 0;
  __ZNKSt3__28ios_base6getlocEv($13, $31 + (HEAP32[(HEAP32[$31 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $36 = __ZNKSt3__26locale9use_facetERNS0_2idE($13, 66512) | 0;
  $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$36 >> 2] | 0) + 28 >> 2] & 127]($36, 10) | 0;
  __ZNSt3__26localeD2Ev($13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($31, $40) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($31) | 0;
  _abort();
 }
 if (!($23 <= 3.141592653589793)) {
  $47 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36498) | 0, 36227) | 0, 39072) | 0, 469) | 0, 39079) | 0, 36479) | 0;
  __ZNKSt3__28ios_base6getlocEv($13, $47 + (HEAP32[(HEAP32[$47 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $52 = __ZNKSt3__26locale9use_facetERNS0_2idE($13, 66512) | 0;
  $56 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$52 >> 2] | 0) + 28 >> 2] & 127]($52, 10) | 0;
  __ZNSt3__26localeD2Ev($13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($47, $56) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($47) | 0;
  _abort();
 } else {
  $57 = +__ZN6vision12SafeDivisionIfEET_S1_S1_($8, $12);
  HEAPF32[$4 >> 2] = $57;
  __ZN6vision13Similarity2x2IfEEvPT_S1_S1_($14, +HEAPF32[$3 >> 2], $57);
  $60 = +Math_log(+(+HEAPF32[$4 >> 2]));
  HEAPF32[$4 >> 2] = $60 * +HEAPF32[$0 + 48 >> 2];
  $64 = +HEAPF32[$14 >> 2];
  $67 = +HEAPF32[$14 + 4 >> 2];
  $71 = +HEAPF32[$14 + 8 >> 2];
  $74 = +HEAPF32[$14 + 12 >> 2];
  $79 = $0 + 8 | 0;
  $82 = $0 + 12 | 0;
  HEAPF32[$1 >> 2] = $5 - ($64 * $9 + $67 * $10) + ($64 * +HEAPF32[$79 >> 2] + $67 * +HEAPF32[$82 >> 2]);
  HEAPF32[$2 >> 2] = $6 - ($71 * $9 + $74 * $10) + ($71 * +HEAPF32[$79 >> 2] + $74 * +HEAPF32[$82 >> 2]);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$9 = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink107 = 0, $10 = 0, $104 = 0, $11 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $39 = 0, $45 = 0, $52 = 0, $54 = 0, $61 = 0, $71 = 0, $78 = 0, $80 = 0, $82 = 0, $88 = 0, $91 = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 if ($7 & 4) {
  $10 = HEAP32[$2 >> 2] | 0;
  $11 = $1;
  if (((($11 - $10 | 0) > 2 ? (HEAP8[$10 >> 0] | 0) == -17 : 0) ? (HEAP8[$10 + 1 >> 0] | 0) == -69 : 0) ? (HEAP8[$10 + 2 >> 0] | 0) == -65 : 0) {
   HEAP32[$2 >> 2] = $10 + 3;
   $$pre$phiZ2D = $11;
  } else $$pre$phiZ2D = $11;
 } else $$pre$phiZ2D = $1;
 L9 : while (1) {
  $24 = HEAP32[$2 >> 2] | 0;
  if ($24 >>> 0 >= $1 >>> 0) {
   $$9 = 0;
   break;
  }
  $26 = HEAP32[$5 >> 2] | 0;
  if ($26 >>> 0 >= $4 >>> 0) {
   $$9 = 1;
   break;
  }
  $28 = HEAP8[$24 >> 0] | 0;
  $29 = $28 & 255;
  do if ($28 << 24 >> 24 > -1) if ($29 >>> 0 > $6 >>> 0) {
   $$9 = 2;
   break L9;
  } else {
   $$sink = $29;
   $$sink107 = 1;
  } else {
   if (($28 & 255) < 194) {
    $$9 = 2;
    break L9;
   }
   if (($28 & 255) < 224) {
    if (($$pre$phiZ2D - $24 | 0) < 2) {
     $$9 = 1;
     break L9;
    }
    $39 = HEAPU8[$24 + 1 >> 0] | 0;
    if (($39 & 192 | 0) != 128) {
     $$9 = 2;
     break L9;
    }
    $45 = $39 & 63 | $29 << 6 & 1984;
    if ($45 >>> 0 > $6 >>> 0) {
     $$9 = 2;
     break L9;
    } else {
     $$sink = $45;
     $$sink107 = 2;
     break;
    }
   }
   if (($28 & 255) < 240) {
    if (($$pre$phiZ2D - $24 | 0) < 3) {
     $$9 = 1;
     break L9;
    }
    $52 = HEAP8[$24 + 1 >> 0] | 0;
    $54 = HEAP8[$24 + 2 >> 0] | 0;
    switch ($28 << 24 >> 24) {
    case -32:
     {
      if (($52 & -32) << 24 >> 24 != -96) {
       $$9 = 2;
       break L9;
      }
      break;
     }
    case -19:
     {
      if (($52 & -32) << 24 >> 24 != -128) {
       $$9 = 2;
       break L9;
      }
      break;
     }
    default:
     if (($52 & -64) << 24 >> 24 != -128) {
      $$9 = 2;
      break L9;
     }
    }
    $61 = $54 & 255;
    if (($61 & 192 | 0) != 128) {
     $$9 = 2;
     break L9;
    }
    $71 = ($52 & 63) << 6 | $29 << 12 & 61440 | $61 & 63;
    if ($71 >>> 0 > $6 >>> 0) {
     $$9 = 2;
     break L9;
    } else {
     $$sink = $71;
     $$sink107 = 3;
     break;
    }
   }
   if (($28 & 255) >= 245) {
    $$9 = 2;
    break L9;
   }
   if (($$pre$phiZ2D - $24 | 0) < 4) {
    $$9 = 1;
    break L9;
   }
   $78 = HEAP8[$24 + 1 >> 0] | 0;
   $80 = HEAP8[$24 + 2 >> 0] | 0;
   $82 = HEAP8[$24 + 3 >> 0] | 0;
   switch ($28 << 24 >> 24) {
   case -16:
    {
     if (($78 + 112 & 255) >= 48) {
      $$9 = 2;
      break L9;
     }
     break;
    }
   case -12:
    {
     if (($78 & -16) << 24 >> 24 != -128) {
      $$9 = 2;
      break L9;
     }
     break;
    }
   default:
    if (($78 & -64) << 24 >> 24 != -128) {
     $$9 = 2;
     break L9;
    }
   }
   $88 = $80 & 255;
   if (($88 & 192 | 0) != 128) {
    $$9 = 2;
    break L9;
   }
   $91 = $82 & 255;
   if (($91 & 192 | 0) != 128) {
    $$9 = 2;
    break L9;
   }
   $104 = ($78 & 63) << 12 | $29 << 18 & 1835008 | $88 << 6 & 4032 | $91 & 63;
   if ($104 >>> 0 > $6 >>> 0) {
    $$9 = 2;
    break L9;
   } else {
    $$sink = $104;
    $$sink107 = 4;
   }
  } while (0);
  HEAP32[$26 >> 2] = $$sink;
  HEAP32[$2 >> 2] = $24 + $$sink107;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 4;
 }
 return $$9 | 0;
}

function _create_colorindex($0) {
 $0 = $0 | 0;
 var $$06274 = 0, $$06274$us = 0, $$06377 = 0, $$06377$us = 0, $$06476 = 0, $$06476$us = 0, $$06573 = 0, $$06573$us = 0, $$06772 = 0, $$06772$us = 0, $$1$lcssa = 0, $$1$lcssa$us = 0, $$166$lcssa = 0, $$166$lcssa$us = 0, $$16875$us = 0, $$170 = 0, $$170$us = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $44 = 0, $47 = 0, $5 = 0, $52 = 0, $54 = 0, $58 = 0, $59 = 0, $61 = 0, $62 = 0, $63 = 0, $65 = 0, $68 = 0, $73 = 0, $76 = 0, $79 = 0;
 $2 = HEAP32[$0 + 484 >> 2] | 0;
 $5 = (HEAP32[$0 + 88 >> 2] | 0) == 1;
 HEAP32[$2 + 28 >> 2] = $5 & 1;
 $12 = $0 + 120 | 0;
 $14 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$0 + 4 >> 2] | 0) + 8 >> 2] & 15]($0, 1, $5 ? 766 : 256, HEAP32[$12 >> 2] | 0) | 0;
 $15 = $2 + 24 | 0;
 HEAP32[$15 >> 2] = $14;
 $17 = HEAP32[$2 + 20 >> 2] | 0;
 if ((HEAP32[$12 >> 2] | 0) <= 0) return;
 if (!$5) {
  $$06377 = $17;
  $$06476 = 0;
  $61 = $14;
  while (1) {
   $58 = HEAP32[$2 + 32 + ($$06476 << 2) >> 2] | 0;
   $59 = ($$06377 | 0) / ($58 | 0) | 0;
   $62 = HEAP32[$61 + ($$06476 << 2) >> 2] | 0;
   $63 = $58 + -1 | 0;
   $65 = $63 << 1;
   $$06274 = 0;
   $$06573 = ($58 + 254 | 0) / ($65 | 0) | 0;
   $$06772 = 0;
   while (1) {
    if (($$06772 | 0) > ($$06573 | 0)) {
     $$170 = $$06274;
     while (1) {
      $68 = $$170 + 1 | 0;
      $73 = ((($68 << 1 | 1) * 255 | 0) + $63 | 0) / ($65 | 0) | 0;
      if (($$06772 | 0) > ($73 | 0)) $$170 = $68; else {
       $$1$lcssa = $68;
       $$166$lcssa = $73;
       break;
      }
     }
    } else {
     $$1$lcssa = $$06274;
     $$166$lcssa = $$06573;
    }
    $76 = (Math_imul($$1$lcssa, $59) | 0) & 255;
    HEAP8[$62 + $$06772 >> 0] = $76;
    $$06772 = $$06772 + 1 | 0;
    if (($$06772 | 0) == 256) break; else {
     $$06274 = $$1$lcssa;
     $$06573 = $$166$lcssa;
    }
   }
   $79 = $$06476 + 1 | 0;
   if (($79 | 0) >= (HEAP32[$12 >> 2] | 0)) break;
   $$06377 = $59;
   $$06476 = $79;
   $61 = HEAP32[$15 >> 2] | 0;
  }
  return;
 }
 $$06377$us = $17;
 $$06476$us = 0;
 $24 = $14;
 while (1) {
  $21 = HEAP32[$2 + 32 + ($$06476$us << 2) >> 2] | 0;
  $22 = ($$06377$us | 0) / ($21 | 0) | 0;
  $23 = $24 + ($$06476$us << 2) | 0;
  HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 255;
  $29 = HEAP32[(HEAP32[$15 >> 2] | 0) + ($$06476$us << 2) >> 2] | 0;
  $30 = $21 + -1 | 0;
  $32 = $30 << 1;
  $$06274$us = 0;
  $$06573$us = ($21 + 254 | 0) / ($32 | 0) | 0;
  $$06772$us = 0;
  while (1) {
   if (($$06772$us | 0) > ($$06573$us | 0)) {
    $$170$us = $$06274$us;
    while (1) {
     $47 = $$170$us + 1 | 0;
     $52 = ((($47 << 1 | 1) * 255 | 0) + $30 | 0) / ($32 | 0) | 0;
     if (($$06772$us | 0) > ($52 | 0)) $$170$us = $47; else {
      $$1$lcssa$us = $47;
      $$166$lcssa$us = $52;
      break;
     }
    }
   } else {
    $$1$lcssa$us = $$06274$us;
    $$166$lcssa$us = $$06573$us;
   }
   $44 = (Math_imul($$1$lcssa$us, $22) | 0) & 255;
   HEAP8[$29 + $$06772$us >> 0] = $44;
   $$06772$us = $$06772$us + 1 | 0;
   if (($$06772$us | 0) == 256) break; else {
    $$06274$us = $$1$lcssa$us;
    $$06573$us = $$166$lcssa$us;
   }
  }
  $34 = $29 + 255 | 0;
  $$16875$us = 1;
  do {
   HEAP8[$29 + (0 - $$16875$us) >> 0] = HEAP8[$29 >> 0] | 0;
   HEAP8[$29 + ($$16875$us + 255) >> 0] = HEAP8[$34 >> 0] | 0;
   $$16875$us = $$16875$us + 1 | 0;
  } while (($$16875$us | 0) != 256);
  $54 = $$06476$us + 1 | 0;
  if (($54 | 0) >= (HEAP32[$12 >> 2] | 0)) break;
  $$06377$us = $22;
  $$06476$us = $54;
  $24 = HEAP32[$15 >> 2] | 0;
 }
 return;
}

function _jpeg_idct_3x3($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $101 = 0, $103 = 0, $105 = 0, $107 = 0, $109 = 0, $110 = 0, $111 = 0, $130 = 0, $133 = 0, $135 = 0, $136 = 0, $137 = 0, $15 = 0, $157 = 0, $160 = 0, $162 = 0, $163 = 0, $166 = 0, $22 = 0, $23 = 0, $24 = 0, $31 = 0, $33 = 0, $38 = 0, $47 = 0, $5 = 0, $54 = 0, $55 = 0, $56 = 0, $63 = 0, $65 = 0, $69 = 0, $7 = 0, $79 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $97 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $9 = HEAP32[$1 + 84 >> 2] | 0;
 $15 = Math_imul(HEAP16[$2 >> 1] << 13, HEAP32[$9 >> 2] | 0) | 0 | 1024;
 $22 = Math_imul((HEAP16[$2 + 32 >> 1] | 0) * 5793 | 0, HEAP32[$9 + 64 >> 2] | 0) | 0;
 $23 = $22 + $15 | 0;
 $24 = (Math_imul($22, -2) | 0) + $15 | 0;
 $31 = Math_imul((HEAP16[$2 + 16 >> 1] | 0) * 10033 | 0, HEAP32[$9 + 32 >> 2] | 0) | 0;
 $33 = $31 + $23 >> 11;
 HEAP32[$5 >> 2] = $33;
 HEAP32[$5 + 24 >> 2] = $23 - $31 >> 11;
 $38 = $5 + 12 | 0;
 HEAP32[$38 >> 2] = $24 >> 11;
 $47 = Math_imul(HEAP16[$2 + 2 >> 1] << 13, HEAP32[$9 + 4 >> 2] | 0) | 0 | 1024;
 $54 = Math_imul((HEAP16[$2 + 34 >> 1] | 0) * 5793 | 0, HEAP32[$9 + 68 >> 2] | 0) | 0;
 $55 = $54 + $47 | 0;
 $56 = (Math_imul($54, -2) | 0) + $47 | 0;
 $63 = Math_imul((HEAP16[$2 + 18 >> 1] | 0) * 10033 | 0, HEAP32[$9 + 36 >> 2] | 0) | 0;
 $65 = $63 + $55 >> 11;
 HEAP32[$5 + 4 >> 2] = $65;
 HEAP32[$5 + 28 >> 2] = $55 - $63 >> 11;
 $69 = $56 >> 11;
 HEAP32[$5 + 16 >> 2] = $69;
 $79 = Math_imul(HEAP16[$2 + 4 >> 1] << 13, HEAP32[$9 + 8 >> 2] | 0) | 0 | 1024;
 $86 = Math_imul((HEAP16[$2 + 36 >> 1] | 0) * 5793 | 0, HEAP32[$9 + 72 >> 2] | 0) | 0;
 $87 = $86 + $79 | 0;
 $88 = (Math_imul($86, -2) | 0) + $79 | 0;
 $95 = Math_imul((HEAP16[$2 + 20 >> 1] | 0) * 10033 | 0, HEAP32[$9 + 40 >> 2] | 0) | 0;
 $97 = $95 + $87 >> 11;
 HEAP32[$5 + 8 >> 2] = $97;
 $99 = $87 - $95 >> 11;
 HEAP32[$5 + 32 >> 2] = $99;
 $101 = $88 >> 11;
 HEAP32[$5 + 20 >> 2] = $101;
 $103 = $7 + -384 | 0;
 $105 = (HEAP32[$3 >> 2] | 0) + $4 | 0;
 $107 = ($33 << 13) + 134348800 | 0;
 $109 = $107 + ($97 * 5793 | 0) | 0;
 $110 = (Math_imul($97, -11586) | 0) + $107 | 0;
 $111 = $65 * 10033 | 0;
 HEAP8[$105 >> 0] = HEAP8[$103 + (($109 + $111 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$105 + 2 >> 0] = HEAP8[$103 + (($109 - $111 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$105 + 1 >> 0] = HEAP8[$103 + ($110 >>> 18 & 1023) >> 0] | 0;
 $130 = (HEAP32[$3 + 4 >> 2] | 0) + $4 | 0;
 $133 = (HEAP32[$38 >> 2] << 13) + 134348800 | 0;
 $135 = $133 + ($101 * 5793 | 0) | 0;
 $136 = (Math_imul($101, -11586) | 0) + $133 | 0;
 $137 = $69 * 10033 | 0;
 HEAP8[$130 >> 0] = HEAP8[$103 + (($135 + $137 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$130 + 2 >> 0] = HEAP8[$103 + (($135 - $137 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$130 + 1 >> 0] = HEAP8[$103 + ($136 >>> 18 & 1023) >> 0] | 0;
 $157 = (HEAP32[$3 + 8 >> 2] | 0) + $4 | 0;
 $160 = (HEAP32[$5 + 24 >> 2] << 13) + 134348800 | 0;
 $162 = $160 + ($99 * 5793 | 0) | 0;
 $163 = (Math_imul($99, -11586) | 0) + $160 | 0;
 $166 = (HEAP32[$5 + 28 >> 2] | 0) * 10033 | 0;
 HEAP8[$157 >> 0] = HEAP8[$103 + (($162 + $166 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$157 + 2 >> 0] = HEAP8[$103 + (($162 - $166 | 0) >>> 18 & 1023) >> 0] | 0;
 HEAP8[$157 + 1 >> 0] = HEAP8[$103 + ($163 >>> 18 & 1023) >> 0] | 0;
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$6 = 0, $12 = 0, $17 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $2 = sp + 16 | 0;
 $3 = sp + 12 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 do if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 73) | 0) {
  $7 = $0 + 288 | 0;
  if ($1) __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE5clearEv($7);
  $8 = $0 + 8 | 0;
  $9 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($8) | 0;
  while (1) {
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
    label = 16;
    break;
   }
   if ($1) {
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EEC2EOS4_($2, $7);
    $12 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseTemplateArgEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
    HEAP32[$3 >> 2] = $12;
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EEaSEOS4_($7, $2);
    if (!$12) {
     label = 12;
     break;
    }
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($8, $3);
    HEAP32[$4 >> 2] = $12;
    if ((__ZNK12_GLOBAL__N_116itanium_demangle4Node7getKindEv($12) | 0) << 24 >> 24 == 28) {
     __ZNK12_GLOBAL__N_116itanium_demangle20TemplateArgumentPack11getElementsEv($5, $12);
     $17 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13ParameterPackEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0, $5) | 0;
     HEAP32[$4 >> 2] = $17;
    }
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE9push_backERKS3_($7, $4);
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EED2Ev($2);
   } else {
    $19 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseTemplateArgEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
    HEAP32[$2 >> 2] = $19;
    if (!$19) {
     label = 15;
     break;
    }
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($8, $2);
   }
  }
  if ((label | 0) == 12) {
   __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EED2Ev($2);
   $$6 = 0;
   break;
  } else if ((label | 0) == 15) {
   $$6 = 0;
   break;
  } else if ((label | 0) == 16) {
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($2, $0, $9);
   $$6 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12TemplateArgsEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0, $2) | 0;
   break;
  }
 } else $$6 = 0; while (0);
 STACKTOP = sp;
 return $$6 | 0;
}

function _icpGetJ_Xc_S($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0108 = 0, $$0109 = 0, $104 = 0.0, $11 = 0, $111 = 0.0, $118 = 0.0, $12 = 0.0, $128 = 0, $134 = 0.0, $135 = 0.0, $15 = 0, $17 = 0, $18 = 0.0, $24 = 0, $26 = 0.0, $28 = 0, $32 = 0, $4 = 0, $40 = 0, $43 = 0, $45 = 0.0, $48 = 0, $5 = 0, $56 = 0.0, $60 = 0.0, $63 = 0.0, $70 = 0.0, $80 = 0.0, $87 = 0.0, $9 = 0, $94 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(864);
 $4 = sp + 576 | 0;
 $5 = sp;
 $9 = $2 + 8 | 0;
 $11 = $3 + 8 | 0;
 $12 = +HEAPF64[$11 >> 3];
 $15 = $2 + 16 | 0;
 $17 = $3 + 16 | 0;
 $18 = +HEAPF64[$17 >> 3];
 HEAPF64[$1 >> 3] = +HEAPF64[$2 + 24 >> 3] + (+HEAPF64[$2 >> 3] * +HEAPF64[$3 >> 3] + +HEAPF64[$9 >> 3] * $12 + +HEAPF64[$15 >> 3] * $18);
 $24 = $2 + 32 | 0;
 $26 = +HEAPF64[$3 >> 3];
 $28 = $2 + 40 | 0;
 $32 = $2 + 48 | 0;
 HEAPF64[$1 + 8 >> 3] = +HEAPF64[$2 + 56 >> 3] + (+HEAPF64[$24 >> 3] * $26 + $12 * +HEAPF64[$28 >> 3] + $18 * +HEAPF64[$32 >> 3]);
 $40 = $2 + 64 | 0;
 $43 = $2 + 72 | 0;
 $45 = +HEAPF64[$11 >> 3];
 $48 = $2 + 80 | 0;
 HEAPF64[$1 + 16 >> 3] = +HEAPF64[$2 + 88 >> 3] + ($26 * +HEAPF64[$40 >> 3] + +HEAPF64[$43 >> 3] * $45 + $18 * +HEAPF64[$48 >> 3]);
 $56 = +HEAPF64[$2 >> 3];
 HEAPF64[$4 >> 3] = $26 * $56;
 HEAPF64[$4 + 8 >> 3] = $45 * $56;
 $60 = +HEAPF64[$17 >> 3];
 HEAPF64[$4 + 16 >> 3] = $56 * $60;
 $63 = +HEAPF64[$9 >> 3];
 HEAPF64[$4 + 24 >> 3] = $26 * $63;
 HEAPF64[$4 + 32 >> 3] = $45 * $63;
 HEAPF64[$4 + 40 >> 3] = $60 * $63;
 $70 = +HEAPF64[$15 >> 3];
 HEAPF64[$4 + 48 >> 3] = $26 * $70;
 HEAPF64[$4 + 56 >> 3] = $45 * $70;
 HEAPF64[$4 + 64 >> 3] = $60 * $70;
 HEAPF64[$4 + 72 >> 3] = $56;
 HEAPF64[$4 + 80 >> 3] = $63;
 HEAPF64[$4 + 88 >> 3] = $70;
 $80 = +HEAPF64[$24 >> 3];
 HEAPF64[$4 + 96 >> 3] = $26 * $80;
 HEAPF64[$4 + 104 >> 3] = $45 * $80;
 HEAPF64[$4 + 112 >> 3] = $60 * $80;
 $87 = +HEAPF64[$28 >> 3];
 HEAPF64[$4 + 120 >> 3] = $26 * $87;
 HEAPF64[$4 + 128 >> 3] = $45 * $87;
 HEAPF64[$4 + 136 >> 3] = $60 * $87;
 $94 = +HEAPF64[$32 >> 3];
 HEAPF64[$4 + 144 >> 3] = $26 * $94;
 HEAPF64[$4 + 152 >> 3] = $45 * $94;
 HEAPF64[$4 + 160 >> 3] = $60 * $94;
 HEAPF64[$4 + 168 >> 3] = $80;
 HEAPF64[$4 + 176 >> 3] = $87;
 HEAPF64[$4 + 184 >> 3] = $94;
 $104 = +HEAPF64[$40 >> 3];
 HEAPF64[$4 + 192 >> 3] = $26 * $104;
 HEAPF64[$4 + 200 >> 3] = $45 * $104;
 HEAPF64[$4 + 208 >> 3] = $60 * $104;
 $111 = +HEAPF64[$43 >> 3];
 HEAPF64[$4 + 216 >> 3] = $26 * $111;
 HEAPF64[$4 + 224 >> 3] = $45 * $111;
 HEAPF64[$4 + 232 >> 3] = $60 * $111;
 $118 = +HEAPF64[$48 >> 3];
 HEAPF64[$4 + 240 >> 3] = $26 * $118;
 HEAPF64[$4 + 248 >> 3] = $45 * $118;
 HEAPF64[$4 + 256 >> 3] = $60 * $118;
 HEAPF64[$4 + 264 >> 3] = $104;
 HEAPF64[$4 + 272 >> 3] = $111;
 HEAPF64[$4 + 280 >> 3] = $118;
 _icpGetJ_T_S($5);
 $$0108 = 0;
 while (1) {
  if (($$0108 | 0) == 3) break;
  $$0109 = 0;
  while (1) {
   if (($$0109 | 0) == 6) break;
   $128 = $0 + ($$0108 * 48 | 0) + ($$0109 << 3) | 0;
   HEAPF64[$128 >> 3] = 0.0;
   $$0 = 0;
   $135 = 0.0;
   while (1) {
    if (($$0 | 0) == 12) break;
    $134 = $135 + +HEAPF64[$4 + ($$0108 * 96 | 0) + ($$0 << 3) >> 3] * +HEAPF64[$5 + ($$0 * 48 | 0) + ($$0109 << 3) >> 3];
    HEAPF64[$128 >> 3] = $134;
    $$0 = $$0 + 1 | 0;
    $135 = $134;
   }
   $$0109 = $$0109 + 1 | 0;
  }
  $$0108 = $$0108 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function _jpeg_start_decompress($0) {
 $0 = $0 | 0;
 var $$2 = 0, $$pre38$i = 0, $$pre38$i39 = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $34 = 0, $42 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $52 = 0, $56 = 0, $59 = 0, $6 = 0, $61 = 0, $67 = 0, $69 = 0, $81 = 0, label = 0;
 $1 = $0 + 20 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 L1 : do switch ($2 | 0) {
 case 202:
  {
   _jinit_master_decompress($0);
   if (!(HEAP32[$0 + 64 >> 2] | 0)) {
    HEAP32[$1 >> 2] = 203;
    label = 6;
    break L1;
   }
   HEAP32[$1 >> 2] = 207;
   $$2 = 1;
   return $$2 | 0;
  }
 case 203:
  {
   label = 6;
   break;
  }
 case 204:
  {
   $$pre38$i39 = $0 + 444 | 0;
   break;
  }
 default:
  {
   $34 = HEAP32[$0 >> 2] | 0;
   HEAP32[$34 + 20 >> 2] = 21;
   HEAP32[$34 + 24 >> 2] = $2;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   label = 17;
  }
 } while (0);
 if ((label | 0) == 6) {
  $6 = $0 + 460 | 0;
  L11 : do if (HEAP32[(HEAP32[$6 >> 2] | 0) + 16 >> 2] | 0) {
   $11 = $0 + 8 | 0;
   $12 = $0 + 332 | 0;
   $14 = HEAP32[$11 >> 2] | 0;
   L13 : while (1) {
    if ($14 | 0) FUNCTION_TABLE_vi[HEAP32[$14 >> 2] & 255]($0);
    $18 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$6 >> 2] >> 2] & 127]($0) | 0;
    switch ($18 | 0) {
    case 2:
     {
      break L11;
      break;
     }
    case 0:
     {
      $$2 = $18;
      break L13;
      break;
     }
    default:
     {}
    }
    $19 = HEAP32[$11 >> 2] | 0;
    if (($18 | 2 | 0) == 3 & ($19 | 0) != 0 ? ($23 = $19 + 4 | 0, $25 = (HEAP32[$23 >> 2] | 0) + 1 | 0, HEAP32[$23 >> 2] = $25, $26 = $19 + 8 | 0, $27 = HEAP32[$26 >> 2] | 0, ($25 | 0) >= ($27 | 0)) : 0) HEAP32[$26 >> 2] = (HEAP32[$12 >> 2] | 0) + $27;
    $14 = $19;
   }
   return $$2 | 0;
  } while (0);
  HEAP32[$0 + 152 >> 2] = HEAP32[$0 + 144 >> 2];
  label = 17;
 }
 if ((label | 0) == 17) {
  $$pre38$i = $0 + 444 | 0;
  if ((HEAP32[$1 >> 2] | 0) == 204) $$pre38$i39 = $$pre38$i; else {
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$$pre38$i >> 2] >> 2] & 255]($0);
   HEAP32[$0 + 140 >> 2] = 0;
   HEAP32[$1 >> 2] = 204;
   $$pre38$i39 = $$pre38$i;
  }
 }
 $42 = HEAP32[$$pre38$i39 >> 2] | 0;
 L29 : do if (HEAP32[$42 + 8 >> 2] | 0) {
  $46 = $0 + 140 | 0;
  $47 = $0 + 116 | 0;
  $48 = $0 + 8 | 0;
  $49 = $0 + 448 | 0;
  $52 = HEAP32[$46 >> 2] | 0;
  $81 = $42;
  L31 : while (1) {
   $50 = HEAP32[$47 >> 2] | 0;
   if ($52 >>> 0 < $50 >>> 0) {
    $59 = $52;
    $61 = $50;
    do {
     $56 = HEAP32[$48 >> 2] | 0;
     if (!$56) $67 = $59; else {
      HEAP32[$56 + 4 >> 2] = $59;
      HEAP32[$56 + 8 >> 2] = $61;
      FUNCTION_TABLE_vi[HEAP32[$56 >> 2] & 255]($0);
      $67 = HEAP32[$46 >> 2] | 0;
     }
     FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$49 >> 2] | 0) + 4 >> 2] & 31]($0, 0, $46, 0);
     $59 = HEAP32[$46 >> 2] | 0;
     if (($59 | 0) == ($67 | 0)) {
      $$2 = 0;
      break L31;
     }
     $61 = HEAP32[$47 >> 2] | 0;
    } while ($59 >>> 0 < $61 >>> 0);
    $69 = HEAP32[$$pre38$i39 >> 2] | 0;
   } else $69 = $81;
   FUNCTION_TABLE_vi[HEAP32[$69 + 4 >> 2] & 255]($0);
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$$pre38$i39 >> 2] >> 2] & 255]($0);
   HEAP32[$46 >> 2] = 0;
   $81 = HEAP32[$$pre38$i39 >> 2] | 0;
   if (!(HEAP32[$81 + 8 >> 2] | 0)) break L29; else $52 = 0;
  }
  return $$2 | 0;
 } while (0);
 HEAP32[$1 >> 2] = (HEAP32[$0 + 68 >> 2] | 0) == 0 ? 205 : 206;
 $$2 = 1;
 return $$2 | 0;
}

function __ZNKSt3__28messagesIwE6do_getEliiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i18 = 0, $$0$i21 = 0, $$016$i = 0, $$017$i = 0, $$019$i = 0, $$020$i = 0, $10 = 0, $11 = 0, $12 = 0, $18 = 0, $19 = 0, $24 = 0, $26 = 0, $27 = 0, $34 = 0, $51 = 0, $52 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $71 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 $6 = sp + 168 | 0;
 $7 = sp;
 $8 = sp + 164 | 0;
 $9 = sp + 160 | 0;
 $10 = sp + 128 | 0;
 $11 = sp + 152 | 0;
 $12 = sp + 144 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 >> 2] = 23144;
 $18 = HEAP8[$5 + 8 + 3 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 $24 = $19 ? HEAP32[$5 >> 2] | 0 : $5;
 $26 = $24 + (($19 ? HEAP32[$5 + 4 >> 2] | 0 : $18 & 255) << 2) | 0;
 $27 = $7 + 32 | 0;
 $$016$i = $24;
 $$017$i = 0;
 while (1) {
  if (!(($$017$i | 0) != 2 & $$016$i >>> 0 < $26 >>> 0)) break;
  HEAP32[$9 >> 2] = $$016$i;
  $34 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 15]($11, $6, $$016$i, $26, $9, $7, $27, $8) | 0;
  if (($34 | 0) == 2 ? 1 : (HEAP32[$9 >> 2] | 0) == ($$016$i | 0)) {
   label = 8;
   break;
  }
  $$0$i21 = $7;
  while (1) {
   if ($$0$i21 >>> 0 >= (HEAP32[$8 >> 2] | 0) >>> 0) break;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($10, HEAP8[$$0$i21 >> 0] | 0);
   $$0$i21 = $$0$i21 + 1 | 0;
  }
  $$016$i = HEAP32[$9 >> 2] | 0;
  $$017$i = $34;
 }
 if ((label | 0) == 8) __ZNSt3__221__throw_runtime_errorEPKc(0);
 __ZNSt3__26locale5facetD2Ev($11);
 $51 = (HEAP8[$10 + 11 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 $52 = _catgets(($2 | 0) == -1 ? -1 : $2 << 1, $3, $4, $51) | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i18 = 0;
 while (1) {
  if (($$0$i$i18 | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i18 << 2) >> 2] = 0;
  $$0$i$i18 = $$0$i$i18 + 1 | 0;
 }
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 >> 2] = 23192;
 $57 = $51 + (_strlen($52) | 0) | 0;
 $58 = $57;
 $59 = $7 + 128 | 0;
 $$019$i = $51;
 $$020$i = 0;
 while (1) {
  if (!(($$020$i | 0) != 2 & $$019$i >>> 0 < $57 >>> 0)) {
   label = 23;
   break;
  }
  HEAP32[$9 >> 2] = $$019$i;
  $71 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 15]($12, $6, $$019$i, ($58 - $$019$i | 0) > 32 ? $$019$i + 32 | 0 : $57, $9, $7, $59, $8) | 0;
  if (($71 | 0) == 2 ? 1 : (HEAP32[$9 >> 2] | 0) == ($$019$i | 0)) {
   label = 19;
   break;
  }
  $$0$i = $7;
  while (1) {
   if ($$0$i >>> 0 >= (HEAP32[$8 >> 2] | 0) >>> 0) break;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($0, HEAP32[$$0$i >> 2] | 0);
   $$0$i = $$0$i + 4 | 0;
  }
  $$019$i = HEAP32[$9 >> 2] | 0;
  $$020$i = $71;
 }
 if ((label | 0) == 19) __ZNSt3__221__throw_runtime_errorEPKc(0); else if ((label | 0) == 23) {
  __ZNSt3__26locale5facetD2Ev($12);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  STACKTOP = sp;
  return;
 }
}

function _jpeg_fill_bit_buffer($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$052 = 0, $$054102 = 0, $$057101 = 0, $$06599 = 0, $$06997 = 0, $$155 = 0, $$158 = 0, $$2 = 0, $$256 = 0, $$259 = 0, $$267 = 0, $$271 = 0, $$3 = 0, $$360 = 0, $$368 = 0, $$372 = 0, $$4 = 0, $$461 = 0, $$6 = 0, $$663 = 0, $$7 = 0, $$764 = 0, $13 = 0, $20 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $35 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $44 = 0, $45 = 0, $48 = 0, $5 = 0, $53 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $8 = HEAP32[$0 + 16 >> 2] | 0;
 $9 = $8 + 440 | 0;
 L1 : do if (!(HEAP32[$9 >> 2] | 0)) if (($2 | 0) < 25) {
  $13 = $8 + 24 | 0;
  $$054102 = $6;
  $$057101 = $4;
  $$06599 = $1;
  $$06997 = $2;
  L4 : while (1) {
   if (!$$054102) {
    if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 12 >> 2] & 127]($8) | 0)) {
     $$2 = 0;
     label = 20;
     break;
    }
    $20 = HEAP32[$13 >> 2] | 0;
    $$155 = HEAP32[$20 + 4 >> 2] | 0;
    $$158 = HEAP32[$20 >> 2] | 0;
   } else {
    $$155 = $$054102;
    $$158 = $$057101;
   }
   $24 = $$155 + -1 | 0;
   $25 = $$158 + 1 | 0;
   $26 = HEAP8[$$158 >> 0] | 0;
   $27 = $26 & 255;
   L10 : do if ($26 << 24 >> 24 == -1) {
    $$256 = $24;
    $$259 = $25;
    while (1) {
     if (!$$256) {
      if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 12 >> 2] & 127]($8) | 0)) {
       $$2 = 0;
       label = 20;
       break L4;
      }
      $35 = HEAP32[$13 >> 2] | 0;
      $$3 = HEAP32[$35 + 4 >> 2] | 0;
      $$360 = HEAP32[$35 >> 2] | 0;
     } else {
      $$3 = $$256;
      $$360 = $$259;
     }
     $39 = $$3 + -1 | 0;
     $40 = $$360 + 1 | 0;
     $41 = HEAP8[$$360 >> 0] | 0;
     switch ($41 << 24 >> 24) {
     case 0:
      {
       $$052 = 255;
       $$4 = $39;
       $$461 = $40;
       break L10;
       break;
      }
     case -1:
      {
       $$256 = $39;
       $$259 = $40;
       break;
      }
     default:
      {
       label = 13;
       break L4;
      }
     }
    }
   } else {
    $$052 = $27;
    $$4 = $24;
    $$461 = $25;
   } while (0);
   $44 = $$052 | $$06599 << 8;
   $45 = $$06997 + 8 | 0;
   if (($$06997 | 0) < 17) {
    $$054102 = $$4;
    $$057101 = $$461;
    $$06599 = $44;
    $$06997 = $45;
   } else {
    $$368 = $44;
    $$372 = $45;
    $$7 = $$4;
    $$764 = $$461;
    break L1;
   }
  }
  if ((label | 0) == 13) {
   HEAP32[$9 >> 2] = $41 & 255;
   $$267 = $$06599;
   $$271 = $$06997;
   $$6 = $39;
   $$663 = $40;
   label = 15;
   break;
  } else if ((label | 0) == 20) return $$2 | 0;
 } else {
  $$368 = $1;
  $$372 = $2;
  $$7 = $6;
  $$764 = $4;
 } else {
  $$267 = $1;
  $$271 = $2;
  $$6 = $6;
  $$663 = $4;
  label = 15;
 } while (0);
 if ((label | 0) == 15) if (($$271 | 0) < ($3 | 0)) {
  $48 = $8 + 468 | 0;
  if (!(HEAP32[(HEAP32[$48 >> 2] | 0) + 40 >> 2] | 0)) {
   $53 = HEAP32[$8 >> 2] | 0;
   HEAP32[$53 + 20 >> 2] = 120;
   FUNCTION_TABLE_vii[HEAP32[$53 + 4 >> 2] & 255]($8, -1);
   HEAP32[(HEAP32[$48 >> 2] | 0) + 40 >> 2] = 1;
  }
  $$368 = $$267 << 25 - $$271;
  $$372 = 25;
  $$7 = $$6;
  $$764 = $$663;
 } else {
  $$368 = $$267;
  $$372 = $$271;
  $$7 = $$6;
  $$764 = $$663;
 }
 HEAP32[$0 >> 2] = $$764;
 HEAP32[$5 >> 2] = $$7;
 HEAP32[$0 + 8 >> 2] = $$368;
 HEAP32[$0 + 12 >> 2] = $$372;
 $$2 = 1;
 return $$2 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E14parseLocalNameEPNS5_9NameStateE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $13 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp + 8 | 0;
 $3 = sp;
 if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 90) | 0) {
  $5 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
  $6 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv($5) | 0;
  HEAP32[$2 >> 2] = $6;
  do if (($6 | 0) != 0 ? __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0 : 0) {
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 115) | 0) {
    $13 = __ZN12_GLOBAL__N_116itanium_demangle19parse_discriminatorEPKcS2_(HEAP32[$0 >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0) | 0;
    HEAP32[$0 >> 2] = $13;
    $14 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA15_KcEEEPNS0_4NodeEDpOT0_($0, 55376) | 0;
    HEAP32[$3 >> 2] = $14;
    $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9LocalNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $2, $3) | 0;
    break;
   }
   if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 100) | 0)) {
    $21 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE($5, $1) | 0;
    HEAP32[$3 >> 2] = $21;
    if (!$21) $$2 = 0; else {
     $26 = __ZN12_GLOBAL__N_116itanium_demangle19parse_discriminatorEPKcS2_(HEAP32[$0 >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0) | 0;
     HEAP32[$0 >> 2] = $26;
     $$2 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9LocalNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $2, $3) | 0;
    }
    $$3 = $$2;
    break;
   }
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($3, $0, 1);
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) {
    $18 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE($5, $1) | 0;
    HEAP32[$3 >> 2] = $18;
    if (!$18) $$1 = 0; else $$1 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9LocalNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $2, $3) | 0;
    $$3 = $$1;
   } else $$3 = 0;
  } else $$3 = 0; while (0);
  $$4 = $$3;
 } else $$4 = 0;
 STACKTOP = sp;
 return $$4 | 0;
}
function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $34 = 0, $39 = 0, $4 = 0, $42 = 0, $44 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy = sp + 16 | 0;
 $vararg_buffer = sp;
 $2 = sp + 56 | 0;
 $3 = sp + 48 | 0;
 $4 = $0 + 160 | 0;
 $5 = __ZNK6vision25DoGScaleInvariantDetector5widthEv($4) | 0;
 $6 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 if (($5 | 0) == (__ZNK6vision5Image5widthEv(HEAP32[$6 >> 2] | 0) | 0) ? ($10 = __ZNK6vision25DoGScaleInvariantDetector6heightEv($4) | 0, $11 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0, ($10 | 0) == (__ZNK6vision5Image6heightEv(HEAP32[$11 >> 2] | 0) | 0)) : 0) {} else __ZN6vision25DoGScaleInvariantDetector5allocEPKNS_25GaussianScaleSpacePyramidE($4, $1);
 $15 = $0 + 64 | 0;
 $16 = __Znwm(148) | 0;
 __ZN6vision8KeyframeILi96EEC2Ev($16);
 HEAP32[$3 >> 2] = 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE($2, $16, $$byval_copy);
 $17 = HEAP32[$2 >> 2] | 0;
 HEAP32[$2 >> 2] = HEAP32[$15 >> 2];
 HEAP32[$15 >> 2] = $17;
 $19 = $2 + 4 | 0;
 $20 = $0 + 68 | 0;
 $21 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $21;
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev($2);
 $23 = HEAP32[$15 >> 2] | 0;
 $24 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 __ZN6vision8KeyframeILi96EE8setWidthEi($23, __ZNK6vision5Image5widthEv(HEAP32[$24 >> 2] | 0) | 0);
 $27 = HEAP32[$15 >> 2] | 0;
 $28 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 __ZN6vision8KeyframeILi96EE9setHeightEi($27, __ZNK6vision5Image6heightEv(HEAP32[$28 >> 2] | 0) | 0);
 __ZN6vision11ScopedTimerC2EPKc($$byval_copy, 33189);
 if (__ZN6vision11ScopedTimercvbEv($$byval_copy) | 0) __ZN6vision12FindFeaturesINS_14FREAKExtractorELi96EEEvPNS_8KeyframeIXT0_EEEPKNS_25GaussianScaleSpacePyramidEPNS_25DoGScaleInvariantDetectorEPT_(HEAP32[$15 >> 2] | 0, $1, $4, $0 + 316 | 0);
 __ZN6vision11ScopedTimerD2Ev($$byval_copy);
 $34 = __ZN6vision6Logger11getInstanceEv() | 0;
 __ZN6vision15get_pretty_timeEv($$byval_copy);
 $39 = (HEAP8[$$byval_copy + 11 >> 0] | 0) < 0 ? HEAP32[$$byval_copy >> 2] | 0 : $$byval_copy;
 $42 = __ZNK6vision18BinaryFeatureStore4sizeEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$15 >> 2] | 0) | 0) | 0;
 HEAP32[$vararg_buffer >> 2] = 39201;
 HEAP32[$vararg_buffer + 4 >> 2] = $39;
 HEAP32[$vararg_buffer + 8 >> 2] = 34718;
 HEAP32[$vararg_buffer + 12 >> 2] = $42;
 __ZN6vision6Logger5writeENS_19LoggerPriorityLevelEPKcz($34, 8, 34674, $vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$byval_copy);
 $44 = __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_8KeyframeILi96EEE($0, HEAP32[$15 >> 2] | 0) | 0;
 STACKTOP = sp;
 return $44 | 0;
}

function __ZNSt3__210__stdinbufIcE9__getcharEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$048 = 0, $$052 = 0, $$10 = 0, $$11 = 0, $$351 = 0, $$9 = 0, $$sroa$speculated = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $5 = 0, $51 = 0, $6 = 0, $61 = 0, $67 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $6 = $0 + 52 | 0;
 if (HEAP8[$6 >> 0] | 0) {
  $9 = $0 + 48 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if ($1) {
   $11 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   HEAP32[$9 >> 2] = $11;
   HEAP8[$6 >> 0] = 0;
   $$11 = $10;
  } else $$11 = $10;
 } else {
  $13 = HEAP32[$0 + 44 >> 2] | 0;
  $$sroa$speculated = ($13 | 0) > 1 ? $13 : 1;
  $15 = $0 + 32 | 0;
  $$052 = 0;
  while (1) {
   if ($$052 >>> 0 >= $$sroa$speculated >>> 0) {
    label = 9;
    break;
   }
   $18 = _getc(HEAP32[$15 >> 2] | 0) | 0;
   if (($18 | 0) == -1) {
    label = 8;
    break;
   }
   HEAP8[$2 + $$052 >> 0] = $18;
   $$052 = $$052 + 1 | 0;
  }
  if ((label | 0) == 8) $$10 = __ZNSt3__211char_traitsIcE3eofEv() | 0; else if ((label | 0) == 9) {
   do if (!(HEAP8[$0 + 53 >> 0] | 0)) {
    $28 = $0 + 40 | 0;
    $29 = $0 + 36 | 0;
    $30 = $3 + 1 | 0;
    $$048 = $$sroa$speculated;
    L11 : while (1) {
     $31 = HEAP32[$28 >> 2] | 0;
     $32 = $31;
     $34 = HEAP32[$32 >> 2] | 0;
     $37 = HEAP32[$32 + 4 >> 2] | 0;
     $38 = HEAP32[$29 >> 2] | 0;
     $39 = $2 + $$048 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$38 >> 2] | 0) + 16 >> 2] & 15]($38, $31, $2, $39, $4, $3, $30, $5) | 0) {
     case 3:
      {
       label = 15;
       break L11;
       break;
      }
     case 2:
      {
       label = 17;
       break L11;
       break;
      }
     case 1:
      break;
     default:
      break L11;
     }
     $45 = HEAP32[$28 >> 2] | 0;
     HEAP32[$45 >> 2] = $34;
     HEAP32[$45 + 4 >> 2] = $37;
     if (($$048 | 0) == 8) {
      label = 17;
      break;
     }
     $51 = _getc(HEAP32[$15 >> 2] | 0) | 0;
     if (($51 | 0) == -1) {
      label = 17;
      break;
     }
     HEAP8[$39 >> 0] = $51;
     $$048 = $$048 + 1 | 0;
    }
    if ((label | 0) == 15) HEAP8[$3 >> 0] = HEAP8[$2 >> 0] | 0; else if ((label | 0) == 17) {
     $$9 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
     break;
    }
    $$351 = $$048;
    label = 19;
   } else {
    HEAP8[$3 >> 0] = HEAP8[$2 >> 0] | 0;
    $$351 = $$sroa$speculated;
    label = 19;
   } while (0);
   L21 : do if ((label | 0) == 19) {
    L23 : do if ($1) {
     $67 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$3 >> 0] | 0) | 0;
     HEAP32[$0 + 48 >> 2] = $67;
    } else {
     $$0 = $$351;
     do {
      if (($$0 | 0) <= 0) break L23;
      $$0 = $$0 + -1 | 0;
      $61 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$2 + $$0 >> 0] | 0) | 0;
     } while ((_ungetc($61, HEAP32[$15 >> 2] | 0) | 0) != -1);
     $$9 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
     break L21;
    } while (0);
    $$9 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$3 >> 0] | 0) | 0;
   } while (0);
   $$10 = $$9;
  }
  $$11 = $$10;
 }
 STACKTOP = sp;
 return $$11 | 0;
}

function __ZNSt3__210__stdinbufIwE9__getcharEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$048 = 0, $$052 = 0, $$10 = 0, $$11 = 0, $$351 = 0, $$9 = 0, $$sroa$speculated = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $46 = 0, $5 = 0, $52 = 0, $6 = 0, $64 = 0, $70 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $6 = $0 + 52 | 0;
 if (HEAP8[$6 >> 0] | 0) {
  $9 = $0 + 48 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if ($1) {
   $11 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   HEAP32[$9 >> 2] = $11;
   HEAP8[$6 >> 0] = 0;
   $$11 = $10;
  } else $$11 = $10;
 } else {
  $13 = HEAP32[$0 + 44 >> 2] | 0;
  $$sroa$speculated = ($13 | 0) > 1 ? $13 : 1;
  $15 = $0 + 32 | 0;
  $$052 = 0;
  while (1) {
   if ($$052 >>> 0 >= $$sroa$speculated >>> 0) {
    label = 9;
    break;
   }
   $18 = _getc(HEAP32[$15 >> 2] | 0) | 0;
   if (($18 | 0) == -1) {
    label = 8;
    break;
   }
   HEAP8[$2 + $$052 >> 0] = $18;
   $$052 = $$052 + 1 | 0;
  }
  if ((label | 0) == 8) $$10 = __ZNSt3__211char_traitsIwE3eofEv() | 0; else if ((label | 0) == 9) {
   do if (!(HEAP8[$0 + 53 >> 0] | 0)) {
    $29 = $0 + 40 | 0;
    $30 = $0 + 36 | 0;
    $31 = $3 + 4 | 0;
    $$048 = $$sroa$speculated;
    L11 : while (1) {
     $32 = HEAP32[$29 >> 2] | 0;
     $33 = $32;
     $35 = HEAP32[$33 >> 2] | 0;
     $38 = HEAP32[$33 + 4 >> 2] | 0;
     $39 = HEAP32[$30 >> 2] | 0;
     $40 = $2 + $$048 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$39 >> 2] | 0) + 16 >> 2] & 15]($39, $32, $2, $40, $4, $3, $31, $5) | 0) {
     case 3:
      {
       label = 15;
       break L11;
       break;
      }
     case 2:
      {
       label = 17;
       break L11;
       break;
      }
     case 1:
      break;
     default:
      break L11;
     }
     $46 = HEAP32[$29 >> 2] | 0;
     HEAP32[$46 >> 2] = $35;
     HEAP32[$46 + 4 >> 2] = $38;
     if (($$048 | 0) == 8) {
      label = 17;
      break;
     }
     $52 = _getc(HEAP32[$15 >> 2] | 0) | 0;
     if (($52 | 0) == -1) {
      label = 17;
      break;
     }
     HEAP8[$40 >> 0] = $52;
     $$048 = $$048 + 1 | 0;
    }
    if ((label | 0) == 15) HEAP32[$3 >> 2] = HEAP8[$2 >> 0]; else if ((label | 0) == 17) {
     $$9 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
     break;
    }
    $$351 = $$048;
    label = 19;
   } else {
    HEAP32[$3 >> 2] = HEAP8[$2 >> 0];
    $$351 = $$sroa$speculated;
    label = 19;
   } while (0);
   L21 : do if ((label | 0) == 19) {
    L23 : do if ($1) {
     $70 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$3 >> 2] | 0) | 0;
     HEAP32[$0 + 48 >> 2] = $70;
    } else {
     $$0 = $$351;
     do {
      if (($$0 | 0) <= 0) break L23;
      $$0 = $$0 + -1 | 0;
      $64 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP8[$2 + $$0 >> 0] | 0) | 0;
     } while ((_ungetc($64, HEAP32[$15 >> 2] | 0) | 0) != -1);
     $$9 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
     break L21;
    } while (0);
    $$9 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$3 >> 2] | 0) | 0;
   } while (0);
   $$10 = $$9;
  }
  $$11 = $$10;
 }
 STACKTOP = sp;
 return $$11 | 0;
}

function _jpeg_idct_6x6($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0149162 = 0, $$0151161 = 0, $$0152160 = 0, $$0163 = 0, $$1150158 = 0, $$1159 = 0, $100 = 0, $102 = 0, $104 = 0, $106 = 0, $108 = 0, $111 = 0, $114 = 0, $117 = 0, $15 = 0, $22 = 0, $23 = 0, $25 = 0, $32 = 0, $33 = 0, $34 = 0, $40 = 0, $46 = 0, $5 = 0, $52 = 0, $54 = 0, $57 = 0, $60 = 0, $63 = 0, $7 = 0, $83 = 0, $86 = 0, $89 = 0, $92 = 0, $93 = 0, $95 = 0, $98 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $$0149162 = $5;
 $$0151161 = HEAP32[$1 + 84 >> 2] | 0;
 $$0152160 = $2;
 $$0163 = 0;
 while (1) {
  $15 = Math_imul(HEAP16[$$0152160 >> 1] << 13, HEAP32[$$0151161 >> 2] | 0) | 0 | 1024;
  $22 = Math_imul((HEAP16[$$0152160 + 64 >> 1] | 0) * 5793 | 0, HEAP32[$$0151161 + 128 >> 2] | 0) | 0;
  $23 = $22 + $15 | 0;
  $25 = (Math_imul($22, -2) | 0) + $15 >> 11;
  $32 = Math_imul((HEAP16[$$0152160 + 32 >> 1] | 0) * 10033 | 0, HEAP32[$$0151161 + 64 >> 2] | 0) | 0;
  $33 = $32 + $23 | 0;
  $34 = $23 - $32 | 0;
  $40 = Math_imul(HEAP32[$$0151161 + 32 >> 2] | 0, HEAP16[$$0152160 + 16 >> 1] | 0) | 0;
  $46 = Math_imul(HEAP32[$$0151161 + 96 >> 2] | 0, HEAP16[$$0152160 + 48 >> 1] | 0) | 0;
  $52 = Math_imul(HEAP32[$$0151161 + 160 >> 2] | 0, HEAP16[$$0152160 + 80 >> 1] | 0) | 0;
  $54 = ($52 + $40 | 0) * 2998 | 0;
  $57 = $54 + ($46 + $40 << 13) | 0;
  $60 = $54 + ($52 - $46 << 13) | 0;
  $63 = $40 - $46 - $52 << 2;
  HEAP32[$$0149162 >> 2] = $57 + $33 >> 11;
  HEAP32[$$0149162 + 120 >> 2] = $33 - $57 >> 11;
  HEAP32[$$0149162 + 24 >> 2] = $63 + $25;
  HEAP32[$$0149162 + 96 >> 2] = $25 - $63;
  HEAP32[$$0149162 + 48 >> 2] = $60 + $34 >> 11;
  HEAP32[$$0149162 + 72 >> 2] = $34 - $60 >> 11;
  $$0163 = $$0163 + 1 | 0;
  if (($$0163 | 0) == 6) break; else {
   $$0149162 = $$0149162 + 4 | 0;
   $$0151161 = $$0151161 + 4 | 0;
   $$0152160 = $$0152160 + 2 | 0;
  }
 }
 $83 = $7 + -384 | 0;
 $$1150158 = $5;
 $$1159 = 0;
 while (1) {
  $86 = (HEAP32[$3 + ($$1159 << 2) >> 2] | 0) + $4 | 0;
  $89 = (HEAP32[$$1150158 >> 2] << 13) + 134348800 | 0;
  $92 = (HEAP32[$$1150158 + 16 >> 2] | 0) * 5793 | 0;
  $93 = $89 + $92 | 0;
  $95 = $89 - $92 - $92 | 0;
  $98 = (HEAP32[$$1150158 + 8 >> 2] | 0) * 10033 | 0;
  $99 = $93 + $98 | 0;
  $100 = $93 - $98 | 0;
  $102 = HEAP32[$$1150158 + 4 >> 2] | 0;
  $104 = HEAP32[$$1150158 + 12 >> 2] | 0;
  $106 = HEAP32[$$1150158 + 20 >> 2] | 0;
  $108 = ($106 + $102 | 0) * 2998 | 0;
  $111 = $108 + ($104 + $102 << 13) | 0;
  $114 = $108 + ($106 - $104 << 13) | 0;
  $117 = $102 - $104 - $106 << 13;
  HEAP8[$86 >> 0] = HEAP8[$83 + (($111 + $99 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 5 >> 0] = HEAP8[$83 + (($99 - $111 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 1 >> 0] = HEAP8[$83 + (($117 + $95 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 4 >> 0] = HEAP8[$83 + (($95 - $117 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 2 >> 0] = HEAP8[$83 + (($114 + $100 | 0) >>> 18 & 1023) >> 0] | 0;
  HEAP8[$86 + 3 >> 0] = HEAP8[$83 + (($100 - $114 | 0) >>> 18 & 1023) >> 0] | 0;
  $$1159 = $$1159 + 1 | 0;
  if (($$1159 | 0) == 6) break; else $$1150158 = $$1150158 + 24 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN6vision16FindHoughMatchesERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEERKNS_21HoughSimilarityVotingERKS5_if($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$031 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $21 = 0, $22 = 0, $34 = 0, $39 = 0, $43 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $78 = 0, $8 = 0, $83 = 0, $84 = 0, $87 = 0, $9 = 0, $92 = 0, $93 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $5 = sp + 32 | 0;
 $6 = sp + 28 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 20 | 0;
 $9 = sp + 16 | 0;
 $10 = sp + 12 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 __ZNK6vision21HoughSimilarityVoting16getBinsFromIndexERiS1_S1_S1_i($1, $10, $11, $12, $13, $3);
 $15 = $0 + 4 | 0;
 HEAP32[$15 >> 2] = HEAP32[$0 >> 2];
 $16 = __ZNK6vision21HoughSimilarityVoting24getSubBinLocationIndicesEv($1) | 0;
 $21 = (HEAP32[$16 + 4 >> 2] | 0) - (HEAP32[$16 >> 2] | 0) >> 2;
 $22 = __ZNK6vision21HoughSimilarityVoting18getSubBinLocationsEv($1) | 0;
 if ($21 >>> 0 > (HEAP32[$2 + 4 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) >> 3 >>> 0) {
  $34 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 35942) | 0, 34139) | 0, 39072) | 0, 342) | 0, 39079) | 0, 35988) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $34 + (HEAP32[(HEAP32[$34 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $39 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 66512) | 0;
  $43 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$39 >> 2] | 0) + 28 >> 2] & 127]($39, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($34, $43) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($34) | 0;
  _abort();
 }
 $45 = $0 + 8 | 0;
 $$0 = HEAP32[$22 >> 2] | 0;
 $$031 = 0;
 while (1) {
  if (($$031 | 0) >= ($21 | 0)) break;
  __ZNK6vision21HoughSimilarityVoting14getBinDistanceERfS1_S1_S1_ffffffff($1, $6, $7, $8, $9, +HEAPF32[$$0 >> 2], +HEAPF32[$$0 + 4 >> 2], +HEAPF32[$$0 + 8 >> 2], +HEAPF32[$$0 + 12 >> 2], +(HEAP32[$10 >> 2] | 0) + .5, +(HEAP32[$11 >> 2] | 0) + .5, +(HEAP32[$12 >> 2] | 0) + .5, +(HEAP32[$13 >> 2] | 0) + .5);
  do if ((+HEAPF32[$6 >> 2] < $4 ? +HEAPF32[$7 >> 2] < $4 : 0) & +HEAPF32[$8 >> 2] < $4 & +HEAPF32[$9 >> 2] < $4) {
   $78 = __ZNK6vision21HoughSimilarityVoting24getSubBinLocationIndicesEv($1) | 0;
   $83 = (HEAP32[$2 >> 2] | 0) + (HEAP32[(HEAP32[$78 >> 2] | 0) + ($$031 << 2) >> 2] << 3) | 0;
   $84 = HEAP32[$15 >> 2] | 0;
   if (($84 | 0) == (HEAP32[$45 >> 2] | 0)) {
    __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($0, $83);
    break;
   } else {
    $87 = $83;
    $92 = HEAP32[$87 + 4 >> 2] | 0;
    $93 = $84;
    HEAP32[$93 >> 2] = HEAP32[$87 >> 2];
    HEAP32[$93 + 4 >> 2] = $92;
    HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 8;
    break;
   }
  } while (0);
  $$0 = $$0 + 16 | 0;
  $$031 = $$031 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function _scanexp($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$04858 = 0, $$049 = 0, $$157 = 0, $$251 = 0, $$pre$phi69Z2D = 0, $100 = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $21 = 0, $22 = 0, $3 = 0, $36 = 0, $4 = 0, $43 = 0, $44 = 0, $49 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $57 = 0, $61 = 0, $68 = 0, $69 = 0, $78 = 0, $86 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $99 = 0, label = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 104 | 0;
 if ($3 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
  HEAP32[$2 >> 2] = $3 + 1;
  $11 = HEAPU8[$3 >> 0] | 0;
 } else $11 = ___shgetc($0) | 0;
 switch ($11 | 0) {
 case 43:
 case 45:
  {
   $13 = ($11 | 0) == 45 & 1;
   $14 = HEAP32[$2 >> 2] | 0;
   if ($14 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$2 >> 2] = $14 + 1;
    $22 = HEAPU8[$14 >> 0] | 0;
   } else $22 = ___shgetc($0) | 0;
   $21 = $22 + -48 | 0;
   if (($1 | 0) != 0 & $21 >>> 0 > 9) if (!(HEAP32[$4 >> 2] | 0)) {
    $100 = 0;
    $99 = -2147483648;
   } else {
    HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + -1;
    label = 14;
   } else {
    $$0 = $13;
    $$049 = $22;
    $$pre$phi69Z2D = $21;
    label = 12;
   }
   break;
  }
 default:
  {
   $$0 = 0;
   $$049 = $11;
   $$pre$phi69Z2D = $11 + -48 | 0;
   label = 12;
  }
 }
 if ((label | 0) == 12) if ($$pre$phi69Z2D >>> 0 > 9) label = 14; else {
  $$04858 = 0;
  $$157 = $$049;
  while (1) {
   $$04858 = $$157 + -48 + ($$04858 * 10 | 0) | 0;
   $36 = HEAP32[$2 >> 2] | 0;
   if ($36 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$2 >> 2] = $36 + 1;
    $44 = HEAPU8[$36 >> 0] | 0;
   } else $44 = ___shgetc($0) | 0;
   $43 = $44 + -48 | 0;
   if (!($43 >>> 0 < 10 & ($$04858 | 0) < 214748364)) break; else $$157 = $44;
  }
  $49 = (($$04858 | 0) < 0) << 31 >> 31;
  if ($43 >>> 0 < 10) {
   $$251 = $44;
   $51 = $$04858;
   $52 = $49;
   while (1) {
    $53 = ___muldi3($51 | 0, $52 | 0, 10, 0) | 0;
    $54 = getTempRet0() | 0;
    $57 = _i64Add($$251 | 0, (($$251 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
    $51 = _i64Add($57 | 0, getTempRet0() | 0, $53 | 0, $54 | 0) | 0;
    $52 = getTempRet0() | 0;
    $61 = HEAP32[$2 >> 2] | 0;
    if ($61 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$2 >> 2] = $61 + 1;
     $69 = HEAPU8[$61 >> 0] | 0;
    } else $69 = ___shgetc($0) | 0;
    $68 = $69 + -48 | 0;
    if (!($68 >>> 0 < 10 & (($52 | 0) < 21474836 | ($52 | 0) == 21474836 & $51 >>> 0 < 2061584302))) break; else $$251 = $69;
   }
   if ($68 >>> 0 < 10) {
    do {
     $78 = HEAP32[$2 >> 2] | 0;
     if ($78 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$2 >> 2] = $78 + 1;
      $86 = HEAPU8[$78 >> 0] | 0;
     } else $86 = ___shgetc($0) | 0;
    } while (($86 + -48 | 0) >>> 0 < 10);
    $93 = $51;
    $94 = $52;
   } else {
    $93 = $51;
    $94 = $52;
   }
  } else {
   $93 = $$04858;
   $94 = $49;
  }
  if (HEAP32[$4 >> 2] | 0) HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + -1;
  $92 = ($$0 | 0) == 0;
  $95 = _i64Subtract(0, 0, $93 | 0, $94 | 0) | 0;
  $96 = getTempRet0() | 0;
  $100 = $92 ? $93 : $95;
  $99 = $92 ? $94 : $96;
 }
 if ((label | 0) == 14) if (!(HEAP32[$4 >> 2] | 0)) {
  $100 = 0;
  $99 = -2147483648;
 } else {
  HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + -1;
  $100 = 0;
  $99 = -2147483648;
 }
 setTempRet0($99 | 0);
 return $100 | 0;
}

function _icpPoint($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$088 = 0, $$090 = 0.0, $$091 = 0.0, $$092 = 0, $$1 = 0, $$189 = 0, $$2 = 0, $12 = 0, $15 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $34 = 0, $38 = 0.0, $42 = 0.0, $47 = 0, $5 = 0, $53 = 0.0, $6 = 0, $65 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 $vararg_buffer1 = sp + 168 | 0;
 $vararg_buffer = sp + 160 | 0;
 $5 = sp + 144 | 0;
 $6 = sp + 48 | 0;
 $7 = sp;
 $8 = $1 + 8 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 do if (($9 | 0) >= 3) {
  $12 = _malloc($9 * 96 | 0) | 0;
  if (!$12) {
   _arLog(0, 3, 45947, $vararg_buffer);
   $$092 = -1;
   break;
  }
  $15 = _malloc($9 << 4) | 0;
  if (!$15) {
   _arLog(0, 3, 45947, $vararg_buffer1);
   _free($12);
   $$092 = -1;
   break;
  }
  $$0 = 0;
  while (1) {
   if (($$0 | 0) == 3) break;
   $$088 = 0;
   while (1) {
    if (($$088 | 0) == 4) break;
    HEAPF64[$3 + ($$0 << 5) + ($$088 << 3) >> 3] = +HEAPF64[$2 + ($$0 << 5) + ($$088 << 3) >> 3];
    $$088 = $$088 + 1 | 0;
   }
   $$0 = $$0 + 1 | 0;
  }
  $22 = $1 + 4 | 0;
  $23 = $5 + 8 | 0;
  $24 = $0 + 104 | 0;
  $25 = $0 + 96 | 0;
  $26 = $0 + 120 | 0;
  $27 = $0 + 112 | 0;
  $$091 = 0.0;
  $$189 = 0;
  L17 : while (1) {
   _arUtilMatMul($0, $3, $6) | 0;
   $$090 = 0.0;
   $$1 = 0;
   while (1) {
    $28 = HEAP32[$8 >> 2] | 0;
    if (($$1 | 0) >= ($28 | 0)) break;
    if ((_icpGetU_from_X_by_MatX2U($5, $6, (HEAP32[$22 >> 2] | 0) + ($$1 * 24 | 0) | 0) | 0) < 0) {
     label = 16;
     break L17;
    }
    $34 = HEAP32[$1 >> 2] | 0;
    $38 = +HEAPF64[$34 + ($$1 << 4) >> 3] - +HEAPF64[$5 >> 3];
    $42 = +HEAPF64[$34 + ($$1 << 4) + 8 >> 3] - +HEAPF64[$23 >> 3];
    $47 = $$1 << 1;
    HEAPF64[$15 + ($47 << 3) >> 3] = $38;
    HEAPF64[$15 + (($47 | 1) << 3) >> 3] = $42;
    $$090 = $$090 + ($38 * $38 + $42 * $42);
    $$1 = $$1 + 1 | 0;
   }
   $53 = $$090 / +($28 | 0);
   if ($53 < +HEAPF64[$24 >> 3]) {
    label = 31;
    break;
   }
   if (($$189 | 0 ? $53 < +HEAPF64[$26 >> 3] : 0) ? $53 / $$091 > +HEAPF64[$27 >> 3] : 0) {
    label = 31;
    break;
   }
   if (($$189 | 0) == (HEAP32[$25 >> 2] | 0)) {
    label = 31;
    break;
   }
   $$2 = 0;
   $65 = $28;
   while (1) {
    if (($$2 | 0) >= ($65 | 0)) break;
    if ((_icpGetJ_U_S($12 + ($$2 * 12 << 3) | 0, $0, $3, (HEAP32[$22 >> 2] | 0) + ($$2 * 24 | 0) | 0) | 0) < 0) {
     label = 27;
     break L17;
    }
    $$2 = $$2 + 1 | 0;
    $65 = HEAP32[$8 >> 2] | 0;
   }
   if ((_icpGetDeltaS($7, $15, $12, $65 << 1) | 0) < 0) {
    label = 29;
    break;
   }
   _icpUpdateMat($3, $7) | 0;
   $$091 = $53;
   $$189 = $$189 + 1 | 0;
  }
  if ((label | 0) == 16) {
   _icpGetXw2XcCleanup($12, $15);
   $$092 = -1;
   break;
  } else if ((label | 0) == 27) {
   _icpGetXw2XcCleanup($12, $15);
   $$092 = -1;
   break;
  } else if ((label | 0) == 29) {
   _icpGetXw2XcCleanup($12, $15);
   $$092 = -1;
   break;
  } else if ((label | 0) == 31) {
   HEAPF64[$4 >> 3] = $53;
   _free($12);
   _free($15);
   $$092 = 0;
   break;
  }
 } else $$092 = -1; while (0);
 STACKTOP = sp;
 return $$092 | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPKiEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPiEEE4typeES8_SA_SA_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0$i$i = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$sroa$044$059 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $23 = 0, $24 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $38 = 0, $4 = 0, $40 = 0, $46 = 0, $47 = 0, $5 = 0, $51 = 0, $52 = 0, $56 = 0, $6 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy3 = sp + 40 | 0;
 $$byval_copy2 = sp + 36 | 0;
 $4 = sp + 32 | 0;
 $5 = sp + 28 | 0;
 $6 = sp + 8 | 0;
 $7 = sp + 4 | 0;
 $8 = sp;
 $9 = HEAP32[$0 >> 2] | 0;
 $10 = $9;
 $14 = $9 + ((HEAP32[$1 >> 2] | 0) - $10 >> 2 << 2) | 0;
 $15 = HEAP32[$2 >> 2] | 0;
 $16 = HEAP32[$3 >> 2] | 0;
 $17 = $16 - $15 | 0;
 $18 = $17 >> 2;
 L1 : do if (($17 | 0) > 0) {
  $20 = $0 + 8 | 0;
  $23 = HEAP32[$0 + 4 >> 2] | 0;
  $24 = $23;
  if (($18 | 0) > ((HEAP32[$20 >> 2] | 0) - $24 >> 2 | 0)) {
   $46 = ($24 - $10 >> 2) + $18 | 0;
   $47 = __ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv($0) | 0;
   if ($47 >>> 0 < $46 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
    $51 = HEAP32[$0 >> 2] | 0;
    $52 = (HEAP32[$20 >> 2] | 0) - $51 | 0;
    $56 = $52 >> 1;
    __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_($6, $52 >> 2 >>> 0 < $47 >>> 1 >>> 0 ? ($56 >>> 0 < $46 >>> 0 ? $46 : $56) : $47, $14 - $51 >> 2, $0 + 8 | 0);
    HEAP32[$7 >> 2] = $15;
    HEAP32[$8 >> 2] = $16;
    HEAP32[$$byval_copy2 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$$byval_copy3 >> 2] = HEAP32[$8 >> 2];
    __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEE18__construct_at_endINS_11__wrap_iterIPKiEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_($6, $$byval_copy2, $$byval_copy3);
    $61 = __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EEPi($0, $6, $14) | 0;
    __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev($6);
    $$0 = $61;
    break;
   }
  }
  $29 = $24 - $14 | 0;
  $30 = $29 >> 2;
  $32 = $15;
  $34 = $32 + ($30 << 2) | 0;
  if (($18 | 0) > ($30 | 0)) {
   HEAP32[$4 >> 2] = $34;
   HEAP32[$5 >> 2] = $16;
   HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$$byval_copy3 >> 2] = HEAP32[$5 >> 2];
   __ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endINS_11__wrap_iterIPKiEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_m($0, $$byval_copy2, $$byval_copy3, $18 - $30 | 0);
   if (($29 | 0) > 0) $$sroa$044$059 = $34; else {
    $$0 = $14;
    break;
   }
  } else $$sroa$044$059 = $16;
  __ZNSt3__26vectorIiNS_9allocatorIiEEE12__move_rangeEPiS4_S4_($0, $14, $23, $14 + ($18 << 2) | 0);
  $38 = $$sroa$044$059;
  $$0$i$i = $14;
  $40 = $32;
  while (1) {
   if (($40 | 0) == ($38 | 0)) {
    $$0 = $14;
    break L1;
   }
   HEAP32[$$0$i$i >> 2] = HEAP32[$40 >> 2];
   $$0$i$i = $$0$i$i + 4 | 0;
   $40 = $40 + 4 | 0;
  }
 } else $$0 = $14; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision11PartialSortIfEET_PS1_ii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$044 = 0, $$047 = 0, $$049 = 0, $$1 = 0, $$145 = 0, $$2 = 0, $$246 = 0, $10 = 0, $15 = 0, $19 = 0, $26 = 0, $3 = 0, $31 = 0, $35 = 0, $36 = 0, $38 = 0, $40 = 0.0, $41 = 0, $42 = 0.0, $44 = 0, $45 = 0, $46 = 0.0, $48 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if (($1 | 0) <= 0) {
  $10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37491) | 0, 37520) | 0, 39072) | 0, 53) | 0, 39079) | 0, 37593) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $10 + (HEAP32[(HEAP32[$10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
  $19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$15 >> 2] | 0) + 28 >> 2] & 127]($15, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($10, $19) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($10) | 0;
  _abort();
 }
 if (($2 | 0) <= 0) {
  $26 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 37612) | 0, 37520) | 0, 39072) | 0, 54) | 0, 39079) | 0, 37641) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $26 + (HEAP32[(HEAP32[$26 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $31 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
  $35 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$31 >> 2] | 0) + 28 >> 2] & 127]($31, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($26, $35) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($26) | 0;
  _abort();
 }
 $36 = $2 + -1 | 0;
 $38 = $0 + ($36 << 2) | 0;
 $$047 = $1 + -1 | 0;
 $$049 = 0;
 while (1) {
  $40 = +HEAPF32[$38 >> 2];
  if (($$049 | 0) >= ($$047 | 0)) break;
  $$0 = $$049;
  $$044 = $$047;
  while (1) {
   $$1 = $$0;
   while (1) {
    $41 = $0 + ($$1 << 2) | 0;
    $42 = +HEAPF32[$41 >> 2];
    $44 = $$1 + 1 | 0;
    if ($42 < $40) $$1 = $44; else break;
   }
   $$145 = $$044;
   while (1) {
    $45 = $0 + ($$145 << 2) | 0;
    $46 = +HEAPF32[$45 >> 2];
    $48 = $$145 + -1 | 0;
    if ($40 < $46) $$145 = $48; else break;
   }
   if (($$1 | 0) > ($$145 | 0)) {
    $$2 = $$1;
    $$246 = $$145;
   } else {
    HEAPF32[$41 >> 2] = $46;
    HEAPF32[$45 >> 2] = $42;
    $$2 = $44;
    $$246 = $48;
   }
   if (($$2 | 0) > ($$246 | 0)) break; else {
    $$0 = $$2;
    $$044 = $$246;
   }
  }
  $$047 = ($$2 | 0) < ($2 | 0) ? $$047 : $$246;
  $$049 = ($$246 | 0) < ($36 | 0) ? $$2 : $$049;
 }
 STACKTOP = sp;
 return +$40;
}

function __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $18 = 0, $23 = 0, $27 = 0, $28 = 0, $30 = 0, $38 = 0, $43 = 0, $47 = 0, $49 = 0, $51 = 0, $53 = 0, $54 = 0, $56 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp;
 if (($6 | 0) > 0 ? ($6 + 1 | 0) >>> 0 < (__ZNK6vision5Image5widthEv($5) | 0) >>> 0 : 0) {
  $28 = $7 + -1 | 0;
  if (($7 | 0) > 0 ? ($30 = $7 + 1 | 0, $30 >>> 0 < (__ZNK6vision5Image6heightEv($5) | 0) >>> 0) : 0) {
   $49 = (__ZNK6vision5Image3getIfEEPKT_m($5, $28) | 0) + ($6 << 2) | 0;
   $51 = (__ZNK6vision5Image3getIfEEPKT_m($5, $7) | 0) + ($6 << 2) | 0;
   $53 = (__ZNK6vision5Image3getIfEEPKT_m($5, $30) | 0) + ($6 << 2) | 0;
   $54 = $51 + 4 | 0;
   $56 = $51 + -4 | 0;
   HEAPF32[$0 >> 2] = (+HEAPF32[$54 >> 2] - +HEAPF32[$56 >> 2]) * .5;
   HEAPF32[$1 >> 2] = (+HEAPF32[$53 >> 2] - +HEAPF32[$49 >> 2]) * .5;
   HEAPF32[$2 >> 2] = +HEAPF32[$54 >> 2] + (+HEAPF32[$56 >> 2] - +HEAPF32[$51 >> 2] * 2.0);
   HEAPF32[$3 >> 2] = +HEAPF32[$53 >> 2] + (+HEAPF32[$49 >> 2] - +HEAPF32[$51 >> 2] * 2.0);
   HEAPF32[$4 >> 2] = (+HEAPF32[$49 + -4 >> 2] + +HEAPF32[$53 + 4 >> 2] - (+HEAPF32[$49 + 4 >> 2] + +HEAPF32[$53 + -4 >> 2])) * .25;
   STACKTOP = sp;
   return;
  }
  $38 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30161) | 0, 28600) | 0, 39072) | 0, 285) | 0, 39079) | 0, 29077) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $38 + (HEAP32[(HEAP32[$38 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $43 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 66512) | 0;
  $47 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$43 >> 2] | 0) + 28 >> 2] & 127]($43, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($38, $47) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($38) | 0;
  _abort();
 }
 $18 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 30105) | 0, 28600) | 0, 39072) | 0, 284) | 0, 39079) | 0, 29002) | 0;
 __ZNKSt3__28ios_base6getlocEv($8, $18 + (HEAP32[(HEAP32[$18 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $23 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 66512) | 0;
 $27 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$23 >> 2] | 0) + 28 >> 2] & 127]($23, 10) | 0;
 __ZNSt3__26localeD2Ev($8);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($18, $27) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($18) | 0;
 _abort();
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseConversionExprEv($0) {
 $0 = $0 | 0;
 var $$3 = 0, $$4 = 0, $$5 = 0, $$byval_copy = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $2 = 0, $3 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 24 | 0;
 $1 = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($1, 54552);
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy) | 0) {
  __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($2, $0 + 360 | 0, 0);
  $6 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
  $7 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($6) | 0;
  HEAP32[$$byval_copy >> 2] = $7;
  __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($2);
  do if ($7) {
   if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0)) {
    $16 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($6) | 0;
    HEAP32[$2 >> 2] = $16;
    if (!$16) $$3 = 0; else {
     __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13makeNodeArrayIPPNS0_4NodeEEENS0_9NodeArrayET_SB_($3, $0, $2, $2 + 4 | 0);
     $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_14ConversionExprEJRPNS0_4NodeENS0_9NodeArrayEEEES9_DpOT0_($0, $$byval_copy, $3) | 0;
    }
    $$4 = $$3;
    break;
   }
   $10 = $0 + 8 | 0;
   $11 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($10) | 0;
   while (1) {
    if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) {
     label = 9;
     break;
    }
    $13 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($6) | 0;
    HEAP32[$2 >> 2] = $13;
    if (!$13) {
     label = 7;
     break;
    }
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($10, $2);
   }
   if ((label | 0) == 7) {
    $$4 = 0;
    break;
   } else if ((label | 0) == 9) {
    __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($2, $0, $11);
    $$4 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_14ConversionExprEJRPNS0_4NodeERNS0_9NodeArrayEEEES9_DpOT0_($0, $$byval_copy, $2) | 0;
    break;
   }
  } else $$4 = 0; while (0);
  $$5 = $$4;
 } else $$5 = 0;
 STACKTOP = sp;
 return $$5 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm($this, $__nbc) {
 $this = $this | 0;
 $__nbc = $__nbc | 0;
 var $0 = 0, $18 = 0, $2 = 0, $4 = 0, $6 = 0, $9 = 0, $__cp$0 = 0, $__i$0 = 0, $__np$0 = 0, $__phash$0$ph$ph = 0, $__pp$0$ph = 0, $__pp$0$ph$ph = 0, $__value_ = 0, $__value_$i$i = 0, $__value_$i$i$i = 0, $arrayidx$i61 = 0, $call$i$i$i = 0, $cond3$i = 0, $cond3$i72 = 0, $exception$i$i$i = 0, $sub$i66 = 0, $tobool$i68 = 0;
 $__value_$i$i$i = $this + 4 | 0;
 L1 : do if ($__nbc) {
  if ($__nbc >>> 0 > 1073741823) {
   $exception$i$i$i = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($exception$i$i$i, 41481);
   HEAP32[$exception$i$i$i >> 2] = 17472;
   ___cxa_throw($exception$i$i$i | 0, 13960, 22);
  }
  $call$i$i$i = __Znwm($__nbc << 2) | 0;
  $0 = HEAP32[$this >> 2] | 0;
  HEAP32[$this >> 2] = $call$i$i$i;
  if ($0 | 0) __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($0, HEAP32[$this + 4 >> 2] << 2);
  HEAP32[$__value_$i$i$i >> 2] = $__nbc;
  $__i$0 = 0;
  while (1) {
   if (($__i$0 | 0) == ($__nbc | 0)) break;
   HEAP32[(HEAP32[$this >> 2] | 0) + ($__i$0 << 2) >> 2] = 0;
   $__i$0 = $__i$0 + 1 | 0;
  }
  $__value_$i$i = $this + 8 | 0;
  $2 = HEAP32[$__value_$i$i >> 2] | 0;
  if ($2 | 0) {
   $4 = HEAP32[$2 + 4 >> 2] | 0;
   $sub$i66 = $__nbc + -1 | 0;
   $tobool$i68 = ($sub$i66 & $__nbc | 0) == 0;
   if (!$tobool$i68) if ($4 >>> 0 < $__nbc >>> 0) $cond3$i72 = $4; else $cond3$i72 = ($4 >>> 0) % ($__nbc >>> 0) | 0; else $cond3$i72 = $4 & $sub$i66;
   HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i72 << 2) >> 2] = $__value_$i$i;
   $__phash$0$ph$ph = $cond3$i72;
   $__pp$0$ph$ph = $2;
   while (1) {
    $__pp$0$ph = $__pp$0$ph$ph;
    L25 : while (1) {
     while (1) {
      $__cp$0 = HEAP32[$__pp$0$ph >> 2] | 0;
      if (!$__cp$0) break L1;
      $6 = HEAP32[$__cp$0 + 4 >> 2] | 0;
      if (!$tobool$i68) if ($6 >>> 0 < $__nbc >>> 0) $cond3$i = $6; else $cond3$i = ($6 >>> 0) % ($__nbc >>> 0) | 0; else $cond3$i = $6 & $sub$i66;
      if (($cond3$i | 0) == ($__phash$0$ph$ph | 0)) break;
      $arrayidx$i61 = (HEAP32[$this >> 2] | 0) + ($cond3$i << 2) | 0;
      if (!(HEAP32[$arrayidx$i61 >> 2] | 0)) break L25;
      $__value_ = $__cp$0 + 8 | 0;
      $__np$0 = $__cp$0;
      while (1) {
       $9 = HEAP32[$__np$0 >> 2] | 0;
       if (!$9) break;
       if ((HEAP32[$__value_ >> 2] | 0) == (HEAP32[$9 + 8 >> 2] | 0)) $__np$0 = $9; else break;
      }
      HEAP32[$__pp$0$ph >> 2] = $9;
      HEAP32[$__np$0 >> 2] = HEAP32[HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i << 2) >> 2] >> 2] = $__cp$0;
     }
     $__pp$0$ph = $__cp$0;
    }
    HEAP32[$arrayidx$i61 >> 2] = $__pp$0$ph;
    $__phash$0$ph$ph = $cond3$i;
    $__pp$0$ph$ph = $__cp$0;
   }
  }
 } else {
  $18 = HEAP32[$this >> 2] | 0;
  HEAP32[$this >> 2] = 0;
  if ($18 | 0) __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($18, HEAP32[$this + 4 >> 2] << 2);
  HEAP32[$__value_$i$i$i >> 2] = 0;
 } while (0);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm($this, $__nbc) {
 $this = $this | 0;
 $__nbc = $__nbc | 0;
 var $0 = 0, $18 = 0, $2 = 0, $4 = 0, $6 = 0, $9 = 0, $__cp$0 = 0, $__i$0 = 0, $__np$0 = 0, $__phash$0$ph$ph = 0, $__pp$0$ph = 0, $__pp$0$ph$ph = 0, $__value_ = 0, $__value_$i$i = 0, $__value_$i$i$i = 0, $arrayidx$i61 = 0, $call$i$i$i = 0, $cond3$i = 0, $cond3$i72 = 0, $exception$i$i$i = 0, $sub$i66 = 0, $tobool$i68 = 0;
 $__value_$i$i$i = $this + 4 | 0;
 L1 : do if ($__nbc) {
  if ($__nbc >>> 0 > 1073741823) {
   $exception$i$i$i = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($exception$i$i$i, 41481);
   HEAP32[$exception$i$i$i >> 2] = 17472;
   ___cxa_throw($exception$i$i$i | 0, 13960, 22);
  }
  $call$i$i$i = __Znwm($__nbc << 2) | 0;
  $0 = HEAP32[$this >> 2] | 0;
  HEAP32[$this >> 2] = $call$i$i$i;
  if ($0 | 0) __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($0, HEAP32[$this + 4 >> 2] << 2);
  HEAP32[$__value_$i$i$i >> 2] = $__nbc;
  $__i$0 = 0;
  while (1) {
   if (($__i$0 | 0) == ($__nbc | 0)) break;
   HEAP32[(HEAP32[$this >> 2] | 0) + ($__i$0 << 2) >> 2] = 0;
   $__i$0 = $__i$0 + 1 | 0;
  }
  $__value_$i$i = $this + 8 | 0;
  $2 = HEAP32[$__value_$i$i >> 2] | 0;
  if ($2 | 0) {
   $4 = HEAP32[$2 + 4 >> 2] | 0;
   $sub$i66 = $__nbc + -1 | 0;
   $tobool$i68 = ($sub$i66 & $__nbc | 0) == 0;
   if (!$tobool$i68) if ($4 >>> 0 < $__nbc >>> 0) $cond3$i72 = $4; else $cond3$i72 = ($4 >>> 0) % ($__nbc >>> 0) | 0; else $cond3$i72 = $4 & $sub$i66;
   HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i72 << 2) >> 2] = $__value_$i$i;
   $__phash$0$ph$ph = $cond3$i72;
   $__pp$0$ph$ph = $2;
   while (1) {
    $__pp$0$ph = $__pp$0$ph$ph;
    L25 : while (1) {
     while (1) {
      $__cp$0 = HEAP32[$__pp$0$ph >> 2] | 0;
      if (!$__cp$0) break L1;
      $6 = HEAP32[$__cp$0 + 4 >> 2] | 0;
      if (!$tobool$i68) if ($6 >>> 0 < $__nbc >>> 0) $cond3$i = $6; else $cond3$i = ($6 >>> 0) % ($__nbc >>> 0) | 0; else $cond3$i = $6 & $sub$i66;
      if (($cond3$i | 0) == ($__phash$0$ph$ph | 0)) break;
      $arrayidx$i61 = (HEAP32[$this >> 2] | 0) + ($cond3$i << 2) | 0;
      if (!(HEAP32[$arrayidx$i61 >> 2] | 0)) break L25;
      $__value_ = $__cp$0 + 8 | 0;
      $__np$0 = $__cp$0;
      while (1) {
       $9 = HEAP32[$__np$0 >> 2] | 0;
       if (!$9) break;
       if ((HEAP32[$__value_ >> 2] | 0) == (HEAP32[$9 + 8 >> 2] | 0)) $__np$0 = $9; else break;
      }
      HEAP32[$__pp$0$ph >> 2] = $9;
      HEAP32[$__np$0 >> 2] = HEAP32[HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i << 2) >> 2] >> 2] = $__cp$0;
     }
     $__pp$0$ph = $__cp$0;
    }
    HEAP32[$arrayidx$i61 >> 2] = $__pp$0$ph;
    $__phash$0$ph$ph = $cond3$i;
    $__pp$0$ph$ph = $__cp$0;
   }
  }
 } else {
  $18 = HEAP32[$this >> 2] | 0;
  HEAP32[$this >> 2] = 0;
  if ($18 | 0) __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($18, HEAP32[$this + 4 >> 2] << 2);
  HEAP32[$__value_$i$i$i >> 2] = 0;
 } while (0);
 return;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$039$0 = 0, $$sroa$046$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(352);
 $$byval_copy = sp + 344 | 0;
 $vararg_buffer9 = sp + 320 | 0;
 $vararg_buffer5 = sp + 304 | 0;
 $vararg_buffer2 = sp + 296 | 0;
 $vararg_buffer = sp + 280 | 0;
 $5 = sp + 272 | 0;
 $6 = sp + 240 | 0;
 $7 = sp + 340 | 0;
 $8 = sp;
 $9 = sp + 336 | 0;
 $10 = sp + 332 | 0;
 $11 = sp + 328 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 59184, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) __ZSt17__throw_bad_allocv(); else {
   $$2 = $$1;
   $$sroa$046$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$046$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 do if (($34 | 0) != ($6 | 0)) {
  $38 = _malloc($$2 << 3) | 0;
  if (!$38) __ZSt17__throw_bad_allocv(); else {
   $$037 = $38;
   $$sroa$039$0 = 0;
   $44 = $38;
   break;
  }
 } else {
  $$037 = $8;
  $$sroa$039$0 = 1;
  $44 = 0;
 } while (0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($34, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $41 = HEAP32[$9 >> 2] | 0;
 $42 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $43 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $41, $42, $2, $3) | 0;
 HEAP32[$1 >> 2] = $43;
 if (!$$sroa$039$0) _free($44);
 _free($$sroa$046$0);
 STACKTOP = sp;
 return $43 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$039$0 = 0, $$sroa$046$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(352);
 $$byval_copy = sp + 344 | 0;
 $vararg_buffer9 = sp + 320 | 0;
 $vararg_buffer5 = sp + 304 | 0;
 $vararg_buffer2 = sp + 296 | 0;
 $vararg_buffer = sp + 280 | 0;
 $5 = sp + 272 | 0;
 $6 = sp + 240 | 0;
 $7 = sp + 340 | 0;
 $8 = sp;
 $9 = sp + 336 | 0;
 $10 = sp + 332 | 0;
 $11 = sp + 328 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 67447, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) __ZSt17__throw_bad_allocv(); else {
   $$2 = $$1;
   $$sroa$046$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$046$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 do if (($34 | 0) != ($6 | 0)) {
  $38 = _malloc($$2 << 3) | 0;
  if (!$38) __ZSt17__throw_bad_allocv(); else {
   $$037 = $38;
   $$sroa$039$0 = 0;
   $44 = $38;
   break;
  }
 } else {
  $$037 = $8;
  $$sroa$039$0 = 1;
  $44 = 0;
 } while (0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($34, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $41 = HEAP32[$9 >> 2] | 0;
 $42 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $43 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $41, $42, $2, $3) | 0;
 HEAP32[$1 >> 2] = $43;
 if (!$$sroa$039$0) _free($44);
 _free($$sroa$046$0);
 STACKTOP = sp;
 return $43 | 0;
}

function _setCamera($id, $cameraID) {
 $id = $id | 0;
 $cameraID = $cameraID | 0;
 var $0 = 0, $2 = 0, $arhandle = 0, $call31 = 0, $call34 = 0, $call39 = 0, $call47 = 0, $call7 = 0, $cameraID$addr = 0, $height = 0, $id$addr = 0, $param = 0, $paramLT = 0, $retval$2 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer4 = 0, $vararg_buffer6 = 0, $width = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer6 = sp + 24 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $id$addr = sp + 32 | 0;
 $cameraID$addr = sp + 28 | 0;
 HEAP32[$id$addr >> 2] = $id;
 HEAP32[$cameraID$addr >> 2] = $cameraID;
 do if ((__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(65260, $id$addr) | 0) != 0 ? ($call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(65260, $id$addr) | 0, (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(65280, $cameraID$addr) | 0) != 0) : 0) {
  $param = $call7 + 8 | 0;
  _memcpy($param | 0, __ZNSt3__213unordered_mapIi7ARParamNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(65280, $cameraID$addr) | 0, 184) | 0;
  $0 = HEAP32[$param >> 2] | 0;
  $width = $call7 + 208 | 0;
  $2 = HEAP32[$call7 + 12 >> 2] | 0;
  $height = $call7 + 212 | 0;
  if (($0 | 0) == (HEAP32[$width >> 2] | 0) ? ($2 | 0) == (HEAP32[$height >> 2] | 0) : 0) {} else {
   HEAP32[$vararg_buffer >> 2] = $0;
   HEAP32[$vararg_buffer + 4 >> 2] = $2;
   _arLog(0, 2, 45770, $vararg_buffer);
   _arParamChangeSize($param, HEAP32[$width >> 2] | 0, HEAP32[$height >> 2] | 0, $param) | 0;
  }
  _deleteHandle($call7);
  $call31 = _arParamLTCreate($param, 15) | 0;
  $paramLT = $call7 + 192 | 0;
  HEAP32[$paramLT >> 2] = $call31;
  if (!$call31) {
   _arLog(0, 3, 45817, $vararg_buffer2);
   $retval$2 = -1;
   break;
  }
  $call34 = _arCreateHandle($call31) | 0;
  $arhandle = $call7 + 216 | 0;
  HEAP32[$arhandle >> 2] = $call34;
  if (!$call34) {
   _arLog(0, 3, 45855, $vararg_buffer4);
   $retval$2 = -1;
   break;
  }
  _arSetPixelFormat($call34, HEAP32[$call7 + 472 >> 2] | 0) | 0;
  $call39 = _ar3DCreateHandle($param) | 0;
  HEAP32[$call7 + 228 >> 2] = $call39;
  if (!$call39) {
   _arLog(0, 3, 45892, $vararg_buffer6);
   $retval$2 = -1;
   break;
  } else {
   _arPattAttach(HEAP32[$arhandle >> 2] | 0, HEAP32[$call7 + 220 >> 2] | 0) | 0;
   _arglCameraFrustumRH(HEAP32[$paramLT >> 2] | 0, +HEAPF64[$call7 + 312 >> 3], +HEAPF64[$call7 + 320 >> 3], $call7 + 344 | 0);
   $call47 = _createKpmHandle(HEAP32[$paramLT >> 2] | 0) | 0;
   HEAP32[$call7 + 232 >> 2] = $call47;
   $retval$2 = 0;
   break;
  }
 } else $retval$2 = -1; while (0);
 STACKTOP = sp;
 return $retval$2 | 0;
}

function _int_upsample($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$05061$us = 0, $$05061$us77 = 0, $$05157$us$us = 0, $$05157$us$us90 = 0, $$05256$us$us = 0, $$05256$us$us91 = 0, $$05354$us$us = 0, $$05354$us$us97 = 0, $$062 = 0, $$062$us = 0, $$062$us76 = 0, $$155$us$us = 0, $$155$us$us96 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $21 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $32 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $62 = 0, $8 = 0, label = 0;
 $5 = HEAP32[$0 + 476 >> 2] | 0;
 $6 = HEAP32[$3 >> 2] | 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $10 = HEAP8[$5 + 140 + $8 >> 0] | 0;
 $11 = $10 & 255;
 $13 = HEAP8[$5 + 150 + $8 >> 0] | 0;
 $14 = $13 & 255;
 $15 = $0 + 320 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) <= 0) return;
 $18 = $0 + 112 | 0;
 $19 = $10 << 24 >> 24 != 0;
 $21 = $14 + -1 | 0;
 if (($13 & 255) > 1) {
  $25 = ($10 << 24 >> 24 == 0 ? ~$11 : -2) + $11 + 2 | 0;
  $$05061$us = 0;
  $$062$us = 0;
  while (1) {
   $27 = HEAP32[$6 + ($$062$us << 2) >> 2] | 0;
   $28 = HEAP32[$18 >> 2] | 0;
   $29 = $27 + $28 | 0;
   if (($28 | 0) > 0) {
    if (!$19) break;
    $$05157$us$us = HEAP32[$2 + ($$05061$us << 2) >> 2] | 0;
    $$05256$us$us = $27;
    while (1) {
     _memset($$05256$us$us | 0, HEAP8[$$05157$us$us >> 0] | 0, $25 | 0) | 0;
     $$05354$us$us = $11;
     $$155$us$us = $$05256$us$us;
     while (1) {
      $$155$us$us = $$155$us$us + 1 | 0;
      if (($$05354$us$us | 0) <= 1) break; else $$05354$us$us = $$05354$us$us + -1 | 0;
     }
     if ($$155$us$us >>> 0 < $29 >>> 0) {
      $$05157$us$us = $$05157$us$us + 1 | 0;
      $$05256$us$us = $$155$us$us;
     } else break;
    }
    $32 = HEAP32[$18 >> 2] | 0;
   } else $32 = $28;
   _jcopy_sample_rows($6, $$062$us, $6, $$062$us + 1 | 0, $21, $32);
   $$062$us = $$062$us + $14 | 0;
   if (($$062$us | 0) >= (HEAP32[$15 >> 2] | 0)) {
    label = 27;
    break;
   } else $$05061$us = $$05061$us + 1 | 0;
  }
  if ((label | 0) == 27) return;
  while (1) {}
 }
 if (!$19) {
  $62 = (HEAP32[$18 >> 2] | 0) > 0;
  $$062 = 0;
  while (1) {
   if ($62) break;
   $$062 = $$062 + $14 | 0;
   if (($$062 | 0) >= ($16 | 0)) {
    label = 27;
    break;
   }
  }
  if ((label | 0) == 27) return;
  while (1) {}
 }
 $$05061$us77 = 0;
 $$062$us76 = 0;
 while (1) {
  $46 = HEAP32[$6 + ($$062$us76 << 2) >> 2] | 0;
  $47 = HEAP32[$18 >> 2] | 0;
  $48 = $46 + $47 | 0;
  if (($47 | 0) > 0) {
   $$05157$us$us90 = HEAP32[$2 + ($$05061$us77 << 2) >> 2] | 0;
   $$05256$us$us91 = $46;
   while (1) {
    _memset($$05256$us$us91 | 0, HEAP8[$$05157$us$us90 >> 0] | 0, $11 | 0) | 0;
    $$05354$us$us97 = $11;
    $$155$us$us96 = $$05256$us$us91;
    while (1) {
     $$155$us$us96 = $$155$us$us96 + 1 | 0;
     if (($$05354$us$us97 | 0) <= 1) break; else $$05354$us$us97 = $$05354$us$us97 + -1 | 0;
    }
    if ($$155$us$us96 >>> 0 < $48 >>> 0) {
     $$05157$us$us90 = $$05157$us$us90 + 1 | 0;
     $$05256$us$us91 = $$155$us$us96;
    } else break;
   }
  }
  $$062$us76 = $$062$us76 + $14 | 0;
  if (($$062$us76 | 0) >= (HEAP32[$15 >> 2] | 0)) break; else $$05061$us77 = $$05061$us77 + 1 | 0;
 }
 return;
}

function _arParamIdeal2Observ($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $10 = 0.0, $100 = 0.0, $101 = 0, $104 = 0.0, $110 = 0.0, $12 = 0.0, $122 = 0.0, $128 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0, $136 = 0.0, $14 = 0.0, $147 = 0.0, $16 = 0.0, $18 = 0.0, $20 = 0.0, $22 = 0.0, $25 = 0.0, $28 = 0.0, $31 = 0.0, $36 = 0.0, $61 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0, $69 = 0.0, $77 = 0.0, $89 = 0.0, $96 = 0.0, $99 = 0.0, $storemerge$sink = 0.0, label = 0;
 L1 : do switch ($5 | 0) {
 case 4:
  {
   $10 = +HEAPF64[$0 + 16 >> 3];
   $12 = +HEAPF64[$0 + 24 >> 3];
   $14 = +HEAPF64[$0 + 32 >> 3];
   $16 = +HEAPF64[$0 + 40 >> 3];
   $18 = +HEAPF64[$0 + 48 >> 3];
   $20 = +HEAPF64[$0 + 56 >> 3];
   $22 = +HEAPF64[$0 + 64 >> 3];
   $25 = ($1 - $18) * $22 / $14;
   $28 = ($2 - $20) * $22 / $16;
   $31 = $25 * $25 + $28 * $28;
   $36 = +HEAPF64[$0 >> 3] * $31 + 1.0 + $31 * (+HEAPF64[$0 + 8 >> 3] * $31);
   HEAPF64[$3 >> 3] = $18 + $14 * ($12 * ($31 + $25 * ($25 * 2.0)) + ($28 * ($10 * 2.0 * $25) + $25 * $36));
   $storemerge$sink = $20 + $16 * ($28 * ($12 * 2.0 * $25) + ($10 * ($31 + $28 * ($28 * 2.0)) + $28 * $36));
   label = 12;
   break;
  }
 case 3:
  {
   $61 = +HEAPF64[$0 >> 3];
   $64 = +HEAPF64[$0 + 16 >> 3];
   $65 = ($1 - $61) * $64;
   $66 = $0 + 8 | 0;
   $69 = $64 * ($2 - +HEAPF64[$66 >> 3]);
   if ($65 == 0.0 & $69 == 0.0) {
    HEAPF64[$3 >> 3] = $61;
    $storemerge$sink = +HEAPF64[$66 >> 3];
    label = 12;
    break L1;
   } else {
    $77 = $65 * $65 + $69 * $69;
    $89 = 1.0 - $77 * (+HEAPF64[$0 + 32 >> 3] / 1.0e8) - $77 * ($77 * (+HEAPF64[$0 + 40 >> 3] / 1.0e8 / 1.0e5));
    HEAPF64[$3 >> 3] = $61 + +HEAPF64[$0 + 24 >> 3] * ($65 * $89);
    $storemerge$sink = +HEAPF64[$66 >> 3] + $69 * $89;
    label = 12;
    break L1;
   }
   break;
  }
 case 2:
  {
   $96 = +HEAPF64[$0 >> 3];
   $99 = +HEAPF64[$0 + 16 >> 3];
   $100 = ($1 - $96) * $99;
   $101 = $0 + 8 | 0;
   $104 = $99 * ($2 - +HEAPF64[$101 >> 3]);
   if ($100 == 0.0 & $104 == 0.0) {
    HEAPF64[$3 >> 3] = $96;
    $storemerge$sink = +HEAPF64[$101 >> 3];
    label = 12;
    break L1;
   } else {
    $110 = $100 * $100 + $104 * $104;
    $122 = 1.0 - $110 * (+HEAPF64[$0 + 24 >> 3] / 1.0e8) - $110 * ($110 * (+HEAPF64[$0 + 32 >> 3] / 1.0e8 / 1.0e5));
    HEAPF64[$3 >> 3] = $96 + $100 * $122;
    $storemerge$sink = +HEAPF64[$101 >> 3] + $104 * $122;
    label = 12;
    break L1;
   }
   break;
  }
 case 1:
  {
   $128 = +HEAPF64[$0 >> 3];
   $131 = +HEAPF64[$0 + 16 >> 3];
   $132 = ($1 - $128) * $131;
   $133 = $0 + 8 | 0;
   $136 = $131 * ($2 - +HEAPF64[$133 >> 3]);
   if ($132 == 0.0 & $136 == 0.0) {
    HEAPF64[$3 >> 3] = $128;
    $storemerge$sink = +HEAPF64[$133 >> 3];
    label = 12;
    break L1;
   } else {
    $147 = 1.0 - ($132 * $132 + $136 * $136) * (+HEAPF64[$0 + 24 >> 3] / 1.0e8);
    HEAPF64[$3 >> 3] = $128 + $132 * $147;
    $storemerge$sink = +HEAPF64[$133 >> 3] + $136 * $147;
    label = 12;
    break L1;
   }
   break;
  }
 default:
  $$0 = -1;
 } while (0);
 if ((label | 0) == 12) {
  HEAPF64[$4 >> 3] = $storemerge$sink;
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$2 = 0, $15 = 0, $18 = 0, $25 = 0, $30 = 0, $34 = 0, $43 = 0, $48 = 0, $50 = 0, $56 = 0, $59 = 0, $60 = 0, $69 = 0, $72 = 0, $81 = 0, $88 = 0, $93 = 0, $95 = 0;
 L1 : do if ($0 << 24 >> 24 == $5 << 24 >> 24) if (HEAP8[$1 >> 0] | 0) {
  HEAP8[$1 >> 0] = 0;
  $15 = HEAP32[$4 >> 2] | 0;
  HEAP32[$4 >> 2] = $15 + 1;
  HEAP8[$15 >> 0] = 46;
  $18 = HEAP8[$7 + 11 >> 0] | 0;
  if ((($18 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $18 & 255) | 0) != 0 ? ($25 = HEAP32[$9 >> 2] | 0, ($25 - $8 | 0) < 160) : 0) {
   $30 = HEAP32[$10 >> 2] | 0;
   HEAP32[$9 >> 2] = $25 + 4;
   HEAP32[$25 >> 2] = $30;
   $$2 = 0;
  } else $$2 = 0;
 } else $$2 = -1; else {
  if ($0 << 24 >> 24 == $6 << 24 >> 24 ? ($34 = HEAP8[$7 + 11 >> 0] | 0, ($34 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $34 & 255) | 0) : 0) {
   if (!(HEAP8[$1 >> 0] | 0)) {
    $$2 = -1;
    break;
   }
   $43 = HEAP32[$9 >> 2] | 0;
   if (($43 - $8 | 0) >= 160) {
    $$2 = 0;
    break;
   }
   $48 = HEAP32[$10 >> 2] | 0;
   HEAP32[$9 >> 2] = $43 + 4;
   HEAP32[$43 >> 2] = $48;
   HEAP32[$10 >> 2] = 0;
   $$2 = 0;
   break;
  }
  $50 = $11 + 32 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $11 + $$0$i$idx | 0;
   if (($$0$i$idx | 0) == 32) {
    $$0$lcssa$i = $50;
    break;
   }
   if ((HEAP8[$$0$i$ptr >> 0] | 0) == $0 << 24 >> 24) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $56 = $$0$lcssa$i - $11 | 0;
  if (($56 | 0) > 31) $$2 = -1; else {
   $59 = HEAP8[12928 + $56 >> 0] | 0;
   switch ($56 | 0) {
   case 24:
   case 25:
    {
     $60 = HEAP32[$4 >> 2] | 0;
     if (($60 | 0) != ($3 | 0) ? (HEAP8[$60 + -1 >> 0] & 95) != (HEAP8[$2 >> 0] & 127) : 0) {
      $$2 = -1;
      break L1;
     }
     HEAP32[$4 >> 2] = $60 + 1;
     HEAP8[$60 >> 0] = $59;
     $$2 = 0;
     break L1;
     break;
    }
   case 23:
   case 22:
    {
     HEAP8[$2 >> 0] = 80;
     $69 = HEAP32[$4 >> 2] | 0;
     HEAP32[$4 >> 2] = $69 + 1;
     HEAP8[$69 >> 0] = $59;
     $$2 = 0;
     break L1;
     break;
    }
   default:
    {
     $72 = $59 & 95;
     if (((($72 | 0) == (HEAP8[$2 >> 0] | 0) ? (HEAP8[$2 >> 0] = $72 | 128, HEAP8[$1 >> 0] | 0) : 0) ? (HEAP8[$1 >> 0] = 0, $81 = HEAP8[$7 + 11 >> 0] | 0, ($81 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $81 & 255) | 0) : 0) ? ($88 = HEAP32[$9 >> 2] | 0, ($88 - $8 | 0) < 160) : 0) {
      $93 = HEAP32[$10 >> 2] | 0;
      HEAP32[$9 >> 2] = $88 + 4;
      HEAP32[$88 >> 2] = $93;
     }
     $95 = HEAP32[$4 >> 2] | 0;
     HEAP32[$4 >> 2] = $95 + 1;
     HEAP8[$95 >> 0] = $59;
     if (($56 | 0) > 21) {
      $$2 = 0;
      break L1;
     }
     HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
     $$2 = 0;
     break L1;
    }
   }
  }
 } while (0);
 return $$2 | 0;
}

function _quantize_fs_dither($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0114131 = 0, $$0115130 = 0, $$0116138 = 0, $$0117134 = 0, $$0117134$us = 0, $$0118 = 0, $$0119 = 0, $$0120129 = 0, $$0121 = 0, $$0122 = 0, $$0124 = 0, $$0132 = 0, $$1123127 = 0, $$1125126 = 0, $$1128 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $31 = 0, $32 = 0, $44 = 0, $47 = 0, $48 = 0, $5 = 0, $60 = 0, $63 = 0, $7 = 0, $71 = 0, $9 = 0, $$1128$looptemp = 0;
 $5 = HEAP32[$0 + 484 >> 2] | 0;
 $7 = HEAP32[$0 + 120 >> 2] | 0;
 $9 = HEAP32[$0 + 112 >> 2] | 0;
 $11 = HEAP32[$0 + 336 >> 2] | 0;
 if (($3 | 0) <= 0) return;
 $13 = ($7 | 0) > 0;
 $14 = $5 + 84 | 0;
 $15 = $5 + 24 | 0;
 $16 = $5 + 16 | 0;
 $17 = ($9 | 0) == 0;
 $18 = $9 + -1 | 0;
 $19 = Math_imul($18, $7) | 0;
 $20 = 0 - $7 | 0;
 $21 = $9 + 1 | 0;
 $$0116138 = 0;
 do {
  $22 = $2 + ($$0116138 << 2) | 0;
  _memset(HEAP32[$22 >> 2] | 0, 0, $9 | 0) | 0;
  L6 : do if ($13) {
   $24 = $1 + ($$0116138 << 2) | 0;
   if ($17) {
    $25 = (HEAP32[$14 >> 2] | 0) == 0;
    $$0117134$us = 0;
    while (1) {
     $27 = HEAP32[$5 + 68 + ($$0117134$us << 2) >> 2] | 0;
     HEAP16[($25 ? $27 : $27 + ($21 << 1) | 0) >> 1] = 0;
     $$0117134$us = $$0117134$us + 1 | 0;
     if (($$0117134$us | 0) == ($7 | 0)) break L6;
    }
   }
   $$0117134 = 0;
   do {
    $31 = (HEAP32[$24 >> 2] | 0) + $$0117134 | 0;
    $32 = HEAP32[$22 >> 2] | 0;
    if (!(HEAP32[$14 >> 2] | 0)) {
     $$0118 = $7;
     $$0119 = 1;
     $$0121 = HEAP32[$5 + 68 + ($$0117134 << 2) >> 2] | 0;
     $$0122 = $31;
     $$0124 = $32;
    } else {
     $$0118 = $20;
     $$0119 = -1;
     $$0121 = (HEAP32[$5 + 68 + ($$0117134 << 2) >> 2] | 0) + ($21 << 1) | 0;
     $$0122 = $31 + $19 | 0;
     $$0124 = $32 + $18 | 0;
    }
    $44 = HEAP32[(HEAP32[$15 >> 2] | 0) + ($$0117134 << 2) >> 2] | 0;
    $47 = HEAP32[(HEAP32[$16 >> 2] | 0) + ($$0117134 << 2) >> 2] | 0;
    $48 = Math_imul($9, $$0119) | 0;
    $$0114131 = 0;
    $$0115130 = $9;
    $$0120129 = 0;
    $$0132 = 0;
    $$1123127 = $$0122;
    $$1125126 = $$0124;
    $$1128 = $$0121;
    while (1) {
     $$1128$looptemp = $$1128;
     $$1128 = $$1128 + ($$0119 << 1) | 0;
     $60 = HEAPU8[$11 + (($$0132 + 8 + (HEAP16[$$1128 >> 1] | 0) >> 4) + (HEAPU8[$$1123127 >> 0] | 0)) >> 0] | 0;
     $63 = HEAPU8[$44 + $60 >> 0] | 0;
     HEAP8[$$1125126 >> 0] = (HEAPU8[$$1125126 >> 0] | 0) + $63;
     $71 = $60 - (HEAPU8[$47 + $63 >> 0] | 0) | 0;
     HEAP16[$$1128$looptemp >> 1] = ($71 * 3 | 0) + $$0120129;
     $$0120129 = ($71 * 5 | 0) + $$0114131 | 0;
     $$0115130 = $$0115130 + -1 | 0;
     if (!$$0115130) break; else {
      $$0114131 = $71;
      $$0132 = $71 * 7 | 0;
      $$1123127 = $$1123127 + $$0118 | 0;
      $$1125126 = $$1125126 + $$0119 | 0;
     }
    }
    HEAP16[$$0121 + ($48 << 1) >> 1] = $$0120129;
    $$0117134 = $$0117134 + 1 | 0;
   } while (($$0117134 | 0) != ($7 | 0));
  } while (0);
  HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) == 0 & 1;
  $$0116138 = $$0116138 + 1 | 0;
 } while (($$0116138 | 0) != ($3 | 0));
 return;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$041$0 = 0, $$sroa$048$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 $$byval_copy = sp + 168 | 0;
 $vararg_buffer9 = sp + 144 | 0;
 $vararg_buffer5 = sp + 128 | 0;
 $vararg_buffer2 = sp + 120 | 0;
 $vararg_buffer = sp + 104 | 0;
 $5 = sp + 96 | 0;
 $6 = sp + 64 | 0;
 $7 = sp + 164 | 0;
 $8 = sp;
 $9 = sp + 160 | 0;
 $10 = sp + 156 | 0;
 $11 = sp + 152 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 59184, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) __ZSt17__throw_bad_allocv(); else {
   $$2 = $$1;
   $$sroa$048$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$048$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 if (($34 | 0) != ($6 | 0)) {
  $38 = _malloc($$2 << 1) | 0;
  if (!$38) __ZSt17__throw_bad_allocv(); else {
   $$037 = $38;
   $$sroa$041$0 = $38;
  }
 } else {
  $$037 = $8;
  $$sroa$041$0 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($34, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $41 = HEAP32[$9 >> 2] | 0;
 $42 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $43 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $41, $42, $2, $3) | 0;
 _free($$sroa$041$0);
 _free($$sroa$048$0);
 STACKTOP = sp;
 return $43 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$041$0 = 0, $$sroa$048$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 $$byval_copy = sp + 168 | 0;
 $vararg_buffer9 = sp + 144 | 0;
 $vararg_buffer5 = sp + 128 | 0;
 $vararg_buffer2 = sp + 120 | 0;
 $vararg_buffer = sp + 104 | 0;
 $5 = sp + 96 | 0;
 $6 = sp + 64 | 0;
 $7 = sp + 164 | 0;
 $8 = sp;
 $9 = sp + 160 | 0;
 $10 = sp + 156 | 0;
 $11 = sp + 152 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 67447, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) __ZSt17__throw_bad_allocv(); else {
   $$2 = $$1;
   $$sroa$048$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$048$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 if (($34 | 0) != ($6 | 0)) {
  $38 = _malloc($$2 << 1) | 0;
  if (!$38) __ZSt17__throw_bad_allocv(); else {
   $$037 = $38;
   $$sroa$041$0 = $38;
  }
 } else {
  $$037 = $8;
  $$sroa$041$0 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($34, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $41 = HEAP32[$9 >> 2] | 0;
 $42 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $43 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $41, $42, $2, $3) | 0;
 _free($$sroa$041$0);
 _free($$sroa$048$0);
 STACKTOP = sp;
 return $43 | 0;
}

function _start_pass_2_quant($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $18 = 0, $20 = 0, $26 = 0, $3 = 0, $36 = 0, $37 = 0, $38 = 0, $44 = 0, $45 = 0, $5 = 0, $50 = 0, $6 = 0;
 $3 = HEAP32[$0 + 484 >> 2] | 0;
 $5 = HEAP32[$3 + 24 >> 2] | 0;
 $6 = $0 + 88 | 0;
 if (!(HEAP32[$6 >> 2] | 0)) $14 = 0; else {
  HEAP32[$6 >> 2] = 2;
  $14 = 2;
 }
 if (!$1) {
  HEAP32[$3 + 4 >> 2] = ($14 | 0) == 2 ? 20 : 21;
  HEAP32[$3 + 8 >> 2] = 200;
  $18 = HEAP32[$0 + 132 >> 2] | 0;
  if (($18 | 0) >= 1) {
   if (($18 | 0) > 256) {
    $26 = HEAP32[$0 >> 2] | 0;
    HEAP32[$26 + 20 >> 2] = 59;
    HEAP32[$26 + 24 >> 2] = 256;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   }
  } else {
   $20 = HEAP32[$0 >> 2] | 0;
   HEAP32[$20 + 20 >> 2] = 58;
   HEAP32[$20 + 24 >> 2] = 1;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  }
  if ((HEAP32[$6 >> 2] | 0) == 2) {
   $36 = ((HEAP32[$0 + 112 >> 2] | 0) * 6 | 0) + 12 | 0;
   $37 = $3 + 32 | 0;
   $38 = HEAP32[$37 >> 2] | 0;
   if (!$38) {
    $44 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 + 4 >> 2] | 0) + 4 >> 2] & 63]($0, 1, $36) | 0;
    HEAP32[$37 >> 2] = $44;
    $45 = $44;
   } else $45 = $38;
   _memset($45 | 0, 0, $36 | 0) | 0;
   if (!(HEAP32[$3 + 40 >> 2] | 0)) _init_error_limit($0);
   HEAP32[$3 + 36 >> 2] = 0;
  }
 } else {
  HEAP32[$3 + 4 >> 2] = 19;
  HEAP32[$3 + 8 >> 2] = 199;
  HEAP32[$3 + 28 >> 2] = 1;
 }
 $50 = $3 + 28 | 0;
 if (!(HEAP32[$50 >> 2] | 0)) return;
 _memset(HEAP32[$5 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 4 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 8 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 12 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 16 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 20 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 24 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 28 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 32 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 36 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 40 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 44 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 48 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 52 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 56 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 60 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 64 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 68 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 72 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 76 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 80 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 84 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 88 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 92 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 96 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 100 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 104 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 108 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 112 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 116 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 120 >> 2] | 0, 0, 4096) | 0;
 _memset(HEAP32[$5 + 124 >> 2] | 0, 0, 4096) | 0;
 HEAP32[$50 >> 2] = 0;
 return;
}

function _ar2GetResolution2($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0.0, $$0153 = 0.0, $$0154 = 0.0, $$0155 = 0.0, $$0156 = 0.0, $$0157 = 0.0, $$sink = 0.0, $10 = 0.0, $108 = 0.0, $11 = 0.0, $111 = 0.0, $120 = 0.0, $123 = 0.0, $125 = 0.0, $127 = 0.0, $128 = 0.0, $13 = 0.0, $130 = 0.0, $132 = 0.0, $133 = 0, $135 = 0.0, $14 = 0.0, $17 = 0.0, $20 = 0.0, $21 = 0.0, $23 = 0.0, $24 = 0.0, $27 = 0.0, $30 = 0.0, $31 = 0.0, $33 = 0.0, $34 = 0.0, $37 = 0.0, $38 = 0.0, $4 = 0, $41 = 0.0, $50 = 0.0, $53 = 0.0, $62 = 0.0, $65 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0.0, $71 = 0.0, $72 = 0.0, $75 = 0.0, $78 = 0.0, $79 = 0.0, $81 = 0.0, $82 = 0.0, $85 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0.0, $91 = 0.0, $92 = 0.0, $95 = 0.0, $96 = 0.0, $99 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $4 = sp;
 if (!$0) {
  $65 = +HEAPF32[$2 >> 2];
  $67 = +HEAPF32[$2 + 4 >> 2];
  $68 = +HEAPF32[$1 >> 2];
  $69 = $65 * $68;
  $71 = +HEAPF32[$1 + 4 >> 2];
  $72 = $67 * $71;
  $75 = +HEAPF32[$1 + 12 >> 2];
  $78 = +HEAPF32[$1 + 16 >> 2];
  $79 = $65 * $78;
  $81 = +HEAPF32[$1 + 20 >> 2];
  $82 = $67 * $81;
  $85 = +HEAPF32[$1 + 28 >> 2];
  $88 = +HEAPF32[$1 + 32 >> 2];
  $89 = $65 * $88;
  $91 = +HEAPF32[$1 + 36 >> 2];
  $92 = $67 * $91;
  $95 = +HEAPF32[$1 + 44 >> 2];
  $96 = $95 + ($89 + $92);
  $99 = $65 + 10.0;
  $108 = $95 + ($99 * $88 + $92);
  $111 = $67 + 10.0;
  $120 = $95 + ($89 + $111 * $91);
  $$0 = ($85 + ($79 + $111 * $81)) / $120;
  $$0153 = ($75 + ($69 + $111 * $71)) / $120;
  $$0154 = ($85 + ($99 * $78 + $82)) / $108;
  $$0155 = ($75 + ($99 * $68 + $72)) / $108;
  $$0156 = ($85 + ($79 + $82)) / $96;
  $$0157 = ($75 + ($69 + $72)) / $96;
 } else {
  _arUtilMatMuldff($0 + 8 | 0, $1, $4) | 0;
  $7 = +HEAPF32[$2 >> 2];
  $9 = +HEAPF32[$2 + 4 >> 2];
  $10 = +HEAPF32[$4 >> 2];
  $11 = $7 * $10;
  $13 = +HEAPF32[$4 + 4 >> 2];
  $14 = $9 * $13;
  $17 = +HEAPF32[$4 + 12 >> 2];
  $20 = +HEAPF32[$4 + 16 >> 2];
  $21 = $7 * $20;
  $23 = +HEAPF32[$4 + 20 >> 2];
  $24 = $9 * $23;
  $27 = +HEAPF32[$4 + 28 >> 2];
  $30 = +HEAPF32[$4 + 32 >> 2];
  $31 = $7 * $30;
  $33 = +HEAPF32[$4 + 36 >> 2];
  $34 = $9 * $33;
  $37 = +HEAPF32[$4 + 44 >> 2];
  $38 = $37 + ($31 + $34);
  $41 = $7 + 10.0;
  $50 = $37 + ($41 * $30 + $34);
  $53 = $9 + 10.0;
  $62 = $37 + ($31 + $53 * $33);
  $$0 = ($27 + ($21 + $53 * $23)) / $62;
  $$0153 = ($17 + ($11 + $53 * $13)) / $62;
  $$0154 = ($27 + ($41 * $20 + $24)) / $50;
  $$0155 = ($17 + ($41 * $10 + $14)) / $50;
  $$0156 = ($27 + ($21 + $24)) / $38;
  $$0157 = ($17 + ($11 + $14)) / $38;
 }
 $123 = $$0155 - $$0157;
 $125 = $$0154 - $$0156;
 $127 = $123 * $123 + $125 * $125;
 $128 = $$0153 - $$0157;
 $130 = $$0 - $$0156;
 $132 = $128 * $128 + $130 * $130;
 $133 = $127 < $132;
 $135 = +Math_sqrt(+($133 ? $132 : $127)) * 2.5399999618530273;
 HEAPF32[$3 >> 2] = $135;
 $$sink = +Math_sqrt(+($133 ? $127 : $132)) * 2.5399999618530273;
 HEAPF32[$3 + 4 >> 2] = $$sink;
 STACKTOP = sp;
 return 0;
}

function _check_square($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 var $$0 = 0, $$092 = 0, $$093 = 0, $$094 = 0, $$sroa$12$0 = 0, $$sroa$4$0 = 0, $$sroa$8$0 = 0, $10 = 0, $11 = 0, $13 = 0, $17 = 0, $18 = 0, $21 = 0, $23 = 0, $24 = 0, $29 = 0.0, $3 = 0, $36 = 0, $38 = 0, $4 = 0, $44 = 0, $5 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $3 = sp + 48 | 0;
 $4 = sp + 92 | 0;
 $5 = sp;
 $6 = sp + 88 | 0;
 $7 = $1 + 28 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $1 + 40028 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $1 + 24 | 0;
 $13 = (HEAP32[$11 >> 2] | 0) + -1 | 0;
 $$0 = 1;
 $$093 = 0;
 $$094 = 0;
 while (1) {
  if (($$0 | 0) >= ($13 | 0)) break;
  $17 = (HEAP32[$1 + 28 + ($$0 << 2) >> 2] | 0) - $8 | 0;
  $18 = Math_imul($17, $17) | 0;
  $21 = (HEAP32[$1 + 40028 + ($$0 << 2) >> 2] | 0) - $10 | 0;
  $23 = (Math_imul($21, $21) | 0) + $18 | 0;
  $24 = ($23 | 0) > ($$093 | 0);
  $spec$select = $24 ? $$0 : $$094;
  $$0 = $$0 + 1 | 0;
  $$093 = $24 ? $23 : $$093;
  $$094 = $spec$select;
 }
 $29 = +($0 | 0) / .75 * .01 * $2;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$6 >> 2] = 0;
 L5 : do if ((_get_vertex($7, $9, 0, $$094, $29, $3, $4) | 0) >= 0 ? (_get_vertex($7, $9, $$094, (HEAP32[$11 >> 2] | 0) + -1 | 0, $29, $5, $6) | 0) >= 0 : 0) {
  $36 = HEAP32[$4 >> 2] | 0;
  $38 = HEAP32[$6 >> 2] | 0;
  do if (($36 | 0) == 1 & ($38 | 0) == 1) {
   $$sroa$12$0 = HEAP32[$5 >> 2] | 0;
   $$sroa$4$0 = HEAP32[$3 >> 2] | 0;
   $$sroa$8$0 = $$094;
  } else {
   if (($36 | 0) > 1 & ($38 | 0) == 0) {
    $44 = ($$094 | 0) / 2 | 0;
    HEAP32[$6 >> 2] = 0;
    HEAP32[$4 >> 2] = 0;
    if ((_get_vertex($7, $9, 0, $44, $29, $3, $4) | 0) < 0) {
     $$092 = -1;
     break L5;
    }
    if ((_get_vertex($7, $9, $44, $$094, $29, $5, $6) | 0) < 0) {
     $$092 = -1;
     break L5;
    }
    if (!((HEAP32[$4 >> 2] | 0) == 1 & (HEAP32[$6 >> 2] | 0) == 1)) {
     $$092 = -1;
     break L5;
    }
    $$sroa$12$0 = $$094;
    $$sroa$4$0 = HEAP32[$3 >> 2] | 0;
    $$sroa$8$0 = HEAP32[$5 >> 2] | 0;
    break;
   }
   if (!(($36 | 0) == 0 & ($38 | 0) > 1)) {
    $$092 = -1;
    break L5;
   }
   $60 = ($$094 + -1 + (HEAP32[$11 >> 2] | 0) | 0) / 2 | 0;
   HEAP32[$6 >> 2] = 0;
   HEAP32[$4 >> 2] = 0;
   if ((_get_vertex($7, $9, $$094, $60, $29, $3, $4) | 0) < 0) {
    $$092 = -1;
    break L5;
   }
   if ((_get_vertex($7, $9, $60, (HEAP32[$11 >> 2] | 0) + -1 | 0, $29, $5, $6) | 0) < 0) {
    $$092 = -1;
    break L5;
   }
   if (!((HEAP32[$4 >> 2] | 0) == 1 & (HEAP32[$6 >> 2] | 0) == 1)) {
    $$092 = -1;
    break L5;
   }
   $$sroa$12$0 = HEAP32[$5 >> 2] | 0;
   $$sroa$4$0 = $$094;
   $$sroa$8$0 = HEAP32[$3 >> 2] | 0;
  } while (0);
  HEAP32[$1 + 80028 >> 2] = 0;
  HEAP32[$1 + 80032 >> 2] = $$sroa$4$0;
  HEAP32[$1 + 80036 >> 2] = $$sroa$8$0;
  HEAP32[$1 + 80040 >> 2] = $$sroa$12$0;
  HEAP32[$1 + 80044 >> 2] = (HEAP32[$11 >> 2] | 0) + -1;
  $$092 = 0;
 } else $$092 = -1; while (0);
 STACKTOP = sp;
 return $$092 | 0;
}

function _wcsrtombs($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$05674 = 0, $$057$lcssa = 0, $$05784 = 0, $$05873 = 0, $$1 = 0, $$159 = 0, $$260$lcssa = 0, $$26083 = 0, $$278 = 0, $$3 = 0, $$361 = 0, $$477 = 0, $$5 = 0, $$pn = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $23 = 0, $31 = 0, $34 = 0, $35 = 0, $4 = 0, $40 = 0, $51 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 L1 : do if (!$0) {
  $6 = HEAP32[$1 >> 2] | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if (!$7) $$0 = 0; else {
   $$05674 = $6;
   $$05873 = 0;
   $10 = $7;
   while (1) {
    if ($10 >>> 0 > 127) {
     $11 = _wcrtomb($4, $10, 0) | 0;
     if (($11 | 0) == -1) {
      $$0 = -1;
      break L1;
     } else $$pn = $11;
    } else $$pn = 1;
    $$159 = $$pn + $$05873 | 0;
    $$05674 = $$05674 + 4 | 0;
    $10 = HEAP32[$$05674 >> 2] | 0;
    if (!$10) {
     $$0 = $$159;
     break;
    } else $$05873 = $$159;
   }
  }
 } else {
  L10 : do if ($2 >>> 0 > 3) {
   $$05784 = $0;
   $$26083 = $2;
   $18 = HEAP32[$1 >> 2] | 0;
   while (1) {
    $17 = HEAP32[$18 >> 2] | 0;
    if (($17 + -1 | 0) >>> 0 > 126) {
     if (!$17) break;
     $23 = _wcrtomb($$05784, $17, 0) | 0;
     if (($23 | 0) == -1) {
      $$0 = -1;
      break L1;
     }
     $$1 = $$05784 + $23 | 0;
     $$361 = $$26083 - $23 | 0;
     $31 = $18;
    } else {
     HEAP8[$$05784 >> 0] = $17;
     $$1 = $$05784 + 1 | 0;
     $$361 = $$26083 + -1 | 0;
     $31 = HEAP32[$1 >> 2] | 0;
    }
    $18 = $31 + 4 | 0;
    HEAP32[$1 >> 2] = $18;
    if ($$361 >>> 0 <= 3) {
     $$057$lcssa = $$1;
     $$260$lcssa = $$361;
     break L10;
    } else {
     $$05784 = $$1;
     $$26083 = $$361;
    }
   }
   HEAP8[$$05784 >> 0] = 0;
   HEAP32[$1 >> 2] = 0;
   $$0 = $2 - $$26083 | 0;
   break L1;
  } else {
   $$057$lcssa = $0;
   $$260$lcssa = $2;
  } while (0);
  if ($$260$lcssa) {
   $$278 = $$057$lcssa;
   $$477 = $$260$lcssa;
   $35 = HEAP32[$1 >> 2] | 0;
   while (1) {
    $34 = HEAP32[$35 >> 2] | 0;
    if (($34 + -1 | 0) >>> 0 > 126) {
     if (!$34) {
      label = 20;
      break;
     }
     $40 = _wcrtomb($4, $34, 0) | 0;
     if (($40 | 0) == -1) {
      $$0 = -1;
      break L1;
     }
     if ($$477 >>> 0 < $40 >>> 0) {
      label = 23;
      break;
     }
     _wcrtomb($$278, HEAP32[$35 >> 2] | 0, 0) | 0;
     $$3 = $$278 + $40 | 0;
     $$5 = $$477 - $40 | 0;
     $51 = $35;
    } else {
     HEAP8[$$278 >> 0] = $34;
     $$3 = $$278 + 1 | 0;
     $$5 = $$477 + -1 | 0;
     $51 = HEAP32[$1 >> 2] | 0;
    }
    $35 = $51 + 4 | 0;
    HEAP32[$1 >> 2] = $35;
    if (!$$5) {
     $$0 = $2;
     break L1;
    } else {
     $$278 = $$3;
     $$477 = $$5;
    }
   }
   if ((label | 0) == 20) {
    HEAP8[$$278 >> 0] = 0;
    HEAP32[$1 >> 2] = 0;
    $$0 = $2 - $$477 | 0;
    break;
   } else if ((label | 0) == 23) {
    $$0 = $2 - $$477 | 0;
    break;
   }
  } else $$0 = $2;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arGetLine($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0108 = 0, $$0109 = 0, $$0110 = 0, $$1 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $17 = 0, $22 = 0.0, $25 = 0, $29 = 0, $31 = 0, $33 = 0, $44 = 0, $45 = 0, $54 = 0, $56 = 0.0, $59 = 0.0, $61 = 0, $7 = 0, $72 = 0, $73 = 0, $76 = 0.0, $78 = 0, $8 = 0, $81 = 0.0, $83 = 0.0, $86 = 0, $89 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp + 4 | 0;
 $8 = sp;
 $9 = _arVecAlloc(2) | 0;
 $10 = _arVecAlloc(2) | 0;
 $11 = _arMatrixAlloc(2, 2) | 0;
 $$0109 = 0;
 L1 : while (1) {
  if ($$0109 >>> 0 >= 4) {
   label = 10;
   break;
  }
  $13 = $$0109 + 1 | 0;
  $15 = HEAP32[$3 + ($13 << 2) >> 2] | 0;
  $17 = HEAP32[$3 + ($$0109 << 2) >> 2] | 0;
  $22 = +($15 + 1 - $17 | 0) * .05 + .5;
  $25 = ~~($22 + +($17 | 0));
  $29 = ~~(+($15 | 0) - $22) - $25 | 0;
  $31 = _arMatrixAlloc($29 + 1 | 0, 2) | 0;
  $$0108 = 0;
  while (1) {
   if (($$0108 | 0) > ($29 | 0)) break;
   $33 = $$0108 + $25 | 0;
   if ((_arParamObserv2IdealLTf($4, +(HEAP32[$0 + ($33 << 2) >> 2] | 0), +(HEAP32[$1 + ($33 << 2) >> 2] | 0), $7, $8) | 0) < 0) {
    label = 6;
    break L1;
   }
   $44 = HEAP32[$31 >> 2] | 0;
   $45 = $$0108 << 1;
   HEAPF64[$44 + ($45 << 3) >> 3] = +HEAPF32[$7 >> 2];
   HEAPF64[$44 + (($45 | 1) << 3) >> 3] = +HEAPF32[$8 >> 2];
   $$0108 = $$0108 + 1 | 0;
  }
  if ((_arMatrixPCA($31, $11, $9, $10) | 0) < 0) {
   label = 14;
   break;
  }
  $54 = HEAP32[$11 >> 2] | 0;
  $56 = +HEAPF64[$54 + 8 >> 3];
  HEAPF64[$5 + ($$0109 * 24 | 0) >> 3] = $56;
  $59 = -+HEAPF64[$54 >> 3];
  HEAPF64[$5 + ($$0109 * 24 | 0) + 8 >> 3] = $59;
  $61 = HEAP32[$10 >> 2] | 0;
  HEAPF64[$5 + ($$0109 * 24 | 0) + 16 >> 3] = -($56 * +HEAPF64[$61 >> 3] + +HEAPF64[$61 + 8 >> 3] * $59);
  _arMatrixFree($31) | 0;
  $$0109 = $13;
 }
 L10 : do if ((label | 0) == 6) label = 14; else if ((label | 0) == 10) {
  _arMatrixFree($11) | 0;
  _arVecFree($10) | 0;
  _arVecFree($9) | 0;
  $$1 = 0;
  while (1) {
   if ($$1 >>> 0 >= 4) {
    $$0110 = 0;
    break L10;
   }
   $72 = $$1 + 3 & 3;
   $73 = $5 + ($72 * 24 | 0) | 0;
   $76 = +HEAPF64[$5 + ($$1 * 24 | 0) + 8 >> 3];
   $78 = $5 + ($$1 * 24 | 0) | 0;
   $81 = +HEAPF64[$5 + ($72 * 24 | 0) + 8 >> 3];
   $83 = +HEAPF64[$73 >> 3] * $76 - +HEAPF64[$78 >> 3] * $81;
   if (+Math_abs(+$83) < .0001) {
    $$0110 = -1;
    break L10;
   }
   $86 = $5 + ($$1 * 24 | 0) + 16 | 0;
   $89 = $5 + ($72 * 24 | 0) + 16 | 0;
   HEAPF64[$6 + ($$1 << 4) >> 3] = ($81 * +HEAPF64[$86 >> 3] - $76 * +HEAPF64[$89 >> 3]) / $83;
   HEAPF64[$6 + ($$1 << 4) + 8 >> 3] = (+HEAPF64[$78 >> 3] * +HEAPF64[$89 >> 3] - +HEAPF64[$73 >> 3] * +HEAPF64[$86 >> 3]) / $83;
   $$1 = $$1 + 1 | 0;
  }
 } while (0);
 if ((label | 0) == 14) {
  _arMatrixFree($31) | 0;
  _arMatrixFree($11) | 0;
  _arVecFree($10) | 0;
  _arVecFree($9) | 0;
  $$0110 = -1;
 }
 STACKTOP = sp;
 return $$0110 | 0;
}

function _arGetMarkerInfo($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = +$10;
 $11 = $11 | 0;
 $12 = $12 | 0;
 $13 = $13 | 0;
 var $$0 = 0, $$0113 = 0, $$1 = 0, $$sink = 0, $$sink118 = 0, $$sink119$in = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $42 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $14 = sp + 4 | 0;
 $15 = sp;
 $16 = $8 >>> 0 < 2;
 $17 = ($8 | 0) == 2;
 $$0 = 0;
 $$0113 = 0;
 while (1) {
  if (($$0 | 0) >= ($5 | 0)) break;
  HEAP32[$11 + ($$0113 << 8) >> 2] = HEAP32[$4 + ($$0 * 80048 | 0) >> 2];
  if ((_arParamObserv2IdealLTf($9, +HEAPF64[$4 + ($$0 * 80048 | 0) + 8 >> 3], +HEAPF64[$4 + ($$0 * 80048 | 0) + 16 >> 3], $14, $15) | 0) >= 0 ? (HEAPF64[$11 + ($$0113 << 8) + 56 >> 3] = +HEAPF32[$14 >> 2], HEAPF64[$11 + ($$0113 << 8) + 64 >> 3] = +HEAPF32[$15 >> 2], $42 = $11 + ($$0113 << 8) + 168 | 0, (_arGetLine($4 + ($$0 * 80048 | 0) + 28 | 0, $4 + ($$0 * 80048 | 0) + 40028 | 0, HEAP32[$4 + ($$0 * 80048 | 0) + 24 >> 2] | 0, $4 + ($$0 * 80048 | 0) + 80028 | 0, $9, $11 + ($$0113 << 8) + 72 | 0, $42) | 0) >= 0) : 0) {
   $45 = $11 + ($$0113 << 8) + 8 | 0;
   $46 = $11 + ($$0113 << 8) + 20 | 0;
   $47 = $11 + ($$0113 << 8) + 40 | 0;
   $48 = $11 + ($$0113 << 8) + 12 | 0;
   $49 = $11 + ($$0113 << 8) + 24 | 0;
   $50 = $11 + ($$0113 << 8) + 48 | 0;
   $53 = _arPattGetIDGlobal($6, $7, $8, $0, $1, $2, $3, $9, $42, $10, $45, $46, $47, $48, $49, $50, $13, $11 + ($$0113 << 8) + 240 | 0, $11 + ($$0113 << 8) + 248 | 0) | 0;
   switch ($53 | 0) {
   case 0:
    {
     $$sink = $53;
     label = 12;
     break;
    }
   case -1:
    {
     $$sink = 2;
     label = 12;
     break;
    }
   case -2:
    {
     $$sink = 3;
     label = 12;
     break;
    }
   case -3:
    {
     $$sink = 4;
     label = 12;
     break;
    }
   case -4:
    {
     $$sink = 5;
     label = 12;
     break;
    }
   case -5:
    {
     $$sink = 9;
     label = 12;
     break;
    }
   case -6:
    {
     $$sink = 1;
     label = 12;
     break;
    }
   default:
    {}
   }
   if ((label | 0) == 12) {
    label = 0;
    HEAP32[$11 + ($$0113 << 8) + 236 >> 2] = $$sink;
   }
   if (!$16) {
    if ($17) {
     HEAP32[$11 + ($$0113 << 8) + 4 >> 2] = HEAP32[$48 >> 2];
     $$sink118 = $50;
     $$sink119$in = $49;
     label = 17;
    }
   } else {
    HEAP32[$11 + ($$0113 << 8) + 4 >> 2] = HEAP32[$45 >> 2];
    $$sink118 = $47;
    $$sink119$in = $46;
    label = 17;
   }
   if ((label | 0) == 17) {
    label = 0;
    HEAP32[$11 + ($$0113 << 8) + 16 >> 2] = HEAP32[$$sink119$in >> 2];
    HEAPF64[$11 + ($$0113 << 8) + 32 >> 3] = +HEAPF64[$$sink118 >> 3];
   }
   $$1 = $$0113 + 1 | 0;
  } else $$1 = $$0113;
  $$0 = $$0 + 1 | 0;
  $$0113 = $$1;
 }
 HEAP32[$12 >> 2] = $$0113;
 STACKTOP = sp;
 return 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCtorDtorNameERPNS0_4NodeEPNS5_9NameStateE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1 = 0, $$3 = 0, $10 = 0, $12 = 0, $13 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $4 = sp + 4 | 0;
 $5 = HEAP32[$1 >> 2] | 0;
 if ((__ZNK12_GLOBAL__N_116itanium_demangle4Node7getKindEv($5) | 0) << 24 >> 24 == 36 ? ($9 = HEAP32[$5 + 8 >> 2] | 0, HEAP32[$3 >> 2] = $9, ($9 + -2 | 0) >>> 0 < 4) : 0) {
  $10 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_27ExpandedSpecialSubstitutionEJRNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0, $3) | 0;
  HEAP32[$1 >> 2] = $10;
 }
 L7 : do if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 67) | 0)) if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 == 68) {
  $25 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 1) | 0;
  switch ($25 << 24 >> 24) {
  case 53:
  case 50:
  case 49:
  case 48:
   break;
  default:
   {
    $$3 = 0;
    break L7;
   }
  }
  HEAP32[$3 >> 2] = ($25 << 24 >> 24) + -48;
  HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 2;
  if ($2 | 0) HEAP8[$2 >> 0] = 1;
  HEAP8[$4 >> 0] = 1;
  $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12CtorDtorNameEJRPNS0_4NodeEbRiEEES9_DpOT0_($0, $1, $4, $3) | 0;
 } else $$3 = 0; else {
  $12 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 73) | 0;
  $13 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0;
  switch ($13 << 24 >> 24) {
  case 53:
  case 51:
  case 50:
  case 49:
   break;
  default:
   {
    $$3 = 0;
    break L7;
   }
  }
  HEAP32[$3 >> 2] = ($13 << 24 >> 24) + -48;
  HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
  if ($2 | 0) HEAP8[$2 >> 0] = 1;
  if ($12 ? (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0, $2) | 0) == 0 : 0) $$1 = 0; else {
   HEAP8[$4 >> 0] = 0;
   $$1 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12CtorDtorNameEJRPNS0_4NodeEbRiEEES9_DpOT0_($0, $1, $4, $3) | 0;
  }
  $$3 = $$1;
 } while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function _decode_mcu_DC_refine_64($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$017$i = 0, $$037$lcssa = 0, $$03744 = 0, $$03943 = 0, $$040 = 0, $$045 = 0, $$1 = 0, $$138 = 0, $$in = 0, $11 = 0, $15 = 0, $16 = 0, $2 = 0, $23 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $49 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $65 = 0, $73 = 0, $75 = 0, $76 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $4 = HEAP32[$0 + 468 >> 2] | 0;
 $5 = $0 + 280 | 0;
 if (HEAP32[$5 >> 2] | 0 ? ($8 = $4 + 44 | 0, (HEAP32[$8 >> 2] | 0) == 0) : 0) {
  $11 = $4 + 16 | 0;
  $15 = HEAP32[$0 + 464 >> 2] | 0;
  $16 = $15 + 24 | 0;
  HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + ((HEAP32[$11 >> 2] | 0) / 8 | 0);
  HEAP32[$11 >> 2] = 0;
  if (!(FUNCTION_TABLE_ii[HEAP32[$15 + 8 >> 2] & 127]($0) | 0)) {
   $$040 = 0;
   STACKTOP = sp;
   return $$040 | 0;
  }
  $23 = $0 + 340 | 0;
  if ((HEAP32[$23 >> 2] | 0) > 0) {
   $$017$i = 0;
   do {
    HEAP32[$4 + 24 + ($$017$i << 2) >> 2] = 0;
    $$017$i = $$017$i + 1 | 0;
   } while (($$017$i | 0) < (HEAP32[$23 >> 2] | 0));
  }
  HEAP32[$4 + 20 >> 2] = 0;
  HEAP32[$8 >> 2] = HEAP32[$5 >> 2];
  if (!(HEAP32[$0 + 440 >> 2] | 0)) HEAP32[$4 + 40 >> 2] = 0;
 }
 HEAP32[$2 + 16 >> 2] = $0;
 $37 = $0 + 24 | 0;
 $38 = HEAP32[$37 >> 2] | 0;
 $39 = HEAP32[$38 >> 2] | 0;
 HEAP32[$2 >> 2] = $39;
 $41 = HEAP32[$38 + 4 >> 2] | 0;
 $42 = $2 + 4 | 0;
 HEAP32[$42 >> 2] = $41;
 $43 = $4 + 12 | 0;
 $44 = HEAP32[$43 >> 2] | 0;
 $45 = $4 + 16 | 0;
 $46 = HEAP32[$45 >> 2] | 0;
 $49 = 1 << HEAP32[$0 + 424 >> 2];
 $50 = $0 + 368 | 0;
 do if ((HEAP32[$50 >> 2] | 0) > 0) {
  $53 = $2 + 8 | 0;
  $54 = $2 + 12 | 0;
  $$03744 = $44;
  $$03943 = 0;
  $$045 = $46;
  while (1) {
   if (($$045 | 0) < 1) {
    if (!(_jpeg_fill_bit_buffer($2, $$03744, $$045, 1) | 0)) {
     $$040 = 0;
     label = 19;
     break;
    }
    $$1 = HEAP32[$54 >> 2] | 0;
    $$138 = HEAP32[$53 >> 2] | 0;
   } else {
    $$1 = $$045;
    $$138 = $$03744;
   }
   $$045 = $$1 + -1 | 0;
   if (1 << $$045 & $$138 | 0) {
    $65 = HEAP32[$1 + ($$03943 << 2) >> 2] | 0;
    HEAP16[$65 >> 1] = $49 | (HEAPU16[$65 >> 1] | 0);
   }
   $$03943 = $$03943 + 1 | 0;
   if (($$03943 | 0) >= (HEAP32[$50 >> 2] | 0)) {
    label = 17;
    break;
   } else $$03744 = $$138;
  }
  if ((label | 0) == 17) {
   $$0$lcssa = $$045;
   $$037$lcssa = $$138;
   $$in = HEAP32[$37 >> 2] | 0;
   $73 = HEAP32[$2 >> 2] | 0;
   $75 = HEAP32[$42 >> 2] | 0;
   break;
  } else if ((label | 0) == 19) {
   STACKTOP = sp;
   return $$040 | 0;
  }
 } else {
  $$0$lcssa = $46;
  $$037$lcssa = $44;
  $$in = $38;
  $73 = $39;
  $75 = $41;
 } while (0);
 HEAP32[$$in >> 2] = $73;
 HEAP32[$$in + 4 >> 2] = $75;
 HEAP32[$43 >> 2] = $$037$lcssa;
 HEAP32[$45 >> 2] = $$0$lcssa;
 $76 = $4 + 44 | 0;
 HEAP32[$76 >> 2] = (HEAP32[$76 >> 2] | 0) + -1;
 $$040 = 1;
 STACKTOP = sp;
 return $$040 | 0;
}

function __ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$2 = 0, $15 = 0, $18 = 0, $25 = 0, $30 = 0, $34 = 0, $43 = 0, $48 = 0, $50 = 0, $56 = 0, $60 = 0, $61 = 0, $65 = 0, $75 = 0, $84 = 0, $91 = 0, $96 = 0, $98 = 0;
 L1 : do if (($0 | 0) == ($5 | 0)) if (HEAP8[$1 >> 0] | 0) {
  HEAP8[$1 >> 0] = 0;
  $15 = HEAP32[$4 >> 2] | 0;
  HEAP32[$4 >> 2] = $15 + 1;
  HEAP8[$15 >> 0] = 46;
  $18 = HEAP8[$7 + 11 >> 0] | 0;
  if ((($18 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $18 & 255) | 0) != 0 ? ($25 = HEAP32[$9 >> 2] | 0, ($25 - $8 | 0) < 160) : 0) {
   $30 = HEAP32[$10 >> 2] | 0;
   HEAP32[$9 >> 2] = $25 + 4;
   HEAP32[$25 >> 2] = $30;
   $$2 = 0;
  } else $$2 = 0;
 } else $$2 = -1; else {
  if (($0 | 0) == ($6 | 0) ? ($34 = HEAP8[$7 + 11 >> 0] | 0, ($34 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $34 & 255) | 0) : 0) {
   if (!(HEAP8[$1 >> 0] | 0)) {
    $$2 = -1;
    break;
   }
   $43 = HEAP32[$9 >> 2] | 0;
   if (($43 - $8 | 0) >= 160) {
    $$2 = 0;
    break;
   }
   $48 = HEAP32[$10 >> 2] | 0;
   HEAP32[$9 >> 2] = $43 + 4;
   HEAP32[$43 >> 2] = $48;
   HEAP32[$10 >> 2] = 0;
   $$2 = 0;
   break;
  }
  $50 = $11 + 128 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $11 + ($$0$i$idx << 2) | 0;
   if (($$0$i$idx | 0) == 32) {
    $$0$lcssa$i = $50;
    break;
   }
   if ((HEAP32[$$0$i$ptr >> 2] | 0) == ($0 | 0)) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $56 = $$0$lcssa$i - $11 | 0;
  if (($56 | 0) <= 124) {
   $60 = HEAP8[12928 + ($56 >> 2) >> 0] | 0;
   $61 = $56 + -88 | 0;
   switch ($61 >>> 2 | $61 << 30 | 0) {
   case 2:
   case 3:
    {
     $65 = HEAP32[$4 >> 2] | 0;
     if (($65 | 0) != ($3 | 0) ? (HEAP8[$65 + -1 >> 0] & 95) != (HEAP8[$2 >> 0] & 127) : 0) {
      $$2 = -1;
      break L1;
     }
     HEAP32[$4 >> 2] = $65 + 1;
     HEAP8[$65 >> 0] = $60;
     $$2 = 0;
     break L1;
     break;
    }
   case 1:
   case 0:
    {
     HEAP8[$2 >> 0] = 80;
     break;
    }
   default:
    {
     $75 = $60 & 95;
     if (((($75 | 0) == (HEAP8[$2 >> 0] | 0) ? (HEAP8[$2 >> 0] = $75 | 128, HEAP8[$1 >> 0] | 0) : 0) ? (HEAP8[$1 >> 0] = 0, $84 = HEAP8[$7 + 11 >> 0] | 0, ($84 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $84 & 255) | 0) : 0) ? ($91 = HEAP32[$9 >> 2] | 0, ($91 - $8 | 0) < 160) : 0) {
      $96 = HEAP32[$10 >> 2] | 0;
      HEAP32[$9 >> 2] = $91 + 4;
      HEAP32[$91 >> 2] = $96;
     }
    }
   }
   $98 = HEAP32[$4 >> 2] | 0;
   HEAP32[$4 >> 2] = $98 + 1;
   HEAP8[$98 >> 0] = $60;
   if (($56 | 0) > 84) $$2 = 0; else {
    HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
    $$2 = 0;
   }
  } else $$2 = -1;
 } while (0);
 return $$2 | 0;
}

function _jinit_d_main_controller($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$042 = 0, $$04243$i = 0, $$04344 = 0, $$044$i = 0, $$045 = 0, $$phi$trans$insert = 0, $$pre$phiZ2D = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $22 = 0, $25 = 0, $28 = 0, $29 = 0, $30 = 0, $32 = 0, $36 = 0, $37 = 0, $42 = 0, $44 = 0, $47 = 0, $5 = 0, $50 = 0, $58 = 0, $6 = 0, $60 = 0, $64 = 0, $67 = 0, $73 = 0, $74 = 0, $8 = 0, $82 = 0, $83 = 0, $84 = 0, $86 = 0, $90 = 0, $91 = 0;
 $2 = $0 + 4 | 0;
 $5 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$2 >> 2] >> 2] & 63]($0, 1, 80) | 0;
 $6 = $0 + 448 | 0;
 HEAP32[$6 >> 2] = $5;
 HEAP32[$5 >> 2] = 136;
 if ($1 | 0) {
  $8 = HEAP32[$0 >> 2] | 0;
  HEAP32[$8 + 20 >> 2] = 3;
  FUNCTION_TABLE_vi[HEAP32[$8 >> 2] & 255]($0);
 }
 $16 = $0 + 328 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (!(HEAP32[(HEAP32[$0 + 476 >> 2] | 0) + 8 >> 2] | 0)) {
  HEAP32[$5 + 52 >> 2] = $17;
  $$phi$trans$insert = $0 + 36 | 0;
  $$042 = $17;
  $$pre$phiZ2D = $$phi$trans$insert;
  $64 = HEAP32[$$phi$trans$insert >> 2] | 0;
  $91 = $17;
 } else {
  if (($17 | 0) < 2) {
   $19 = HEAP32[$0 >> 2] | 0;
   HEAP32[$19 + 20 >> 2] = 48;
   FUNCTION_TABLE_vi[HEAP32[$19 >> 2] & 255]($0);
   $37 = HEAP32[$16 >> 2] | 0;
  } else $37 = $17;
  $22 = HEAP32[$6 >> 2] | 0;
  $25 = $0 + 36 | 0;
  $28 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$2 >> 2] >> 2] & 63]($0, 1, HEAP32[$25 >> 2] << 3) | 0;
  $29 = $22 + 60 | 0;
  HEAP32[$29 >> 2] = $28;
  $30 = HEAP32[$25 >> 2] | 0;
  $32 = $22 + 64 | 0;
  HEAP32[$32 >> 2] = $28 + ($30 << 2);
  if (($30 | 0) > 0) {
   $36 = $37 + 4 | 0;
   $$04243$i = HEAP32[$0 + 216 >> 2] | 0;
   $$044$i = 0;
   while (1) {
    $42 = Math_imul(HEAP32[$$04243$i + 40 >> 2] | 0, HEAP32[$$04243$i + 12 >> 2] | 0) | 0;
    $44 = ($42 | 0) / (HEAP32[$16 >> 2] | 0) | 0;
    $47 = Math_imul($44, $36) | 0;
    $50 = (FUNCTION_TABLE_iiii[HEAP32[HEAP32[$2 >> 2] >> 2] & 63]($0, 1, $47 << 3) | 0) + ($44 << 2) | 0;
    HEAP32[(HEAP32[$29 >> 2] | 0) + ($$044$i << 2) >> 2] = $50;
    HEAP32[(HEAP32[$32 >> 2] | 0) + ($$044$i << 2) >> 2] = $50 + ($47 << 2);
    $$044$i = $$044$i + 1 | 0;
    $58 = HEAP32[$25 >> 2] | 0;
    if (($$044$i | 0) >= ($58 | 0)) {
     $90 = $58;
     break;
    } else $$04243$i = $$04243$i + 88 | 0;
   }
  } else $90 = $30;
  $60 = HEAP32[$16 >> 2] | 0;
  $$042 = $60 + 2 | 0;
  $$pre$phiZ2D = $25;
  $64 = $90;
  $91 = $60;
 }
 if (($64 | 0) <= 0) return;
 $67 = $5 + 8 | 0;
 $$04344 = 0;
 $$045 = HEAP32[$0 + 216 >> 2] | 0;
 $74 = $91;
 while (1) {
  $73 = (Math_imul(HEAP32[$$045 + 40 >> 2] | 0, HEAP32[$$045 + 12 >> 2] | 0) | 0) / ($74 | 0) | 0;
  $82 = Math_imul(HEAP32[$$045 + 36 >> 2] | 0, HEAP32[$$045 + 28 >> 2] | 0) | 0;
  $83 = Math_imul($73, $$042) | 0;
  $84 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 8 >> 2] & 15]($0, 1, $82, $83) | 0;
  HEAP32[$67 + ($$04344 << 2) >> 2] = $84;
  $86 = $$04344 + 1 | 0;
  if (($86 | 0) >= (HEAP32[$$pre$phiZ2D >> 2] | 0)) break;
  $$04344 = $86;
  $$045 = $$045 + 88 | 0;
  $74 = HEAP32[$16 >> 2] | 0;
 }
 return;
}

function _arglCameraFrustumRH($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = $3 | 0;
 var $$0 = 0, $$053 = 0, $$1 = 0, $$154 = 0, $$2 = 0, $10 = 0, $15 = 0.0, $19 = 0, $24 = 0.0, $34 = 0.0, $4 = 0, $48 = 0, $5 = 0, $6 = 0, $62 = 0, $64 = 0.0, $7 = 0, $71 = 0, $75 = 0.0, $77 = 0.0, $79 = 0.0, $8 = 0, $81 = 0.0, $82 = 0, $83 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(416);
 $4 = sp + 304 | 0;
 $5 = sp + 208 | 0;
 $6 = sp + 128 | 0;
 $7 = sp;
 $8 = HEAP32[$0 >> 2] | 0;
 $10 = HEAP32[$0 + 4 >> 2] | 0;
 L1 : do if ((_arParamDecompMat($0 + 8 | 0, $4, $5) | 0) < 0) _arLog(0, 3, 24663, sp + 400 | 0); else {
  $15 = +($10 + -1 | 0);
  $$053 = 0;
  while (1) {
   if (($$053 | 0) == 4) break;
   $19 = $4 + 32 + ($$053 << 3) | 0;
   HEAPF64[$19 >> 3] = +HEAPF64[$4 + 64 + ($$053 << 3) >> 3] * $15 - +HEAPF64[$19 >> 3];
   $$053 = $$053 + 1 | 0;
  }
  $24 = +HEAPF64[$4 + 80 >> 3];
  $$154 = 0;
  while (1) {
   if (($$154 | 0) == 3) break;
   $$0 = 0;
   while (1) {
    if (($$0 | 0) == 3) break;
    HEAPF64[$6 + ($$154 * 24 | 0) + ($$0 << 3) >> 3] = +HEAPF64[$4 + ($$154 << 5) + ($$0 << 3) >> 3] / $24;
    $$0 = $$0 + 1 | 0;
   }
   $$154 = $$154 + 1 | 0;
  }
  $34 = +($8 + -1 | 0);
  HEAPF64[$7 >> 3] = +HEAPF64[$6 >> 3] * 2.0 / $34;
  HEAPF64[$7 + 8 >> 3] = +HEAPF64[$6 + 8 >> 3] * 2.0 / $34;
  HEAPF64[$7 + 16 >> 3] = -(+HEAPF64[$6 + 16 >> 3] * 2.0 / $34 + -1.0);
  $48 = $7 + 24 | 0;
  HEAP32[$48 >> 2] = 0;
  HEAP32[$48 + 4 >> 2] = 0;
  HEAP32[$48 + 8 >> 2] = 0;
  HEAP32[$48 + 12 >> 2] = 0;
  HEAPF64[$7 + 40 >> 3] = -(+HEAPF64[$6 + 32 >> 3] * 2.0 / $15);
  HEAPF64[$7 + 48 >> 3] = -(+HEAPF64[$6 + 40 >> 3] * 2.0 / $15 + -1.0);
  $62 = $7 + 56 | 0;
  $64 = $1 - $2;
  HEAP32[$62 >> 2] = 0;
  HEAP32[$62 + 4 >> 2] = 0;
  HEAP32[$62 + 8 >> 2] = 0;
  HEAP32[$62 + 12 >> 2] = 0;
  HEAP32[$62 + 16 >> 2] = 0;
  HEAP32[$62 + 20 >> 2] = 0;
  HEAPF64[$7 + 80 >> 3] = ($1 + $2) / $64;
  HEAPF64[$7 + 88 >> 3] = $2 * 2.0 * $1 / $64;
  $71 = $7 + 96 | 0;
  HEAP32[$71 >> 2] = 0;
  HEAP32[$71 + 4 >> 2] = 0;
  HEAP32[$71 + 8 >> 2] = 0;
  HEAP32[$71 + 12 >> 2] = 0;
  HEAPF64[$7 + 112 >> 3] = -1.0;
  HEAPF64[$7 + 120 >> 3] = 0.0;
  $75 = +HEAPF64[$5 + 24 >> 3];
  $77 = +HEAPF64[$5 + 56 >> 3];
  $79 = +HEAPF64[$5 + 88 >> 3];
  $$2 = 0;
  while (1) {
   if (($$2 | 0) == 4) break L1;
   $81 = +HEAPF64[$7 + ($$2 << 5) >> 3];
   $82 = $7 + ($$2 << 5) + 8 | 0;
   $83 = $7 + ($$2 << 5) + 16 | 0;
   $$1 = 0;
   while (1) {
    if (($$1 | 0) == 3) break;
    HEAPF64[$3 + (($$1 << 2) + $$2 << 3) >> 3] = $81 * +HEAPF64[$5 + ($$1 << 3) >> 3] + +HEAPF64[$82 >> 3] * +HEAPF64[$5 + 32 + ($$1 << 3) >> 3] + +HEAPF64[$83 >> 3] * +HEAPF64[$5 + 64 + ($$1 << 3) >> 3];
    $$1 = $$1 + 1 | 0;
   }
   HEAPF64[$3 + ($$2 + 12 << 3) >> 3] = +HEAPF64[$7 + ($$2 << 5) + 24 >> 3] + ($81 * $75 + +HEAPF64[$82 >> 3] * $77 + +HEAPF64[$83 >> 3] * $79);
   $$2 = $$2 + 1 | 0;
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function _decompress_data($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$07896 = 0, $$07989 = 0, $$08091 = 0, $$08188 = 0, $$08287 = 0, $$083 = 0, $$08490 = 0, $$08594 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $23 = 0, $28 = 0, $29 = 0, $3 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $48 = 0, $49 = 0, $53 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $68 = 0, $7 = 0, $78 = 0, $8 = 0, $81 = 0, $9 = 0, label = 0;
 $3 = HEAP32[$0 + 452 >> 2] | 0;
 $4 = $0 + 332 | 0;
 $6 = (HEAP32[$4 >> 2] | 0) + -1 | 0;
 $7 = $0 + 144 | 0;
 $8 = $0 + 152 | 0;
 $9 = $0 + 460 | 0;
 $10 = $0 + 148 | 0;
 $11 = $0 + 156 | 0;
 while (1) {
  $12 = HEAP32[$7 >> 2] | 0;
  $13 = HEAP32[$8 >> 2] | 0;
  if (($12 | 0) >= ($13 | 0)) {
   if (($12 | 0) != ($13 | 0)) break;
   if ((HEAP32[$10 >> 2] | 0) >>> 0 > (HEAP32[$11 >> 2] | 0) >>> 0) break;
  }
  if (!(FUNCTION_TABLE_ii[HEAP32[HEAP32[$9 >> 2] >> 2] & 127]($0) | 0)) {
   $$0 = 0;
   label = 20;
   break;
  }
 }
 if ((label | 0) == 20) return $$0 | 0;
 $23 = $0 + 36 | 0;
 if ((HEAP32[$23 >> 2] | 0) > 0) {
  $28 = $0 + 4 | 0;
  $29 = $0 + 472 | 0;
  $$07896 = HEAP32[$0 + 216 >> 2] | 0;
  $$08594 = 0;
  while (1) {
   if (HEAP32[$$07896 + 52 >> 2] | 0) {
    $39 = $$07896 + 12 | 0;
    $40 = HEAP32[$39 >> 2] | 0;
    $41 = Math_imul($40, HEAP32[$11 >> 2] | 0) | 0;
    $42 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$28 >> 2] | 0) + 32 >> 2] & 31]($0, HEAP32[$3 + 72 + ($$08594 << 2) >> 2] | 0, $41, $40, 0) | 0;
    if ((HEAP32[$11 >> 2] | 0) >>> 0 < $6 >>> 0) $$083 = HEAP32[$39 >> 2] | 0; else {
     $48 = HEAP32[$39 >> 2] | 0;
     $49 = ((HEAP32[$$07896 + 32 >> 2] | 0) >>> 0) % ($48 >>> 0) | 0;
     $$083 = ($49 | 0) == 0 ? $48 : $49;
    }
    $53 = HEAP32[(HEAP32[$29 >> 2] | 0) + 4 + ($$08594 << 2) >> 2] | 0;
    if (($$083 | 0) > 0) {
     $57 = $$07896 + 28 | 0;
     $58 = $$07896 + 40 | 0;
     $59 = $$07896 + 36 | 0;
     $$08091 = HEAP32[$1 + ($$08594 << 2) >> 2] | 0;
     $$08490 = 0;
     $61 = HEAP32[$57 >> 2] | 0;
     while (1) {
      if (!$61) $81 = 0; else {
       $$07989 = 0;
       $$08188 = HEAP32[$42 + ($$08490 << 2) >> 2] | 0;
       $$08287 = 0;
       while (1) {
        FUNCTION_TABLE_viiiii[$53 & 63]($0, $$07896, $$08188, $$08091, $$07989);
        $$08287 = $$08287 + 1 | 0;
        $68 = HEAP32[$57 >> 2] | 0;
        if ($$08287 >>> 0 >= $68 >>> 0) {
         $81 = $68;
         break;
        } else {
         $$07989 = (HEAP32[$59 >> 2] | 0) + $$07989 | 0;
         $$08188 = $$08188 + 128 | 0;
        }
       }
      }
      $$08490 = $$08490 + 1 | 0;
      if (($$08490 | 0) == ($$083 | 0)) break; else {
       $$08091 = $$08091 + (HEAP32[$58 >> 2] << 2) | 0;
       $61 = $81;
      }
     }
    }
   }
   $$08594 = $$08594 + 1 | 0;
   if (($$08594 | 0) >= (HEAP32[$23 >> 2] | 0)) break; else $$07896 = $$07896 + 88 | 0;
  }
 }
 $78 = (HEAP32[$11 >> 2] | 0) + 1 | 0;
 HEAP32[$11 >> 2] = $78;
 $$0 = $78 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0 ? 3 : 4;
 return $$0 | 0;
}

function _qsort($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$067$lcssa = 0, $$06772 = 0, $$068$lcssa = 0, $$06871 = 0, $$1 = 0, $$169 = 0, $$169$be = 0, $$2 = 0, $$2$be = 0, $$be = 0, $12 = 0, $15 = 0, $15$phi = 0, $16 = 0, $17 = 0, $22 = 0, $24 = 0, $26 = 0, $29 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $43 = 0, $47 = 0, $49 = 0, $5 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 $4 = sp;
 $5 = sp + 192 | 0;
 $6 = Math_imul($2, $1) | 0;
 $7 = $5;
 HEAP32[$7 >> 2] = 1;
 HEAP32[$7 + 4 >> 2] = 0;
 L1 : do if ($6 | 0) {
  $12 = 0 - $2 | 0;
  HEAP32[$4 + 4 >> 2] = $2;
  HEAP32[$4 >> 2] = $2;
  $$0 = 2;
  $15 = $2;
  $17 = $2;
  while (1) {
   $16 = $15 + $2 + $17 | 0;
   HEAP32[$4 + ($$0 << 2) >> 2] = $16;
   if ($16 >>> 0 < $6 >>> 0) {
    $15$phi = $17;
    $$0 = $$0 + 1 | 0;
    $17 = $16;
    $15 = $15$phi;
   } else break;
  }
  $22 = $0 + $6 + $12 | 0;
  if ($22 >>> 0 > $0 >>> 0) {
   $24 = $22;
   $$06772 = 1;
   $$06871 = $0;
   $26 = 1;
   while (1) {
    do if (($26 & 3 | 0) != 3) {
     $29 = $$06772 + -1 | 0;
     if ((HEAP32[$4 + ($29 << 2) >> 2] | 0) >>> 0 < ($24 - $$06871 | 0) >>> 0) _sift($$06871, $2, $3, $$06772, $4); else _trinkle($$06871, $2, $3, $5, $$06772, 0, $4);
     if (($$06772 | 0) == 1) {
      _shl($5, 1);
      $$1 = 0;
      break;
     } else {
      _shl($5, $29);
      $$1 = 1;
      break;
     }
    } else {
     _sift($$06871, $2, $3, $$06772, $4);
     _shr($5, 2);
     $$1 = $$06772 + 2 | 0;
    } while (0);
    $37 = HEAP32[$5 >> 2] | 1;
    HEAP32[$5 >> 2] = $37;
    $38 = $$06871 + $2 | 0;
    if ($38 >>> 0 < $22 >>> 0) {
     $$06772 = $$1;
     $$06871 = $38;
     $26 = $37;
    } else {
     $$067$lcssa = $$1;
     $$068$lcssa = $38;
     $61 = $37;
     break;
    }
   }
  } else {
   $$067$lcssa = 1;
   $$068$lcssa = $0;
   $61 = 1;
  }
  _trinkle($$068$lcssa, $2, $3, $5, $$067$lcssa, 0, $4);
  $40 = $5 + 4 | 0;
  $$169 = $$068$lcssa;
  $$2 = $$067$lcssa;
  $43 = $61;
  while (1) {
   if (($$2 | 0) == 1 & ($43 | 0) == 1) if (!(HEAP32[$40 >> 2] | 0)) break L1; else label = 19; else if (($$2 | 0) < 2) label = 19; else {
    _shl($5, 2);
    $49 = $$2 + -2 | 0;
    HEAP32[$5 >> 2] = HEAP32[$5 >> 2] ^ 7;
    _shr($5, 1);
    _trinkle($$169 + (0 - (HEAP32[$4 + ($49 << 2) >> 2] | 0)) + $12 | 0, $2, $3, $5, $$2 + -1 | 0, 1, $4);
    _shl($5, 1);
    $59 = HEAP32[$5 >> 2] | 1;
    HEAP32[$5 >> 2] = $59;
    $60 = $$169 + $12 | 0;
    _trinkle($60, $2, $3, $5, $49, 1, $4);
    $$169$be = $60;
    $$2$be = $49;
    $$be = $59;
   }
   if ((label | 0) == 19) {
    label = 0;
    $47 = _pntz($5) | 0;
    _shr($5, $47);
    $$169$be = $$169 + $12 | 0;
    $$2$be = $47 + $$2 | 0;
    $$be = HEAP32[$5 >> 2] | 0;
   }
   $$169 = $$169$be;
   $$2 = $$2$be;
   $43 = $$be;
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function _start_output_pass($0) {
 $0 = $0 | 0;
 var $$05058$i = 0, $$05157$i = 0, $$05356$i = 0, $$059$i = 0, $$pre$phi$iZ2D = 0, $12 = 0, $15 = 0, $16 = 0, $2 = 0, $21 = 0, $24 = 0, $30 = 0, $49 = 0, $53 = 0, $56 = 0, $57 = 0, $61 = 0, $62 = 0, $66 = 0, $67 = 0, $71 = 0, $72 = 0, $85 = 0, $86 = 0, $decompress_smooth_data$sink = 0, label = 0;
 $2 = HEAP32[$0 + 452 >> 2] | 0;
 if (!(HEAP32[$2 + 16 >> 2] | 0)) {
  $85 = $0 + 156 | 0;
  HEAP32[$85 >> 2] = 0;
  return;
 }
 L4 : do if (((HEAP32[$0 + 80 >> 2] | 0) != 0 ? (HEAP32[$0 + 224 >> 2] | 0) != 0 : 0) ? ($12 = $0 + 160 | 0, (HEAP32[$12 >> 2] | 0) != 0) : 0) {
  $15 = $2 + 112 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  if (!$16) {
   $21 = $0 + 36 | 0;
   $24 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, (HEAP32[$21 >> 2] | 0) * 24 | 0) | 0;
   HEAP32[$15 >> 2] = $24;
   $$pre$phi$iZ2D = $21;
   $86 = $24;
  } else {
   $$pre$phi$iZ2D = $0 + 36 | 0;
   $86 = $16;
  }
  if ((HEAP32[$$pre$phi$iZ2D >> 2] | 0) > 0) {
   $$05058$i = 0;
   $$05157$i = HEAP32[$0 + 216 >> 2] | 0;
   $$05356$i = 0;
   $$059$i = $86;
   while (1) {
    $30 = HEAP32[$$05157$i + 80 >> 2] | 0;
    if (!$30) {
     label = 20;
     break L4;
    }
    if (!(HEAP16[$30 >> 1] | 0)) {
     label = 20;
     break L4;
    }
    if (!(HEAP16[$30 + 2 >> 1] | 0)) {
     label = 20;
     break L4;
    }
    if (!(HEAP16[$30 + 16 >> 1] | 0)) {
     label = 20;
     break L4;
    }
    if (!(HEAP16[$30 + 32 >> 1] | 0)) {
     label = 20;
     break L4;
    }
    if (!(HEAP16[$30 + 18 >> 1] | 0)) {
     label = 20;
     break L4;
    }
    if (!(HEAP16[$30 + 4 >> 1] | 0)) {
     label = 20;
     break L4;
    }
    $49 = HEAP32[$12 >> 2] | 0;
    if ((HEAP32[$49 + ($$05356$i << 8) >> 2] | 0) < 0) {
     label = 20;
     break L4;
    }
    $53 = $49 + ($$05356$i << 8) + 4 | 0;
    HEAP32[$$059$i + 4 >> 2] = HEAP32[$53 >> 2];
    $56 = HEAP32[$53 >> 2] | 0;
    $57 = $49 + ($$05356$i << 8) + 8 | 0;
    HEAP32[$$059$i + 8 >> 2] = HEAP32[$57 >> 2];
    $61 = HEAP32[$57 >> 2] | $56;
    $62 = $49 + ($$05356$i << 8) + 12 | 0;
    HEAP32[$$059$i + 12 >> 2] = HEAP32[$62 >> 2];
    $66 = $61 | HEAP32[$62 >> 2];
    $67 = $49 + ($$05356$i << 8) + 16 | 0;
    HEAP32[$$059$i + 16 >> 2] = HEAP32[$67 >> 2];
    $71 = $66 | HEAP32[$67 >> 2];
    $72 = $49 + ($$05356$i << 8) + 20 | 0;
    HEAP32[$$059$i + 20 >> 2] = HEAP32[$72 >> 2];
    $$05058$i = ($71 | HEAP32[$72 >> 2] | 0) == 0 ? $$05058$i : 1;
    $$05356$i = $$05356$i + 1 | 0;
    if (($$05356$i | 0) >= (HEAP32[$$pre$phi$iZ2D >> 2] | 0)) break; else {
     $$05157$i = $$05157$i + 88 | 0;
     $$059$i = $$059$i + 24 | 0;
    }
   }
   if ($$05058$i) $decompress_smooth_data$sink = 59; else label = 20;
  } else label = 20;
 } else label = 20; while (0);
 if ((label | 0) == 20) $decompress_smooth_data$sink = 57;
 HEAP32[$2 + 12 >> 2] = $decompress_smooth_data$sink;
 $85 = $0 + 156 | 0;
 HEAP32[$85 >> 2] = 0;
 return;
}

function __ZN6vision18HammingDistance768EPKjS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $100 = 0, $106 = 0, $112 = 0, $118 = 0, $124 = 0, $130 = 0, $136 = 0, $16 = 0, $22 = 0, $28 = 0, $34 = 0, $4 = 0, $40 = 0, $46 = 0, $52 = 0, $58 = 0, $64 = 0, $70 = 0, $76 = 0, $82 = 0, $88 = 0, $94 = 0;
 $4 = __ZN6vision17HammingDistance32Ejj(HEAP32[$0 >> 2] | 0, HEAP32[$1 >> 2] | 0) | 0;
 $10 = (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 4 >> 2] | 0, HEAP32[$1 + 4 >> 2] | 0) | 0) + $4 | 0;
 $16 = $10 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 8 >> 2] | 0, HEAP32[$1 + 8 >> 2] | 0) | 0) | 0;
 $22 = $16 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 12 >> 2] | 0, HEAP32[$1 + 12 >> 2] | 0) | 0) | 0;
 $28 = $22 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 16 >> 2] | 0, HEAP32[$1 + 16 >> 2] | 0) | 0) | 0;
 $34 = $28 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 20 >> 2] | 0, HEAP32[$1 + 20 >> 2] | 0) | 0) | 0;
 $40 = $34 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 24 >> 2] | 0, HEAP32[$1 + 24 >> 2] | 0) | 0) | 0;
 $46 = $40 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 28 >> 2] | 0, HEAP32[$1 + 28 >> 2] | 0) | 0) | 0;
 $52 = $46 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 32 >> 2] | 0, HEAP32[$1 + 32 >> 2] | 0) | 0) | 0;
 $58 = $52 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 36 >> 2] | 0, HEAP32[$1 + 36 >> 2] | 0) | 0) | 0;
 $64 = $58 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 40 >> 2] | 0, HEAP32[$1 + 40 >> 2] | 0) | 0) | 0;
 $70 = $64 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 44 >> 2] | 0, HEAP32[$1 + 44 >> 2] | 0) | 0) | 0;
 $76 = $70 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 48 >> 2] | 0, HEAP32[$1 + 48 >> 2] | 0) | 0) | 0;
 $82 = $76 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 52 >> 2] | 0, HEAP32[$1 + 52 >> 2] | 0) | 0) | 0;
 $88 = $82 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 56 >> 2] | 0, HEAP32[$1 + 56 >> 2] | 0) | 0) | 0;
 $94 = $88 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 60 >> 2] | 0, HEAP32[$1 + 60 >> 2] | 0) | 0) | 0;
 $100 = $94 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 64 >> 2] | 0, HEAP32[$1 + 64 >> 2] | 0) | 0) | 0;
 $106 = $100 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 68 >> 2] | 0, HEAP32[$1 + 68 >> 2] | 0) | 0) | 0;
 $112 = $106 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 72 >> 2] | 0, HEAP32[$1 + 72 >> 2] | 0) | 0) | 0;
 $118 = $112 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 76 >> 2] | 0, HEAP32[$1 + 76 >> 2] | 0) | 0) | 0;
 $124 = $118 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 80 >> 2] | 0, HEAP32[$1 + 80 >> 2] | 0) | 0) | 0;
 $130 = $124 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 84 >> 2] | 0, HEAP32[$1 + 84 >> 2] | 0) | 0) | 0;
 $136 = $130 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 88 >> 2] | 0, HEAP32[$1 + 88 >> 2] | 0) | 0) | 0;
 return $136 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 92 >> 2] | 0, HEAP32[$1 + 92 >> 2] | 0) | 0) | 0;
}

function _jpeg_idct_2x4($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $108 = 0, $109 = 0, $123 = 0, $124 = 0, $13 = 0, $139 = 0, $141 = 0, $19 = 0, $21 = 0, $23 = 0, $29 = 0, $35 = 0, $37 = 0, $39 = 0, $41 = 0, $42 = 0, $45 = 0, $47 = 0, $5 = 0, $55 = 0, $61 = 0, $63 = 0, $65 = 0, $7 = 0, $71 = 0, $77 = 0, $79 = 0, $81 = 0, $83 = 0, $84 = 0, $85 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, $94 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $9 = HEAP32[$1 + 84 >> 2] | 0;
 $13 = Math_imul(HEAP32[$9 >> 2] | 0, HEAP16[$2 >> 1] | 0) | 0;
 $19 = Math_imul(HEAP32[$9 + 64 >> 2] | 0, HEAP16[$2 + 32 >> 1] | 0) | 0;
 $21 = $19 + $13 << 13;
 $23 = $13 - $19 << 13;
 $29 = Math_imul(HEAP32[$9 + 32 >> 2] | 0, HEAP16[$2 + 16 >> 1] | 0) | 0;
 $35 = Math_imul(HEAP32[$9 + 96 >> 2] | 0, HEAP16[$2 + 48 >> 1] | 0) | 0;
 $37 = ($35 + $29 | 0) * 4433 | 0;
 $39 = $37 + ($29 * 6270 | 0) | 0;
 $41 = $37 + (Math_imul($35, -15137) | 0) | 0;
 $42 = $39 + $21 | 0;
 HEAP32[$5 >> 2] = $42;
 HEAP32[$5 + 24 >> 2] = $21 - $39;
 $45 = $41 + $23 | 0;
 HEAP32[$5 + 8 >> 2] = $45;
 $47 = $23 - $41 | 0;
 HEAP32[$5 + 16 >> 2] = $47;
 $55 = Math_imul(HEAP32[$9 + 4 >> 2] | 0, HEAP16[$2 + 2 >> 1] | 0) | 0;
 $61 = Math_imul(HEAP32[$9 + 68 >> 2] | 0, HEAP16[$2 + 34 >> 1] | 0) | 0;
 $63 = $61 + $55 << 13;
 $65 = $55 - $61 << 13;
 $71 = Math_imul(HEAP32[$9 + 36 >> 2] | 0, HEAP16[$2 + 18 >> 1] | 0) | 0;
 $77 = Math_imul(HEAP32[$9 + 100 >> 2] | 0, HEAP16[$2 + 50 >> 1] | 0) | 0;
 $79 = ($77 + $71 | 0) * 4433 | 0;
 $81 = $79 + ($71 * 6270 | 0) | 0;
 $83 = $79 + (Math_imul($77, -15137) | 0) | 0;
 $84 = $81 + $63 | 0;
 HEAP32[$5 + 4 >> 2] = $84;
 $85 = $63 - $81 | 0;
 HEAP32[$5 + 28 >> 2] = $85;
 $87 = $83 + $65 | 0;
 HEAP32[$5 + 12 >> 2] = $87;
 $89 = $65 - $83 | 0;
 HEAP32[$5 + 20 >> 2] = $89;
 $91 = $7 + -384 | 0;
 $93 = (HEAP32[$3 >> 2] | 0) + $4 | 0;
 $94 = $42 + 33587200 | 0;
 HEAP8[$93 >> 0] = HEAP8[$91 + (($94 + $84 | 0) >>> 16 & 1023) >> 0] | 0;
 HEAP8[$93 + 1 >> 0] = HEAP8[$91 + (($94 - $84 | 0) >>> 16 & 1023) >> 0] | 0;
 $108 = (HEAP32[$3 + 4 >> 2] | 0) + $4 | 0;
 $109 = $45 + 33587200 | 0;
 HEAP8[$108 >> 0] = HEAP8[$91 + (($109 + $87 | 0) >>> 16 & 1023) >> 0] | 0;
 HEAP8[$108 + 1 >> 0] = HEAP8[$91 + (($109 - $87 | 0) >>> 16 & 1023) >> 0] | 0;
 $123 = (HEAP32[$3 + 8 >> 2] | 0) + $4 | 0;
 $124 = $47 + 33587200 | 0;
 HEAP8[$123 >> 0] = HEAP8[$91 + (($124 + $89 | 0) >>> 16 & 1023) >> 0] | 0;
 HEAP8[$123 + 1 >> 0] = HEAP8[$91 + (($124 - $89 | 0) >>> 16 & 1023) >> 0] | 0;
 $139 = (HEAP32[$3 + 12 >> 2] | 0) + $4 | 0;
 $141 = (HEAP32[$5 + 24 >> 2] | 0) + 33587200 | 0;
 HEAP8[$139 >> 0] = HEAP8[$91 + (($141 + $85 | 0) >>> 16 & 1023) >> 0] | 0;
 HEAP8[$139 + 1 >> 0] = HEAP8[$91 + (($141 - $85 | 0) >>> 16 & 1023) >> 0] | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__28ios_base4InitC2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $22 = 0, $23 = 0, $3 = 0, $35 = 0, $38 = 0, $4 = 0, $42 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 $1 = HEAP32[4272] | 0;
 __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(66144, $1, 66200);
 HEAP32[16366] = 20700;
 HEAP32[16368] = 20720;
 HEAP32[16367] = 0;
 __ZNSt3__28ios_base4initEPv(65472, 66144);
 HEAP32[16386] = 0;
 $2 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[16387] = $2;
 __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(66208, $1, 66264);
 HEAP32[16388] = 20748;
 HEAP32[16390] = 20768;
 HEAP32[16389] = 0;
 __ZNSt3__28ios_base4initEPv(65560, 66208);
 HEAP32[16408] = 0;
 $3 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[16409] = $3;
 $4 = HEAP32[4273] | 0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(66272, $4, 66320);
 HEAP32[16410] = 20796;
 HEAP32[16411] = 20816;
 __ZNSt3__28ios_base4initEPv(65644, 66272);
 HEAP32[16429] = 0;
 $5 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[16430] = $5;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(66328, $4, 66376);
 HEAP32[16431] = 20844;
 HEAP32[16432] = 20864;
 __ZNSt3__28ios_base4initEPv(65728, 66328);
 HEAP32[16450] = 0;
 $6 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[16451] = $6;
 $7 = HEAP32[4271] | 0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(66384, $7, 66432);
 HEAP32[16452] = 20796;
 HEAP32[16453] = 20816;
 __ZNSt3__28ios_base4initEPv(65812, 66384);
 HEAP32[16471] = 0;
 $8 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[16472] = $8;
 $14 = HEAP32[65808 + (HEAP32[(HEAP32[16452] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[16494] = 20796;
 HEAP32[16495] = 20816;
 __ZNSt3__28ios_base4initEPv(65980, $14);
 HEAP32[16513] = 0;
 $15 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[16514] = $15;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(66440, $7, 66488);
 HEAP32[16473] = 20844;
 HEAP32[16474] = 20864;
 __ZNSt3__28ios_base4initEPv(65896, 66440);
 HEAP32[16492] = 0;
 $16 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[16493] = $16;
 $22 = HEAP32[65892 + (HEAP32[(HEAP32[16473] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[16515] = 20844;
 HEAP32[16516] = 20864;
 __ZNSt3__28ios_base4initEPv(66064, $22);
 HEAP32[16534] = 0;
 $23 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[16535] = $23;
 HEAP32[65464 + (HEAP32[(HEAP32[16366] | 0) + -12 >> 2] | 0) + 72 >> 2] = 65640;
 HEAP32[65552 + (HEAP32[(HEAP32[16388] | 0) + -12 >> 2] | 0) + 72 >> 2] = 65724;
 $35 = (HEAP32[16452] | 0) + -12 | 0;
 $38 = 65808 + (HEAP32[$35 >> 2] | 0) + 4 | 0;
 HEAP32[$38 >> 2] = HEAP32[$38 >> 2] | 8192;
 $42 = (HEAP32[16473] | 0) + -12 | 0;
 $45 = 65892 + (HEAP32[$42 >> 2] | 0) + 4 | 0;
 HEAP32[$45 >> 2] = HEAP32[$45 >> 2] | 8192;
 HEAP32[65808 + (HEAP32[$35 >> 2] | 0) + 72 >> 2] = 65640;
 HEAP32[65892 + (HEAP32[$42 >> 2] | 0) + 72 >> 2] = 65724;
 return;
}

function __ZNK12_GLOBAL__N_116itanium_demangle14IntegerLiteral9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $38 = 0, $4 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast8$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $tmpcast8$byval_copy = sp + 56 | 0;
 $2 = sp + 48 | 0;
 $3 = sp + 16 | 0;
 $4 = sp + 40 | 0;
 $5 = sp + 32 | 0;
 $6 = sp + 24 | 0;
 $7 = sp + 8 | 0;
 $8 = sp;
 $9 = $0 + 8 | 0;
 if ((__ZNK12_GLOBAL__N_110StringView4sizeEv($9) | 0) >>> 0 > 3) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 51968);
  HEAP32[$tmpcast8$byval_copy >> 2] = HEAP32[$2 >> 2];
  HEAP32[$tmpcast8$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast8$byval_copy);
  $12 = $9;
  $17 = HEAP32[$12 + 4 >> 2] | 0;
  $18 = $3;
  HEAP32[$18 >> 2] = HEAP32[$12 >> 2];
  HEAP32[$18 + 4 >> 2] = $17;
  HEAP32[$tmpcast8$byval_copy >> 2] = HEAP32[$3 >> 2];
  HEAP32[$tmpcast8$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast8$byval_copy);
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 51964);
  HEAP32[$tmpcast8$byval_copy >> 2] = HEAP32[$4 >> 2];
  HEAP32[$tmpcast8$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast8$byval_copy);
 }
 $22 = $0 + 16 | 0;
 $23 = __ZNK12_GLOBAL__N_110StringViewixEm($22) | 0;
 if ((HEAP8[$23 >> 0] | 0) == 110) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 52555);
  HEAP32[$tmpcast8$byval_copy >> 2] = HEAP32[$5 >> 2];
  HEAP32[$tmpcast8$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast8$byval_copy);
  __ZNK12_GLOBAL__N_110StringView9dropFrontEm($6, $22, 1);
  HEAP32[$tmpcast8$byval_copy >> 2] = HEAP32[$6 >> 2];
  HEAP32[$tmpcast8$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast8$byval_copy);
 } else {
  $26 = $22;
  $31 = HEAP32[$26 + 4 >> 2] | 0;
  $32 = $7;
  HEAP32[$32 >> 2] = HEAP32[$26 >> 2];
  HEAP32[$32 + 4 >> 2] = $31;
  HEAP32[$tmpcast8$byval_copy >> 2] = HEAP32[$7 >> 2];
  HEAP32[$tmpcast8$byval_copy + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast8$byval_copy);
 }
 if ((__ZNK12_GLOBAL__N_110StringView4sizeEv($9) | 0) >>> 0 < 4) {
  $38 = $9;
  $43 = HEAP32[$38 + 4 >> 2] | 0;
  $44 = $8;
  HEAP32[$44 >> 2] = HEAP32[$38 >> 2];
  HEAP32[$44 + 4 >> 2] = $43;
  HEAP32[$tmpcast8$byval_copy >> 2] = HEAP32[$8 >> 2];
  HEAP32[$tmpcast8$byval_copy + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast8$byval_copy);
 }
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E23parseBaseUnresolvedNameEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$byval_copy1 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy1 = sp + 24 | 0;
 $1 = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 do if ((((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24) + -48 | 0) >>> 0 < 10) $$2 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseSimpleIdEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0; else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($1, 53757);
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy1) | 0) {
   $$2 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseDestructorNameEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   break;
  }
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 53760);
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy1) | 0;
  $11 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0;
  $12 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseOperatorNameEPNS5_9NameStateE($11, 0) | 0;
  HEAP32[$$byval_copy1 >> 2] = $12;
  if ($12) if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24 == 73) {
   $16 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($11, 0) | 0;
   HEAP32[$3 >> 2] = $16;
   if (!$16) $$0 = 0; else $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0, $$byval_copy1, $3) | 0;
   $$1 = $$0;
  } else $$1 = $12; else $$1 = 0;
  $$2 = $$1;
 } while (0);
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNK12_GLOBAL__N_116itanium_demangle12FunctionType10printRightERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy6 = 0, $11 = 0, $15 = 0, $16 = 0, $2 = 0, $20 = 0, $23 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy6 = sp + 56 | 0;
 $2 = sp + 48 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 32 | 0;
 $5 = sp + 24 | 0;
 $6 = sp + 16 | 0;
 $7 = sp + 8 | 0;
 $8 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 51968);
 HEAP32[$$byval_copy6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($0 + 12 | 0, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 51964);
 HEAP32[$$byval_copy6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
 $11 = HEAP32[$0 + 8 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 20 >> 2] & 255]($11, $1);
 $15 = $0 + 20 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (!($16 & 1)) $20 = $16; else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 56136);
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
  $20 = HEAP32[$15 >> 2] | 0;
 }
 if (!($20 & 2)) $23 = $20; else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 56143);
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
  $23 = HEAP32[$15 >> 2] | 0;
 }
 if ($23 & 4 | 0) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($6, 56153);
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
 }
 switch (HEAP8[$0 + 24 >> 0] | 0) {
 case 1:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($7, 56338);
   HEAP32[$$byval_copy6 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
   break;
  }
 case 2:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($8, 56341);
   HEAP32[$$byval_copy6 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
   break;
  }
 default:
  {}
 }
 $27 = $0 + 28 | 0;
 if (HEAP32[$27 >> 2] | 0) {
  __ZN12_GLOBAL__N_112OutputStreampLEc($1, 32);
  __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$27 >> 2] | 0, $1);
 }
 STACKTOP = sp;
 return;
}

function _h2v1_merged_upsample($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0110$lcssa = 0, $$0110117 = 0, $$0111$lcssa = 0, $$0111116 = 0, $$0112$lcssa = 0, $$0112115 = 0, $$0113$lcssa = 0, $$0113114 = 0, $$0118 = 0, $100 = 0, $11 = 0, $13 = 0, $15 = 0, $18 = 0, $22 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $32 = 0, $33 = 0, $36 = 0, $39 = 0, $41 = 0, $47 = 0, $49 = 0, $5 = 0, $52 = 0, $67 = 0, $7 = 0, $83 = 0, $86 = 0, $88 = 0, $9 = 0, $96 = 0, $98 = 0, $scevgep = 0;
 $5 = HEAP32[$0 + 476 >> 2] | 0;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $9 = HEAP32[$5 + 16 >> 2] | 0;
 $11 = HEAP32[$5 + 20 >> 2] | 0;
 $13 = HEAP32[$5 + 24 >> 2] | 0;
 $15 = HEAP32[$5 + 28 >> 2] | 0;
 $18 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($2 << 2) >> 2] | 0;
 $22 = HEAP32[(HEAP32[$1 + 4 >> 2] | 0) + ($2 << 2) >> 2] | 0;
 $26 = HEAP32[(HEAP32[$1 + 8 >> 2] | 0) + ($2 << 2) >> 2] | 0;
 $27 = HEAP32[$3 >> 2] | 0;
 $28 = $0 + 112 | 0;
 $29 = HEAP32[$28 >> 2] | 0;
 $30 = $29 >>> 1;
 if (!$30) {
  $$0110$lcssa = $26;
  $$0111$lcssa = $22;
  $$0112$lcssa = $18;
  $$0113$lcssa = $27;
  $83 = $29;
 } else {
  $scevgep = $22 + $30 | 0;
  $32 = $29 & -2;
  $33 = $30 * 6 | 0;
  $$0110117 = $26;
  $$0111116 = $22;
  $$0112115 = $18;
  $$0113114 = $27;
  $$0118 = $30;
  while (1) {
   $36 = HEAPU8[$$0111116 >> 0] | 0;
   $39 = HEAPU8[$$0110117 >> 0] | 0;
   $41 = HEAP32[$9 + ($39 << 2) >> 2] | 0;
   $47 = (HEAP32[$13 + ($39 << 2) >> 2] | 0) + (HEAP32[$15 + ($36 << 2) >> 2] | 0) >> 16;
   $49 = HEAP32[$11 + ($36 << 2) >> 2] | 0;
   $52 = HEAPU8[$$0112115 >> 0] | 0;
   HEAP8[$$0113114 >> 0] = HEAP8[$7 + ($41 + $52) >> 0] | 0;
   HEAP8[$$0113114 + 1 >> 0] = HEAP8[$7 + ($47 + $52) >> 0] | 0;
   HEAP8[$$0113114 + 2 >> 0] = HEAP8[$7 + ($49 + $52) >> 0] | 0;
   $67 = HEAPU8[$$0112115 + 1 >> 0] | 0;
   HEAP8[$$0113114 + 3 >> 0] = HEAP8[$7 + ($41 + $67) >> 0] | 0;
   HEAP8[$$0113114 + 4 >> 0] = HEAP8[$7 + ($47 + $67) >> 0] | 0;
   HEAP8[$$0113114 + 5 >> 0] = HEAP8[$7 + ($49 + $67) >> 0] | 0;
   $$0118 = $$0118 + -1 | 0;
   if (!$$0118) break; else {
    $$0110117 = $$0110117 + 1 | 0;
    $$0111116 = $$0111116 + 1 | 0;
    $$0112115 = $$0112115 + 2 | 0;
    $$0113114 = $$0113114 + 6 | 0;
   }
  }
  $$0110$lcssa = $26 + $30 | 0;
  $$0111$lcssa = $scevgep;
  $$0112$lcssa = $18 + $32 | 0;
  $$0113$lcssa = $27 + $33 | 0;
  $83 = HEAP32[$28 >> 2] | 0;
 }
 if (!($83 & 1)) return;
 $86 = HEAPU8[$$0111$lcssa >> 0] | 0;
 $88 = HEAPU8[$$0110$lcssa >> 0] | 0;
 $96 = (HEAP32[$13 + ($88 << 2) >> 2] | 0) + (HEAP32[$15 + ($86 << 2) >> 2] | 0) >> 16;
 $98 = HEAP32[$11 + ($86 << 2) >> 2] | 0;
 $100 = HEAPU8[$$0112$lcssa >> 0] | 0;
 HEAP8[$$0113$lcssa >> 0] = HEAP8[$7 + ((HEAP32[$9 + ($88 << 2) >> 2] | 0) + $100) >> 0] | 0;
 HEAP8[$$0113$lcssa + 1 >> 0] = HEAP8[$7 + ($96 + $100) >> 0] | 0;
 HEAP8[$$0113$lcssa + 2 >> 0] = HEAP8[$7 + ($98 + $100) >> 0] | 0;
 return;
}

function ___stpncpy($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$037$lcssa = 0, $$03754 = 0, $$038$lcssa = 0, $$03867 = 0, $$039$lcssa = 0, $$03966 = 0, $$042$lcssa = 0, $$04265 = 0, $$055 = 0, $$1$lcssa = 0, $$140 = 0, $$143 = 0, $$153 = 0, $$2 = 0, $$24147 = 0, $$24446 = 0, $$345 = 0, $$348 = 0, $$4 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $19 = 0, $22 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $33 = 0, $37 = 0, label = 0;
 $3 = $1;
 L1 : do if (!(($3 ^ $0) & 3)) {
  $10 = ($2 | 0) != 0;
  if ($10 & ($3 & 3 | 0) != 0) {
   $$03867 = $2;
   $$03966 = $1;
   $$04265 = $0;
   while (1) {
    $11 = HEAP8[$$03966 >> 0] | 0;
    HEAP8[$$04265 >> 0] = $11;
    if (!($11 << 24 >> 24)) {
     $$345 = $$04265;
     $$4 = $$03867;
     break L1;
    }
    $13 = $$03867 + -1 | 0;
    $14 = $$03966 + 1 | 0;
    $15 = $$04265 + 1 | 0;
    $19 = ($13 | 0) != 0;
    if ($19 & ($14 & 3 | 0) != 0) {
     $$03867 = $13;
     $$03966 = $14;
     $$04265 = $15;
    } else {
     $$038$lcssa = $13;
     $$039$lcssa = $14;
     $$042$lcssa = $15;
     $$lcssa = $19;
     break;
    }
   }
  } else {
   $$038$lcssa = $2;
   $$039$lcssa = $1;
   $$042$lcssa = $0;
   $$lcssa = $10;
  }
  if ($$lcssa) if (!(HEAP8[$$039$lcssa >> 0] | 0)) {
   $$345 = $$042$lcssa;
   $$4 = $$038$lcssa;
  } else {
   L11 : do if ($$038$lcssa >>> 0 > 3) {
    $$03754 = $$042$lcssa;
    $$055 = $$039$lcssa;
    $$153 = $$038$lcssa;
    while (1) {
     $22 = HEAP32[$$055 >> 2] | 0;
     if (($22 & -2139062144 ^ -2139062144) & $22 + -16843009 | 0) {
      $$0$lcssa = $$055;
      $$037$lcssa = $$03754;
      $$1$lcssa = $$153;
      break L11;
     }
     HEAP32[$$03754 >> 2] = $22;
     $28 = $$153 + -4 | 0;
     $29 = $$055 + 4 | 0;
     $30 = $$03754 + 4 | 0;
     if ($28 >>> 0 > 3) {
      $$03754 = $30;
      $$055 = $29;
      $$153 = $28;
     } else {
      $$0$lcssa = $29;
      $$037$lcssa = $30;
      $$1$lcssa = $28;
      break;
     }
    }
   } else {
    $$0$lcssa = $$039$lcssa;
    $$037$lcssa = $$042$lcssa;
    $$1$lcssa = $$038$lcssa;
   } while (0);
   $$140 = $$0$lcssa;
   $$143 = $$037$lcssa;
   $$2 = $$1$lcssa;
   label = 13;
  } else {
   $$345 = $$042$lcssa;
   $$4 = 0;
  }
 } else {
  $$140 = $1;
  $$143 = $0;
  $$2 = $2;
  label = 13;
 } while (0);
 L17 : do if ((label | 0) == 13) if (!$$2) {
  $$345 = $$143;
  $$4 = 0;
 } else {
  $$24147 = $$140;
  $$24446 = $$143;
  $$348 = $$2;
  while (1) {
   $33 = HEAP8[$$24147 >> 0] | 0;
   HEAP8[$$24446 >> 0] = $33;
   if (!($33 << 24 >> 24)) {
    $$345 = $$24446;
    $$4 = $$348;
    break L17;
   }
   $$348 = $$348 + -1 | 0;
   $37 = $$24446 + 1 | 0;
   if (!$$348) {
    $$345 = $37;
    $$4 = 0;
    break;
   } else {
    $$24147 = $$24147 + 1 | 0;
    $$24446 = $37;
   }
  }
 } while (0);
 _memset($$345 | 0, 0, $$4 | 0) | 0;
 return $$345 | 0;
}

function _arPattGetIDGlobal($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = +$9;
 $10 = $10 | 0;
 $11 = $11 | 0;
 $12 = $12 | 0;
 $13 = $13 | 0;
 $14 = $14 | 0;
 $15 = $15 | 0;
 $16 = $16 | 0;
 $17 = $17 | 0;
 $18 = $18 | 0;
 var $$0 = 0, $$091 = 0, $$092 = 0, $19 = 0, $20 = 0, $24 = 0, $26 = 0, $28 = 0, $31 = 0, $41 = 0, $45 = 0, $49 = 0, $51 = 0, $56 = 0, $57 = 0, $58 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 12304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(12304);
 $19 = sp;
 $20 = sp + 12288 | 0;
 do if (($2 + -2 | 0) >>> 0 < 3) {
  if (($16 | 0) != 2830) {
   $45 = $16 & 255;
   if ((_arPattGetImage2($1, 2, $45, $45 * 3 | 0, $3, $4, $5, $6, $7, $8, $9, $19) | 0) < 0) {
    HEAP32[$13 >> 2] = -1;
    $$091 = -6;
    break;
   }
   $49 = _get_matrix_code($19, $45, $13, $14, $15, $16, $17) | 0;
   if (!$18) {
    $$091 = $49;
    break;
   }
   $51 = $18;
   HEAP32[$51 >> 2] = 0;
   HEAP32[$51 + 4 >> 2] = 0;
   $$091 = $49;
   break;
  }
  if ((_arPattGetImage2($1, 2, 14, 42, $3, $4, $5, $6, $7, $8, .875, $19) | 0) < 0) {
   HEAP32[$13 >> 2] = -1;
   $$091 = -6;
   break;
  }
  $24 = _get_global_id_code($19, $20, $14, $15, $17) | 0;
  if (($24 | 0) < 0) {
   HEAP32[$13 >> 2] = -1;
   $$091 = $24;
   break;
  }
  $26 = $20;
  $28 = HEAP32[$26 >> 2] | 0;
  $31 = HEAP32[$26 + 4 >> 2] | 0;
  if (($28 | 0) == -1 & ($31 | 0) == -1) {
   HEAP32[$13 >> 2] = -1;
   $$091 = -5;
   break;
  }
  HEAP32[$13 >> 2] = ($28 & -32768 | 0) == 0 & 0 == 0 ? $28 & 32767 : 0;
  if (!$18) $$091 = $24; else {
   $41 = $18;
   HEAP32[$41 >> 2] = $28;
   HEAP32[$41 + 4 >> 2] = $31;
   $$091 = $24;
  }
 } else $$091 = 1; while (0);
 L21 : do switch ($2 | 0) {
 case 0:
 case 1:
 case 3:
 case 4:
  {
   if (!$0) {
    HEAP32[$10 >> 2] = -1;
    $$0 = -1;
    break L21;
   }
   $56 = $0 + 28 | 0;
   $57 = HEAP32[$56 >> 2] | 0;
   $58 = $57 << 2;
   switch ($2 | 0) {
   case 0:
   case 3:
    {
     if ((_arPattGetImage2($1, 0, $57, $58, $3, $4, $5, $6, $7, $8, $9, $19) | 0) < 0) {
      HEAP32[$10 >> 2] = -1;
      $$0 = -6;
      break L21;
     } else {
      $$0 = _pattern_match($0, 0, $19, HEAP32[$56 >> 2] | 0, $10, $11, $12) | 0;
      break L21;
     }
     break;
    }
   default:
    if ((_arPattGetImage2($1, 1, $57, $58, $3, $4, $5, $6, $7, $8, $9, $19) | 0) < 0) {
     HEAP32[$10 >> 2] = -1;
     $$0 = -6;
     break L21;
    } else {
     $$0 = _pattern_match($0, 1, $19, HEAP32[$56 >> 2] | 0, $10, $11, $12) | 0;
     break L21;
    }
   }
   break;
  }
 default:
  $$0 = 1;
 } while (0);
 if (($$091 | 0) == 1) $$092 = $$0; else $$092 = ($$0 | 0) == 1 ? $$091 : ($$0 & $$091 | 0) < 0 ? $$0 : 0;
 STACKTOP = sp;
 return $$092 | 0;
}

function __ZNK12_GLOBAL__N_116itanium_demangle11PointerType9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy4 = 0, $14 = 0, $2 = 0, $23 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy4 = sp + 48 | 0;
 $2 = sp + 40 | 0;
 $3 = sp + 32 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 16 | 0;
 $6 = sp;
 $7 = sp + 8 | 0;
 $8 = $0 + 8 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 do if ((__ZNK12_GLOBAL__N_116itanium_demangle4Node7getKindEv($9) | 0) << 24 >> 24 == 10) if (__ZNK12_GLOBAL__N_116itanium_demangle13ObjCProtoName12isObjCObjectEv($9) | 0) {
  $23 = HEAP32[$8 >> 2] | 0;
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 52039);
  HEAP32[$$byval_copy4 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$$byval_copy4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy4);
  $25 = $23 + 12 | 0;
  $30 = HEAP32[$25 + 4 >> 2] | 0;
  $31 = $6;
  HEAP32[$31 >> 2] = HEAP32[$25 >> 2];
  HEAP32[$31 + 4 >> 2] = $30;
  HEAP32[$$byval_copy4 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$$byval_copy4 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy4);
  __ZN12_GLOBAL__N_110StringViewC2EPKc($7, 52043);
  HEAP32[$$byval_copy4 >> 2] = HEAP32[$7 >> 2];
  HEAP32[$$byval_copy4 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy4);
  break;
 } else {
  $14 = HEAP32[$8 >> 2] | 0;
  label = 4;
  break;
 } else {
  $14 = $9;
  label = 4;
 } while (0);
 if ((label | 0) == 4) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$14 >> 2] | 0) + 16 >> 2] & 255]($14, $1);
  if (__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE(HEAP32[$8 >> 2] | 0, $1) | 0) {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 51966);
   HEAP32[$$byval_copy4 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy4 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy4);
  }
  if (!(__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE(HEAP32[$8 >> 2] | 0, $1) | 0) ? !(__ZNK12_GLOBAL__N_116itanium_demangle4Node11hasFunctionERNS_12OutputStreamE(HEAP32[$8 >> 2] | 0, $1) | 0) : 0) {} else {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 51968);
   HEAP32[$$byval_copy4 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$$byval_copy4 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy4);
  }
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 52037);
  HEAP32[$$byval_copy4 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$$byval_copy4 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy4);
 }
 STACKTOP = sp;
 return;
}

function _mbsnrtowcs($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$04975 = 0, $$05374 = 0, $$056 = 0, $$150 = 0, $$154 = 0, $$15773 = 0, $$164 = 0, $$176 = 0, $$2 = 0, $$25170 = 0, $$25569 = 0, $$258 = 0, $$352 = 0, $$359 = 0, $$371 = 0, $$468 = 0, $$cast = 0, $11 = 0, $12 = 0, $15 = 0, $16 = 0, $18 = 0, $21 = 0, $22 = 0, $26 = 0, $30 = 0, $31 = 0, $39 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1040);
 $5 = sp;
 $6 = sp + 1024 | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP32[$6 >> 2] = $7;
 $8 = ($0 | 0) != 0;
 $$056 = $8 ? $3 : 256;
 $$0 = $8 ? $0 : $5;
 $$cast = $7;
 L1 : do if (($$056 | 0) != 0 & ($7 | 0) != 0) {
  $$04975 = 0;
  $$05374 = $2;
  $$15773 = $$056;
  $$176 = $$0;
  $44 = $$cast;
  while (1) {
   $11 = $$05374 >>> 2;
   $12 = $11 >>> 0 >= $$15773 >>> 0;
   if (!($$05374 >>> 0 > 131 | $12)) {
    $$150 = $$04975;
    $$154 = $$05374;
    $$164 = $$176;
    $$359 = $$15773;
    $26 = $44;
    break L1;
   }
   $spec$select = $12 ? $$15773 : $11;
   $15 = $$05374 - $spec$select | 0;
   $16 = _mbsrtowcs($$176, $6, $spec$select, $4) | 0;
   if (($16 | 0) == -1) break;
   $18 = ($$176 | 0) == ($5 | 0);
   $$258 = $$15773 - ($18 ? 0 : $16) | 0;
   $$2 = $18 ? $$176 : $$176 + ($16 << 2) | 0;
   $21 = $16 + $$04975 | 0;
   $22 = HEAP32[$6 >> 2] | 0;
   if (($$258 | 0) != 0 & ($22 | 0) != 0) {
    $$04975 = $21;
    $$05374 = $15;
    $$15773 = $$258;
    $$176 = $$2;
    $44 = $22;
   } else {
    $$150 = $21;
    $$154 = $15;
    $$164 = $$2;
    $$359 = $$258;
    $26 = $22;
    break L1;
   }
  }
  $$150 = -1;
  $$154 = $15;
  $$164 = $$176;
  $$359 = 0;
  $26 = HEAP32[$6 >> 2] | 0;
 } else {
  $$150 = 0;
  $$154 = $2;
  $$164 = $$0;
  $$359 = $$056;
  $26 = $$cast;
 } while (0);
 L9 : do if (($26 | 0) != 0 ? ($$359 | 0) != 0 & ($$154 | 0) != 0 : 0) {
  $$25170 = $$150;
  $$25569 = $$154;
  $$371 = $$164;
  $$468 = $$359;
  $30 = $26;
  while (1) {
   $31 = _mbrtowc($$371, $30, $$25569, $4) | 0;
   if (($31 + 2 | 0) >>> 0 < 3) break;
   $30 = (HEAP32[$6 >> 2] | 0) + $31 | 0;
   HEAP32[$6 >> 2] = $30;
   $$25569 = $$25569 - $31 | 0;
   $$468 = $$468 + -1 | 0;
   $39 = $$25170 + 1 | 0;
   if (!(($$468 | 0) != 0 & ($$25569 | 0) != 0)) {
    $$352 = $39;
    break L9;
   } else {
    $$25170 = $39;
    $$371 = $$371 + 4 | 0;
   }
  }
  switch ($31 | 0) {
  case -1:
   {
    $$352 = $31;
    break L9;
    break;
   }
  case 0:
   {
    HEAP32[$6 >> 2] = 0;
    $$352 = $$25170;
    break L9;
    break;
   }
  default:
   {
    HEAP32[$4 >> 2] = 0;
    $$352 = $$25170;
    break L9;
   }
  }
 } else $$352 = $$150; while (0);
 if ($8) HEAP32[$1 >> 2] = HEAP32[$6 >> 2];
 STACKTOP = sp;
 return $$352 | 0;
}

function __ZNK12_GLOBAL__N_116itanium_demangle16FunctionEncoding10printRightERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy6 = 0, $11 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $24 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy6 = sp + 56 | 0;
 $2 = sp + 48 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 32 | 0;
 $5 = sp + 24 | 0;
 $6 = sp + 16 | 0;
 $7 = sp + 8 | 0;
 $8 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 51968);
 HEAP32[$$byval_copy6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($0 + 16 | 0, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 51964);
 HEAP32[$$byval_copy6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
 $11 = HEAP32[$0 + 8 >> 2] | 0;
 if ($11 | 0) FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 20 >> 2] & 255]($11, $1);
 $16 = $0 + 28 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (!($17 & 1)) $21 = $17; else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 56136);
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
  $21 = HEAP32[$16 >> 2] | 0;
 }
 if (!($21 & 2)) $24 = $21; else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 56143);
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
  $24 = HEAP32[$16 >> 2] | 0;
 }
 if ($24 & 4 | 0) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($6, 56153);
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
 }
 switch (HEAP8[$0 + 32 >> 0] | 0) {
 case 1:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($7, 56338);
   HEAP32[$$byval_copy6 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
   break;
  }
 case 2:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($8, 56341);
   HEAP32[$$byval_copy6 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
   break;
  }
 default:
  {}
 }
 $29 = HEAP32[$0 + 24 >> 2] | 0;
 if ($29 | 0) __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($29, $1);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseFunctionParamEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$byval_copy1 = 0, $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy1 = sp + 16 | 0;
 $1 = sp + 8 | 0;
 $2 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($1, 54911);
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy1) | 0)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 54914);
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  if ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy1) | 0 ? (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($$byval_copy1, $0, 0), !(__ZNK12_GLOBAL__N_110StringView5emptyEv($$byval_copy1) | 0)) : 0) ? __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 112) | 0 : 0) {
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCVQualifiersEv($0) | 0;
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($$byval_copy1, $0, 0);
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) $$1 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13FunctionParamEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0, $$byval_copy1) | 0; else $$1 = 0;
   $$2 = $$1;
  } else $$2 = 0;
 } else {
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCVQualifiersEv($0) | 0;
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($$byval_copy1, $0, 0);
  if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13FunctionParamEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0, $$byval_copy1) | 0; else $$0 = 0;
  $$2 = $$0;
 }
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $16 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $36 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if ((__ZNK6vision5Image4typeEv($1) | 0) != 2) {
  $11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 31711) | 0, 31153) | 0, 39072) | 0, 357) | 0, 39079) | 0, 31758) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $11 + (HEAP32[(HEAP32[$11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
  $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 127]($16, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($11, $20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  _abort();
 }
 switch (__ZNK6vision5Image4typeEv($2) | 0) {
 case 1:
  {
   $22 = __ZN6vision5Image3getEv($1) | 0;
   $24 = HEAP32[$0 + 32 >> 2] | 0;
   $25 = __ZNK6vision5Image3getEv($2) | 0;
   __ZN6vision18binomial_4th_orderEPfPtPKhmm($22, $24, $25, __ZNK6vision5Image5widthEv($2) | 0, __ZNK6vision5Image6heightEv($2) | 0);
   break;
  }
 case 2:
  {
   $28 = __ZN6vision5Image3getEv($1) | 0;
   $30 = HEAP32[$0 + 44 >> 2] | 0;
   $31 = __ZNK6vision5Image3getEv($2) | 0;
   __ZN6vision18binomial_4th_orderEPfS0_PKfmm($28, $30, $31, __ZNK6vision5Image5widthEv($2) | 0, __ZNK6vision5Image6heightEv($2) | 0);
   break;
  }
 case 0:
  {
   $34 = ___cxa_allocate_exception(16) | 0;
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($3, 31794, __ZNSt3__211char_traitsIcE6lengthEPKc(31794) | 0);
   __ZN6vision9ExceptionC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($34, $3);
   ___cxa_throw($34 | 0, 13208, 5);
   break;
  }
 default:
  {
   $36 = ___cxa_allocate_exception(16) | 0;
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($3, 31813, __ZNSt3__211char_traitsIcE6lengthEPKc(31813) | 0);
   __ZN6vision9ExceptionC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($36, $3);
   ___cxa_throw($36 | 0, 13208, 5);
  }
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__27__sort3IRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEjT0_S9_S9_T_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$09 = 0, $$phi$trans$insert = 0, $$phi$trans$insert16 = 0, $$pre$phi18Z2D = 0, $$pre$phiZ2D = 0, $15 = 0, $16 = 0.0, $24 = 0, $25 = 0, $26 = 0, $28 = 0.0, $29 = 0.0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $46 = 0.0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0.0, $7 = 0.0;
 $4 = HEAP32[$1 >> 2] | 0;
 $5 = HEAP32[$0 >> 2] | 0;
 $6 = +HEAPF32[$5 >> 2];
 $7 = +HEAPF32[$4 >> 2];
 if (!($6 < $7)) if ($7 < $6) $53 = 0; else $53 = (HEAP32[$5 + 4 >> 2] | 0) >>> 0 < (HEAP32[$4 + 4 >> 2] | 0) >>> 0; else $53 = 1;
 $15 = HEAP32[$2 >> 2] | 0;
 $16 = +HEAPF32[$15 >> 2];
 if (!($7 < $16)) if ($16 < $7) $54 = 0; else $54 = (HEAP32[$4 + 4 >> 2] | 0) >>> 0 < (HEAP32[$15 + 4 >> 2] | 0) >>> 0; else $54 = 1;
 do if (!$53) if ($54) {
  HEAPF32[$4 >> 2] = $16;
  HEAPF32[$15 >> 2] = $7;
  $24 = $4 + 4 | 0;
  $25 = $15 + 4 | 0;
  $26 = HEAP32[$24 >> 2] | 0;
  HEAP32[$24 >> 2] = HEAP32[$25 >> 2];
  HEAP32[$25 >> 2] = $26;
  $28 = +HEAPF32[$5 >> 2];
  $29 = +HEAPF32[$4 >> 2];
  if (!($28 < $29)) {
   if ($29 < $28) {
    $$09 = 1;
    break;
   }
   $32 = $5 + 4 | 0;
   $33 = HEAP32[$32 >> 2] | 0;
   $34 = HEAP32[$24 >> 2] | 0;
   if ($33 >>> 0 < $34 >>> 0) {
    $$pre$phi18Z2D = $32;
    $36 = $34;
    $37 = $33;
   } else {
    $$09 = 1;
    break;
   }
  } else {
   $$phi$trans$insert = $5 + 4 | 0;
   $$pre$phi18Z2D = $$phi$trans$insert;
   $36 = HEAP32[$24 >> 2] | 0;
   $37 = HEAP32[$$phi$trans$insert >> 2] | 0;
  }
  HEAPF32[$5 >> 2] = $29;
  HEAPF32[$4 >> 2] = $28;
  HEAP32[$$pre$phi18Z2D >> 2] = $36;
  HEAP32[$24 >> 2] = $37;
  $$09 = 2;
 } else $$09 = 0; else {
  if ($54) {
   HEAPF32[$5 >> 2] = $16;
   HEAPF32[$15 >> 2] = $6;
   $38 = $5 + 4 | 0;
   $39 = $15 + 4 | 0;
   $40 = HEAP32[$38 >> 2] | 0;
   HEAP32[$38 >> 2] = HEAP32[$39 >> 2];
   HEAP32[$39 >> 2] = $40;
   $$09 = 1;
   break;
  }
  HEAPF32[$5 >> 2] = $7;
  HEAPF32[$4 >> 2] = $6;
  $42 = $5 + 4 | 0;
  $43 = $4 + 4 | 0;
  $44 = HEAP32[$42 >> 2] | 0;
  HEAP32[$42 >> 2] = HEAP32[$43 >> 2];
  HEAP32[$43 >> 2] = $44;
  $46 = +HEAPF32[$15 >> 2];
  if (!($6 < $46)) {
   if ($46 < $6) {
    $$09 = 1;
    break;
   }
   $49 = $15 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if ($44 >>> 0 < $50 >>> 0) {
    $$pre$phiZ2D = $49;
    $52 = $50;
   } else {
    $$09 = 1;
    break;
   }
  } else {
   $$phi$trans$insert16 = $15 + 4 | 0;
   $$pre$phiZ2D = $$phi$trans$insert16;
   $52 = HEAP32[$$phi$trans$insert16 >> 2] | 0;
  }
  HEAPF32[$4 >> 2] = $46;
  HEAPF32[$15 >> 2] = $6;
  HEAP32[$43 >> 2] = $52;
  HEAP32[$$pre$phiZ2D >> 2] = $44;
  $$09 = 2;
 } while (0);
 return $$09 | 0;
}

function __Z21kpmUtilGetPose_binaryP9ARParamLTRKNSt3__26vectorIN6vision7match_tENS1_9allocatorIS4_EEEERKNS2_INS3_7Point3dIfEENS5_ISB_EEEERKNS2_INS3_12FeaturePointENS5_ISG_EEEEPA4_fPf($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$064 = 0, $$065 = 0, $$066 = 0, $$1 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $37 = 0, $50 = 0, $53 = 0, $58 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $vararg_buffer1 = sp + 208 | 0;
 $vararg_buffer = sp + 200 | 0;
 $6 = sp + 224 | 0;
 $7 = sp + 212 | 0;
 $8 = sp + 96 | 0;
 $9 = sp + 192 | 0;
 $10 = sp;
 $13 = HEAP32[$1 >> 2] | 0;
 $14 = (HEAP32[$1 + 4 >> 2] | 0) - $13 | 0;
 $15 = $14 >> 3;
 $17 = $13;
 do if ($15 >>> 0 < 4) $$1 = -1; else {
  $19 = _malloc($14 << 1) | 0;
  if (!$19) {
   _arLog(0, 3, 45930, $vararg_buffer);
   _exit(1);
  }
  $22 = _malloc($15 * 24 | 0) | 0;
  if (!$22) {
   _arLog(0, 3, 45930, $vararg_buffer1);
   _exit(1);
  }
  $24 = HEAP32[$3 >> 2] | 0;
  $25 = HEAP32[$2 >> 2] | 0;
  $$065 = 0;
  while (1) {
   if (($$065 | 0) == ($15 | 0)) break;
   $27 = HEAP32[$17 + ($$065 << 3) >> 2] | 0;
   HEAPF64[$19 + ($$065 << 4) >> 3] = +HEAPF32[$24 + ($27 * 20 | 0) >> 2];
   HEAPF64[$19 + ($$065 << 4) + 8 >> 3] = +HEAPF32[$24 + ($27 * 20 | 0) + 4 >> 2];
   $37 = HEAP32[$17 + ($$065 << 3) + 4 >> 2] | 0;
   HEAPF64[$22 + ($$065 * 24 | 0) >> 3] = +HEAPF32[$25 + ($37 * 12 | 0) >> 2];
   HEAPF64[$22 + ($$065 * 24 | 0) + 8 >> 3] = +HEAPF32[$25 + ($37 * 12 | 0) + 4 >> 2];
   HEAPF64[$22 + ($$065 * 24 | 0) + 16 >> 3] = 0.0;
   $$065 = $$065 + 1 | 0;
  }
  HEAP32[$7 + 8 >> 2] = $15;
  HEAP32[$7 >> 2] = $19;
  HEAP32[$7 + 4 >> 2] = $22;
  $50 = $0 + 8 | 0;
  if ((_icpGetInitXw2Xc_from_PlanarData($50, $19, $22, $15, $8) | 0) < 0) {
   _free($19);
   _free($22);
   $$1 = -1;
   break;
  }
  $53 = _icpCreateHandle($50) | 0;
  HEAP32[$6 >> 2] = $53;
  if (!$53) {
   _free($19);
   _free($22);
   $$1 = -1;
   break;
  }
  if ((_icpPoint($53, $7, $8, $10, $9) | 0) < 0) {
   _free($19);
   _free($22);
   _icpDeleteHandle($6) | 0;
   $$066 = -1;
  } else {
   $$064 = 0;
   while (1) {
    if (($$064 | 0) == 3) break;
    $$0 = 0;
    while (1) {
     if (($$0 | 0) == 4) break;
     HEAPF32[$4 + ($$064 << 4) + ($$0 << 2) >> 2] = +HEAPF64[$10 + ($$064 << 5) + ($$0 << 3) >> 3];
     $$0 = $$0 + 1 | 0;
    }
    $$064 = $$064 + 1 | 0;
   }
   _icpDeleteHandle($6) | 0;
   _free($19);
   _free($22);
   $58 = +HEAPF64[$9 >> 3];
   HEAPF32[$5 >> 2] = $58;
   $$066 = ($58 > 10.0) << 31 >> 31;
  }
  $$1 = $$066;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__2L12init_wmonthsEv() {
 var $$0$i$i = 0, $4 = 0;
 if ((HEAP8[64720] | 0) == 0 ? ___cxa_guard_acquire(64720) | 0 : 0) {
  $4 = 63840;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 64128);
  ___cxa_guard_release(64720);
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(63840, 21828) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(63852, 21860) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(63864, 21896) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(63876, 21920) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(63888, 21944) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(63900, 21960) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(63912, 21980) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(63924, 22e3) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(63936, 22028) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(63948, 22068) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(63960, 22100) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(63972, 22136) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(63984, 22172) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(63996, 22188) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64008, 22204) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64020, 22220) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64032, 21944) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64044, 22236) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64056, 22252) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64068, 22268) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64080, 22284) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64092, 22300) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64104, 22316) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64116, 22332) | 0;
 return;
}

function __ZNSt3__2L11init_monthsEv() {
 var $$0$i$i = 0, $4 = 0;
 if ((HEAP8[64640] | 0) == 0 ? ___cxa_guard_acquire(64640) | 0 : 0) {
  $4 = 63344;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 63632);
  ___cxa_guard_release(64640);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63344, 59459) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63356, 59467) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63368, 59476) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63380, 59482) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63392, 59488) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63404, 59492) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63416, 59497) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63428, 59502) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63440, 59509) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63452, 59519) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63464, 59527) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63476, 59536) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63488, 59545) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63500, 59549) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63512, 59553) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63524, 59557) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63536, 59488) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63548, 59561) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63560, 59565) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63572, 59569) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63584, 59573) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63596, 59577) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63608, 59581) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63620, 59585) | 0;
 return;
}

function _jpeg_idct_4x2($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $110 = 0, $112 = 0, $114 = 0, $116 = 0, $118 = 0, $120 = 0, $122 = 0, $13 = 0, $19 = 0, $20 = 0, $22 = 0, $29 = 0, $35 = 0, $36 = 0, $37 = 0, $45 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $61 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $71 = 0, $73 = 0, $74 = 0, $76 = 0, $78 = 0, $80 = 0, $82 = 0, $84 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $5 = sp;
 $7 = HEAP32[$0 + 336 >> 2] | 0;
 $9 = HEAP32[$1 + 84 >> 2] | 0;
 $13 = Math_imul(HEAP32[$9 >> 2] | 0, HEAP16[$2 >> 1] | 0) | 0;
 $19 = Math_imul(HEAP32[$9 + 32 >> 2] | 0, HEAP16[$2 + 16 >> 1] | 0) | 0;
 $20 = $19 + $13 | 0;
 HEAP32[$5 >> 2] = $20;
 $22 = $5 + 16 | 0;
 HEAP32[$22 >> 2] = $13 - $19;
 $29 = Math_imul(HEAP32[$9 + 4 >> 2] | 0, HEAP16[$2 + 2 >> 1] | 0) | 0;
 $35 = Math_imul(HEAP32[$9 + 36 >> 2] | 0, HEAP16[$2 + 18 >> 1] | 0) | 0;
 $36 = $35 + $29 | 0;
 HEAP32[$5 + 4 >> 2] = $36;
 $37 = $29 - $35 | 0;
 HEAP32[$5 + 20 >> 2] = $37;
 $45 = Math_imul(HEAP32[$9 + 8 >> 2] | 0, HEAP16[$2 + 4 >> 1] | 0) | 0;
 $51 = Math_imul(HEAP32[$9 + 40 >> 2] | 0, HEAP16[$2 + 20 >> 1] | 0) | 0;
 $52 = $51 + $45 | 0;
 HEAP32[$5 + 8 >> 2] = $52;
 $53 = $45 - $51 | 0;
 HEAP32[$5 + 24 >> 2] = $53;
 $61 = Math_imul(HEAP32[$9 + 12 >> 2] | 0, HEAP16[$2 + 6 >> 1] | 0) | 0;
 $67 = Math_imul(HEAP32[$9 + 44 >> 2] | 0, HEAP16[$2 + 22 >> 1] | 0) | 0;
 $68 = $67 + $61 | 0;
 HEAP32[$5 + 12 >> 2] = $68;
 $69 = $61 - $67 | 0;
 HEAP32[$5 + 28 >> 2] = $69;
 $71 = $7 + -384 | 0;
 $73 = (HEAP32[$3 >> 2] | 0) + $4 | 0;
 $74 = $20 + 4100 | 0;
 $76 = $74 + $52 << 13;
 $78 = $74 - $52 << 13;
 $80 = ($68 + $36 | 0) * 4433 | 0;
 $82 = $80 + ($36 * 6270 | 0) | 0;
 $84 = $80 + (Math_imul($68, -15137) | 0) | 0;
 HEAP8[$73 >> 0] = HEAP8[$71 + (($82 + $76 | 0) >>> 16 & 1023) >> 0] | 0;
 HEAP8[$73 + 3 >> 0] = HEAP8[$71 + (($76 - $82 | 0) >>> 16 & 1023) >> 0] | 0;
 HEAP8[$73 + 1 >> 0] = HEAP8[$71 + (($84 + $78 | 0) >>> 16 & 1023) >> 0] | 0;
 HEAP8[$73 + 2 >> 0] = HEAP8[$71 + (($78 - $84 | 0) >>> 16 & 1023) >> 0] | 0;
 $110 = (HEAP32[$3 + 4 >> 2] | 0) + $4 | 0;
 $112 = (HEAP32[$22 >> 2] | 0) + 4100 | 0;
 $114 = $112 + $53 << 13;
 $116 = $112 - $53 << 13;
 $118 = ($69 + $37 | 0) * 4433 | 0;
 $120 = $118 + ($37 * 6270 | 0) | 0;
 $122 = $118 + (Math_imul($69, -15137) | 0) | 0;
 HEAP8[$110 >> 0] = HEAP8[$71 + (($120 + $114 | 0) >>> 16 & 1023) >> 0] | 0;
 HEAP8[$110 + 3 >> 0] = HEAP8[$71 + (($114 - $120 | 0) >>> 16 & 1023) >> 0] | 0;
 HEAP8[$110 + 1 >> 0] = HEAP8[$71 + (($122 + $116 | 0) >>> 16 & 1023) >> 0] | 0;
 HEAP8[$110 + 2 >> 0] = HEAP8[$71 + (($116 - $122 | 0) >>> 16 & 1023) >> 0] | 0;
 STACKTOP = sp;
 return;
}

function _mbrtowc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$03952 = 0, $$03952$pn = 0, $$04051 = 0, $$04350 = 0, $$2 = 0, $$lcssa = 0, $$lcssa56 = 0, $12 = 0, $18 = 0, $22 = 0, $26 = 0, $30 = 0, $31 = 0, $34 = 0, $35 = 0, $4 = 0, $43 = 0, $44 = 0, $47 = 0, $49 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $60 = 0, $spec$select = 0, $spec$select47 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 $spec$select = ($3 | 0) == 0 ? 65400 : $3;
 $6 = HEAP32[$spec$select >> 2] | 0;
 L1 : do if (!$1) if (!$6) $$0 = 0; else label = 19; else {
  $spec$select47 = ($0 | 0) == 0 ? $4 : $0;
  if (!$2) $$0 = -2; else {
   if (!$6) {
    $12 = HEAP8[$1 >> 0] | 0;
    if ($12 << 24 >> 24 > -1) {
     HEAP32[$spec$select47 >> 2] = $12 & 255;
     $$0 = $12 << 24 >> 24 != 0 & 1;
     break;
    }
    $18 = (___pthread_self_414() | 0) + 188 | 0;
    $22 = HEAP8[$1 >> 0] | 0;
    if (!(HEAP32[HEAP32[$18 >> 2] >> 2] | 0)) {
     HEAP32[$spec$select47 >> 2] = $22 << 24 >> 24 & 57343;
     $$0 = 1;
     break;
    }
    $26 = ($22 & 255) + -194 | 0;
    if ($26 >>> 0 > 50) {
     label = 19;
     break;
    }
    $30 = HEAP32[5728 + ($26 << 2) >> 2] | 0;
    $31 = $2 + -1 | 0;
    if (!$31) $$2 = $30; else {
     $$03952 = $1 + 1 | 0;
     $$04051 = $30;
     $$04350 = $31;
     label = 11;
    }
   } else {
    $$03952 = $1;
    $$04051 = $6;
    $$04350 = $2;
    label = 11;
   }
   L14 : do if ((label | 0) == 11) {
    $34 = HEAPU8[$$03952 >> 0] | 0;
    $35 = $34 >>> 3;
    if (($35 + -16 | $35 + ($$04051 >> 26)) >>> 0 > 7) {
     label = 19;
     break L1;
    }
    $43 = $34 + -128 | $$04051 << 6;
    $44 = $$04350 + -1 | 0;
    if (($43 | 0) < 0) {
     $$03952$pn = $$03952;
     $47 = $43;
     $53 = $44;
     while (1) {
      $$03952$pn = $$03952$pn + 1 | 0;
      if (!$53) {
       $$2 = $47;
       break L14;
      }
      $49 = HEAP8[$$03952$pn >> 0] | 0;
      if (($49 & -64) << 24 >> 24 != -128) {
       label = 19;
       break L1;
      }
      $51 = ($49 & 255) + -128 | $47 << 6;
      $52 = $53 + -1 | 0;
      if (($51 | 0) >= 0) {
       $$lcssa = $52;
       $$lcssa56 = $51;
       break;
      } else {
       $47 = $51;
       $53 = $52;
      }
     }
    } else {
     $$lcssa = $44;
     $$lcssa56 = $43;
    }
    HEAP32[$spec$select >> 2] = 0;
    HEAP32[$spec$select47 >> 2] = $$lcssa56;
    $$0 = $2 - $$lcssa | 0;
    break L1;
   } while (0);
   HEAP32[$spec$select >> 2] = $$2;
   $$0 = -2;
  }
 } while (0);
 if ((label | 0) == 19) {
  HEAP32[$spec$select >> 2] = 0;
  $60 = ___errno_location() | 0;
  HEAP32[$60 >> 2] = 25;
  $$0 = -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _next_marker($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$058 = 0, $$064 = 0, $$1 = 0, $$159 = 0, $$2 = 0, $$260 = 0, $$26076 = 0, $$26078 = 0, $$275 = 0, $$277 = 0, $$3 = 0, $$361 = 0, $$4 = 0, $$4$ph = 0, $$462 = 0, $$462$ph = 0, $$5 = 0, $$563 = 0, $17 = 0, $2 = 0, $36 = 0, $4 = 0, $40 = 0, $41 = 0, $43 = 0, $45 = 0, $6 = 0, $7 = 0, label = 0;
 $2 = HEAP32[$0 + 24 >> 2] | 0;
 $4 = $2 + 4 | 0;
 $6 = $2 + 12 | 0;
 $7 = $0 + 464 | 0;
 $$0 = HEAP32[$4 >> 2] | 0;
 $$058 = HEAP32[$2 >> 2] | 0;
 L1 : while (1) {
  if (!$$0) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$6 >> 2] & 127]($0) | 0)) {
    $$064 = 0;
    label = 21;
    break;
   }
   $$1 = HEAP32[$4 >> 2] | 0;
   $$159 = HEAP32[$2 >> 2] | 0;
  } else {
   $$1 = $$0;
   $$159 = $$058;
  }
  $$275 = $$1 + -1 | 0;
  $$26076 = $$159 + 1 | 0;
  if ((HEAP8[$$159 >> 0] | 0) == -1) {
   $$4$ph = $$275;
   $$462$ph = $$26076;
  } else {
   $$26078 = $$26076;
   $$277 = $$275;
   while (1) {
    $17 = (HEAP32[$7 >> 2] | 0) + 24 | 0;
    HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 1;
    HEAP32[$2 >> 2] = $$26078;
    HEAP32[$4 >> 2] = $$277;
    if (!$$277) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$6 >> 2] & 127]($0) | 0)) {
      $$064 = 0;
      label = 21;
      break L1;
     }
     $$3 = HEAP32[$4 >> 2] | 0;
     $$361 = HEAP32[$2 >> 2] | 0;
    } else {
     $$3 = $$277;
     $$361 = $$26078;
    }
    $$2 = $$3 + -1 | 0;
    $$260 = $$361 + 1 | 0;
    if ((HEAP8[$$361 >> 0] | 0) == -1) {
     $$4$ph = $$2;
     $$462$ph = $$260;
     break;
    } else {
     $$26078 = $$260;
     $$277 = $$2;
    }
   }
  }
  $$4 = $$4$ph;
  $$462 = $$462$ph;
  do {
   if (!$$4) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$6 >> 2] & 127]($0) | 0)) {
     $$064 = 0;
     label = 21;
     break L1;
    }
    $$5 = HEAP32[$4 >> 2] | 0;
    $$563 = HEAP32[$2 >> 2] | 0;
   } else {
    $$5 = $$4;
    $$563 = $$462;
   }
   $$4 = $$5 + -1 | 0;
   $$462 = $$563 + 1 | 0;
   $36 = HEAP8[$$563 >> 0] | 0;
  } while ($36 << 24 >> 24 == -1);
  $40 = (HEAP32[$7 >> 2] | 0) + 24 | 0;
  $41 = HEAP32[$40 >> 2] | 0;
  if ($36 << 24 >> 24) {
   label = 18;
   break;
  }
  HEAP32[$40 >> 2] = $41 + 2;
  HEAP32[$2 >> 2] = $$462;
  HEAP32[$4 >> 2] = $$4;
  $$0 = $$4;
  $$058 = $$462;
 }
 if ((label | 0) == 18) {
  $43 = $36 & 255;
  if ($41 | 0) {
   $45 = HEAP32[$0 >> 2] | 0;
   HEAP32[$45 + 20 >> 2] = 119;
   HEAP32[$45 + 24 >> 2] = $41;
   HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $43;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, -1);
   HEAP32[(HEAP32[$7 >> 2] | 0) + 24 >> 2] = 0;
  }
  HEAP32[$0 + 440 >> 2] = $43;
  HEAP32[$2 >> 2] = $$462;
  HEAP32[$4 >> 2] = $$4;
  $$064 = 1;
  return $$064 | 0;
 } else if ((label | 0) == 21) return $$064 | 0;
 return 0;
}

function __ZN6vision19FindHoughSimilarityERNS_21HoughSimilarityVotingERKNSt3__26vectorINS_12FeaturePointENS2_9allocatorIS4_EEEES9_RKNS3_INS_7match_tENS5_ISA_EEEEiiii($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$065 = 0, $$cast = 0, $10 = 0, $11 = 0, $12 = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $31 = 0.0, $32 = 0.0, $34 = 0.0, $50 = 0, $52 = 0, $55 = 0, $57 = 0, $58 = 0, $69 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $8 = sp + 20 | 0;
 $9 = sp + 8 | 0;
 $10 = sp + 4 | 0;
 $11 = sp;
 $12 = $3 + 4 | 0;
 __ZNSt3__26vectorIfNS_9allocatorIfEEEC2Em($8, (HEAP32[$12 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) >> 1);
 __ZNSt3__26vectorIfNS_9allocatorIfEEEC2Em($9, (HEAP32[$12 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) >> 1);
 $22 = HEAP32[$3 >> 2] | 0;
 $24 = (HEAP32[$12 >> 2] | 0) - $22 >> 3;
 $$cast = $22;
 $25 = HEAP32[$1 >> 2] | 0;
 $26 = HEAP32[$2 >> 2] | 0;
 $27 = HEAP32[$8 >> 2] | 0;
 $28 = HEAP32[$9 >> 2] | 0;
 $$065 = 0;
 while (1) {
  if (($$065 | 0) == ($24 | 0)) break;
  $52 = HEAP32[$$cast + ($$065 << 3) >> 2] | 0;
  $55 = HEAP32[$$cast + ($$065 << 3) + 4 >> 2] | 0;
  $57 = $$065 << 2;
  $58 = $27 + ($57 << 2) | 0;
  HEAP32[$58 >> 2] = HEAP32[$25 + ($52 * 20 | 0) >> 2];
  HEAP32[$58 + 4 >> 2] = HEAP32[$25 + ($52 * 20 | 0) + 4 >> 2];
  HEAP32[$58 + 8 >> 2] = HEAP32[$25 + ($52 * 20 | 0) + 8 >> 2];
  HEAP32[$58 + 12 >> 2] = HEAP32[$25 + ($52 * 20 | 0) + 12 >> 2];
  $69 = $28 + ($57 << 2) | 0;
  HEAP32[$69 >> 2] = HEAP32[$26 + ($55 * 20 | 0) >> 2];
  HEAP32[$69 + 4 >> 2] = HEAP32[$26 + ($55 * 20 | 0) + 4 >> 2];
  HEAP32[$69 + 8 >> 2] = HEAP32[$26 + ($55 * 20 | 0) + 8 >> 2];
  HEAP32[$69 + 12 >> 2] = HEAP32[$26 + ($55 * 20 | 0) + 12 >> 2];
  $$065 = $$065 + 1 | 0;
 }
 $29 = +($4 | 0);
 $31 = $29 * .20000000298023224 + $29;
 $32 = +($5 | 0);
 $34 = $32 * .20000000298023224 + $32;
 __ZN6vision21HoughSimilarityVoting4initEffffiiii($0, -$31, $31, -$34, $34, 0, 0, 12, 10);
 __ZN6vision21HoughSimilarityVoting26setObjectCenterInReferenceEff($0, +($6 >> 1 | 0), +($7 >> 1 | 0));
 __ZN6vision21HoughSimilarityVoting21setRefImageDimensionsEii($0, $6, $7);
 __ZN6vision21HoughSimilarityVoting4voteEPKfS2_i($0, HEAP32[$8 >> 2] | 0, HEAP32[$9 >> 2] | 0, (HEAP32[$12 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) >> 3);
 __ZNK6vision21HoughSimilarityVoting23getMaximumNumberOfVotesERfRi($0, $10, $11);
 $50 = +HEAPF32[$10 >> 2] < 3.0 ? -1 : HEAP32[$11 >> 2] | 0;
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev($9);
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev($8);
 STACKTOP = sp;
 return $50 | 0;
}

function __ZNK12_GLOBAL__N_116itanium_demangle7NewExpr9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy6 = 0, $15 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy6 = sp + 56 | 0;
 $2 = sp + 48 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 32 | 0;
 $5 = sp + 24 | 0;
 $6 = sp + 16 | 0;
 $7 = sp + 8 | 0;
 $8 = sp;
 if (HEAP8[$0 + 28 >> 0] | 0) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 53288);
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
 }
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 53300);
 HEAP32[$$byval_copy6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
 if (HEAP8[$0 + 29 >> 0] | 0) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 53304);
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
 }
 __ZN12_GLOBAL__N_112OutputStreampLEc($1, 32);
 $15 = $0 + 8 | 0;
 if (!(__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray5emptyEv($15) | 0)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 51968);
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
  __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($15, $1);
  __ZN12_GLOBAL__N_110StringViewC2EPKc($6, 51964);
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
 }
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$0 + 16 >> 2] | 0, $1);
 $19 = $0 + 20 | 0;
 if (!(__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray5emptyEv($19) | 0)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($7, 51968);
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$7 >> 2];
  HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
  __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($19, $1);
  __ZN12_GLOBAL__N_110StringViewC2EPKc($8, 51964);
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$$byval_copy6 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy6);
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_mmNS_12codecvt_modeE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0100 = 0, $$194 = 0, $$194$ph = 0, $$2102 = 0, $$598 = 0, $$pre = 0, $21 = 0, $22 = 0, $33 = 0, $47 = 0, $49 = 0, $56 = 0, $76 = 0, $78 = 0, $80 = 0, $86 = 0, $89 = 0;
 $$pre = $1;
 if (((($4 & 4 | 0) != 0 ? ($$pre - $0 | 0) > 2 : 0) ? (HEAP8[$0 >> 0] | 0) == -17 : 0) ? (HEAP8[$0 + 1 >> 0] | 0) == -69 : 0) $$194$ph = (HEAP8[$0 + 2 >> 0] | 0) == -65 ? $0 + 3 | 0 : $0; else $$194$ph = $0;
 $$0100 = 0;
 $$194 = $$194$ph;
 L7 : while (1) {
  if (!($$0100 >>> 0 < $2 >>> 0 & $$194 >>> 0 < $1 >>> 0)) break;
  $21 = HEAP8[$$194 >> 0] | 0;
  $22 = $21 & 255;
  if ($22 >>> 0 > $3 >>> 0) break;
  do if ($21 << 24 >> 24 <= -1) {
   if (($21 & 255) < 194) break L7;
   if (($21 & 255) < 224) {
    if (($$pre - $$194 | 0) < 2) break L7;
    $33 = HEAPU8[$$194 + 1 >> 0] | 0;
    if (($33 & 192 | 0) != 128) break L7;
    if (($33 & 63 | $22 << 6 & 1984) >>> 0 > $3 >>> 0) break L7; else {
     $$2102 = $$0100;
     $$598 = $$194 + 2 | 0;
     break;
    }
   }
   if (($21 & 255) < 240) {
    if (($$pre - $$194 | 0) < 3) break L7;
    $47 = HEAP8[$$194 + 1 >> 0] | 0;
    $49 = HEAP8[$$194 + 2 >> 0] | 0;
    switch ($21 << 24 >> 24) {
    case -32:
     {
      if (($47 & -32) << 24 >> 24 != -96) break L7;
      break;
     }
    case -19:
     {
      if (($47 & -32) << 24 >> 24 != -128) break L7;
      break;
     }
    default:
     if (($47 & -64) << 24 >> 24 != -128) break L7;
    }
    $56 = $49 & 255;
    if (($56 & 192 | 0) != 128) break L7;
    if ((($47 & 63) << 6 | $22 << 12 & 61440 | $56 & 63) >>> 0 > $3 >>> 0) break L7; else {
     $$2102 = $$0100;
     $$598 = $$194 + 3 | 0;
     break;
    }
   }
   if (($21 & 255) >= 245) break L7;
   if (($2 - $$0100 | 0) >>> 0 < 2 | ($$pre - $$194 | 0) < 4) break L7;
   $76 = HEAP8[$$194 + 1 >> 0] | 0;
   $78 = HEAP8[$$194 + 2 >> 0] | 0;
   $80 = HEAP8[$$194 + 3 >> 0] | 0;
   switch ($21 << 24 >> 24) {
   case -16:
    {
     if (($76 + 112 & 255) >= 48) break L7;
     break;
    }
   case -12:
    {
     if (($76 & -16) << 24 >> 24 != -128) break L7;
     break;
    }
   default:
    if (($76 & -64) << 24 >> 24 != -128) break L7;
   }
   $86 = $78 & 255;
   if (($86 & 192 | 0) != 128) break L7;
   $89 = $80 & 255;
   if (($89 & 192 | 0) != 128) break L7;
   if ((($76 & 63) << 12 | $22 << 18 & 1835008 | $86 << 6 & 4032 | $89 & 63) >>> 0 > $3 >>> 0) break L7; else {
    $$2102 = $$0100 + 1 | 0;
    $$598 = $$194 + 4 | 0;
   }
  } else {
   $$2102 = $$0100;
   $$598 = $$194 + 1 | 0;
  } while (0);
  $$0100 = $$2102 + 1 | 0;
  $$194 = $$598;
 }
 return $$194 - $0 | 0;
}

function _pop_arg($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $100 = 0, $109 = 0, $11 = 0, $110 = 0.0, $17 = 0, $18 = 0, $21 = 0, $30 = 0, $31 = 0, $32 = 0, $41 = 0, $42 = 0, $44 = 0, $47 = 0, $48 = 0, $57 = 0, $58 = 0, $60 = 0, $63 = 0, $72 = 0, $73 = 0, $74 = 0, $83 = 0, $84 = 0, $86 = 0, $89 = 0, $98 = 0, $99 = 0;
 L1 : do if ($1 >>> 0 <= 20) do switch ($1 | 0) {
 case 9:
  {
   $10 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $11 = HEAP32[$10 >> 2] | 0;
   HEAP32[$2 >> 2] = $10 + 4;
   HEAP32[$0 >> 2] = $11;
   break L1;
   break;
  }
 case 10:
  {
   $17 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $18 = HEAP32[$17 >> 2] | 0;
   HEAP32[$2 >> 2] = $17 + 4;
   $21 = $0;
   HEAP32[$21 >> 2] = $18;
   HEAP32[$21 + 4 >> 2] = (($18 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 11:
  {
   $30 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $31 = HEAP32[$30 >> 2] | 0;
   HEAP32[$2 >> 2] = $30 + 4;
   $32 = $0;
   HEAP32[$32 >> 2] = $31;
   HEAP32[$32 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 12:
  {
   $41 = (HEAP32[$2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $42 = $41;
   $44 = HEAP32[$42 >> 2] | 0;
   $47 = HEAP32[$42 + 4 >> 2] | 0;
   HEAP32[$2 >> 2] = $41 + 8;
   $48 = $0;
   HEAP32[$48 >> 2] = $44;
   HEAP32[$48 + 4 >> 2] = $47;
   break L1;
   break;
  }
 case 13:
  {
   $57 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $58 = HEAP32[$57 >> 2] | 0;
   HEAP32[$2 >> 2] = $57 + 4;
   $60 = ($58 & 65535) << 16 >> 16;
   $63 = $0;
   HEAP32[$63 >> 2] = $60;
   HEAP32[$63 + 4 >> 2] = (($60 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 14:
  {
   $72 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $73 = HEAP32[$72 >> 2] | 0;
   HEAP32[$2 >> 2] = $72 + 4;
   $74 = $0;
   HEAP32[$74 >> 2] = $73 & 65535;
   HEAP32[$74 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 15:
  {
   $83 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $84 = HEAP32[$83 >> 2] | 0;
   HEAP32[$2 >> 2] = $83 + 4;
   $86 = ($84 & 255) << 24 >> 24;
   $89 = $0;
   HEAP32[$89 >> 2] = $86;
   HEAP32[$89 + 4 >> 2] = (($86 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 16:
  {
   $98 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $99 = HEAP32[$98 >> 2] | 0;
   HEAP32[$2 >> 2] = $98 + 4;
   $100 = $0;
   HEAP32[$100 >> 2] = $99 & 255;
   HEAP32[$100 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 17:
  {
   $109 = (HEAP32[$2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $110 = +HEAPF64[$109 >> 3];
   HEAP32[$2 >> 2] = $109 + 8;
   HEAPF64[$0 >> 3] = $110;
   break L1;
   break;
  }
 case 18:
  {
   FUNCTION_TABLE_vii[$3 & 255]($0, $2);
   break L1;
   break;
  }
 default:
  break L1;
 } while (0); while (0);
 return;
}

function __ZNK12_GLOBAL__N_116itanium_demangle10BinaryExpr9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy5 = 0, $13 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy5 = sp + 56 | 0;
 $2 = sp + 48 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 32 | 0;
 $5 = sp;
 $6 = sp + 24 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 8 | 0;
 $9 = $0 + 12 | 0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy5, 52043);
 if (__ZN12_GLOBAL__N_1eqERKNS_10StringViewES2_($9, $$byval_copy5) | 0) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 51968);
  HEAP32[$$byval_copy5 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
 }
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 51968);
 HEAP32[$$byval_copy5 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$0 + 8 >> 2] | 0, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 54711);
 HEAP32[$$byval_copy5 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
 $13 = $9;
 $18 = HEAP32[$13 + 4 >> 2] | 0;
 $19 = $5;
 HEAP32[$19 >> 2] = HEAP32[$13 >> 2];
 HEAP32[$19 + 4 >> 2] = $18;
 HEAP32[$$byval_copy5 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($6, 54714);
 HEAP32[$$byval_copy5 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$0 + 20 >> 2] | 0, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($7, 51964);
 HEAP32[$$byval_copy5 >> 2] = HEAP32[$7 >> 2];
 HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($$byval_copy5, 52043);
 if (__ZN12_GLOBAL__N_1eqERKNS_10StringViewES2_($9, $$byval_copy5) | 0) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($8, 51964);
  HEAP32[$$byval_copy5 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
 }
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E14parseArrayTypeEv($0) {
 $0 = $0 | 0;
 var $$1 = 0, $$2 = 0, $$3 = 0, $$byval_copy = 0, $1 = 0, $13 = 0, $2 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 16 | 0;
 $1 = sp;
 $2 = sp + 8 | 0;
 if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 65) | 0) {
  __ZN12_GLOBAL__N_116itanium_demangle12NodeOrStringC2Ev($1);
  if ((((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24) + -48 | 0) >>> 0 < 10) {
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($2, $0, 0);
   HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
   __ZN12_GLOBAL__N_116itanium_demangle12NodeOrStringC2ENS_10StringViewE($1, $$byval_copy);
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) label = 8; else $$2 = 0;
  } else if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0)) {
   $9 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   if (($9 | 0) != 0 ? __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0 : 0) {
    __ZN12_GLOBAL__N_116itanium_demangle12NodeOrStringC2EPNS0_4NodeE($1, $9);
    label = 8;
   } else $$2 = 0;
  } else label = 8;
  if ((label | 0) == 8) {
   $13 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$$byval_copy >> 2] = $13;
   if (!$13) $$1 = 0; else $$1 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9ArrayTypeEJRPNS0_4NodeERNS0_12NodeOrStringEEEES9_DpOT0_($0, $$byval_copy, $1) | 0;
   $$2 = $$1;
  }
  $$3 = $$2;
 } else $$3 = 0;
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE8__rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$054$ph$ph = 0, $$055 = 0, $$056$ph = 0, $$056$ph$ph = 0, $$058 = 0, $13 = 0, $14 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $29 = 0, $32 = 0, $37 = 0, $39 = 0, $42 = 0, $43 = 0, $5 = 0, $57 = 0, $7 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 L1 : do if ($1) {
  if ($1 >>> 0 > 1073741823) {
   $5 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($5, 41481);
   HEAP32[$5 >> 2] = 17472;
   ___cxa_throw($5 | 0, 13960, 22);
  }
  $7 = __Znwm($1 << 2) | 0;
  $8 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $7;
  if ($8 | 0) __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($8, HEAP32[$0 + 4 >> 2] << 2);
  HEAP32[$2 >> 2] = $1;
  $$058 = 0;
  while (1) {
   if (($$058 | 0) == ($1 | 0)) break;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$058 << 2) >> 2] = 0;
   $$058 = $$058 + 1 | 0;
  }
  $13 = $0 + 8 | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  if ($14 | 0) {
   $20 = HEAP32[$14 + 4 >> 2] | 0;
   $21 = $1 + -1 | 0;
   $23 = ($21 & $1 | 0) == 0;
   if (!$23) if ($20 >>> 0 < $1 >>> 0) $29 = $20; else $29 = ($20 >>> 0) % ($1 >>> 0) | 0; else $29 = $20 & $21;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] = $13;
   $$054$ph$ph = $29;
   $$056$ph$ph = $14;
   while (1) {
    $$056$ph = $$056$ph$ph;
    L25 : while (1) {
     while (1) {
      $$055 = HEAP32[$$056$ph >> 2] | 0;
      if (!$$055) break L1;
      $32 = HEAP32[$$055 + 4 >> 2] | 0;
      if (!$23) if ($32 >>> 0 < $1 >>> 0) $37 = $32; else $37 = ($32 >>> 0) % ($1 >>> 0) | 0; else $37 = $32 & $21;
      if (($37 | 0) == ($$054$ph$ph | 0)) break;
      $39 = (HEAP32[$0 >> 2] | 0) + ($37 << 2) | 0;
      if (!(HEAP32[$39 >> 2] | 0)) break L25;
      $42 = $$055 + 8 | 0;
      $$0 = $$055;
      while (1) {
       $43 = HEAP32[$$0 >> 2] | 0;
       if (!$43) break;
       if ((HEAP32[$42 >> 2] | 0) == (HEAP32[$43 + 8 >> 2] | 0)) $$0 = $43; else break;
      }
      HEAP32[$$056$ph >> 2] = $43;
      HEAP32[$$0 >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($37 << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($37 << 2) >> 2] >> 2] = $$055;
     }
     $$056$ph = $$055;
    }
    HEAP32[$39 >> 2] = $$056$ph;
    $$054$ph$ph = $37;
    $$056$ph$ph = $$055;
   }
  }
 } else {
  $57 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($57 | 0) __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($57, HEAP32[$0 + 4 >> 2] << 2);
  HEAP32[$2 >> 2] = 0;
 } while (0);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE8__rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$054$ph$ph = 0, $$055 = 0, $$056$ph = 0, $$056$ph$ph = 0, $$058 = 0, $13 = 0, $14 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $29 = 0, $32 = 0, $37 = 0, $39 = 0, $42 = 0, $43 = 0, $5 = 0, $57 = 0, $7 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 L1 : do if ($1) {
  if ($1 >>> 0 > 1073741823) {
   $5 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($5, 41481);
   HEAP32[$5 >> 2] = 17472;
   ___cxa_throw($5 | 0, 13960, 22);
  }
  $7 = __Znwm($1 << 2) | 0;
  $8 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $7;
  if ($8 | 0) __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($8, HEAP32[$0 + 4 >> 2] << 2);
  HEAP32[$2 >> 2] = $1;
  $$058 = 0;
  while (1) {
   if (($$058 | 0) == ($1 | 0)) break;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$058 << 2) >> 2] = 0;
   $$058 = $$058 + 1 | 0;
  }
  $13 = $0 + 8 | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  if ($14 | 0) {
   $20 = HEAP32[$14 + 4 >> 2] | 0;
   $21 = $1 + -1 | 0;
   $23 = ($21 & $1 | 0) == 0;
   if (!$23) if ($20 >>> 0 < $1 >>> 0) $29 = $20; else $29 = ($20 >>> 0) % ($1 >>> 0) | 0; else $29 = $20 & $21;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] = $13;
   $$054$ph$ph = $29;
   $$056$ph$ph = $14;
   while (1) {
    $$056$ph = $$056$ph$ph;
    L25 : while (1) {
     while (1) {
      $$055 = HEAP32[$$056$ph >> 2] | 0;
      if (!$$055) break L1;
      $32 = HEAP32[$$055 + 4 >> 2] | 0;
      if (!$23) if ($32 >>> 0 < $1 >>> 0) $37 = $32; else $37 = ($32 >>> 0) % ($1 >>> 0) | 0; else $37 = $32 & $21;
      if (($37 | 0) == ($$054$ph$ph | 0)) break;
      $39 = (HEAP32[$0 >> 2] | 0) + ($37 << 2) | 0;
      if (!(HEAP32[$39 >> 2] | 0)) break L25;
      $42 = $$055 + 8 | 0;
      $$0 = $$055;
      while (1) {
       $43 = HEAP32[$$0 >> 2] | 0;
       if (!$43) break;
       if ((HEAP32[$42 >> 2] | 0) == (HEAP32[$43 + 8 >> 2] | 0)) $$0 = $43; else break;
      }
      HEAP32[$$056$ph >> 2] = $43;
      HEAP32[$$0 >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($37 << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($37 << 2) >> 2] >> 2] = $$055;
     }
     $$056$ph = $$055;
    }
    HEAP32[$39 >> 2] = $$056$ph;
    $$054$ph$ph = $37;
    $$056$ph$ph = $$055;
   }
  }
 } else {
  $57 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($57 | 0) __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($57, HEAP32[$0 + 4 >> 2] << 2);
  HEAP32[$2 >> 2] = 0;
 } while (0);
 return;
}

function _jinit_merged_upsampler($0) {
 $0 = $0 | 0;
 var $$03233$i = 0, $$03233$i23 = 0, $$034$i = 0, $$034$i22 = 0, $1 = 0, $11 = 0, $16 = 0, $21 = 0, $27 = 0, $30 = 0, $31 = 0, $32 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $56 = 0, $59 = 0, $71 = 0, $74 = 0;
 $1 = $0 + 4 | 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 48) | 0;
 $5 = $0 + 476 | 0;
 HEAP32[$5 >> 2] = $4;
 HEAP32[$4 >> 2] = 189;
 HEAP32[$4 + 8 >> 2] = 0;
 $11 = Math_imul(HEAP32[$0 + 120 >> 2] | 0, HEAP32[$0 + 112 >> 2] | 0) | 0;
 HEAP32[$4 + 40 >> 2] = $11;
 $16 = $4 + 4 | 0;
 if ((HEAP32[$0 + 320 >> 2] | 0) == 2) {
  HEAP32[$16 >> 2] = 1;
  HEAP32[$4 + 12 >> 2] = 9;
  $21 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 63]($0, 1, $11) | 0;
  HEAP32[$4 + 32 >> 2] = $21;
  $32 = HEAP32[$5 >> 2] | 0;
 } else {
  HEAP32[$16 >> 2] = 2;
  HEAP32[$4 + 12 >> 2] = 10;
  HEAP32[$4 + 32 >> 2] = 0;
  $32 = $4;
 }
 $27 = (HEAP32[$0 + 40 >> 2] | 0) == 7;
 $30 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
 $31 = $32 + 16 | 0;
 HEAP32[$31 >> 2] = $30;
 $35 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
 $36 = $32 + 20 | 0;
 HEAP32[$36 >> 2] = $35;
 $39 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
 $40 = $32 + 24 | 0;
 HEAP32[$40 >> 2] = $39;
 $43 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
 HEAP32[$32 + 28 >> 2] = $43;
 $45 = HEAP32[$31 >> 2] | 0;
 $46 = HEAP32[$36 >> 2] | 0;
 $47 = HEAP32[$40 >> 2] | 0;
 if ($27) {
  $$03233$i = 0;
  $$034$i = -128;
  while (1) {
   HEAP32[$45 + ($$03233$i << 2) >> 2] = ($$034$i * 183763 | 0) + 32768 >> 16;
   HEAP32[$46 + ($$03233$i << 2) >> 2] = ($$034$i * 232260 | 0) + 32768 >> 16;
   $56 = Math_imul($$034$i, -93603) | 0;
   HEAP32[$47 + ($$03233$i << 2) >> 2] = $56;
   $59 = (Math_imul($$034$i, -45107) | 0) + 32768 | 0;
   HEAP32[$43 + ($$03233$i << 2) >> 2] = $59;
   $$03233$i = $$03233$i + 1 | 0;
   if (($$03233$i | 0) == 256) break; else $$034$i = $$034$i + 1 | 0;
  }
  return;
 } else {
  $$03233$i23 = 0;
  $$034$i22 = -128;
  while (1) {
   HEAP32[$45 + ($$03233$i23 << 2) >> 2] = ($$034$i22 * 91881 | 0) + 32768 >> 16;
   HEAP32[$46 + ($$03233$i23 << 2) >> 2] = ($$034$i22 * 116130 | 0) + 32768 >> 16;
   $71 = Math_imul($$034$i22, -46802) | 0;
   HEAP32[$47 + ($$03233$i23 << 2) >> 2] = $71;
   $74 = (Math_imul($$034$i22, -22553) | 0) + 32768 | 0;
   HEAP32[$43 + ($$03233$i23 << 2) >> 2] = $74;
   $$03233$i23 = $$03233$i23 + 1 | 0;
   if (($$03233$i23 | 0) == 256) break; else $$034$i22 = $$034$i22 + 1 | 0;
  }
  return;
 }
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE($agg$result, $this, $__p) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__p = $__p | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $2 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__next_20$pre$phiZ2D = 0, $__p1_ = 0, $__pn$0 = 0, $__value_$i$i$i = 0, $arrayidx$i48 = 0, $cond3$i = 0, $cond3$i35 = 0, $cond3$i44 = 0, $cond3$i55 = 0, $sub$i49 = 0, $tobool$i51 = 0, label = 0;
 $0 = HEAP32[$__p >> 2] | 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $sub$i49 = $1 + -1 | 0;
 $tobool$i51 = ($sub$i49 & $1 | 0) == 0;
 if (!$tobool$i51) if ($2 >>> 0 < $1 >>> 0) $cond3$i55 = $2; else $cond3$i55 = ($2 >>> 0) % ($1 >>> 0) | 0; else $cond3$i55 = $sub$i49 & $2;
 $arrayidx$i48 = (HEAP32[$this >> 2] | 0) + ($cond3$i55 << 2) | 0;
 $__pn$0 = HEAP32[$arrayidx$i48 >> 2] | 0;
 while (1) {
  $5 = HEAP32[$__pn$0 >> 2] | 0;
  if (($5 | 0) == ($0 | 0)) break; else $__pn$0 = $5;
 }
 $__p1_ = $this + 8 | 0;
 if (($__pn$0 | 0) != ($__p1_ | 0)) {
  $6 = HEAP32[$__pn$0 + 4 >> 2] | 0;
  if (!$tobool$i51) if ($6 >>> 0 < $1 >>> 0) $cond3$i44 = $6; else $cond3$i44 = ($6 >>> 0) % ($1 >>> 0) | 0; else $cond3$i44 = $6 & $sub$i49;
  if (($cond3$i44 | 0) == ($cond3$i55 | 0)) $__next_20$pre$phiZ2D = $0; else label = 14;
 } else label = 14;
 do if ((label | 0) == 14) {
  $7 = HEAP32[$0 >> 2] | 0;
  if ($7 | 0) {
   $8 = HEAP32[$7 + 4 >> 2] | 0;
   if (!$tobool$i51) if ($8 >>> 0 < $1 >>> 0) $cond3$i35 = $8; else $cond3$i35 = ($8 >>> 0) % ($1 >>> 0) | 0; else $cond3$i35 = $8 & $sub$i49;
   if (($cond3$i35 | 0) == ($cond3$i55 | 0)) {
    $__next_20$pre$phiZ2D = $0;
    break;
   }
  }
  HEAP32[$arrayidx$i48 >> 2] = 0;
  $__next_20$pre$phiZ2D = $0;
 } while (0);
 $9 = HEAP32[$__next_20$pre$phiZ2D >> 2] | 0;
 $10 = $9;
 if ($9) {
  $11 = HEAP32[$9 + 4 >> 2] | 0;
  if (!$tobool$i51) if ($11 >>> 0 < $1 >>> 0) $cond3$i = $11; else $cond3$i = ($11 >>> 0) % ($1 >>> 0) | 0; else $cond3$i = $11 & $sub$i49;
  if (($cond3$i | 0) != ($cond3$i55 | 0)) {
   HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i << 2) >> 2] = $__pn$0;
   $13 = HEAP32[$0 >> 2] | 0;
  } else $13 = $10;
 } else $13 = $10;
 HEAP32[$__pn$0 >> 2] = $13;
 HEAP32[$__next_20$pre$phiZ2D >> 2] = 0;
 $__value_$i$i$i = $this + 12 | 0;
 HEAP32[$__value_$i$i$i >> 2] = (HEAP32[$__value_$i$i$i >> 2] | 0) + -1;
 HEAP32[$agg$result >> 2] = $0;
 HEAP32[$agg$result + 4 >> 2] = $__p1_;
 HEAP8[$agg$result + 8 >> 0] = 1;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE8__rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$054$ph$ph = 0, $$055 = 0, $$056$ph = 0, $$056$ph$ph = 0, $$058 = 0, $13 = 0, $14 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $29 = 0, $32 = 0, $37 = 0, $39 = 0, $42 = 0, $43 = 0, $5 = 0, $57 = 0, $7 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 L1 : do if ($1) {
  if ($1 >>> 0 > 1073741823) {
   $5 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($5, 41481);
   HEAP32[$5 >> 2] = 17472;
   ___cxa_throw($5 | 0, 13960, 22);
  }
  $7 = __Znwm($1 << 2) | 0;
  $8 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $7;
  if ($8 | 0) __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($8, HEAP32[$0 + 4 >> 2] << 2);
  HEAP32[$2 >> 2] = $1;
  $$058 = 0;
  while (1) {
   if (($$058 | 0) == ($1 | 0)) break;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$058 << 2) >> 2] = 0;
   $$058 = $$058 + 1 | 0;
  }
  $13 = $0 + 8 | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  if ($14 | 0) {
   $20 = HEAP32[$14 + 4 >> 2] | 0;
   $21 = $1 + -1 | 0;
   $23 = ($21 & $1 | 0) == 0;
   if (!$23) if ($20 >>> 0 < $1 >>> 0) $29 = $20; else $29 = ($20 >>> 0) % ($1 >>> 0) | 0; else $29 = $20 & $21;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] = $13;
   $$054$ph$ph = $29;
   $$056$ph$ph = $14;
   while (1) {
    $$056$ph = $$056$ph$ph;
    L25 : while (1) {
     while (1) {
      $$055 = HEAP32[$$056$ph >> 2] | 0;
      if (!$$055) break L1;
      $32 = HEAP32[$$055 + 4 >> 2] | 0;
      if (!$23) if ($32 >>> 0 < $1 >>> 0) $37 = $32; else $37 = ($32 >>> 0) % ($1 >>> 0) | 0; else $37 = $32 & $21;
      if (($37 | 0) == ($$054$ph$ph | 0)) break;
      $39 = (HEAP32[$0 >> 2] | 0) + ($37 << 2) | 0;
      if (!(HEAP32[$39 >> 2] | 0)) break L25;
      $42 = $$055 + 8 | 0;
      $$0 = $$055;
      while (1) {
       $43 = HEAP32[$$0 >> 2] | 0;
       if (!$43) break;
       if ((HEAP32[$42 >> 2] | 0) == (HEAP32[$43 + 8 >> 2] | 0)) $$0 = $43; else break;
      }
      HEAP32[$$056$ph >> 2] = $43;
      HEAP32[$$0 >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($37 << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($37 << 2) >> 2] >> 2] = $$055;
     }
     $$056$ph = $$055;
    }
    HEAP32[$39 >> 2] = $$056$ph;
    $$054$ph$ph = $37;
    $$056$ph$ph = $$055;
   }
  }
 } else {
  $57 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($57 | 0) __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($57, HEAP32[$0 + 4 >> 2] << 2);
  HEAP32[$2 >> 2] = 0;
 } while (0);
 return;
}

function _wcsnrtombs($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$04773 = 0, $$05172 = 0, $$054 = 0, $$148 = 0, $$152 = 0, $$15571 = 0, $$162 = 0, $$174 = 0, $$2 = 0, $$24968 = 0, $$25367 = 0, $$256 = 0, $$350 = 0, $$357 = 0, $$369 = 0, $$466 = 0, $$cast = 0, $11 = 0, $14 = 0, $15 = 0, $17 = 0, $20 = 0, $21 = 0, $25 = 0, $30 = 0, $31 = 0, $40 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(272);
 $5 = sp;
 $6 = sp + 256 | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP32[$6 >> 2] = $7;
 $8 = ($0 | 0) != 0;
 $$054 = $8 ? $3 : 256;
 $$0 = $8 ? $0 : $5;
 $$cast = $7;
 L1 : do if (($$054 | 0) != 0 & ($7 | 0) != 0) {
  $$04773 = 0;
  $$05172 = $2;
  $$15571 = $$054;
  $$174 = $$0;
  $45 = $$cast;
  while (1) {
   $11 = $$05172 >>> 0 >= $$15571 >>> 0;
   if (!($11 | $$05172 >>> 0 > 32)) {
    $$148 = $$04773;
    $$152 = $$05172;
    $$162 = $$174;
    $$357 = $$15571;
    $25 = $45;
    break L1;
   }
   $spec$select = $11 ? $$15571 : $$05172;
   $14 = $$05172 - $spec$select | 0;
   $15 = _wcsrtombs($$174, $6, $spec$select, 0) | 0;
   if (($15 | 0) == -1) break;
   $17 = ($$174 | 0) == ($5 | 0);
   $$256 = $$15571 - ($17 ? 0 : $15) | 0;
   $$2 = $17 ? $$174 : $$174 + $15 | 0;
   $20 = $15 + $$04773 | 0;
   $21 = HEAP32[$6 >> 2] | 0;
   if (($$256 | 0) != 0 & ($21 | 0) != 0) {
    $$04773 = $20;
    $$05172 = $14;
    $$15571 = $$256;
    $$174 = $$2;
    $45 = $21;
   } else {
    $$148 = $20;
    $$152 = $14;
    $$162 = $$2;
    $$357 = $$256;
    $25 = $21;
    break L1;
   }
  }
  $$148 = -1;
  $$152 = $14;
  $$162 = $$174;
  $$357 = 0;
  $25 = HEAP32[$6 >> 2] | 0;
 } else {
  $$148 = 0;
  $$152 = $2;
  $$162 = $$0;
  $$357 = $$054;
  $25 = $$cast;
 } while (0);
 L9 : do if (($25 | 0) != 0 ? ($$357 | 0) != 0 & ($$152 | 0) != 0 : 0) {
  $$24968 = $$148;
  $$25367 = $$152;
  $$369 = $$162;
  $$466 = $$357;
  $30 = $25;
  while (1) {
   $31 = _wcrtomb($$369, HEAP32[$30 >> 2] | 0, 0) | 0;
   if (($31 + 1 | 0) >>> 0 < 2) break;
   $30 = (HEAP32[$6 >> 2] | 0) + 4 | 0;
   HEAP32[$6 >> 2] = $30;
   $$25367 = $$25367 + -1 | 0;
   $$466 = $$466 - $31 | 0;
   $40 = $31 + $$24968 | 0;
   if (!(($$466 | 0) != 0 & ($$25367 | 0) != 0)) {
    $$350 = $40;
    break L9;
   } else {
    $$24968 = $40;
    $$369 = $$369 + $31 | 0;
   }
  }
  if (!$31) {
   HEAP32[$6 >> 2] = 0;
   $$350 = $$24968;
  } else $$350 = -1;
 } else $$350 = $$148; while (0);
 if ($8) HEAP32[$1 >> 2] = HEAP32[$6 >> 2];
 STACKTOP = sp;
 return $$350 | 0;
}

function _alloc_small($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$069 = 0, $$070 = 0, $$07082 = 0, $$07084 = 0, $$072$lcssa = 0, $$1 = 0, $$171 = 0, $$277 = 0, $$lcssa73 = 0, $$lcssa74 = 0, $$pre$phiZ2D = 0, $11 = 0, $16 = 0, $21 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $34 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $43 = 0, $49 = 0, $50 = 0, $53 = 0, $6 = 0, label = 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 if ($2 >>> 0 > 999999984) {
  $6 = HEAP32[$0 >> 2] | 0;
  HEAP32[$6 + 20 >> 2] = 56;
  HEAP32[$6 + 24 >> 2] = 1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $11 = $2 & 7;
 $$069 = (($11 | 0) == 0 ? 0 : 8 - $11 | 0) + $2 | 0;
 if ($1 >>> 0 > 1) {
  $16 = HEAP32[$0 >> 2] | 0;
  HEAP32[$16 + 20 >> 2] = 15;
  HEAP32[$16 + 24 >> 2] = $1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $21 = $4 + 52 + ($1 << 2) | 0;
 $$07082 = HEAP32[$21 >> 2] | 0;
 L7 : do if (!$$07082) {
  $$072$lcssa = 0;
  label = 9;
 } else {
  $$07084 = $$07082;
  while (1) {
   if ((HEAP32[$$07084 + 8 >> 2] | 0) >>> 0 >= $$069 >>> 0) {
    $$171 = $$07084;
    break L7;
   }
   $$070 = HEAP32[$$07084 >> 2] | 0;
   if (!$$070) {
    $$072$lcssa = $$07084;
    label = 9;
    break;
   } else $$07084 = $$070;
  }
 } while (0);
 do if ((label | 0) == 9) {
  $25 = ($$072$lcssa | 0) == 0;
  $$0 = HEAP32[($25 ? 17016 : 17024) + ($1 << 2) >> 2] | 0;
  $26 = 999999984 - $$069 | 0;
  $$1 = $$0 >>> 0 > $26 >>> 0 ? $26 : $$0;
  $28 = $$1 + $$069 | 0;
  $29 = $28 + 16 | 0;
  $30 = _jpeg_get_small($0, $29) | 0;
  if (!$30) {
   $$277 = $$1;
   do {
    if ($$277 >>> 0 < 100) {
     $34 = HEAP32[$0 >> 2] | 0;
     HEAP32[$34 + 20 >> 2] = 56;
     HEAP32[$34 + 24 >> 2] = 2;
     FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
    }
    $$277 = $$277 >>> 1;
    $39 = $$277 + $$069 | 0;
    $40 = $39 + 16 | 0;
    $41 = _jpeg_get_small($0, $40) | 0;
   } while (!($41 | 0));
   $$lcssa73 = $41;
   $$lcssa74 = $40;
   $$pre$phiZ2D = $39;
  } else {
   $$lcssa73 = $30;
   $$lcssa74 = $29;
   $$pre$phiZ2D = $28;
  }
  $43 = $4 + 76 | 0;
  HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + $$lcssa74;
  HEAP32[$$lcssa73 >> 2] = 0;
  HEAP32[$$lcssa73 + 4 >> 2] = 0;
  HEAP32[$$lcssa73 + 8 >> 2] = $$pre$phiZ2D;
  if ($25) {
   HEAP32[$21 >> 2] = $$lcssa73;
   $$171 = $$lcssa73;
   break;
  } else {
   HEAP32[$$072$lcssa >> 2] = $$lcssa73;
   $$171 = $$lcssa73;
   break;
  }
 } while (0);
 $49 = $$171 + 4 | 0;
 $50 = HEAP32[$49 >> 2] | 0;
 HEAP32[$49 >> 2] = $50 + $$069;
 $53 = $$171 + 8 | 0;
 HEAP32[$53 >> 2] = (HEAP32[$53 >> 2] | 0) - $$069;
 return $$171 + 16 + $50 | 0;
}

function _arImageProcLumaHistAndBoxFilterWithBias($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$073 = 0, $$074 = 0, $$075 = 0, $$076 = 0, $$078 = 0, $$082 = 0, $$1 = 0, $$177 = 0, $$179 = 0, $$2 = 0, $$280 = 0, $$3 = 0, $$381 = 0, $$pre$phi86Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $13 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $22 = 0, $26 = 0, $28 = 0, $4 = 0, $44 = 0, $50 = 0, $53 = 0, $8 = 0;
 $4 = _arImageProcLumaHist($0, $1) | 0;
 L1 : do if (($4 | 0) >= 0) {
  if (!(HEAP32[$0 >> 2] | 0)) {
   $8 = $0 + 4 | 0;
   $10 = $0 + 8 | 0;
   $13 = _malloc(Math_imul(HEAP32[$10 >> 2] | 0, HEAP32[$8 >> 2] | 0) | 0) | 0;
   HEAP32[$0 >> 2] = $13;
   if (!$13) {
    $$0 = -1;
    break;
   } else {
    $$pre$phi86Z2D = $8;
    $$pre$phiZ2D = $10;
   }
  } else {
   $$pre$phi86Z2D = $0 + 4 | 0;
   $$pre$phiZ2D = $0 + 8 | 0;
  }
  $15 = $2 >> 1;
  $16 = 0 - $15 | 0;
  $$082 = 0;
  while (1) {
   $17 = HEAP32[$$pre$phiZ2D >> 2] | 0;
   if (($$082 | 0) >= ($17 | 0)) break;
   $$073 = 0;
   while (1) {
    $19 = HEAP32[$$pre$phi86Z2D >> 2] | 0;
    if (($$073 | 0) >= ($19 | 0)) break;
    $$074 = $16;
    $$076 = 0;
    $$078 = 0;
    while (1) {
     if (($$074 | 0) > ($15 | 0)) break;
     $22 = $$074 + $$082 | 0;
     L16 : do if (($22 | 0) >= 0 ? ($22 | 0) < (HEAP32[$$pre$phiZ2D >> 2] | 0) : 0) {
      $26 = Math_imul($22, $19) | 0;
      $$075 = $16;
      $$177 = $$076;
      $$179 = $$078;
      while (1) {
       if (($$075 | 0) > ($15 | 0)) {
        $$3 = $$177;
        $$381 = $$179;
        break L16;
       }
       $28 = $$075 + $$073 | 0;
       if (($28 | 0) > -1 & ($28 | 0) < ($19 | 0)) {
        $$2 = $$177 + 1 | 0;
        $$280 = $$179 + (HEAPU8[$1 + ($28 + $26) >> 0] | 0) | 0;
       } else {
        $$2 = $$177;
        $$280 = $$179;
       }
       $$075 = $$075 + 1 | 0;
       $$177 = $$2;
       $$179 = $$280;
      }
     } else {
      $$3 = $$076;
      $$381 = $$078;
     } while (0);
     $$074 = $$074 + 1 | 0;
     $$076 = $$3;
     $$078 = $$381;
    }
    $44 = (HEAP32[$0 >> 2] | 0) + ((Math_imul($19, $$082) | 0) + $$073) | 0;
    HEAP8[$44 >> 0] = ($$078 | 0) / ($$076 | 0) | 0;
    $$073 = $$073 + 1 | 0;
   }
   $$082 = $$082 + 1 | 0;
  }
  if (!$3) $$0 = 0; else {
   $$1 = 0;
   $50 = $17;
   while (1) {
    if (($$1 | 0) >= (Math_imul($50, HEAP32[$$pre$phi86Z2D >> 2] | 0) | 0)) {
     $$0 = 0;
     break L1;
    }
    $53 = (HEAP32[$0 >> 2] | 0) + $$1 | 0;
    HEAP8[$53 >> 0] = (HEAPU8[$53 >> 0] | 0) + $3;
    $$1 = $$1 + 1 | 0;
    $50 = HEAP32[$$pre$phiZ2D >> 2] | 0;
   }
  }
 } else $$0 = $4; while (0);
 return $$0 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE8__rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$054$ph$ph = 0, $$055 = 0, $$056$ph = 0, $$056$ph$ph = 0, $$058 = 0, $13 = 0, $14 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $29 = 0, $32 = 0, $37 = 0, $39 = 0, $42 = 0, $43 = 0, $5 = 0, $57 = 0, $7 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 L1 : do if ($1) {
  if ($1 >>> 0 > 1073741823) {
   $5 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($5, 41481);
   HEAP32[$5 >> 2] = 17472;
   ___cxa_throw($5 | 0, 13960, 22);
  }
  $7 = __Znwm($1 << 2) | 0;
  $8 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $7;
  if ($8 | 0) __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($8, HEAP32[$0 + 4 >> 2] << 2);
  HEAP32[$2 >> 2] = $1;
  $$058 = 0;
  while (1) {
   if (($$058 | 0) == ($1 | 0)) break;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$058 << 2) >> 2] = 0;
   $$058 = $$058 + 1 | 0;
  }
  $13 = $0 + 8 | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  if ($14 | 0) {
   $20 = HEAP32[$14 + 4 >> 2] | 0;
   $21 = $1 + -1 | 0;
   $23 = ($21 & $1 | 0) == 0;
   if (!$23) if ($20 >>> 0 < $1 >>> 0) $29 = $20; else $29 = ($20 >>> 0) % ($1 >>> 0) | 0; else $29 = $20 & $21;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] = $13;
   $$054$ph$ph = $29;
   $$056$ph$ph = $14;
   while (1) {
    $$056$ph = $$056$ph$ph;
    L25 : while (1) {
     while (1) {
      $$055 = HEAP32[$$056$ph >> 2] | 0;
      if (!$$055) break L1;
      $32 = HEAP32[$$055 + 4 >> 2] | 0;
      if (!$23) if ($32 >>> 0 < $1 >>> 0) $37 = $32; else $37 = ($32 >>> 0) % ($1 >>> 0) | 0; else $37 = $32 & $21;
      if (($37 | 0) == ($$054$ph$ph | 0)) break;
      $39 = (HEAP32[$0 >> 2] | 0) + ($37 << 2) | 0;
      if (!(HEAP32[$39 >> 2] | 0)) break L25;
      $42 = $$055 + 8 | 0;
      $$0 = $$055;
      while (1) {
       $43 = HEAP32[$$0 >> 2] | 0;
       if (!$43) break;
       if ((HEAP32[$42 >> 2] | 0) == (HEAP32[$43 + 8 >> 2] | 0)) $$0 = $43; else break;
      }
      HEAP32[$$056$ph >> 2] = $43;
      HEAP32[$$0 >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($37 << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($37 << 2) >> 2] >> 2] = $$055;
     }
     $$056$ph = $$055;
    }
    HEAP32[$39 >> 2] = $$056$ph;
    $$054$ph$ph = $37;
    $$056$ph$ph = $$055;
   }
  }
 } else {
  $57 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($57 | 0) __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($57, HEAP32[$0 + 4 >> 2] << 2);
  HEAP32[$2 >> 2] = 0;
 } while (0);
 return;
}

function __ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$2 = 0, $$pre49 = 0, $14 = 0, $16 = 0, $19 = 0, $20 = 0, $25 = 0, $32 = 0, $43 = 0, $46 = 0, $48 = 0, $58 = 0, $63 = 0, $74 = 0, $80 = 0, $85 = 0, $88 = 0, label = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 $$pre49 = $4;
 if ($7 & 2) if (($$pre49 - $3 | 0) < 3) $$2 = 1; else {
  HEAP32[$5 >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = -17;
  $14 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $14 + 1;
  HEAP8[$14 >> 0] = -69;
  $16 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $16 + 1;
  HEAP8[$16 >> 0] = -65;
  label = 4;
 } else label = 4;
 L4 : do if ((label | 0) == 4) {
  $19 = HEAP32[$2 >> 2] | 0;
  while (1) {
   if ($19 >>> 0 >= $1 >>> 0) {
    $$2 = 0;
    break L4;
   }
   $20 = HEAP32[$19 >> 2] | 0;
   if ($20 >>> 0 > $6 >>> 0 | ($20 & -2048 | 0) == 55296) {
    $$2 = 2;
    break L4;
   }
   do if ($20 >>> 0 >= 128) {
    if ($20 >>> 0 < 2048) {
     $32 = HEAP32[$5 >> 2] | 0;
     if (($$pre49 - $32 | 0) < 2) {
      $$2 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $32 + 1;
     HEAP8[$32 >> 0] = $20 >>> 6 | 192;
     $43 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $43 + 1;
     HEAP8[$43 >> 0] = $20 & 63 | 128;
     break;
    }
    $46 = HEAP32[$5 >> 2] | 0;
    $48 = $$pre49 - $46 | 0;
    if ($20 >>> 0 < 65536) {
     if (($48 | 0) < 3) {
      $$2 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $46 + 1;
     HEAP8[$46 >> 0] = $20 >>> 12 | 224;
     $58 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $58 + 1;
     HEAP8[$58 >> 0] = $20 >>> 6 & 63 | 128;
     $63 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $63 + 1;
     HEAP8[$63 >> 0] = $20 & 63 | 128;
     break;
    } else {
     if (($48 | 0) < 4) {
      $$2 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $46 + 1;
     HEAP8[$46 >> 0] = $20 >>> 18 | 240;
     $74 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $74 + 1;
     HEAP8[$74 >> 0] = $20 >>> 12 & 63 | 128;
     $80 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $80 + 1;
     HEAP8[$80 >> 0] = $20 >>> 6 & 63 | 128;
     $85 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $85 + 1;
     HEAP8[$85 >> 0] = $20 & 63 | 128;
     break;
    }
   } else {
    $25 = HEAP32[$5 >> 2] | 0;
    if (($$pre49 - $25 | 0) < 1) {
     $$2 = 1;
     break L4;
    }
    HEAP32[$5 >> 2] = $25 + 1;
    HEAP8[$25 >> 0] = $20;
   } while (0);
   $88 = (HEAP32[$2 >> 2] | 0) + 4 | 0;
   HEAP32[$2 >> 2] = $88;
   $19 = $88;
  }
 } while (0);
 return $$2 | 0;
}

function _trinkle($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0$lcssa = 0, $$045$lcssa = 0, $$04551 = 0, $$0455780 = 0, $$046$lcssa = 0, $$04653 = 0, $$0465681 = 0, $$047$lcssa = 0, $$0475582 = 0, $$049 = 0, $$05879 = 0, $$05879$phi = 0, $11 = 0, $12 = 0, $16 = 0, $20 = 0, $24 = 0, $27 = 0, $28 = 0, $35 = 0, $37 = 0, $38 = 0, $47 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $7 = sp + 232 | 0;
 $8 = sp;
 $9 = HEAP32[$3 >> 2] | 0;
 HEAP32[$7 >> 2] = $9;
 $11 = HEAP32[$3 + 4 >> 2] | 0;
 $12 = $7 + 4 | 0;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$8 >> 2] = $0;
 L1 : do if (($9 | 0) != 1 | ($11 | 0) != 0 ? ($16 = 0 - $1 | 0, $20 = $0 + (0 - (HEAP32[$6 + ($4 << 2) >> 2] | 0)) | 0, (FUNCTION_TABLE_iii[$2 & 127]($20, $0) | 0) >= 1) : 0) {
  $$0455780 = 1;
  $$0465681 = $4;
  $$0475582 = ($5 | 0) == 0;
  $$05879 = $0;
  $28 = $20;
  while (1) {
   if ($$0475582 & ($$0465681 | 0) > 1) {
    $24 = $$05879 + $16 | 0;
    $27 = HEAP32[$6 + ($$0465681 + -2 << 2) >> 2] | 0;
    if ((FUNCTION_TABLE_iii[$2 & 127]($24, $28) | 0) > -1) {
     $$04551 = $$0455780;
     $$04653 = $$0465681;
     $$049 = $$05879;
     label = 10;
     break L1;
    }
    if ((FUNCTION_TABLE_iii[$2 & 127]($24 + (0 - $27) | 0, $28) | 0) > -1) {
     $$04551 = $$0455780;
     $$04653 = $$0465681;
     $$049 = $$05879;
     label = 10;
     break L1;
    }
   }
   $35 = $$0455780 + 1 | 0;
   HEAP32[$8 + ($$0455780 << 2) >> 2] = $28;
   $37 = _pntz($7) | 0;
   _shr($7, $37);
   $38 = $37 + $$0465681 | 0;
   if (!((HEAP32[$7 >> 2] | 0) != 1 | (HEAP32[$12 >> 2] | 0) != 0)) {
    $$04551 = $35;
    $$04653 = $38;
    $$049 = $28;
    label = 10;
    break L1;
   }
   $47 = $28 + (0 - (HEAP32[$6 + ($38 << 2) >> 2] | 0)) | 0;
   if ((FUNCTION_TABLE_iii[$2 & 127]($47, HEAP32[$8 >> 2] | 0) | 0) < 1) {
    $$0$lcssa = $28;
    $$045$lcssa = $35;
    $$046$lcssa = $38;
    $$047$lcssa = 0;
    label = 9;
    break;
   } else {
    $$05879$phi = $28;
    $$0455780 = $35;
    $$0465681 = $38;
    $$0475582 = 1;
    $28 = $47;
    $$05879 = $$05879$phi;
   }
  }
 } else {
  $$0$lcssa = $0;
  $$045$lcssa = 1;
  $$046$lcssa = $4;
  $$047$lcssa = $5;
  label = 9;
 } while (0);
 if ((label | 0) == 9 ? ($$047$lcssa | 0) == 0 : 0) {
  $$04551 = $$045$lcssa;
  $$04653 = $$046$lcssa;
  $$049 = $$0$lcssa;
  label = 10;
 }
 if ((label | 0) == 10) {
  _cycle($1, $8, $$04551);
  _sift($$049, $1, $2, $$04653, $6);
 }
 STACKTOP = sp;
 return;
}

function _jinit_upsampler($0) {
 $0 = $0 | 0;
 var $$08488 = 0, $$089 = 0, $1 = 0, $11 = 0, $14 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $33 = 0, $35 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $51 = 0, $54 = 0, $59 = 0, $63 = 0, $72 = 0, $77 = 0, $80 = 0, $82 = 0;
 $1 = $0 + 4 | 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 160) | 0;
 HEAP32[$0 + 476 >> 2] = $4;
 HEAP32[$4 >> 2] = 191;
 HEAP32[$4 + 4 >> 2] = 3;
 HEAP32[$4 + 8 >> 2] = 0;
 if (HEAP32[$0 + 308 >> 2] | 0) {
  $11 = HEAP32[$0 >> 2] | 0;
  HEAP32[$11 + 20 >> 2] = 26;
  FUNCTION_TABLE_vi[HEAP32[$11 >> 2] & 255]($0);
 }
 $14 = $0 + 36 | 0;
 if ((HEAP32[$14 >> 2] | 0) <= 0) return;
 $19 = $0 + 324 | 0;
 $20 = $0 + 328 | 0;
 $21 = $0 + 316 | 0;
 $22 = $0 + 320 | 0;
 $23 = $4 + 100 | 0;
 $24 = $4 + 52 | 0;
 $25 = $0 + 112 | 0;
 $26 = $4 + 12 | 0;
 $27 = $4 + 140 | 0;
 $28 = $4 + 150 | 0;
 $$08488 = HEAP32[$0 + 216 >> 2] | 0;
 $$089 = 0;
 while (1) {
  $33 = Math_imul(HEAP32[$$08488 + 36 >> 2] | 0, HEAP32[$$08488 + 8 >> 2] | 0) | 0;
  $35 = ($33 | 0) / (HEAP32[$19 >> 2] | 0) | 0;
  $40 = Math_imul(HEAP32[$$08488 + 40 >> 2] | 0, HEAP32[$$08488 + 12 >> 2] | 0) | 0;
  $42 = ($40 | 0) / (HEAP32[$20 >> 2] | 0) | 0;
  $43 = HEAP32[$21 >> 2] | 0;
  $44 = HEAP32[$22 >> 2] | 0;
  HEAP32[$23 + ($$089 << 2) >> 2] = $42;
  do if (!(HEAP32[$$08488 + 52 >> 2] | 0)) HEAP32[$24 + ($$089 << 2) >> 2] = 11; else {
   $51 = ($42 | 0) == ($44 | 0);
   if (($35 | 0) == ($43 | 0) & $51) {
    HEAP32[$24 + ($$089 << 2) >> 2] = 12;
    break;
   }
   $54 = ($35 << 1 | 0) == ($43 | 0);
   do if ($54 & $51) HEAP32[$24 + ($$089 << 2) >> 2] = 13; else {
    if ($54 & ($42 << 1 | 0) == ($44 | 0)) {
     HEAP32[$24 + ($$089 << 2) >> 2] = 14;
     break;
    }
    $59 = ($43 | 0) / ($35 | 0) | 0;
    if (($43 - (Math_imul($59, $35) | 0) | 0) == 0 ? ($63 = ($44 | 0) / ($42 | 0) | 0, ($44 - (Math_imul($63, $42) | 0) | 0) == 0) : 0) {
     HEAP32[$24 + ($$089 << 2) >> 2] = 15;
     HEAP8[$27 + $$089 >> 0] = $59;
     HEAP8[$28 + $$089 >> 0] = $63;
     break;
    }
    $72 = HEAP32[$0 >> 2] | 0;
    HEAP32[$72 + 20 >> 2] = 39;
    FUNCTION_TABLE_vi[HEAP32[$72 >> 2] & 255]($0);
   } while (0);
   $77 = HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] | 0;
   $80 = _jround_up(HEAP32[$25 >> 2] | 0, HEAP32[$21 >> 2] | 0) | 0;
   $82 = FUNCTION_TABLE_iiiii[$77 & 15]($0, 1, $80, HEAP32[$22 >> 2] | 0) | 0;
   HEAP32[$26 + ($$089 << 2) >> 2] = $82;
  } while (0);
  $$089 = $$089 + 1 | 0;
  if (($$089 | 0) >= (HEAP32[$14 >> 2] | 0)) break; else $$08488 = $$08488 + 88 | 0;
 }
 return;
}

function _arPattCreateHandle2($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$043 = 0, $$044 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $23 = 0, $26 = 0, $27 = 0, $28 = 0, $31 = 0, $33 = 0, $34 = 0, $37 = 0, $4 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $vararg_buffer13 = sp + 56 | 0;
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 L1 : do if (!(($0 + -16 | 0) >>> 0 > 48 | ($1 | 0) < 1)) {
  $4 = _malloc(32) | 0;
  if (!$4) {
   _arLog(0, 3, 45930, $vararg_buffer);
   _exit(1);
  }
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = $1;
  HEAP32[$4 + 28 >> 2] = $0;
  $9 = _malloc($1 << 2) | 0;
  HEAP32[$4 + 8 >> 2] = $9;
  if (!$9) {
   _arLog(0, 3, 45930, $vararg_buffer1);
   _exit(1);
  }
  $12 = $1 << 4;
  $13 = _malloc($12) | 0;
  HEAP32[$4 + 12 >> 2] = $13;
  if (!$13) {
   _arLog(0, 3, 45930, $vararg_buffer3);
   _exit(1);
  }
  $16 = _malloc($12) | 0;
  $17 = $4 + 20 | 0;
  HEAP32[$17 >> 2] = $16;
  if (!$16) {
   _arLog(0, 3, 45930, $vararg_buffer5);
   _exit(1);
  }
  $19 = $1 << 5;
  $20 = _malloc($19) | 0;
  HEAP32[$4 + 16 >> 2] = $20;
  if (!$20) {
   _arLog(0, 3, 45930, $vararg_buffer7);
   _exit(1);
  }
  $23 = _malloc($19) | 0;
  HEAP32[$4 + 24 >> 2] = $23;
  if (!$23) {
   _arLog(0, 3, 45930, $vararg_buffer9);
   _exit(1);
  }
  $26 = Math_imul($0, $0) | 0;
  $27 = $26 * 12 | 0;
  $28 = $26 << 2;
  $$043 = 0;
  L21 : while (1) {
   if (($$043 | 0) >= ($1 | 0)) {
    $$044 = $4;
    break L1;
   }
   HEAP32[$9 + ($$043 << 2) >> 2] = 0;
   $31 = $$043 << 2;
   $$0 = 0;
   while (1) {
    if ($$0 >>> 0 >= 4) break;
    $33 = _malloc($27) | 0;
    $34 = $$0 + $31 | 0;
    HEAP32[$13 + ($34 << 2) >> 2] = $33;
    if (!$33) {
     label = 19;
     break L21;
    }
    $37 = _malloc($28) | 0;
    HEAP32[(HEAP32[$17 >> 2] | 0) + ($34 << 2) >> 2] = $37;
    if (!$37) {
     label = 21;
     break L21;
    } else $$0 = $$0 + 1 | 0;
   }
   $$043 = $$043 + 1 | 0;
  }
  if ((label | 0) == 19) {
   _arLog(0, 3, 45930, $vararg_buffer11);
   _exit(1);
  } else if ((label | 0) == 21) {
   _arLog(0, 3, 45930, $vararg_buffer13);
   _exit(1);
  }
 } else $$044 = 0; while (0);
 STACKTOP = sp;
 return $$044 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$byval_copy = 0, $$sroa$0$0 = 0, $$sroa$0$0$copyload = 0, $$sroa$09$0 = 0, $12 = 0, $16 = 0, $17 = 0, $23 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $34 = 0, $38 = 0, $39 = 0, $41 = 0, $42 = 0, $48 = 0, $49 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $5 = sp;
 if (!(HEAP32[$2 + 4 >> 2] & 1)) {
  $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
  $$sroa$0$0 = FUNCTION_TABLE_iiiiii[$12 & 31]($0, $$byval_copy, $2, $3, $4 & 1) | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 66552) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $17 = HEAP32[$16 >> 2] | 0;
  if ($4) FUNCTION_TABLE_vii[HEAP32[$17 + 24 >> 2] & 255]($$byval_copy, $16); else FUNCTION_TABLE_vii[HEAP32[$17 + 28 >> 2] & 255]($$byval_copy, $16);
  $23 = $$byval_copy + 8 + 3 | 0;
  $24 = HEAP8[$23 >> 0] | 0;
  $26 = HEAP32[$$byval_copy >> 2] | 0;
  $28 = $$byval_copy + 4 | 0;
  $$sroa$09$0 = $24 << 24 >> 24 < 0 ? $26 : $$byval_copy;
  $30 = $24;
  $34 = $26;
  while (1) {
   $29 = $30 << 24 >> 24 < 0;
   if (($$sroa$09$0 | 0) == (($29 ? $34 : $$byval_copy) + (($29 ? HEAP32[$28 >> 2] | 0 : $30 & 255) << 2) | 0)) break;
   $38 = HEAP32[$$sroa$09$0 >> 2] | 0;
   $39 = HEAP32[$1 >> 2] | 0;
   if ($39 | 0) {
    $41 = $39 + 24 | 0;
    $42 = HEAP32[$41 >> 2] | 0;
    if (($42 | 0) == (HEAP32[$39 + 28 >> 2] | 0)) {
     $48 = HEAP32[(HEAP32[$39 >> 2] | 0) + 52 >> 2] | 0;
     $49 = __ZNSt3__211char_traitsIwE11to_int_typeEw($38) | 0;
     $$0$i$i = FUNCTION_TABLE_iii[$48 & 127]($39, $49) | 0;
    } else {
     HEAP32[$41 >> 2] = $42 + 4;
     HEAP32[$42 >> 2] = $38;
     $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw($38) | 0;
    }
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) HEAP32[$1 >> 2] = 0;
   }
   $$sroa$09$0 = $$sroa$09$0 + 4 | 0;
   $30 = HEAP8[$23 >> 0] | 0;
   $34 = HEAP32[$$byval_copy >> 2] | 0;
  }
  $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($$byval_copy);
  $$sroa$0$0 = $$sroa$0$0$copyload;
 }
 STACKTOP = sp;
 return $$sroa$0$0 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$byval_copy = 0, $$sroa$0$0 = 0, $$sroa$0$0$copyload = 0, $$sroa$09$0 = 0, $12 = 0, $16 = 0, $17 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $33 = 0, $37 = 0, $38 = 0, $40 = 0, $41 = 0, $47 = 0, $48 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $5 = sp;
 if (!(HEAP32[$2 + 4 >> 2] & 1)) {
  $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
  $$sroa$0$0 = FUNCTION_TABLE_iiiiii[$12 & 31]($0, $$byval_copy, $2, $3, $4 & 1) | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 66528) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $17 = HEAP32[$16 >> 2] | 0;
  if ($4) FUNCTION_TABLE_vii[HEAP32[$17 + 24 >> 2] & 255]($$byval_copy, $16); else FUNCTION_TABLE_vii[HEAP32[$17 + 28 >> 2] & 255]($$byval_copy, $16);
  $22 = $$byval_copy + 11 | 0;
  $23 = HEAP8[$22 >> 0] | 0;
  $25 = HEAP32[$$byval_copy >> 2] | 0;
  $27 = $$byval_copy + 4 | 0;
  $$sroa$09$0 = $23 << 24 >> 24 < 0 ? $25 : $$byval_copy;
  $29 = $23;
  $33 = $25;
  while (1) {
   $28 = $29 << 24 >> 24 < 0;
   if (($$sroa$09$0 | 0) == (($28 ? $33 : $$byval_copy) + ($28 ? HEAP32[$27 >> 2] | 0 : $29 & 255) | 0)) break;
   $37 = HEAP8[$$sroa$09$0 >> 0] | 0;
   $38 = HEAP32[$1 >> 2] | 0;
   if ($38 | 0) {
    $40 = $38 + 24 | 0;
    $41 = HEAP32[$40 >> 2] | 0;
    if (($41 | 0) == (HEAP32[$38 + 28 >> 2] | 0)) {
     $47 = HEAP32[(HEAP32[$38 >> 2] | 0) + 52 >> 2] | 0;
     $48 = __ZNSt3__211char_traitsIcE11to_int_typeEc($37) | 0;
     $$0$i$i = FUNCTION_TABLE_iii[$47 & 127]($38, $48) | 0;
    } else {
     HEAP32[$40 >> 2] = $41 + 1;
     HEAP8[$41 >> 0] = $37;
     $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc($37) | 0;
    }
    if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) HEAP32[$1 >> 2] = 0;
   }
   $$sroa$09$0 = $$sroa$09$0 + 1 | 0;
   $29 = HEAP8[$22 >> 0] | 0;
   $33 = HEAP32[$$byval_copy >> 2] | 0;
  }
  $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$byval_copy);
  $$sroa$0$0 = $$sroa$0$0$copyload;
 }
 STACKTOP = sp;
 return $$sroa$0$0 | 0;
}

function _start_pass_main($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06870$i = 0, $$06979$i = 0, $$080$i = 0, $$171$i = 0, $$275$i = 0, $11 = 0, $13 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $26 = 0, $29 = 0, $3 = 0, $32 = 0, $34 = 0, $35 = 0, $38 = 0, $42 = 0, $44 = 0, $45 = 0, $46 = 0, $49 = 0, $70 = 0, $9 = 0;
 $3 = HEAP32[$0 + 448 >> 2] | 0;
 switch ($1 | 0) {
 case 0:
  {
   $9 = $3 + 4 | 0;
   if (!(HEAP32[(HEAP32[$0 + 476 >> 2] | 0) + 8 >> 2] | 0)) {
    HEAP32[$9 >> 2] = 17;
    HEAP32[$3 + 48 >> 2] = HEAP32[$3 + 52 >> 2];
    return;
   }
   HEAP32[$9 >> 2] = 16;
   $11 = HEAP32[$0 + 328 >> 2] | 0;
   $13 = HEAP32[$0 + 36 >> 2] | 0;
   if (($13 | 0) > 0) {
    $17 = $3 + 60 | 0;
    $18 = $3 + 64 | 0;
    $19 = $11 + 2 | 0;
    $20 = $11 + -2 | 0;
    $$06979$i = HEAP32[$0 + 216 >> 2] | 0;
    $$080$i = 0;
    while (1) {
     $26 = (Math_imul(HEAP32[$$06979$i + 40 >> 2] | 0, HEAP32[$$06979$i + 12 >> 2] | 0) | 0) / ($11 | 0) | 0;
     $29 = HEAP32[(HEAP32[$17 >> 2] | 0) + ($$080$i << 2) >> 2] | 0;
     $32 = HEAP32[(HEAP32[$18 >> 2] | 0) + ($$080$i << 2) >> 2] | 0;
     $34 = HEAP32[$3 + 8 + ($$080$i << 2) >> 2] | 0;
     $35 = Math_imul($26, $19) | 0;
     if (($35 | 0) > 0) {
      $$06870$i = 0;
      do {
       $38 = HEAP32[$34 + ($$06870$i << 2) >> 2] | 0;
       HEAP32[$32 + ($$06870$i << 2) >> 2] = $38;
       HEAP32[$29 + ($$06870$i << 2) >> 2] = $38;
       $$06870$i = $$06870$i + 1 | 0;
      } while (($$06870$i | 0) != ($35 | 0));
     }
     $42 = $26 << 1;
     if (($26 | 0) > 0) {
      $44 = Math_imul($26, $11) | 0;
      $45 = Math_imul($26, $20) | 0;
      $$171$i = 0;
      do {
       $46 = $$171$i + $44 | 0;
       $49 = $$171$i + $45 | 0;
       HEAP32[$32 + ($49 << 2) >> 2] = HEAP32[$34 + ($46 << 2) >> 2];
       HEAP32[$32 + ($46 << 2) >> 2] = HEAP32[$34 + ($49 << 2) >> 2];
       $$171$i = $$171$i + 1 | 0;
      } while (($$171$i | 0) < ($42 | 0));
      $$275$i = 0;
      do {
       HEAP32[$29 + ($$275$i - $26 << 2) >> 2] = HEAP32[$29 >> 2];
       $$275$i = $$275$i + 1 | 0;
      } while (($$275$i | 0) != ($26 | 0));
     }
     $$080$i = $$080$i + 1 | 0;
     if (($$080$i | 0) == ($13 | 0)) break; else $$06979$i = $$06979$i + 88 | 0;
    }
   }
   HEAP32[$3 + 68 >> 2] = 0;
   HEAP32[$3 + 72 >> 2] = 0;
   HEAP32[$3 + 76 >> 2] = 0;
   HEAP32[$3 + 56 >> 2] = 0;
   return;
  }
 case 2:
  {
   HEAP32[$3 + 4 >> 2] = 18;
   return;
  }
 default:
  {
   $70 = HEAP32[$0 >> 2] | 0;
   HEAP32[$70 + 20 >> 2] = 3;
   FUNCTION_TABLE_vi[HEAP32[$70 >> 2] & 255]($0);
   return;
  }
 }
}

function __ZNSt3__211__sift_downIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$sroa$024$0 = 0, $$sroa$024$1 = 0, $$sroa$024$2 = 0, $10 = 0, $11 = 0, $12 = 0, $15 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $29 = 0, $34 = 0, $35 = 0, $40 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $64 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, sp = 0, $47$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 $6 = HEAP32[$4 >> 2] | 0;
 $7 = HEAP32[$0 >> 2] | 0;
 $8 = $6 - $7 | 0;
 $10 = $7;
 $11 = $6;
 $12 = $6;
 if (($3 | 0) >= 2 ? ($15 = ($3 + -2 | 0) / 2 | 0, ($15 | 0) >= ($8 >> 3 | 0)) : 0) {
  $18 = $8 >> 2 | 1;
  $19 = $10 + ($18 << 3) | 0;
  $20 = $19;
  $21 = $18 + 1 | 0;
  if (($21 | 0) < ($3 | 0)) {
   $23 = $19 + 8 | 0;
   $24 = __ZNK6vision17PriorityQueueItemILi96EEltERKS1_($19, $23) | 0;
   $$0 = $24 ? $21 : $18;
   $$sroa$024$0 = $24 ? $23 : $20;
  } else {
   $$0 = $18;
   $$sroa$024$0 = $20;
  }
  if (!(__ZNK6vision17PriorityQueueItemILi96EEltERKS1_($$sroa$024$0, $11) | 0)) {
   $29 = $6;
   $34 = HEAP32[$29 + 4 >> 2] | 0;
   $35 = $5;
   HEAP32[$35 >> 2] = HEAP32[$29 >> 2];
   HEAP32[$35 + 4 >> 2] = $34;
   $$1 = $$0;
   $$sroa$024$1 = $$sroa$024$0;
   $47 = $12;
   while (1) {
    $47$looptemp = $47;
    $47 = $$sroa$024$1;
    $40 = $47;
    $45 = HEAP32[$40 + 4 >> 2] | 0;
    $46 = $47$looptemp;
    HEAP32[$46 >> 2] = HEAP32[$40 >> 2];
    HEAP32[$46 + 4 >> 2] = $45;
    HEAP32[$4 >> 2] = $$sroa$024$1;
    if (($15 | 0) < ($$1 | 0)) break;
    $53 = $$1 << 1 | 1;
    $54 = $10 + ($53 << 3) | 0;
    $55 = $54;
    $56 = $53 + 1 | 0;
    if (($56 | 0) < ($3 | 0)) {
     $58 = $54 + 8 | 0;
     $59 = __ZNK6vision17PriorityQueueItemILi96EEltERKS1_($54, $58) | 0;
     $$2 = $59 ? $56 : $53;
     $$sroa$024$2 = $59 ? $58 : $55;
    } else {
     $$2 = $53;
     $$sroa$024$2 = $55;
    }
    if (__ZNK6vision17PriorityQueueItemILi96EEltERKS1_($$sroa$024$2, $5) | 0) break; else {
     $$1 = $$2;
     $$sroa$024$1 = $$sroa$024$2;
    }
   }
   $64 = $5;
   $69 = HEAP32[$64 + 4 >> 2] | 0;
   $70 = $$sroa$024$1;
   HEAP32[$70 >> 2] = HEAP32[$64 >> 2];
   HEAP32[$70 + 4 >> 2] = $69;
   __ZN6vision17PriorityQueueItemILi96EED2Ev($5);
  }
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_mmNS_12codecvt_modeE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$091 = 0, $$185 = 0, $$185$ph = 0, $$589 = 0, $$pre = 0, $21 = 0, $22 = 0, $33 = 0, $47 = 0, $49 = 0, $56 = 0, $74 = 0, $76 = 0, $78 = 0, $84 = 0, $87 = 0;
 $$pre = $1;
 if (((($4 & 4 | 0) != 0 ? ($$pre - $0 | 0) > 2 : 0) ? (HEAP8[$0 >> 0] | 0) == -17 : 0) ? (HEAP8[$0 + 1 >> 0] | 0) == -69 : 0) $$185$ph = (HEAP8[$0 + 2 >> 0] | 0) == -65 ? $0 + 3 | 0 : $0; else $$185$ph = $0;
 $$091 = 0;
 $$185 = $$185$ph;
 L7 : while (1) {
  if (!($$091 >>> 0 < $2 >>> 0 & $$185 >>> 0 < $1 >>> 0)) break;
  $21 = HEAP8[$$185 >> 0] | 0;
  $22 = $21 & 255;
  do if ($21 << 24 >> 24 <= -1) {
   if (($21 & 255) < 194) break L7;
   if (($21 & 255) < 224) {
    if (($$pre - $$185 | 0) < 2) break L7;
    $33 = HEAPU8[$$185 + 1 >> 0] | 0;
    if (($33 & 192 | 0) != 128) break L7;
    if (($33 & 63 | $22 << 6 & 1984) >>> 0 > $3 >>> 0) break L7;
    $$589 = $$185 + 2 | 0;
    break;
   }
   if (($21 & 255) < 240) {
    if (($$pre - $$185 | 0) < 3) break L7;
    $47 = HEAP8[$$185 + 1 >> 0] | 0;
    $49 = HEAP8[$$185 + 2 >> 0] | 0;
    switch ($21 << 24 >> 24) {
    case -32:
     {
      if (($47 & -32) << 24 >> 24 != -96) break L7;
      break;
     }
    case -19:
     {
      if (($47 & -32) << 24 >> 24 != -128) break L7;
      break;
     }
    default:
     if (($47 & -64) << 24 >> 24 != -128) break L7;
    }
    $56 = $49 & 255;
    if (($56 & 192 | 0) != 128) break L7;
    if ((($47 & 63) << 6 | $22 << 12 & 61440 | $56 & 63) >>> 0 > $3 >>> 0) break L7; else {
     $$589 = $$185 + 3 | 0;
     break;
    }
   }
   if (($21 & 255) >= 245) break L7;
   if (($$pre - $$185 | 0) < 4) break L7;
   $74 = HEAP8[$$185 + 1 >> 0] | 0;
   $76 = HEAP8[$$185 + 2 >> 0] | 0;
   $78 = HEAP8[$$185 + 3 >> 0] | 0;
   switch ($21 << 24 >> 24) {
   case -16:
    {
     if (($74 + 112 & 255) >= 48) break L7;
     break;
    }
   case -12:
    {
     if (($74 & -16) << 24 >> 24 != -128) break L7;
     break;
    }
   default:
    if (($74 & -64) << 24 >> 24 != -128) break L7;
   }
   $84 = $76 & 255;
   if (($84 & 192 | 0) != 128) break L7;
   $87 = $78 & 255;
   if (($87 & 192 | 0) != 128) break L7;
   if ((($74 & 63) << 12 | $22 << 18 & 1835008 | $84 << 6 & 4032 | $87 & 63) >>> 0 > $3 >>> 0) break L7; else $$589 = $$185 + 4 | 0;
  } else {
   if ($22 >>> 0 > $3 >>> 0) break L7;
   $$589 = $$185 + 1 | 0;
  } while (0);
  $$091 = $$091 + 1 | 0;
  $$185 = $$589;
 }
 return $$185 - $0 | 0;
}

function _loadNFTMarker($arc, $surfaceSetCount, $datasetPathname) {
 $arc = $arc | 0;
 $surfaceSetCount = $surfaceSetCount | 0;
 $datasetPathname = $datasetPathname | 0;
 var $0 = 0, $call6 = 0, $refDataSet = 0, $refDataSet2 = 0, $retval$0 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer16 = 0, $vararg_buffer19 = 0, $vararg_buffer21 = 0, $vararg_buffer23 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $vararg_buffer23 = sp + 80 | 0;
 $vararg_buffer21 = sp + 72 | 0;
 $vararg_buffer19 = sp + 64 | 0;
 $vararg_buffer16 = sp + 56 | 0;
 $vararg_buffer13 = sp + 48 | 0;
 $vararg_buffer11 = sp + 40 | 0;
 $vararg_buffer9 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $refDataSet = sp + 88 | 0;
 $refDataSet2 = sp + 84 | 0;
 $0 = HEAP32[$arc + 232 >> 2] | 0;
 HEAP32[$refDataSet >> 2] = 0;
 HEAP32[$vararg_buffer >> 2] = $datasetPathname;
 _arLog(0, 1, 44959, $vararg_buffer);
 do if ((_kpmLoadRefDataSet($datasetPathname, 44977, $refDataSet2) | 0) >= 0) {
  HEAP32[$vararg_buffer4 >> 2] = $surfaceSetCount;
  _arLog(0, 1, 45021, $vararg_buffer4);
  if ((_kpmChangePageNoOfRefDataSet(HEAP32[$refDataSet2 >> 2] | 0, -1, $surfaceSetCount) | 0) < 0) {
   _arLog(0, 3, 45046, $vararg_buffer7);
   $retval$0 = 0;
   break;
  }
  if ((_kpmMergeRefDataSet($refDataSet, $refDataSet2) | 0) < 0) {
   _arLog(0, 3, 45082, $vararg_buffer9);
   $retval$0 = 0;
   break;
  }
  _arLog(0, 1, 45109, $vararg_buffer11);
  HEAP32[$vararg_buffer13 >> 2] = $datasetPathname;
  _arLog(0, 1, 45118, $vararg_buffer13);
  $call6 = _ar2ReadSurfaceSet($datasetPathname, 45135, 0) | 0;
  HEAP32[$arc + 248 + ($surfaceSetCount << 2) >> 2] = $call6;
  if (!$call6) {
   HEAP32[$vararg_buffer16 >> 2] = $datasetPathname;
   _arLog(0, 3, 45140, $vararg_buffer16);
  }
  _arLog(0, 1, 45109, $vararg_buffer19);
  if (($surfaceSetCount | 0) == 10) _exit(-1);
  if ((_kpmSetRefDataSet($0, HEAP32[$refDataSet >> 2] | 0) | 0) < 0) {
   _arLog(0, 3, 45173, $vararg_buffer21);
   $retval$0 = 0;
   break;
  } else {
   _kpmDeleteRefDataSet($refDataSet) | 0;
   _arLog(0, 1, 45198, $vararg_buffer23);
   $retval$0 = 1;
   break;
  }
 } else {
  HEAP32[$vararg_buffer1 >> 2] = $datasetPathname;
  _arLog(0, 3, 44983, $vararg_buffer1);
  $retval$0 = 0;
 } while (0);
 STACKTOP = sp;
 return $retval$0 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$022$0 = 0, $$sroa$022$0$copyload24 = 0, $16 = 0, $19 = 0, $21 = 0, $22 = 0, $31 = 0, $34 = 0, $36 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 40 | 0;
 $$byval_copy = sp;
 $6 = sp + 32 | 0;
 $7 = sp + 36 | 0;
 $8 = sp + 28 | 0;
 $9 = sp + 24 | 0;
 if (!(HEAP32[$3 + 4 >> 2] & 1)) {
  HEAP32[$6 >> 2] = -1;
  $16 = HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$7 >> 2];
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$8 >> 2];
  $19 = FUNCTION_TABLE_iiiiiii[$16 & 63]($0, $$byval_copy, $$byval_copy2, $3, $4, $6) | 0;
  HEAP32[$1 >> 2] = $19;
  switch (HEAP32[$6 >> 2] | 0) {
  case 0:
   {
    HEAP8[$5 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[$5 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[$5 >> 0] = 1;
    HEAP32[$4 >> 2] = 4;
   }
  }
  $$sroa$022$0 = HEAP32[$1 >> 2] | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $3);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 66544) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $3);
  $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 66552) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 24 >> 2] & 255]($$byval_copy, $22);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 255]($$byval_copy + 12 | 0, $22);
  HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
  $31 = $$byval_copy + 24 | 0;
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$9 >> 2];
  $34 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($1, $$byval_copy2, $$byval_copy, $31, $21, $4, 1) | 0) == ($$byval_copy | 0) & 1;
  HEAP8[$5 >> 0] = $34;
  $$sroa$022$0$copyload24 = HEAP32[$1 >> 2] | 0;
  $36 = $31;
  do {
   $36 = $36 + -12 | 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($36);
  } while (($36 | 0) != ($$byval_copy | 0));
  $$sroa$022$0 = $$sroa$022$0$copyload24;
 }
 STACKTOP = sp;
 return $$sroa$022$0 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$022$0 = 0, $$sroa$022$0$copyload24 = 0, $16 = 0, $19 = 0, $21 = 0, $22 = 0, $31 = 0, $34 = 0, $36 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 40 | 0;
 $$byval_copy = sp;
 $6 = sp + 32 | 0;
 $7 = sp + 36 | 0;
 $8 = sp + 28 | 0;
 $9 = sp + 24 | 0;
 if (!(HEAP32[$3 + 4 >> 2] & 1)) {
  HEAP32[$6 >> 2] = -1;
  $16 = HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$7 >> 2];
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$8 >> 2];
  $19 = FUNCTION_TABLE_iiiiiii[$16 & 63]($0, $$byval_copy, $$byval_copy2, $3, $4, $6) | 0;
  HEAP32[$1 >> 2] = $19;
  switch (HEAP32[$6 >> 2] | 0) {
  case 0:
   {
    HEAP8[$5 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[$5 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[$5 >> 0] = 1;
    HEAP32[$4 >> 2] = 4;
   }
  }
  $$sroa$022$0 = HEAP32[$1 >> 2] | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $3);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 66512) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $3);
  $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 66528) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 24 >> 2] & 255]($$byval_copy, $22);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 255]($$byval_copy + 12 | 0, $22);
  HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
  $31 = $$byval_copy + 24 | 0;
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$9 >> 2];
  $34 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($1, $$byval_copy2, $$byval_copy, $31, $21, $4, 1) | 0) == ($$byval_copy | 0) & 1;
  HEAP8[$5 >> 0] = $34;
  $$sroa$022$0$copyload24 = HEAP32[$1 >> 2] | 0;
  $36 = $31;
  do {
   $36 = $36 + -12 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
  } while (($36 | 0) != ($$byval_copy | 0));
  $$sroa$022$0 = $$sroa$022$0$copyload24;
 }
 STACKTOP = sp;
 return $$sroa$022$0 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$046 = 0, $$047 = 0, $$1$off0$in = 0, $$148$off0$in = 0, $10 = 0, $11 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $23 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $31 = 0, $38 = 0, $43 = 0, $45 = 0, $9 = 0;
 if (__ZL8is_equalPKSt9type_infoS1_b($0, HEAP32[$1 + 8 >> 2] | 0, $5) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $1, $2, $3, $4); else {
  $9 = $1 + 52 | 0;
  $10 = HEAP8[$9 >> 0] | 0;
  $11 = $1 + 53 | 0;
  $12 = HEAP8[$11 >> 0] | 0;
  $15 = HEAP32[$0 + 12 >> 2] | 0;
  $16 = $0 + 16 + ($15 << 3) | 0;
  HEAP8[$9 >> 0] = 0;
  HEAP8[$11 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0 + 16 | 0, $1, $2, $3, $4, $5);
  $17 = HEAP8[$9 >> 0] | 0;
  $18 = $17 | $10;
  $19 = HEAP8[$11 >> 0] | 0;
  $20 = $19 | $12;
  L4 : do if (($15 | 0) > 1) {
   $23 = $1 + 24 | 0;
   $24 = $0 + 8 | 0;
   $25 = $1 + 54 | 0;
   $$0 = $0 + 24 | 0;
   $$046 = $18;
   $$047 = $20;
   $31 = $17;
   $38 = $19;
   while (1) {
    $28 = $$047 & 1;
    $29 = $$046 & 1;
    if (HEAP8[$25 >> 0] | 0) {
     $$1$off0$in = $29;
     $$148$off0$in = $28;
     break L4;
    }
    if (!($31 << 24 >> 24)) {
     if ($38 << 24 >> 24 ? (HEAP32[$24 >> 2] & 1 | 0) == 0 : 0) {
      $$1$off0$in = $29;
      $$148$off0$in = $28;
      break L4;
     }
    } else {
     if ((HEAP32[$23 >> 2] | 0) == 1) {
      $$1$off0$in = $29;
      $$148$off0$in = $28;
      break L4;
     }
     if (!(HEAP32[$24 >> 2] & 2)) {
      $$1$off0$in = $29;
      $$148$off0$in = $28;
      break L4;
     }
    }
    HEAP8[$9 >> 0] = 0;
    HEAP8[$11 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($$0, $1, $2, $3, $4, $5);
    $31 = HEAP8[$9 >> 0] | 0;
    $43 = $31 | $29;
    $38 = HEAP8[$11 >> 0] | 0;
    $45 = $38 | $28;
    $$0 = $$0 + 8 | 0;
    if ($$0 >>> 0 >= $16 >>> 0) {
     $$1$off0$in = $43;
     $$148$off0$in = $45;
     break;
    } else {
     $$046 = $43;
     $$047 = $45;
    }
   }
  } else {
   $$1$off0$in = $18;
   $$148$off0$in = $20;
  } while (0);
  HEAP8[$9 >> 0] = $$1$off0$in << 24 >> 24 != 0 & 1;
  HEAP8[$11 >> 0] = $$148$off0$in << 24 >> 24 != 0 & 1;
 }
 return;
}

function _memchr($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$137$lcssa66 = 0, $$13745 = 0, $$140 = 0, $$23839 = 0, $$in = 0, $$lcssa = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $20 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $39 = 0, $7 = 0, $8 = 0, label = 0;
 $3 = $1 & 255;
 $7 = ($2 | 0) != 0;
 L1 : do if ($7 & ($0 & 3 | 0) != 0) {
  $8 = $1 & 255;
  $$03555 = $0;
  $$03654 = $2;
  while (1) {
   if ((HEAP8[$$03555 >> 0] | 0) == $8 << 24 >> 24) {
    $$035$lcssa65 = $$03555;
    $$036$lcssa64 = $$03654;
    label = 6;
    break L1;
   }
   $11 = $$03555 + 1 | 0;
   $12 = $$03654 + -1 | 0;
   $16 = ($12 | 0) != 0;
   if ($16 & ($11 & 3 | 0) != 0) {
    $$03555 = $11;
    $$03654 = $12;
   } else {
    $$035$lcssa = $11;
    $$036$lcssa = $12;
    $$lcssa = $16;
    label = 5;
    break;
   }
  }
 } else {
  $$035$lcssa = $0;
  $$036$lcssa = $2;
  $$lcssa = $7;
  label = 5;
 } while (0);
 if ((label | 0) == 5) if ($$lcssa) {
  $$035$lcssa65 = $$035$lcssa;
  $$036$lcssa64 = $$036$lcssa;
  label = 6;
 } else label = 16;
 L8 : do if ((label | 0) == 6) {
  $18 = $1 & 255;
  if ((HEAP8[$$035$lcssa65 >> 0] | 0) == $18 << 24 >> 24) if (!$$036$lcssa64) {
   label = 16;
   break;
  } else {
   $39 = $$035$lcssa65;
   break;
  }
  $20 = Math_imul($3, 16843009) | 0;
  L13 : do if ($$036$lcssa64 >>> 0 > 3) {
   $$046 = $$035$lcssa65;
   $$13745 = $$036$lcssa64;
   while (1) {
    $23 = HEAP32[$$046 >> 2] ^ $20;
    if (($23 & -2139062144 ^ -2139062144) & $23 + -16843009 | 0) {
     $$137$lcssa66 = $$13745;
     $$in = $$046;
     break L13;
    }
    $29 = $$046 + 4 | 0;
    $30 = $$13745 + -4 | 0;
    if ($30 >>> 0 > 3) {
     $$046 = $29;
     $$13745 = $30;
    } else {
     $$0$lcssa = $29;
     $$137$lcssa = $30;
     label = 11;
     break;
    }
   }
  } else {
   $$0$lcssa = $$035$lcssa65;
   $$137$lcssa = $$036$lcssa64;
   label = 11;
  } while (0);
  if ((label | 0) == 11) if (!$$137$lcssa) {
   label = 16;
   break;
  } else {
   $$137$lcssa66 = $$137$lcssa;
   $$in = $$0$lcssa;
  }
  $$140 = $$in;
  $$23839 = $$137$lcssa66;
  while (1) {
   if ((HEAP8[$$140 >> 0] | 0) == $18 << 24 >> 24) {
    $39 = $$140;
    break L8;
   }
   $$23839 = $$23839 + -1 | 0;
   if (!$$23839) {
    label = 16;
    break;
   } else $$140 = $$140 + 1 | 0;
  }
 } while (0);
 if ((label | 0) == 16) $39 = 0;
 return $39 | 0;
}

function __ZN6vision10DoGPyramid5allocEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$026 = 0, $10 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $35 = 0, $36 = 0, $37 = 0, $41 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 if (!(__ZNK6vision25GaussianScaleSpacePyramid4sizeEv($1) | 0)) {
  $10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 26705) | 0, 26748) | 0, 39072) | 0, 53) | 0, 39079) | 0, 26843) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $10 + (HEAP32[(HEAP32[$10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$15 >> 2] | 0) + 28 >> 2] & 127]($15, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($10, $19) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($10) | 0;
  _abort();
 }
 $21 = __ZNK6vision5Image4typeEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm($1, 0, 0) | 0) | 0;
 $23 = __ZNK6vision5Image5widthEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm($1, 0, 0) | 0) | 0;
 $25 = __ZNK6vision5Image6heightEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm($1, 0, 0) | 0) | 0;
 $26 = __ZNK6vision25GaussianScaleSpacePyramid10numOctavesEv($1) | 0;
 $27 = $0 + 12 | 0;
 HEAP32[$27 >> 2] = $26;
 $29 = (__ZNK6vision25GaussianScaleSpacePyramid18numScalesPerOctaveEv($1) | 0) + -1 | 0;
 $30 = $0 + 16 | 0;
 HEAP32[$30 >> 2] = $29;
 __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE6resizeEm($0, Math_imul(HEAP32[$27 >> 2] | 0, $29) | 0);
 $$026 = 0;
 while (1) {
  if ($$026 >>> 0 >= (HEAP32[$27 >> 2] | 0) >>> 0) break;
  $35 = $23 >>> $$026;
  $36 = $25 >>> $$026;
  $$0 = 0;
  while (1) {
   $37 = HEAP32[$30 >> 2] | 0;
   if ($$0 >>> 0 >= $37 >>> 0) break;
   $41 = (Math_imul($37, $$026) | 0) + $$0 | 0;
   __ZN6vision5Image5allocENS_9ImageTypeEmmim((HEAP32[$0 >> 2] | 0) + ($41 << 5) | 0, $21, $35, $36, -1, 1);
   $$0 = $$0 + 1 | 0;
  }
  $$026 = $$026 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function ___embind_register_native_and_builtin_types() {
 __embind_register_void(__ZN10emscripten8internal6TypeIDIvvE3getEv() | 0, 57068);
 __embind_register_bool(__ZN10emscripten8internal6TypeIDIbvE3getEv() | 0, 57073, 1, 1, 0);
 __ZN12_GLOBAL__N_116register_integerIcEEvPKc(57078);
 __ZN12_GLOBAL__N_116register_integerIaEEvPKc(57083);
 __ZN12_GLOBAL__N_116register_integerIhEEvPKc(57095);
 __ZN12_GLOBAL__N_116register_integerIsEEvPKc(57109);
 __ZN12_GLOBAL__N_116register_integerItEEvPKc(57115);
 __ZN12_GLOBAL__N_116register_integerIiEEvPKc(57130);
 __ZN12_GLOBAL__N_116register_integerIjEEvPKc(57134);
 __ZN12_GLOBAL__N_116register_integerIlEEvPKc(57147);
 __ZN12_GLOBAL__N_116register_integerImEEvPKc(57152);
 __ZN12_GLOBAL__N_114register_floatIfEEvPKc(57166);
 __ZN12_GLOBAL__N_114register_floatIdEEvPKc(57172);
 __embind_register_std_string(__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEvE3getEv() | 0, 57179);
 __embind_register_std_string(__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEvE3getEv() | 0, 57191);
 __embind_register_std_wstring(__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEvE3getEv() | 0, 4, 57224);
 __embind_register_emval(__ZN10emscripten8internal6TypeIDINS_3valEvE3getEv() | 0, 57237);
 __ZN12_GLOBAL__N_120register_memory_viewIcEEvPKc(57253);
 __ZN12_GLOBAL__N_120register_memory_viewIaEEvPKc(57283);
 __ZN12_GLOBAL__N_120register_memory_viewIhEEvPKc(57320);
 __ZN12_GLOBAL__N_120register_memory_viewIsEEvPKc(57359);
 __ZN12_GLOBAL__N_120register_memory_viewItEEvPKc(57390);
 __ZN12_GLOBAL__N_120register_memory_viewIiEEvPKc(57430);
 __ZN12_GLOBAL__N_120register_memory_viewIjEEvPKc(57459);
 __ZN12_GLOBAL__N_120register_memory_viewIlEEvPKc(57497);
 __ZN12_GLOBAL__N_120register_memory_viewImEEvPKc(57527);
 __ZN12_GLOBAL__N_120register_memory_viewIaEEvPKc(57566);
 __ZN12_GLOBAL__N_120register_memory_viewIhEEvPKc(57598);
 __ZN12_GLOBAL__N_120register_memory_viewIsEEvPKc(57631);
 __ZN12_GLOBAL__N_120register_memory_viewItEEvPKc(57664);
 __ZN12_GLOBAL__N_120register_memory_viewIiEEvPKc(57698);
 __ZN12_GLOBAL__N_120register_memory_viewIjEEvPKc(57731);
 __ZN12_GLOBAL__N_120register_memory_viewIfEEvPKc(57765);
 __ZN12_GLOBAL__N_120register_memory_viewIdEEvPKc(57796);
 __ZN12_GLOBAL__N_120register_memory_viewIeEEvPKc(57828);
 return;
}

function __ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$1 = 0, $10 = 0, $11 = 0, $14 = 0, $21 = 0, $29 = 0, $34 = 0, $36 = 0, $42 = 0, $43 = 0, $56 = 0, $58 = 0, label = 0;
 $10 = HEAP32[$3 >> 2] | 0;
 $11 = ($10 | 0) == ($2 | 0);
 do if ($11) {
  $14 = (HEAP32[$9 + 96 >> 2] | 0) == ($0 | 0);
  if (!$14 ? (HEAP32[$9 + 100 >> 2] | 0) != ($0 | 0) : 0) {
   label = 5;
   break;
  }
  HEAP32[$3 >> 2] = $2 + 1;
  HEAP8[$2 >> 0] = $14 ? 43 : 45;
  HEAP32[$4 >> 2] = 0;
  $$1 = 0;
 } else label = 5; while (0);
 L6 : do if ((label | 0) == 5) {
  $21 = HEAP8[$6 + 11 >> 0] | 0;
  if (($0 | 0) == ($5 | 0) ? (($21 << 24 >> 24 < 0 ? HEAP32[$6 + 4 >> 2] | 0 : $21 & 255) | 0) != 0 : 0) {
   $29 = HEAP32[$8 >> 2] | 0;
   if (($29 - $7 | 0) >= 160) {
    $$1 = 0;
    break;
   }
   $34 = HEAP32[$4 >> 2] | 0;
   HEAP32[$8 >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $34;
   HEAP32[$4 >> 2] = 0;
   $$1 = 0;
   break;
  }
  $36 = $9 + 104 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $9 + ($$0$i$idx << 2) | 0;
   if (($$0$i$idx | 0) == 26) {
    $$0$lcssa$i = $36;
    break;
   }
   if ((HEAP32[$$0$i$ptr >> 2] | 0) == ($0 | 0)) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $42 = $$0$lcssa$i - $9 | 0;
  $43 = $42 >> 2;
  if (($42 | 0) > 92) $$1 = -1; else {
   switch ($1 | 0) {
   case 10:
   case 8:
    {
     if (($43 | 0) >= ($1 | 0)) {
      $$1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if (($42 | 0) >= 88) {
      if ($11) {
       $$1 = -1;
       break L6;
      }
      if (($10 - $2 | 0) >= 3) {
       $$1 = -1;
       break L6;
      }
      if ((HEAP8[$10 + -1 >> 0] | 0) != 48) {
       $$1 = -1;
       break L6;
      }
      HEAP32[$4 >> 2] = 0;
      $56 = HEAP8[12928 + $43 >> 0] | 0;
      HEAP32[$3 >> 2] = $10 + 1;
      HEAP8[$10 >> 0] = $56;
      $$1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   $58 = HEAP8[12928 + $43 >> 0] | 0;
   HEAP32[$3 >> 2] = $10 + 1;
   HEAP8[$10 >> 0] = $58;
   HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 1;
   $$1 = 0;
  }
 } while (0);
 return $$1 | 0;
}

function _getMarkerInfo($id, $markerIndex) {
 $id = $id | 0;
 $markerIndex = $markerIndex | 0;
 var $1 = 0, $arhandle = 0, $id$addr = 0, $retval$1 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(65260, $id$addr) | 0) {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(65260, $id$addr) | 0) + 216 | 0;
  $1 = HEAP32[$arhandle >> 2] | 0;
  if ((HEAP32[$1 + 44 >> 2] | 0) > ($markerIndex | 0)) {
   $spec$select = ($markerIndex | 0) < 0 ? 64312 : $1 + 48 + ($markerIndex << 8) | 0;
   _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi(2, HEAP32[$spec$select >> 2] | 0, HEAP32[$spec$select + 4 >> 2] | 0, HEAP32[$spec$select + 8 >> 2] | 0, HEAP32[$spec$select + 12 >> 2] | 0, HEAP32[$spec$select + 16 >> 2] | 0, HEAP32[$spec$select + 20 >> 2] | 0, HEAP32[$spec$select + 24 >> 2] | 0, +(+HEAPF64[$spec$select + 32 >> 3]), +(+HEAPF64[$spec$select + 40 >> 3]), +(+HEAPF64[$spec$select + 48 >> 3]), +(+HEAPF64[$spec$select + 56 >> 3]), +(+HEAPF64[$spec$select + 64 >> 3]), +(+HEAPF64[$spec$select + 72 >> 3]), +(+HEAPF64[$spec$select + 80 >> 3]), +(+HEAPF64[$spec$select + 88 >> 3]), +(+HEAPF64[$spec$select + 96 >> 3]), +(+HEAPF64[$spec$select + 104 >> 3]), +(+HEAPF64[$spec$select + 112 >> 3]), +(+HEAPF64[$spec$select + 120 >> 3]), +(+HEAPF64[$spec$select + 128 >> 3]), +(+HEAPF64[$spec$select + 136 >> 3]), +(+HEAPF64[$spec$select + 144 >> 3]), +(+HEAPF64[$spec$select + 152 >> 3]), +(+HEAPF64[$spec$select + 160 >> 3]), +(+HEAPF64[$spec$select + 168 >> 3]), +(+HEAPF64[$spec$select + 176 >> 3]), +(+HEAPF64[$spec$select + 184 >> 3]), +(+HEAPF64[$spec$select + 192 >> 3]), +(+HEAPF64[$spec$select + 200 >> 3]), +(+HEAPF64[$spec$select + 208 >> 3]), +(+HEAPF64[$spec$select + 216 >> 3]), +(+HEAPF64[$spec$select + 224 >> 3]), HEAP32[$spec$select + 240 >> 2] | 0) | 0;
   $retval$1 = 0;
   break;
  } else {
   $retval$1 = HEAP32[4226] | 0;
   break;
  }
 } else $retval$1 = HEAP32[4224] | 0; while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function __ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$1 = 0, $10 = 0, $11 = 0, $14 = 0, $21 = 0, $29 = 0, $34 = 0, $36 = 0, $42 = 0, $55 = 0, $57 = 0, label = 0;
 $10 = HEAP32[$3 >> 2] | 0;
 $11 = ($10 | 0) == ($2 | 0);
 do if ($11) {
  $14 = (HEAP8[$9 + 24 >> 0] | 0) == $0 << 24 >> 24;
  if (!$14 ? (HEAP8[$9 + 25 >> 0] | 0) != $0 << 24 >> 24 : 0) {
   label = 5;
   break;
  }
  HEAP32[$3 >> 2] = $2 + 1;
  HEAP8[$2 >> 0] = $14 ? 43 : 45;
  HEAP32[$4 >> 2] = 0;
  $$1 = 0;
 } else label = 5; while (0);
 L6 : do if ((label | 0) == 5) {
  $21 = HEAP8[$6 + 11 >> 0] | 0;
  if ($0 << 24 >> 24 == $5 << 24 >> 24 ? (($21 << 24 >> 24 < 0 ? HEAP32[$6 + 4 >> 2] | 0 : $21 & 255) | 0) != 0 : 0) {
   $29 = HEAP32[$8 >> 2] | 0;
   if (($29 - $7 | 0) >= 160) {
    $$1 = 0;
    break;
   }
   $34 = HEAP32[$4 >> 2] | 0;
   HEAP32[$8 >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $34;
   HEAP32[$4 >> 2] = 0;
   $$1 = 0;
   break;
  }
  $36 = $9 + 26 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $9 + $$0$i$idx | 0;
   if (($$0$i$idx | 0) == 26) {
    $$0$lcssa$i = $36;
    break;
   }
   if ((HEAP8[$$0$i$ptr >> 0] | 0) == $0 << 24 >> 24) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $42 = $$0$lcssa$i - $9 | 0;
  if (($42 | 0) > 23) $$1 = -1; else {
   switch ($1 | 0) {
   case 10:
   case 8:
    {
     if (($42 | 0) >= ($1 | 0)) {
      $$1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if (($42 | 0) >= 22) {
      if ($11) {
       $$1 = -1;
       break L6;
      }
      if (($10 - $2 | 0) >= 3) {
       $$1 = -1;
       break L6;
      }
      if ((HEAP8[$10 + -1 >> 0] | 0) != 48) {
       $$1 = -1;
       break L6;
      }
      HEAP32[$4 >> 2] = 0;
      $55 = HEAP8[12928 + $42 >> 0] | 0;
      HEAP32[$3 >> 2] = $10 + 1;
      HEAP8[$10 >> 0] = $55;
      $$1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   $57 = HEAP8[12928 + $42 >> 0] | 0;
   HEAP32[$3 >> 2] = $10 + 1;
   HEAP8[$10 >> 0] = $57;
   HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 1;
   $$1 = 0;
  }
 } while (0);
 return $$1 | 0;
}

function __ZN6vision25DoGScaleInvariantDetector6detectEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $15 = 0, $19 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 if ((__ZNK6vision25GaussianScaleSpacePyramid10numOctavesEv($1) | 0) <= 0) {
  $10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 26990) | 0, 26748) | 0, 39072) | 0, 147) | 0, 39079) | 0, 27039) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $10 + (HEAP32[(HEAP32[$10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$15 >> 2] | 0) + 28 >> 2] & 127]($15, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($10, $19) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($10) | 0;
  _abort();
 }
 __ZN6vision11ScopedTimerC2EPKc($2, 27938);
 if (__ZN6vision11ScopedTimercvbEv($2) | 0) __ZN6vision10DoGPyramid7computeEPKNS_25GaussianScaleSpacePyramidE($0 + 32 | 0, $1);
 __ZN6vision11ScopedTimerD2Ev($2);
 __ZN6vision11ScopedTimerC2EPKc($2, 27950);
 if (__ZN6vision11ScopedTimercvbEv($2) | 0) __ZN6vision25DoGScaleInvariantDetector15extractFeaturesEPKNS_25GaussianScaleSpacePyramidEPKNS_10DoGPyramidE($0, $1, $0 + 32 | 0);
 __ZN6vision11ScopedTimerD2Ev($2);
 __ZN6vision11ScopedTimerC2EPKc($2, 27970);
 if (__ZN6vision11ScopedTimercvbEv($2) | 0) __ZN6vision25DoGScaleInvariantDetector21findSubpixelLocationsEPKNS_25GaussianScaleSpacePyramidE($0, $1);
 __ZN6vision11ScopedTimerD2Ev($2);
 __ZN6vision11ScopedTimerC2EPKc($2, 27979);
 if (__ZN6vision11ScopedTimercvbEv($2) | 0) __ZN6vision25DoGScaleInvariantDetector13pruneFeaturesEv($0);
 __ZN6vision11ScopedTimerD2Ev($2);
 __ZN6vision11ScopedTimerC2EPKc($2, 27993);
 if (__ZN6vision11ScopedTimercvbEv($2) | 0) __ZN6vision25DoGScaleInvariantDetector23findFeatureOrientationsEPKNS_25GaussianScaleSpacePyramidE($0, $1);
 __ZN6vision11ScopedTimerD2Ev($2);
 STACKTOP = sp;
 return;
}

function _decode_mcu_DC_refine($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$021 = 0, $$035$i = 0, $16 = 0, $19 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $4 = 0, $54 = 0, $56 = 0, $57 = 0, $60 = 0, $61 = 0, $67 = 0, $7 = 0, $8 = 0, dest = 0, label = 0, stop = 0;
 $3 = HEAP32[$0 + 468 >> 2] | 0;
 $4 = $0 + 280 | 0;
 if (HEAP32[$4 >> 2] | 0) {
  $7 = $3 + 56 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  if (!$8) {
   if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 + 464 >> 2] | 0) + 8 >> 2] & 127]($0) | 0)) {
    $16 = HEAP32[$0 >> 2] | 0;
    HEAP32[$16 + 20 >> 2] = 25;
    FUNCTION_TABLE_vi[HEAP32[$16 >> 2] & 255]($0);
   }
   $19 = $0 + 340 | 0;
   if ((HEAP32[$19 >> 2] | 0) > 0) {
    $22 = $0 + 224 | 0;
    $23 = $0 + 412 | 0;
    $24 = $0 + 436 | 0;
    $25 = $0 + 420 | 0;
    $$035$i = 0;
    do {
     $27 = HEAP32[$0 + 344 + ($$035$i << 2) >> 2] | 0;
     if (HEAP32[$22 >> 2] | 0) if (!(HEAP32[$23 >> 2] | 0)) {
      if (!(HEAP32[$25 >> 2] | 0)) label = 10;
     } else label = 13; else label = 10;
     do if ((label | 0) == 10) {
      label = 0;
      dest = HEAP32[$3 + 60 + (HEAP32[$27 + 20 >> 2] << 2) >> 2] | 0;
      stop = dest + 64 | 0;
      do {
       HEAP8[dest >> 0] = 0;
       dest = dest + 1 | 0;
      } while ((dest | 0) < (stop | 0));
      HEAP32[$3 + 24 + ($$035$i << 2) >> 2] = 0;
      HEAP32[$3 + 40 + ($$035$i << 2) >> 2] = 0;
      if (!(HEAP32[$22 >> 2] | 0)) if (!(HEAP32[$24 >> 2] | 0)) break; else {
       label = 13;
       break;
      } else if (!(HEAP32[$23 >> 2] | 0)) break; else {
       label = 13;
       break;
      }
     } while (0);
     if ((label | 0) == 13) {
      label = 0;
      _memset(HEAP32[$3 + 124 + (HEAP32[$27 + 24 >> 2] << 2) >> 2] | 0, 0, 256) | 0;
     }
     $$035$i = $$035$i + 1 | 0;
    } while (($$035$i | 0) < (HEAP32[$19 >> 2] | 0));
   }
   HEAP32[$3 + 12 >> 2] = 0;
   HEAP32[$3 + 16 >> 2] = 0;
   HEAP32[$3 + 20 >> 2] = -16;
   $54 = HEAP32[$4 >> 2] | 0;
   HEAP32[$7 >> 2] = $54;
   $56 = $54;
  } else $56 = $8;
  HEAP32[$7 >> 2] = $56 + -1;
 }
 $57 = $3 + 188 | 0;
 $60 = 1 << HEAP32[$0 + 424 >> 2];
 $61 = $0 + 368 | 0;
 if ((HEAP32[$61 >> 2] | 0) <= 0) return 1;
 $$021 = 0;
 do {
  if (_arith_decode($0, $57) | 0) {
   $67 = HEAP32[$1 + ($$021 << 2) >> 2] | 0;
   HEAP16[$67 >> 1] = $60 | (HEAPU16[$67 >> 1] | 0);
  }
  $$021 = $$021 + 1 | 0;
 } while (($$021 | 0) < (HEAP32[$61 >> 2] | 0));
 return 1;
}

function __ZNK6vision25GaussianScaleSpacePyramid3getEmm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $12 = 0, $17 = 0, $21 = 0, $23 = 0, $3 = 0, $30 = 0, $35 = 0, $39 = 0, $41 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if ((HEAP32[$0 + 16 >> 2] | 0) >>> 0 <= $1 >>> 0) {
  $12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 38089) | 0, 37972) | 0, 39072) | 0, 218) | 0, 39079) | 0, 26868) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
  $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 127]($17, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  _abort();
 }
 $23 = HEAP32[$0 + 20 >> 2] | 0;
 if ($23 >>> 0 > $2 >>> 0) {
  $41 = (Math_imul($23, $1) | 0) + $2 | 0;
  STACKTOP = sp;
  return (HEAP32[$0 + 4 >> 2] | 0) + ($41 << 5) | 0;
 } else {
  $30 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 38233) | 0, 37972) | 0, 39072) | 0, 219) | 0, 39079) | 0, 26888) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $30 + (HEAP32[(HEAP32[$30 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $35 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
  $39 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$35 >> 2] | 0) + 28 >> 2] & 127]($35, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($30, $39) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($30) | 0;
  _abort();
 }
 return 0;
}

function _arParamChangeSize($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0103 = 0, $12 = 0.0, $27 = 0, $7 = 0.0, label = 0;
 $7 = +($1 | 0) / +(HEAP32[$0 >> 2] | 0);
 $12 = +($2 | 0) / +(HEAP32[$0 + 4 >> 2] | 0);
 HEAP32[$3 >> 2] = $1;
 HEAP32[$3 + 4 >> 2] = $2;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 4) break;
  HEAPF64[$3 + 8 + ($$0 << 3) >> 3] = $7 * +HEAPF64[$0 + 8 + ($$0 << 3) >> 3];
  HEAPF64[$3 + 40 + ($$0 << 3) >> 3] = $12 * +HEAPF64[$0 + 40 + ($$0 << 3) >> 3];
  HEAPF64[$3 + 72 + ($$0 << 3) >> 3] = +HEAPF64[$0 + 72 + ($$0 << 3) >> 3];
  $$0 = $$0 + 1 | 0;
 }
 $27 = HEAP32[$0 + 176 >> 2] | 0;
 switch ($27 | 0) {
 case 4:
  {
   HEAPF64[$3 + 104 >> 3] = +HEAPF64[$0 + 104 >> 3];
   HEAPF64[$3 + 112 >> 3] = +HEAPF64[$0 + 112 >> 3];
   HEAPF64[$3 + 120 >> 3] = +HEAPF64[$0 + 120 >> 3];
   HEAPF64[$3 + 128 >> 3] = +HEAPF64[$0 + 128 >> 3];
   HEAPF64[$3 + 136 >> 3] = $7 * +HEAPF64[$0 + 136 >> 3];
   HEAPF64[$3 + 144 >> 3] = $12 * +HEAPF64[$0 + 144 >> 3];
   HEAPF64[$3 + 152 >> 3] = $7 * +HEAPF64[$0 + 152 >> 3];
   HEAPF64[$3 + 160 >> 3] = $12 * +HEAPF64[$0 + 160 >> 3];
   HEAPF64[$3 + 168 >> 3] = +HEAPF64[$0 + 168 >> 3];
   label = 9;
   break;
  }
 case 3:
  {
   HEAPF64[$3 + 104 >> 3] = $7 * +HEAPF64[$0 + 104 >> 3];
   HEAPF64[$3 + 112 >> 3] = $12 * +HEAPF64[$0 + 112 >> 3];
   HEAPF64[$3 + 120 >> 3] = +HEAPF64[$0 + 120 >> 3];
   HEAPF64[$3 + 128 >> 3] = +HEAPF64[$0 + 128 >> 3];
   HEAPF64[$3 + 136 >> 3] = +HEAPF64[$0 + 136 >> 3] / ($7 * $12);
   HEAPF64[$3 + 144 >> 3] = +HEAPF64[$0 + 144 >> 3] / ($12 * ($7 * $7 * $12));
   label = 9;
   break;
  }
 case 2:
  {
   HEAPF64[$3 + 104 >> 3] = $7 * +HEAPF64[$0 + 104 >> 3];
   HEAPF64[$3 + 112 >> 3] = $12 * +HEAPF64[$0 + 112 >> 3];
   HEAPF64[$3 + 120 >> 3] = +HEAPF64[$0 + 120 >> 3];
   HEAPF64[$3 + 128 >> 3] = +HEAPF64[$0 + 128 >> 3] / ($7 * $12);
   HEAPF64[$3 + 136 >> 3] = +HEAPF64[$0 + 136 >> 3] / ($12 * ($7 * $7 * $12));
   label = 9;
   break;
  }
 case 1:
  {
   HEAPF64[$3 + 104 >> 3] = $7 * +HEAPF64[$0 + 104 >> 3];
   HEAPF64[$3 + 112 >> 3] = $12 * +HEAPF64[$0 + 112 >> 3];
   HEAPF64[$3 + 120 >> 3] = +HEAPF64[$0 + 120 >> 3];
   HEAPF64[$3 + 128 >> 3] = +HEAPF64[$0 + 128 >> 3] / ($7 * $12);
   label = 9;
   break;
  }
 default:
  $$0103 = -1;
 }
 if ((label | 0) == 9) {
  HEAP32[$3 + 176 >> 2] = $27;
  $$0103 = 0;
 }
 return $$0103 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp;
 $5 = sp + 16 | 0;
 $6 = sp + 12 | 0;
 $7 = sp + 4 | 0;
 $8 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[59189] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[59190] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[59191] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[59192] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[59193] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[59194] | 0;
 $10 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 59195, 1, HEAP32[$10 >> 2] | 0);
 $$lobit = (HEAP32[$10 >> 2] | 0) >>> 9 & 1;
 $14 = $$lobit + 13 | 0;
 $15 = _llvm_stacksave() | 0;
 $$alloca_mul = $14;
 $16 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $17 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $19 = $16 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($16, $14, $17, $5, $$byval_copy) | 0) | 0;
 $20 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($16, $19, $2) | 0;
 $$alloca_mul6 = ($$lobit << 1 | 24) + -1 << 2;
 $24 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($16, $20, $19, $24, $6, $7, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 $26 = HEAP32[$6 >> 2] | 0;
 $27 = HEAP32[$7 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $28 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $24, $26, $27, $2, $3) | 0;
 _llvm_stackrestore($15 | 0);
 STACKTOP = sp;
 return $28 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp;
 $5 = sp + 16 | 0;
 $6 = sp + 12 | 0;
 $7 = sp + 4 | 0;
 $8 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[59189] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[59190] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[59191] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[59192] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[59193] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[59194] | 0;
 $10 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 59195, 1, HEAP32[$10 >> 2] | 0);
 $$lobit = (HEAP32[$10 >> 2] | 0) >>> 9 & 1;
 $14 = $$lobit + 13 | 0;
 $15 = _llvm_stacksave() | 0;
 $$alloca_mul = $14;
 $16 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $17 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $19 = $16 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($16, $14, $17, $5, $$byval_copy) | 0) | 0;
 $20 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($16, $19, $2) | 0;
 $$alloca_mul6 = ($$lobit << 1 | 24) + -1 | 0;
 $24 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($16, $20, $19, $24, $6, $7, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 $26 = HEAP32[$6 >> 2] | 0;
 $27 = HEAP32[$7 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $28 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $24, $26, $27, $2, $3) | 0;
 _llvm_stackrestore($15 | 0);
 STACKTOP = sp;
 return $28 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp;
 $5 = sp + 16 | 0;
 $6 = sp + 12 | 0;
 $7 = sp + 4 | 0;
 $8 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[59189] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[59190] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[59191] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[59192] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[59193] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[59194] | 0;
 $10 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 59195, 0, HEAP32[$10 >> 2] | 0);
 $$lobit = (HEAP32[$10 >> 2] | 0) >>> 9 & 1;
 $14 = $$lobit | 12;
 $15 = _llvm_stacksave() | 0;
 $$alloca_mul = $14;
 $16 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $17 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $19 = $16 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($16, $14, $17, $5, $$byval_copy) | 0) | 0;
 $20 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($16, $19, $2) | 0;
 $$alloca_mul6 = ($$lobit << 1 | 21) << 2;
 $23 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($16, $20, $19, $23, $6, $7, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 $25 = HEAP32[$6 >> 2] | 0;
 $26 = HEAP32[$7 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $27 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $23, $25, $26, $2, $3) | 0;
 _llvm_stackrestore($15 | 0);
 STACKTOP = sp;
 return $27 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp;
 $5 = sp + 16 | 0;
 $6 = sp + 12 | 0;
 $7 = sp + 4 | 0;
 $8 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[59189] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[59190] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[59191] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[59192] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[59193] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[59194] | 0;
 $10 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 59195, 0, HEAP32[$10 >> 2] | 0);
 $$lobit = (HEAP32[$10 >> 2] | 0) >>> 9 & 1;
 $14 = $$lobit | 12;
 $15 = _llvm_stacksave() | 0;
 $$alloca_mul = $14;
 $16 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $17 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $19 = $16 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($16, $14, $17, $5, $$byval_copy) | 0) | 0;
 $20 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($16, $19, $2) | 0;
 $$alloca_mul6 = $$lobit << 1 | 21;
 $23 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($16, $20, $19, $23, $6, $7, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 $25 = HEAP32[$6 >> 2] | 0;
 $26 = HEAP32[$7 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $27 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $23, $25, $26, $2, $3) | 0;
 _llvm_stackrestore($15 | 0);
 STACKTOP = sp;
 return $27 | 0;
}

function __ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 var $10 = 0, $15 = 0, $19 = 0, $29 = 0, $3 = 0, $34 = 0, $38 = 0, $44 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if (!($2 >= 0.0)) {
  $10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 38176) | 0, 37972) | 0, 39072) | 0, 232) | 0, 39079) | 0, 38210) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $10 + (HEAP32[(HEAP32[$10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
  $19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$15 >> 2] | 0) + 28 >> 2] & 127]($15, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($10, $19) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($10) | 0;
  _abort();
 }
 if (+(HEAP32[$0 + 20 >> 2] | 0) > $2) {
  $44 = +Math_pow(+(+HEAPF32[$0 + 24 >> 2]), +$2) * +(1 << $1 | 0);
  STACKTOP = sp;
  return +$44;
 } else {
  $29 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 38233) | 0, 37972) | 0, 39072) | 0, 233) | 0, 39079) | 0, 38284) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $29 + (HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $34 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 66512) | 0;
  $38 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$34 >> 2] | 0) + 28 >> 2] & 127]($34, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($29, $38) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($29) | 0;
  _abort();
 }
 return +(0.0);
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseClassEnumTypeEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$byval_copy2 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 32 | 0;
 $1 = sp;
 $2 = sp + 24 | 0;
 $3 = sp + 16 | 0;
 $4 = sp + 8 | 0;
 __ZN12_GLOBAL__N_110StringViewC2Ev($1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 55028);
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 do if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy2) | 0)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 55038);
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy2) | 0) {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($1, 55041);
   break;
  }
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 55047);
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy2) | 0) __ZN12_GLOBAL__N_110StringViewC2EPKc($1, 55050);
 } else __ZN12_GLOBAL__N_110StringViewC2EPKc($1, 55031); while (0);
 $9 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0, 0) | 0;
 HEAP32[$$byval_copy2 >> 2] = $9;
 if ($9) if (__ZNK12_GLOBAL__N_110StringView5emptyEv($1) | 0) $$0 = $9; else $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_22ElaboratedTypeSpefTypeEJRNS_10StringViewERPNS0_4NodeEEEESB_DpOT0_($0, $1, $$byval_copy2) | 0; else $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function _ar2GenImageLayer2($0, $1) {
 $0 = $0 | 0;
 $1 = +$1;
 var $$0 = 0, $$087 = 0, $$089 = 0, $$090 = 0, $$091 = 0, $$092 = 0, $$095 = 0, $$096 = 0, $$1 = 0, $$188 = 0, $$197 = 0, $10 = 0, $15 = 0, $16 = 0, $2 = 0, $22 = 0, $26 = 0.0, $29 = 0, $30 = 0, $34 = 0, $35 = 0, $39 = 0.0, $42 = 0, $43 = 0, $47 = 0, $48 = 0, $59 = 0, $6 = 0, $7 = 0.0, $9 = 0, $spec$select = 0, $spec$select98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = $0 + 4 | 0;
 $6 = $0 + 12 | 0;
 $7 = +HEAPF32[$6 >> 2];
 $9 = _lroundf(+(HEAP32[$2 >> 2] | 0) * $1 / $7) | 0;
 $10 = $0 + 8 | 0;
 $15 = _lroundf(+(HEAP32[$10 >> 2] | 0) * $1 / $7) | 0;
 $16 = _malloc(16) | 0;
 if (!$16) {
  _arLog(0, 3, 45930, sp);
  _exit(1);
 }
 HEAP32[$16 + 4 >> 2] = $9;
 HEAP32[$16 + 8 >> 2] = $15;
 HEAPF32[$16 + 12 >> 2] = $1;
 $22 = _malloc(Math_imul($15, $9) | 0) | 0;
 HEAP32[$16 >> 2] = $22;
 if (!$22) {
  _arLog(0, 3, 45930, sp + 8 | 0);
  _exit(1);
 }
 $$091 = 0;
 $$096 = $22;
 while (1) {
  if (($$091 | 0) >= ($15 | 0)) break;
  $26 = +HEAPF32[$6 >> 2];
  $29 = _lroundf($26 * +($$091 | 0) / $1) | 0;
  $30 = $$091 + 1 | 0;
  $34 = _lroundf($26 * +($30 | 0) / $1) | 0;
  $35 = HEAP32[$10 >> 2] | 0;
  $spec$select = ($34 | 0) > ($35 | 0) ? $35 : $34;
  $$092 = 0;
  $$197 = $$096;
  while (1) {
   if (($$092 | 0) >= ($9 | 0)) break;
   $39 = +HEAPF32[$6 >> 2];
   $42 = _lroundf($39 * +($$092 | 0) / $1) | 0;
   $43 = $$092 + 1 | 0;
   $47 = _lroundf($39 * +($43 | 0) / $1) | 0;
   $48 = HEAP32[$2 >> 2] | 0;
   $spec$select98 = ($47 | 0) > ($48 | 0) ? $48 : $47;
   $$0 = 0;
   $$087 = 0;
   $$089 = $29;
   while (1) {
    if (($$089 | 0) >= ($spec$select | 0)) break;
    $$090 = $42;
    $$095 = (HEAP32[$0 >> 2] | 0) + ((Math_imul($$089, $48) | 0) + $42) | 0;
    $$1 = $$0;
    $$188 = $$087;
    while (1) {
     if (($$090 | 0) >= ($spec$select98 | 0)) break;
     $59 = $$1 + (HEAPU8[$$095 >> 0] | 0) | 0;
     $$090 = $$090 + 1 | 0;
     $$095 = $$095 + 1 | 0;
     $$1 = $59;
     $$188 = $$188 + 1 | 0;
    }
    $$0 = $$1;
    $$087 = $$188;
    $$089 = $$089 + 1 | 0;
   }
   HEAP8[$$197 >> 0] = ($$0 | 0) / ($$087 | 0) | 0;
   $$092 = $43;
   $$197 = $$197 + 1 | 0;
  }
  $$091 = $30;
  $$096 = $$197;
 }
 STACKTOP = sp;
 return $16 | 0;
}

function _free_pool($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$07181 = 0, $$07182 = 0, $$07286 = 0, $$07287 = 0, $$in7477 = 0, $$in7576 = 0, $11 = 0, $13 = 0, $21 = 0, $23 = 0, $3 = 0, $31 = 0, $32 = 0, $34 = 0, $41 = 0, $45 = 0, $46 = 0, $48 = 0, $5 = 0, $55 = 0, $$in7477$looptemp = 0, $$in7576$looptemp = 0;
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 if ($1 >>> 0 <= 1) {
  if (($1 | 0) == 1) {
   $11 = $3 + 68 | 0;
   $$07286 = HEAP32[$11 >> 2] | 0;
   if ($$07286 | 0) {
    $$07287 = $$07286;
    do {
     $13 = $$07287 + 40 | 0;
     if (HEAP32[$13 >> 2] | 0) {
      HEAP32[$13 >> 2] = 0;
      FUNCTION_TABLE_vii[HEAP32[$$07287 + 56 >> 2] & 255]($0, $$07287 + 48 | 0);
     }
     $$07287 = HEAP32[$$07287 + 44 >> 2] | 0;
    } while (($$07287 | 0) != 0);
   }
   HEAP32[$11 >> 2] = 0;
   $21 = $3 + 72 | 0;
   $$07181 = HEAP32[$21 >> 2] | 0;
   if ($$07181 | 0) {
    $$07182 = $$07181;
    do {
     $23 = $$07182 + 40 | 0;
     if (HEAP32[$23 >> 2] | 0) {
      HEAP32[$23 >> 2] = 0;
      FUNCTION_TABLE_vii[HEAP32[$$07182 + 56 >> 2] & 255]($0, $$07182 + 48 | 0);
     }
     $$07182 = HEAP32[$$07182 + 44 >> 2] | 0;
    } while (($$07182 | 0) != 0);
   }
   HEAP32[$21 >> 2] = 0;
  }
 } else {
  $5 = HEAP32[$0 >> 2] | 0;
  HEAP32[$5 + 20 >> 2] = 15;
  HEAP32[$5 + 24 >> 2] = $1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $31 = $3 + 60 + ($1 << 2) | 0;
 $32 = HEAP32[$31 >> 2] | 0;
 HEAP32[$31 >> 2] = 0;
 if ($32 | 0) {
  $34 = $3 + 76 | 0;
  $$in7477 = $32;
  do {
   $$in7477$looptemp = $$in7477;
   $$in7477 = HEAP32[$$in7477 >> 2] | 0;
   $41 = (HEAP32[$$in7477$looptemp + 4 >> 2] | 0) + 16 + (HEAP32[$$in7477$looptemp + 8 >> 2] | 0) | 0;
   _jpeg_free_large($0, $$in7477$looptemp, $41);
   HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) - $41;
  } while (($$in7477 | 0) != 0);
 }
 $45 = $3 + 52 + ($1 << 2) | 0;
 $46 = HEAP32[$45 >> 2] | 0;
 HEAP32[$45 >> 2] = 0;
 if (!$46) return;
 $48 = $3 + 76 | 0;
 $$in7576 = $46;
 do {
  $$in7576$looptemp = $$in7576;
  $$in7576 = HEAP32[$$in7576 >> 2] | 0;
  $55 = (HEAP32[$$in7576$looptemp + 4 >> 2] | 0) + 16 + (HEAP32[$$in7576$looptemp + 8 >> 2] | 0) | 0;
  _jpeg_free_small($0, $$in7576$looptemp, $55);
  HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) - $55;
 } while (($$in7576 | 0) != 0);
 return;
}

function __ZNK6vision5Timer19duration_in_secondsEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $14 = 0, $18 = 0, $2 = 0.0, $20 = 0.0, $27 = 0, $32 = 0, $36 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 $2 = +HEAPF64[$0 >> 3];
 if (!($2 >= 0.0)) {
  $9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 38960) | 0, 38999) | 0, 39072) | 0, 80) | 0, 39079) | 0, 39082) | 0;
  __ZNKSt3__28ios_base6getlocEv($1, $9 + (HEAP32[(HEAP32[$9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $14 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 66512) | 0;
  $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$14 >> 2] | 0) + 28 >> 2] & 127]($14, 10) | 0;
  __ZNSt3__26localeD2Ev($1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($9, $18) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($9) | 0;
  _abort();
 }
 $20 = +HEAPF64[$0 + 8 >> 3];
 if (!($20 >= 0.0)) {
  $27 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 39109) | 0, 38999) | 0, 39072) | 0, 81) | 0, 39079) | 0, 39147) | 0;
  __ZNKSt3__28ios_base6getlocEv($1, $27 + (HEAP32[(HEAP32[$27 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $32 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 66512) | 0;
  $36 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 28 >> 2] & 127]($32, 10) | 0;
  __ZNSt3__26localeD2Ev($1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($27, $36) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($27) | 0;
  _abort();
 } else {
  STACKTOP = sp;
  return +($20 - $2);
 }
 return +(0.0);
}

function _get_cpara($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$1 = 0, $11 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $51 = 0, $6 = 0, $64 = 0, $65 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0;
 $3 = _arMatrixAlloc(8, 8) | 0;
 $4 = _arMatrixAlloc(8, 1) | 0;
 $5 = _arMatrixAlloc(8, 1) | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 4) break;
  $6 = $0 + ($$0 << 4) | 0;
  $8 = HEAP32[$3 >> 2] | 0;
  $9 = $$0 << 4;
  HEAPF64[$8 + ($9 << 3) >> 3] = +HEAPF64[$6 >> 3];
  $11 = $0 + ($$0 << 4) + 8 | 0;
  HEAPF64[$8 + (($9 | 1) << 3) >> 3] = +HEAPF64[$11 >> 3];
  HEAPF64[$8 + (($9 | 2) << 3) >> 3] = 1.0;
  HEAPF64[$8 + (($9 | 3) << 3) >> 3] = 0.0;
  HEAPF64[$8 + (($9 | 4) << 3) >> 3] = 0.0;
  HEAPF64[$8 + (($9 | 5) << 3) >> 3] = 0.0;
  $24 = $1 + ($$0 << 4) | 0;
  HEAPF64[$8 + (($9 | 6) << 3) >> 3] = -(+HEAPF64[$6 >> 3] * +HEAPF64[$24 >> 3]);
  HEAPF64[$8 + (($9 | 7) << 3) >> 3] = -(+HEAPF64[$11 >> 3] * +HEAPF64[$24 >> 3]);
  HEAPF64[$8 + (($9 | 8) << 3) >> 3] = 0.0;
  HEAPF64[$8 + (($9 | 9) << 3) >> 3] = 0.0;
  HEAPF64[$8 + (($9 | 10) << 3) >> 3] = 0.0;
  HEAPF64[$8 + (($9 | 11) << 3) >> 3] = +HEAPF64[$6 >> 3];
  HEAPF64[$8 + (($9 | 12) << 3) >> 3] = +HEAPF64[$11 >> 3];
  HEAPF64[$8 + (($9 | 13) << 3) >> 3] = 1.0;
  $51 = $1 + ($$0 << 4) + 8 | 0;
  HEAPF64[$8 + (($9 | 14) << 3) >> 3] = -(+HEAPF64[$6 >> 3] * +HEAPF64[$51 >> 3]);
  HEAPF64[$8 + (($9 | 15) << 3) >> 3] = -(+HEAPF64[$11 >> 3] * +HEAPF64[$51 >> 3]);
  $64 = HEAP32[$4 >> 2] | 0;
  $65 = $$0 << 1;
  HEAPF64[$64 + ($65 << 3) >> 3] = +HEAPF64[$24 >> 3];
  HEAPF64[$64 + (($65 | 1) << 3) >> 3] = +HEAPF64[$51 >> 3];
  $$0 = $$0 + 1 | 0;
 }
 _arMatrixSelfInv($3) | 0;
 _arMatrixMul($5, $3, $4) | 0;
 $71 = HEAP32[$5 >> 2] | 0;
 $$1 = 0;
 while (1) {
  if (($$1 | 0) == 2) break;
  $72 = $$1 * 3 | 0;
  HEAPF64[$2 + ($$1 * 24 | 0) >> 3] = +HEAPF64[$71 + ($72 << 3) >> 3];
  HEAPF64[$2 + ($$1 * 24 | 0) + 8 >> 3] = +HEAPF64[$71 + ($72 + 1 << 3) >> 3];
  HEAPF64[$2 + ($$1 * 24 | 0) + 16 >> 3] = +HEAPF64[$71 + ($72 + 2 << 3) >> 3];
  $$1 = $$1 + 1 | 0;
 }
 HEAPF64[$2 + 48 >> 3] = +HEAPF64[$71 + 48 >> 3];
 HEAPF64[$2 + 56 >> 3] = +HEAPF64[$71 + 56 >> 3];
 HEAPF64[$2 + 64 >> 3] = 1.0;
 _arMatrixFree($3) | 0;
 _arMatrixFree($4) | 0;
 _arMatrixFree($5) | 0;
 return;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $15 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $28 = 0, $29 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 24 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 20 | 0;
 $10 = $6;
 HEAP32[$10 >> 2] = 37;
 HEAP32[$10 + 4 >> 2] = 0;
 $15 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 59186, 1, HEAP32[$15 >> 2] | 0);
 $$lobit = (HEAP32[$15 >> 2] | 0) >>> 9 & 1;
 $19 = $$lobit + 23 | 0;
 $20 = _llvm_stacksave() | 0;
 $$alloca_mul = $19;
 $21 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $22 = __ZNSt3__26__clocEv() | 0;
 $23 = $$byval_copy;
 HEAP32[$23 >> 2] = $4;
 HEAP32[$23 + 4 >> 2] = $5;
 $28 = $21 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($21, $19, $22, $6, $$byval_copy) | 0) | 0;
 $29 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($21, $28, $2) | 0;
 $$alloca_mul6 = ($$lobit << 1 | 44) + -1 << 2;
 $33 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($21, $29, $28, $33, $7, $8, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$9 >> 2] = HEAP32[$1 >> 2];
 $35 = HEAP32[$7 >> 2] | 0;
 $36 = HEAP32[$8 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$9 >> 2];
 $37 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $33, $35, $36, $2, $3) | 0;
 _llvm_stackrestore($20 | 0);
 STACKTOP = sp;
 return $37 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $15 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $28 = 0, $29 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 24 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 20 | 0;
 $10 = $6;
 HEAP32[$10 >> 2] = 37;
 HEAP32[$10 + 4 >> 2] = 0;
 $15 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 59186, 1, HEAP32[$15 >> 2] | 0);
 $$lobit = (HEAP32[$15 >> 2] | 0) >>> 9 & 1;
 $19 = $$lobit + 23 | 0;
 $20 = _llvm_stacksave() | 0;
 $$alloca_mul = $19;
 $21 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $22 = __ZNSt3__26__clocEv() | 0;
 $23 = $$byval_copy;
 HEAP32[$23 >> 2] = $4;
 HEAP32[$23 + 4 >> 2] = $5;
 $28 = $21 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($21, $19, $22, $6, $$byval_copy) | 0) | 0;
 $29 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($21, $28, $2) | 0;
 $$alloca_mul6 = ($$lobit << 1 | 44) + -1 | 0;
 $33 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($21, $29, $28, $33, $7, $8, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$9 >> 2] = HEAP32[$1 >> 2];
 $35 = HEAP32[$7 >> 2] | 0;
 $36 = HEAP32[$8 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$9 >> 2];
 $37 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $33, $35, $36, $2, $3) | 0;
 _llvm_stackrestore($20 | 0);
 STACKTOP = sp;
 return $37 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$034 = 0, $15 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $35 = 0, $36 = 0, $4 = 0, $44 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $scevgep38 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = $1;
 $4 = sp;
 $5 = $0 + 11 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) {
  $35 = HEAP32[$0 + 4 >> 2] | 0;
  $36 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $35 = $6 & 255;
  $36 = 10;
 }
 $15 = $2 - $3 | 0;
 do if ($15 | 0) {
  if ($7) {
   $22 = HEAP32[$0 >> 2] | 0;
   $23 = HEAP32[$0 + 4 >> 2] | 0;
  } else {
   $22 = $0;
   $23 = $6 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_($1, $22, $22 + $23 | 0) | 0) {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($4, $1, $2);
   $26 = HEAP8[$4 + 11 >> 0] | 0;
   $27 = $26 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm($0, $27 ? HEAP32[$4 >> 2] | 0 : $4, $27 ? HEAP32[$4 + 4 >> 2] | 0 : $26 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
   break;
  }
  if (($36 - $35 | 0) >>> 0 < $15 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm($0, $36, $35 + $15 - $36 | 0, $35, $35, 0, 0);
  if ((HEAP8[$5 >> 0] | 0) < 0) $44 = HEAP32[$0 >> 2] | 0; else $44 = $0;
  $scevgep38 = $2 + ($35 - $3) | 0;
  $$0 = $44 + $35 | 0;
  $$034 = $1;
  while (1) {
   if (($$034 | 0) == ($2 | 0)) break;
   __ZNSt3__211char_traitsIcE6assignERcRKc($$0, $$034);
   $$0 = $$0 + 1 | 0;
   $$034 = $$034 + 1 | 0;
  }
  HEAP8[$4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($44 + $scevgep38 | 0, $4);
  $49 = $35 + $15 | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $49;
   break;
  } else {
   HEAP8[$5 >> 0] = $49;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $10 = 0, $15 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $29 = 0, $30 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 24 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 20 | 0;
 $10 = $6;
 HEAP32[$10 >> 2] = 37;
 HEAP32[$10 + 4 >> 2] = 0;
 $15 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 59186, 0, HEAP32[$15 >> 2] | 0);
 $19 = (HEAP32[$15 >> 2] | 0) >>> 9 & 1 | 22;
 $20 = $19 + 1 | 0;
 $21 = _llvm_stacksave() | 0;
 $$alloca_mul = $20;
 $22 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $23 = __ZNSt3__26__clocEv() | 0;
 $24 = $$byval_copy;
 HEAP32[$24 >> 2] = $4;
 HEAP32[$24 + 4 >> 2] = $5;
 $29 = $22 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($22, $20, $23, $6, $$byval_copy) | 0) | 0;
 $30 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($22, $29, $2) | 0;
 $$alloca_mul6 = ($19 << 1) + -1 << 2;
 $33 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($22, $30, $29, $33, $7, $8, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$9 >> 2] = HEAP32[$1 >> 2];
 $35 = HEAP32[$7 >> 2] | 0;
 $36 = HEAP32[$8 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$9 >> 2];
 $37 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $33, $35, $36, $2, $3) | 0;
 _llvm_stackrestore($21 | 0);
 STACKTOP = sp;
 return $37 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $10 = 0, $15 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $29 = 0, $30 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 24 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 20 | 0;
 $10 = $6;
 HEAP32[$10 >> 2] = 37;
 HEAP32[$10 + 4 >> 2] = 0;
 $15 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 59186, 0, HEAP32[$15 >> 2] | 0);
 $19 = (HEAP32[$15 >> 2] | 0) >>> 9 & 1 | 22;
 $20 = $19 + 1 | 0;
 $21 = _llvm_stacksave() | 0;
 $$alloca_mul = $20;
 $22 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $23 = __ZNSt3__26__clocEv() | 0;
 $24 = $$byval_copy;
 HEAP32[$24 >> 2] = $4;
 HEAP32[$24 + 4 >> 2] = $5;
 $29 = $22 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($22, $20, $23, $6, $$byval_copy) | 0) | 0;
 $30 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($22, $29, $2) | 0;
 $$alloca_mul6 = ($19 << 1) + -1 | 0;
 $33 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($22, $30, $29, $33, $7, $8, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$9 >> 2] = HEAP32[$1 >> 2];
 $35 = HEAP32[$7 >> 2] | 0;
 $36 = HEAP32[$8 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$9 >> 2];
 $37 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $33, $35, $36, $2, $3) | 0;
 _llvm_stackrestore($21 | 0);
 STACKTOP = sp;
 return $37 | 0;
}

function _PCA($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$075 = 0, $$077 = 0, $$078 = 0, $$080 = 0, $$1 = 0, $$176 = 0, $$179 = 0, $$181 = 0, $$2 = 0, $$3 = 0, $20 = 0, $27 = 0, $4 = 0, $6 = 0, $8 = 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 $6 = HEAP32[$0 + 8 >> 2] | 0;
 $8 = ($6 | 0) < ($4 | 0) ? $6 : $4;
 L1 : do if (((!(($4 | 0) < 2 | ($6 | 0) < 2) ? (HEAP32[$1 + 8 >> 2] | 0) == ($6 | 0) : 0) ? (HEAP32[$1 + 4 >> 2] | 0) == ($8 | 0) : 0) ? (HEAP32[$2 + 4 >> 2] | 0) == ($8 | 0) : 0) {
  $20 = _arMatrixAlloc($8, $8) | 0;
  if ((HEAP32[$20 + 4 >> 2] | 0) == ($8 | 0) ? (HEAP32[$20 + 8 >> 2] | 0) == ($8 | 0) : 0) {
   $27 = ($4 | 0) < ($6 | 0);
   if ($27) {
    if ((_x_by_xt($0, $20) | 0) < 0) {
     _arMatrixFree($20) | 0;
     $$077 = -1;
     break;
    }
   } else if ((_xt_by_x($0, $20) | 0) < 0) {
    _arMatrixFree($20) | 0;
    $$077 = -1;
    break;
   }
   if ((_QRM($20, $2) | 0) < 0) {
    _arMatrixFree($20) | 0;
    $$077 = -1;
    break;
   }
   L18 : do if ($27) {
    if ((_EV_create($0, $20, $1, $2) | 0) < 0) {
     _arMatrixFree($20) | 0;
     $$077 = -1;
     break L1;
    }
   } else {
    $$075 = 0;
    $$078 = HEAP32[$20 >> 2] | 0;
    $$080 = HEAP32[$1 >> 2] | 0;
    while (1) {
     if (($$075 | 0) >= ($8 | 0)) break;
     if (+HEAPF64[(HEAP32[$2 >> 2] | 0) + ($$075 << 3) >> 3] < 1.0e-16) break;
     $$0 = 0;
     $$179 = $$078;
     $$181 = $$080;
     while (1) {
      if (($$0 | 0) >= ($8 | 0)) break;
      HEAPF64[$$181 >> 3] = +HEAPF64[$$179 >> 3];
      $$0 = $$0 + 1 | 0;
      $$179 = $$179 + 8 | 0;
      $$181 = $$181 + 8 | 0;
     }
     $$075 = $$075 + 1 | 0;
     $$078 = $$179;
     $$080 = $$181;
    }
    $$176 = $$075;
    $$2 = $$080;
    while (1) {
     if (($$176 | 0) >= ($8 | 0)) break L18;
     HEAPF64[(HEAP32[$2 >> 2] | 0) + ($$176 << 3) >> 3] = 0.0;
     $$1 = 0;
     $$3 = $$2;
     while (1) {
      if (($$1 | 0) >= ($8 | 0)) break;
      HEAPF64[$$3 >> 3] = 0.0;
      $$1 = $$1 + 1 | 0;
      $$3 = $$3 + 8 | 0;
     }
     $$176 = $$176 + 1 | 0;
     $$2 = $$3;
    }
   } while (0);
   _arMatrixFree($20) | 0;
   $$077 = 0;
   break;
  }
  _arMatrixFree($20) | 0;
  $$077 = -1;
 } else $$077 = -1; while (0);
 return $$077 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$034 = 0, $15 = 0, $16 = 0, $23 = 0, $24 = 0, $28 = 0, $29 = 0, $3 = 0, $37 = 0, $38 = 0, $4 = 0, $46 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $4 = $0 + 8 | 0;
 $5 = $4 + 3 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) {
  $37 = HEAP32[$0 + 4 >> 2] | 0;
  $38 = (HEAP32[$4 >> 2] & 2147483647) + -1 | 0;
 } else {
  $37 = $6 & 255;
  $38 = 1;
 }
 $15 = $2 - $1 | 0;
 $16 = $15 >> 2;
 do if ($15 | 0) {
  if ($7) {
   $23 = HEAP32[$0 >> 2] | 0;
   $24 = HEAP32[$0 + 4 >> 2] | 0;
  } else {
   $23 = $0;
   $24 = $6 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIwEEbPKT_S3_S3_($1, $23, $23 + ($24 << 2) | 0) | 0) {
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($3, $1, $2);
   $28 = HEAP8[$3 + 8 + 3 >> 0] | 0;
   $29 = $28 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwm($0, $29 ? HEAP32[$3 >> 2] | 0 : $3, $29 ? HEAP32[$3 + 4 >> 2] | 0 : $28 & 255) | 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
   break;
  }
  if (($38 - $37 | 0) >>> 0 < $16 >>> 0) __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm($0, $38, $37 + $16 - $38 | 0, $37, $37, 0, 0);
  if ((HEAP8[$5 >> 0] | 0) < 0) $46 = HEAP32[$0 >> 2] | 0; else $46 = $0;
  $$0 = $46 + ($37 << 2) | 0;
  $$034 = $1;
  while (1) {
   if (($$034 | 0) == ($2 | 0)) break;
   __ZNSt3__211char_traitsIwE6assignERwRKw($$0, $$034);
   $$0 = $$0 + 4 | 0;
   $$034 = $$034 + 4 | 0;
  }
  HEAP32[$3 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw($$0, $3);
  $50 = $37 + $16 | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $50;
   break;
  } else {
   HEAP8[$5 >> 0] = $50;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseTemplateParamEv($0) {
 $0 = $0 | 0;
 var $$1 = 0, $$2 = 0, $1 = 0, $16 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp + 4 | 0;
 $2 = sp;
 if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 84) | 0) {
  HEAP32[$1 >> 2] = 0;
  if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0)) if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parsePositiveIntegerEPm($0, $1) | 0) ? ($7 = (HEAP32[$1 >> 2] | 0) + 1 | 0, HEAP32[$1 >> 2] = $7, __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) : 0) {
   $21 = $7;
   label = 5;
  } else $$1 = 0; else {
   $21 = 0;
   label = 5;
  }
  do if ((label | 0) == 5) {
   if (HEAP8[$0 + 362 >> 0] | 0) {
    $$1 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA5_KcEEEPNS0_4NodeEDpOT0_($0, 51573) | 0;
    break;
   }
   if (HEAP8[$0 + 361 >> 0] | 0) {
    $16 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_24ForwardTemplateReferenceEJRmEEEPNS0_4NodeEDpOT0_($0, $1) | 0;
    HEAP32[$2 >> 2] = $16;
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE9push_backERKS3_($0 + 332 | 0, $2);
    $$1 = $16;
    break;
   }
   $18 = $0 + 288 | 0;
   if ($21 >>> 0 < (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE4sizeEv($18) | 0) >>> 0) {
    $22 = __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EEixEm($18, $21) | 0;
    $$1 = HEAP32[$22 >> 2] | 0;
   } else $$1 = 0;
  } while (0);
  $$2 = $$1;
 } else $$2 = 0;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZN6vision18EstimateHomographyEPfRKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEES8_RKNS2_INS_7match_tENS4_IS9_EEEERNS_16RobustHomographyIfEEii($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$036 = 0, $$cast = 0, $10 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0.0, $32 = 0.0, $38 = 0, $46 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $7 = sp + 44 | 0;
 $8 = sp + 32 | 0;
 $9 = sp;
 $10 = $3 + 4 | 0;
 __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEEC2Em($7, (HEAP32[$10 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) >> 3);
 __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEEC2Em($8, (HEAP32[$10 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) >> 3);
 $20 = HEAP32[$3 >> 2] | 0;
 $22 = (HEAP32[$10 >> 2] | 0) - $20 >> 3;
 $$cast = $20;
 $23 = HEAP32[$1 >> 2] | 0;
 $24 = HEAP32[$8 >> 2] | 0;
 $25 = HEAP32[$2 >> 2] | 0;
 $26 = HEAP32[$7 >> 2] | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == ($22 | 0)) break;
  $38 = HEAP32[$$cast + ($$0 << 3) >> 2] | 0;
  HEAP32[$24 + ($$0 << 3) >> 2] = HEAP32[$23 + ($38 * 20 | 0) >> 2];
  HEAP32[$24 + ($$0 << 3) + 4 >> 2] = HEAP32[$23 + ($38 * 20 | 0) + 4 >> 2];
  $46 = HEAP32[$$cast + ($$0 << 3) + 4 >> 2] | 0;
  HEAP32[$26 + ($$0 << 3) >> 2] = HEAP32[$25 + ($46 * 20 | 0) >> 2];
  HEAP32[$26 + ($$0 << 3) + 4 >> 2] = HEAP32[$25 + ($46 * 20 | 0) + 4 >> 2];
  $$0 = $$0 + 1 | 0;
 }
 HEAPF32[$9 >> 2] = 0.0;
 HEAPF32[$9 + 4 >> 2] = 0.0;
 $28 = +($5 | 0);
 HEAPF32[$9 + 8 >> 2] = $28;
 HEAPF32[$9 + 12 >> 2] = 0.0;
 HEAPF32[$9 + 16 >> 2] = $28;
 $32 = +($6 | 0);
 HEAPF32[$9 + 20 >> 2] = $32;
 HEAPF32[$9 + 24 >> 2] = 0.0;
 HEAPF32[$9 + 28 >> 2] = $32;
 if (__ZN6vision16RobustHomographyIfE4findEPfPKfS4_iS4_i($4, $0, $26, $24, $22, $9, 4) | 0) $$036 = __ZN6vision25CheckHomographyHeuristicsEPfii($0, $5, $6) | 0; else $$036 = 0;
 __ZNSt3__213__vector_baseIN6vision7Point2dIfEENS_9allocatorIS3_EEED2Ev($8);
 __ZNSt3__213__vector_baseIN6vision7Point2dIfEENS_9allocatorIS3_EEED2Ev($7);
 STACKTOP = sp;
 return $$036 | 0;
}

function __ZN6vision21HoughSimilarityVoting4voteEPKfS2_i($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$040 = 0, $$1 = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $23 = 0, $24 = 0, $4 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp + 12 | 0;
 $5 = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE5clearEv($0 + 92 | 0);
 if ($3 | 0) {
  $10 = $0 + 112 | 0;
  __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm($10, $3 << 2);
  $12 = $0 + 124 | 0;
  __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm($12, $3);
  if (HEAP8[$0 + 16 >> 0] | 0) __ZN6vision21HoughSimilarityVoting19autoAdjustXYNumBinsEPKfS2_i($0, $1, $2, $3);
  $16 = $0 + 68 | 0;
  $17 = $0 + 72 | 0;
  $18 = $0 + 76 | 0;
  $19 = $0 + 80 | 0;
  $$0 = 0;
  $$040 = 0;
  while (1) {
   if (($$040 | 0) >= ($3 | 0)) break;
   $22 = $$040 << 2;
   $23 = $1 + ($22 << 2) | 0;
   $24 = $2 + ($22 << 2) | 0;
   __ZNK6vision21HoughSimilarityVoting17mapCorrespondenceERfS1_S1_S1_ffffffff($0, $4, $5, $6, $7, +HEAPF32[$23 >> 2], +HEAPF32[$23 + 4 >> 2], +HEAPF32[$23 + 8 >> 2], +HEAPF32[$23 + 12 >> 2], +HEAPF32[$24 >> 2], +HEAPF32[$24 + 4 >> 2], +HEAPF32[$24 + 8 >> 2], +HEAPF32[$24 + 12 >> 2]);
   if (__ZN6vision21HoughSimilarityVoting4voteEffff($0, +HEAPF32[$4 >> 2], +HEAPF32[$5 >> 2], +HEAPF32[$6 >> 2], +HEAPF32[$7 >> 2]) | 0) {
    $46 = (HEAP32[$10 >> 2] | 0) + ($$0 << 2 << 2) | 0;
    HEAP32[$46 >> 2] = HEAP32[$16 >> 2];
    HEAP32[$46 + 4 >> 2] = HEAP32[$17 >> 2];
    HEAP32[$46 + 8 >> 2] = HEAP32[$18 >> 2];
    HEAP32[$46 + 12 >> 2] = HEAP32[$19 >> 2];
    HEAP32[(HEAP32[$12 >> 2] | 0) + ($$0 << 2) >> 2] = $$040;
    $$1 = $$0 + 1 | 0;
   } else $$1 = $$0;
   $$0 = $$1;
   $$040 = $$040 + 1 | 0;
  }
  __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm($10, $$0 << 2);
  __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm($12, $$0);
 }
 STACKTOP = sp;
 return;
}

function _format_message($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$042 = 0, $$042$in = 0, $$043 = 0, $$1 = 0, $13 = 0, $16 = 0, $2 = 0, $28 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0 >> 2] | 0;
 $4 = HEAP32[$2 + 20 >> 2] | 0;
 if (($4 | 0) > 0 ? ($4 | 0) <= (HEAP32[$2 + 116 >> 2] | 0) : 0) {
  $$042$in = (HEAP32[$2 + 112 >> 2] | 0) + ($4 << 2) | 0;
  label = 8;
 } else {
  $13 = HEAP32[$2 + 120 >> 2] | 0;
  if ((($13 | 0) != 0 ? ($16 = HEAP32[$2 + 124 >> 2] | 0, ($4 | 0) >= ($16 | 0)) : 0) ? ($4 | 0) <= (HEAP32[$2 + 128 >> 2] | 0) : 0) {
   $$042$in = $13 + ($4 - $16 << 2) | 0;
   label = 8;
  } else label = 9;
 }
 if ((label | 0) == 8) {
  $$042 = HEAP32[$$042$in >> 2] | 0;
  if (!$$042) label = 9; else $$1 = $$042;
 }
 if ((label | 0) == 9) {
  HEAP32[$2 + 24 >> 2] = $4;
  $$1 = HEAP32[HEAP32[$2 + 112 >> 2] >> 2] | 0;
 }
 $$043 = $$1;
 L14 : while (1) {
  $28 = $$043 + 1 | 0;
  switch (HEAP8[$$043 >> 0] | 0) {
  case 0:
   {
    break L14;
    break;
   }
  case 37:
   {
    label = 12;
    break L14;
    break;
   }
  default:
   $$043 = $28;
  }
 }
 if ((label | 0) == 12 ? (HEAP8[$28 >> 0] | 0) == 115 : 0) {
  HEAP32[$vararg_buffer >> 2] = $2 + 24;
  _sprintf($1, $$1, $vararg_buffer) | 0;
  STACKTOP = sp;
  return;
 }
 $36 = HEAP32[$2 + 28 >> 2] | 0;
 $38 = HEAP32[$2 + 32 >> 2] | 0;
 $40 = HEAP32[$2 + 36 >> 2] | 0;
 $42 = HEAP32[$2 + 40 >> 2] | 0;
 $44 = HEAP32[$2 + 44 >> 2] | 0;
 $46 = HEAP32[$2 + 48 >> 2] | 0;
 $48 = HEAP32[$2 + 52 >> 2] | 0;
 HEAP32[$vararg_buffer1 >> 2] = HEAP32[$2 + 24 >> 2];
 HEAP32[$vararg_buffer1 + 4 >> 2] = $36;
 HEAP32[$vararg_buffer1 + 8 >> 2] = $38;
 HEAP32[$vararg_buffer1 + 12 >> 2] = $40;
 HEAP32[$vararg_buffer1 + 16 >> 2] = $42;
 HEAP32[$vararg_buffer1 + 20 >> 2] = $44;
 HEAP32[$vararg_buffer1 + 24 >> 2] = $46;
 HEAP32[$vararg_buffer1 + 28 >> 2] = $48;
 _sprintf($1, $$1, $vararg_buffer1) | 0;
 STACKTOP = sp;
 return;
}

function __ZN6vision21OrientationAssignment16computeGradientsEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $23 = 0, $28 = 0, $3 = 0, $32 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $3 = $0 + 40 | 0;
 $$0 = 0;
 while (1) {
  $4 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
  if ($$0 >>> 0 >= (HEAP32[$4 + 4 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) >> 5 >>> 0) {
   label = 3;
   break;
  }
  $11 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
  $13 = (HEAP32[$11 >> 2] | 0) + ($$0 << 5) | 0;
  $14 = __ZNK6vision5Image5widthEv($13) | 0;
  if (($14 | 0) != ((__ZNK6vision5Image4stepEv($13) | 0) >>> 2 | 0)) {
   label = 5;
   break;
  }
  $35 = __ZN6vision5Image3getIfEEPT_v((HEAP32[$3 >> 2] | 0) + ($$0 << 5) | 0) | 0;
  $36 = __ZNK6vision5Image3getIfEEPKT_v($13) | 0;
  $37 = __ZNK6vision5Image5widthEv($13) | 0;
  __ZN6vision21ComputePolarGradientsEPfPKfmm($35, $36, $37, __ZNK6vision5Image6heightEv($13) | 0);
  $$0 = $$0 + 1 | 0;
 }
 if ((label | 0) == 3) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 5) {
  $23 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 31856) | 0, 31917) | 0, 39072) | 0, 96) | 0, 39079) | 0, 32006) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $23 + (HEAP32[(HEAP32[$23 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $28 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $32 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$28 >> 2] | 0) + 28 >> 2] & 127]($28, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($23, $32) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($23) | 0;
  _abort();
 }
}

function ___shgetc($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$phi$trans$insert28 = 0, $$pre = 0, $1 = 0, $12 = 0, $17 = 0, $2 = 0, $23 = 0, $26 = 0, $28 = 0, $31 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0, $49 = 0, $50 = 0, $56 = 0, $62 = 0, $63 = 0, $66 = 0, $69 = 0, $7 = 0, $70 = 0, $76 = 0, $77 = 0, $78 = 0, $83 = 0, $84 = 0, $89 = 0, label = 0;
 $1 = $0 + 112 | 0;
 $2 = $1;
 $4 = HEAP32[$2 >> 2] | 0;
 $7 = HEAP32[$2 + 4 >> 2] | 0;
 if (!(($4 | 0) == 0 & ($7 | 0) == 0) ? ($12 = $0 + 120 | 0, $17 = HEAP32[$12 + 4 >> 2] | 0, !(($17 | 0) < ($7 | 0) | (($17 | 0) == ($7 | 0) ? (HEAP32[$12 >> 2] | 0) >>> 0 < $4 >>> 0 : 0))) : 0) label = 4; else {
  $23 = ___uflow($0) | 0;
  if (($23 | 0) >= 0) {
   $26 = $1;
   $28 = HEAP32[$26 >> 2] | 0;
   $31 = HEAP32[$26 + 4 >> 2] | 0;
   $$pre = HEAP32[$0 + 8 >> 2] | 0;
   if (!(($28 | 0) == 0 & ($31 | 0) == 0)) {
    $37 = HEAP32[$0 + 4 >> 2] | 0;
    $39 = $$pre - $37 | 0;
    $41 = (($39 | 0) < 0) << 31 >> 31;
    $43 = $0 + 120 | 0;
    $49 = _i64Subtract($28 | 0, $31 | 0, HEAP32[$43 >> 2] | 0, HEAP32[$43 + 4 >> 2] | 0) | 0;
    $50 = getTempRet0() | 0;
    $56 = $$pre;
    if (($50 | 0) > ($41 | 0) | ($50 | 0) == ($41 | 0) & $49 >>> 0 > $39 >>> 0) {
     $89 = $56;
     label = 9;
    } else {
     HEAP32[$0 + 104 >> 2] = $37 + ($49 + -1);
     $62 = $56;
    }
   } else {
    $89 = $$pre;
    label = 9;
   }
   if ((label | 0) == 9) {
    HEAP32[$0 + 104 >> 2] = $$pre;
    $62 = $89;
   }
   $$phi$trans$insert28 = $0 + 4 | 0;
   if (!$62) $84 = HEAP32[$$phi$trans$insert28 >> 2] | 0; else {
    $63 = HEAP32[$$phi$trans$insert28 >> 2] | 0;
    $66 = $62 + 1 - $63 | 0;
    $69 = $0 + 120 | 0;
    $70 = $69;
    $76 = _i64Add(HEAP32[$70 >> 2] | 0, HEAP32[$70 + 4 >> 2] | 0, $66 | 0, (($66 | 0) < 0) << 31 >> 31 | 0) | 0;
    $77 = getTempRet0() | 0;
    $78 = $69;
    HEAP32[$78 >> 2] = $76;
    HEAP32[$78 + 4 >> 2] = $77;
    $84 = $63;
   }
   $83 = $84 + -1 | 0;
   if (($23 | 0) == (HEAPU8[$83 >> 0] | 0 | 0)) $$0 = $23; else {
    HEAP8[$83 >> 0] = $23;
    $$0 = $23;
   }
  } else label = 4;
 }
 if ((label | 0) == 4) {
  HEAP32[$0 + 104 >> 2] = 0;
  $$0 = -1;
 }
 return $$0 | 0;
}

function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0, aligned_dest_end = 0, block_aligned_dest_end = 0, dest_end = 0;
 if ((num | 0) >= 8192) {
  _emscripten_memcpy_big(dest | 0, src | 0, num | 0) | 0;
  return dest | 0;
 }
 ret = dest | 0;
 dest_end = dest + num | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if (!num) return ret | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  aligned_dest_end = dest_end & -4 | 0;
  block_aligned_dest_end = aligned_dest_end - 64 | 0;
  while ((dest | 0) <= (block_aligned_dest_end | 0)) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   HEAP32[dest + 4 >> 2] = HEAP32[src + 4 >> 2];
   HEAP32[dest + 8 >> 2] = HEAP32[src + 8 >> 2];
   HEAP32[dest + 12 >> 2] = HEAP32[src + 12 >> 2];
   HEAP32[dest + 16 >> 2] = HEAP32[src + 16 >> 2];
   HEAP32[dest + 20 >> 2] = HEAP32[src + 20 >> 2];
   HEAP32[dest + 24 >> 2] = HEAP32[src + 24 >> 2];
   HEAP32[dest + 28 >> 2] = HEAP32[src + 28 >> 2];
   HEAP32[dest + 32 >> 2] = HEAP32[src + 32 >> 2];
   HEAP32[dest + 36 >> 2] = HEAP32[src + 36 >> 2];
   HEAP32[dest + 40 >> 2] = HEAP32[src + 40 >> 2];
   HEAP32[dest + 44 >> 2] = HEAP32[src + 44 >> 2];
   HEAP32[dest + 48 >> 2] = HEAP32[src + 48 >> 2];
   HEAP32[dest + 52 >> 2] = HEAP32[src + 52 >> 2];
   HEAP32[dest + 56 >> 2] = HEAP32[src + 56 >> 2];
   HEAP32[dest + 60 >> 2] = HEAP32[src + 60 >> 2];
   dest = dest + 64 | 0;
   src = src + 64 | 0;
  }
  while ((dest | 0) < (aligned_dest_end | 0)) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  }
 } else {
  aligned_dest_end = dest_end - 4 | 0;
  while ((dest | 0) < (aligned_dest_end | 0)) {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   HEAP8[dest + 1 >> 0] = HEAP8[src + 1 >> 0] | 0;
   HEAP8[dest + 2 >> 0] = HEAP8[src + 2 >> 0] | 0;
   HEAP8[dest + 3 >> 0] = HEAP8[src + 3 >> 0] | 0;
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  }
 }
 while ((dest | 0) < (dest_end | 0)) {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 }
 return ret | 0;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $21 = 0, $25 = 0, $33 = 0, $34 = 0, $39 = 0, $4 = 0, $42 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select = 0;
 $4 = $1;
 $6 = ($2 - $4 | 0) / 20 | 0;
 $7 = $0 + 8 | 0;
 $9 = HEAP32[$0 >> 2] | 0;
 $13 = $9;
 do if ($6 >>> 0 > (((HEAP32[$7 >> 2] | 0) - $9 | 0) / 20 | 0) >>> 0) {
  __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE13__vdeallocateEv($0);
  $34 = __ZNKSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
  if ($34 >>> 0 < $6 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $39 = ((HEAP32[$7 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 20 | 0;
   $42 = $39 << 1;
   __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE11__vallocateEm($0, $39 >>> 0 < $34 >>> 1 >>> 0 ? ($42 >>> 0 < $6 >>> 0 ? $6 : $42) : $34);
   __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_m($0, $1, $2, $6);
   break;
  }
 } else {
  $14 = $0 + 4 | 0;
  $17 = ((HEAP32[$14 >> 2] | 0) - $9 | 0) / 20 | 0;
  $18 = $6 >>> 0 > $17 >>> 0;
  $spec$select = $18 ? $1 + ($17 * 20 | 0) | 0 : $2;
  $21 = $spec$select - $4 | 0;
  if ($21 | 0) _memmove($9 | 0, $1 | 0, $21 | 0) | 0;
  $25 = $13 + ((($21 | 0) / 20 | 0) * 20 | 0) | 0;
  if ($18) {
   __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_m($0, $spec$select, $2, $6 - (((HEAP32[$14 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 20 | 0) | 0);
   break;
  }
  $$0$i$i = HEAP32[$14 >> 2] | 0;
  while (1) {
   if (($$0$i$i | 0) == ($25 | 0)) break;
   $33 = $$0$i$i + -20 | 0;
   __ZN6vision12FeaturePointD2Ev($33);
   $$0$i$i = $33;
  }
  HEAP32[$14 >> 2] = $25;
 } while (0);
 return;
}

function __ZL18genBWImageTwoThirdPhiiPiS0_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$073 = 0, $$074 = 0, $$077 = 0, $$078 = 0, $$079 = 0, $$1 = 0, $$176 = 0, $$pn = 0, $10 = 0, $13 = 0, $25 = 0, $34 = 0, $5 = 0, $51 = 0, $6 = 0, $7 = 0, $71 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = ($1 | 0) / 3 | 0;
 $6 = $5 << 1;
 HEAP32[$3 >> 2] = $6;
 $7 = ($2 | 0) / 3 | 0;
 $8 = $7 << 1;
 HEAP32[$4 >> 2] = $8;
 $10 = _malloc(Math_imul($8, $6) | 0) | 0;
 if (!$10) {
  _arLog(0, 3, 45930, sp);
  _exit(1);
 }
 $$0 = 0;
 $$074 = $10;
 $$pn = $10;
 while (1) {
  if (($$0 | 0) >= ($7 | 0)) break;
  $13 = $$0 * 3 | 0;
  $$073 = 0;
  $$077 = $0 + (Math_imul($13 + 2 | 0, $1) | 0) | 0;
  $$078 = $0 + (Math_imul($13 + 1 | 0, $1) | 0) | 0;
  $$079 = $0 + (Math_imul($13, $1) | 0) | 0;
  $$1 = $$074;
  $$176 = $$pn + $6 | 0;
  while (1) {
   if (($$073 | 0) >= ($5 | 0)) break;
   $25 = $$079 + 1 | 0;
   $34 = $$078 + 1 | 0;
   HEAP8[$$1 >> 0] = (((HEAPU8[$25 >> 0] | 0) >>> 1 & 255) + (HEAPU8[$$079 >> 0] | 0) + ((HEAPU8[$$078 >> 0] | 0) >>> 1 & 255) + ((HEAPU8[$34 >> 0] | 0) >>> 2 & 255) << 2 >>> 0) / 9 | 0;
   $51 = $$077 + 1 | 0;
   HEAP8[$$176 >> 0] = ((((HEAPU8[$34 >> 0] | 0) >>> 2) + ((HEAPU8[$$078 >> 0] | 0) >>> 1) & 255) + (HEAPU8[$$077 >> 0] | 0) + ((HEAPU8[$51 >> 0] | 0) >>> 1 & 255) << 2 >>> 0) / 9 | 0;
   $71 = $$078 + 2 | 0;
   HEAP8[$$1 + 1 >> 0] = (((HEAPU8[$25 >> 0] | 0) >>> 1 & 255) + (HEAPU8[$$079 + 2 >> 0] | 0) + ((HEAPU8[$34 >> 0] | 0) >>> 2 & 255) + ((HEAPU8[$71 >> 0] | 0) >>> 1 & 255) << 2 >>> 0) / 9 | 0;
   HEAP8[$$176 + 1 >> 0] = ((((HEAPU8[$71 >> 0] | 0) >>> 1) + ((HEAPU8[$34 >> 0] | 0) >>> 2) & 255) + ((HEAPU8[$51 >> 0] | 0) >>> 1 & 255) + (HEAPU8[$$077 + 2 >> 0] | 0) << 2 >>> 0) / 9 | 0;
   $$073 = $$073 + 1 | 0;
   $$077 = $$077 + 3 | 0;
   $$078 = $$078 + 3 | 0;
   $$079 = $$079 + 3 | 0;
   $$1 = $$1 + 2 | 0;
   $$176 = $$176 + 2 | 0;
  }
  $$0 = $$0 + 1 | 0;
  $$074 = $$1 + $6 | 0;
  $$pn = $$176;
 }
 STACKTOP = sp;
 return $10 | 0;
}

function __ZN6vision16MatrixInverse3x3IfEEbPT_PKS1_S1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 var $$0 = 0, $11 = 0, $13 = 0, $16 = 0.0, $17 = 0, $19 = 0, $24 = 0.0, $3 = 0.0, $31 = 0.0, $34 = 0, $37 = 0, $40 = 0.0, $47 = 0.0, $54 = 0.0, $6 = 0.0, $61 = 0.0, $68 = 0.0, $7 = 0, $75 = 0.0, $9 = 0;
 $3 = +__ZN6vision14Determinant3x3IfEET_PKS1_($1);
 if (!(+Math_abs(+$3) <= $2)) {
  $6 = 1.0 / $3;
  $7 = $1 + 16 | 0;
  $9 = $1 + 20 | 0;
  $11 = $1 + 28 | 0;
  $13 = $1 + 32 | 0;
  $16 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$7 >> 2], +HEAPF32[$9 >> 2], +HEAPF32[$11 >> 2], +HEAPF32[$13 >> 2]);
  HEAPF32[$0 >> 2] = $16;
  $17 = $1 + 8 | 0;
  $19 = $1 + 4 | 0;
  $24 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$17 >> 2], +HEAPF32[$19 >> 2], +HEAPF32[$13 >> 2], +HEAPF32[$11 >> 2]);
  HEAPF32[$0 + 4 >> 2] = $24;
  $31 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$19 >> 2], +HEAPF32[$17 >> 2], +HEAPF32[$7 >> 2], +HEAPF32[$9 >> 2]);
  HEAPF32[$0 + 8 >> 2] = $31;
  $34 = $1 + 12 | 0;
  $37 = $1 + 24 | 0;
  $40 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$9 >> 2], +HEAPF32[$34 >> 2], +HEAPF32[$13 >> 2], +HEAPF32[$37 >> 2]);
  HEAPF32[$0 + 12 >> 2] = $40;
  $47 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$1 >> 2], +HEAPF32[$17 >> 2], +HEAPF32[$37 >> 2], +HEAPF32[$13 >> 2]);
  HEAPF32[$0 + 16 >> 2] = $47;
  $54 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$17 >> 2], +HEAPF32[$1 >> 2], +HEAPF32[$9 >> 2], +HEAPF32[$34 >> 2]);
  HEAPF32[$0 + 20 >> 2] = $54;
  $61 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$34 >> 2], +HEAPF32[$7 >> 2], +HEAPF32[$37 >> 2], +HEAPF32[$11 >> 2]);
  HEAPF32[$0 + 24 >> 2] = $61;
  $68 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$19 >> 2], +HEAPF32[$1 >> 2], +HEAPF32[$11 >> 2], +HEAPF32[$37 >> 2]);
  HEAPF32[$0 + 28 >> 2] = $68;
  $75 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$1 >> 2], +HEAPF32[$19 >> 2], +HEAPF32[$34 >> 2], +HEAPF32[$7 >> 2]);
  HEAPF32[$0 + 32 >> 2] = $75;
  $$0 = 1;
 } else $$0 = 0;
 return $$0 | 0;
}

function __ZNK12_GLOBAL__N_116itanium_demangle27ExpandedSpecialSubstitution9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy5 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy5 = sp + 48 | 0;
 $2 = sp + 40 | 0;
 $3 = sp + 32 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 16 | 0;
 $6 = sp + 8 | 0;
 $7 = sp;
 switch (HEAP32[$0 + 8 >> 2] | 0) {
 case 0:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 51758);
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
   break;
  }
 case 1:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 51773);
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
   break;
  }
 case 2:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 55532);
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
   break;
  }
 case 3:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 55603);
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
   break;
  }
 case 4:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($6, 55653);
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
   break;
  }
 case 5:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($7, 55703);
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
   break;
  }
 default:
  {}
 }
 STACKTOP = sp;
 return;
}

function __ZNK12_GLOBAL__N_116itanium_demangle19SpecialSubstitution9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy5 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy5 = sp + 48 | 0;
 $2 = sp + 40 | 0;
 $3 = sp + 32 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 16 | 0;
 $6 = sp + 8 | 0;
 $7 = sp;
 switch (HEAP32[$0 + 8 >> 2] | 0) {
 case 0:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 51758);
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
   break;
  }
 case 1:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 51773);
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
   break;
  }
 case 2:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 57179);
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
   break;
  }
 case 3:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 51791);
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
   break;
  }
 case 4:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($6, 51804);
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
   break;
  }
 case 5:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($7, 51817);
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy5);
   break;
  }
 default:
  {}
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__210__stdinbufIwE9pbackfailEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$07 = 0, $$1 = 0, $$pre$phiZ2D = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $3 = 0, $33 = 0, $34 = 0, $36 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $7 = __ZNSt3__211char_traitsIwE11eq_int_typeEjj($1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0;
 $8 = $0 + 52 | 0;
 $10 = (HEAP8[$8 >> 0] | 0) != 0;
 do if ($7) if ($10) $$1 = $1; else {
  $12 = HEAP32[$0 + 48 >> 2] | 0;
  $16 = ((__ZNSt3__211char_traitsIwE11eq_int_typeEjj($12, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) ^ 1) & 1;
  HEAP8[$8 >> 0] = $16;
  $$1 = $12;
 } else {
  if ($10) {
   $17 = $0 + 48 | 0;
   $19 = __ZNSt3__211char_traitsIwE12to_char_typeEj(HEAP32[$17 >> 2] | 0) | 0;
   HEAP32[$4 >> 2] = $19;
   $21 = HEAP32[$0 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$21 >> 2] | 0) + 12 >> 2] & 15]($21, HEAP32[$0 + 40 >> 2] | 0, $4, $4 + 4 | 0, $5, $2, $2 + 8 | 0, $3) | 0) {
   case 1:
   case 2:
    {
     label = 11;
     break;
    }
   case 3:
    {
     HEAP8[$2 >> 0] = HEAP32[$17 >> 2];
     HEAP32[$3 >> 2] = $2 + 1;
     label = 8;
     break;
    }
   default:
    label = 8;
   }
   L9 : do if ((label | 0) == 8) {
    $33 = $0 + 32 | 0;
    while (1) {
     $34 = HEAP32[$3 >> 2] | 0;
     if ($34 >>> 0 <= $2 >>> 0) {
      $$0 = 1;
      $$07 = 0;
      break L9;
     }
     $36 = $34 + -1 | 0;
     HEAP32[$3 >> 2] = $36;
     if ((_ungetc(HEAP8[$36 >> 0] | 0, HEAP32[$33 >> 2] | 0) | 0) == -1) {
      label = 11;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 11) {
    $$0 = 0;
    $$07 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   }
   if ($$0) $$pre$phiZ2D = $17; else {
    $$1 = $$07;
    break;
   }
  } else $$pre$phiZ2D = $0 + 48 | 0;
  HEAP32[$$pre$phiZ2D >> 2] = $1;
  HEAP8[$8 >> 0] = 1;
  $$1 = $1;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__210__stdinbufIcE9pbackfailEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$07 = 0, $$1 = 0, $$pre$phiZ2D = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $3 = 0, $33 = 0, $34 = 0, $36 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 16 | 0;
 $3 = sp + 4 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 $7 = __ZNSt3__211char_traitsIcE11eq_int_typeEii($1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0;
 $8 = $0 + 52 | 0;
 $10 = (HEAP8[$8 >> 0] | 0) != 0;
 do if ($7) if ($10) $$1 = $1; else {
  $12 = HEAP32[$0 + 48 >> 2] | 0;
  $16 = ((__ZNSt3__211char_traitsIcE11eq_int_typeEii($12, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) ^ 1) & 1;
  HEAP8[$8 >> 0] = $16;
  $$1 = $12;
 } else {
  if ($10) {
   $17 = $0 + 48 | 0;
   $19 = __ZNSt3__211char_traitsIcE12to_char_typeEi(HEAP32[$17 >> 2] | 0) | 0;
   HEAP8[$4 >> 0] = $19;
   $21 = HEAP32[$0 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$21 >> 2] | 0) + 12 >> 2] & 15]($21, HEAP32[$0 + 40 >> 2] | 0, $4, $4 + 1 | 0, $5, $2, $2 + 8 | 0, $3) | 0) {
   case 1:
   case 2:
    {
     label = 11;
     break;
    }
   case 3:
    {
     HEAP8[$2 >> 0] = HEAP32[$17 >> 2];
     HEAP32[$3 >> 2] = $2 + 1;
     label = 8;
     break;
    }
   default:
    label = 8;
   }
   L9 : do if ((label | 0) == 8) {
    $33 = $0 + 32 | 0;
    while (1) {
     $34 = HEAP32[$3 >> 2] | 0;
     if ($34 >>> 0 <= $2 >>> 0) {
      $$0 = 1;
      $$07 = 0;
      break L9;
     }
     $36 = $34 + -1 | 0;
     HEAP32[$3 >> 2] = $36;
     if ((_ungetc(HEAP8[$36 >> 0] | 0, HEAP32[$33 >> 2] | 0) | 0) == -1) {
      label = 11;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 11) {
    $$0 = 0;
    $$07 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   }
   if ($$0) $$pre$phiZ2D = $17; else {
    $$1 = $$07;
    break;
   }
  } else $$pre$phiZ2D = $0 + 48 | 0;
  HEAP32[$$pre$phiZ2D >> 2] = $1;
  HEAP8[$8 >> 0] = 1;
  $$1 = $1;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function _ar2GetBestMatchingSubFineOpt($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0 = 0, $$090 = 0, $$091 = 0, $$094 = 0, $$095 = 0, $$1 = 0, $$193 = 0, $$196 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $27 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $39 = 0, $40 = 0, $41 = 0, $44 = 0, $48 = 0, $52 = 0, $55 = 0, $68 = 0, $71 = 0, $78 = 0, $storemerge = 0;
 $14 = $0 + ((Math_imul($3, $1) | 0) + $2) | 0;
 $16 = HEAP32[$4 + 4 >> 2] | 0;
 $17 = $1 << 1;
 $18 = HEAP32[$4 >> 2] | 0;
 $$0 = 0;
 $$091 = HEAP32[$4 + 24 >> 2] | 0;
 $$094 = $14;
 $$095 = 0;
 while (1) {
  if (($$0 | 0) >= ($16 | 0)) break;
  $$090 = 0;
  $$1 = $$091;
  $$193 = $$094;
  $$196 = $$095;
  while (1) {
   if (($$090 | 0) >= ($18 | 0)) break;
   $27 = (Math_imul(HEAPU16[$$1 >> 1] | 0, HEAPU8[$$193 >> 0] | 0) | 0) + $$196 | 0;
   $$090 = $$090 + 1 | 0;
   $$1 = $$1 + 2 | 0;
   $$193 = $$193 + 2 | 0;
   $$196 = $27;
  }
  $$0 = $$0 + 1 | 0;
  $$091 = $$1;
  $$094 = $$094 + $17 | 0;
  $$095 = $$196;
 }
 $32 = $18 << 1;
 $33 = $32 + 8 | 0;
 $34 = $7 + -2 | 0;
 $35 = $34 + $32 | 0;
 $37 = $8 + -2 | 0;
 $39 = Math_imul($33, $37 + ($16 << 1) | 0) | 0;
 $40 = Math_imul($33, $37) | 0;
 $41 = $39 + $35 | 0;
 $44 = $40 + $34 | 0;
 $48 = $39 + $34 | 0;
 $52 = $40 + $35 | 0;
 $55 = (HEAP32[$5 + ($44 << 2) >> 2] | 0) + (HEAP32[$5 + ($41 << 2) >> 2] | 0) - (HEAP32[$5 + ($48 << 2) >> 2] | 0) - (HEAP32[$5 + ($52 << 2) >> 2] | 0) | 0;
 $68 = HEAP32[$4 + 36 >> 2] | 0;
 $71 = (HEAP32[$6 + ($44 << 2) >> 2] | 0) + (HEAP32[$6 + ($41 << 2) >> 2] | 0) - (HEAP32[$6 + ($48 << 2) >> 2] | 0) - (HEAP32[$6 + ($52 << 2) >> 2] | 0) - ((Math_imul($55, $55) | 0) / ($68 | 0) | 0) | 0;
 if (!$71) $storemerge = 0; else {
  $78 = ($$095 - ((Math_imul(HEAP32[$4 + 32 >> 2] | 0, $55) | 0) / ($68 | 0) | 0) | 0) * 100 | 0;
  $storemerge = ((($78 | 0) / (HEAP32[$4 + 28 >> 2] | 0) | 0) * 100 | 0) / (~~+Math_sqrt(+(+($71 | 0))) | 0) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 return;
}

function _jpeg_huff_decode($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$lcssa = 0, $$042$lcssa = 0, $$04254 = 0, $$043 = 0, $$044 = 0, $$045 = 0, $$055 = 0, $$1$lcssa = 0, $$146$lcssa = 0, $$14652 = 0, $$153 = 0, $$2 = 0, $$247 = 0, $12 = 0, $16 = 0, $20 = 0, $21 = 0, $22 = 0, $28 = 0, $31 = 0, $32 = 0, $38 = 0, $39 = 0;
 do if (($2 | 0) < ($4 | 0)) if (!(_jpeg_fill_bit_buffer($0, $1, $2, $4) | 0)) {
  $$043 = -1;
  return $$043 | 0;
 } else {
  $$044 = HEAP32[$0 + 8 >> 2] | 0;
  $$045 = HEAP32[$0 + 12 >> 2] | 0;
  break;
 } else {
  $$044 = $1;
  $$045 = $2;
 } while (0);
 $12 = $$045 - $4 | 0;
 $16 = $$044 >> $12 & HEAP32[5184 + ($4 << 2) >> 2];
 $20 = $0 + 8 | 0;
 $21 = $0 + 12 | 0;
 L7 : do if (($16 | 0) > (HEAP32[$3 + ($4 << 2) >> 2] | 0)) {
  $$04254 = $4;
  $$055 = $16;
  $$14652 = $12;
  $$153 = $$044;
  while (1) {
   $22 = $$055 << 1;
   if (($$14652 | 0) < 1) {
    if (!(_jpeg_fill_bit_buffer($0, $$153, $$14652, 1) | 0)) {
     $$043 = -1;
     break;
    }
    $$2 = HEAP32[$20 >> 2] | 0;
    $$247 = HEAP32[$21 >> 2] | 0;
   } else {
    $$2 = $$153;
    $$247 = $$14652;
   }
   $28 = $$247 + -1 | 0;
   $31 = $$2 >>> $28 & 1 | $22;
   $32 = $$04254 + 1 | 0;
   if (($31 | 0) > (HEAP32[$3 + ($32 << 2) >> 2] | 0)) {
    $$04254 = $32;
    $$055 = $31;
    $$14652 = $28;
    $$153 = $$2;
   } else {
    $$0$lcssa = $31;
    $$042$lcssa = $32;
    $$1$lcssa = $$2;
    $$146$lcssa = $28;
    break L7;
   }
  }
  return $$043 | 0;
 } else {
  $$0$lcssa = $16;
  $$042$lcssa = $4;
  $$1$lcssa = $$044;
  $$146$lcssa = $12;
 } while (0);
 HEAP32[$20 >> 2] = $$1$lcssa;
 HEAP32[$21 >> 2] = $$146$lcssa;
 if (($$042$lcssa | 0) > 16) {
  $38 = HEAP32[$0 + 16 >> 2] | 0;
  $39 = HEAP32[$38 >> 2] | 0;
  HEAP32[$39 + 20 >> 2] = 121;
  FUNCTION_TABLE_vii[HEAP32[$39 + 4 >> 2] & 255]($38, -1);
  $$043 = 0;
  return $$043 | 0;
 } else {
  $$043 = HEAPU8[(HEAP32[$3 + 72 + ($$042$lcssa << 2) >> 2] | 0) + $$0$lcssa + ((HEAP32[$3 + 140 >> 2] | 0) + 17) >> 0] | 0;
  return $$043 | 0;
 }
 return 0;
}

function _addMultiMarker($id, $patt_name) {
 $id = $id | 0;
 $patt_name = $patt_name | 0;
 var $14 = 0, $15 = 0, $3 = 0, $9 = 0, $__end_$i8 = 0, $arMultiMarkerHandle = 0, $call7 = 0, $cond$i$i$i = 0, $id$addr = 0, $marker = 0, $multi_markers = 0, $retval$1 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp + 8 | 0;
 $id$addr = sp + 12 | 0;
 $marker = sp;
 HEAP32[$id$addr >> 2] = $id;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(65260, $id$addr) | 0)) $retval$1 = -1; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(65260, $id$addr) | 0;
  if ((HEAP8[$patt_name + 11 >> 0] | 0) < 0) $cond$i$i$i = HEAP32[$patt_name >> 2] | 0; else $cond$i$i$i = $patt_name;
  $arMultiMarkerHandle = $call7 + 224 | 0;
  if (!(__ZL15loadMultiMarkerPKcP8ARHandlePP12ARPattHandlePP18ARMultiMarkerInfoT($cond$i$i$i, HEAP32[$call7 + 216 >> 2] | 0, $call7 + 220 | 0, $arMultiMarkerHandle) | 0)) {
   _arLog(0, 3, 45229, $vararg_buffer);
   $retval$1 = -1;
   break;
  }
  $multi_markers = $call7 + 328 | 0;
  $__end_$i8 = $call7 + 332 | 0;
  $3 = HEAP32[$__end_$i8 >> 2] | 0;
  HEAP32[$marker >> 2] = $3 - (HEAP32[$multi_markers >> 2] | 0) >> 3;
  HEAP32[$marker + 4 >> 2] = HEAP32[$arMultiMarkerHandle >> 2];
  if ((HEAP32[$call7 + 336 >> 2] | 0) == ($3 | 0)) __ZNSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($multi_markers, $marker); else {
   $9 = $marker;
   $14 = HEAP32[$9 + 4 >> 2] | 0;
   $15 = $3;
   HEAP32[$15 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$15 + 4 >> 2] = $14;
   HEAP32[$__end_$i8 >> 2] = (HEAP32[$__end_$i8 >> 2] | 0) + 8;
  }
  $retval$1 = HEAP32[$marker >> 2] | 0;
 } while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function _fgets($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$05963 = 0, $$06065 = 0, $$06164 = 0, $$1 = 0, $11 = 0, $16 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $30 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $43 = 0, $50 = 0, $51 = 0, $7 = 0, $9 = 0, label = 0;
 if ((HEAP32[$2 + 76 >> 2] | 0) > -1) $16 = ___lockfile($2) | 0; else $16 = 0;
 $7 = $1 + -1 | 0;
 if (($1 | 0) < 2) {
  $9 = $2 + 74 | 0;
  $11 = HEAP8[$9 >> 0] | 0;
  HEAP8[$9 >> 0] = $11 + 255 | $11;
  if ($16 | 0) ___unlockfile($2);
  if (!$7) {
   HEAP8[$0 >> 0] = 0;
   $$0 = $0;
  } else $$0 = 0;
 } else {
  L11 : do if ($7) {
   $19 = $2 + 4 | 0;
   $20 = $2 + 8 | 0;
   $$06065 = $7;
   $$06164 = $0;
   while (1) {
    $21 = HEAP32[$19 >> 2] | 0;
    $23 = $21;
    $24 = (HEAP32[$20 >> 2] | 0) - $23 | 0;
    $25 = _memchr($21, 10, $24) | 0;
    $26 = ($25 | 0) == 0;
    $30 = $26 ? $24 : 1 - $23 + $25 | 0;
    $32 = $30 >>> 0 < $$06065 >>> 0 ? $30 : $$06065;
    _memcpy($$06164 | 0, $21 | 0, $32 | 0) | 0;
    $34 = (HEAP32[$19 >> 2] | 0) + $32 | 0;
    HEAP32[$19 >> 2] = $34;
    $35 = $$06164 + $32 | 0;
    $36 = $$06065 - $32 | 0;
    if (!($26 & ($36 | 0) != 0)) {
     $$1 = $35;
     label = 17;
     break L11;
    }
    if ($34 >>> 0 >= (HEAP32[$20 >> 2] | 0) >>> 0) {
     $43 = ___uflow($2) | 0;
     if (($43 | 0) < 0) break; else $50 = $43;
    } else {
     HEAP32[$19 >> 2] = $34 + 1;
     $50 = HEAPU8[$34 >> 0] | 0;
    }
    $51 = $35 + 1 | 0;
    HEAP8[$35 >> 0] = $50;
    $$06065 = $36 + -1 | 0;
    if (($50 & 255 | 0) == 10 | ($$06065 | 0) == 0) {
     $$1 = $51;
     label = 17;
     break L11;
    } else $$06164 = $51;
   }
   if (($35 | 0) != ($0 | 0) ? (HEAP32[$2 >> 2] & 16 | 0) != 0 : 0) {
    $$1 = $35;
    label = 17;
   } else $$05963 = 0;
  } else {
   $$1 = $0;
   label = 17;
  } while (0);
  if ((label | 0) == 17) if (!$0) $$05963 = 0; else {
   HEAP8[$$1 >> 0] = 0;
   $$05963 = $0;
  }
  if (!$16) $$0 = $$05963; else {
   ___unlockfile($2);
   $$0 = $$05963;
  }
 }
 return $$0 | 0;
}

function __ZN6vision27OrthogonalizePivot8x9Basis1IfEEbPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $11 = 0, $13 = 0, $15 = 0, $17 = 0.0, $18 = 0.0, $2 = 0, $20 = 0.0, $22 = 0.0, $24 = 0.0, $26 = 0.0, $28 = 0.0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $4 = 0, $5 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 36 | 0;
 $4 = $1 + 36 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($3, $0, $4);
 $5 = $0 + 72 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($5, $0, $1 + 72 | 0);
 $7 = $0 + 108 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($7, $0, $1 + 108 | 0);
 $9 = $0 + 144 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($9, $0, $1 + 144 | 0);
 $11 = $0 + 180 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($11, $0, $1 + 180 | 0);
 $13 = $0 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($13, $0, $1 + 216 | 0);
 $15 = $0 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($15, $0, $1 + 252 | 0);
 $17 = +__ZN6vision11SumSquares9IfEET_PKS1_($3);
 HEAPF32[$2 >> 2] = $17;
 $18 = +__ZN6vision11SumSquares9IfEET_PKS1_($5);
 HEAPF32[$2 + 4 >> 2] = $18;
 $20 = +__ZN6vision11SumSquares9IfEET_PKS1_($7);
 HEAPF32[$2 + 8 >> 2] = $20;
 $22 = +__ZN6vision11SumSquares9IfEET_PKS1_($9);
 HEAPF32[$2 + 12 >> 2] = $22;
 $24 = +__ZN6vision11SumSquares9IfEET_PKS1_($11);
 HEAPF32[$2 + 16 >> 2] = $24;
 $26 = +__ZN6vision11SumSquares9IfEET_PKS1_($13);
 HEAPF32[$2 + 20 >> 2] = $26;
 $28 = +__ZN6vision11SumSquares9IfEET_PKS1_($15);
 HEAPF32[$2 + 24 >> 2] = $28;
 $30 = __ZN6vision9MaxIndex7IfEEiPKT_($2) | 0;
 $31 = $2 + ($30 << 2) | 0;
 if (+HEAPF32[$31 >> 2] == 0.0) $$0 = 0; else {
  $34 = $30 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_($3, $3 + ($34 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_($4, $4 + ($34 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($3, $3, 1.0 / +Math_sqrt(+(+HEAPF32[$31 >> 2])));
  $$0 = 1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision39HomographyPointsGeometricallyConsistentIfEEbPKT_S3_i($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$062 = 0, $$063 = 0, $$063$phi = 0, $$065 = 0, $$067 = 0, $$068 = 0, $$070 = 0, $$072 = 0, $$4 = 0, $10 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $3 = sp + 32 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 16 | 0;
 $6 = sp + 8 | 0;
 $7 = sp;
 L1 : do if (($2 | 0) >= 2) {
  $9 = $1 + 8 | 0;
  $10 = $1 + 16 | 0;
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($3, $0, $1);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($4, $0, $9);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($5, $0, $10);
  __ZN6vision11CopyVector2IfEEvPT_PKS1_($6, $3);
  __ZN6vision11CopyVector2IfEEvPT_PKS1_($7, $4);
  if (__ZN6vision40Homography3PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_($1, $9, $10, $3, $4, $5) | 0) {
   $$062 = 3;
   $$063 = $5;
   $$065 = $4;
   $$067 = $3;
   $$068 = $10;
   $$070 = $9;
   $$072 = $1;
   while (1) {
    if (($$062 | 0) >= ($2 | 0)) break;
    $$072 = $$072 + 8 | 0;
    $14 = $$070 + 8 | 0;
    $15 = $$068 + 8 | 0;
    __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($$067, $0, $15);
    if (!(__ZN6vision40Homography3PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_($$072, $14, $15, $$065, $$063, $$067) | 0)) {
     $$4 = 0;
     break L1;
    } else {
     $$063$phi = $$067;
     $$062 = $$062 + 1 | 0;
     $$068 = $15;
     $$070 = $14;
     $$067 = $$065;
     $$065 = $$063;
     $$063 = $$063$phi;
    }
   }
   if (__ZN6vision40Homography3PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_($$070, $$068, $1, $$065, $$063, $6) | 0) $$4 = __ZN6vision40Homography3PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_($$068, $1, $9, $$063, $6, $7) | 0; else $$4 = 0;
  } else $$4 = 0;
 } else $$4 = 1; while (0);
 STACKTOP = sp;
 return $$4 | 0;
}

function _arGetTransMatSquare($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 $3 = $3 | 0;
 var $$0 = 0, $$0$in = 0, $$031 = 0.0, $19 = 0, $26 = 0, $34 = 0, $4 = 0, $42 = 0, $49 = 0.0, $5 = 0, $50 = 0.0, $6 = 0, $69 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 $4 = sp + 192 | 0;
 $5 = sp + 96 | 0;
 $6 = sp + 264 | 0;
 $7 = sp;
 $8 = sp + 256 | 0;
 do if ((HEAP32[$1 + 12 >> 2] | 0) >= 0) if ((HEAP32[$1 + 8 >> 2] | 0) < 0) {
  $$0$in = $1 + 24 | 0;
  break;
 } else {
  $$0$in = $1 + 16 | 0;
  break;
 } else $$0$in = $1 + 20 | 0; while (0);
 $$0 = HEAP32[$$0$in >> 2] | 0;
 $19 = (4 - $$0 | 0) % 4 | 0;
 HEAPF64[$4 >> 3] = +HEAPF64[$1 + 168 + ($19 << 4) >> 3];
 HEAPF64[$4 + 8 >> 3] = +HEAPF64[$1 + 168 + ($19 << 4) + 8 >> 3];
 $26 = (5 - $$0 | 0) % 4 | 0;
 HEAPF64[$4 + 16 >> 3] = +HEAPF64[$1 + 168 + ($26 << 4) >> 3];
 HEAPF64[$4 + 24 >> 3] = +HEAPF64[$1 + 168 + ($26 << 4) + 8 >> 3];
 $34 = (6 - $$0 | 0) % 4 | 0;
 HEAPF64[$4 + 32 >> 3] = +HEAPF64[$1 + 168 + ($34 << 4) >> 3];
 HEAPF64[$4 + 40 >> 3] = +HEAPF64[$1 + 168 + ($34 << 4) + 8 >> 3];
 $42 = (7 - $$0 | 0) % 4 | 0;
 HEAPF64[$4 + 48 >> 3] = +HEAPF64[$1 + 168 + ($42 << 4) >> 3];
 HEAPF64[$4 + 56 >> 3] = +HEAPF64[$1 + 168 + ($42 << 4) + 8 >> 3];
 $49 = $2 * -.5;
 HEAPF64[$5 >> 3] = $49;
 $50 = $2 * .5;
 HEAPF64[$5 + 8 >> 3] = $50;
 HEAPF64[$5 + 16 >> 3] = 0.0;
 HEAPF64[$5 + 24 >> 3] = $50;
 HEAPF64[$5 + 32 >> 3] = $50;
 HEAPF64[$5 + 40 >> 3] = 0.0;
 HEAPF64[$5 + 48 >> 3] = $50;
 HEAPF64[$5 + 56 >> 3] = $49;
 HEAPF64[$5 + 64 >> 3] = 0.0;
 HEAPF64[$5 + 72 >> 3] = $49;
 HEAPF64[$5 + 80 >> 3] = $49;
 HEAPF64[$5 + 88 >> 3] = 0.0;
 HEAP32[$6 >> 2] = $4;
 HEAP32[$6 + 4 >> 2] = $5;
 HEAP32[$6 + 8 >> 2] = 4;
 if ((_icpGetInitXw2Xc_from_PlanarData(HEAP32[$0 >> 2] | 0, $4, $5, 4, $7) | 0) < 0) $$031 = 1.0e8; else {
  $69 = (_icpPoint(HEAP32[$0 >> 2] | 0, $6, $7, $3, $8) | 0) < 0;
  $$031 = $69 ? 1.0e8 : +HEAPF64[$8 >> 3];
 }
 STACKTOP = sp;
 return +$$031;
}

function __ZN12_GLOBAL__N_116itanium_demangle13ParameterPackC2ENS0_9NodeArrayE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$05$i = 0, $$05$i1 = 0, $$05$i3 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $23 = 0, $28 = 0, $29 = 0, $3 = 0, $8 = 0, $9 = 0, label = 0;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0, 27, 1, 1, 1);
 HEAP32[$0 >> 2] = 17912;
 $2 = $0 + 8 | 0;
 $3 = $1;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $2;
 HEAP32[$9 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$9 + 4 >> 2] = $8;
 $13 = $0 + 5 | 0;
 HEAP8[$13 >> 0] = 2;
 $14 = $0 + 7 | 0;
 HEAP8[$14 >> 0] = 2;
 $15 = $0 + 6 | 0;
 HEAP8[$15 >> 0] = 2;
 $16 = __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray5beginEv($2) | 0;
 $17 = __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray3endEv($2) | 0;
 $$05$i = $16;
 while (1) {
  if (($$05$i | 0) == ($17 | 0)) {
   label = 4;
   break;
  }
  if (__ZZN12_GLOBAL__N_116itanium_demangle13ParameterPackC1ENS0_9NodeArrayEENKUlPNS0_4NodeEE_clES4_(HEAP32[$$05$i >> 2] | 0) | 0) $$05$i = $$05$i + 4 | 0; else break;
 }
 if ((label | 0) == 4) HEAP8[$15 >> 0] = 1;
 $22 = __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray5beginEv($2) | 0;
 $23 = __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray3endEv($2) | 0;
 $$05$i1 = $22;
 while (1) {
  if (($$05$i1 | 0) == ($23 | 0)) {
   label = 8;
   break;
  }
  if (__ZZN12_GLOBAL__N_116itanium_demangle13ParameterPackC1ENS0_9NodeArrayEENKUlPNS0_4NodeEE0_clES4_(HEAP32[$$05$i1 >> 2] | 0) | 0) $$05$i1 = $$05$i1 + 4 | 0; else break;
 }
 if ((label | 0) == 8) HEAP8[$14 >> 0] = 1;
 $28 = __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray5beginEv($2) | 0;
 $29 = __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray3endEv($2) | 0;
 $$05$i3 = $28;
 while (1) {
  if (($$05$i3 | 0) == ($29 | 0)) {
   label = 12;
   break;
  }
  if (__ZZN12_GLOBAL__N_116itanium_demangle13ParameterPackC1ENS0_9NodeArrayEENKUlPNS0_4NodeEE1_clES4_(HEAP32[$$05$i3 >> 2] | 0) | 0) $$05$i3 = $$05$i3 + 4 | 0; else break;
 }
 if ((label | 0) == 12) HEAP8[$13 >> 0] = 1;
 return;
}

function _prepare_for_output_pass($0) {
 $0 = $0 | 0;
 var $15 = 0, $2 = 0, $3 = 0, $36 = 0, $74 = 0, $77 = 0, $82 = 0, $83 = 0;
 $2 = HEAP32[$0 + 444 >> 2] | 0;
 $3 = $2 + 8 | 0;
 if (!(HEAP32[$3 >> 2] | 0)) {
  $15 = $0 + 84 | 0;
  do if (HEAP32[$15 >> 2] | 0 ? (HEAP32[$0 + 136 >> 2] | 0) == 0 : 0) {
   if (HEAP32[$0 + 92 >> 2] | 0 ? HEAP32[$0 + 108 >> 2] | 0 : 0) {
    HEAP32[$0 + 484 >> 2] = HEAP32[$2 + 24 >> 2];
    HEAP32[$3 >> 2] = 1;
    break;
   }
   if (!(HEAP32[$0 + 100 >> 2] | 0)) {
    $36 = HEAP32[$0 >> 2] | 0;
    HEAP32[$36 + 20 >> 2] = 47;
    FUNCTION_TABLE_vi[HEAP32[$36 >> 2] & 255]($0);
    break;
   } else {
    HEAP32[$0 + 484 >> 2] = HEAP32[$2 + 20 >> 2];
    break;
   }
  } while (0);
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 + 472 >> 2] >> 2] & 255]($0);
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 + 452 >> 2] | 0) + 8 >> 2] & 255]($0);
  if (!(HEAP32[$0 + 68 >> 2] | 0)) {
   if (!(HEAP32[$2 + 16 >> 2] | 0)) FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 + 480 >> 2] >> 2] & 255]($0);
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 + 476 >> 2] >> 2] & 255]($0);
   if (HEAP32[$15 >> 2] | 0) FUNCTION_TABLE_vii[HEAP32[HEAP32[$0 + 484 >> 2] >> 2] & 255]($0, HEAP32[$3 >> 2] | 0);
   FUNCTION_TABLE_vii[HEAP32[HEAP32[$0 + 456 >> 2] >> 2] & 255]($0, (HEAP32[$3 >> 2] | 0) == 0 ? 0 : 3);
   FUNCTION_TABLE_vii[HEAP32[HEAP32[$0 + 448 >> 2] >> 2] & 255]($0, 0);
  }
 } else {
  HEAP32[$3 >> 2] = 0;
  FUNCTION_TABLE_vii[HEAP32[HEAP32[$0 + 484 >> 2] >> 2] & 255]($0, 0);
  FUNCTION_TABLE_vii[HEAP32[HEAP32[$0 + 456 >> 2] >> 2] & 255]($0, 2);
  FUNCTION_TABLE_vii[HEAP32[HEAP32[$0 + 448 >> 2] >> 2] & 255]($0, 2);
 }
 $74 = HEAP32[$0 + 8 >> 2] | 0;
 if (!$74) return;
 $77 = HEAP32[$2 + 12 >> 2] | 0;
 HEAP32[$74 + 12 >> 2] = $77;
 $82 = ((HEAP32[$3 >> 2] | 0) == 0 ? 1 : 2) + $77 | 0;
 $83 = $74 + 16 | 0;
 HEAP32[$83 >> 2] = $82;
 if (!(HEAP32[$0 + 64 >> 2] | 0)) return;
 if (HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 20 >> 2] | 0) return;
 HEAP32[$83 >> 2] = ((HEAP32[$0 + 108 >> 2] | 0) == 0 ? 1 : 2) + $82;
 return;
}

function _jinit_d_coef_controller($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$05257 = 0, $$05356 = 0, $$pre$phiZ2D = 0, $10 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $24 = 0, $29 = 0, $33 = 0, $34 = 0, $46 = 0, $5 = 0, $spec$select = 0;
 $2 = $0 + 4 | 0;
 $5 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$2 >> 2] >> 2] & 63]($0, 1, 116) | 0;
 HEAP32[$0 + 452 >> 2] = $5;
 HEAP32[$5 >> 2] = 197;
 HEAP32[$5 + 8 >> 2] = 198;
 HEAP32[$5 + 112 >> 2] = 0;
 if (!$1) {
  $46 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 4 >> 2] & 63]($0, 1, 1280) | 0;
  HEAP32[$5 + 32 >> 2] = $46;
  HEAP32[$5 + 36 >> 2] = $46 + 128;
  HEAP32[$5 + 40 >> 2] = $46 + 256;
  HEAP32[$5 + 44 >> 2] = $46 + 384;
  HEAP32[$5 + 48 >> 2] = $46 + 512;
  HEAP32[$5 + 52 >> 2] = $46 + 640;
  HEAP32[$5 + 56 >> 2] = $46 + 768;
  HEAP32[$5 + 60 >> 2] = $46 + 896;
  HEAP32[$5 + 64 >> 2] = $46 + 1024;
  HEAP32[$5 + 68 >> 2] = $46 + 1152;
  if (!(HEAP32[$0 + 436 >> 2] | 0)) _memset($46 | 0, 0, 1280) | 0;
  HEAP32[$5 + 4 >> 2] = 84;
  HEAP32[$5 + 12 >> 2] = 58;
  HEAP32[$5 + 16 >> 2] = 0;
  return;
 }
 $10 = $0 + 36 | 0;
 if ((HEAP32[$10 >> 2] | 0) > 0) {
  $15 = $0 + 224 | 0;
  $16 = $5 + 72 | 0;
  $$05257 = 0;
  $$05356 = HEAP32[$0 + 216 >> 2] | 0;
  while (1) {
   $17 = $$05356 + 12 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   $spec$select = (HEAP32[$15 >> 2] | 0) == 0 ? $18 : $18 * 3 | 0;
   $24 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
   $29 = _jround_up(HEAP32[$$05356 + 28 >> 2] | 0, HEAP32[$$05356 + 8 >> 2] | 0) | 0;
   $33 = _jround_up(HEAP32[$$05356 + 32 >> 2] | 0, HEAP32[$17 >> 2] | 0) | 0;
   $34 = FUNCTION_TABLE_iiiiiii[$24 & 63]($0, 1, 1, $29, $33, $spec$select) | 0;
   HEAP32[$16 + ($$05257 << 2) >> 2] = $34;
   $$05257 = $$05257 + 1 | 0;
   if (($$05257 | 0) >= (HEAP32[$10 >> 2] | 0)) {
    $$pre$phiZ2D = $16;
    break;
   } else $$05356 = $$05356 + 88 | 0;
  }
 } else $$pre$phiZ2D = $5 + 72 | 0;
 HEAP32[$5 + 4 >> 2] = 83;
 HEAP32[$5 + 12 >> 2] = 57;
 HEAP32[$5 + 16 >> 2] = $$pre$phiZ2D;
 return;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseUnscopedNameEPNS5_9NameStateE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy1 = 0, $2 = 0, $3 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy1 = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 55114);
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy1) | 0) ? (__ZN12_GLOBAL__N_110StringViewC2EPKc($3, 55118), HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2], HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$3 + 4 >> 2], !(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0, $$byval_copy1) | 0)) : 0) $$1 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseUnqualifiedNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0, $1) | 0; else {
  $7 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseUnqualifiedNameEPNS5_9NameStateE(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0, $1) | 0;
  HEAP32[$$byval_copy1 >> 2] = $7;
  if (!$7) $$0 = 0; else $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16StdQualifiedNameEJRPNS0_4NodeEEEES9_DpOT0_($0, $$byval_copy1) | 0;
  $$1 = $$0;
 }
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__211__stdoutbufIwE8overflowEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$032 = 0, $$4 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $28 = 0, $3 = 0, $38 = 0, $4 = 0, $5 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 do if (!(__ZNSt3__211char_traitsIwE11eq_int_typeEjj($1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0)) {
  $8 = __ZNSt3__211char_traitsIwE12to_char_typeEj($1) | 0;
  HEAP32[$3 >> 2] = $8;
  if (HEAP8[$0 + 44 >> 0] | 0) {
   if ((_fwrite($3, 4, 1, HEAP32[$0 + 32 >> 2] | 0) | 0) == 1) {
    label = 15;
    break;
   }
   $$4 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   break;
  }
  HEAP32[$4 >> 2] = $2;
  $17 = $3 + 4 | 0;
  $18 = $0 + 36 | 0;
  $19 = $0 + 40 | 0;
  $20 = $2 + 8 | 0;
  $21 = $2;
  $22 = $0 + 32 | 0;
  $$032 = $3;
  while (1) {
   $23 = HEAP32[$18 >> 2] | 0;
   $28 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$23 >> 2] | 0) + 12 >> 2] & 15]($23, HEAP32[$19 >> 2] | 0, $$032, $17, $5, $2, $20, $4) | 0;
   if ((HEAP32[$5 >> 2] | 0) == ($$032 | 0)) {
    label = 14;
    break;
   }
   if (($28 | 0) == 3) {
    label = 8;
    break;
   }
   if ($28 >>> 0 >= 2) {
    label = 14;
    break;
   }
   $38 = (HEAP32[$4 >> 2] | 0) - $21 | 0;
   if ((_fwrite($2, 1, $38, HEAP32[$22 >> 2] | 0) | 0) != ($38 | 0)) {
    label = 14;
    break;
   }
   if (($28 | 0) == 1) $$032 = HEAP32[$5 >> 2] | 0; else {
    label = 13;
    break;
   }
  }
  if ((label | 0) == 8) if ((_fwrite($$032, 1, 1, HEAP32[$22 >> 2] | 0) | 0) == 1) label = 13; else label = 14;
  if ((label | 0) == 13) {
   label = 15;
   break;
  } else if ((label | 0) == 14) {
   $$4 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   break;
  }
 } else label = 15; while (0);
 if ((label | 0) == 15) $$4 = __ZNSt3__211char_traitsIwE7not_eofEj($1) | 0;
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZNSt3__211__stdoutbufIcE8overflowEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$032 = 0, $$4 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $28 = 0, $3 = 0, $38 = 0, $4 = 0, $5 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 do if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) {
  $8 = __ZNSt3__211char_traitsIcE12to_char_typeEi($1) | 0;
  HEAP8[$3 >> 0] = $8;
  if (HEAP8[$0 + 44 >> 0] | 0) {
   if ((_fwrite($3, 1, 1, HEAP32[$0 + 32 >> 2] | 0) | 0) == 1) {
    label = 15;
    break;
   }
   $$4 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   break;
  }
  HEAP32[$4 >> 2] = $2;
  $17 = $3 + 1 | 0;
  $18 = $0 + 36 | 0;
  $19 = $0 + 40 | 0;
  $20 = $2 + 8 | 0;
  $21 = $2;
  $22 = $0 + 32 | 0;
  $$032 = $3;
  while (1) {
   $23 = HEAP32[$18 >> 2] | 0;
   $28 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$23 >> 2] | 0) + 12 >> 2] & 15]($23, HEAP32[$19 >> 2] | 0, $$032, $17, $5, $2, $20, $4) | 0;
   if ((HEAP32[$5 >> 2] | 0) == ($$032 | 0)) {
    label = 14;
    break;
   }
   if (($28 | 0) == 3) {
    label = 8;
    break;
   }
   if ($28 >>> 0 >= 2) {
    label = 14;
    break;
   }
   $38 = (HEAP32[$4 >> 2] | 0) - $21 | 0;
   if ((_fwrite($2, 1, $38, HEAP32[$22 >> 2] | 0) | 0) != ($38 | 0)) {
    label = 14;
    break;
   }
   if (($28 | 0) == 1) $$032 = HEAP32[$5 >> 2] | 0; else {
    label = 13;
    break;
   }
  }
  if ((label | 0) == 8) if ((_fwrite($$032, 1, 1, HEAP32[$22 >> 2] | 0) | 0) == 1) label = 13; else label = 14;
  if ((label | 0) == 13) {
   label = 15;
   break;
  } else if ((label | 0) == 14) {
   $$4 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   break;
  }
 } else label = 15; while (0);
 if ((label | 0) == 15) $$4 = __ZNSt3__211char_traitsIcE7not_eofEi($1) | 0;
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZN6vision11FindInliersERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEEPKfRKNS1_INS_12FeaturePointENS3_IS9_EEEESD_RKS5_f($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 var $$0 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $23 = 0, $24 = 0, $37 = 0.0, $50 = 0, $51 = 0, $54 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0.0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $6 = sp;
 $7 = +__ZN6vision3sqrIfEET_S1_($5);
 $8 = $4 + 4 | 0;
 __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm($0, (HEAP32[$8 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) >> 3);
 $13 = $6 + 4 | 0;
 $14 = $0 + 4 | 0;
 $15 = $0 + 8 | 0;
 $$0 = 0;
 while (1) {
  $17 = HEAP32[$4 >> 2] | 0;
  if ($$0 >>> 0 >= (HEAP32[$8 >> 2] | 0) - $17 >> 3 >>> 0) break;
  $23 = HEAP32[$17 + ($$0 << 3) + 4 >> 2] | 0;
  $24 = HEAP32[$3 >> 2] | 0;
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvRT_S2_PKS1_S1_S1_($6, $13, $1, +HEAPF32[$24 + ($23 * 20 | 0) >> 2], +HEAPF32[$24 + ($23 * 20 | 0) + 4 >> 2]);
  $37 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$6 >> 2] - +HEAPF32[(HEAP32[$2 >> 2] | 0) + ((HEAP32[(HEAP32[$4 >> 2] | 0) + ($$0 << 3) >> 2] | 0) * 20 | 0) >> 2]);
  do if ($37 + +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$13 >> 2] - +HEAPF32[(HEAP32[$2 >> 2] | 0) + ((HEAP32[(HEAP32[$4 >> 2] | 0) + ($$0 << 3) >> 2] | 0) * 20 | 0) + 4 >> 2]) <= $7) {
   $50 = (HEAP32[$4 >> 2] | 0) + ($$0 << 3) | 0;
   $51 = HEAP32[$14 >> 2] | 0;
   if (($51 | 0) == (HEAP32[$15 >> 2] | 0)) {
    __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($0, $50);
    break;
   } else {
    $54 = $50;
    $59 = HEAP32[$54 + 4 >> 2] | 0;
    $60 = $51;
    HEAP32[$60 >> 2] = HEAP32[$54 >> 2];
    HEAP32[$60 + 4 >> 2] = $59;
    HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 8;
    break;
   }
  } while (0);
  $$0 = $$0 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function _ycck_cmyk_convert($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$07890$us = 0, $$08089$us = 0, $$08188$us = 0, $$091$us = 0, $$in = 0, $$neg83$us = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $30 = 0, $33 = 0, $36 = 0, $43 = 0, $46 = 0, $6 = 0, $8 = 0, $$in$looptemp = 0;
 $6 = HEAP32[$0 + 480 >> 2] | 0;
 $8 = HEAP32[$0 + 112 >> 2] | 0;
 $10 = HEAP32[$0 + 336 >> 2] | 0;
 $12 = HEAP32[$6 + 8 >> 2] | 0;
 $14 = HEAP32[$6 + 12 >> 2] | 0;
 $16 = HEAP32[$6 + 16 >> 2] | 0;
 $18 = HEAP32[$6 + 20 >> 2] | 0;
 if (($4 | 0) <= 0) return;
 $20 = $1 + 4 | 0;
 $21 = $1 + 8 | 0;
 $22 = $1 + 12 | 0;
 if (!$8) return;
 $$07890$us = $3;
 $$091$us = $2;
 $$in = $4;
 while (1) {
  $$in$looptemp = $$in;
  $$in = $$in + -1 | 0;
  $27 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($$091$us << 2) >> 2] | 0;
  $30 = HEAP32[(HEAP32[$20 >> 2] | 0) + ($$091$us << 2) >> 2] | 0;
  $33 = HEAP32[(HEAP32[$21 >> 2] | 0) + ($$091$us << 2) >> 2] | 0;
  $36 = HEAP32[(HEAP32[$22 >> 2] | 0) + ($$091$us << 2) >> 2] | 0;
  $$091$us = $$091$us + 1 | 0;
  $$08089$us = HEAP32[$$07890$us >> 2] | 0;
  $$08188$us = 0;
  while (1) {
   $43 = HEAPU8[$30 + $$08188$us >> 0] | 0;
   $46 = HEAPU8[$33 + $$08188$us >> 0] | 0;
   $$neg83$us = ~HEAP8[$27 + $$08188$us >> 0] & 255;
   HEAP8[$$08089$us >> 0] = HEAP8[$10 + ($$neg83$us - (HEAP32[$12 + ($46 << 2) >> 2] | 0)) >> 0] | 0;
   HEAP8[$$08089$us + 1 >> 0] = HEAP8[$10 + ($$neg83$us - ((HEAP32[$16 + ($46 << 2) >> 2] | 0) + (HEAP32[$18 + ($43 << 2) >> 2] | 0) >> 16)) >> 0] | 0;
   HEAP8[$$08089$us + 2 >> 0] = HEAP8[$10 + ($$neg83$us - (HEAP32[$14 + ($43 << 2) >> 2] | 0)) >> 0] | 0;
   HEAP8[$$08089$us + 3 >> 0] = HEAP8[$36 + $$08188$us >> 0] | 0;
   $$08188$us = $$08188$us + 1 | 0;
   if (($$08188$us | 0) == ($8 | 0)) break; else $$08089$us = $$08089$us + 4 | 0;
  }
  if (($$in$looptemp | 0) <= 1) break; else $$07890$us = $$07890$us + 4 | 0;
 }
 return;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE11addKeyframeENSt3__210shared_ptrINS_8KeyframeILi96EEEEEi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $20 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp + 4 | 0;
 $4 = sp;
 HEAP32[$4 >> 2] = $2;
 $5 = $0 + 72 | 0;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_($5, $4) | 0) {
  $8 = ___cxa_allocate_exception(16) | 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($3, 33157, __ZNSt3__211char_traitsIcE6lengthEPKc(33157) | 0);
  __ZN6vision9ExceptionC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($8, $3);
  ___cxa_throw($8 | 0, 13208, 5);
 }
 $10 = __ZNSt3__213unordered_mapIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS5_EEEEEixERSC_($5, $4) | 0;
 $11 = HEAP32[$1 >> 2] | 0;
 HEAP32[$3 >> 2] = $11;
 $12 = $3 + 4 | 0;
 $14 = HEAP32[$1 + 4 >> 2] | 0;
 HEAP32[$12 >> 2] = $14;
 if (!$14) {
  $$pre$phi$iZ2D = $12;
  $22 = 0;
 } else {
  $16 = $14 + 4 | 0;
  HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 1;
  $$pre$phi$iZ2D = $12;
  $22 = HEAP32[$12 >> 2] | 0;
 }
 HEAP32[$3 >> 2] = HEAP32[$10 >> 2];
 HEAP32[$10 >> 2] = $11;
 $20 = $10 + 4 | 0;
 HEAP32[$$pre$phi$iZ2D >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $22;
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function _EV_create($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$071 = 0, $$072 = 0, $$074 = 0, $$075 = 0, $$077 = 0, $$078 = 0.0, $$079 = 0, $$1 = 0, $$173 = 0, $$176 = 0, $$2 = 0, $$3 = 0, $29 = 0.0, $33 = 0.0, $34 = 0, $42 = 0.0, $5 = 0, $7 = 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $7 = HEAP32[$0 + 8 >> 2] | 0;
 L1 : do if (((((!(($5 | 0) < 1 | ($7 | 0) < 1) ? (HEAP32[$1 + 4 >> 2] | 0) == ($5 | 0) : 0) ? (HEAP32[$1 + 8 >> 2] | 0) == ($5 | 0) : 0) ? (HEAP32[$2 + 4 >> 2] | 0) == ($5 | 0) : 0) ? (HEAP32[$2 + 8 >> 2] | 0) == ($7 | 0) : 0) ? (HEAP32[$3 + 4 >> 2] | 0) == ($5 | 0) : 0) {
  $$072 = 0;
  $$075 = HEAP32[$2 >> 2] | 0;
  while (1) {
   if (($$072 | 0) >= ($5 | 0)) break;
   $29 = +HEAPF64[(HEAP32[$3 >> 2] | 0) + ($$072 << 3) >> 3];
   if ($29 < 1.0e-16) break;
   $33 = 1.0 / +Math_sqrt(+(+Math_abs(+$29)));
   $34 = Math_imul($$072, $5) | 0;
   $$071 = 0;
   $$176 = $$075;
   while (1) {
    if (($$071 | 0) == ($7 | 0)) break;
    $$0 = 0;
    $$077 = (HEAP32[$1 >> 2] | 0) + ($34 << 3) | 0;
    $$078 = 0.0;
    $$079 = (HEAP32[$0 >> 2] | 0) + ($$071 << 3) | 0;
    while (1) {
     if (($$0 | 0) == ($5 | 0)) break;
     $42 = $$078 + +HEAPF64[$$077 >> 3] * +HEAPF64[$$079 >> 3];
     $$0 = $$0 + 1 | 0;
     $$077 = $$077 + 8 | 0;
     $$078 = $42;
     $$079 = $$079 + ($7 << 3) | 0;
    }
    HEAPF64[$$176 >> 3] = $33 * $$078;
    $$071 = $$071 + 1 | 0;
    $$176 = $$176 + 8 | 0;
   }
   $$072 = $$072 + 1 | 0;
   $$075 = $$075 + ($7 << 3) | 0;
  }
  $$173 = $$072;
  $$2 = $$075;
  while (1) {
   if (($$173 | 0) >= ($5 | 0)) {
    $$074 = 0;
    break L1;
   }
   HEAPF64[(HEAP32[$3 >> 2] | 0) + ($$173 << 3) >> 3] = 0.0;
   $$1 = 0;
   $$3 = $$2;
   while (1) {
    if (($$1 | 0) >= ($7 | 0)) break;
    HEAPF64[$$3 >> 3] = 0.0;
    $$1 = $$1 + 1 | 0;
    $$3 = $$3 + 8 | 0;
   }
   $$173 = $$173 + 1 | 0;
   $$2 = $$3;
  }
 } else $$074 = -1; while (0);
 return $$074 | 0;
}

function _icpGetJ_T_S($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $13 = 0, $15 = 0, $17 = 0, $2 = 0, $5 = 0, $7 = 0, $9 = 0, dest = 0, stop = 0;
 $1 = $0 + 64 | 0;
 dest = $0;
 stop = dest + 64 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF64[$1 >> 3] = -1.0;
 $2 = $0 + 72 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 HEAP32[$2 + 24 >> 2] = 0;
 HEAP32[$2 + 28 >> 2] = 0;
 HEAPF64[$0 + 104 >> 3] = 1.0;
 $5 = $0 + 160 | 0;
 dest = $0 + 112 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF64[$5 >> 3] = 1.0;
 $7 = $0 + 240 | 0;
 dest = $0 + 168 | 0;
 stop = dest + 72 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF64[$7 >> 3] = -1.0;
 $9 = $0 + 296 | 0;
 dest = $0 + 248 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF64[$9 >> 3] = -1.0;
 $10 = $0 + 304 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$10 + 16 >> 2] = 0;
 HEAP32[$10 + 20 >> 2] = 0;
 HEAP32[$10 + 24 >> 2] = 0;
 HEAP32[$10 + 28 >> 2] = 0;
 HEAPF64[$0 + 336 >> 3] = 1.0;
 $13 = $0 + 456 | 0;
 dest = $0 + 344 | 0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF64[$13 >> 3] = 1.0;
 $15 = $0 + 512 | 0;
 dest = $0 + 464 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF64[$15 >> 3] = 1.0;
 $17 = $0 + 568 | 0;
 dest = $0 + 520 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF64[$17 >> 3] = 1.0;
 return;
}

function ___stpcpy($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$025$lcssa = 0, $$02536 = 0, $$026$lcssa = 0, $$02642 = 0, $$027$lcssa = 0, $$02741 = 0, $$030 = 0, $$037 = 0, $$1 = 0, $$128 = 0, $$22934 = 0, $$235 = 0, $11 = 0, $12 = 0, $16 = 0, $2 = 0, $22 = 0, $23 = 0, $24 = 0, $31 = 0, $34 = 0, $35 = 0, $9 = 0, label = 0;
 $2 = $1;
 L1 : do if (!(($2 ^ $0) & 3)) {
  if (!($2 & 3)) {
   $$026$lcssa = $1;
   $$027$lcssa = $0;
  } else {
   $$02642 = $1;
   $$02741 = $0;
   while (1) {
    $9 = HEAP8[$$02642 >> 0] | 0;
    HEAP8[$$02741 >> 0] = $9;
    if (!($9 << 24 >> 24)) {
     $$030 = $$02741;
     break L1;
    }
    $11 = $$02642 + 1 | 0;
    $12 = $$02741 + 1 | 0;
    if (!($11 & 3)) {
     $$026$lcssa = $11;
     $$027$lcssa = $12;
     break;
    } else {
     $$02642 = $11;
     $$02741 = $12;
    }
   }
  }
  $16 = HEAP32[$$026$lcssa >> 2] | 0;
  if (!(($16 & -2139062144 ^ -2139062144) & $16 + -16843009)) {
   $$02536 = $$027$lcssa;
   $$037 = $$026$lcssa;
   $24 = $16;
   while (1) {
    $22 = $$037 + 4 | 0;
    $23 = $$02536 + 4 | 0;
    HEAP32[$$02536 >> 2] = $24;
    $24 = HEAP32[$22 >> 2] | 0;
    if (($24 & -2139062144 ^ -2139062144) & $24 + -16843009 | 0) {
     $$0$lcssa = $22;
     $$025$lcssa = $23;
     break;
    } else {
     $$02536 = $23;
     $$037 = $22;
    }
   }
  } else {
   $$0$lcssa = $$026$lcssa;
   $$025$lcssa = $$027$lcssa;
  }
  $$1 = $$0$lcssa;
  $$128 = $$025$lcssa;
  label = 10;
 } else {
  $$1 = $1;
  $$128 = $0;
  label = 10;
 } while (0);
 if ((label | 0) == 10) {
  $31 = HEAP8[$$1 >> 0] | 0;
  HEAP8[$$128 >> 0] = $31;
  if (!($31 << 24 >> 24)) $$030 = $$128; else {
   $$22934 = $$128;
   $$235 = $$1;
   while (1) {
    $$235 = $$235 + 1 | 0;
    $34 = $$22934 + 1 | 0;
    $35 = HEAP8[$$235 >> 0] | 0;
    HEAP8[$34 >> 0] = $35;
    if (!($35 << 24 >> 24)) {
     $$030 = $34;
     break;
    } else $$22934 = $34;
   }
  }
 }
 return $$030 | 0;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $13 = 0, $14 = 0, $17 = 0, $18 = 0, $21 = 0, $31 = 0, $36 = 0, $39 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select = 0;
 $4 = $1;
 $6 = ($2 - $4 | 0) / 12 | 0;
 $7 = $0 + 8 | 0;
 $9 = HEAP32[$0 >> 2] | 0;
 $13 = $9;
 do if ($6 >>> 0 > (((HEAP32[$7 >> 2] | 0) - $9 | 0) / 12 | 0) >>> 0) {
  __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE13__vdeallocateEv($0);
  $31 = __ZNKSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE8max_sizeEv($0) | 0;
  if ($31 >>> 0 < $6 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $36 = ((HEAP32[$7 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 12 | 0;
   $39 = $36 << 1;
   __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE11__vallocateEm($0, $36 >>> 0 < $31 >>> 1 >>> 0 ? ($39 >>> 0 < $6 >>> 0 ? $6 : $39) : $31);
   __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_m($0, $1, $2, $6);
   break;
  }
 } else {
  $14 = $0 + 4 | 0;
  $17 = ((HEAP32[$14 >> 2] | 0) - $9 | 0) / 12 | 0;
  $18 = $6 >>> 0 > $17 >>> 0;
  $spec$select = $18 ? $1 + ($17 * 12 | 0) | 0 : $2;
  $21 = $spec$select - $4 | 0;
  if ($21 | 0) _memmove($9 | 0, $1 | 0, $21 | 0) | 0;
  if ($18) {
   __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_m($0, $spec$select, $2, $6 - (((HEAP32[$14 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 12 | 0) | 0);
   break;
  } else {
   HEAP32[$14 >> 2] = $13 + ((($21 | 0) / 12 | 0) * 12 | 0);
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$038 = 0, $$sroa$0$2 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $19 = 0, $38 = 0, $39 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $6 = sp;
 $7 = HEAP32[$0 >> 2] | 0;
 L1 : do if (!$7) $$sroa$0$2 = 0; else {
  $9 = $3;
  $10 = $1;
  $12 = $9 - $10 >> 2;
  $13 = $4 + 12 | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  $$038 = ($14 | 0) > ($12 | 0) ? $14 - $12 | 0 : 0;
  $17 = $2;
  $18 = $17 - $10 | 0;
  $19 = $18 >> 2;
  if (($18 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $1, $19) | 0) != ($19 | 0) : 0) {
   HEAP32[$0 >> 2] = 0;
   $$sroa$0$2 = 0;
   break;
  }
  do if (($$038 | 0) > 0) {
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw($6, $$038, $5);
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, (HEAP8[$6 + 8 + 3 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6, $$038) | 0) == ($$038 | 0)) {
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
    break;
   } else {
    HEAP32[$0 >> 2] = 0;
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
    $$sroa$0$2 = 0;
    break L1;
   }
  } while (0);
  $38 = $9 - $17 | 0;
  $39 = $38 >> 2;
  if (($38 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $2, $39) | 0) != ($39 | 0) : 0) {
   HEAP32[$0 >> 2] = 0;
   $$sroa$0$2 = 0;
   break;
  }
  HEAP32[$13 >> 2] = 0;
  $$sroa$0$2 = $7;
 } while (0);
 STACKTOP = sp;
 return $$sroa$0$2 | 0;
}

function __ZNK12_GLOBAL__N_116itanium_demangle9ArrayType10printRightERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy3 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy3 = sp + 32 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 16 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 if ((__ZNK12_GLOBAL__N_112OutputStream4backEv($1) | 0) << 24 >> 24 != 93) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 51966);
  HEAP32[$$byval_copy3 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy3 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy3);
 }
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 55925);
 HEAP32[$$byval_copy3 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy3 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy3);
 $8 = $0 + 12 | 0;
 if (!(__ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString8isStringEv($8) | 0)) {
  if (__ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString6isNodeEv($8) | 0) __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(__ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString6asNodeEv($8) | 0, $1);
 } else {
  __ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString8asStringEv($4, $8);
  HEAP32[$$byval_copy3 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$$byval_copy3 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy3);
 }
 __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 51614);
 HEAP32[$$byval_copy3 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$$byval_copy3 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy3);
 $13 = HEAP32[$0 + 8 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$13 >> 2] | 0) + 20 >> 2] & 255]($13, $1);
 STACKTOP = sp;
 return;
}

function _arGetTransMatSquareCont($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = +$3;
 $4 = $4 | 0;
 var $$0 = 0, $$0$in = 0, $19 = 0, $26 = 0, $34 = 0, $42 = 0, $49 = 0.0, $5 = 0, $50 = 0.0, $6 = 0, $66 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(192);
 $5 = sp + 96 | 0;
 $6 = sp;
 $7 = sp + 168 | 0;
 $8 = sp + 160 | 0;
 do if ((HEAP32[$1 + 12 >> 2] | 0) >= 0) if ((HEAP32[$1 + 8 >> 2] | 0) < 0) {
  $$0$in = $1 + 24 | 0;
  break;
 } else {
  $$0$in = $1 + 16 | 0;
  break;
 } else $$0$in = $1 + 20 | 0; while (0);
 $$0 = HEAP32[$$0$in >> 2] | 0;
 $19 = (4 - $$0 | 0) % 4 | 0;
 HEAPF64[$5 >> 3] = +HEAPF64[$1 + 168 + ($19 << 4) >> 3];
 HEAPF64[$5 + 8 >> 3] = +HEAPF64[$1 + 168 + ($19 << 4) + 8 >> 3];
 $26 = (5 - $$0 | 0) % 4 | 0;
 HEAPF64[$5 + 16 >> 3] = +HEAPF64[$1 + 168 + ($26 << 4) >> 3];
 HEAPF64[$5 + 24 >> 3] = +HEAPF64[$1 + 168 + ($26 << 4) + 8 >> 3];
 $34 = (6 - $$0 | 0) % 4 | 0;
 HEAPF64[$5 + 32 >> 3] = +HEAPF64[$1 + 168 + ($34 << 4) >> 3];
 HEAPF64[$5 + 40 >> 3] = +HEAPF64[$1 + 168 + ($34 << 4) + 8 >> 3];
 $42 = (7 - $$0 | 0) % 4 | 0;
 HEAPF64[$5 + 48 >> 3] = +HEAPF64[$1 + 168 + ($42 << 4) >> 3];
 HEAPF64[$5 + 56 >> 3] = +HEAPF64[$1 + 168 + ($42 << 4) + 8 >> 3];
 $49 = $3 * -.5;
 HEAPF64[$6 >> 3] = $49;
 $50 = $3 * .5;
 HEAPF64[$6 + 8 >> 3] = $50;
 HEAPF64[$6 + 16 >> 3] = 0.0;
 HEAPF64[$6 + 24 >> 3] = $50;
 HEAPF64[$6 + 32 >> 3] = $50;
 HEAPF64[$6 + 40 >> 3] = 0.0;
 HEAPF64[$6 + 48 >> 3] = $50;
 HEAPF64[$6 + 56 >> 3] = $49;
 HEAPF64[$6 + 64 >> 3] = 0.0;
 HEAPF64[$6 + 72 >> 3] = $49;
 HEAPF64[$6 + 80 >> 3] = $49;
 HEAPF64[$6 + 88 >> 3] = 0.0;
 HEAP32[$7 >> 2] = $5;
 HEAP32[$7 + 4 >> 2] = $6;
 HEAP32[$7 + 8 >> 2] = 4;
 $66 = (_icpPoint(HEAP32[$0 >> 2] | 0, $7, $2, $4, $8) | 0) < 0;
 STACKTOP = sp;
 return +($66 ? 1.0e8 : +HEAPF64[$8 >> 3]);
}

function __ZNK12_GLOBAL__N_116itanium_demangle13ReferenceType9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy2 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 40 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 32 | 0;
 $5 = sp + 16 | 0;
 $6 = sp;
 $7 = $0 + 16 | 0;
 if (!(HEAP8[$7 >> 0] | 0)) {
  __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($2, $7, 1);
  __ZNK12_GLOBAL__N_116itanium_demangle13ReferenceType8collapseERNS_12OutputStreamE($3, $0, $1);
  $11 = HEAP32[$3 + 4 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] & 255]($11, $1);
  if (__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE($11, $1) | 0) {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 51966);
   HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
  }
  if (!(__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE($11, $1) | 0) ? !(__ZNK12_GLOBAL__N_116itanium_demangle4Node11hasFunctionERNS_12OutputStreamE($11, $1) | 0) : 0) {} else {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 51968);
   HEAP32[$$byval_copy2 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
  }
  __ZN12_GLOBAL__N_110StringViewC2EPKc($6, (HEAP32[$3 >> 2] | 0) == 0 ? 51970 : 51972);
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
  __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($2);
 }
 STACKTOP = sp;
 return;
}

function __ZNK12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIdE9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $$0$idx = 0, $$034 = 0, $$07$i$i = 0, $$byval_copy = 0, $15 = 0, $18 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $scevgep = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy = sp + 40 | 0;
 $2 = sp + 32 | 0;
 $3 = sp;
 $4 = sp + 48 | 0;
 $5 = $0 + 8 | 0;
 $6 = __ZNK12_GLOBAL__N_110StringView5beginEv($5) | 0;
 if (((__ZNK12_GLOBAL__N_110StringView3endEv($5) | 0) + 1 - $6 | 0) >>> 0 > 16) {
  $scevgep = $2 + 8 | 0;
  $$0$idx = 0;
  $$034 = $2;
  while (1) {
   if (($$0$idx | 0) == 16) break;
   $15 = HEAP8[$6 + $$0$idx >> 0] | 0;
   $18 = HEAP8[$6 + ($$0$idx | 1) >> 0] | 0;
   HEAP8[$$034 >> 0] = (($18 + -48 | 0) >>> 0 < 10 ? 208 : 169) + $18 + ((($15 + -48 | 0) >>> 0 < 10 ? 0 : 9) + $15 << 4);
   $$0$idx = $$0$idx + 2 | 0;
   $$034 = $$034 + 1 | 0;
  }
  $$0$i$i = $scevgep;
  $$07$i$i = $2;
  while (1) {
   $24 = $$0$i$i + -1 | 0;
   if ($$07$i$i >>> 0 >= $24 >>> 0) break;
   $26 = HEAP8[$$07$i$i >> 0] | 0;
   HEAP8[$$07$i$i >> 0] = HEAP8[$24 >> 0] | 0;
   HEAP8[$24 >> 0] = $26;
   $$0$i$i = $24;
   $$07$i$i = $$07$i$i + 1 | 0;
  }
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  HEAP32[$3 + 12 >> 2] = 0;
  HEAP32[$3 + 16 >> 2] = 0;
  HEAP32[$3 + 20 >> 2] = 0;
  HEAP32[$3 + 24 >> 2] = 0;
  HEAP32[$3 + 28 >> 2] = 0;
  HEAPF64[$$byval_copy >> 3] = +HEAPF64[$2 >> 3];
  __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($4, $3, $3 + (_snprintf($3, 32, 52392, $$byval_copy) | 0) | 0);
  HEAP32[$$byval_copy >> 2] = HEAP32[$4 >> 2];
  HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy);
 }
 STACKTOP = sp;
 return;
}

function __ZN6vision27OrthogonalizePivot8x9Basis2IfEEbPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0.0, $17 = 0.0, $19 = 0.0, $2 = 0, $21 = 0.0, $23 = 0.0, $25 = 0.0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 72 | 0;
 $4 = $0 + 36 | 0;
 $5 = $1 + 72 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($3, $4, $5);
 $6 = $0 + 108 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($6, $4, $1 + 108 | 0);
 $8 = $0 + 144 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($8, $4, $1 + 144 | 0);
 $10 = $0 + 180 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($10, $4, $1 + 180 | 0);
 $12 = $0 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($12, $4, $1 + 216 | 0);
 $14 = $0 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($14, $4, $1 + 252 | 0);
 $16 = +__ZN6vision11SumSquares9IfEET_PKS1_($3);
 HEAPF32[$2 >> 2] = $16;
 $17 = +__ZN6vision11SumSquares9IfEET_PKS1_($6);
 HEAPF32[$2 + 4 >> 2] = $17;
 $19 = +__ZN6vision11SumSquares9IfEET_PKS1_($8);
 HEAPF32[$2 + 8 >> 2] = $19;
 $21 = +__ZN6vision11SumSquares9IfEET_PKS1_($10);
 HEAPF32[$2 + 12 >> 2] = $21;
 $23 = +__ZN6vision11SumSquares9IfEET_PKS1_($12);
 HEAPF32[$2 + 16 >> 2] = $23;
 $25 = +__ZN6vision11SumSquares9IfEET_PKS1_($14);
 HEAPF32[$2 + 20 >> 2] = $25;
 $27 = __ZN6vision9MaxIndex6IfEEiPKT_($2) | 0;
 $28 = $2 + ($27 << 2) | 0;
 if (+HEAPF32[$28 >> 2] == 0.0) $$0 = 0; else {
  $31 = $27 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_($3, $3 + ($31 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_($5, $5 + ($31 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($3, $3, 1.0 / +Math_sqrt(+(+HEAPF32[$28 >> 2])));
  $$0 = 1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _quantize_ord_dither($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$06067$us79 = 0, $$06173 = 0, $$06173$us = 0, $$06269$us77 = 0, $$06366$us80 = 0, $$06465$us81 = 0, $$068$us78 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $24 = 0, $26 = 0, $5 = 0, $7 = 0, $9 = 0;
 $5 = HEAP32[$0 + 484 >> 2] | 0;
 $7 = HEAP32[$0 + 120 >> 2] | 0;
 $9 = HEAP32[$0 + 112 >> 2] | 0;
 if (($3 | 0) <= 0) return;
 $11 = $5 + 48 | 0;
 $13 = $5 + 24 | 0;
 $14 = ($9 | 0) == 0;
 if (($7 | 0) <= 0) {
  $$06173 = 0;
  do {
   _memset(HEAP32[$2 + ($$06173 << 2) >> 2] | 0, 0, $9 | 0) | 0;
   HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 1 & 15;
   $$06173 = $$06173 + 1 | 0;
  } while (($$06173 | 0) != ($3 | 0));
  return;
 }
 $$06173$us = 0;
 do {
  $15 = $2 + ($$06173$us << 2) | 0;
  _memset(HEAP32[$15 >> 2] | 0, 0, $9 | 0) | 0;
  $17 = HEAP32[$11 >> 2] | 0;
  $18 = $1 + ($$06173$us << 2) | 0;
  if (!$14) {
   $$06269$us77 = 0;
   do {
    $24 = HEAP32[(HEAP32[$13 >> 2] | 0) + ($$06269$us77 << 2) >> 2] | 0;
    $26 = HEAP32[$5 + 52 + ($$06269$us77 << 2) >> 2] | 0;
    $$06067$us79 = $9;
    $$06366$us80 = HEAP32[$15 >> 2] | 0;
    $$06465$us81 = 0;
    $$068$us78 = (HEAP32[$18 >> 2] | 0) + $$06269$us77 | 0;
    while (1) {
     HEAP8[$$06366$us80 >> 0] = (HEAPU8[$$06366$us80 >> 0] | 0) + (HEAPU8[$24 + ((HEAP32[$26 + ($17 << 6) + ($$06465$us81 << 2) >> 2] | 0) + (HEAPU8[$$068$us78 >> 0] | 0)) >> 0] | 0);
     $$06067$us79 = $$06067$us79 + -1 | 0;
     if (!$$06067$us79) break; else {
      $$06366$us80 = $$06366$us80 + 1 | 0;
      $$06465$us81 = $$06465$us81 + 1 & 15;
      $$068$us78 = $$068$us78 + $7 | 0;
     }
    }
    $$06269$us77 = $$06269$us77 + 1 | 0;
   } while (($$06269$us77 | 0) != ($7 | 0));
  }
  HEAP32[$11 >> 2] = $17 + 1 & 15;
  $$06173$us = $$06173$us + 1 | 0;
 } while (($$06173$us | 0) != ($3 | 0));
 return;
}

function ___fdopen($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $11 = 0, $12 = 0, $16 = 0, $2 = 0, $21 = 0, $26 = 0, $28 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 40 | 0;
 if (_strchr(50840, HEAP8[$1 >> 0] | 0) | 0) {
  $8 = _malloc(1176) | 0;
  if (!$8) $$0 = 0; else {
   _memset($8 | 0, 0, 144) | 0;
   $11 = (_strchr($1, 43) | 0) == 0;
   $12 = HEAP8[$1 >> 0] | 0;
   if ($11) HEAP32[$8 >> 2] = $12 << 24 >> 24 == 114 ? 8 : 4;
   if ($12 << 24 >> 24 == 97) {
    HEAP32[$vararg_buffer >> 2] = $0;
    HEAP32[$vararg_buffer + 4 >> 2] = 3;
    $16 = ___syscall221(221, $vararg_buffer | 0) | 0;
    if (!($16 & 1024)) {
     HEAP32[$vararg_buffer2 >> 2] = $0;
     HEAP32[$vararg_buffer2 + 4 >> 2] = 4;
     HEAP32[$vararg_buffer2 + 8 >> 2] = $16 | 1024;
     ___syscall221(221, $vararg_buffer2 | 0) | 0;
    }
    $21 = HEAP32[$8 >> 2] | 128;
    HEAP32[$8 >> 2] = $21;
    $28 = $21;
   } else $28 = HEAP32[$8 >> 2] | 0;
   HEAP32[$8 + 60 >> 2] = $0;
   HEAP32[$8 + 44 >> 2] = $8 + 152;
   HEAP32[$8 + 48 >> 2] = 1024;
   $26 = $8 + 75 | 0;
   HEAP8[$26 >> 0] = -1;
   if (($28 & 8 | 0) == 0 ? (HEAP32[$vararg_buffer7 >> 2] = $0, HEAP32[$vararg_buffer7 + 4 >> 2] = 21523, HEAP32[$vararg_buffer7 + 8 >> 2] = $2, (___syscall54(54, $vararg_buffer7 | 0) | 0) == 0) : 0) HEAP8[$26 >> 0] = 10;
   HEAP32[$8 + 32 >> 2] = 2;
   HEAP32[$8 + 36 >> 2] = 1;
   HEAP32[$8 + 40 >> 2] = 1;
   HEAP32[$8 + 12 >> 2] = 2;
   if (!(HEAP32[16328] | 0)) HEAP32[$8 + 76 >> 2] = -1;
   ___ofl_add($8) | 0;
   $$0 = $8;
  }
 } else {
  $7 = ___errno_location() | 0;
  HEAP32[$7 >> 2] = 28;
  $$0 = 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _setMarkerInfoVertex($id, $markerIndex) {
 $id = $id | 0;
 $markerIndex = $markerIndex | 0;
 var $1 = 0, $10 = 0.0, $11 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $arhandle = 0, $id$addr = 0, $retval$1 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(65260, $id$addr) | 0) {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(65260, $id$addr) | 0) + 216 | 0;
  $1 = HEAP32[$arhandle >> 2] | 0;
  if ((HEAP32[$1 + 44 >> 2] | 0) > ($markerIndex | 0)) {
   $spec$select = ($markerIndex | 0) < 0 ? 64312 : $1 + 48 + ($markerIndex << 8) | 0;
   $4 = +HEAPF64[7642];
   HEAPF64[$spec$select + 168 >> 3] = $4;
   $5 = +HEAPF64[7643];
   HEAPF64[$spec$select + 176 >> 3] = $5;
   $6 = +HEAPF64[7644];
   HEAPF64[$spec$select + 184 >> 3] = $6;
   $7 = +HEAPF64[7645];
   HEAPF64[$spec$select + 192 >> 3] = $7;
   $8 = +HEAPF64[7646];
   HEAPF64[$spec$select + 200 >> 3] = $8;
   $9 = +HEAPF64[7647];
   HEAPF64[$spec$select + 208 >> 3] = $9;
   $10 = +HEAPF64[7648];
   HEAPF64[$spec$select + 216 >> 3] = $10;
   $11 = +HEAPF64[7649];
   HEAPF64[$spec$select + 224 >> 3] = $11;
   HEAPF64[$spec$select + 56 >> 3] = ($4 + $6 + $8 + $10) * .25;
   HEAPF64[$spec$select + 64 >> 3] = ($5 + $7 + $9 + $11) * .25;
   $retval$1 = 0;
   break;
  } else {
   $retval$1 = HEAP32[4226] | 0;
   break;
  }
 } else $retval$1 = HEAP32[4224] | 0; while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function _jinit_2pass_quantizer($0) {
 $0 = $0 | 0;
 var $$054 = 0, $1 = 0, $12 = 0, $17 = 0, $18 = 0, $22 = 0, $31 = 0, $33 = 0, $39 = 0, $4 = 0, $47 = 0, $51 = 0, $61 = 0, $7 = 0;
 $1 = $0 + 4 | 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 44) | 0;
 HEAP32[$0 + 484 >> 2] = $4;
 HEAP32[$4 >> 2] = 134;
 HEAP32[$4 + 12 >> 2] = 188;
 $7 = $4 + 32 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$4 + 40 >> 2] = 0;
 if ((HEAP32[$0 + 120 >> 2] | 0) != 3) {
  $12 = HEAP32[$0 >> 2] | 0;
  HEAP32[$12 + 20 >> 2] = 48;
  FUNCTION_TABLE_vi[HEAP32[$12 >> 2] & 255]($0);
 }
 $17 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 128) | 0;
 $18 = $4 + 24 | 0;
 HEAP32[$18 >> 2] = $17;
 $$054 = 0;
 do {
  $22 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 63]($0, 1, 4096) | 0;
  HEAP32[(HEAP32[$18 >> 2] | 0) + ($$054 << 2) >> 2] = $22;
  $$054 = $$054 + 1 | 0;
 } while (($$054 | 0) != 32);
 HEAP32[$4 + 28 >> 2] = 1;
 if (!(HEAP32[$0 + 108 >> 2] | 0)) HEAP32[$4 + 16 >> 2] = 0; else {
  $31 = HEAP32[$0 + 96 >> 2] | 0;
  if (($31 | 0) >= 8) {
   if (($31 | 0) > 256) {
    $39 = HEAP32[$0 >> 2] | 0;
    HEAP32[$39 + 20 >> 2] = 59;
    HEAP32[$39 + 24 >> 2] = 256;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   }
  } else {
   $33 = HEAP32[$0 >> 2] | 0;
   HEAP32[$33 + 20 >> 2] = 58;
   HEAP32[$33 + 24 >> 2] = 8;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  }
  $47 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 15]($0, 1, $31, 3) | 0;
  HEAP32[$4 + 16 >> 2] = $47;
  HEAP32[$4 + 20 >> 2] = $31;
 }
 $51 = $0 + 88 | 0;
 if (!(HEAP32[$51 >> 2] | 0)) return;
 HEAP32[$51 >> 2] = 2;
 $61 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 63]($0, 1, ((HEAP32[$0 + 112 >> 2] | 0) * 6 | 0) + 12 | 0) | 0;
 HEAP32[$7 >> 2] = $61;
 _init_error_limit($0);
 return;
}

function ___stdio_write($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$048 = 0, $$049 = 0, $$050 = 0, $$052 = 0, $$153 = 0, $$156$ph = 0, $10 = 0, $14 = 0, $20 = 0, $22 = 0, $27 = 0, $3 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp;
 $4 = sp + 16 | 0;
 $5 = $0 + 28 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 HEAP32[$3 >> 2] = $6;
 $8 = $0 + 20 | 0;
 $10 = (HEAP32[$8 >> 2] | 0) - $6 | 0;
 HEAP32[$3 + 4 >> 2] = $10;
 HEAP32[$3 + 8 >> 2] = $1;
 HEAP32[$3 + 12 >> 2] = $2;
 $14 = $0 + 60 | 0;
 $$049 = 2;
 $$050 = $10 + $2 | 0;
 $$052 = $3;
 while (1) {
  if (!(___wasi_syscall_ret(___wasi_fd_write(HEAP32[$14 >> 2] | 0, $$052 | 0, $$049 | 0, $4 | 0) | 0) | 0)) $20 = HEAP32[$4 >> 2] | 0; else {
   HEAP32[$4 >> 2] = -1;
   $20 = -1;
  }
  if (($$050 | 0) == ($20 | 0)) {
   label = 6;
   break;
  }
  if (($20 | 0) < 0) {
   label = 8;
   break;
  }
  $38 = HEAP32[$$052 + 4 >> 2] | 0;
  $39 = $20 >>> 0 > $38 >>> 0;
  $$153 = $39 ? $$052 + 8 | 0 : $$052;
  $$048 = $20 - ($39 ? $38 : 0) | 0;
  HEAP32[$$153 >> 2] = (HEAP32[$$153 >> 2] | 0) + $$048;
  $45 = $$153 + 4 | 0;
  HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) - $$048;
  $$049 = $$049 + ($39 << 31 >> 31) | 0;
  $$050 = $$050 - $20 | 0;
  $$052 = $$153;
 }
 if ((label | 0) == 6) {
  $22 = HEAP32[$0 + 44 >> 2] | 0;
  HEAP32[$0 + 16 >> 2] = $22 + (HEAP32[$0 + 48 >> 2] | 0);
  $27 = $22;
  HEAP32[$5 >> 2] = $27;
  HEAP32[$8 >> 2] = $27;
  $$156$ph = $2;
 } else if ((label | 0) == 8) {
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$5 >> 2] = 0;
  HEAP32[$8 >> 2] = 0;
  HEAP32[$0 >> 2] = HEAP32[$0 >> 2] | 32;
  if (($$049 | 0) == 2) $$156$ph = 0; else $$156$ph = $2 - (HEAP32[$$052 + 4 >> 2] | 0) | 0;
 }
 STACKTOP = sp;
 return $$156$ph | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EEaSEOS4_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $14 = 0, $2 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $5 = 0, $9 = 0;
 $2 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE8isInlineEv($1) | 0;
 $3 = __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE8isInlineEv($0) | 0;
 do if (!$2) if ($3) {
  HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE11clearInlineEv($1);
  break;
 } else {
  $23 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$1 >> 2] = $23;
  $25 = $0 + 4 | 0;
  $26 = $1 + 4 | 0;
  $27 = HEAP32[$25 >> 2] | 0;
  HEAP32[$25 >> 2] = HEAP32[$26 >> 2];
  HEAP32[$26 >> 2] = $27;
  $29 = $0 + 8 | 0;
  $30 = $1 + 8 | 0;
  $31 = HEAP32[$29 >> 2] | 0;
  HEAP32[$29 >> 2] = HEAP32[$30 >> 2];
  HEAP32[$30 >> 2] = $31;
  __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE5clearEv($1);
  break;
 } else {
  if (!$3) {
   _free(HEAP32[$0 >> 2] | 0);
   __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE11clearInlineEv($0);
  }
  $5 = __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE5beginEv($1) | 0;
  $9 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE3endEv($1) | 0) - $5 | 0;
  if ($9 | 0) _memmove(HEAP32[$0 >> 2] | 0, $5 | 0, $9 | 0) | 0;
  $12 = HEAP32[$0 >> 2] | 0;
  $14 = $12 + ((__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE4sizeEv($1) | 0) << 2) | 0;
  HEAP32[$0 + 4 >> 2] = $14;
  __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE5clearEv($1);
 } while (0);
 return;
}

function _ar2ScreenCoord2MarkerCoord($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 $3 = +$3;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$055 = 0.0, $$056 = 0.0, $$057 = 0.0, $$058 = 0.0, $$059 = 0.0, $$sink = 0.0, $$sink60 = 0.0, $11 = 0.0, $16 = 0.0, $32 = 0.0, $43 = 0.0, $44 = 0.0, $49 = 0.0, $54 = 0.0, $6 = 0, $66 = 0.0, $7 = 0, $72 = 0.0, $75 = 0.0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $6 = sp + 52 | 0;
 $7 = sp + 48 | 0;
 $8 = sp;
 if ($0) if ((_arParamObserv2IdealLTf($0 + 184 | 0, $2, $3, $6, $7) | 0) < 0) $$0 = -1; else {
  _arUtilMatMuldff($0 + 8 | 0, $1, $8) | 0;
  $43 = +HEAPF32[$8 + 32 >> 2];
  $44 = +HEAPF32[$6 >> 2];
  $49 = +HEAPF32[$8 + 36 >> 2];
  $54 = +HEAPF32[$7 >> 2];
  $66 = +HEAPF32[$8 + 44 >> 2];
  $$055 = +HEAPF32[$8 + 12 >> 2] - $44 * $66;
  $$056 = $49 * $54 - +HEAPF32[$8 + 20 >> 2];
  $$057 = $43 * $54 - +HEAPF32[$8 + 16 >> 2];
  $$058 = $44 * $49 - +HEAPF32[$8 + 4 >> 2];
  $$059 = $43 * $44 - +HEAPF32[$8 >> 2];
  $$sink = +HEAPF32[$8 + 28 >> 2];
  $$sink60 = $54 * $66;
  label = 5;
 } else {
  $11 = +HEAPF32[$1 + 32 >> 2];
  $16 = +HEAPF32[$1 + 36 >> 2];
  $32 = +HEAPF32[$1 + 44 >> 2];
  $$055 = +HEAPF32[$1 + 12 >> 2] - $32 * $2;
  $$056 = $16 * $3 - +HEAPF32[$1 + 20 >> 2];
  $$057 = $11 * $3 - +HEAPF32[$1 + 16 >> 2];
  $$058 = $16 * $2 - +HEAPF32[$1 + 4 >> 2];
  $$059 = $11 * $2 - +HEAPF32[$1 >> 2];
  $$sink = +HEAPF32[$1 + 28 >> 2];
  $$sink60 = $32 * $3;
  label = 5;
 }
 if ((label | 0) == 5) {
  $72 = $$sink - $$sink60;
  $75 = $$059 * $$056 - $$058 * $$057;
  if ($75 == 0.0) $$0 = -1; else {
   HEAPF32[$4 >> 2] = ($$056 * $$055 - $$058 * $72) / $75;
   HEAPF32[$5 >> 2] = ($$059 * $72 - $$057 * $$055) / $75;
   $$0 = 0;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function ___vfprintf_internal($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$1 = 0, $15 = 0, $16 = 0, $21 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $30 = 0, $31 = 0, $37 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $spec$select = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(224);
 $5 = sp + 208 | 0;
 $6 = sp + 160 | 0;
 $7 = sp + 80 | 0;
 $8 = sp;
 dest = $6;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$5 >> 2] = HEAP32[$2 >> 2];
 if ((_printf_core(0, $1, $5, $7, $6, $3, $4) | 0) < 0) $$0 = -1; else {
  if ((HEAP32[$0 + 76 >> 2] | 0) > -1) $42 = ___lockfile($0) | 0; else $42 = 0;
  $15 = HEAP32[$0 >> 2] | 0;
  $16 = $15 & 32;
  if ((HEAP8[$0 + 74 >> 0] | 0) < 1) HEAP32[$0 >> 2] = $15 & -33;
  $21 = $0 + 48 | 0;
  if (!(HEAP32[$21 >> 2] | 0)) {
   $25 = $0 + 44 | 0;
   $26 = HEAP32[$25 >> 2] | 0;
   HEAP32[$25 >> 2] = $8;
   $27 = $0 + 28 | 0;
   HEAP32[$27 >> 2] = $8;
   $28 = $0 + 20 | 0;
   HEAP32[$28 >> 2] = $8;
   HEAP32[$21 >> 2] = 80;
   $30 = $0 + 16 | 0;
   HEAP32[$30 >> 2] = $8 + 80;
   $31 = _printf_core($0, $1, $5, $7, $6, $3, $4) | 0;
   if (!$26) $$1 = $31; else {
    FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, 0, 0) | 0;
    $spec$select = (HEAP32[$28 >> 2] | 0) == 0 ? -1 : $31;
    HEAP32[$25 >> 2] = $26;
    HEAP32[$21 >> 2] = 0;
    HEAP32[$30 >> 2] = 0;
    HEAP32[$27 >> 2] = 0;
    HEAP32[$28 >> 2] = 0;
    $$1 = $spec$select;
   }
  } else $$1 = _printf_core($0, $1, $5, $7, $6, $3, $4) | 0;
  $37 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $37 | $16;
  if ($42 | 0) ___unlockfile($0);
  $$0 = ($37 & 32 | 0) == 0 ? $$1 : -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _setupAR2($id) {
 $id = $id | 0;
 var $2 = 0, $ar2Handle = 0, $call23 = 0, $call7 = 0, $call8 = 0, $id$addr = 0, $kpmHandle = 0, $kpmHandle24$pre$phiZ2D = 0, $paramLT = 0, $retval$0 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $id$addr = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(65260, $id$addr) | 0)) $retval$0 = -1; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(65260, $id$addr) | 0;
  $paramLT = $call7 + 192 | 0;
  $call8 = _ar2CreateHandleMod(HEAP32[$paramLT >> 2] | 0, HEAP32[$call7 + 472 >> 2] | 0) | 0;
  $ar2Handle = $call7 + 236 | 0;
  HEAP32[$ar2Handle >> 2] = $call8;
  if (!$call8) {
   _arLog(0, 3, 45395, $vararg_buffer);
   $kpmHandle = $call7 + 232 | 0;
   _kpmDeleteHandle($kpmHandle) | 0;
   $2 = HEAP32[$ar2Handle >> 2] | 0;
   $kpmHandle24$pre$phiZ2D = $kpmHandle;
  } else {
   $2 = $call8;
   $kpmHandle24$pre$phiZ2D = $call7 + 232 | 0;
  }
  _ar2SetTrackingThresh($2, 5.0) | 0;
  _ar2SetSimThresh(HEAP32[$ar2Handle >> 2] | 0, .5) | 0;
  _ar2SetSearchFeatureNum(HEAP32[$ar2Handle >> 2] | 0, 16) | 0;
  _ar2SetSearchSize(HEAP32[$ar2Handle >> 2] | 0, 6) | 0;
  _ar2SetTemplateSize1(HEAP32[$ar2Handle >> 2] | 0, 6) | 0;
  _ar2SetTemplateSize2(HEAP32[$ar2Handle >> 2] | 0, 6) | 0;
  $call23 = _createKpmHandle(HEAP32[$paramLT >> 2] | 0) | 0;
  HEAP32[$kpmHandle24$pre$phiZ2D >> 2] = $call23;
  $retval$0 = 0;
 }
 STACKTOP = sp;
 return $retval$0 | 0;
}

function __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$sroa$0$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $35 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $6 = sp;
 $7 = HEAP32[$0 >> 2] | 0;
 L1 : do if (!$7) $$sroa$0$2 = 0; else {
  $9 = $3;
  $10 = $1;
  $11 = $9 - $10 | 0;
  $12 = $4 + 12 | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  $$0 = ($13 | 0) > ($11 | 0) ? $13 - $11 | 0 : 0;
  $16 = $2;
  $17 = $16 - $10 | 0;
  if (($17 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $1, $17) | 0) != ($17 | 0) : 0) {
   HEAP32[$0 >> 2] = 0;
   $$sroa$0$2 = 0;
   break;
  }
  do if (($$0 | 0) > 0) {
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc($6, $$0, $5);
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, (HEAP8[$6 + 11 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6, $$0) | 0) == ($$0 | 0)) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    break;
   } else {
    HEAP32[$0 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    $$sroa$0$2 = 0;
    break L1;
   }
  } while (0);
  $35 = $9 - $16 | 0;
  if (($35 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $2, $35) | 0) != ($35 | 0) : 0) {
   HEAP32[$0 >> 2] = 0;
   $$sroa$0$2 = 0;
   break;
  }
  HEAP32[$12 >> 2] = 0;
  $$sroa$0$2 = $7;
 } while (0);
 STACKTOP = sp;
 return $$sroa$0$2 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseCallOffsetEv($0) {
 $0 = $0 | 0;
 var $$03 = 0, $$ph = 0, $1 = 0, $13 = 0, $14 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp + 8 | 0;
 $2 = sp;
 if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 104) | 0)) if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 118) | 0) {
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($1, $0, 1);
  if (!(__ZNK12_GLOBAL__N_110StringView5emptyEv($1) | 0) ? __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0 : 0) {
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($2, $0, 1);
   if (__ZNK12_GLOBAL__N_110StringView5emptyEv($2) | 0) $$ph = 1; else $$ph = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) ^ 1;
   $14 = $$ph;
  } else $14 = 1;
  $$03 = $14;
 } else $$03 = 1; else {
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($1, $0, 1);
  if (__ZNK12_GLOBAL__N_110StringView5emptyEv($1) | 0) $13 = 1; else $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 95) | 0) ^ 1;
  $$03 = $13;
 }
 STACKTOP = sp;
 return $$03 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedTypeEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $1 = 0, $4 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 switch ((__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0, 0) | 0) << 24 >> 24) {
 case 84:
  {
   $4 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseTemplateParamEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$1 >> 2] = $4;
   if (!$4) $$0 = 0; else {
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($0 + 148 | 0, $1);
    $$0 = $4;
   }
   $$2 = $$0;
   break;
  }
 case 68:
  {
   $8 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseDecltypeEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
   HEAP32[$1 >> 2] = $8;
   if (!$8) $$1 = 0; else {
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($0 + 148 | 0, $1);
    $$1 = $8;
   }
   $$2 = $$1;
   break;
  }
 default:
  $$2 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseSubstitutionEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
 }
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNK12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIfE9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $$0$idx = 0, $$034 = 0, $$07$i$i = 0, $$byval_copy = 0, $15 = 0, $18 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $scevgep = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy = sp + 24 | 0;
 $2 = sp + 40 | 0;
 $3 = sp;
 $4 = sp + 32 | 0;
 $5 = $0 + 8 | 0;
 $6 = __ZNK12_GLOBAL__N_110StringView5beginEv($5) | 0;
 if (((__ZNK12_GLOBAL__N_110StringView3endEv($5) | 0) + 1 - $6 | 0) >>> 0 > 8) {
  $scevgep = $2 + 4 | 0;
  $$0$idx = 0;
  $$034 = $2;
  while (1) {
   if (($$0$idx | 0) == 8) break;
   $15 = HEAP8[$6 + $$0$idx >> 0] | 0;
   $18 = HEAP8[$6 + ($$0$idx | 1) >> 0] | 0;
   HEAP8[$$034 >> 0] = (($18 + -48 | 0) >>> 0 < 10 ? 208 : 169) + $18 + ((($15 + -48 | 0) >>> 0 < 10 ? 0 : 9) + $15 << 4);
   $$0$idx = $$0$idx + 2 | 0;
   $$034 = $$034 + 1 | 0;
  }
  $$0$i$i = $scevgep;
  $$07$i$i = $2;
  while (1) {
   $24 = $$0$i$i + -1 | 0;
   if ($$07$i$i >>> 0 >= $24 >>> 0) break;
   $26 = HEAP8[$$07$i$i >> 0] | 0;
   HEAP8[$$07$i$i >> 0] = HEAP8[$24 >> 0] | 0;
   HEAP8[$24 >> 0] = $26;
   $$0$i$i = $24;
   $$07$i$i = $$07$i$i + 1 | 0;
  }
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  HEAP32[$3 + 12 >> 2] = 0;
  HEAP32[$3 + 16 >> 2] = 0;
  HEAP32[$3 + 20 >> 2] = 0;
  HEAPF64[$$byval_copy >> 3] = +HEAPF32[$2 >> 2];
  __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($4, $3, $3 + (_snprintf($3, 24, 52451, $$byval_copy) | 0) | 0);
  HEAP32[$$byval_copy >> 2] = HEAP32[$4 >> 2];
  HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy);
 }
 STACKTOP = sp;
 return;
}

function __ZNK12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIeE9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $$0$idx = 0, $$034 = 0, $$07$i$i = 0, $$byval_copy = 0, $15 = 0, $18 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $scevgep = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy = sp + 48 | 0;
 $2 = sp + 40 | 0;
 $3 = sp;
 $4 = sp + 56 | 0;
 $5 = $0 + 8 | 0;
 $6 = __ZNK12_GLOBAL__N_110StringView5beginEv($5) | 0;
 if (((__ZNK12_GLOBAL__N_110StringView3endEv($5) | 0) + 1 - $6 | 0) >>> 0 > 20) {
  $scevgep = $2 + 8 | 0;
  $$0$idx = 0;
  $$034 = $2;
  while (1) {
   if (($$0$idx | 0) == 20) break;
   $15 = HEAP8[$6 + $$0$idx >> 0] | 0;
   $18 = HEAP8[$6 + ($$0$idx | 1) >> 0] | 0;
   HEAP8[$$034 >> 0] = (($18 + -48 | 0) >>> 0 < 10 ? 208 : 169) + $18 + ((($15 + -48 | 0) >>> 0 < 10 ? 0 : 9) + $15 << 4);
   $$0$idx = $$0$idx + 2 | 0;
   $$034 = $$034 + 1 | 0;
  }
  $$0$i$i = $scevgep + 2 | 0;
  $$07$i$i = $2;
  while (1) {
   $24 = $$0$i$i + -1 | 0;
   if ($$07$i$i >>> 0 >= $24 >>> 0) break;
   $26 = HEAP8[$$07$i$i >> 0] | 0;
   HEAP8[$$07$i$i >> 0] = HEAP8[$24 >> 0] | 0;
   HEAP8[$24 >> 0] = $26;
   $$0$i$i = $24;
   $$07$i$i = $$07$i$i + 1 | 0;
  }
  dest = $3;
  stop = dest + 40 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAPF64[$$byval_copy >> 3] = +HEAPF64[$2 >> 3];
  __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($4, $3, $3 + (_snprintf($3, 40, 52331, $$byval_copy) | 0) | 0);
  HEAP32[$$byval_copy >> 2] = HEAP32[$4 >> 2];
  HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy);
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__2L11init_wweeksEv() {
 var $$0$i$i = 0, $4 = 0;
 if ((HEAP8[64736] | 0) == 0 ? ___cxa_guard_acquire(64736) | 0 : 0) {
  $4 = 64128;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 64296);
  ___cxa_guard_release(64736);
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64128, 22348) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64140, 22376) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64152, 22404) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64164, 22436) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64176, 22476) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64188, 22512) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64200, 22540) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64212, 22576) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64224, 22592) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64236, 22608) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64248, 22624) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64260, 22640) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64272, 22656) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(64284, 22672) | 0;
 return;
}

function __ZNSt3__2L10init_weeksEv() {
 var $$0$i$i = 0, $4 = 0;
 if ((HEAP8[64656] | 0) == 0 ? ___cxa_guard_acquire(64656) | 0 : 0) {
  $4 = 63632;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 63800);
  ___cxa_guard_release(64656);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63632, 59589) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63644, 59596) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63656, 59603) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63668, 59611) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63680, 59621) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63692, 59630) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63704, 59637) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63716, 59646) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63728, 59650) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63740, 59654) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63752, 59658) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63764, 59662) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63776, 59666) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(63788, 59670) | 0;
 return;
}

function _arParamLTCreate($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$057 = 0, $$058 = 0, $$059 = 0, $$1 = 0, $$160 = 0, $10 = 0, $15 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $26 = 0, $28 = 0, $3 = 0, $32 = 0.0, $36 = 0.0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $2 = sp + 24 | 0;
 $3 = sp + 16 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 $6 = _malloc(208) | 0;
 if (!$6) {
  _arLog(0, 3, 45930, sp + 32 | 0);
  _exit(1);
 }
 _memcpy($6 | 0, $0 | 0, 184) | 0;
 $9 = $1 << 1;
 $10 = (HEAP32[$0 >> 2] | 0) + $9 | 0;
 HEAP32[$6 + 192 >> 2] = $10;
 $15 = (HEAP32[$0 + 4 >> 2] | 0) + $9 | 0;
 HEAP32[$6 + 196 >> 2] = $15;
 HEAP32[$6 + 200 >> 2] = $1;
 HEAP32[$6 + 204 >> 2] = $1;
 $20 = Math_imul($10 << 3, $15) | 0;
 $21 = _malloc($20) | 0;
 HEAP32[$6 + 184 >> 2] = $21;
 if (!$21) {
  _arLog(0, 3, 45930, sp + 40 | 0);
  _exit(1);
 }
 $23 = _malloc($20) | 0;
 HEAP32[$6 + 188 >> 2] = $23;
 if (!$23) {
  _arLog(0, 3, 45930, sp + 48 | 0);
  _exit(1);
 }
 $26 = $0 + 104 | 0;
 $28 = HEAP32[$0 + 176 >> 2] | 0;
 $$0 = 0;
 $$058 = $23;
 $$059 = $21;
 while (1) {
  if (($$0 | 0) >= ($15 | 0)) break;
  $32 = +($$0 - $1 | 0);
  $$057 = 0;
  $$1 = $$058;
  $$160 = $$059;
  while (1) {
   if (($$057 | 0) >= ($10 | 0)) break;
   $36 = +($$057 - $1 | 0);
   _arParamIdeal2Observ($26, $36, $32, $4, $5, $28) | 0;
   HEAPF32[$$160 >> 2] = +HEAPF64[$4 >> 3];
   HEAPF32[$$160 + 4 >> 2] = +HEAPF64[$5 >> 3];
   _arParamObserv2Ideal($26, $36, $32, $2, $3, $28) | 0;
   HEAPF32[$$1 >> 2] = +HEAPF64[$2 >> 3];
   HEAPF32[$$1 + 4 >> 2] = +HEAPF64[$3 >> 3];
   $$057 = $$057 + 1 | 0;
   $$1 = $$1 + 8 | 0;
   $$160 = $$160 + 8 | 0;
  }
  $$0 = $$0 + 1 | 0;
  $$058 = $$1;
  $$059 = $$160;
 }
 STACKTOP = sp;
 return $6 | 0;
}

function __ZNK12_GLOBAL__N_116itanium_demangle22ParameterPackExpansion9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$byval_copy1 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy1 = sp + 48 | 0;
 $2 = sp + 32 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 24 | 0;
 $5 = sp;
 $6 = $1 + 12 | 0;
 __ZN12_GLOBAL__N_114SwapAndRestoreIjEC2ERjj($2, $6);
 $7 = $1 + 16 | 0;
 __ZN12_GLOBAL__N_114SwapAndRestoreIjEC2ERjj($3, $7);
 $8 = __ZNK12_GLOBAL__N_112OutputStream18getCurrentPositionEv($1) | 0;
 $9 = $0 + 8 | 0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$9 >> 2] | 0, $1);
 $11 = HEAP32[$7 >> 2] | 0;
 L1 : do switch ($11 | 0) {
 case -1:
  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 51510);
   HEAP32[$$byval_copy1 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy1);
   break;
  }
 case 0:
  {
   __ZN12_GLOBAL__N_112OutputStream18setCurrentPositionEm($1, $8);
   break;
  }
 default:
  {
   $$0 = 1;
   while (1) {
    if ($$0 >>> 0 >= $11 >>> 0) break L1;
    __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 52152);
    HEAP32[$$byval_copy1 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy1);
    HEAP32[$6 >> 2] = $$0;
    __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$9 >> 2] | 0, $1);
    $$0 = $$0 + 1 | 0;
   }
  }
 } while (0);
 __ZN12_GLOBAL__N_114SwapAndRestoreIjED2Ev($3);
 __ZN12_GLOBAL__N_114SwapAndRestoreIjED2Ev($2);
 STACKTOP = sp;
 return;
}

function _mbtowc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $13 = 0, $17 = 0, $21 = 0, $23 = 0, $25 = 0, $3 = 0, $33 = 0, $34 = 0, $42 = 0, $47 = 0, $50 = 0, $55 = 0, $59 = 0, $7 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 L1 : do if (!$1) $$0 = 0; else {
  do if ($2 | 0) {
   $spec$select = ($0 | 0) == 0 ? $3 : $0;
   $7 = HEAP8[$1 >> 0] | 0;
   if ($7 << 24 >> 24 > -1) {
    HEAP32[$spec$select >> 2] = $7 & 255;
    $$0 = $7 << 24 >> 24 != 0 & 1;
    break L1;
   }
   $13 = (___pthread_self_420() | 0) + 188 | 0;
   $17 = HEAP8[$1 >> 0] | 0;
   if (!(HEAP32[HEAP32[$13 >> 2] >> 2] | 0)) {
    HEAP32[$spec$select >> 2] = $17 << 24 >> 24 & 57343;
    $$0 = 1;
    break L1;
   }
   $21 = ($17 & 255) + -194 | 0;
   if ($21 >>> 0 <= 50) {
    $23 = $1 + 1 | 0;
    $25 = HEAP32[5728 + ($21 << 2) >> 2] | 0;
    if ($2 >>> 0 < 4 ? $25 & -2147483648 >>> (($2 * 6 | 0) + -6 | 0) | 0 : 0) break;
    $33 = HEAPU8[$23 >> 0] | 0;
    $34 = $33 >>> 3;
    if (($34 + -16 | $34 + ($25 >> 26)) >>> 0 <= 7) {
     $42 = $33 + -128 | $25 << 6;
     if (($42 | 0) >= 0) {
      HEAP32[$spec$select >> 2] = $42;
      $$0 = 2;
      break L1;
     }
     $47 = (HEAPU8[$1 + 2 >> 0] | 0) + -128 | 0;
     if ($47 >>> 0 <= 63) {
      $50 = $47 | $42 << 6;
      if (($50 | 0) >= 0) {
       HEAP32[$spec$select >> 2] = $50;
       $$0 = 3;
       break L1;
      }
      $55 = (HEAPU8[$1 + 3 >> 0] | 0) + -128 | 0;
      if ($55 >>> 0 <= 63) {
       HEAP32[$spec$select >> 2] = $55 | $50 << 6;
       $$0 = 4;
       break L1;
      }
     }
    }
   }
  } while (0);
  $59 = ___errno_location() | 0;
  HEAP32[$59 >> 2] = 25;
  $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _teardown($id) {
 $id = $id | 0;
 var $0 = 0, $3 = 0, $__end_$i = 0, $call7 = 0, $i$0 = 0, $id$addr = 0, $multi_markers = 0, $retval$0 = 0, $videoFrame = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(65260, $id$addr) | 0)) $retval$0 = -1; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(65260, $id$addr) | 0;
  $videoFrame = $call7 + 196 | 0;
  $0 = HEAP32[$videoFrame >> 2] | 0;
  if ($0 | 0) {
   _free($0);
   HEAP32[$videoFrame >> 2] = 0;
   HEAP32[$call7 + 200 >> 2] = 0;
  }
  _deleteHandle($call7);
  _arPattDeleteHandle(HEAP32[$call7 + 220 >> 2] | 0) | 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE14__erase_uniqueIiEEmRKT_(65260, $id$addr) | 0;
  $multi_markers = $call7 + 328 | 0;
  $__end_$i = $call7 + 332 | 0;
  $i$0 = 0;
  while (1) {
   $3 = HEAP32[$multi_markers >> 2] | 0;
   if ($i$0 >>> 0 >= (HEAP32[$__end_$i >> 2] | 0) - $3 >> 3 >>> 0) break;
   _arMultiFreeConfig(HEAP32[$3 + ($i$0 << 3) + 4 >> 2] | 0) | 0;
   $i$0 = $i$0 + 1 | 0;
  }
  __ZNSt3__213__vector_baseI12multi_markerNS_9allocatorIS1_EEED2Ev($multi_markers);
  __ZdlPv($multi_markers);
  __ZN12arControllerD2Ev($call7);
  __ZdlPv($call7);
  $retval$0 = 0;
 }
 STACKTOP = sp;
 return $retval$0 | 0;
}

function __ZNK6vision21HoughSimilarityVoting14getBinDistanceERfS1_S1_S1_ffffffff($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 $6 = +$6;
 $7 = +$7;
 $8 = +$8;
 $9 = +$9;
 $10 = +$10;
 $11 = +$11;
 $12 = +$12;
 var $13 = 0, $15 = 0.0, $17 = 0.0, $19 = 0.0, $21 = 0.0, $26 = 0.0, $33 = 0, $38 = 0, $42 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $13 = sp;
 $15 = +Math_abs(+($5 - $9));
 HEAPF32[$1 >> 2] = $15;
 $17 = +Math_abs(+($6 - $10));
 HEAPF32[$2 >> 2] = $17;
 $19 = +Math_abs(+($8 - $12));
 HEAPF32[$4 >> 2] = $19;
 $21 = +Math_abs(+($7 - $11));
 $26 = +__ZN6vision4min2IfEET_S1_S1_($21, +(HEAP32[$0 + 60 >> 2] | 0) - $21);
 HEAPF32[$3 >> 2] = $26;
 if (!($26 >= 0.0)) {
  $33 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 36007) | 0, 36227) | 0, 39072) | 0, 333) | 0, 39079) | 0, 36048) | 0;
  __ZNKSt3__28ios_base6getlocEv($13, $33 + (HEAP32[(HEAP32[$33 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $38 = __ZNKSt3__26locale9use_facetERNS0_2idE($13, 66512) | 0;
  $42 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$38 >> 2] | 0) + 28 >> 2] & 127]($38, 10) | 0;
  __ZNSt3__26localeD2Ev($13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($33, $42) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($33) | 0;
  _abort();
 } else {
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 12 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($3, $0);
 if (HEAP8[$3 >> 0] | 0) {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 66568) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $14 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $16 = HEAP32[$14 + 24 >> 2] | 0;
  $17 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
  $18 = $14 + 76 | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($17, HEAP32[$18 >> 2] | 0) | 0) {
   __ZNKSt3__28ios_base6getlocEv($$byval_copy, $14);
   $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 66512) | 0;
   $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 127]($21, 32) | 0;
   __ZNSt3__26localeD2Ev($$byval_copy);
   $26 = $25 << 24 >> 24;
   HEAP32[$18 >> 2] = $26;
   $28 = $26;
  } else $28 = HEAP32[$18 >> 2] | 0;
  $31 = HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$2 >> 2] = $16;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[$31 & 31]($10, $$byval_copy, $14, $28 & 255, $1) | 0)) {
   $37 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($37, HEAP32[$37 + 16 >> 2] | 5);
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
 STACKTOP = sp;
 return $0 | 0;
}

function _sep_upsample($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$05154 = 0, $$05253 = 0, $$1 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $27 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $40 = 0, $53 = 0, $8 = 0, $9 = 0, $spec$select = 0;
 $8 = HEAP32[$0 + 476 >> 2] | 0;
 $9 = $8 + 92 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $0 + 320 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 if (($10 | 0) < ($12 | 0)) {
  $34 = $10;
  $35 = $12;
 } else {
  $14 = $0 + 36 | 0;
  if ((HEAP32[$14 >> 2] | 0) > 0) {
   $$05154 = HEAP32[$0 + 216 >> 2] | 0;
   $$05253 = 0;
   while (1) {
    $27 = (HEAP32[$1 + ($$05253 << 2) >> 2] | 0) + ((Math_imul(HEAP32[$8 + 100 + ($$05253 << 2) >> 2] | 0, HEAP32[$2 >> 2] | 0) | 0) << 2) | 0;
    FUNCTION_TABLE_viiii[HEAP32[$8 + 52 + ($$05253 << 2) >> 2] & 31]($0, $$05154, $27, $8 + 12 + ($$05253 << 2) | 0);
    $$05253 = $$05253 + 1 | 0;
    if (($$05253 | 0) >= (HEAP32[$14 >> 2] | 0)) break; else $$05154 = $$05154 + 88 | 0;
   }
   $$pre = HEAP32[$11 >> 2] | 0;
  } else $$pre = $12;
  HEAP32[$9 >> 2] = 0;
  $34 = 0;
  $35 = $$pre;
 }
 $33 = $35 - $34 | 0;
 $36 = $8 + 96 | 0;
 $37 = HEAP32[$36 >> 2] | 0;
 $spec$select = $33 >>> 0 > $37 >>> 0 ? $37 : $33;
 $39 = HEAP32[$5 >> 2] | 0;
 $40 = $6 - $39 | 0;
 $$1 = $spec$select >>> 0 > $40 >>> 0 ? $40 : $spec$select;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$0 + 480 >> 2] | 0) + 4 >> 2] & 63]($0, $8 + 12 | 0, $34, $4 + ($39 << 2) | 0, $$1);
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $$1;
 HEAP32[$36 >> 2] = (HEAP32[$36 >> 2] | 0) - $$1;
 $53 = (HEAP32[$9 >> 2] | 0) + $$1 | 0;
 HEAP32[$9 >> 2] = $53;
 if (($53 | 0) < (HEAP32[$11 >> 2] | 0)) return;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
 return;
}

function __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$byval_copy = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $38 = 0, $4 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 12 | 0;
 $3 = sp;
 $4 = sp + 8 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($3, $0);
 if (HEAP8[$3 >> 0] | 0) {
  $8 = (HEAP32[$0 >> 2] | 0) + -12 | 0;
  HEAP32[$4 >> 2] = HEAP32[$0 + (HEAP32[$8 >> 2] | 0) + 24 >> 2];
  $14 = $0 + (HEAP32[$8 >> 2] | 0) | 0;
  $16 = HEAP32[$14 + 4 >> 2] | 0;
  $17 = $1 + $2 | 0;
  $18 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
  $19 = $14 + 76 | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($18, HEAP32[$19 >> 2] | 0) | 0) {
   __ZNKSt3__28ios_base6getlocEv($$byval_copy, $14);
   $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 66512) | 0;
   $26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 127]($22, 32) | 0;
   __ZNSt3__26localeD2Ev($$byval_copy);
   $27 = $26 << 24 >> 24;
   HEAP32[$19 >> 2] = $27;
   $29 = $27;
  } else $29 = HEAP32[$19 >> 2] | 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$4 >> 2];
  if (!(__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $1, ($16 & 176 | 0) == 32 ? $17 : $1, $17, $14, $29 & 255) | 0)) {
   $38 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($38, HEAP32[$38 + 16 >> 2] | 5);
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
 STACKTOP = sp;
 return $0 | 0;
}

function _quantize3_ord_dither($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$07076 = 0, $$07178 = 0, $$07178$us = 0, $$07275 = 0, $$07374 = 0, $$077 = 0, $$pre84 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $31 = 0, $36 = 0, $5 = 0, $7 = 0, $8 = 0;
 $5 = HEAP32[$0 + 484 >> 2] | 0;
 $7 = HEAP32[$5 + 24 >> 2] | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $10 = HEAP32[$7 + 4 >> 2] | 0;
 $12 = HEAP32[$7 + 8 >> 2] | 0;
 $14 = HEAP32[$0 + 112 >> 2] | 0;
 if (($3 | 0) <= 0) return;
 $16 = $5 + 48 | 0;
 $17 = $5 + 52 | 0;
 $18 = $5 + 56 | 0;
 $19 = $5 + 60 | 0;
 $$pre84 = HEAP32[$16 >> 2] | 0;
 if (!$14) {
  $$07178$us = 0;
  $22 = $$pre84;
  do {
   $22 = $22 + 1 & 15;
   $$07178$us = $$07178$us + 1 | 0;
  } while (($$07178$us | 0) != ($3 | 0));
  HEAP32[$16 >> 2] = $22;
  return;
 }
 $$07178 = 0;
 $36 = $$pre84;
 do {
  $29 = HEAP32[$17 >> 2] | 0;
  $30 = HEAP32[$18 >> 2] | 0;
  $31 = HEAP32[$19 >> 2] | 0;
  $$07076 = $14;
  $$07275 = 0;
  $$07374 = HEAP32[$2 + ($$07178 << 2) >> 2] | 0;
  $$077 = HEAP32[$1 + ($$07178 << 2) >> 2] | 0;
  while (1) {
   HEAP8[$$07374 >> 0] = (HEAPU8[$10 + ((HEAP32[$30 + ($36 << 6) + ($$07275 << 2) >> 2] | 0) + (HEAPU8[$$077 + 1 >> 0] | 0)) >> 0] | 0) + (HEAPU8[$8 + ((HEAP32[$29 + ($36 << 6) + ($$07275 << 2) >> 2] | 0) + (HEAPU8[$$077 >> 0] | 0)) >> 0] | 0) + (HEAPU8[$12 + ((HEAP32[$31 + ($36 << 6) + ($$07275 << 2) >> 2] | 0) + (HEAPU8[$$077 + 2 >> 0] | 0)) >> 0] | 0);
   $$07076 = $$07076 + -1 | 0;
   if (!$$07076) break; else {
    $$07275 = $$07275 + 1 & 15;
    $$07374 = $$07374 + 1 | 0;
    $$077 = $$077 + 3 | 0;
   }
  }
  $36 = $36 + 1 & 15;
  HEAP32[$16 >> 2] = $36;
  $$07178 = $$07178 + 1 | 0;
 } while (($$07178 | 0) != ($3 | 0));
 return;
}

function __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i = 0, $$029 = 0, $$030 = 0, $$07$i$i = 0, $$pre = 0, $$pre$phiZ2D = 0, $13 = 0, $15 = 0, $18 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond32 = 0, label = 0;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $7 = $0 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $5 & 255;
 do if (($5 << 24 >> 24 < 0 ? $8 : $9) | 0) {
  if (($1 | 0) == ($2 | 0)) {
   $$pre$phiZ2D = $9;
   $19 = $5;
   $23 = $8;
  } else {
   $$0$i$i = $2;
   $$07$i$i = $1;
   while (1) {
    $13 = $$0$i$i + -4 | 0;
    if ($$07$i$i >>> 0 >= $13 >>> 0) break;
    $15 = HEAP32[$$07$i$i >> 2] | 0;
    HEAP32[$$07$i$i >> 2] = HEAP32[$13 >> 2];
    HEAP32[$13 >> 2] = $15;
    $$0$i$i = $13;
    $$07$i$i = $$07$i$i + 4 | 0;
   }
   $$pre = HEAP8[$4 >> 0] | 0;
   $$pre$phiZ2D = $$pre & 255;
   $19 = $$pre;
   $23 = HEAP32[$7 >> 2] | 0;
  }
  $18 = $19 << 24 >> 24 < 0;
  $21 = $18 ? HEAP32[$0 >> 2] | 0 : $0;
  $25 = $2 + -4 | 0;
  $26 = $21 + ($18 ? $23 : $$pre$phiZ2D) | 0;
  $$029 = $1;
  $$030 = $21;
  while (1) {
   $28 = HEAP8[$$030 >> 0] | 0;
   $or$cond32 = $28 << 24 >> 24 > 0 & $28 << 24 >> 24 != 127;
   if ($$029 >>> 0 >= $25 >>> 0) break;
   if ($or$cond32 ? (HEAP32[$$029 >> 2] | 0) != ($28 << 24 >> 24 | 0) : 0) {
    label = 11;
    break;
   }
   $$029 = $$029 + 4 | 0;
   $$030 = ($26 - $$030 | 0) > 1 ? $$030 + 1 | 0 : $$030;
  }
  if ((label | 0) == 11) {
   HEAP32[$3 >> 2] = 4;
   break;
  }
  if ($or$cond32 ? ((HEAP32[$25 >> 2] | 0) + -1 | 0) >>> 0 >= $28 << 24 >> 24 >>> 0 : 0) HEAP32[$3 >> 2] = 4;
 } while (0);
 return;
}

function _ycc_rgb_convert($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$07177$us = 0, $$07376$us = 0, $$07475$us = 0, $$078$us = 0, $$in = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $32 = 0, $37 = 0, $40 = 0, $43 = 0, $6 = 0, $8 = 0, $$in$looptemp = 0;
 $6 = HEAP32[$0 + 480 >> 2] | 0;
 $8 = HEAP32[$0 + 112 >> 2] | 0;
 $10 = HEAP32[$0 + 336 >> 2] | 0;
 $12 = HEAP32[$6 + 8 >> 2] | 0;
 $14 = HEAP32[$6 + 12 >> 2] | 0;
 $16 = HEAP32[$6 + 16 >> 2] | 0;
 $18 = HEAP32[$6 + 20 >> 2] | 0;
 if (($4 | 0) <= 0) return;
 $20 = $1 + 4 | 0;
 $21 = $1 + 8 | 0;
 if (!$8) return;
 $$07177$us = $3;
 $$078$us = $2;
 $$in = $4;
 while (1) {
  $$in$looptemp = $$in;
  $$in = $$in + -1 | 0;
  $26 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($$078$us << 2) >> 2] | 0;
  $29 = HEAP32[(HEAP32[$20 >> 2] | 0) + ($$078$us << 2) >> 2] | 0;
  $32 = HEAP32[(HEAP32[$21 >> 2] | 0) + ($$078$us << 2) >> 2] | 0;
  $$078$us = $$078$us + 1 | 0;
  $$07376$us = HEAP32[$$07177$us >> 2] | 0;
  $$07475$us = 0;
  while (1) {
   $37 = HEAPU8[$26 + $$07475$us >> 0] | 0;
   $40 = HEAPU8[$29 + $$07475$us >> 0] | 0;
   $43 = HEAPU8[$32 + $$07475$us >> 0] | 0;
   HEAP8[$$07376$us >> 0] = HEAP8[$10 + ((HEAP32[$12 + ($43 << 2) >> 2] | 0) + $37) >> 0] | 0;
   HEAP8[$$07376$us + 1 >> 0] = HEAP8[$10 + (((HEAP32[$16 + ($43 << 2) >> 2] | 0) + (HEAP32[$18 + ($40 << 2) >> 2] | 0) >> 16) + $37) >> 0] | 0;
   HEAP8[$$07376$us + 2 >> 0] = HEAP8[$10 + ((HEAP32[$14 + ($40 << 2) >> 2] | 0) + $37) >> 0] | 0;
   $$07475$us = $$07475$us + 1 | 0;
   if (($$07475$us | 0) == ($8 | 0)) break; else $$07376$us = $$07376$us + 3 | 0;
  }
  if (($$in$looptemp | 0) <= 1) break; else $$07177$us = $$07177$us + 4 | 0;
 }
 return;
}

function __ZNKSt3__28messagesIcE6do_getEliiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i17 = 0, $$0$i22 = 0, $10 = 0, $11 = 0, $16 = 0, $18 = 0, $30 = 0, $31 = 0, $35 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $6 = sp;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$6 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $10 = HEAP8[$5 + 11 >> 0] | 0;
 $11 = $10 << 24 >> 24 < 0;
 $16 = $11 ? HEAP32[$5 >> 2] | 0 : $5;
 $18 = $16 + ($11 ? HEAP32[$5 + 4 >> 2] | 0 : $10 & 255) | 0;
 $$0$i22 = $16;
 while (1) {
  if ($$0$i22 >>> 0 >= $18 >>> 0) break;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($6, HEAP8[$$0$i22 >> 0] | 0);
  $$0$i22 = $$0$i22 + 1 | 0;
 }
 $30 = (HEAP8[$6 + 11 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6;
 $31 = _catgets(($2 | 0) == -1 ? -1 : $2 << 1, $3, $4, $30) | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i17 = 0;
 while (1) {
  if (($$0$i$i17 | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i17 << 2) >> 2] = 0;
  $$0$i$i17 = $$0$i$i17 + 1 | 0;
 }
 $35 = $30 + (_strlen($31) | 0) | 0;
 $$0$i = $30;
 while (1) {
  if ($$0$i >>> 0 >= $35 >>> 0) break;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($0, HEAP8[$$0$i >> 0] | 0);
  $$0$i = $$0$i + 1 | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 STACKTOP = sp;
 return;
}

function _jinit_memory_mgr($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $23 = 0, $3 = 0, $31 = 0, $37 = 0, $39 = 0, $4 = 0, $5 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $1 = sp + 8 | 0;
 $2 = sp + 12 | 0;
 $3 = $0 + 4 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = _jpeg_mem_init($0) | 0;
 HEAP32[$1 >> 2] = $4;
 $5 = _jpeg_get_small($0, 84) | 0;
 if (!$5) {
  _jpeg_mem_term($0);
  $7 = HEAP32[$0 >> 2] | 0;
  HEAP32[$7 + 20 >> 2] = 56;
  HEAP32[$7 + 24 >> 2] = 0;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 HEAP32[$5 >> 2] = 33;
 HEAP32[$5 + 4 >> 2] = 34;
 HEAP32[$5 + 8 >> 2] = 9;
 HEAP32[$5 + 12 >> 2] = 10;
 HEAP32[$5 + 16 >> 2] = 39;
 HEAP32[$5 + 20 >> 2] = 40;
 HEAP32[$5 + 24 >> 2] = 204;
 HEAP32[$5 + 28 >> 2] = 21;
 HEAP32[$5 + 32 >> 2] = 22;
 HEAP32[$5 + 36 >> 2] = 138;
 HEAP32[$5 + 40 >> 2] = 205;
 HEAP32[$5 + 48 >> 2] = 1e9;
 $23 = $5 + 44 | 0;
 HEAP32[$23 >> 2] = $4;
 HEAP32[$5 + 56 >> 2] = 0;
 HEAP32[$5 + 64 >> 2] = 0;
 HEAP32[$5 + 52 >> 2] = 0;
 HEAP32[$5 + 60 >> 2] = 0;
 HEAP32[$5 + 68 >> 2] = 0;
 HEAP32[$5 + 72 >> 2] = 0;
 HEAP32[$5 + 76 >> 2] = 84;
 HEAP32[$3 >> 2] = $5;
 $31 = _getenv(50713) | 0;
 if (!$31) {
  STACKTOP = sp;
  return;
 }
 HEAP8[$2 >> 0] = 120;
 HEAP32[$vararg_buffer >> 2] = $1;
 HEAP32[$vararg_buffer + 4 >> 2] = $2;
 if ((_sscanf($31, 50721, $vararg_buffer) | 0) > 0) {
  switch (HEAP8[$2 >> 0] | 0) {
  case 77:
  case 109:
   {
    $37 = (HEAP32[$1 >> 2] | 0) * 1e3 | 0;
    HEAP32[$1 >> 2] = $37;
    $39 = $37;
    break;
   }
  default:
   $39 = HEAP32[$1 >> 2] | 0;
  }
  HEAP32[$23 >> 2] = $39 * 1e3;
 }
 STACKTOP = sp;
 return;
}

function ___dynamic_cast($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $8 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $4 = sp;
 $5 = HEAP32[$0 >> 2] | 0;
 $8 = $0 + (HEAP32[$5 + -8 >> 2] | 0) | 0;
 $10 = HEAP32[$5 + -4 >> 2] | 0;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$4 + 4 >> 2] = $0;
 HEAP32[$4 + 8 >> 2] = $1;
 HEAP32[$4 + 12 >> 2] = $3;
 $14 = $4 + 16 | 0;
 $15 = $4 + 20 | 0;
 $16 = $4 + 24 | 0;
 $17 = $4 + 28 | 0;
 $18 = $4 + 32 | 0;
 $19 = $4 + 40 | 0;
 dest = $14;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$14 + 36 >> 1] = 0;
 HEAP8[$14 + 38 >> 0] = 0;
 L1 : do if (__ZL8is_equalPKSt9type_infoS1_b($10, $2, 0) | 0) {
  HEAP32[$4 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 7]($10, $4, $8, $8, 1, 0);
  $$0 = (HEAP32[$16 >> 2] | 0) == 1 ? $8 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 63]($10, $4, $8, 1, 0);
  switch (HEAP32[$4 + 36 >> 2] | 0) {
  case 0:
   {
    $$0 = (HEAP32[$19 >> 2] | 0) == 1 & (HEAP32[$17 >> 2] | 0) == 1 & (HEAP32[$18 >> 2] | 0) == 1 ? HEAP32[$15 >> 2] | 0 : 0;
    break L1;
    break;
   }
  case 1:
   break;
  default:
   {
    $$0 = 0;
    break L1;
   }
  }
  if ((HEAP32[$16 >> 2] | 0) != 1 ? !((HEAP32[$19 >> 2] | 0) == 0 & (HEAP32[$17 >> 2] | 0) == 1 & (HEAP32[$18 >> 2] | 0) == 1) : 0) {
   $$0 = 0;
   break;
  }
  $$0 = HEAP32[$14 >> 2] | 0;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$sroa$speculated = 0, $11 = 0, $17 = 0, $18 = 0, $23 = 0, $26 = 0, $27 = 0, $29 = 0, $32 = 0, $33 = 0, $39 = 0, $43 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp;
 if ((1073741806 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 $11 = $0 + 8 | 0;
 if ((HEAP8[$11 + 3 >> 0] | 0) < 0) $29 = HEAP32[$0 >> 2] | 0; else $29 = $0;
 if ($1 >>> 0 < 536870887) {
  $17 = $2 + $1 | 0;
  $18 = $1 << 1;
  $$sroa$speculated = $17 >>> 0 < $18 >>> 0 ? $18 : $17;
  $23 = $$sroa$speculated >>> 0 < 2 ? 2 : $$sroa$speculated + 4 & -4;
  if ($23 >>> 0 > 1073741823) _abort(); else $26 = $23;
 } else $26 = 1073741807;
 $27 = __Znwm($26 << 2) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm($27, $29, $4) | 0;
 if ($6 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm($27 + ($4 << 2) | 0, $7, $6) | 0;
 $32 = $3 - $5 | 0;
 $33 = $32 - $4 | 0;
 if ($33 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm($27 + ($4 << 2) + ($6 << 2) | 0, $29 + ($4 << 2) + ($5 << 2) | 0, $33) | 0;
 $39 = $1 + 1 | 0;
 if (($39 | 0) != 2) __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($29, $39 << 2);
 HEAP32[$0 >> 2] = $27;
 HEAP32[$11 >> 2] = $26 | -2147483648;
 $43 = $32 + $6 | 0;
 HEAP32[$0 + 4 >> 2] = $43;
 HEAP32[$8 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($27 + ($43 << 2) | 0, $8);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((((HEAP32[$3 >> 2] | 0) - $6 | 0) / 36 | 0) >>> 0 < $1 >>> 0) {
  $13 = (($6 - (HEAP32[$0 >> 2] | 0) | 0) / 36 | 0) + $1 | 0;
  $14 = __ZNKSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $20 = ((HEAP32[$3 >> 2] | 0) - $18 | 0) / 36 | 0;
   $23 = $20 << 1;
   __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEEC2EmmS6_($2, $20 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, ((HEAP32[$5 >> 2] | 0) - $18 | 0) / 36 | 0, $0 + 8 | 0);
   __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
   __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((((HEAP32[$3 >> 2] | 0) - $6 | 0) / 12 | 0) >>> 0 < $1 >>> 0) {
  $13 = (($6 - (HEAP32[$0 >> 2] | 0) | 0) / 12 | 0) + $1 | 0;
  $14 = __ZNKSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $20 = ((HEAP32[$3 >> 2] | 0) - $18 | 0) / 12 | 0;
   $23 = $20 << 1;
   __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEEC2EmmSA_($2, $20 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, ((HEAP32[$5 >> 2] | 0) - $18 | 0) / 12 | 0, $0 + 8 | 0);
   __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS8_EE($0, $2);
   __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function __ZN6vision18Condition4Points2dIfEEbPT_S2_S2_S2_RS1_S2_PKS1_S5_S5_S5_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0 = 0, $17 = 0.0, $18 = 0, $20 = 0, $23 = 0, $26 = 0, $29 = 0.0, $32 = 0.0, $34 = 0.0, $36 = 0.0, $38 = 0.0, $40 = 0.0, $42 = 0.0, $44 = 0.0, $46 = 0.0, $66 = 0.0, $71 = 0.0;
 $17 = (+HEAPF32[$6 >> 2] + +HEAPF32[$7 >> 2] + +HEAPF32[$8 >> 2] + +HEAPF32[$9 >> 2]) * .25;
 HEAPF32[$5 >> 2] = $17;
 $18 = $6 + 4 | 0;
 $20 = $7 + 4 | 0;
 $23 = $8 + 4 | 0;
 $26 = $9 + 4 | 0;
 $29 = (+HEAPF32[$18 >> 2] + +HEAPF32[$20 >> 2] + +HEAPF32[$23 >> 2] + +HEAPF32[$26 >> 2]) * .25;
 HEAPF32[$5 + 4 >> 2] = $29;
 $32 = +HEAPF32[$6 >> 2] - $17;
 $34 = +HEAPF32[$18 >> 2] - $29;
 $36 = +HEAPF32[$7 >> 2] - $17;
 $38 = +HEAPF32[$20 >> 2] - $29;
 $40 = +HEAPF32[$8 >> 2] - $17;
 $42 = +HEAPF32[$23 >> 2] - $29;
 $44 = +HEAPF32[$9 >> 2] - $17;
 $46 = +HEAPF32[$26 >> 2] - $29;
 $66 = (+Math_sqrt(+($32 * $32 + $34 * $34)) + +Math_sqrt(+($36 * $36 + $38 * $38)) + +Math_sqrt(+($40 * $40 + $42 * $42)) + +Math_sqrt(+($44 * $44 + $46 * $46))) * .25;
 if ($66 == 0.0) $$0 = 0; else {
  $71 = 1.0 / $66 * 1.4142135623730951;
  HEAPF32[$4 >> 2] = $71;
  HEAPF32[$0 >> 2] = $32 * $71;
  HEAPF32[$0 + 4 >> 2] = $34 * +HEAPF32[$4 >> 2];
  HEAPF32[$1 >> 2] = $36 * +HEAPF32[$4 >> 2];
  HEAPF32[$1 + 4 >> 2] = $38 * +HEAPF32[$4 >> 2];
  HEAPF32[$2 >> 2] = $40 * +HEAPF32[$4 >> 2];
  HEAPF32[$2 + 4 >> 2] = $42 * +HEAPF32[$4 >> 2];
  HEAPF32[$3 >> 2] = $44 * +HEAPF32[$4 >> 2];
  HEAPF32[$3 + 4 >> 2] = $46 * +HEAPF32[$4 >> 2];
  $$0 = 1;
 }
 return $$0 | 0;
}

function __ZN6vision27OrthogonalizePivot8x9Basis3IfEEbPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $12 = 0, $14 = 0.0, $15 = 0.0, $17 = 0.0, $19 = 0.0, $2 = 0, $21 = 0.0, $23 = 0, $24 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 108 | 0;
 $4 = $0 + 72 | 0;
 $5 = $1 + 108 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($3, $4, $5);
 $6 = $0 + 144 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($6, $4, $1 + 144 | 0);
 $8 = $0 + 180 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($8, $4, $1 + 180 | 0);
 $10 = $0 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($10, $4, $1 + 216 | 0);
 $12 = $0 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($12, $4, $1 + 252 | 0);
 $14 = +__ZN6vision11SumSquares9IfEET_PKS1_($3);
 HEAPF32[$2 >> 2] = $14;
 $15 = +__ZN6vision11SumSquares9IfEET_PKS1_($6);
 HEAPF32[$2 + 4 >> 2] = $15;
 $17 = +__ZN6vision11SumSquares9IfEET_PKS1_($8);
 HEAPF32[$2 + 8 >> 2] = $17;
 $19 = +__ZN6vision11SumSquares9IfEET_PKS1_($10);
 HEAPF32[$2 + 12 >> 2] = $19;
 $21 = +__ZN6vision11SumSquares9IfEET_PKS1_($12);
 HEAPF32[$2 + 16 >> 2] = $21;
 $23 = __ZN6vision9MaxIndex5IfEEiPKT_($2) | 0;
 $24 = $2 + ($23 << 2) | 0;
 if (+HEAPF32[$24 >> 2] == 0.0) $$0 = 0; else {
  $27 = $23 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_($3, $3 + ($27 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_($5, $5 + ($27 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($3, $3, 1.0 / +Math_sqrt(+(+HEAPF32[$24 >> 2])));
  $$0 = 1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $12 = 0, $14 = 0, $15 = 0, $18 = 0, $25 = 0, $29 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $spec$select = 0;
 $4 = $1;
 $5 = $2 - $4 | 0;
 $6 = $0 + 8 | 0;
 $8 = HEAP32[$0 >> 2] | 0;
 $11 = $8;
 do if ($5 >>> 0 > ((HEAP32[$6 >> 2] | 0) - $8 | 0) >>> 0) {
  __ZNSt3__26vectorIhNS_9allocatorIhEEE13__vdeallocateEv($0);
  $25 = __ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv($0) | 0;
  if ($25 >>> 0 < $5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $29 = (HEAP32[$6 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0;
   $32 = $29 << 1;
   __ZNSt3__26vectorIhNS_9allocatorIhEEE11__vallocateEm($0, $29 >>> 0 < $25 >>> 1 >>> 0 ? ($32 >>> 0 < $5 >>> 0 ? $5 : $32) : $25);
   __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPhEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m($0, $1, $2, $5);
   break;
  }
 } else {
  $12 = $0 + 4 | 0;
  $14 = (HEAP32[$12 >> 2] | 0) - $8 | 0;
  $15 = $5 >>> 0 > $14 >>> 0;
  $spec$select = $15 ? $1 + $14 | 0 : $2;
  $18 = $spec$select - $4 | 0;
  if ($18 | 0) _memmove($11 | 0, $1 | 0, $18 | 0) | 0;
  if ($15) {
   __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPhEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m($0, $spec$select, $2, $5 - (HEAP32[$12 >> 2] | 0) + (HEAP32[$0 >> 2] | 0) | 0);
   break;
  } else {
   HEAP32[$12 >> 2] = $11 + $18;
   break;
  }
 } while (0);
 return;
}

function _arImageProcLumaHistAndOtsu($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$062 = 0, $$064 = 0.0, $$067 = 0.0, $$068 = 0.0, $$070 = 0.0, $$169 = 0.0, $$2 = 0, $$266 = 0.0, $$3 = 0, $$pre$phiZ2D = 0, $15 = 0.0, $17 = 0, $21 = 0.0, $25 = 0.0, $3 = 0, $30 = 0.0, $32 = 0.0, $33 = 0, $34 = 0, $indvars$iv = 0, $indvars$iv71 = 0;
 $3 = _arImageProcLumaHist($0, $1) | 0;
 if (($3 | 0) < 0) $$0 = $3; else {
  $$070 = 0.0;
  $indvars$iv71 = 1;
  do {
   $$070 = $$070 + +((Math_imul(HEAP32[$0 + 12 + ($indvars$iv71 << 2) >> 2] | 0, $indvars$iv71) | 0) >>> 0);
   $indvars$iv71 = $indvars$iv71 + 1 | 0;
  } while (($indvars$iv71 | 0) != 256);
  $15 = +(Math_imul(HEAP32[$0 + 8 >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0) | 0);
  $$062 = 0;
  $$064 = 0.0;
  $$067 = 0.0;
  $$068 = 0.0;
  $indvars$iv = 0;
  while (1) {
   $17 = HEAP32[$0 + 12 + ($indvars$iv << 2) >> 2] | 0;
   $$067 = $$067 + +($17 >>> 0);
   if ($$067 != 0.0) {
    $21 = $15 - $$067;
    if ($21 == 0.0) {
     $$3 = $$062;
     break;
    }
    $25 = $$068 + +((Math_imul($17, $indvars$iv) | 0) >>> 0);
    $30 = $25 / $$067 - ($$070 - $25) / $21;
    $32 = $30 * ($$067 * $21 * $30);
    $33 = $32 > $$064;
    $34 = $indvars$iv & 255;
    $$169 = $25;
    $$2 = $33 ? $34 : $$062;
    $$266 = $33 ? $32 : $$064;
    $$pre$phiZ2D = $34;
   } else {
    $$169 = $$068;
    $$2 = $$062;
    $$266 = $$064;
    $$pre$phiZ2D = $indvars$iv & 255;
   }
   if ($$pre$phiZ2D << 24 >> 24 == -1) {
    $$3 = $$2;
    break;
   } else {
    $$062 = $$2;
    $$064 = $$266;
    $$068 = $$169;
    $indvars$iv = $indvars$iv + 1 | 0;
   }
  }
  HEAP8[$2 >> 0] = $$3;
  $$0 = 0;
 }
 return $$0 | 0;
}

function _confidenceCutoff($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$049 = 0, $$150 = 0, $$2 = 0, $16 = 0, $18 = 0, $28 = 0, $30 = 0, $36 = 0, $4 = 0, $6 = 0;
 L1 : do switch (HEAP32[$0 + 24 >> 2] | 0) {
 case 1:
 case 0:
  {
   $4 = HEAP32[$0 + 44 >> 2] | 0;
   $$049 = 0;
   while (1) {
    if (($$049 | 0) >= ($4 | 0)) break L1;
    $6 = $0 + 48 + ($$049 << 8) + 4 | 0;
    if ((HEAP32[$6 >> 2] | 0) > -1 ? +HEAPF64[$0 + 48 + ($$049 << 8) + 32 >> 3] < .5 : 0) {
     HEAP32[$0 + 48 + ($$049 << 8) + 8 >> 2] = -1;
     HEAP32[$6 >> 2] = -1;
     HEAP32[$0 + 48 + ($$049 << 8) + 236 >> 2] = 6;
    }
    $$049 = $$049 + 1 | 0;
   }
   break;
  }
 case 2:
  {
   $16 = HEAP32[$0 + 44 >> 2] | 0;
   $$150 = 0;
   while (1) {
    if (($$150 | 0) >= ($16 | 0)) break L1;
    $18 = $0 + 48 + ($$150 << 8) + 4 | 0;
    if ((HEAP32[$18 >> 2] | 0) > -1 ? +HEAPF64[$0 + 48 + ($$150 << 8) + 32 >> 3] < .5 : 0) {
     HEAP32[$0 + 48 + ($$150 << 8) + 12 >> 2] = -1;
     HEAP32[$18 >> 2] = -1;
     HEAP32[$0 + 48 + ($$150 << 8) + 236 >> 2] = 6;
    }
    $$150 = $$150 + 1 | 0;
   }
   break;
  }
 default:
  {
   $28 = HEAP32[$0 + 44 >> 2] | 0;
   $$2 = 0;
   while (1) {
    if (($$2 | 0) >= ($28 | 0)) break L1;
    $30 = $0 + 48 + ($$2 << 8) + 8 | 0;
    if ((HEAP32[$30 >> 2] | 0) > -1 ? +HEAPF64[$0 + 48 + ($$2 << 8) + 40 >> 3] < .5 : 0) {
     HEAP32[$30 >> 2] = -1;
     $$0 = 0;
    } else $$0 = 1;
    $36 = $0 + 48 + ($$2 << 8) + 12 | 0;
    if (((HEAP32[$36 >> 2] | 0) > -1 ? +HEAPF64[$0 + 48 + ($$2 << 8) + 48 >> 3] < .5 : 0) ? (HEAP32[$36 >> 2] = -1, ($$0 | 0) == 0) : 0) HEAP32[$0 + 48 + ($$2 << 8) + 236 >> 2] = 6;
    $$2 = $$2 + 1 | 0;
   }
  }
 } while (0);
 return;
}

function _getMultiEachMarkerInfo($id, $multiMarkerId, $markerIndex) {
 $id = $id | 0;
 $multiMarkerId = $multiMarkerId | 0;
 $markerIndex = $markerIndex | 0;
 var $2 = 0, $5 = 0, $8 = 0, $call7 = 0, $id$addr = 0, $retval$2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(65260, $id$addr) | 0) {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(65260, $id$addr) | 0;
  $2 = HEAP32[$call7 + 328 >> 2] | 0;
  if (($multiMarkerId | 0) < 0 ? 1 : (HEAP32[$call7 + 332 >> 2] | 0) - $2 >> 3 >>> 0 <= $multiMarkerId >>> 0) {
   $retval$2 = HEAP32[4225] | 0;
   break;
  }
  $5 = HEAP32[$2 + ($multiMarkerId << 3) + 4 >> 2] | 0;
  if (($markerIndex | 0) < 0 ? 1 : (HEAP32[$5 + 4 >> 2] | 0) <= ($markerIndex | 0)) {
   $retval$2 = HEAP32[4226] | 0;
   break;
  } else {
   $8 = HEAP32[$5 >> 2] | 0;
   _matrixCopy($8 + ($markerIndex * 320 | 0) + 16 | 0, 61136);
   _emscripten_asm_const_iiiid(1, HEAP32[$8 + ($markerIndex * 320 | 0) + 304 >> 2] | 0, HEAP32[$8 + ($markerIndex * 320 | 0) >> 2] | 0, HEAP32[$8 + ($markerIndex * 320 | 0) + 4 >> 2] | 0, +(+HEAPF64[$8 + ($markerIndex * 320 | 0) + 8 >> 3])) | 0;
   $retval$2 = 0;
   break;
  }
 } else $retval$2 = HEAP32[4224] | 0; while (0);
 STACKTOP = sp;
 return $retval$2 | 0;
}

function __ZL15genBWImageQuartPhiiPiS0_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$065 = 0, $$066 = 0, $$067 = 0, $$068 = 0, $$069 = 0, $$070 = 0, $$1 = 0, $11 = 0, $5 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = ($1 | 0) / 4 | 0;
 HEAP32[$3 >> 2] = $5;
 $6 = ($2 | 0) / 4 | 0;
 HEAP32[$4 >> 2] = $6;
 $8 = _malloc(Math_imul($6, $5) | 0) | 0;
 if (!$8) {
  _arLog(0, 3, 45930, sp);
  _exit(1);
 }
 $$0 = 0;
 $$066 = $8;
 while (1) {
  if (($$0 | 0) >= ($6 | 0)) break;
  $11 = $$0 << 2;
  $$065 = 0;
  $$067 = $0 + (Math_imul($11, $1) | 0) | 0;
  $$068 = $0 + (Math_imul($11 | 3, $1) | 0) | 0;
  $$069 = $0 + (Math_imul($11 | 2, $1) | 0) | 0;
  $$070 = $0 + (Math_imul($11 | 1, $1) | 0) | 0;
  $$1 = $$066;
  while (1) {
   if (($$065 | 0) >= ($5 | 0)) break;
   HEAP8[$$1 >> 0] = ((HEAPU8[$$067 + 1 >> 0] | 0) + (HEAPU8[$$067 >> 0] | 0) + (HEAPU8[$$067 + 2 >> 0] | 0) + (HEAPU8[$$067 + 3 >> 0] | 0) + (HEAPU8[$$070 >> 0] | 0) + (HEAPU8[$$070 + 1 >> 0] | 0) + (HEAPU8[$$070 + 2 >> 0] | 0) + (HEAPU8[$$070 + 3 >> 0] | 0) + (HEAPU8[$$069 >> 0] | 0) + (HEAPU8[$$069 + 1 >> 0] | 0) + (HEAPU8[$$069 + 2 >> 0] | 0) + (HEAPU8[$$069 + 3 >> 0] | 0) + (HEAPU8[$$068 >> 0] | 0) + (HEAPU8[$$068 + 1 >> 0] | 0) + (HEAPU8[$$068 + 2 >> 0] | 0) + (HEAPU8[$$068 + 3 >> 0] | 0) | 0) / 16 | 0;
   $$065 = $$065 + 1 | 0;
   $$067 = $$067 + 4 | 0;
   $$068 = $$068 + 4 | 0;
   $$069 = $$069 + 4 | 0;
   $$070 = $$070 + 4 | 0;
   $$1 = $$1 + 1 | 0;
  }
  $$0 = $$0 + 1 | 0;
  $$066 = $$1;
 }
 STACKTOP = sp;
 return $8 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $17 = 0, $24 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 $$byval_copy = sp + 184 | 0;
 $5 = sp + 192 | 0;
 $6 = sp + 160 | 0;
 $7 = sp;
 $8 = sp + 188 | 0;
 HEAP8[$5 >> 0] = HEAP8[59178] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[59179] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[59180] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[59181] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[59182] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[59183] | 0;
 $9 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $10 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 20, $9, $5, $$byval_copy) | 0;
 $11 = $6 + $10 | 0;
 $12 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $11, $2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 $13 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 66544) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$13 >> 2] | 0) + 48 >> 2] & 15]($13, $6, $11, $7) | 0;
 $17 = $7 + ($10 << 2) | 0;
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $24 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, ($12 | 0) == ($11 | 0) ? $17 : $7 + ($12 - $6 << 2) | 0, $17, $2, $3) | 0;
 STACKTOP = sp;
 return $24 | 0;
}

function __ZNK12_GLOBAL__N_116itanium_demangle8CastExpr9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy2 = 0, $12 = 0, $13 = 0, $18 = 0, $2 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 32 | 0;
 $2 = sp;
 $3 = sp + 24 | 0;
 $4 = sp + 16 | 0;
 $5 = sp + 8 | 0;
 $7 = $0 + 8 | 0;
 $12 = HEAP32[$7 + 4 >> 2] | 0;
 $13 = $2;
 HEAP32[$13 >> 2] = HEAP32[$7 >> 2];
 HEAP32[$13 + 4 >> 2] = $12;
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 52150);
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
 $18 = HEAP32[$0 + 16 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$18 >> 2] | 0) + 16 >> 2] & 255]($18, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 53140);
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
 $23 = HEAP32[$0 + 20 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$23 >> 2] | 0) + 16 >> 2] & 255]($23, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 51964);
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
 STACKTOP = sp;
 return;
}

function __ZN6vision25MatrixInverseSymmetric3x3IfEEbPT_PKS1_S1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 var $$0 = 0, $11 = 0, $14 = 0.0, $15 = 0, $17 = 0, $23 = 0.0, $24 = 0, $3 = 0.0, $30 = 0.0, $31 = 0, $36 = 0.0, $44 = 0.0, $45 = 0, $50 = 0.0, $6 = 0.0, $7 = 0, $9 = 0;
 $3 = +__ZN6vision23DeterminantSymmetric3x3IfEET_PKS1_($1);
 if (!(+Math_abs(+$3) <= $2)) {
  $6 = 1.0 / $3;
  $7 = $1 + 16 | 0;
  $9 = $1 + 20 | 0;
  $11 = $1 + 32 | 0;
  $14 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_(+HEAPF32[$7 >> 2], +HEAPF32[$9 >> 2], +HEAPF32[$11 >> 2]);
  HEAPF32[$0 >> 2] = $14;
  $15 = $1 + 8 | 0;
  $17 = $1 + 4 | 0;
  $23 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$15 >> 2], +HEAPF32[$17 >> 2], +HEAPF32[$11 >> 2], +HEAPF32[$1 + 28 >> 2]);
  $24 = $0 + 4 | 0;
  HEAPF32[$24 >> 2] = $23;
  $30 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$17 >> 2], +HEAPF32[$15 >> 2], +HEAPF32[$7 >> 2], +HEAPF32[$9 >> 2]);
  $31 = $0 + 8 | 0;
  HEAPF32[$31 >> 2] = $30;
  $36 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_(+HEAPF32[$1 >> 2], +HEAPF32[$15 >> 2], +HEAPF32[$11 >> 2]);
  HEAPF32[$0 + 16 >> 2] = $36;
  $44 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$15 >> 2], +HEAPF32[$1 >> 2], +HEAPF32[$9 >> 2], +HEAPF32[$1 + 12 >> 2]);
  $45 = $0 + 20 | 0;
  HEAPF32[$45 >> 2] = $44;
  $50 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_(+HEAPF32[$1 >> 2], +HEAPF32[$17 >> 2], +HEAPF32[$7 >> 2]);
  HEAPF32[$0 + 32 >> 2] = $50;
  HEAP32[$0 + 12 >> 2] = HEAP32[$24 >> 2];
  HEAP32[$0 + 24 >> 2] = HEAP32[$31 >> 2];
  HEAP32[$0 + 28 >> 2] = HEAP32[$45 >> 2];
  $$0 = 1;
 } else $$0 = 0;
 return $$0 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $17 = 0, $24 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $$byval_copy = sp + 72 | 0;
 $5 = sp + 80 | 0;
 $6 = sp + 48 | 0;
 $7 = sp;
 $8 = sp + 76 | 0;
 HEAP8[$5 >> 0] = HEAP8[59178] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[59179] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[59180] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[59181] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[59182] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[59183] | 0;
 $9 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $10 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 20, $9, $5, $$byval_copy) | 0;
 $11 = $6 + $10 | 0;
 $12 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $11, $2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 $13 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 66512) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$13 >> 2] | 0) + 32 >> 2] & 15]($13, $6, $11, $7) | 0;
 $17 = $7 + $10 | 0;
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $24 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, ($12 | 0) == ($11 | 0) ? $17 : $7 + ($12 - $6) | 0, $17, $2, $3) | 0;
 STACKTOP = sp;
 return $24 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseSourceNameEPNS5_9NameStateE($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $1 = 0, $2 = 0, $3 = 0, $5 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 24 | 0;
 $1 = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 HEAP32[$1 >> 2] = 0;
 if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parsePositiveIntegerEPm($0, $1) | 0) ? ($5 = __ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0) | 0, $6 = HEAP32[$1 >> 2] | 0, ($6 + -1 | 0) >>> 0 < $5 >>> 0) : 0) {
  $9 = HEAP32[$0 >> 2] | 0;
  __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($2, $9, $9 + $6 | 0);
  HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + $6;
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 53507);
  HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  if (__ZNK12_GLOBAL__N_110StringView10startsWithES0_($2, $$byval_copy) | 0) $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA22_KcEEEPNS0_4NodeEDpOT0_($0) | 0; else $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0, $2) | 0;
  $$1 = $$0;
 } else $$1 = 0;
 STACKTOP = sp;
 return $$1 | 0;
}

function ___mo_lookup($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$090 = 0, $$094 = 0, $$4 = 0, $10 = 0, $13 = 0, $17 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $31 = 0, $35 = 0, $4 = 0, $44 = 0, $46 = 0, $49 = 0, $53 = 0, $63 = 0, $7 = 0;
 $4 = (HEAP32[$0 >> 2] | 0) + 1794895138 | 0;
 $7 = _swapc(HEAP32[$0 + 8 >> 2] | 0, $4) | 0;
 $10 = _swapc(HEAP32[$0 + 12 >> 2] | 0, $4) | 0;
 $13 = _swapc(HEAP32[$0 + 16 >> 2] | 0, $4) | 0;
 L1 : do if (($7 >>> 0 < $1 >>> 2 >>> 0 ? ($17 = $1 - ($7 << 2) | 0, $10 >>> 0 < $17 >>> 0 & $13 >>> 0 < $17 >>> 0) : 0) ? (($13 | $10) & 3 | 0) == 0 : 0) {
  $23 = $10 >>> 2;
  $24 = $13 >>> 2;
  $$090 = 0;
  $$094 = $7;
  while (1) {
   $25 = $$094 >>> 1;
   $26 = $$090 + $25 | 0;
   $27 = $26 << 1;
   $28 = $27 + $23 | 0;
   $31 = _swapc(HEAP32[$0 + ($28 << 2) >> 2] | 0, $4) | 0;
   $35 = _swapc(HEAP32[$0 + ($28 + 1 << 2) >> 2] | 0, $4) | 0;
   if (!($35 >>> 0 < $1 >>> 0 & $31 >>> 0 < ($1 - $35 | 0) >>> 0)) {
    $$4 = 0;
    break L1;
   }
   if (HEAP8[$0 + ($35 + $31) >> 0] | 0) {
    $$4 = 0;
    break L1;
   }
   $44 = _strcmp($2, $0 + $35 | 0) | 0;
   if (!$44) break;
   $63 = ($44 | 0) < 0;
   if (($$094 | 0) == 1) {
    $$4 = 0;
    break L1;
   }
   $$090 = $63 ? $$090 : $26;
   $$094 = $63 ? $25 : $$094 - $25 | 0;
  }
  $46 = $27 + $24 | 0;
  $49 = _swapc(HEAP32[$0 + ($46 << 2) >> 2] | 0, $4) | 0;
  $53 = _swapc(HEAP32[$0 + ($46 + 1 << 2) >> 2] | 0, $4) | 0;
  if ($53 >>> 0 < $1 >>> 0 & $49 >>> 0 < ($1 - $53 | 0) >>> 0) $$4 = (HEAP8[$0 + ($53 + $49) >> 0] | 0) == 0 ? $0 + $53 | 0 : 0; else $$4 = 0;
 } else $$4 = 0; while (0);
 return $$4 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $13 = 0, $19 = 0, $22 = 0, $23 = 0, $25 = 0, $32 = 0, $33 = 0, $44 = 0;
 L1 : do if (!(__ZL8is_equalPKSt9type_infoS1_b($0, HEAP32[$1 + 8 >> 2] | 0, $4) | 0)) {
  if (!(__ZL8is_equalPKSt9type_infoS1_b($0, HEAP32[$1 >> 2] | 0, $4) | 0)) {
   $44 = HEAP32[$0 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$44 >> 2] | 0) + 24 >> 2] & 63]($44, $1, $2, $3, $4);
   break;
  }
  if ((HEAP32[$1 + 16 >> 2] | 0) != ($2 | 0) ? ($13 = $1 + 20 | 0, (HEAP32[$13 >> 2] | 0) != ($2 | 0)) : 0) {
   HEAP32[$1 + 32 >> 2] = $3;
   $19 = $1 + 44 | 0;
   do if ((HEAP32[$19 >> 2] | 0) != 4) {
    $22 = $1 + 52 | 0;
    HEAP8[$22 >> 0] = 0;
    $23 = $1 + 53 | 0;
    HEAP8[$23 >> 0] = 0;
    $25 = HEAP32[$0 + 8 >> 2] | 0;
    FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$25 >> 2] | 0) + 20 >> 2] & 7]($25, $1, $2, $2, 1, $4);
    if (HEAP8[$23 >> 0] | 0) {
     $32 = (HEAP8[$22 >> 0] | 0) == 0;
     HEAP32[$19 >> 2] = 3;
     if ($32) break; else break L1;
    } else {
     HEAP32[$19 >> 2] = 4;
     break;
    }
   } while (0);
   HEAP32[$13 >> 2] = $2;
   $33 = $1 + 40 | 0;
   HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1;
   if ((HEAP32[$1 + 36 >> 2] | 0) != 1) break;
   if ((HEAP32[$1 + 24 >> 2] | 0) != 2) break;
   HEAP8[$1 + 54 >> 0] = 1;
   break;
  }
  if (($3 | 0) == 1) HEAP32[$1 + 32 >> 2] = 1;
 } else __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, $1, $2, $3); while (0);
 return;
}

function _jpeg_resync_to_restart($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$034$ph = 0, $$035 = 0, $14 = 0, $17 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $3 = 0, $32 = 0, $4 = 0, $or$cond37 = 0, $spec$select36 = 0, label = 0;
 $2 = $0 + 440 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 HEAP32[$4 + 20 >> 2] = 124;
 HEAP32[$4 + 24 >> 2] = $3;
 HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $1;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, -1);
 $14 = $1 + 1 & 7 | 208;
 $17 = $1 + 2 & 7 | 208;
 $20 = $1 + 7 & 7 | 208;
 $23 = $1 + 6 & 7 | 208;
 $$034$ph = $3;
 L1 : while (1) {
  $24 = ($$034$ph | 0) < 192;
  $or$cond37 = ($$034$ph & -8 | 0) != 208 | ($$034$ph | 0) == ($14 | 0) | ($$034$ph | 0) == ($17 | 0);
  $spec$select36 = ($$034$ph | 0) == ($20 | 0) | ($$034$ph | 0) == ($23 | 0) ? 2 : 1;
  L3 : while (1) {
   $$0 = $24 ? 2 : $or$cond37 ? 3 : $spec$select36;
   $32 = HEAP32[$0 >> 2] | 0;
   HEAP32[$32 + 20 >> 2] = 99;
   HEAP32[$32 + 24 >> 2] = $$034$ph;
   HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $$0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0, 4);
   switch ($$0 & 3) {
   case 1:
    {
     label = 4;
     break L1;
     break;
    }
   case 3:
    {
     $$035 = 1;
     label = 7;
     break L1;
     break;
    }
   case 2:
    {
     break L3;
     break;
    }
   default:
    {}
   }
  }
  if (!(_next_marker($0) | 0)) {
   $$035 = 0;
   label = 7;
   break;
  }
  $$034$ph = HEAP32[$2 >> 2] | 0;
 }
 if ((label | 0) == 4) {
  HEAP32[$2 >> 2] = 0;
  $$035 = 1;
  return $$035 | 0;
 } else if ((label | 0) == 7) return $$035 | 0;
 return 0;
}

function __ZNK12_GLOBAL__N_116itanium_demangle15ConditionalExpr9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy3 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy3 = sp + 32 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 16 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 51968);
 HEAP32[$$byval_copy3 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy3 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy3);
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$0 + 8 >> 2] | 0, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 53204);
 HEAP32[$$byval_copy3 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy3 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy3);
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$0 + 12 >> 2] | 0, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 53210);
 HEAP32[$$byval_copy3 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$$byval_copy3 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy3);
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$0 + 16 >> 2] | 0, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 51964);
 HEAP32[$$byval_copy3 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$$byval_copy3 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $16 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $8 = 0, $9 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = (((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 36 | 0) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $16 = ((HEAP32[$0 + 8 >> 2] | 0) - $14 | 0) / 36 | 0;
  $19 = $16 << 1;
  __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEEC2EmmS6_($2, $16 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, ((HEAP32[$3 >> 2] | 0) - $14 | 0) / 36 | 0, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  dest = $25;
  src = $1;
  stop = dest + 36 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP32[$24 >> 2] = $25 + 36;
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
  __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZN6vision25DoGScaleInvariantDetector5allocEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $22 = 0, $23 = 0, $25 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0;
 __ZN6vision10DoGPyramid5allocEPKNS_25GaussianScaleSpacePyramidE($0 + 32 | 0, $1);
 $4 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 $6 = __ZNK6vision5Image5widthEv(HEAP32[$4 >> 2] | 0) | 0;
 $7 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 $9 = __ZNK6vision5Image6heightEv(HEAP32[$7 >> 2] | 0) | 0;
 $10 = __ZNK6vision25GaussianScaleSpacePyramid10numOctavesEv($1) | 0;
 __ZN6vision21OrientationAssignment5allocEmmiiiffif($0 + 92 | 0, $6, $9, $10, __ZNK6vision25GaussianScaleSpacePyramid18numScalesPerOctaveEv($1) | 0, 36, 3.0, 1.5, 5, .800000011920929);
 $12 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 $14 = __ZNK6vision5Image5widthEv(HEAP32[$12 >> 2] | 0) | 0;
 HEAP32[$0 >> 2] = $14;
 $15 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 $17 = __ZNK6vision5Image6heightEv(HEAP32[$15 >> 2] | 0) | 0;
 HEAP32[$0 + 4 >> 2] = $17;
 $19 = $0 + 16 | 0;
 __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE6resizeEm($19, HEAP32[$0 + 8 >> 2] | 0);
 $22 = $0 + 20 | 0;
 $23 = $0 + 12 | 0;
 $$0 = 0;
 while (1) {
  $25 = HEAP32[$19 >> 2] | 0;
  if ($$0 >>> 0 >= (((HEAP32[$22 >> 2] | 0) - $25 | 0) / 12 | 0) >>> 0) break;
  __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE6resizeEm($25 + ($$0 * 12 | 0) | 0, HEAP32[$23 >> 2] | 0);
  $$0 = $$0 + 1 | 0;
 }
 return;
}

function _init_error_limit($0) {
 $0 = $0 | 0;
 var $$14042 = 0, $$143 = 0, $$241 = 0, $2 = 0, $47 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 484 >> 2] | 0;
 $6 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, 2044) | 0;
 $7 = $6 + 1020 | 0;
 HEAP32[$2 + 40 >> 2] = $7;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$6 + 1024 >> 2] = 1;
 HEAP32[$6 + 1016 >> 2] = -1;
 HEAP32[$6 + 1028 >> 2] = 2;
 HEAP32[$6 + 1012 >> 2] = -2;
 HEAP32[$6 + 1032 >> 2] = 3;
 HEAP32[$6 + 1008 >> 2] = -3;
 HEAP32[$6 + 1036 >> 2] = 4;
 HEAP32[$6 + 1004 >> 2] = -4;
 HEAP32[$6 + 1040 >> 2] = 5;
 HEAP32[$6 + 1e3 >> 2] = -5;
 HEAP32[$6 + 1044 >> 2] = 6;
 HEAP32[$6 + 996 >> 2] = -6;
 HEAP32[$6 + 1048 >> 2] = 7;
 HEAP32[$6 + 992 >> 2] = -7;
 HEAP32[$6 + 1052 >> 2] = 8;
 HEAP32[$6 + 988 >> 2] = -8;
 HEAP32[$6 + 1056 >> 2] = 9;
 HEAP32[$6 + 984 >> 2] = -9;
 HEAP32[$6 + 1060 >> 2] = 10;
 HEAP32[$6 + 980 >> 2] = -10;
 HEAP32[$6 + 1064 >> 2] = 11;
 HEAP32[$6 + 976 >> 2] = -11;
 HEAP32[$6 + 1068 >> 2] = 12;
 HEAP32[$6 + 972 >> 2] = -12;
 HEAP32[$6 + 1072 >> 2] = 13;
 HEAP32[$6 + 968 >> 2] = -13;
 HEAP32[$6 + 1076 >> 2] = 14;
 HEAP32[$6 + 964 >> 2] = -14;
 HEAP32[$6 + 1080 >> 2] = 15;
 HEAP32[$6 + 960 >> 2] = -15;
 $$14042 = 16;
 $$143 = 16;
 do {
  HEAP32[$7 + ($$14042 << 2) >> 2] = $$143;
  HEAP32[$7 + (0 - $$14042 << 2) >> 2] = 0 - $$143;
  $$14042 = $$14042 + 1 | 0;
  $$143 = ($$14042 & 1 ^ 1) + $$143 | 0;
 } while (($$14042 | 0) != 48);
 $47 = 0 - $$143 | 0;
 $$241 = 48;
 do {
  HEAP32[$7 + ($$241 << 2) >> 2] = $$143;
  HEAP32[$7 + (0 - $$241 << 2) >> 2] = $47;
  $$241 = $$241 + 1 | 0;
 } while (($$241 | 0) != 256);
 return;
}

function _arMatrixPCA($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$064 = 0, $$065 = 0.0, $$1 = 0, $$2 = 0, $18 = 0, $24 = 0, $27 = 0.0, $32 = 0, $35 = 0, $39 = 0, $40 = 0, $49 = 0, $5 = 0, $7 = 0, $9 = 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $7 = HEAP32[$0 + 8 >> 2] | 0;
 $9 = ($5 | 0) < ($7 | 0) ? $5 : $7;
 L1 : do if (((((!(($5 | 0) < 2 | ($7 | 0) < 2) ? (HEAP32[$1 + 8 >> 2] | 0) == ($7 | 0) : 0) ? (HEAP32[$1 + 4 >> 2] | 0) == ($9 | 0) : 0) ? ($18 = $2 + 4 | 0, (HEAP32[$18 >> 2] | 0) == ($9 | 0)) : 0) ? (HEAP32[$3 + 4 >> 2] | 0) == ($7 | 0) : 0) ? ($24 = _arMatrixAllocDup($0) | 0, ($24 | 0) != 0) : 0) {
  $27 = +Math_sqrt(+(+($5 | 0)));
  if ((_EX($24, $3) | 0) < 0) {
   _arMatrixFree($24) | 0;
   $$064 = -1;
   break;
  }
  if ((_CENTER($24, $3) | 0) < 0) {
   _arMatrixFree($24) | 0;
   $$064 = -1;
   break;
  }
  $32 = Math_imul($7, $5) | 0;
  $$0 = 0;
  while (1) {
   if (($$0 | 0) >= ($32 | 0)) break;
   $35 = (HEAP32[$24 >> 2] | 0) + ($$0 << 3) | 0;
   HEAPF64[$35 >> 3] = +HEAPF64[$35 >> 3] / $27;
   $$0 = $$0 + 1 | 0;
  }
  $39 = _PCA($24, $1, $2) | 0;
  _arMatrixFree($24) | 0;
  $40 = HEAP32[$18 >> 2] | 0;
  $$065 = 0.0;
  $$1 = 0;
  while (1) {
   if (($$1 | 0) >= ($40 | 0)) break;
   $$065 = $$065 + +HEAPF64[(HEAP32[$2 >> 2] | 0) + ($$1 << 3) >> 3];
   $$1 = $$1 + 1 | 0;
  }
  $$2 = 0;
  while (1) {
   if (($$2 | 0) >= ($40 | 0)) {
    $$064 = $39;
    break L1;
   }
   $49 = (HEAP32[$2 >> 2] | 0) + ($$2 << 3) | 0;
   HEAPF64[$49 >> 3] = +HEAPF64[$49 >> 3] / $$065;
   $$2 = $$2 + 1 | 0;
  }
 } else $$064 = -1; while (0);
 return $$064 | 0;
}

function _setup($width, $height, $cameraID) {
 $width = $width | 0;
 $height = $height | 0;
 $cameraID = $cameraID | 0;
 var $0 = 0, $call = 0, $call10 = 0, $call7 = 0, $call9 = 0, $id = 0, $mul4 = 0, $vararg_buffer1 = 0, $videoFrame = 0, $videoFrameSize = 0, $videoLuma = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer1 = sp + 8 | 0;
 $id = sp + 12 | 0;
 $0 = HEAP32[16326] | 0;
 HEAP32[16326] = $0 + 1;
 HEAP32[$id >> 2] = $0;
 $call = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(65260, $id) | 0;
 HEAP32[$call >> 2] = HEAP32[$id >> 2];
 HEAP32[$call + 208 >> 2] = $width;
 HEAP32[$call + 212 >> 2] = $height;
 $mul4 = Math_imul($width << 2, $height) | 0;
 $videoFrameSize = $call + 200 | 0;
 HEAP32[$videoFrameSize >> 2] = $mul4;
 $call7 = _malloc($mul4) | 0;
 $videoFrame = $call + 196 | 0;
 HEAP32[$videoFrame >> 2] = $call7;
 $call9 = _malloc((HEAP32[$videoFrameSize >> 2] | 0) / 4 | 0) | 0;
 $videoLuma = $call + 204 | 0;
 HEAP32[$videoLuma >> 2] = $call9;
 $call10 = _arPattCreateHandle() | 0;
 HEAP32[$call + 220 >> 2] = $call10;
 if (!$call10) _arLog(0, 3, 45426, sp);
 _setCamera(HEAP32[$id >> 2] | 0, $cameraID) | 0;
 HEAP32[$vararg_buffer1 >> 2] = HEAP32[$videoFrameSize >> 2];
 _arLog(0, 1, 45463, $vararg_buffer1);
 _emscripten_asm_const_iiiiiii(0, HEAP32[$call >> 2] | 0, HEAP32[$videoFrame >> 2] | 0, HEAP32[$videoFrameSize >> 2] | 0, $call + 344 | 0, 61136, HEAP32[$videoLuma >> 2] | 0) | 0;
 STACKTOP = sp;
 return HEAP32[$call >> 2] | 0;
}

function __ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$sroa$04$0$i = 0, $$sroa$04$1$i = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $23 = 0, $24 = 0, $29 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(416);
 $7 = sp;
 $8 = sp + 400 | 0;
 HEAP32[$8 >> 2] = $7 + 400;
 __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc($0 + 8 | 0, $7, $8, $4, $5, $6);
 $11 = HEAP32[$8 >> 2] | 0;
 $$0$i$i = $7;
 $$sroa$04$0$i = HEAP32[$1 >> 2] | 0;
 while (1) {
  if (($$0$i$i | 0) == ($11 | 0)) break;
  $14 = HEAP32[$$0$i$i >> 2] | 0;
  if (!$$sroa$04$0$i) $$sroa$04$1$i = 0; else {
   $16 = $$sroa$04$0$i + 24 | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if (($17 | 0) == (HEAP32[$$sroa$04$0$i + 28 >> 2] | 0)) {
    $23 = HEAP32[(HEAP32[$$sroa$04$0$i >> 2] | 0) + 52 >> 2] | 0;
    $24 = __ZNSt3__211char_traitsIwE11to_int_typeEw($14) | 0;
    $$0$i$i$i$i = FUNCTION_TABLE_iii[$23 & 127]($$sroa$04$0$i, $24) | 0;
   } else {
    HEAP32[$16 >> 2] = $17 + 4;
    HEAP32[$17 >> 2] = $14;
    $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw($14) | 0;
   }
   $29 = __ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0;
   $$sroa$04$1$i = $29 ? 0 : $$sroa$04$0$i;
  }
  $$0$i$i = $$0$i$i + 4 | 0;
  $$sroa$04$0$i = $$sroa$04$1$i;
 }
 STACKTOP = sp;
 return $$sroa$04$0$i | 0;
}

function __ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$sroa$04$0$i = 0, $$sroa$04$1$i = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $23 = 0, $24 = 0, $29 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $7 = sp;
 $8 = sp + 100 | 0;
 HEAP32[$8 >> 2] = $7 + 100;
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc($0 + 8 | 0, $7, $8, $4, $5, $6);
 $11 = HEAP32[$8 >> 2] | 0;
 $$0$i$i = $7;
 $$sroa$04$0$i = HEAP32[$1 >> 2] | 0;
 while (1) {
  if (($$0$i$i | 0) == ($11 | 0)) break;
  $14 = HEAP8[$$0$i$i >> 0] | 0;
  if (!$$sroa$04$0$i) $$sroa$04$1$i = 0; else {
   $16 = $$sroa$04$0$i + 24 | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if (($17 | 0) == (HEAP32[$$sroa$04$0$i + 28 >> 2] | 0)) {
    $23 = HEAP32[(HEAP32[$$sroa$04$0$i >> 2] | 0) + 52 >> 2] | 0;
    $24 = __ZNSt3__211char_traitsIcE11to_int_typeEc($14) | 0;
    $$0$i$i$i$i = FUNCTION_TABLE_iii[$23 & 127]($$sroa$04$0$i, $24) | 0;
   } else {
    HEAP32[$16 >> 2] = $17 + 1;
    HEAP8[$17 >> 0] = $14;
    $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc($14) | 0;
   }
   $29 = __ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0;
   $$sroa$04$1$i = $29 ? 0 : $$sroa$04$0$i;
  }
  $$0$i$i = $$0$i$i + 1 | 0;
  $$sroa$04$0$i = $$sroa$04$1$i;
 }
 STACKTOP = sp;
 return $$sroa$04$0$i | 0;
}

function __ZN6vision24OrthogonalizeIdentity8x9IfEEbPT_PKS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $12 = 0.0, $15 = 0.0, $18 = 0.0, $2 = 0, $21 = 0.0, $24 = 0.0, $27 = 0.0, $29 = 0, $3 = 0, $4 = 0.0, $6 = 0.0, $9 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(384);
 $2 = sp + 336 | 0;
 $3 = sp;
 $4 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3, $1, 0);
 HEAPF32[$2 >> 2] = $4;
 $6 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 36 | 0, $1, 1);
 HEAPF32[$2 + 4 >> 2] = $6;
 $9 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 72 | 0, $1, 2);
 HEAPF32[$2 + 8 >> 2] = $9;
 $12 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 108 | 0, $1, 3);
 HEAPF32[$2 + 12 >> 2] = $12;
 $15 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 144 | 0, $1, 4);
 HEAPF32[$2 + 16 >> 2] = $15;
 $18 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 180 | 0, $1, 5);
 HEAPF32[$2 + 20 >> 2] = $18;
 $21 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 216 | 0, $1, 6);
 HEAPF32[$2 + 24 >> 2] = $21;
 $24 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 252 | 0, $1, 7);
 HEAPF32[$2 + 28 >> 2] = $24;
 $27 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 288 | 0, $1, 8);
 HEAPF32[$2 + 32 >> 2] = $27;
 $29 = __ZN6vision9MaxIndex9IfEEiPKT_($2) | 0;
 if (+HEAPF32[$2 + ($29 << 2) >> 2] == 0.0) $$0 = 0; else {
  __ZN6vision11CopyVector9IfEEvPT_PKS1_($0, $3 + ($29 * 9 << 2) | 0);
  $$0 = 1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZL28demangling_terminate_handlerv() {
 var $0 = 0, $1 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $27 = 0, $3 = 0, $6 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $0 = sp + 36 | 0;
 $1 = ___cxa_get_globals_fast() | 0;
 if ($1 | 0 ? ($3 = HEAP32[$1 >> 2] | 0, $3 | 0) : 0) {
  $6 = $3 + 48 | 0;
  if (!(__ZN10__cxxabiv121__isOurExceptionClassEPK17_Unwind_Exception($6) | 0)) {
   HEAP32[$vararg_buffer7 >> 2] = 50980;
   _abort_message(50930, $vararg_buffer7);
  }
  $8 = __ZN10__cxxabiv119__getExceptionClassEPK17_Unwind_Exception($6) | 0;
  if (($8 | 0) == 1126902529 & (getTempRet0() | 0) == 1129074247) $15 = HEAP32[$3 + 44 >> 2] | 0; else $15 = $3 + 80 | 0;
  HEAP32[$0 >> 2] = $15;
  $16 = HEAP32[$3 >> 2] | 0;
  $18 = HEAP32[$16 + 4 >> 2] | 0;
  if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[3470] | 0) + 16 >> 2] & 63](13880, $16, $0) | 0) {
   $23 = HEAP32[$0 >> 2] | 0;
   $27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$23 >> 2] | 0) + 8 >> 2] & 127]($23) | 0;
   HEAP32[$vararg_buffer >> 2] = 50980;
   HEAP32[$vararg_buffer + 4 >> 2] = $18;
   HEAP32[$vararg_buffer + 8 >> 2] = $27;
   _abort_message(50844, $vararg_buffer);
  } else {
   HEAP32[$vararg_buffer3 >> 2] = 50980;
   HEAP32[$vararg_buffer3 + 4 >> 2] = $18;
   _abort_message(50889, $vararg_buffer3);
  }
 }
 _abort_message(50968, $vararg_buffer10);
}

function __ZNSt3__29__sift_upIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$sroa$0$0$in = 0, $11 = 0, $13 = 0, $18 = 0, $19 = 0, $23 = 0, $28 = 0, $29 = 0, $30 = 0, $30$phi = 0, $37 = 0, $39 = 0, $4 = 0, $44 = 0, $45 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 if (($3 | 0) > 1 ? ($7 = ($3 + -2 | 0) / 2 | 0, $8 = HEAP32[$0 >> 2] | 0, $9 = $8 + ($7 << 3) | 0, $11 = (HEAP32[$1 >> 2] | 0) + -8 | 0, HEAP32[$1 >> 2] = $11, __ZNK6vision17PriorityQueueItemILi96EEltERKS1_($9, $11) | 0) : 0) {
  $13 = $11;
  $18 = HEAP32[$13 + 4 >> 2] | 0;
  $19 = $4;
  HEAP32[$19 >> 2] = HEAP32[$13 >> 2];
  HEAP32[$19 + 4 >> 2] = $18;
  $$0 = $7;
  $$sroa$0$0$in = $9;
  $30 = $11;
  while (1) {
   $23 = $$sroa$0$0$in;
   $28 = HEAP32[$23 + 4 >> 2] | 0;
   $29 = $30;
   HEAP32[$29 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$29 + 4 >> 2] = $28;
   HEAP32[$1 >> 2] = $$sroa$0$0$in;
   if (!$$0) break;
   $$0 = ($$0 + -1 | 0) / 2 | 0;
   $37 = $8 + ($$0 << 3) | 0;
   if (!(__ZNK6vision17PriorityQueueItemILi96EEltERKS1_($37, $4) | 0)) break; else {
    $30$phi = $$sroa$0$0$in;
    $$sroa$0$0$in = $37;
    $30 = $30$phi;
   }
  }
  $39 = $4;
  $44 = HEAP32[$39 + 4 >> 2] | 0;
  $45 = $$sroa$0$0$in;
  HEAP32[$45 >> 2] = HEAP32[$39 >> 2];
  HEAP32[$45 + 4 >> 2] = $44;
  __ZN6vision17PriorityQueueItemILi96EED2Ev($4);
 }
 STACKTOP = sp;
 return;
}

function _post_process_2pass($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$1 = 0, $$pre$phi43Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $18 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $33 = 0, $40 = 0, $45 = 0, $46 = 0, $8 = 0, $9 = 0, $spec$select = 0;
 $8 = HEAP32[$0 + 456 >> 2] | 0;
 $9 = $8 + 24 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) {
  $18 = $8 + 20 | 0;
  $20 = $8 + 16 | 0;
  $22 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$0 + 4 >> 2] | 0) + 28 >> 2] & 31]($0, HEAP32[$8 + 8 >> 2] | 0, HEAP32[$18 >> 2] | 0, HEAP32[$20 >> 2] | 0, 0) | 0;
  HEAP32[$8 + 12 >> 2] = $22;
  $$pre$phi43Z2D = $18;
  $$pre$phiZ2D = $20;
  $26 = HEAP32[$9 >> 2] | 0;
  $40 = $22;
 } else {
  $$pre$phi43Z2D = $8 + 20 | 0;
  $$pre$phiZ2D = $8 + 16 | 0;
  $26 = $10;
  $40 = HEAP32[$8 + 12 >> 2] | 0;
 }
 $25 = (HEAP32[$$pre$phiZ2D >> 2] | 0) - $26 | 0;
 $27 = HEAP32[$5 >> 2] | 0;
 $28 = $6 - $27 | 0;
 $spec$select = $25 >>> 0 > $28 >>> 0 ? $28 : $25;
 $33 = (HEAP32[$0 + 116 >> 2] | 0) - (HEAP32[$$pre$phi43Z2D >> 2] | 0) | 0;
 $$1 = $spec$select >>> 0 > $33 >>> 0 ? $33 : $spec$select;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 + 484 >> 2] | 0) + 4 >> 2] & 31]($0, $40 + ($26 << 2) | 0, $4 + ($27 << 2) | 0, $$1);
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $$1;
 $45 = (HEAP32[$9 >> 2] | 0) + $$1 | 0;
 HEAP32[$9 >> 2] = $45;
 $46 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 if ($45 >>> 0 < $46 >>> 0) return;
 HEAP32[$$pre$phi43Z2D >> 2] = (HEAP32[$$pre$phi43Z2D >> 2] | 0) + $46;
 HEAP32[$9 >> 2] = 0;
 return;
}

function _ar2GetSearchPoint($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$sink = 0, $10 = 0, $11 = 0, $13 = 0.0, $15 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $6 = sp + 20 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 12 | 0;
 $9 = sp + 8 | 0;
 $10 = sp + 4 | 0;
 $11 = sp;
 $13 = +HEAPF32[$4 + 8 >> 2];
 $15 = +HEAPF32[$4 + 12 >> 2];
 if (($1 | 0) != 0 ? (_ar2MarkerCoord2ScreenCoord($0, $1, $13, $15, $6, $9) | 0) >= 0 : 0) {
  HEAP32[$5 >> 2] = ~~+HEAPF32[$6 >> 2];
  HEAP32[$5 + 4 >> 2] = ~~+HEAPF32[$9 >> 2];
  if (($2 | 0) != 0 ? (_ar2MarkerCoord2ScreenCoord($0, $2, $13, $15, $7, $10) | 0) >= 0 : 0) {
   HEAP32[$5 + 8 >> 2] = ~~(+HEAPF32[$6 >> 2] * 2.0 - +HEAPF32[$7 >> 2]);
   HEAP32[$5 + 12 >> 2] = ~~(+HEAPF32[$9 >> 2] * 2.0 - +HEAPF32[$10 >> 2]);
   if (($3 | 0) != 0 ? (_ar2MarkerCoord2ScreenCoord($0, $3, $13, $15, $8, $11) | 0) >= 0 : 0) {
    HEAP32[$5 + 16 >> 2] = ~~(+HEAPF32[$8 >> 2] + (+HEAPF32[$6 >> 2] * 3.0 - +HEAPF32[$7 >> 2] * 3.0));
    $$sink = ~~(+HEAPF32[$11 >> 2] + (+HEAPF32[$9 >> 2] * 3.0 - +HEAPF32[$10 >> 2] * 3.0));
   } else label = 10;
  } else label = 9;
 } else {
  HEAP32[$5 >> 2] = -1;
  HEAP32[$5 + 4 >> 2] = -1;
  label = 9;
 }
 if ((label | 0) == 9) {
  HEAP32[$5 + 8 >> 2] = -1;
  HEAP32[$5 + 12 >> 2] = -1;
  label = 10;
 }
 if ((label | 0) == 10) {
  HEAP32[$5 + 16 >> 2] = -1;
  $$sink = -1;
 }
 HEAP32[$5 + 20 >> 2] = $$sink;
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((((HEAP32[$3 >> 2] | 0) - $6 | 0) / 12 | 0) >>> 0 < $1 >>> 0) {
  $13 = (($6 - (HEAP32[$0 >> 2] | 0) | 0) / 12 | 0) + $1 | 0;
  $14 = __ZNKSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $20 = ((HEAP32[$3 >> 2] | 0) - $18 | 0) / 12 | 0;
   $23 = $20 << 1;
   __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEEC2EmmS8_($2, $20 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, ((HEAP32[$5 >> 2] | 0) - $18 | 0) / 12 | 0, $0 + 8 | 0);
   __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS5_RS6_EE($0, $2);
   __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryERKNS_5ImageE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $16 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $25 = 0, $3 = 0, $4 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 92 | 0;
 $4 = __ZN6vision25GaussianScaleSpacePyramid6imagesEv($3) | 0;
 if (((HEAP32[$4 + 4 >> 2] | 0) != (HEAP32[$4 >> 2] | 0) ? ($9 = __ZN6vision25GaussianScaleSpacePyramid6imagesEv($3) | 0, $11 = __ZNK6vision5Image5widthEv(HEAP32[$9 >> 2] | 0) | 0, ($11 | 0) == (__ZNK6vision5Image5widthEv($1) | 0)) : 0) ? ($14 = __ZN6vision25GaussianScaleSpacePyramid6imagesEv($3) | 0, $16 = __ZNK6vision5Image6heightEv(HEAP32[$14 >> 2] | 0) | 0, ($16 | 0) == (__ZNK6vision5Image6heightEv($1) | 0)) : 0) {} else {
  $19 = __ZNK6vision5Image5widthEv($1) | 0;
  $21 = __ZN6vision10numOctavesEiii($19, __ZNK6vision5Image6heightEv($1) | 0, 8) | 0;
  $22 = __ZNK6vision5Image5widthEv($1) | 0;
  __ZN6vision18BinomialPyramid32f5allocEmmi($3, $22, __ZNK6vision5Image6heightEv($1) | 0, $21);
 }
 __ZN6vision11ScopedTimerC2EPKc($2, 33175);
 if (__ZN6vision11ScopedTimercvbEv($2) | 0) __ZN6vision18BinomialPyramid32f5buildERKNS_5ImageE($3, $1);
 __ZN6vision11ScopedTimerD2Ev($2);
 $25 = __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_25GaussianScaleSpacePyramidE($0, $3) | 0;
 STACKTOP = sp;
 return $25 | 0;
}

function ___cxa_demangle($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$023 = 0, $$024 = 0, $12 = 0, $15 = 0, $4 = 0, $5 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4496 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(4496);
 $4 = sp;
 $5 = sp + 4472 | 0;
 if (($0 | 0) != 0 ? ($8 = ($2 | 0) == 0, !(($1 | 0) != 0 & $8)) : 0) {
  __ZN12_GLOBAL__N_116itanium_demangle14ManglingParserINS_16DefaultAllocatorEECI2NS0_22AbstractManglingParserIS3_S2_EEEPKcS6_($4, $0, $0 + (_strlen($0) | 0) | 0);
  __ZN12_GLOBAL__N_112OutputStreamC2Ev($5);
  $12 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E5parseEv($4) | 0;
  if ($12) if (__ZN12_GLOBAL__N_122initializeOutputStreamEPcPmRNS_12OutputStreamEm($1, $2, $5) | 0) {
   __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($12, $5);
   __ZN12_GLOBAL__N_112OutputStreampLEc($5, 0);
   if (!$8) {
    $15 = __ZNK12_GLOBAL__N_112OutputStream18getCurrentPositionEv($5) | 0;
    HEAP32[$2 >> 2] = $15;
   }
   $$023 = 0;
   $$024 = __ZN12_GLOBAL__N_112OutputStream9getBufferEv($5) | 0;
  } else {
   $$023 = -1;
   $$024 = $1;
  } else {
   $$023 = -2;
   $$024 = $1;
  }
  if ($3 | 0) HEAP32[$3 >> 2] = $$023;
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_ED2Ev($4);
  $$0 = ($$023 | 0) == 0 ? $$024 : 0;
 } else if (!$3) $$0 = 0; else {
  HEAP32[$3 >> 2] = -3;
  $$0 = 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__216__selection_sortIRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEvT0_S9_T_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sroa$0$0$copyload$i = 0, $$sroa$0$0$copyload6$i$ph = 0, $$sroa$0$0$ptr$i = 0, $11 = 0.0, $12 = 0.0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $26 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0;
 $3 = HEAP32[$1 >> 2] | 0;
 $4 = $3 + -8 | 0;
 $6 = HEAP32[$0 >> 2] | 0;
 while (1) {
  if (($6 | 0) == ($4 | 0)) break;
  L4 : do if (($6 | 0) == ($3 | 0)) $$sroa$0$0$copyload$i = $3; else {
   $$sroa$0$0$copyload6$i$ph = $6;
   while (1) {
    $8 = $$sroa$0$0$copyload6$i$ph + 4 | 0;
    $$sroa$0$0$ptr$i = $$sroa$0$0$copyload6$i$ph;
    while (1) {
     $9 = $$sroa$0$0$ptr$i + 8 | 0;
     if (($9 | 0) == ($3 | 0)) {
      $$sroa$0$0$copyload$i = $$sroa$0$0$copyload6$i$ph;
      break L4;
     }
     $11 = +HEAPF32[$$sroa$0$0$copyload6$i$ph >> 2];
     $12 = +HEAPF32[$9 >> 2];
     if ($11 < $12) break;
     if (!($12 < $11) ? (HEAP32[$8 >> 2] | 0) >>> 0 < (HEAP32[$$sroa$0$0$ptr$i + 12 >> 2] | 0) >>> 0 : 0) break;
     $$sroa$0$0$ptr$i = $9;
    }
    $$sroa$0$0$copyload6$i$ph = $9;
   }
  } while (0);
  if (($$sroa$0$0$copyload$i | 0) != ($6 | 0)) {
   $20 = HEAP32[$6 >> 2] | 0;
   HEAP32[$6 >> 2] = HEAP32[$$sroa$0$0$copyload$i >> 2];
   HEAP32[$$sroa$0$0$copyload$i >> 2] = $20;
   $22 = $6 + 4 | 0;
   $23 = $$sroa$0$0$copyload$i + 4 | 0;
   $24 = HEAP32[$22 >> 2] | 0;
   HEAP32[$22 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$23 >> 2] = $24;
  }
  $26 = $6 + 8 | 0;
  HEAP32[$0 >> 2] = $26;
  $6 = $26;
 }
 return;
}

function __ZNK12_GLOBAL__N_116itanium_demangle19PointerToMemberType9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy2 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy2 = sp + 24 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 $5 = $0 + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$6 >> 2] | 0) + 16 >> 2] & 255]($6, $1);
 if (!(__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE(HEAP32[$5 >> 2] | 0, $1) | 0) ? !(__ZNK12_GLOBAL__N_116itanium_demangle4Node11hasFunctionERNS_12OutputStreamE(HEAP32[$5 >> 2] | 0, $1) | 0) : 0) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 51966);
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 51968);
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
 }
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$0 + 8 >> 2] | 0, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 55865);
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $11 = 0, $12 = 0, $3 = 0, $6 = 0, $__end_ = 0, $__end_$i = 0, $__v = 0, $add = 0, $call$i = 0, $mul$i = 0, $sub$ptr$sub$i$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $__v = sp;
 $__end_$i = $this + 4 | 0;
 $add = ((HEAP32[$__end_$i >> 2] | 0) - (HEAP32[$this >> 2] | 0) >> 3) + 1 | 0;
 $call$i = __ZNKSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE8max_sizeEv($this) | 0;
 if ($call$i >>> 0 < $add >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this); else {
  $3 = HEAP32[$this >> 2] | 0;
  $sub$ptr$sub$i$i$i = (HEAP32[$this + 8 >> 2] | 0) - $3 | 0;
  $mul$i = $sub$ptr$sub$i$i$i >> 2;
  __ZNSt3__214__split_bufferI12multi_markerRNS_9allocatorIS1_EEEC2EmmS4_($__v, $sub$ptr$sub$i$i$i >> 3 >>> 0 < $call$i >>> 1 >>> 0 ? ($mul$i >>> 0 < $add >>> 0 ? $add : $mul$i) : $call$i, (HEAP32[$__end_$i >> 2] | 0) - $3 >> 3, $this + 8 | 0);
  $__end_ = $__v + 8 | 0;
  $6 = $__x;
  $11 = HEAP32[$6 + 4 >> 2] | 0;
  $12 = HEAP32[$__end_ >> 2] | 0;
  HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$12 + 4 >> 2] = $11;
  HEAP32[$__end_ >> 2] = (HEAP32[$__end_ >> 2] | 0) + 8;
  __ZNSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE($this, $__v);
  __ZNSt3__214__split_bufferI12multi_markerRNS_9allocatorIS1_EEED2Ev($__v);
  STACKTOP = sp;
  return;
 }
}

function _color_quantize($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$04147$us$us101 = 0, $$04252$us$us91 = 0, $$04356 = 0, $$04356$us74 = 0, $$04451$us$us92 = 0, $$04550$us$us93 = 0, $$048$us$us100 = 0, $$146$us$us102 = 0, $11 = 0, $7 = 0, $9 = 0;
 $7 = HEAP32[(HEAP32[$0 + 484 >> 2] | 0) + 24 >> 2] | 0;
 $9 = HEAP32[$0 + 112 >> 2] | 0;
 $11 = HEAP32[$0 + 120 >> 2] | 0;
 if (($3 | 0) < 1 | ($9 | 0) == 0) return;
 if (($11 | 0) <= 0) {
  $$04356 = 0;
  do {
   _memset(HEAP32[$2 + ($$04356 << 2) >> 2] | 0, 0, $9 | 0) | 0;
   $$04356 = $$04356 + 1 | 0;
  } while (($$04356 | 0) != ($3 | 0));
  return;
 }
 $$04356$us74 = 0;
 do {
  $$04252$us$us91 = $9;
  $$04451$us$us92 = HEAP32[$2 + ($$04356$us74 << 2) >> 2] | 0;
  $$04550$us$us93 = HEAP32[$1 + ($$04356$us74 << 2) >> 2] | 0;
  while (1) {
   $$04147$us$us101 = 0;
   $$048$us$us100 = 0;
   $$146$us$us102 = $$04550$us$us93;
   while (1) {
    $$048$us$us100 = $$048$us$us100 + (HEAPU8[(HEAP32[$7 + ($$04147$us$us101 << 2) >> 2] | 0) + (HEAPU8[$$146$us$us102 >> 0] | 0) >> 0] | 0) | 0;
    $$04147$us$us101 = $$04147$us$us101 + 1 | 0;
    if (($$04147$us$us101 | 0) == ($11 | 0)) break; else $$146$us$us102 = $$146$us$us102 + 1 | 0;
   }
   HEAP8[$$04451$us$us92 >> 0] = $$048$us$us100;
   $$04252$us$us91 = $$04252$us$us91 + -1 | 0;
   if (!$$04252$us$us91) break; else {
    $$04451$us$us92 = $$04451$us$us92 + 1 | 0;
    $$04550$us$us93 = $$04550$us$us93 + $11 | 0;
   }
  }
  $$04356$us74 = $$04356$us74 + 1 | 0;
 } while (($$04356$us74 | 0) != ($3 | 0));
 return;
}

function _post_process_prepass($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$phi$trans$insert = 0, $$pre$phi40Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $20 = 0, $22 = 0, $23 = 0, $29 = 0, $30 = 0, $32 = 0, $33 = 0, $42 = 0, $44 = 0, $45 = 0, $8 = 0, $9 = 0;
 $8 = HEAP32[$0 + 456 >> 2] | 0;
 $9 = $8 + 24 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) {
  $20 = $8 + 16 | 0;
  $22 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$0 + 4 >> 2] | 0) + 28 >> 2] & 31]($0, HEAP32[$8 + 8 >> 2] | 0, HEAP32[$8 + 20 >> 2] | 0, HEAP32[$20 >> 2] | 0, 1) | 0;
  $23 = $8 + 12 | 0;
  HEAP32[$23 >> 2] = $22;
  $$pre$phi40Z2D = $20;
  $$pre$phiZ2D = $23;
  $29 = $22;
  $32 = HEAP32[$9 >> 2] | 0;
 } else {
  $$phi$trans$insert = $8 + 12 | 0;
  $$pre$phi40Z2D = $8 + 16 | 0;
  $$pre$phiZ2D = $$phi$trans$insert;
  $29 = HEAP32[$$phi$trans$insert >> 2] | 0;
  $32 = $10;
 }
 FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[$0 + 476 >> 2] | 0) + 4 >> 2] & 7]($0, $1, $2, $3, $29, $9, HEAP32[$$pre$phi40Z2D >> 2] | 0);
 $30 = HEAP32[$9 >> 2] | 0;
 if ($30 >>> 0 > $32 >>> 0) {
  $33 = $30 - $32 | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 + 484 >> 2] | 0) + 4 >> 2] & 31]($0, (HEAP32[$$pre$phiZ2D >> 2] | 0) + ($32 << 2) | 0, 0, $33);
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $33;
  $44 = HEAP32[$9 >> 2] | 0;
 } else $44 = $30;
 $42 = HEAP32[$$pre$phi40Z2D >> 2] | 0;
 if ($44 >>> 0 < $42 >>> 0) return;
 $45 = $8 + 20 | 0;
 HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + $42;
 HEAP32[$9 >> 2] = 0;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$sroa$speculated = 0, $16 = 0, $17 = 0, $22 = 0, $23 = 0, $25 = 0, $28 = 0, $29 = 0, $35 = 0, $39 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp;
 if ((-18 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $25 = HEAP32[$0 >> 2] | 0; else $25 = $0;
 if ($1 >>> 0 < 2147483623) {
  $16 = $2 + $1 | 0;
  $17 = $1 << 1;
  $$sroa$speculated = $16 >>> 0 < $17 >>> 0 ? $17 : $16;
  $22 = $$sroa$speculated >>> 0 < 11 ? 11 : $$sroa$speculated + 16 & -16;
 } else $22 = -17;
 $23 = __Znwm($22) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm($23, $25, $4) | 0;
 if ($6 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm($23 + $4 | 0, $7, $6) | 0;
 $28 = $3 - $5 | 0;
 $29 = $28 - $4 | 0;
 if ($29 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm($23 + $4 + $6 | 0, $25 + $4 + $5 | 0, $29) | 0;
 $35 = $1 + 1 | 0;
 if (($35 | 0) != 11) __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($25, $35);
 HEAP32[$0 >> 2] = $23;
 HEAP32[$0 + 8 >> 2] = $22 | -2147483648;
 $39 = $28 + $6 | 0;
 HEAP32[$0 + 4 >> 2] = $39;
 HEAP8[$8 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($23 + $39 | 0, $8);
 STACKTOP = sp;
 return;
}

function __ZNK6vision10DoGPyramid15octaveFromIndexEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $19 = 0, $2 = 0, $23 = 0, $25 = 0, $33 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $5 = HEAP32[$0 >> 2] | 0;
 if ((HEAP32[$0 + 4 >> 2] | 0) - $5 >> 5 >>> 0 > $1 >>> 0) {
  $25 = __ZNK6vision5Image5widthEv($5) | 0;
  $33 = ~~+__ZN6vision5roundIfEET_S1_(+__ZN6vision4log2IfEET_S1_(+((($25 >>> 0) / ((__ZNK6vision5Image5widthEv((HEAP32[$0 >> 2] | 0) + ($1 << 5) | 0) | 0) >>> 0) | 0) >>> 0)));
  STACKTOP = sp;
  return $33 | 0;
 } else {
  $14 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 31021) | 0, 28600) | 0, 39072) | 0, 94) | 0, 39079) | 0, 31067) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $14 + (HEAP32[(HEAP32[$14 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $19 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$19 >> 2] | 0) + 28 >> 2] & 127]($19, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($14, $23) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($14) | 0;
  _abort();
 }
 return 0;
}

function __ZNK12_GLOBAL__N_116itanium_demangle10VectorType9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy2 = 0, $2 = 0, $3 = 0, $4 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy2 = sp + 24 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$0 + 8 >> 2] | 0, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 55975);
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
 $7 = $0 + 12 | 0;
 if (!(__ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString6isNodeEv($7) | 0)) {
  if (__ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString8isStringEv($7) | 0) {
   __ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString8asStringEv($3, $7);
   HEAP32[$$byval_copy2 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
  }
 } else __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(__ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString6asNodeEv($7) | 0, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 51614);
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
 STACKTOP = sp;
 return;
}

function _strspn($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$01924 = 0, $$020 = 0, $$1$lcssa = 0, $$121 = 0, $14 = 0, $15 = 0, $19 = 0, $2 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $36 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 HEAP32[$2 + 24 >> 2] = 0;
 HEAP32[$2 + 28 >> 2] = 0;
 $3 = HEAP8[$1 >> 0] | 0;
 do if (!($3 << 24 >> 24)) $$0 = 0; else {
  if (!(HEAP8[$1 + 1 >> 0] | 0)) {
   $$020 = $0;
   while (1) if ((HEAP8[$$020 >> 0] | 0) == $3 << 24 >> 24) $$020 = $$020 + 1 | 0; else break;
   $$0 = $$020 - $0 | 0;
   break;
  }
  $$01924 = $1;
  $15 = $3;
  do {
   $14 = $15 & 255;
   $19 = $2 + ($14 >>> 5 << 2) | 0;
   HEAP32[$19 >> 2] = HEAP32[$19 >> 2] | 1 << ($14 & 31);
   $$01924 = $$01924 + 1 | 0;
   $15 = HEAP8[$$01924 >> 0] | 0;
  } while ($15 << 24 >> 24 != 0);
  $25 = HEAP8[$0 >> 0] | 0;
  L12 : do if (!($25 << 24 >> 24)) $$1$lcssa = $0; else {
   $$121 = $0;
   $28 = $25;
   while (1) {
    $27 = $28 & 255;
    if (!(HEAP32[$2 + ($27 >>> 5 << 2) >> 2] & 1 << ($27 & 31))) {
     $$1$lcssa = $$121;
     break L12;
    }
    $36 = $$121 + 1 | 0;
    $28 = HEAP8[$36 >> 0] | 0;
    if (!($28 << 24 >> 24)) {
     $$1$lcssa = $36;
     break;
    } else $$121 = $36;
   }
  } while (0);
  $$0 = $$1$lcssa - $0 | 0;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNK12_GLOBAL__N_116itanium_demangle15ClosureTypeName9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy2 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 32 | 0;
 $2 = sp + 24 | 0;
 $3 = sp;
 $4 = sp + 16 | 0;
 $5 = sp + 8 | 0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 55250);
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
 $7 = $0 + 16 | 0;
 $12 = HEAP32[$7 + 4 >> 2] | 0;
 $13 = $3;
 HEAP32[$13 >> 2] = HEAP32[$7 >> 2];
 HEAP32[$13 + 4 >> 2] = $12;
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4, 55258);
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($0 + 8 | 0, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($5, 51964);
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy2);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseDecltypeEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $1 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 do if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 68) | 0) {
  if (!(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 116) | 0) ? !(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 84) | 0) : 0) {
   $$1 = 0;
   break;
  }
  $6 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv(__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) | 0) | 0;
  HEAP32[$1 >> 2] = $6;
  if (($6 | 0) != 0 ? __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0 : 0) $$0 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA10_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0, 56097, $1) | 0; else $$0 = 0;
  $$1 = $$0;
 } else $$1 = 0; while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((HEAP32[$3 >> 2] | 0) - $6 >> 2 >>> 0 < $1 >>> 0) {
  $13 = ($6 - (HEAP32[$0 >> 2] | 0) >> 2) + $1 | 0;
  $14 = __ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $19 = (HEAP32[$3 >> 2] | 0) - $18 | 0;
   $23 = $19 >> 1;
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEEC2EmmS6_($2, $19 >> 2 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, (HEAP32[$5 >> 2] | 0) - $18 >> 2, $0 + 16 | 0);
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}
function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$pn = 0, $0 = 0, $1 = 0, $3 = 0, $4 = 0, $__nd$0 = 0, $cond3$i = 0, $cond3$i29 = 0, $retval$sroa$0$0 = 0, $sub$i23 = 0, $tobool$i25 = 0;
 $0 = HEAP32[$__k >> 2] | 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 L1 : do if ($1) {
  $sub$i23 = $1 + -1 | 0;
  $tobool$i25 = ($sub$i23 & $1 | 0) == 0;
  if (!$tobool$i25) if ($0 >>> 0 < $1 >>> 0) $cond3$i29 = $0; else $cond3$i29 = ($0 >>> 0) % ($1 >>> 0) | 0; else $cond3$i29 = $sub$i23 & $0;
  $3 = HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i29 << 2) >> 2] | 0;
  if ($3) {
   $$pn = $3;
   while (1) {
    $__nd$0 = HEAP32[$$pn >> 2] | 0;
    if (!$__nd$0) {
     $retval$sroa$0$0 = 0;
     break L1;
    }
    $4 = HEAP32[$__nd$0 + 4 >> 2] | 0;
    if (($4 | 0) == ($0 | 0)) {
     if ((HEAP32[$__nd$0 + 8 >> 2] | 0) == ($0 | 0)) {
      $retval$sroa$0$0 = $__nd$0;
      break L1;
     }
    } else {
     if (!$tobool$i25) if ($4 >>> 0 < $1 >>> 0) $cond3$i = $4; else $cond3$i = ($4 >>> 0) % ($1 >>> 0) | 0; else $cond3$i = $4 & $sub$i23;
     if (($cond3$i | 0) != ($cond3$i29 | 0)) {
      $retval$sroa$0$0 = 0;
      break L1;
     }
    }
    $$pn = $__nd$0;
   }
  } else $retval$sroa$0$0 = 0;
 } else $retval$sroa$0$0 = 0; while (0);
 return $retval$sroa$0$0 | 0;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $16 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = (((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 20 | 0) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $16 = ((HEAP32[$0 + 8 >> 2] | 0) - $14 | 0) / 20 | 0;
  $19 = $16 << 1;
  __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEEC2EmmS5_($2, $16 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, ((HEAP32[$3 >> 2] | 0) - $14 | 0) / 20 | 0, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  HEAP32[$25 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$25 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$25 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$25 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
  HEAP32[$25 + 16 >> 2] = HEAP32[$1 + 16 >> 2];
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 20;
  __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
  __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$029 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $4 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $27 = 0;
  $28 = 0;
 } else {
  $7 = (HEAP8[$0 >> 0] | 0) == 45;
  if ($7) {
   $8 = $0 + 1 | 0;
   if (($8 | 0) == ($1 | 0)) {
    HEAP32[$2 >> 2] = 4;
    $27 = 0;
    $28 = 0;
    break;
   } else $$029 = $8;
  } else $$029 = $0;
  $10 = ___errno_location() | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  $12 = ___errno_location() | 0;
  HEAP32[$12 >> 2] = 0;
  $14 = _strtoull_l($$029, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $15 = getTempRet0() | 0;
  $16 = ___errno_location() | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (!$17) {
   $19 = ___errno_location() | 0;
   HEAP32[$19 >> 2] = $11;
  }
  do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if (($17 | 0) == 68) {
   HEAP32[$2 >> 2] = 4;
   $29 = -1;
   $30 = -1;
   break;
  } else {
   $23 = _i64Subtract(0, 0, $14 | 0, $15 | 0) | 0;
   $24 = getTempRet0() | 0;
   $29 = $7 ? $23 : $14;
   $30 = $7 ? $24 : $15;
   break;
  } else {
   HEAP32[$2 >> 2] = 4;
   $29 = 0;
   $30 = 0;
  } while (0);
  $27 = $30;
  $28 = $29;
 } while (0);
 setTempRet0($27 | 0);
 STACKTOP = sp;
 return $28 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$pn = 0, $0 = 0, $1 = 0, $3 = 0, $4 = 0, $__nd$0 = 0, $cond3$i = 0, $cond3$i29 = 0, $retval$sroa$0$0 = 0, $sub$i23 = 0, $tobool$i25 = 0;
 $0 = HEAP32[$__k >> 2] | 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 L1 : do if ($1) {
  $sub$i23 = $1 + -1 | 0;
  $tobool$i25 = ($sub$i23 & $1 | 0) == 0;
  if (!$tobool$i25) if ($0 >>> 0 < $1 >>> 0) $cond3$i29 = $0; else $cond3$i29 = ($0 >>> 0) % ($1 >>> 0) | 0; else $cond3$i29 = $sub$i23 & $0;
  $3 = HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i29 << 2) >> 2] | 0;
  if ($3) {
   $$pn = $3;
   while (1) {
    $__nd$0 = HEAP32[$$pn >> 2] | 0;
    if (!$__nd$0) {
     $retval$sroa$0$0 = 0;
     break L1;
    }
    $4 = HEAP32[$__nd$0 + 4 >> 2] | 0;
    if (($4 | 0) == ($0 | 0)) {
     if ((HEAP32[$__nd$0 + 8 >> 2] | 0) == ($0 | 0)) {
      $retval$sroa$0$0 = $__nd$0;
      break L1;
     }
    } else {
     if (!$tobool$i25) if ($4 >>> 0 < $1 >>> 0) $cond3$i = $4; else $cond3$i = ($4 >>> 0) % ($1 >>> 0) | 0; else $cond3$i = $4 & $sub$i23;
     if (($cond3$i | 0) != ($cond3$i29 | 0)) {
      $retval$sroa$0$0 = 0;
      break L1;
     }
    }
    $$pn = $__nd$0;
   }
  } else $retval$sroa$0$0 = 0;
 } else $retval$sroa$0$0 = 0; while (0);
 return $retval$sroa$0$0 | 0;
}

function _merged_2v_upsample($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$1 = 0, $$pre34 = 0, $10 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $7 = 0, $9 = 0, $phitmp = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp;
 $9 = HEAP32[$0 + 476 >> 2] | 0;
 $10 = $9 + 36 | 0;
 if (!(HEAP32[$10 >> 2] | 0)) {
  $22 = $9 + 44 | 0;
  $23 = HEAP32[$22 >> 2] | 0;
  $spec$select = $23 >>> 0 < 2 ? $23 : 2;
  $25 = HEAP32[$5 >> 2] | 0;
  $26 = $6 - $25 | 0;
  $$1 = $spec$select >>> 0 > $26 >>> 0 ? $26 : $spec$select;
  HEAP32[$7 >> 2] = HEAP32[$4 + ($25 << 2) >> 2];
  if ($$1 >>> 0 > 1) HEAP32[$7 + 4 >> 2] = HEAP32[$4 + ($25 + 1 << 2) >> 2]; else {
   HEAP32[$7 + 4 >> 2] = HEAP32[$9 + 32 >> 2];
   HEAP32[$10 >> 2] = 1;
  }
  FUNCTION_TABLE_viiii[HEAP32[$9 + 12 >> 2] & 31]($0, $1, HEAP32[$2 >> 2] | 0, $7);
  $phitmp = (HEAP32[$10 >> 2] | 0) == 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $$1;
  HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) - $$1;
  if (!$phitmp) {
   STACKTOP = sp;
   return;
  }
 } else {
  _jcopy_sample_rows($9 + 32 | 0, 0, $4 + (HEAP32[$5 >> 2] << 2) | 0, 0, 1, HEAP32[$9 + 40 >> 2] | 0);
  HEAP32[$10 >> 2] = 0;
  $$pre34 = $9 + 44 | 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 1;
  HEAP32[$$pre34 >> 2] = (HEAP32[$$pre34 >> 2] | 0) + -1;
 }
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((((HEAP32[$3 >> 2] | 0) - $6 | 0) / 20 | 0) >>> 0 < $1 >>> 0) {
  $13 = (($6 - (HEAP32[$0 >> 2] | 0) | 0) / 20 | 0) + $1 | 0;
  $14 = __ZNKSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $20 = ((HEAP32[$3 >> 2] | 0) - $18 | 0) / 20 | 0;
   $23 = $20 << 1;
   __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEEC2EmmS5_($2, $20 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, ((HEAP32[$5 >> 2] | 0) - $18 | 0) / 20 | 0, $0 + 8 | 0);
   __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
   __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$sroa$speculated = 0, $0 = 0, $__n$addr$0 = 0, $cond = 0, $conv9 = 0, $shl$i = 0;
 if (($__n | 0) != 1) if (!($__n + -1 & $__n)) $__n$addr$0 = $__n; else $__n$addr$0 = __ZNSt3__212__next_primeEm($__n) | 0; else $__n$addr$0 = 2;
 $0 = HEAP32[$this + 4 >> 2] | 0;
 if ($__n$addr$0 >>> 0 <= $0 >>> 0) {
  if ($__n$addr$0 >>> 0 < $0 >>> 0) {
   $conv9 = ~~+Math_ceil(+(+((HEAP32[$this + 12 >> 2] | 0) >>> 0) / +HEAPF32[$this + 16 >> 2])) >>> 0;
   if ($0 >>> 0 > 2 & ($0 + -1 & $0 | 0) == 0) {
    $shl$i = 1 << 32 - (Math_clz32($conv9 + -1 | 0) | 0);
    $cond = $conv9 >>> 0 < 2 ? $conv9 : $shl$i;
   } else $cond = __ZNSt3__212__next_primeEm($conv9) | 0;
   $$sroa$speculated = $__n$addr$0 >>> 0 < $cond >>> 0 ? $cond : $__n$addr$0;
   if ($$sroa$speculated >>> 0 < $0 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm($this, $$sroa$speculated);
  }
 } else __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm($this, $__n$addr$0);
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEmRKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $11 = 0, $13 = 0, $20 = 0, $21 = 0, $25 = 0, $26 = 0, $3 = 0, $30 = 0, $4 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp;
 $4 = $0 + 8 | 0;
 $6 = $0 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $11 = $7;
 do if ((HEAP32[$4 >> 2] | 0) - $7 >> 2 >>> 0 < $1 >>> 0) {
  $20 = ($7 - (HEAP32[$0 >> 2] | 0) >> 2) + $1 | 0;
  $21 = __ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv($0) | 0;
  if ($21 >>> 0 < $20 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $25 = HEAP32[$0 >> 2] | 0;
   $26 = (HEAP32[$4 >> 2] | 0) - $25 | 0;
   $30 = $26 >> 1;
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_($3, $26 >> 2 >>> 0 < $21 >>> 1 >>> 0 ? ($30 >>> 0 < $20 >>> 0 ? $20 : $30) : $21, (HEAP32[$6 >> 2] | 0) - $25 >> 2, $0 + 8 | 0);
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEE18__construct_at_endEmRKi($3, $1, $2);
   __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE($0, $3);
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev($3);
   break;
  }
 } else {
  $$0$i = $1;
  $13 = $11;
  while (1) {
   HEAP32[$13 >> 2] = HEAP32[$2 >> 2];
   $$0$i = $$0$i + -1 | 0;
   if (!$$0$i) break; else $13 = $13 + 4 | 0;
  }
  HEAP32[$6 >> 2] = $11 + ($1 << 2);
 } while (0);
 STACKTOP = sp;
 return;
}

function ___strchrnul($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$029$lcssa = 0, $$02936 = 0, $$030$lcssa = 0, $$03039 = 0, $$1 = 0, $10 = 0, $13 = 0, $17 = 0, $18 = 0, $2 = 0, $24 = 0, $25 = 0, $31 = 0, $38 = 0, $39 = 0, $9 = 0;
 $2 = $1 & 255;
 L1 : do if (!$2) $$0 = $0 + (_strlen($0) | 0) | 0; else {
  if (!($0 & 3)) $$030$lcssa = $0; else {
   $9 = $1 & 255;
   $$03039 = $0;
   while (1) {
    $10 = HEAP8[$$03039 >> 0] | 0;
    if ($10 << 24 >> 24 == 0 ? 1 : $10 << 24 >> 24 == $9 << 24 >> 24) {
     $$0 = $$03039;
     break L1;
    }
    $13 = $$03039 + 1 | 0;
    if (!($13 & 3)) {
     $$030$lcssa = $13;
     break;
    } else $$03039 = $13;
   }
  }
  $17 = Math_imul($2, 16843009) | 0;
  $18 = HEAP32[$$030$lcssa >> 2] | 0;
  L10 : do if (!(($18 & -2139062144 ^ -2139062144) & $18 + -16843009)) {
   $$02936 = $$030$lcssa;
   $25 = $18;
   while (1) {
    $24 = $25 ^ $17;
    if (($24 & -2139062144 ^ -2139062144) & $24 + -16843009 | 0) {
     $$029$lcssa = $$02936;
     break L10;
    }
    $31 = $$02936 + 4 | 0;
    $25 = HEAP32[$31 >> 2] | 0;
    if (($25 & -2139062144 ^ -2139062144) & $25 + -16843009 | 0) {
     $$029$lcssa = $31;
     break;
    } else $$02936 = $31;
   }
  } else $$029$lcssa = $$030$lcssa; while (0);
  $38 = $1 & 255;
  $$1 = $$029$lcssa;
  while (1) {
   $39 = HEAP8[$$1 >> 0] | 0;
   if ($39 << 24 >> 24 == 0 ? 1 : $39 << 24 >> 24 == $38 << 24 >> 24) {
    $$0 = $$1;
    break;
   } else $$1 = $$1 + 1 | 0;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$sroa$speculated = 0, $0 = 0, $__n$addr$0 = 0, $cond = 0, $conv9 = 0, $shl$i = 0;
 if (($__n | 0) != 1) if (!($__n + -1 & $__n)) $__n$addr$0 = $__n; else $__n$addr$0 = __ZNSt3__212__next_primeEm($__n) | 0; else $__n$addr$0 = 2;
 $0 = HEAP32[$this + 4 >> 2] | 0;
 if ($__n$addr$0 >>> 0 <= $0 >>> 0) {
  if ($__n$addr$0 >>> 0 < $0 >>> 0) {
   $conv9 = ~~+Math_ceil(+(+((HEAP32[$this + 12 >> 2] | 0) >>> 0) / +HEAPF32[$this + 16 >> 2])) >>> 0;
   if ($0 >>> 0 > 2 & ($0 + -1 & $0 | 0) == 0) {
    $shl$i = 1 << 32 - (Math_clz32($conv9 + -1 | 0) | 0);
    $cond = $conv9 >>> 0 < 2 ? $conv9 : $shl$i;
   } else $cond = __ZNSt3__212__next_primeEm($conv9) | 0;
   $$sroa$speculated = $__n$addr$0 >>> 0 < $cond >>> 0 ? $cond : $__n$addr$0;
   if ($$sroa$speculated >>> 0 < $0 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm($this, $$sroa$speculated);
  }
 } else __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm($this, $__n$addr$0);
 return;
}

function __ZN6vision27OrthogonalizePivot8x9Basis4IfEEbPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $12 = 0.0, $13 = 0.0, $15 = 0.0, $17 = 0.0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $3 = $0 + 144 | 0;
 $4 = $0 + 108 | 0;
 $5 = $1 + 144 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($3, $4, $5);
 $6 = $0 + 180 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($6, $4, $1 + 180 | 0);
 $8 = $0 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($8, $4, $1 + 216 | 0);
 $10 = $0 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($10, $4, $1 + 252 | 0);
 $12 = +__ZN6vision11SumSquares9IfEET_PKS1_($3);
 HEAPF32[$2 >> 2] = $12;
 $13 = +__ZN6vision11SumSquares9IfEET_PKS1_($6);
 HEAPF32[$2 + 4 >> 2] = $13;
 $15 = +__ZN6vision11SumSquares9IfEET_PKS1_($8);
 HEAPF32[$2 + 8 >> 2] = $15;
 $17 = +__ZN6vision11SumSquares9IfEET_PKS1_($10);
 HEAPF32[$2 + 12 >> 2] = $17;
 $19 = __ZN6vision9MaxIndex4IfEEiPKT_($2) | 0;
 $20 = $2 + ($19 << 2) | 0;
 if (+HEAPF32[$20 >> 2] == 0.0) $$0 = 0; else {
  $23 = $19 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_($3, $3 + ($23 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_($5, $5 + ($23 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($3, $3, 1.0 / +Math_sqrt(+(+HEAPF32[$20 >> 2])));
  $$0 = 1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _ar2MarkerCoord2ScreenCoord2($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 $3 = +$3;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0, $6 = 0, $63 = 0.0, $7 = 0, $73 = 0.0, $8 = 0, $81 = 0.0, $84 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $6 = sp;
 $7 = sp + 52 | 0;
 $8 = sp + 48 | 0;
 if ($0) {
  _arUtilMatMuldff($0 + 8 | 0, $1, $6) | 0;
  $39 = +HEAPF32[$6 + 44 >> 2] + (+HEAPF32[$6 + 32 >> 2] * $2 + +HEAPF32[$6 + 36 >> 2] * $3);
  $40 = (+HEAPF32[$6 + 12 >> 2] + (+HEAPF32[$6 >> 2] * $2 + +HEAPF32[$6 + 4 >> 2] * $3)) / $39;
  $41 = (+HEAPF32[$6 + 28 >> 2] + (+HEAPF32[$6 + 16 >> 2] * $2 + +HEAPF32[$6 + 20 >> 2] * $3)) / $39;
  $42 = $0 + 184 | 0;
  if ((_arParamIdeal2ObservLTf($42, $40, $41, $4, $5) | 0) >= 0 ? (_arParamObserv2IdealLTf($42, +HEAPF32[$4 >> 2], +HEAPF32[$5 >> 2], $7, $8) | 0) >= 0 : 0) {
   $81 = $40 - +HEAPF32[$7 >> 2];
   $84 = $41 - +HEAPF32[$8 >> 2];
   $$0 = ($81 * $81 + $84 * $84 > 1.0) << 31 >> 31;
  } else $$0 = -1;
 } else {
  $63 = +HEAPF32[$1 + 28 >> 2] + (+HEAPF32[$1 + 16 >> 2] * $2 + +HEAPF32[$1 + 20 >> 2] * $3);
  $73 = +HEAPF32[$1 + 44 >> 2] + (+HEAPF32[$1 + 32 >> 2] * $2 + +HEAPF32[$1 + 36 >> 2] * $3);
  HEAPF32[$4 >> 2] = (+HEAPF32[$1 + 12 >> 2] + (+HEAPF32[$1 >> 2] * $2 + +HEAPF32[$1 + 4 >> 2] * $3)) / $73;
  HEAPF32[$5 >> 2] = $63 / $73;
  $$0 = 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE8__appendEmRKh($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $12 = 0, $19 = 0, $20 = 0, $24 = 0, $25 = 0, $28 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp;
 $4 = $0 + 8 | 0;
 $6 = $0 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 do if (((HEAP32[$4 >> 2] | 0) - $7 | 0) >>> 0 < $1 >>> 0) {
  $19 = $7 - (HEAP32[$0 >> 2] | 0) + $1 | 0;
  $20 = __ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv($0) | 0;
  if ($20 >>> 0 < $19 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $24 = HEAP32[$0 >> 2] | 0;
   $25 = (HEAP32[$4 >> 2] | 0) - $24 | 0;
   $28 = $25 << 1;
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEEC2EmmS3_($3, $25 >>> 0 < $20 >>> 1 >>> 0 ? ($28 >>> 0 < $19 >>> 0 ? $19 : $28) : $20, (HEAP32[$6 >> 2] | 0) - $24 | 0, $0 + 8 | 0);
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE18__construct_at_endEmRKh($3, $1, $2);
   __ZNSt3__26vectorIhNS_9allocatorIhEEE26__swap_out_circular_bufferERNS_14__split_bufferIhRS2_EE($0, $3);
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEED2Ev($3);
   break;
  }
 } else {
  $$0$i = $1;
  $12 = $7;
  do {
   HEAP8[$12 >> 0] = HEAP8[$2 >> 0] | 0;
   $12 = (HEAP32[$6 >> 2] | 0) + 1 | 0;
   HEAP32[$6 >> 2] = $12;
   $$0$i = $$0$i + -1 | 0;
  } while (($$0$i | 0) != 0);
 } while (0);
 STACKTOP = sp;
 return;
}

function _jinit_marker_reader($0) {
 $0 = $0 | 0;
 var $4 = 0, $42 = 0, $5 = 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 0, 172) | 0;
 $5 = $0 + 464 | 0;
 HEAP32[$5 >> 2] = $4;
 HEAP32[$4 >> 2] = 203;
 HEAP32[$4 + 4 >> 2] = 86;
 HEAP32[$4 + 8 >> 2] = 87;
 HEAP32[$4 + 28 >> 2] = 88;
 HEAP32[$4 + 96 >> 2] = 0;
 HEAP32[$4 + 100 >> 2] = 0;
 HEAP32[$4 + 36 >> 2] = 88;
 HEAP32[$4 + 104 >> 2] = 0;
 HEAP32[$4 + 40 >> 2] = 88;
 HEAP32[$4 + 108 >> 2] = 0;
 HEAP32[$4 + 44 >> 2] = 88;
 HEAP32[$4 + 112 >> 2] = 0;
 HEAP32[$4 + 48 >> 2] = 88;
 HEAP32[$4 + 116 >> 2] = 0;
 HEAP32[$4 + 52 >> 2] = 88;
 HEAP32[$4 + 120 >> 2] = 0;
 HEAP32[$4 + 56 >> 2] = 88;
 HEAP32[$4 + 124 >> 2] = 0;
 HEAP32[$4 + 60 >> 2] = 88;
 HEAP32[$4 + 128 >> 2] = 0;
 HEAP32[$4 + 64 >> 2] = 88;
 HEAP32[$4 + 132 >> 2] = 0;
 HEAP32[$4 + 68 >> 2] = 88;
 HEAP32[$4 + 136 >> 2] = 0;
 HEAP32[$4 + 72 >> 2] = 88;
 HEAP32[$4 + 140 >> 2] = 0;
 HEAP32[$4 + 76 >> 2] = 88;
 HEAP32[$4 + 144 >> 2] = 0;
 HEAP32[$4 + 80 >> 2] = 88;
 HEAP32[$4 + 148 >> 2] = 0;
 HEAP32[$4 + 84 >> 2] = 88;
 HEAP32[$4 + 152 >> 2] = 0;
 HEAP32[$4 + 156 >> 2] = 0;
 HEAP32[$4 + 92 >> 2] = 88;
 HEAP32[$4 + 160 >> 2] = 0;
 HEAP32[$4 + 32 >> 2] = 89;
 HEAP32[$4 + 88 >> 2] = 89;
 $42 = HEAP32[$5 >> 2] | 0;
 HEAP32[$0 + 216 >> 2] = 0;
 HEAP32[$0 + 144 >> 2] = 0;
 HEAP32[$0 + 440 >> 2] = 0;
 HEAP32[$42 + 12 >> 2] = 0;
 HEAP32[$42 + 16 >> 2] = 0;
 HEAP32[$42 + 24 >> 2] = 0;
 HEAP32[$42 + 164 >> 2] = 0;
 return;
}

function __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 2;
  __ZNSt3__214__split_bufferIN6vision17PriorityQueueItemILi96EEERNS_9allocatorIS3_EEEC2EmmS6_($2, $15 >> 3 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 3, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $26 = $1;
  $31 = HEAP32[$26 + 4 >> 2] | 0;
  $32 = HEAP32[$24 >> 2] | 0;
  HEAP32[$32 >> 2] = HEAP32[$26 >> 2];
  HEAP32[$32 + 4 >> 2] = $31;
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 8;
  __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
  __ZNSt3__214__split_bufferIN6vision17PriorityQueueItemILi96EEERNS_9allocatorIS3_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function _x_by_xt($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$049 = 0, $$050 = 0, $$051 = 0, $$052 = 0, $$053 = 0, $$054 = 0, $$1 = 0, $12 = 0, $14 = 0, $18 = 0, $20 = 0, $23 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $5 = 0;
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 L1 : do if ((HEAP32[$1 + 4 >> 2] | 0) == ($3 | 0) ? (HEAP32[$1 + 8 >> 2] | 0) == ($3 | 0) : 0) {
  $12 = HEAP32[$1 >> 2] | 0;
  $$050 = 0;
  $$053 = $12;
  while (1) {
   if (($$050 | 0) >= ($3 | 0)) {
    $$051 = 0;
    break L1;
   }
   $14 = Math_imul($$050, $5) | 0;
   $$049 = 0;
   $$1 = $$053;
   while (1) {
    if (($$049 | 0) == ($3 | 0)) break;
    L10 : do if ($$049 >>> 0 < $$050 >>> 0) {
     $18 = $12 + ((Math_imul($$049, $3) | 0) + $$050 << 3) | 0;
     HEAPF64[$$1 >> 3] = +HEAPF64[$18 >> 3];
    } else {
     $20 = HEAP32[$0 >> 2] | 0;
     $23 = $20 + ((Math_imul($$049, $5) | 0) << 3) | 0;
     HEAPF64[$$1 >> 3] = 0.0;
     $$0 = 0;
     $$052 = $20 + ($14 << 3) | 0;
     $$054 = $23;
     $31 = 0.0;
     while (1) {
      if (($$0 | 0) >= ($5 | 0)) break L10;
      $30 = $31 + +HEAPF64[$$052 >> 3] * +HEAPF64[$$054 >> 3];
      HEAPF64[$$1 >> 3] = $30;
      $$0 = $$0 + 1 | 0;
      $$052 = $$052 + 8 | 0;
      $$054 = $$054 + 8 | 0;
      $31 = $30;
     }
    } while (0);
    $$049 = $$049 + 1 | 0;
    $$1 = $$1 + 8 | 0;
   }
   $$050 = $$050 + 1 | 0;
   $$053 = $$053 + ($3 << 3) | 0;
  }
 } else $$051 = -1; while (0);
 return $$051 | 0;
}

function _fread($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$ = 0, $$0 = 0, $$054 = 0, $$056 = 0, $$15759 = 0, $$160 = 0, $10 = 0, $12 = 0, $18 = 0, $19 = 0, $20 = 0, $29 = 0, $33 = 0, $37 = 0, $4 = 0, $40 = 0, $spec$select = 0, label = 0;
 $4 = Math_imul($2, $1) | 0;
 $spec$select = ($1 | 0) == 0 ? 0 : $2;
 if ((HEAP32[$3 + 76 >> 2] | 0) > -1) $37 = ___lockfile($3) | 0; else $37 = 0;
 $10 = $3 + 74 | 0;
 $12 = HEAP8[$10 >> 0] | 0;
 HEAP8[$10 >> 0] = $12 + 255 | $12;
 $18 = $3 + 4 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 $20 = (HEAP32[$3 + 8 >> 2] | 0) - $19 | 0;
 if (($20 | 0) > 0) {
  $$ = $20 >>> 0 < $4 >>> 0 ? $20 : $4;
  _memcpy($0 | 0, $19 | 0, $$ | 0) | 0;
  HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + $$;
  $$054 = $4 - $$ | 0;
  $$056 = $0 + $$ | 0;
 } else {
  $$054 = $4;
  $$056 = $0;
 }
 L7 : do if (!$$054) label = 13; else {
  $29 = $3 + 32 | 0;
  $$15759 = $$056;
  $$160 = $$054;
  while (1) {
   if (___toread($3) | 0) break;
   $33 = FUNCTION_TABLE_iiii[HEAP32[$29 >> 2] & 63]($3, $$15759, $$160) | 0;
   if (($33 + 1 | 0) >>> 0 < 2) break;
   $40 = $$160 - $33 | 0;
   if (!$40) {
    label = 13;
    break L7;
   } else {
    $$15759 = $$15759 + $33 | 0;
    $$160 = $40;
   }
  }
  if ($37 | 0) ___unlockfile($3);
  $$0 = (($4 - $$160 | 0) >>> 0) / ($1 >>> 0) | 0;
 } while (0);
 if ((label | 0) == 13) if (!$37) $$0 = $spec$select; else {
  ___unlockfile($3);
  $$0 = $spec$select;
 }
 return $$0 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE6rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) != 1) if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEm($1) | 0; else $$0 = 2;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 <= $8 >>> 0) {
  if ($$0 >>> 0 < $8 >>> 0) {
   $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
   if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
    $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
    $30 = $22 >>> 0 < 2 ? $22 : $27;
   } else $30 = __ZNSt3__212__next_primeEm($22) | 0;
   $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
   if ($$sroa$speculated >>> 0 < $8 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE8__rehashEm($0, $$sroa$speculated);
  }
 } else __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE8__rehashEm($0, $$0);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE6rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) != 1) if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEm($1) | 0; else $$0 = 2;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 <= $8 >>> 0) {
  if ($$0 >>> 0 < $8 >>> 0) {
   $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
   if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
    $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
    $30 = $22 >>> 0 < 2 ? $22 : $27;
   } else $30 = __ZNSt3__212__next_primeEm($22) | 0;
   $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
   if ($$sroa$speculated >>> 0 < $8 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE8__rehashEm($0, $$sroa$speculated);
  }
 } else __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE8__rehashEm($0, $$0);
 return;
}

function __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0;
 } else {
  $6 = ___errno_location() | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $8 = ___errno_location() | 0;
  HEAP32[$8 >> 2] = 0;
  $10 = _strtoll_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $11 = getTempRet0() | 0;
  $12 = ___errno_location() | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if (!$13) {
   $15 = ___errno_location() | 0;
   HEAP32[$15 >> 2] = $7;
  }
  L7 : do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) {
   do if (($13 | 0) == 68) {
    HEAP32[$2 >> 2] = 4;
    if (($11 | 0) > 0 | ($11 | 0) == 0 & $10 >>> 0 > 0) {
     $$0 = 2147483647;
     break L7;
    }
   } else {
    if (($11 | 0) < -1 | ($11 | 0) == -1 & $10 >>> 0 < 2147483648) {
     HEAP32[$2 >> 2] = 4;
     break;
    }
    if (($11 | 0) > 0 | ($11 | 0) == 0 & $10 >>> 0 > 2147483647) {
     HEAP32[$2 >> 2] = 4;
     $$0 = 2147483647;
     break L7;
    } else {
     $$0 = $10;
     break L7;
    }
   } while (0);
   $$0 = -2147483648;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0;
  } while (0);
  $$1 = $$0;
 }
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN6vision27OrthogonalizePivot8x9Basis0IfEEbPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $11 = 0.0, $14 = 0.0, $17 = 0.0, $2 = 0, $20 = 0.0, $23 = 0.0, $25 = 0, $26 = 0, $3 = 0.0, $4 = 0, $5 = 0.0, $8 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = +__ZN6vision11SumSquares9IfEET_PKS1_($1);
 HEAPF32[$2 >> 2] = $3;
 $4 = $1 + 36 | 0;
 $5 = +__ZN6vision11SumSquares9IfEET_PKS1_($4);
 HEAPF32[$2 + 4 >> 2] = $5;
 $8 = +__ZN6vision11SumSquares9IfEET_PKS1_($1 + 72 | 0);
 HEAPF32[$2 + 8 >> 2] = $8;
 $11 = +__ZN6vision11SumSquares9IfEET_PKS1_($1 + 108 | 0);
 HEAPF32[$2 + 12 >> 2] = $11;
 $14 = +__ZN6vision11SumSquares9IfEET_PKS1_($1 + 144 | 0);
 HEAPF32[$2 + 16 >> 2] = $14;
 $17 = +__ZN6vision11SumSquares9IfEET_PKS1_($1 + 180 | 0);
 HEAPF32[$2 + 20 >> 2] = $17;
 $20 = +__ZN6vision11SumSquares9IfEET_PKS1_($1 + 216 | 0);
 HEAPF32[$2 + 24 >> 2] = $20;
 $23 = +__ZN6vision11SumSquares9IfEET_PKS1_($1 + 252 | 0);
 HEAPF32[$2 + 28 >> 2] = $23;
 $25 = __ZN6vision9MaxIndex8IfEEiPKT_($2) | 0;
 $26 = $2 + ($25 << 2) | 0;
 if (+HEAPF32[$26 >> 2] == 0.0) $$0 = 0; else {
  __ZN6vision5Swap9IfEEvPT_S2_($1, $1 + ($25 * 9 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($0, $1, 1.0 / +Math_sqrt(+(+HEAPF32[$26 >> 2])));
  __ZN6vision10CopyVectorIfEEvPT_PKS1_m($0 + 36 | 0, $4, 63);
  $$0 = 1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseFloatingLiteralIeEEPNS0_4NodeEv($0) {
 $0 = $0 | 0;
 var $$020 = 0, $$3 = 0, $$4 = 0, $1 = 0, $4 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 if ((__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0) | 0) >>> 0 < 21) $$4 = 0; else {
  $4 = HEAP32[$0 >> 2] | 0;
  __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($1, $4, $4 + 20 | 0);
  $6 = __ZNK12_GLOBAL__N_110StringView5beginEv($1) | 0;
  $7 = __ZNK12_GLOBAL__N_110StringView3endEv($1) | 0;
  $$020 = $6;
  while (1) {
   if (($$020 | 0) == ($7 | 0)) {
    label = 5;
    break;
   }
   if (!(_isxdigit(HEAP8[$$020 >> 0] | 0) | 0)) {
    $$3 = 0;
    break;
   } else $$020 = $$020 + 1 | 0;
  }
  if ((label | 0) == 5) {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 20;
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16FloatLiteralImplIeEEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0, $1) | 0; else $$3 = 0;
  }
  $$4 = $$3;
 }
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseFloatingLiteralIdEEPNS0_4NodeEv($0) {
 $0 = $0 | 0;
 var $$020 = 0, $$3 = 0, $$4 = 0, $1 = 0, $4 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 if ((__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0) | 0) >>> 0 < 17) $$4 = 0; else {
  $4 = HEAP32[$0 >> 2] | 0;
  __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($1, $4, $4 + 16 | 0);
  $6 = __ZNK12_GLOBAL__N_110StringView5beginEv($1) | 0;
  $7 = __ZNK12_GLOBAL__N_110StringView3endEv($1) | 0;
  $$020 = $6;
  while (1) {
   if (($$020 | 0) == ($7 | 0)) {
    label = 5;
    break;
   }
   if (!(_isxdigit(HEAP8[$$020 >> 0] | 0) | 0)) {
    $$3 = 0;
    break;
   } else $$020 = $$020 + 1 | 0;
  }
  if ((label | 0) == 5) {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 16;
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16FloatLiteralImplIdEEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0, $1) | 0; else $$3 = 0;
  }
  $$4 = $$3;
 }
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle7NewExprEJRNS2_9NodeArrayERPNS2_4NodeES5_RbS9_EEEPT_DpOT0_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $20 = 0, $25 = 0, $26 = 0, $31 = 0, $33 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, $tmpcast6$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $tmpcast6$byval_copy = sp + 24 | 0;
 $tmpcast$byval_copy = sp + 16 | 0;
 $6 = sp + 8 | 0;
 $7 = sp;
 $8 = __ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0, 32) | 0;
 $9 = $1;
 $14 = HEAP32[$9 + 4 >> 2] | 0;
 $15 = $6;
 HEAP32[$15 >> 2] = HEAP32[$9 >> 2];
 HEAP32[$15 + 4 >> 2] = $14;
 $19 = HEAP32[$2 >> 2] | 0;
 $20 = $3;
 $25 = HEAP32[$20 + 4 >> 2] | 0;
 $26 = $7;
 HEAP32[$26 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$26 + 4 >> 2] = $25;
 $31 = (HEAP8[$4 >> 0] | 0) != 0;
 $33 = (HEAP8[$5 >> 0] | 0) != 0;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$tmpcast6$byval_copy >> 2] = HEAP32[$7 >> 2];
 HEAP32[$tmpcast6$byval_copy + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 __ZN12_GLOBAL__N_116itanium_demangle7NewExprC2ENS0_9NodeArrayEPNS0_4NodeES2_bb($8, $tmpcast$byval_copy, $19, $tmpcast6$byval_copy, $31, $33);
 STACKTOP = sp;
 return $8 | 0;
}

function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle7NewExprEJRNS2_9NodeArrayERPNS2_4NodeES4_RbS9_EEEPT_DpOT0_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $20 = 0, $25 = 0, $26 = 0, $31 = 0, $33 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, $tmpcast6$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $tmpcast6$byval_copy = sp + 24 | 0;
 $tmpcast$byval_copy = sp + 16 | 0;
 $6 = sp + 8 | 0;
 $7 = sp;
 $8 = __ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0, 32) | 0;
 $9 = $1;
 $14 = HEAP32[$9 + 4 >> 2] | 0;
 $15 = $6;
 HEAP32[$15 >> 2] = HEAP32[$9 >> 2];
 HEAP32[$15 + 4 >> 2] = $14;
 $19 = HEAP32[$2 >> 2] | 0;
 $20 = $3;
 $25 = HEAP32[$20 + 4 >> 2] | 0;
 $26 = $7;
 HEAP32[$26 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$26 + 4 >> 2] = $25;
 $31 = (HEAP8[$4 >> 0] | 0) != 0;
 $33 = (HEAP8[$5 >> 0] | 0) != 0;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$tmpcast6$byval_copy >> 2] = HEAP32[$7 >> 2];
 HEAP32[$tmpcast6$byval_copy + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 __ZN12_GLOBAL__N_116itanium_demangle7NewExprC2ENS0_9NodeArrayEPNS0_4NodeES2_bb($8, $tmpcast$byval_copy, $19, $tmpcast6$byval_copy, $31, $33);
 STACKTOP = sp;
 return $8 | 0;
}

function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseFloatingLiteralIfEEPNS0_4NodeEv($0) {
 $0 = $0 | 0;
 var $$020 = 0, $$3 = 0, $$4 = 0, $1 = 0, $4 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 if ((__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0) | 0) >>> 0 < 9) $$4 = 0; else {
  $4 = HEAP32[$0 >> 2] | 0;
  __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($1, $4, $4 + 8 | 0);
  $6 = __ZNK12_GLOBAL__N_110StringView5beginEv($1) | 0;
  $7 = __ZNK12_GLOBAL__N_110StringView3endEv($1) | 0;
  $$020 = $6;
  while (1) {
   if (($$020 | 0) == ($7 | 0)) {
    label = 5;
    break;
   }
   if (!(_isxdigit(HEAP8[$$020 >> 0] | 0) | 0)) {
    $$3 = 0;
    break;
   } else $$020 = $$020 + 1 | 0;
  }
  if ((label | 0) == 5) {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 8;
   if (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0, 69) | 0) $$3 = __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16FloatLiteralImplIfEEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0, $1) | 0; else $$3 = 0;
  }
  $$4 = $$3;
 }
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $11 = 0, $14 = 0, $21 = 0, $27 = 0, $29 = 0, $37 = 0, $39 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 8 >> 2] & 127]($7) | 0;
 $14 = HEAP8[$11 + 8 + 3 >> 0] | 0;
 if ($14 << 24 >> 24 < 0) $29 = HEAP32[$11 + 4 >> 2] | 0; else $29 = $14 & 255;
 $21 = HEAP8[$11 + 20 + 3 >> 0] | 0;
 if ($21 << 24 >> 24 < 0) $27 = HEAP32[$11 + 16 >> 2] | 0; else $27 = $21 & 255;
 do if (($29 | 0) != (0 - $27 | 0)) {
  HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
  $37 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $11, $11 + 24 | 0, $5, $4, 0) | 0) - $11 | 0;
  $39 = HEAP32[$1 >> 2] | 0;
  if (($39 | 0) == 12 & ($37 | 0) == 0) {
   HEAP32[$1 >> 2] = 0;
   break;
  }
  if (($39 | 0) < 12 & ($37 | 0) == 12) HEAP32[$1 >> 2] = $39 + 12;
 } else HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4; while (0);
 STACKTOP = sp;
 return;
}

function __ZN6vision5Swap9IfEEvPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $4 = $0 + 4 | 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 $5 = $1 + 4 | 0;
 HEAP32[$1 >> 2] = $2;
 $6 = HEAP32[$4 >> 2] | 0;
 $8 = $0 + 8 | 0;
 HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
 $9 = $1 + 8 | 0;
 HEAP32[$5 >> 2] = $6;
 $10 = HEAP32[$8 >> 2] | 0;
 $12 = $0 + 12 | 0;
 HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
 $13 = $1 + 12 | 0;
 HEAP32[$9 >> 2] = $10;
 $14 = HEAP32[$12 >> 2] | 0;
 $16 = $0 + 16 | 0;
 HEAP32[$12 >> 2] = HEAP32[$13 >> 2];
 $17 = $1 + 16 | 0;
 HEAP32[$13 >> 2] = $14;
 $18 = HEAP32[$16 >> 2] | 0;
 $20 = $0 + 20 | 0;
 HEAP32[$16 >> 2] = HEAP32[$17 >> 2];
 $21 = $1 + 20 | 0;
 HEAP32[$17 >> 2] = $18;
 $22 = HEAP32[$20 >> 2] | 0;
 $24 = $0 + 24 | 0;
 HEAP32[$20 >> 2] = HEAP32[$21 >> 2];
 $25 = $1 + 24 | 0;
 HEAP32[$21 >> 2] = $22;
 $26 = HEAP32[$24 >> 2] | 0;
 $28 = $0 + 28 | 0;
 HEAP32[$24 >> 2] = HEAP32[$25 >> 2];
 $29 = $1 + 28 | 0;
 HEAP32[$25 >> 2] = $26;
 $30 = HEAP32[$28 >> 2] | 0;
 $32 = $0 + 32 | 0;
 HEAP32[$28 >> 2] = HEAP32[$29 >> 2];
 $33 = $1 + 32 | 0;
 HEAP32[$29 >> 2] = $30;
 $34 = HEAP32[$32 >> 2] | 0;
 HEAP32[$32 >> 2] = HEAP32[$33 >> 2];
 HEAP32[$33 >> 2] = $34;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $11 = 0, $13 = 0, $20 = 0, $26 = 0, $28 = 0, $36 = 0, $38 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 8 >> 2] & 127]($7) | 0;
 $13 = HEAP8[$11 + 11 >> 0] | 0;
 if ($13 << 24 >> 24 < 0) $28 = HEAP32[$11 + 4 >> 2] | 0; else $28 = $13 & 255;
 $20 = HEAP8[$11 + 12 + 11 >> 0] | 0;
 if ($20 << 24 >> 24 < 0) $26 = HEAP32[$11 + 16 >> 2] | 0; else $26 = $20 & 255;
 do if (($28 | 0) != (0 - $26 | 0)) {
  HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
  $36 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $11, $11 + 24 | 0, $5, $4, 0) | 0) - $11 | 0;
  $38 = HEAP32[$1 >> 2] | 0;
  if (($38 | 0) == 12 & ($36 | 0) == 0) {
   HEAP32[$1 >> 2] = 0;
   break;
  }
  if (($38 | 0) < 12 & ($36 | 0) == 12) HEAP32[$1 >> 2] = $38 + 12;
 } else HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4; while (0);
 STACKTOP = sp;
 return;
}

function _icpGetJ_U_Xc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $12 = 0, $15 = 0.0, $20 = 0.0, $21 = 0, $24 = 0, $28 = 0, $3 = 0.0, $34 = 0.0, $35 = 0, $36 = 0.0, $38 = 0, $4 = 0.0, $42 = 0, $48 = 0.0, $50 = 0.0, $6 = 0, $9 = 0.0;
 $3 = +HEAPF64[$1 >> 3];
 $4 = +HEAPF64[$2 >> 3];
 $6 = $1 + 8 | 0;
 $9 = +HEAPF64[$2 + 8 >> 3];
 $12 = $1 + 16 | 0;
 $15 = +HEAPF64[$2 + 16 >> 3];
 $20 = +HEAPF64[$1 + 24 >> 3] + ($3 * $4 + +HEAPF64[$6 >> 3] * $9 + +HEAPF64[$12 >> 3] * $15);
 $21 = $1 + 32 | 0;
 $24 = $1 + 40 | 0;
 $28 = $1 + 48 | 0;
 $34 = +HEAPF64[$1 + 56 >> 3] + ($4 * +HEAPF64[$21 >> 3] + $9 * +HEAPF64[$24 >> 3] + $15 * +HEAPF64[$28 >> 3]);
 $35 = $1 + 64 | 0;
 $36 = +HEAPF64[$35 >> 3];
 $38 = $1 + 72 | 0;
 $42 = $1 + 80 | 0;
 $48 = +HEAPF64[$1 + 88 >> 3] + ($4 * $36 + $9 * +HEAPF64[$38 >> 3] + $15 * +HEAPF64[$42 >> 3]);
 if ($48 == 0.0) $$0 = -1; else {
  $50 = $48 * $48;
  HEAPF64[$0 >> 3] = ($3 * $48 - $20 * $36) / $50;
  HEAPF64[$0 + 8 >> 3] = ($48 * +HEAPF64[$6 >> 3] - $20 * +HEAPF64[$38 >> 3]) / $50;
  HEAPF64[$0 + 16 >> 3] = ($48 * +HEAPF64[$12 >> 3] - $20 * +HEAPF64[$42 >> 3]) / $50;
  HEAPF64[$0 + 24 >> 3] = ($48 * +HEAPF64[$21 >> 3] - $34 * +HEAPF64[$35 >> 3]) / $50;
  HEAPF64[$0 + 32 >> 3] = ($48 * +HEAPF64[$24 >> 3] - $34 * +HEAPF64[$38 >> 3]) / $50;
  HEAPF64[$0 + 40 >> 3] = ($48 * +HEAPF64[$28 >> 3] - $34 * +HEAPF64[$42 >> 3]) / $50;
  $$0 = 0;
 }
 return $$0 | 0;
}

function ___fwritex($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$03846 = 0, $$1 = 0, $$139 = 0, $$141 = 0, $$143 = 0, $10 = 0, $12 = 0, $14 = 0, $23 = 0, $29 = 0, $3 = 0, $32 = 0, $4 = 0, $9 = 0, label = 0;
 $3 = $2 + 16 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) if (!(___towrite($2) | 0)) {
  $12 = HEAP32[$3 >> 2] | 0;
  label = 5;
 } else $$1 = 0; else {
  $12 = $4;
  label = 5;
 }
 L5 : do if ((label | 0) == 5) {
  $9 = $2 + 20 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $14 = $10;
  if (($12 - $10 | 0) >>> 0 < $1 >>> 0) {
   $$1 = FUNCTION_TABLE_iiii[HEAP32[$2 + 36 >> 2] & 63]($2, $0, $1) | 0;
   break;
  }
  L10 : do if ((HEAP8[$2 + 75 >> 0] | 0) < 0 | ($1 | 0) == 0) {
   $$139 = 0;
   $$141 = $0;
   $$143 = $1;
   $32 = $14;
  } else {
   $$03846 = $1;
   while (1) {
    $23 = $$03846 + -1 | 0;
    if ((HEAP8[$0 + $23 >> 0] | 0) == 10) break;
    if (!$23) {
     $$139 = 0;
     $$141 = $0;
     $$143 = $1;
     $32 = $14;
     break L10;
    } else $$03846 = $23;
   }
   $29 = FUNCTION_TABLE_iiii[HEAP32[$2 + 36 >> 2] & 63]($2, $0, $$03846) | 0;
   if ($29 >>> 0 < $$03846 >>> 0) {
    $$1 = $29;
    break L5;
   }
   $$139 = $$03846;
   $$141 = $0 + $$03846 | 0;
   $$143 = $1 - $$03846 | 0;
   $32 = HEAP32[$9 >> 2] | 0;
  } while (0);
  _memcpy($32 | 0, $$141 | 0, $$143 | 0) | 0;
  HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + $$143;
  $$1 = $$139 + $$143 | 0;
 } while (0);
 return $$1 | 0;
}

function __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((HEAP32[$3 >> 2] | 0) - $6 >> 5 >>> 0 < $1 >>> 0) {
  $13 = ($6 - (HEAP32[$0 >> 2] | 0) >> 5) + $1 | 0;
  $14 = __ZNKSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $19 = (HEAP32[$3 >> 2] | 0) - $18 | 0;
   $23 = $19 >> 4;
   __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEEC2EmmS5_($2, $19 >> 5 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, (HEAP32[$5 >> 2] | 0) - $18 >> 5, $0 + 8 | 0);
   __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
   __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function _alloc_barray($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$ = 0, $$04853 = 0, $$04956 = 0, $$054 = 0, $$1$lcssa = 0, $$15155 = 0, $$152 = 0, $15 = 0, $17 = 0, $18 = 0, $21 = 0, $23 = 0, $24 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $umax = 0, $$15155$looptemp = 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $6 = $2 << 7;
 $7 = 999999984 / ($6 >>> 0) | 0;
 if ($6 >>> 0 > 999999984) {
  $9 = HEAP32[$0 >> 2] | 0;
  HEAP32[$9 + 20 >> 2] = 72;
  FUNCTION_TABLE_vi[HEAP32[$9 >> 2] & 255]($0);
 }
 $$ = ($7 | 0) < ($3 | 0) ? $7 : $3;
 HEAP32[$5 + 80 >> 2] = $$;
 $15 = _alloc_small($0, $1, $3 << 2) | 0;
 if (!$3) return $15 | 0;
 $17 = ~$3;
 $$04956 = 0;
 $$15155 = $$;
 while (1) {
  $18 = $3 - $$04956 | 0;
  $$15155$looptemp = $$15155;
  $$15155 = $$15155 >>> 0 < $18 >>> 0 ? $$15155 : $18;
  $21 = _alloc_large($0, $1, Math_imul($6, $$15155) | 0) | 0;
  if (!$$15155) $$1$lcssa = $$04956; else {
   $23 = $$04956 + $17 | 0;
   $24 = ~$$15155$looptemp;
   $umax = $23 >>> 0 > $24 >>> 0 ? $23 : $24;
   $$04853 = $$15155;
   $$054 = $21;
   $$152 = $$04956;
   while (1) {
    HEAP32[$15 + ($$152 << 2) >> 2] = $$054;
    $$04853 = $$04853 + -1 | 0;
    if (!$$04853) break; else {
     $$054 = $$054 + ($2 << 7) | 0;
     $$152 = $$152 + 1 | 0;
    }
   }
   $$1$lcssa = $$04956 + -1 - $umax | 0;
  }
  if ($$1$lcssa >>> 0 >= $3 >>> 0) break; else $$04956 = $$1$lcssa;
 }
 return $15 | 0;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $16 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = (((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $16 = ((HEAP32[$0 + 8 >> 2] | 0) - $14 | 0) / 12 | 0;
  $19 = $16 << 1;
  __ZNSt3__214__split_bufferIN6vision7Point3dIfEERNS_9allocatorIS3_EEEC2EmmS6_($2, $16 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, ((HEAP32[$3 >> 2] | 0) - $14 | 0) / 12 | 0, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  HEAP32[$25 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$25 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$25 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 12;
  __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
  __ZNSt3__214__split_bufferIN6vision7Point3dIfEERNS_9allocatorIS3_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZNK12_GLOBAL__N_116itanium_demangle15BracedRangeExpr9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy1 = 0, $11 = 0, $2 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy1 = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 __ZN12_GLOBAL__N_112OutputStreampLEc($1, 91);
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$0 + 8 >> 2] | 0, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 53398);
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy1);
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$0 + 12 >> 2] | 0, $1);
 __ZN12_GLOBAL__N_112OutputStreampLEc($1, 93);
 $8 = $0 + 16 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 if (((__ZNK12_GLOBAL__N_116itanium_demangle4Node7getKindEv($9) | 0) + -65 & 255) < 2) $11 = $9; else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 53404);
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $$byval_copy1);
  $11 = HEAP32[$8 >> 2] | 0;
 }
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($11, $1);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((HEAP32[$3 >> 2] | 0) - $6 >> 3 >>> 0 < $1 >>> 0) {
  $13 = ($6 - (HEAP32[$0 >> 2] | 0) >> 3) + $1 | 0;
  $14 = __ZNKSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $19 = (HEAP32[$3 >> 2] | 0) - $18 | 0;
   $23 = $19 >> 2;
   __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEEC2EmmS5_($2, $19 >> 3 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, (HEAP32[$5 >> 2] | 0) - $18 >> 3, $0 + 8 | 0);
   __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
   __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function __ZN6vision21DenormalizeHomographyIfEEvPT_PKS1_S1_S4_S1_S4_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 $3 = $3 | 0;
 $4 = +$4;
 $5 = $5 | 0;
 var $10 = 0, $11 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0, $21 = 0.0, $30 = 0.0, $31 = 0.0, $33 = 0.0, $34 = 0, $36 = 0.0, $40 = 0, $6 = 0, $7 = 0.0, $70 = 0.0, $73 = 0.0, $8 = 0.0;
 $6 = $1 + 24 | 0;
 $7 = +HEAPF32[$6 >> 2];
 $8 = +HEAPF32[$5 >> 2];
 $10 = $1 + 28 | 0;
 $11 = +HEAPF32[$10 >> 2];
 $18 = $7 * $8 + +HEAPF32[$1 >> 2] / $4;
 $19 = $8 * $11 + +HEAPF32[$1 + 4 >> 2] / $4;
 $20 = $5 + 4 | 0;
 $21 = +HEAPF32[$20 >> 2];
 $30 = $7 * $21 + +HEAPF32[$1 + 12 >> 2] / $4;
 $31 = $11 * $21 + +HEAPF32[$1 + 16 >> 2] / $4;
 $33 = +HEAPF32[$3 >> 2] * $2;
 $34 = $3 + 4 | 0;
 $36 = +HEAPF32[$34 >> 2] * $2;
 HEAPF32[$0 >> 2] = $18 * $2;
 HEAPF32[$0 + 4 >> 2] = $19 * $2;
 $40 = $1 + 32 | 0;
 HEAPF32[$0 + 8 >> 2] = +HEAPF32[$40 >> 2] * +HEAPF32[$5 >> 2] + +HEAPF32[$1 + 8 >> 2] / $4 - $18 * $33 - $19 * $36;
 HEAPF32[$0 + 12 >> 2] = $30 * $2;
 HEAPF32[$0 + 16 >> 2] = $31 * $2;
 HEAPF32[$0 + 20 >> 2] = +HEAPF32[$40 >> 2] * +HEAPF32[$20 >> 2] + +HEAPF32[$1 + 20 >> 2] / $4 - $30 * $33 - $31 * $36;
 $70 = +HEAPF32[$6 >> 2] * $2;
 HEAPF32[$0 + 24 >> 2] = $70;
 $73 = +HEAPF32[$10 >> 2] * $2;
 HEAPF32[$0 + 28 >> 2] = $73;
 HEAPF32[$0 + 32 >> 2] = +HEAPF32[$40 >> 2] - $70 * +HEAPF32[$3 >> 2] - $73 * +HEAPF32[$34 >> 2];
 return;
}

function _arLogv($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $10 = 0, $17 = 0, $18 = 0, $19 = 0, $28 = 0, $32 = 0, $4 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $vararg_buffer = sp + 16 | 0;
 $4 = sp;
 if ((!(($2 | 0) == 0 | (HEAP32[4186] | 0) > ($1 | 0)) ? HEAP8[$2 >> 0] | 0 : 0) ? (HEAP32[$4 >> 2] = HEAP32[$3 >> 2], $10 = _vsnprintf(0, 0, $2, $4) | 0, $10 | 0) : 0) {
  if ($1 >>> 0 < 4) $$0 = (_strlen(HEAP32[1744 + ($1 << 2) >> 2] | 0) | 0) + 3 | 0; else $$0 = 0;
  $17 = $$0 + $10 | 0;
  $18 = $17 + 1 | 0;
  $19 = _malloc($18) | 0;
  if ($$0 | 0) {
   HEAP32[$vararg_buffer >> 2] = HEAP32[1744 + ($1 << 2) >> 2];
   _snprintf($19, $$0 + 1 | 0, 25625, $vararg_buffer) | 0;
  }
  _vsnprintf($19 + $$0 | 0, $10 + 1 | 0, $2, $3) | 0;
  do if (0) {
   if (0 ? ($28 = HEAP32[16308] | 0, $28 >>> 0 < 0) : 0) {
    $32 = 0 + $28 | 0;
    if ($17 >>> 0 > (-4 - $28 + 0 | 0) >>> 0) {
     HEAP8[$32 >> 0] = 46;
     HEAP8[$32 + 1 >> 0] = 46;
     HEAP8[$32 + 2 >> 0] = 46;
     HEAP8[$32 + 3 >> 0] = 0;
     HEAP32[16308] = 0;
     break;
    } else {
     _strncpy($32, $19, $18) | 0;
     HEAP32[16308] = (HEAP32[16308] | 0) + $17;
     break;
    }
   }
  } else _fputs($19, HEAP32[4271] | 0) | 0; while (0);
  _free($19);
 }
 STACKTOP = sp;
 return;
}

function __ZN6vision25CheckHomographyHeuristicsEPfii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$1 = 0, $10 = 0, $12 = 0.0, $15 = 0.0, $20 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $3 = sp + 88 | 0;
 $4 = sp + 80 | 0;
 $5 = sp + 72 | 0;
 $6 = sp + 64 | 0;
 $7 = sp;
 $8 = sp + 56 | 0;
 $9 = sp + 48 | 0;
 $10 = sp + 40 | 0;
 if (__ZN6vision16MatrixInverse3x3IfEEbPT_PKS1_S1_($7, $0, 9.999999747378752e-06) | 0) {
  $12 = +($1 | 0);
  HEAPF32[$8 >> 2] = $12;
  HEAPF32[$8 + 4 >> 2] = 0.0;
  HEAPF32[$9 >> 2] = $12;
  $15 = +($2 | 0);
  HEAPF32[$9 + 4 >> 2] = $15;
  HEAPF32[$10 >> 2] = 0.0;
  HEAPF32[$10 + 4 >> 2] = $15;
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($3, $7, 65252);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($4, $7, $8);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($5, $7, $9);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($6, $7, $10);
  $20 = +(Math_imul($2, $1) | 0) * .0001;
  if (+__ZN6vision20SmallestTriangleAreaIfEET_PKS1_S3_S3_S3_($3, $4, $5, $6) < $20) $$0 = 0; else $$0 = __ZN6vision19QuadrilateralConvexIfEEbPKT_S3_S3_S3_($3, $4, $5, $6) | 0;
  $$1 = $$0;
 } else $$1 = 0;
 STACKTOP = sp;
 return $$1 | 0;
}

function _xt_by_x($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$051 = 0, $$052 = 0, $$053 = 0, $$054 = 0, $$055 = 0, $$056 = 0, $$1 = 0, $12 = 0, $17 = 0, $19 = 0, $26 = 0.0, $27 = 0.0, $3 = 0, $5 = 0;
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 L1 : do if ((HEAP32[$1 + 4 >> 2] | 0) == ($5 | 0) ? (HEAP32[$1 + 8 >> 2] | 0) == ($5 | 0) : 0) {
  $12 = HEAP32[$1 >> 2] | 0;
  $$052 = 0;
  $$055 = $12;
  while (1) {
   if (($$052 | 0) >= ($5 | 0)) {
    $$053 = 0;
    break L1;
   }
   $$051 = 0;
   $$1 = $$055;
   while (1) {
    if (($$051 | 0) == ($5 | 0)) break;
    L10 : do if ($$051 >>> 0 < $$052 >>> 0) {
     $17 = $12 + ((Math_imul($$051, $5) | 0) + $$052 << 3) | 0;
     HEAPF64[$$1 >> 3] = +HEAPF64[$17 >> 3];
    } else {
     $19 = HEAP32[$0 >> 2] | 0;
     HEAPF64[$$1 >> 3] = 0.0;
     $$0 = 0;
     $$054 = $19 + ($$052 << 3) | 0;
     $$056 = $19 + ($$051 << 3) | 0;
     $27 = 0.0;
     while (1) {
      if (($$0 | 0) >= ($3 | 0)) break L10;
      $26 = $27 + +HEAPF64[$$054 >> 3] * +HEAPF64[$$056 >> 3];
      HEAPF64[$$1 >> 3] = $26;
      $$0 = $$0 + 1 | 0;
      $$054 = $$054 + ($5 << 3) | 0;
      $$056 = $$056 + ($5 << 3) | 0;
      $27 = $26;
     }
    } while (0);
    $$051 = $$051 + 1 | 0;
    $$1 = $$1 + 8 | 0;
   }
   $$052 = $$052 + 1 | 0;
   $$055 = $$055 + ($5 << 3) | 0;
  }
 } else $$053 = -1; while (0);
 return $$053 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$028 = 0, $$029 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $4 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$2 = 0;
 } else {
  $7 = (HEAP8[$0 >> 0] | 0) == 45;
  if ($7) {
   $8 = $0 + 1 | 0;
   if (($8 | 0) == ($1 | 0)) {
    HEAP32[$2 >> 2] = 4;
    $$2 = 0;
    break;
   } else $$029 = $8;
  } else $$029 = $0;
  $10 = ___errno_location() | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  $12 = ___errno_location() | 0;
  HEAP32[$12 >> 2] = 0;
  $14 = _strtoull_l($$029, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $15 = getTempRet0() | 0;
  $16 = ___errno_location() | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (!$17) {
   $19 = ___errno_location() | 0;
   HEAP32[$19 >> 2] = $11;
  }
  do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) {
   if ($15 >>> 0 > 0 | ($15 | 0) == 0 & $14 >>> 0 > 65535 | ($17 | 0) == 68) {
    HEAP32[$2 >> 2] = 4;
    $$028 = -1;
    break;
   }
   if ($7) $$028 = 0 - $14 & 65535; else $$028 = $14 & 65535;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$028 = 0;
  } while (0);
  $$2 = $$028;
 } while (0);
 STACKTOP = sp;
 return $$2 | 0;
}

function _alloc_sarray($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$ = 0, $$04853 = 0, $$04956 = 0, $$054 = 0, $$1$lcssa = 0, $$15155 = 0, $$152 = 0, $14 = 0, $16 = 0, $17 = 0, $20 = 0, $22 = 0, $23 = 0, $5 = 0, $6 = 0, $8 = 0, $umax = 0, $$15155$looptemp = 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $6 = 999999984 / ($2 >>> 0) | 0;
 if ($2 >>> 0 > 999999984) {
  $8 = HEAP32[$0 >> 2] | 0;
  HEAP32[$8 + 20 >> 2] = 72;
  FUNCTION_TABLE_vi[HEAP32[$8 >> 2] & 255]($0);
 }
 $$ = ($6 | 0) < ($3 | 0) ? $6 : $3;
 HEAP32[$5 + 80 >> 2] = $$;
 $14 = _alloc_small($0, $1, $3 << 2) | 0;
 if (!$3) return $14 | 0;
 $16 = ~$3;
 $$04956 = 0;
 $$15155 = $$;
 while (1) {
  $17 = $3 - $$04956 | 0;
  $$15155$looptemp = $$15155;
  $$15155 = $$15155 >>> 0 < $17 >>> 0 ? $$15155 : $17;
  $20 = _alloc_large($0, $1, Math_imul($$15155, $2) | 0) | 0;
  if (!$$15155) $$1$lcssa = $$04956; else {
   $22 = $$04956 + $16 | 0;
   $23 = ~$$15155$looptemp;
   $umax = $22 >>> 0 > $23 >>> 0 ? $22 : $23;
   $$04853 = $$15155;
   $$054 = $20;
   $$152 = $$04956;
   while (1) {
    HEAP32[$14 + ($$152 << 2) >> 2] = $$054;
    $$04853 = $$04853 + -1 | 0;
    if (!$$04853) break; else {
     $$054 = $$054 + $2 | 0;
     $$152 = $$152 + 1 | 0;
    }
   }
   $$1$lcssa = $$04956 + -1 - $umax | 0;
  }
  if ($$1$lcssa >>> 0 >= $3 >>> 0) break; else $$04956 = $$1$lcssa;
 }
 return $14 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE6rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) != 1) if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEm($1) | 0; else $$0 = 2;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 <= $8 >>> 0) {
  if ($$0 >>> 0 < $8 >>> 0) {
   $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
   if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
    $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
    $30 = $22 >>> 0 < 2 ? $22 : $27;
   } else $30 = __ZNSt3__212__next_primeEm($22) | 0;
   $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
   if ($$sroa$speculated >>> 0 < $8 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE8__rehashEm($0, $$sroa$speculated);
  }
 } else __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE8__rehashEm($0, $$0);
 return;
}

function __ZL18genBWImageOneThirdPhiiPiS0_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$052 = 0, $$053 = 0, $$054 = 0, $$055 = 0, $$056 = 0, $$1 = 0, $11 = 0, $5 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = ($1 | 0) / 3 | 0;
 HEAP32[$3 >> 2] = $5;
 $6 = ($2 | 0) / 3 | 0;
 HEAP32[$4 >> 2] = $6;
 $8 = _malloc(Math_imul($6, $5) | 0) | 0;
 if (!$8) {
  _arLog(0, 3, 45930, sp);
  _exit(1);
 }
 $$0 = 0;
 $$053 = $8;
 while (1) {
  if (($$0 | 0) >= ($6 | 0)) break;
  $11 = $$0 * 3 | 0;
  $$052 = 0;
  $$054 = $0 + (Math_imul($11, $1) | 0) | 0;
  $$055 = $0 + (Math_imul($11 + 2 | 0, $1) | 0) | 0;
  $$056 = $0 + (Math_imul($11 + 1 | 0, $1) | 0) | 0;
  $$1 = $$053;
  while (1) {
   if (($$052 | 0) >= ($5 | 0)) break;
   HEAP8[$$1 >> 0] = ((HEAPU8[$$054 + 1 >> 0] | 0) + (HEAPU8[$$054 >> 0] | 0) + (HEAPU8[$$054 + 2 >> 0] | 0) + (HEAPU8[$$056 >> 0] | 0) + (HEAPU8[$$056 + 1 >> 0] | 0) + (HEAPU8[$$056 + 2 >> 0] | 0) + (HEAPU8[$$055 >> 0] | 0) + (HEAPU8[$$055 + 1 >> 0] | 0) + (HEAPU8[$$055 + 2 >> 0] | 0) | 0) / 9 | 0;
   $$052 = $$052 + 1 | 0;
   $$054 = $$054 + 3 | 0;
   $$055 = $$055 + 3 | 0;
   $$056 = $$056 + 3 | 0;
   $$1 = $$1 + 1 | 0;
  }
  $$0 = $$0 + 1 | 0;
  $$053 = $$1;
 }
 STACKTOP = sp;
 return $8 | 0;
}

function _jpeg_finish_decompress($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $11 = 0, $18 = 0, $2 = 0, $23 = 0, $24 = 0, $33 = 0, label = 0;
 $1 = $0 + 20 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (($2 + -205 | 0) >>> 0 < 2 ? (HEAP32[$0 + 64 >> 2] | 0) == 0 : 0) {
  if ((HEAP32[$0 + 140 >> 2] | 0) >>> 0 < (HEAP32[$0 + 116 >> 2] | 0) >>> 0) {
   $11 = HEAP32[$0 >> 2] | 0;
   HEAP32[$11 + 20 >> 2] = 69;
   FUNCTION_TABLE_vi[HEAP32[$11 >> 2] & 255]($0);
  }
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 + 444 >> 2] | 0) + 4 >> 2] & 255]($0);
  HEAP32[$1 >> 2] = 210;
 } else label = 6;
 L7 : do if ((label | 0) == 6) switch ($2 | 0) {
 case 210:
  {
   break L7;
   break;
  }
 case 207:
  {
   HEAP32[$1 >> 2] = 210;
   break L7;
   break;
  }
 default:
  {
   $18 = HEAP32[$0 >> 2] | 0;
   HEAP32[$18 + 20 >> 2] = 21;
   HEAP32[$18 + 24 >> 2] = $2;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   break L7;
  }
 } while (0);
 $23 = $0 + 460 | 0;
 $24 = HEAP32[$23 >> 2] | 0;
 L13 : do if (!(HEAP32[$24 + 20 >> 2] | 0)) {
  $33 = $24;
  while (1) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$33 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $33 = HEAP32[$23 >> 2] | 0;
   if (HEAP32[$33 + 20 >> 2] | 0) break L13;
  }
  return $$0 | 0;
 } while (0);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 + 24 >> 2] | 0) + 24 >> 2] & 255]($0);
 _jpeg_abort($0);
 $$0 = 1;
 return $$0 | 0;
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 2;
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEEC2EmmS5_($2, $15 >> 3 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 3, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $26 = $1;
  $31 = HEAP32[$26 + 4 >> 2] | 0;
  $32 = HEAP32[$24 >> 2] | 0;
  HEAP32[$32 >> 2] = HEAP32[$26 >> 2];
  HEAP32[$32 + 4 >> 2] = $31;
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 8;
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function _strcspn($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01823 = 0, $$019$lcssa$sink = 0, $$01920 = 0, $10 = 0, $12 = 0, $13 = 0, $17 = 0, $2 = 0, $23 = 0, $25 = 0, $26 = 0, $3 = 0, $34 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = HEAP8[$1 >> 0] | 0;
 L1 : do if ($3 << 24 >> 24 != 0 ? (HEAP8[$1 + 1 >> 0] | 0) != 0 : 0) {
  _memset($2 | 0, 0, 32) | 0;
  $10 = HEAP8[$1 >> 0] | 0;
  if ($10 << 24 >> 24) {
   $$01823 = $1;
   $13 = $10;
   do {
    $12 = $13 & 255;
    $17 = $2 + ($12 >>> 5 << 2) | 0;
    HEAP32[$17 >> 2] = HEAP32[$17 >> 2] | 1 << ($12 & 31);
    $$01823 = $$01823 + 1 | 0;
    $13 = HEAP8[$$01823 >> 0] | 0;
   } while ($13 << 24 >> 24 != 0);
  }
  $23 = HEAP8[$0 >> 0] | 0;
  if (!($23 << 24 >> 24)) $$019$lcssa$sink = $0; else {
   $$01920 = $0;
   $26 = $23;
   while (1) {
    $25 = $26 & 255;
    if (HEAP32[$2 + ($25 >>> 5 << 2) >> 2] & 1 << ($25 & 31) | 0) {
     $$019$lcssa$sink = $$01920;
     break L1;
    }
    $34 = $$01920 + 1 | 0;
    $26 = HEAP8[$34 >> 0] | 0;
    if (!($26 << 24 >> 24)) {
     $$019$lcssa$sink = $34;
     break;
    } else $$01920 = $34;
   }
  }
 } else label = 3; while (0);
 if ((label | 0) == 3) $$019$lcssa$sink = ___strchrnul($0, $3 << 24 >> 24) | 0;
 STACKTOP = sp;
 return $$019$lcssa$sink - $0 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$028 = 0, $$029 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $4 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$2 = 0;
 } else {
  $7 = (HEAP8[$0 >> 0] | 0) == 45;
  if ($7) {
   $8 = $0 + 1 | 0;
   if (($8 | 0) == ($1 | 0)) {
    HEAP32[$2 >> 2] = 4;
    $$2 = 0;
    break;
   } else $$029 = $8;
  } else $$029 = $0;
  $10 = ___errno_location() | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  $12 = ___errno_location() | 0;
  HEAP32[$12 >> 2] = 0;
  $14 = _strtoull_l($$029, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $15 = getTempRet0() | 0;
  $16 = ___errno_location() | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (!$17) {
   $19 = ___errno_location() | 0;
   HEAP32[$19 >> 2] = $11;
  }
  do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if ($15 >>> 0 > 0 | ($15 | 0) == 0 & $14 >>> 0 > 4294967295 | ($17 | 0) == 68) {
   HEAP32[$2 >> 2] = 4;
   $$028 = -1;
   break;
  } else {
   $$028 = $7 ? 0 - $14 | 0 : $14;
   break;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$028 = 0;
  } while (0);
  $$2 = $$028;
 } while (0);
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$028 = 0, $$029 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $4 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$2 = 0;
 } else {
  $7 = (HEAP8[$0 >> 0] | 0) == 45;
  if ($7) {
   $8 = $0 + 1 | 0;
   if (($8 | 0) == ($1 | 0)) {
    HEAP32[$2 >> 2] = 4;
    $$2 = 0;
    break;
   } else $$029 = $8;
  } else $$029 = $0;
  $10 = ___errno_location() | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  $12 = ___errno_location() | 0;
  HEAP32[$12 >> 2] = 0;
  $14 = _strtoull_l($$029, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $15 = getTempRet0() | 0;
  $16 = ___errno_location() | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (!$17) {
   $19 = ___errno_location() | 0;
   HEAP32[$19 >> 2] = $11;
  }
  do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if ($15 >>> 0 > 0 | ($15 | 0) == 0 & $14 >>> 0 > 4294967295 | ($17 | 0) == 68) {
   HEAP32[$2 >> 2] = 4;
   $$028 = -1;
   break;
  } else {
   $$028 = $7 ? 0 - $14 | 0 : $14;
   break;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$028 = 0;
  } while (0);
  $$2 = $$028;
 } while (0);
 STACKTOP = sp;
 return $$2 | 0;
}

function _addNFTMarker($id, $datasetPathname) {
 $id = $id | 0;
 $datasetPathname = $datasetPathname | 0;
 var $0 = 0, $call7 = 0, $cond$i$i$i = 0, $id$addr = 0, $retval$1 = 0, $surfaceSetCount = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $id$addr = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 do if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(65260, $id$addr) | 0) {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(65260, $id$addr) | 0;
  $surfaceSetCount = $call7 + 244 | 0;
  $0 = HEAP32[$surfaceSetCount >> 2] | 0;
  if ((HEAP8[$datasetPathname + 11 >> 0] | 0) < 0) $cond$i$i$i = HEAP32[$datasetPathname >> 2] | 0; else $cond$i$i$i = $datasetPathname;
  if (!(_loadNFTMarker($call7, $0, $cond$i$i$i) | 0)) {
   _arLog(0, 3, 44914, $vararg_buffer);
   $retval$1 = -1;
   break;
  } else {
   HEAP32[$surfaceSetCount >> 2] = (HEAP32[$surfaceSetCount >> 2] | 0) + 1;
   $retval$1 = $0;
   break;
  }
 } else $retval$1 = -1; while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 2;
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEEC2EmmS5_($2, $15 >> 3 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 3, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $26 = $1;
  $31 = HEAP32[$26 + 4 >> 2] | 0;
  $32 = HEAP32[$24 >> 2] | 0;
  HEAP32[$32 >> 2] = HEAP32[$26 >> 2];
  HEAP32[$32 + 4 >> 2] = $31;
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 8;
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function ___stdio_read($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$cast = 0, $$pr = 0, $12 = 0, $22 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp;
 $4 = sp + 16 | 0;
 HEAP32[$3 >> 2] = $1;
 $5 = $3 + 4 | 0;
 $6 = $0 + 48 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 HEAP32[$5 >> 2] = $2 - (($7 | 0) != 0 & 1);
 $12 = $0 + 44 | 0;
 HEAP32[$3 + 8 >> 2] = HEAP32[$12 >> 2];
 HEAP32[$3 + 12 >> 2] = $7;
 if (!(___wasi_syscall_ret(___wasi_fd_read(HEAP32[$0 + 60 >> 2] | 0, $3 | 0, 2, $4 | 0) | 0) | 0)) {
  $$pr = HEAP32[$4 >> 2] | 0;
  if (($$pr | 0) >= 1) {
   $26 = HEAP32[$5 >> 2] | 0;
   if ($$pr >>> 0 > $26 >>> 0) {
    $29 = HEAP32[$12 >> 2] | 0;
    $30 = $0 + 4 | 0;
    HEAP32[$30 >> 2] = $29;
    $$cast = $29;
    HEAP32[$0 + 8 >> 2] = $$cast + ($$pr - $26);
    if (!(HEAP32[$6 >> 2] | 0)) $$0 = $2; else {
     HEAP32[$30 >> 2] = $$cast + 1;
     HEAP8[$1 + ($2 + -1) >> 0] = HEAP8[$$cast >> 0] | 0;
     $$0 = $2;
    }
   } else $$0 = $$pr;
  } else {
   $22 = $$pr;
   label = 4;
  }
 } else {
  HEAP32[$4 >> 2] = -1;
  $22 = -1;
  label = 4;
 }
 if ((label | 0) == 4) {
  HEAP32[$0 >> 2] = $22 & 48 ^ 16 | HEAP32[$0 >> 2];
  $$0 = $22;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _rgb1_gray_convert($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$05356$us = 0, $$05457$us = 0, $$058$us = 0, $$in = 0, $10 = 0, $12 = 0, $13 = 0, $18 = 0, $21 = 0, $24 = 0, $26 = 0, $32 = 0, $36 = 0, $8 = 0, $$in$looptemp = 0;
 $8 = HEAP32[(HEAP32[$0 + 480 >> 2] | 0) + 24 >> 2] | 0;
 $10 = HEAP32[$0 + 112 >> 2] | 0;
 if (($4 | 0) <= 0) return;
 $12 = $1 + 4 | 0;
 $13 = $1 + 8 | 0;
 if (!$10) return;
 $$05457$us = $3;
 $$058$us = $2;
 $$in = $4;
 while (1) {
  $$in$looptemp = $$in;
  $$in = $$in + -1 | 0;
  $18 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($$058$us << 2) >> 2] | 0;
  $21 = HEAP32[(HEAP32[$12 >> 2] | 0) + ($$058$us << 2) >> 2] | 0;
  $24 = HEAP32[(HEAP32[$13 >> 2] | 0) + ($$058$us << 2) >> 2] | 0;
  $$058$us = $$058$us + 1 | 0;
  $26 = HEAP32[$$05457$us >> 2] | 0;
  $$05356$us = 0;
  do {
   $32 = HEAPU8[$21 + $$05356$us >> 0] | 0;
   $36 = $32 + 128 | 0;
   HEAP8[$26 + $$05356$us >> 0] = ((HEAP32[$8 + (($32 | 256) << 2) >> 2] | 0) + (HEAP32[$8 + (($36 + (HEAPU8[$18 + $$05356$us >> 0] | 0) & 255) << 2) >> 2] | 0) + (HEAP32[$8 + (($36 + (HEAPU8[$24 + $$05356$us >> 0] | 0) & 255 | 512) << 2) >> 2] | 0) | 0) >>> 16;
   $$05356$us = $$05356$us + 1 | 0;
  } while (($$05356$us | 0) != ($10 | 0));
  if (($$in$looptemp | 0) <= 1) break; else $$05457$us = $$05457$us + 4 | 0;
 }
 return;
}

function __ZNK6vision5Image3getIfEEPKT_m($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $16 = 0, $2 = 0, $20 = 0, $26 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 if ((HEAP32[$0 + 8 >> 2] | 0) >>> 0 > $1 >>> 0) {
  $26 = (HEAP32[$0 + 24 >> 2] | 0) + (Math_imul(HEAP32[$0 + 12 >> 2] | 0, $1) | 0) | 0;
  STACKTOP = sp;
  return $26 | 0;
 } else {
  $11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 27776) | 0, 27813) | 0, 39072) | 0, 124) | 0, 39079) | 0, 27883) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $11 + (HEAP32[(HEAP32[$11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 127]($16, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($11, $20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  _abort();
 }
 return 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$028 = 0, $$pn = 0, $$sroa$0$0 = 0, $14 = 0, $15 = 0, $19 = 0, $2 = 0, $25 = 0, $4 = 0, $6 = 0, $8 = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 L1 : do if ($4) {
  $6 = $4 + -1 | 0;
  $8 = ($6 & $4 | 0) == 0;
  if (!$8) if ($2 >>> 0 < $4 >>> 0) $14 = $2; else $14 = ($2 >>> 0) % ($4 >>> 0) | 0; else $14 = $6 & $2;
  $15 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($14 << 2) >> 2] | 0;
  if ($15) {
   $$pn = $15;
   while (1) {
    $$028 = HEAP32[$$pn >> 2] | 0;
    if (!$$028) {
     $$sroa$0$0 = 0;
     break L1;
    }
    $19 = HEAP32[$$028 + 4 >> 2] | 0;
    if (($19 | 0) == ($2 | 0)) {
     if ((HEAP32[$$028 + 8 >> 2] | 0) == ($2 | 0)) {
      $$sroa$0$0 = $$028;
      break L1;
     }
    } else {
     if (!$8) if ($19 >>> 0 < $4 >>> 0) $25 = $19; else $25 = ($19 >>> 0) % ($4 >>> 0) | 0; else $25 = $19 & $6;
     if (($25 | 0) != ($14 | 0)) {
      $$sroa$0$0 = 0;
      break L1;
     }
    }
    $$pn = $$028;
   }
  } else $$sroa$0$0 = 0;
 } else $$sroa$0$0 = 0; while (0);
 return $$sroa$0$0 | 0;
}

function __ZNSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3) + 1 | 0;
 $9 = __ZNKSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 2;
  __ZNSt3__214__split_bufferINS_4pairIfmEERNS_9allocatorIS2_EEEC2EmmS5_($2, $15 >> 3 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 3, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $26 = $1;
  $31 = HEAP32[$26 + 4 >> 2] | 0;
  $32 = HEAP32[$24 >> 2] | 0;
  HEAP32[$32 >> 2] = HEAP32[$26 >> 2];
  HEAP32[$32 + 4 >> 2] = $31;
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 8;
  __ZNSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
  __ZNSt3__214__split_bufferINS_4pairIfmEERNS_9allocatorIS2_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZN6vision5Image3getIfEEPT_m($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $16 = 0, $2 = 0, $20 = 0, $26 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 if ((HEAP32[$0 + 8 >> 2] | 0) >>> 0 > $1 >>> 0) {
  $26 = (HEAP32[$0 + 24 >> 2] | 0) + (Math_imul(HEAP32[$0 + 12 >> 2] | 0, $1) | 0) | 0;
  STACKTOP = sp;
  return $26 | 0;
 } else {
  $11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(65808, 27776) | 0, 27813) | 0, 39072) | 0, 119) | 0, 39079) | 0, 27883) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $11 + (HEAP32[(HEAP32[$11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 66512) | 0;
  $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 127]($16, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($11, $20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  _abort();
 }
 return 0;
}

function __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS8_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $$0$i = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($$0$i | 0) == ($2 | 0)) break;
  $7 = HEAP32[$5 >> 2] | 0;
  $8 = $7 + -12 | 0;
  $9 = $$0$i + -12 | 0;
  HEAP32[$8 >> 2] = 0;
  $10 = $7 + -8 | 0;
  HEAP32[$10 >> 2] = 0;
  $11 = $7 + -4 | 0;
  HEAP32[$11 >> 2] = 0;
  HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
  $13 = $$0$i + -8 | 0;
  HEAP32[$10 >> 2] = HEAP32[$13 >> 2];
  $15 = $$0$i + -4 | 0;
  HEAP32[$11 >> 2] = HEAP32[$15 >> 2];
  HEAP32[$15 >> 2] = 0;
  HEAP32[$13 >> 2] = 0;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -12;
  $$0$i = $9;
 }
 $19 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $19;
 $21 = $1 + 8 | 0;
 $22 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$21 >> 2];
 HEAP32[$21 >> 2] = $22;
 $24 = $0 + 8 | 0;
 $25 = $1 + 12 | 0;
 $26 = HEAP32[$24 >> 2] | 0;
 HEAP32[$24 >> 2] = HEAP32[$25 >> 2];
 HEAP32[$25 >> 2] = $26;
 HEAP32[$1 >> 2] = HEAP32[$5 >> 2];
 return;
}

function __ZNK12_GLOBAL__N_116itanium_demangle15IntegerCastExpr9printLeftERNS_12OutputStreamE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $8 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $tmpcast$byval_copy = sp + 24 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2, 51968);
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$2 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast$byval_copy);
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE(HEAP32[$0 + 8 >> 2] | 0, $1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3, 51964);
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast$byval_copy);
 $8 = $0 + 12 | 0;
 $13 = HEAP32[$8 + 4 >> 2] | 0;
 $14 = $4;
 HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$14 + 4 >> 2] = $13;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1, $tmpcast$byval_copy);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 var $0 = 0, $2 = 0, $3 = 0, $agg$tmp = 0, $agg$tmp$byval_copy = 0, $agg$tmp$ensured = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $agg$tmp$byval_copy = sp + 16 | 0;
 $agg$tmp$ensured = sp + 4 | 0;
 $agg$tmp = sp;
 $0 = HEAP32[$__p >> 2] | 0;
 $2 = HEAP32[$0 >> 2] | 0;
 HEAP32[$agg$tmp >> 2] = $0;
 HEAP32[$agg$tmp$byval_copy >> 2] = HEAP32[$agg$tmp >> 2];
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_